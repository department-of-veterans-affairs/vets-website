{
  // All rules should be disabled or they should produce errors. No warnings.
  "parser": "babel-eslint",
  "parserOptions": {
    "ecmaVersion": 6,
    "sourceType": "module"
  },
  "settings": {
    "import/resolver": {
      "babel-module": {}
    }
  },
  "plugins": ["mocha", "jest", "react-hooks", "fp", "sonarjs", "va"],
  "extends": ["airbnb", "plugin:prettier/recommended"],
  "env": {
    "browser": true,
    "commonjs": true,
    "es6": true,
    "mocha": true,
    "jest": true
  },
  "globals": {
    "__BUILDTYPE__": true,
    "__API__": true,
    "__MEGAMENU_CONFIG__": true
  },
  "rules": {
    /* || Eslint main rules || */
    "camelcase": [2, { "properties": "always" }], // Override airbnb style.
    "func-names": 2,
    "no-console": 2,
    "no-unused-vars": [
      2,
      { "args": "after-used", "argsIgnorePattern": "^_", "vars": "local" }
    ],
    "no-restricted-imports": ["error", "raven"],
    "prefer-rest-params": 2,

    /* || va custom plugin || */
    "va/proptypes-camel-cased": 2,
    "va/enzyme-unmount": 2,
    "va/use-resolved-path": [
      0,
      {
        "aliases": ["applications", "platform", "site", "vet360"]
      }
    ],

    /* || fp plugin || */
    "fp/no-proxy": 2, // IE 11 has no polyfill for Proxy

    /* || mocha plugin || */
    "mocha/no-exclusive-tests": 2,

    /* || react-hooks plugin || */
    "react-hooks/rules-of-hooks": "error",
    "react-hooks/exhaustive-deps": "warn",

    /* || react plugin || */
    "react/no-multi-comp": 0, // Leave organization to code reviewer discretion.
    "react/prefer-stateless-function": 0, // Leave statelessness to code reviewer discretion.
    "react/jsx-key": 2,
    "react/jsx-pascal-case": 2,
    "react/jsx-no-duplicate-props": 2,
    "react/jsx-no-target-blank": 2,
    "react/no-danger": 2,
    "react/no-deprecated": 2,
    "react/no-direct-mutation-state": 2,

    /* || sonarJS plugin || */
    "sonarjs/no-all-duplicated-branches": 2,
    "sonarjs/no-element-overwrite": 2,
    "sonarjs/no-identical-conditions": 2,
    "sonarjs/no-one-iteration-loop": 2,
    "sonarjs/no-use-of-empty-return-value": 2,
    "sonarjs/no-collection-size-mischeck": 2,
    "sonarjs/no-redundant-jump": 2,
    "sonarjs/no-same-line-conditional": 2,
    "sonarjs/no-useless-catch": 2,
    "sonarjs/prefer-object-literal": 2,
    "sonarjs/prefer-single-boolean-return": 2,
    "sonarjs/prefer-while": 2,
    "sonarjs/no-extra-arguments": 2,
    "sonarjs/no-identical-expressions": 2,
    "sonarjs/max-switch-cases": [2, 40],
    "sonarjs/no-duplicated-branches": 2,
    "sonarjs/no-inverted-boolean-check": 2,
    "sonarjs/no-redundant-boolean": 2,
    "sonarjs/no-unused-collection": 2,
    "sonarjs/no-small-switch": 2,

    /* || airbnb plugin || */
    // this is the airbnb default, minus for..of
    "no-restricted-syntax": [
      2,
      {
        "selector": "ForInStatement",
        "message": "for..in loops iterate over the entire prototype chain, which is virtually never what you want. Use Object.{keys,values,entries}, and iterate over the resulting array."
      },
      {
        "selector": "LabeledStatement",
        "message": "Labels are a form of GOTO; using them makes code confusing and hard to maintain and understand."
      },
      {
        "selector": "WithStatement",
        "message": "`with` is disallowed in strict mode because it makes code impossible to predict and optimize."
      }
    ],

    /* ----- TODO: evaluate and potentially turn these rules back on ----- */

    /* || Eslint main rules || */
    "no-plusplus": 0,
    "no-negated-condition": 0, // Sometimes negated conditions are easier to understand.
    "no-underscore-dangle": 0, // We have build flags that use this
    "class-methods-use-this": 0,
    "global-require": 0,
    "lines-around-directive": 0,
    "no-mixed-operators": 0,
    "no-undef-init": 0,
    "padded-blocks": 0,

    /* || import plugin || */
    "import/no-extraneous-dependencies": 0,
    "import/extensions": 0,
    "import/first": 0,
    "import/no-named-as-default": 0,
    "import/prefer-default-export": 0,

    /* || jsx-a11y plugin || */
    "jsx-a11y/href-no-hash": 0,
    "jsx-a11y/no-static-element-interactions": 0,

    /* || react plugin || */
    "react/no-string-refs": 0, // TODO(awong): Enable.
    "react/prop-types": 0, // TODO(awong): Enable.
    "react/sort-prop-types": [
      0,
      { "callbacksLast": true, "requiredFirst": true }
    ], // TODO(awong): Too hard to turn on.
    "react/forbid-prop-types": 0,
    "react/jsx-filename-extension": 0,
    "react/jsx-first-prop-new-line": 0,
    "react/jsx-indent-props": 0,
    "react/jsx-max-props-per-line": 0,
    "react/jsx-no-bind": [0, { "ignoreRefs": true }], // TODO: Enable after fixing.
    "react/jsx-sort-props": [
      0,
      { "callbacksLast": true, "shorthandFirst": true }
    ], // TODO(awong): Too hard to turn on.
    "react/no-array-index-key": 0,
    "react/no-unescaped-entities": 0,
    "react/no-unused-prop-types": 0,
    "react/require-default-props": 0
  },
  "overrides": [
    {
      "files": [
        "src/platform/**/*.js",
        "src/platform/**/*.jsx",
        "src/applications/site-wide/**/*.js",
        "src/applications/site-wide/**/*.jsx",
        "src/applications/static-pages/**/*.js",
        "src/applications/static-pages/**/*.jsx"
      ],
      "rules": {
        "no-restricted-imports": ["error", "raven", "lodash/fp"]
      }
    },
    {
      "files": [
        "**/*.spec.jsx",
        "**/*.spec.js",
        "src/platform/testing/**/*.js",
        "src/platform/testing/**/*.jsx"
      ],
      "rules": {
        "no-restricted-imports": ["error", "raven"],
        "no-unused-expressions": 0,
        "react/no-find-dom-node": 0
      }
    },
    {
      "files": [
        "**/*.e2e.spec.js"
      ],
      "rules": {
        "va/axe-check-required": 1
      }
    }
  ]
}
