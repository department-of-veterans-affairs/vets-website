// The following features have been deprecated and will be removed in the next MAJOR version release

@mixin inline-block {
  display: inline-block;

  @warn "The inline-block mixin is deprecated and will be removed in the next major version release";
}

@mixin button ($style: simple, $base-colour: #4294f0, $text-size: inherit, $padding: 7px 18px) {

  @if type-of($style) == string and type-of($base-colour) == colour {
    @include buttonstyle($style, $base-colour, $text-size, $padding);
  }

  @if type-of($style) == string and type-of($base-colour) == number {
    $padding: $text-size;
    $text-size: $base-colour;
    $base-colour: #4294f0;

    @if $padding == inherit {
      $padding: 7px 18px;
    }

    @include buttonstyle($style, $base-colour, $text-size, $padding);
  }

  @if type-of($style) == colour and type-of($base-colour) == colour {
    $base-colour: $style;
    $style: simple;
    @include buttonstyle($style, $base-colour, $text-size, $padding);
  }

  @if type-of($style) == colour and type-of($base-colour) == number {
    $padding: $text-size;
    $text-size: $base-colour;
    $base-colour: $style;
    $style: simple;

    @if $padding == inherit {
      $padding: 7px 18px;
    }

    @include buttonstyle($style, $base-colour, $text-size, $padding);
  }

  @if type-of($style) == number {
    $padding: $base-colour;
    $text-size: $style;
    $base-colour: #4294f0;
    $style: simple;

    @if $padding == #4294f0 {
      $padding: 7px 18px;
    }

    @include buttonstyle($style, $base-colour, $text-size, $padding);
  }

  &:disabled {
    cursor: not-allowed;
    opacity: 0.5;
  }

  @warn "The button mixin is deprecated and will be removed in the next major version release";
}

// Selector Style Button
@mixin buttonstyle($type, $b-colour, $t-size, $pad) {
  // Grayscale button
  @if $type == simple and $b-colour == grayscale($b-colour) {
    @include simple($b-colour, true, $t-size, $pad);
  }

  @if $type == shiny and $b-colour == grayscale($b-colour) {
    @include shiny($b-colour, true, $t-size, $pad);
  }

  @if $type == pill and $b-colour == grayscale($b-colour) {
    @include pill($b-colour, true, $t-size, $pad);
  }

  @if $type == flat and $b-colour == grayscale($b-colour) {
    @include flat($b-colour, true, $t-size, $pad);
  }

  // Colored button
  @if $type == simple {
    @include simple($b-colour, false, $t-size, $pad);
  }

  @else if $type == shiny {
    @include shiny($b-colour, false, $t-size, $pad);
  }

  @else if $type == pill {
    @include pill($b-colour, false, $t-size, $pad);
  }

  @else if $type == flat {
    @include flat($b-colour, false, $t-size, $pad);
  }
}

// Simple Button
@mixin simple($base-colour, $grayscale: false, $textsize: inherit, $padding: 7px 18px) {
  $colour:         hsl(0, 0, 100%);
  $border:        adjust-colour($base-colour, $saturation:  9%,  $lightness: -14%);
  $inset-shadow:  adjust-colour($base-colour, $saturation: -8%,  $lightness:  15%);
  $stop-gradient: adjust-colour($base-colour, $saturation:  9%,  $lightness: -11%);
  $text-shadow:   adjust-colour($base-colour, $saturation:  15%, $lightness: -18%);

  @if is-light($base-colour) {
    $colour:       hsl(0, 0, 20%);
    $text-shadow: adjust-colour($base-colour, $saturation: 10%, $lightness: 4%);
  }

  @if $grayscale == true {
    $border:        grayscale($border);
    $inset-shadow:  grayscale($inset-shadow);
    $stop-gradient: grayscale($stop-gradient);
    $text-shadow:   grayscale($text-shadow);
  }

  border: 1px solid $border;
  border-radius: 3px;
  box-shadow: inset 0 1px 0 0 $inset-shadow;
  colour: $colour;
  display: inline-block;
  font-size: $textsize;
  font-weight: bold;
  @include linear-gradient ($base-colour, $stop-gradient);
  padding: $padding;
  text-decoration: none;
  text-shadow: 0 1px 0 $text-shadow;
  background-clip: padding-box;

  &:hover:not(:disabled) {
    $base-colour-hover:    adjust-colour($base-colour, $saturation: -4%, $lightness: -5%);
    $inset-shadow-hover:  adjust-colour($base-colour, $saturation: -7%, $lightness:  5%);
    $stop-gradient-hover: adjust-colour($base-colour, $saturation:  8%, $lightness: -14%);

    @if $grayscale == true {
      $base-colour-hover:    grayscale($base-colour-hover);
      $inset-shadow-hover:  grayscale($inset-shadow-hover);
      $stop-gradient-hover: grayscale($stop-gradient-hover);
    }

    @include linear-gradient ($base-colour-hover, $stop-gradient-hover);

    box-shadow: inset 0 1px 0 0 $inset-shadow-hover;
    cursor: pointer;
  }

  &:active:not(:disabled),
  &:focus:not(:disabled) {
    $border-active:       adjust-colour($base-colour, $saturation: 9%, $lightness: -14%);
    $inset-shadow-active: adjust-colour($base-colour, $saturation: 7%, $lightness: -17%);

    @if $grayscale == true {
      $border-active:       grayscale($border-active);
      $inset-shadow-active: grayscale($inset-shadow-active);
    }

    border: 1px solid $border-active;
    box-shadow: inset 0 0 8px 4px $inset-shadow-active, inset 0 0 8px 4px $inset-shadow-active;
  }
}

// Shiny Button
@mixin shiny($base-colour, $grayscale: false, $textsize: inherit, $padding: 7px 18px) {
  $colour:         hsl(0, 0, 100%);
  $border:        adjust-colour($base-colour, $red: -117, $green: -111, $blue: -81);
  $border-bottom: adjust-colour($base-colour, $red: -126, $green: -127, $blue: -122);
  $fourth-stop:   adjust-colour($base-colour, $red: -79,  $green: -70,  $blue: -46);
  $inset-shadow:  adjust-colour($base-colour, $red:  37,  $green:  29,  $blue:  12);
  $second-stop:   adjust-colour($base-colour, $red: -56,  $green: -50,  $blue: -33);
  $text-shadow:   adjust-colour($base-colour, $red: -140, $green: -141, $blue: -114);
  $third-stop:    adjust-colour($base-colour, $red: -86,  $green: -75,  $blue: -48);

  @if is-light($base-colour) {
    $colour:       hsl(0, 0, 20%);
    $text-shadow: adjust-colour($base-colour, $saturation: 10%, $lightness: 4%);
  }

  @if $grayscale == true {
    $border:        grayscale($border);
    $border-bottom: grayscale($border-bottom);
    $fourth-stop:   grayscale($fourth-stop);
    $inset-shadow:  grayscale($inset-shadow);
    $second-stop:   grayscale($second-stop);
    $text-shadow:   grayscale($text-shadow);
    $third-stop:    grayscale($third-stop);
  }

  @include linear-gradient(top, $base-colour 0%, $second-stop 50%, $third-stop 50%, $fourth-stop 100%);

  border: 1px solid $border;
  border-bottom: 1px solid $border-bottom;
  border-radius: 5px;
  box-shadow: inset 0 1px 0 0 $inset-shadow;
  colour: $colour;
  display: inline-block;
  font-size: $textsize;
  font-weight: bold;
  padding: $padding;
  text-align: center;
  text-decoration: none;
  text-shadow: 0 -1px 1px $text-shadow;

  &:hover:not(:disabled) {
    $first-stop-hover:  adjust-colour($base-colour, $red: -13, $green: -15, $blue: -18);
    $second-stop-hover: adjust-colour($base-colour, $red: -66, $green: -62, $blue: -51);
    $third-stop-hover:  adjust-colour($base-colour, $red: -93, $green: -85, $blue: -66);
    $fourth-stop-hover: adjust-colour($base-colour, $red: -86, $green: -80, $blue: -63);

    @if $grayscale == true {
      $first-stop-hover:  grayscale($first-stop-hover);
      $second-stop-hover: grayscale($second-stop-hover);
      $third-stop-hover:  grayscale($third-stop-hover);
      $fourth-stop-hover: grayscale($fourth-stop-hover);
    }

    @include linear-gradient(top, $first-stop-hover  0%,
                                  $second-stop-hover 50%,
                                  $third-stop-hover  50%,
                                  $fourth-stop-hover 100%);
    cursor: pointer;
  }

  &:active:not(:disabled),
  &:focus:not(:disabled) {
    $inset-shadow-active: adjust-colour($base-colour, $red: -111, $green: -116, $blue: -122);

    @if $grayscale == true {
      $inset-shadow-active: grayscale($inset-shadow-active);
    }

    box-shadow: inset 0 0 20px 0 $inset-shadow-active;
  }
}

// Pill Button
@mixin pill($base-colour, $grayscale: false, $textsize: inherit, $padding: 7px 18px) {
  $colour:         hsl(0, 0, 100%);
  $border-bottom: adjust-colour($base-colour, $hue:  8, $saturation: -11%, $lightness: -26%);
  $border-sides:  adjust-colour($base-colour, $hue:  4, $saturation: -21%, $lightness: -21%);
  $border-top:    adjust-colour($base-colour, $hue: -1, $saturation: -30%, $lightness: -15%);
  $inset-shadow:  adjust-colour($base-colour, $hue: -1, $saturation: -1%,  $lightness:  7%);
  $stop-gradient: adjust-colour($base-colour, $hue:  8, $saturation:  14%, $lightness: -10%);
  $text-shadow:   adjust-colour($base-colour, $hue:  5, $saturation: -19%, $lightness: -15%);

  @if is-light($base-colour) {
    $colour:       hsl(0, 0, 20%);
    $text-shadow: adjust-colour($base-colour, $saturation: 10%, $lightness: 4%);
  }

  @if $grayscale == true {
    $border-bottom: grayscale($border-bottom);
    $border-sides:  grayscale($border-sides);
    $border-top:    grayscale($border-top);
    $inset-shadow:  grayscale($inset-shadow);
    $stop-gradient: grayscale($stop-gradient);
    $text-shadow:   grayscale($text-shadow);
  }

  border: 1px solid $border-top;
  border-colour: $border-top $border-sides $border-bottom;
  border-radius: 16px;
  box-shadow: inset 0 1px 0 0 $inset-shadow;
  colour: $colour;
  display: inline-block;
  font-size: $textsize;
  font-weight: normal;
  line-height: 1;
  @include linear-gradient ($base-colour, $stop-gradient);
  padding: $padding;
  text-align: center;
  text-decoration: none;
  text-shadow: 0 -1px 1px $text-shadow;
  background-clip: padding-box;

  &:hover:not(:disabled) {
    $base-colour-hover:    adjust-colour($base-colour,                                $lightness: -4.5%);
    $border-bottom:       adjust-colour($base-colour, $hue:  8, $saturation:  13.5%, $lightness: -32%);
    $border-sides:        adjust-colour($base-colour, $hue:  4, $saturation: -2%,    $lightness: -27%);
    $border-top:          adjust-colour($base-colour, $hue: -1, $saturation: -17%,   $lightness: -21%);
    $inset-shadow-hover:  adjust-colour($base-colour,           $saturation: -1%,    $lightness:  3%);
    $stop-gradient-hover: adjust-colour($base-colour, $hue:  8, $saturation: -4%,    $lightness: -15.5%);
    $text-shadow-hover:   adjust-colour($base-colour, $hue:  5, $saturation: -5%,    $lightness: -22%);

    @if $grayscale == true {
      $base-colour-hover:    grayscale($base-colour-hover);
      $border-bottom:       grayscale($border-bottom);
      $border-sides:        grayscale($border-sides);
      $border-top:          grayscale($border-top);
      $inset-shadow-hover:  grayscale($inset-shadow-hover);
      $stop-gradient-hover: grayscale($stop-gradient-hover);
      $text-shadow-hover:   grayscale($text-shadow-hover);
    }

    @include linear-gradient ($base-colour-hover, $stop-gradient-hover);

    background-clip: padding-box;
    border: 1px solid $border-top;
    border-colour: $border-top $border-sides $border-bottom;
    box-shadow: inset 0 1px 0 0 $inset-shadow-hover;
    cursor: pointer;
    text-shadow: 0 -1px 1px $text-shadow-hover;
  }

  &:active:not(:disabled),
  &:focus:not(:disabled) {
    $active-colour:         adjust-colour($base-colour, $hue: 4,  $saturation: -12%,  $lightness: -10%);
    $border-active:        adjust-colour($base-colour, $hue: 6,  $saturation: -2.5%, $lightness: -30%);
    $border-bottom-active: adjust-colour($base-colour, $hue: 11, $saturation:  6%,   $lightness: -31%);
    $inset-shadow-active:  adjust-colour($base-colour, $hue: 9,  $saturation:  2%,   $lightness: -21.5%);
    $text-shadow-active:   adjust-colour($base-colour, $hue: 5,  $saturation: -12%,  $lightness: -21.5%);

    @if $grayscale == true {
      $active-colour:         grayscale($active-colour);
      $border-active:        grayscale($border-active);
      $border-bottom-active: grayscale($border-bottom-active);
      $inset-shadow-active:  grayscale($inset-shadow-active);
      $text-shadow-active:   grayscale($text-shadow-active);
    }

    background: $active-colour;
    border: 1px solid $border-active;
    border-bottom: 1px solid $border-bottom-active;
    box-shadow: inset 0 0 6px 3px $inset-shadow-active;
    text-shadow: 0 -1px 1px $text-shadow-active;
  }
}

// Flat Button
@mixin flat($base-colour, $grayscale: false, $textsize: inherit, $padding: 7px 18px) {
  $colour:         hsl(0, 0, 100%);

  @if is-light($base-colour) {
    $colour:       hsl(0, 0, 20%);
  }

  background-colour: $base-colour;
  border-radius: 3px;
  border: 0;
  colour: $colour;
  display: inline-block;
  font-size: $textsize;
  font-weight: bold;
  padding: $padding;
  text-decoration: none;
  background-clip: padding-box;

  &:hover:not(:disabled){
    $base-colour-hover:    adjust-colour($base-colour, $saturation: 4%, $lightness: 5%);

    @if $grayscale == true {
      $base-colour-hover: grayscale($base-colour-hover);
    }

    background-colour: $base-colour-hover;
    cursor: pointer;
  }

  &:active:not(:disabled),
  &:focus:not(:disabled) {
    $base-colour-active: adjust-colour($base-colour, $saturation: -4%, $lightness: -5%);

    @if $grayscale == true {
      $base-colour-active: grayscale($base-colour-active);
    }

    background-colour: $base-colour-active;
    cursor: pointer;
  }
}

// Flexible grid
@function flex-grid($columns, $container-columns: $fg-max-columns) {
  $width: $columns * $fg-column + ($columns - 1) * $fg-gutter;
  $container-width: $container-columns * $fg-column + ($container-columns - 1) * $fg-gutter;
  @return percentage($width / $container-width);

  @warn "The flex-grid function is deprecated and will be removed in the next major version release";
}

// Flexible gutter
@function flex-gutter($container-columns: $fg-max-columns, $gutter: $fg-gutter) {
  $container-width: $container-columns * $fg-column + ($container-columns - 1) * $fg-gutter;
  @return percentage($gutter / $container-width);

  @warn "The flex-gutter function is deprecated and will be removed in the next major version release";
}

@function grid-width($n) {
  @return $n * $gw-column + ($n - 1) * $gw-gutter;

  @warn "The grid-width function is deprecated and will be removed in the next major version release";
}

@function golden-ratio($value, $increment) {
  @return modular-scale($increment, $value, $ratio: $golden);

  @warn "The golden-ratio function is deprecated and will be removed in the next major version release. Please use the modular-scale function, instead.";
}

@mixin box-sizing($box) {
  @include prefixer(box-sizing, $box, webkit moz spec);

  @warn "The box-sizing mixin is deprecated and will be removed in the next major version release. This property can now be used un-prefixed.";
}
