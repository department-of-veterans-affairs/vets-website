{
  "stats": {
    "suites": 149,
    "tests": 198,
    "passes": 194,
    "pending": 0,
    "failures": 4,
    "start": "2024-01-03T15:24:50.399Z",
    "end": "2024-01-03T15:24:53.362Z",
    "duration": 2963,
    "testsRegistered": 198,
    "passPercent": 97.97979797979798,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "bd5f46af-78ac-4db6-82fd-935cafede450",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [
        {
          "title": "\"before each\" hook: beforeEach in \"{root}\"",
          "fullTitle": "\"before each\" hook: beforeEach in \"{root}\"",
          "timedOut": false,
          "duration": 2,
          "state": null,
          "speed": null,
          "pass": false,
          "fail": false,
          "pending": false,
          "context": null,
          "code": "setupJSDom();\nresetFetch();\ncleanupStorage();\nif (!isStressTest) {\n  checkAllowList(this);\n}",
          "err": {},
          "uuid": "b242dc81-1159-47e6-9921-c7fb633d57b1",
          "parentUUID": "bd5f46af-78ac-4db6-82fd-935cafede450",
          "isHook": true,
          "skipped": false
        }
      ],
      "afterHooks": [
        {
          "title": "\"after each\" hook: afterEach in \"{root}\"",
          "fullTitle": "\"after each\" hook: afterEach in \"{root}\"",
          "timedOut": false,
          "duration": 0,
          "state": null,
          "speed": null,
          "pass": false,
          "fail": false,
          "pending": false,
          "context": null,
          "code": "cleanupStorage();",
          "err": {},
          "uuid": "14e8ea99-fd77-4896-a140-4d8d4c99f44f",
          "parentUUID": "bd5f46af-78ac-4db6-82fd-935cafede450",
          "isHook": true,
          "skipped": false
        },
        {
          "title": "\"after each\" hook in \"{root}\"",
          "fullTitle": "\"after each\" hook in \"{root}\"",
          "timedOut": false,
          "duration": 0,
          "state": null,
          "speed": null,
          "pass": false,
          "fail": false,
          "pending": false,
          "context": null,
          "code": "(0, _pure.cleanup)();",
          "err": {},
          "uuid": "e8498b2e-6fd1-438c-a5fa-b29852c67de9",
          "parentUUID": "bd5f46af-78ac-4db6-82fd-935cafede450",
          "isHook": true,
          "skipped": false
        }
      ],
      "tests": [],
      "suites": [
        {
          "uuid": "0450be96-f37d-4ff5-839c-b1abbc5b5838",
          "title": "current spouse full name page",
          "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/chapters/04-household-information/currentSpouse.unit.spec.jsx",
          "file": "/src/applications/pensions/tests/chapters/04-household-information/currentSpouse.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should render web components in form correctly",
              "fullTitle": "current spouse full name page should render web components in form correctly",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var pageTitle = 'current spouse full name';\nvar expectedNumberOfFields = 4;\n(0, _pageTests.testNumberOfWebComponentFields)(_form.default, _currentSpouse.default.schema, _currentSpouse.default.uiSchema, expectedNumberOfFields, pageTitle);\nvar expectedNumberOfErrors = 2;\n(0, _pageTests.testNumberOfErrorsOnSubmitForWebComponents)(_form.default, _currentSpouse.default.schema, _currentSpouse.default.uiSchema, expectedNumberOfErrors, pageTitle);",
              "err": {},
              "uuid": "d8ac44f0-6e18-4327-b511-947ea6da9d39",
              "parentUUID": "0450be96-f37d-4ff5-839c-b1abbc5b5838",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "d8ac44f0-6e18-4327-b511-947ea6da9d39"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "10bf41c5-23e8-40a2-8d19-735ac2de2e2a",
          "title": "Child address page",
          "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/config/dependentChildAddress.unit.spec.jsx",
          "file": "/src/applications/pensions/tests/config/dependentChildAddress.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should render",
              "fullTitle": "Child address page should render",
              "timedOut": false,
              "duration": 29,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var form = _testUtils.default.renderIntoDocument( /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  arrayPath: arrayPath,\n  pagePerItemIndex: 0,\n  definitions: _form.default.defaultDefinitions,\n  schema: schema,\n  data: nameData,\n  uiSchema: uiSchema\n}));\nvar formDOM = (0, _schemaformUtils.getFormDOM)(form);\n(0, _chai.expect)(formDOM.querySelectorAll('input, select, textarea').length).to.equal(2);",
              "err": {},
              "uuid": "88797a3b-4fb3-4131-bb81-dca4e582a1c7",
              "parentUUID": "10bf41c5-23e8-40a2-8d19-735ac2de2e2a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should render address fields",
              "fullTitle": "Child address page should render address fields",
              "timedOut": false,
              "duration": 59,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var form = _testUtils.default.renderIntoDocument( /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  arrayPath: arrayPath,\n  pagePerItemIndex: 0,\n  definitions: _form.default.defaultDefinitions,\n  schema: schema,\n  data: nameData,\n  uiSchema: uiSchema\n}));\nvar formDOM = (0, _schemaformUtils.getFormDOM)(form);\nformDOM.setYesNo('input#root_childInHouseholdNo', 'N');\n(0, _chai.expect)(formDOM.querySelectorAll('va-select').length).to.equal(1);\n(0, _chai.expect)(formDOM.querySelectorAll('va-text-input').length).to.equal(5);",
              "err": {},
              "uuid": "1861ddd1-5c23-438a-b4b4-1a2a6c102238",
              "parentUUID": "10bf41c5-23e8-40a2-8d19-735ac2de2e2a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should show errors when required fields are empty",
              "fullTitle": "Child address page should show errors when required fields are empty",
              "timedOut": false,
              "duration": 15,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var onSubmit = _sinon.default.spy();\nvar form = _testUtils.default.renderIntoDocument( /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  definitions: _form.default.defaultDefinitions,\n  arrayPath: arrayPath,\n  pagePerItemIndex: 0,\n  schema: schema,\n  onSubmit: onSubmit,\n  data: nameData,\n  uiSchema: uiSchema\n}));\nvar formDOM = (0, _schemaformUtils.getFormDOM)(form);\nformDOM.submitForm(form);\n(0, _chai.expect)(formDOM.querySelectorAll('.usa-input-error').length).to.equal(1);\n(0, _chai.expect)(onSubmit.called).not.to.be.true;",
              "err": {},
              "uuid": "4c84031e-49ba-451d-b18e-ff975ca6af49",
              "parentUUID": "10bf41c5-23e8-40a2-8d19-735ac2de2e2a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should set the title to the dependents name if available",
              "fullTitle": "Child address page should set the title to the dependents name if available",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var pageTitle = title;\n(0, _chai.expect)(pageTitle({\n  fullName: {\n    first: 'Jane',\n    last: 'Doe'\n  }\n})).to.eql('Jane Doe address');\n(0, _chai.expect)(pageTitle({\n  fullName: {}\n})).to.eql('  address');",
              "err": {},
              "uuid": "32a1cba2-89be-4c3e-b403-34600d43d30d",
              "parentUUID": "10bf41c5-23e8-40a2-8d19-735ac2de2e2a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should submit with valid data",
              "fullTitle": "Child address page should submit with valid data",
              "timedOut": false,
              "duration": 15,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var onSubmit = _sinon.default.spy();\nvar form = _testUtils.default.renderIntoDocument( /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  arrayPath: arrayPath,\n  pagePerItemIndex: 0,\n  definitions: _form.default.defaultDefinitions,\n  schema: schema,\n  data: nameData,\n  onSubmit: onSubmit,\n  uiSchema: uiSchema\n}));\nvar formDOM = (0, _schemaformUtils.getFormDOM)(form);\nformDOM.fillData('#root_childInHouseholdYes', 'Y');\nformDOM.submitForm(form);\n(0, _chai.expect)(onSubmit.called).to.be.true;",
              "err": {},
              "uuid": "5570c58d-1ef6-4ba3-87fb-1fd9a7ce1188",
              "parentUUID": "10bf41c5-23e8-40a2-8d19-735ac2de2e2a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "88797a3b-4fb3-4131-bb81-dca4e582a1c7",
            "1861ddd1-5c23-438a-b4b4-1a2a6c102238",
            "4c84031e-49ba-451d-b18e-ff975ca6af49",
            "32a1cba2-89be-4c3e-b403-34600d43d30d",
            "5570c58d-1ef6-4ba3-87fb-1fd9a7ce1188"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 118,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "7af7ab08-af59-442e-bb04-d7dc5ec247c8",
          "title": "Pensions DependentField",
          "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/components/DependentField.unit.spec.jsx",
          "file": "/src/applications/pensions/tests/components/DependentField.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should render",
              "fullTitle": "Pensions DependentField should render",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var tree = _skinDeep.default.shallowRender( /*#__PURE__*/_react.default.createElement(_DependentField.default, {\n  id: \"id\",\n  formData: {\n    fullName: {\n      first: 'Jane',\n      last: 'Doe'\n    },\n    relationship: 'child'\n  }\n}));\n(0, _chai.expect)(tree.text()).to.contain('Jane Doe');\n(0, _chai.expect)(tree.text()).to.contain('Child');",
              "err": {},
              "uuid": "a8c80bb1-ab42-41f6-b4ea-b5c09856fc8e",
              "parentUUID": "7af7ab08-af59-442e-bb04-d7dc5ec247c8",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a8c80bb1-ab42-41f6-b4ea-b5c09856fc8e"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "f5316a8e-f222-454a-a9a4-bc8dfdf635d0",
          "title": "Unreimbursed care expenses pension page",
          "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/chapters/05-financial-information/careExpenses.unit.spec.jsx",
          "file": "/src/applications/pensions/tests/chapters/05-financial-information/careExpenses.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "0e61a710-00fd-4d77-b9bd-a3d6b1300a07",
              "title": "Care expenses page",
              "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/chapters/05-financial-information/careExpenses.unit.spec.jsx",
              "file": "/src/applications/pensions/tests/chapters/05-financial-information/careExpenses.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should have appropriate number of web components",
                  "fullTitle": "Unreimbursed care expenses pension page Care expenses page should have appropriate number of web components",
                  "timedOut": false,
                  "duration": 38,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var _render3 = (0, _react2.render)( /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  definitions: formConfig.defaultDefinitions,\n  schema: schema,\n  uiSchema: uiSchema,\n  data: data,\n  formData: {}\n})),\n    container = _render3.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypesWebComponents)).to.have.lengthOf(expectedNumberOfFields);",
                  "err": {},
                  "uuid": "d9300562-5519-4e0f-966f-4e0b64e345a3",
                  "parentUUID": "0e61a710-00fd-4d77-b9bd-a3d6b1300a07",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "d9300562-5519-4e0f-966f-4e0b64e345a3"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 38,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "7702e06f-fdb4-4b37-93a1-f50e7c0d3ecb",
              "title": "Care expenses page",
              "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/chapters/05-financial-information/careExpenses.unit.spec.jsx",
              "file": "/src/applications/pensions/tests/chapters/05-financial-information/careExpenses.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should have appropriate number of fields",
                  "fullTitle": "Unreimbursed care expenses pension page Care expenses page should have appropriate number of fields",
                  "timedOut": false,
                  "duration": 26,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var _render = (0, _react2.render)( /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  definitions: formConfig.defaultDefinitions,\n  schema: schema,\n  uiSchema: uiSchema,\n  data: data,\n  formData: {}\n})),\n    container = _render.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypes)).to.have.lengthOf(expectedNumberOfFields);",
                  "err": {},
                  "uuid": "e849d266-e46d-4726-842a-c0b8cad67853",
                  "parentUUID": "7702e06f-fdb4-4b37-93a1-f50e7c0d3ecb",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "e849d266-e46d-4726-842a-c0b8cad67853"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 26,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "a5eba4bf-5ce0-41d7-ac96-c87b386f28f7",
              "title": "Care expenses page",
              "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/chapters/05-financial-information/careExpenses.unit.spec.jsx",
              "file": "/src/applications/pensions/tests/chapters/05-financial-information/careExpenses.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should show the correct number of errors on submit for web components",
                  "fullTitle": "Unreimbursed care expenses pension page Care expenses page should show the correct number of errors on submit for web components",
                  "timedOut": false,
                  "duration": 130,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var _render4 = (0, _react2.render)( /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  definitions: formConfig.defaultDefinitions,\n  schema: schema,\n  uiSchema: uiSchema,\n  data: data,\n  formData: {}\n})),\n    container = _render4.container,\n    getByRole = _render4.getByRole;\ngetByRole('button', {\n  name: /submit/i\n}).click();\nvar nodes = Array.from(container.querySelectorAll(\"\".concat(expectedFieldTypesWebComponents, \", \").concat(wrapperWebComponents)));\nvar errors = nodes.filter(function (node) {\n  return node.error;\n});\n(0, _chai.expect)(errors).to.have.lengthOf(expectedNumberOfErrors);",
                  "err": {},
                  "uuid": "9d9523d1-675e-4f26-93cd-73bb3d1678de",
                  "parentUUID": "a5eba4bf-5ce0-41d7-ac96-c87b386f28f7",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "9d9523d1-675e-4f26-93cd-73bb3d1678de"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 130,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "aa0eacb3-d777-4e10-99a0-9528afb4f7fb",
              "title": "Care expenses page",
              "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/chapters/05-financial-information/careExpenses.unit.spec.jsx",
              "file": "/src/applications/pensions/tests/chapters/05-financial-information/careExpenses.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should show the correct number of errors on submit",
                  "fullTitle": "Unreimbursed care expenses pension page Care expenses page should show the correct number of errors on submit",
                  "timedOut": false,
                  "duration": 92,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var _render2 = (0, _react2.render)( /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  definitions: formConfig.defaultDefinitions,\n  schema: schema,\n  uiSchema: uiSchema,\n  data: data,\n  formData: {}\n})),\n    getByRole = _render2.getByRole,\n    queryAllByRole = _render2.queryAllByRole;\ngetByRole('button', {\n  name: /submit/i\n}).click();\nvar errors = queryAllByRole('alert');\n(0, _chai.expect)(errors).to.have.lengthOf(expectedNumberOfErrors);",
                  "err": {},
                  "uuid": "adbc6efa-6547-4015-b905-c575f3419c22",
                  "parentUUID": "aa0eacb3-d777-4e10-99a0-9528afb4f7fb",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "adbc6efa-6547-4015-b905-c575f3419c22"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 92,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "1b604191-61b9-4794-a659-55ca994fddc0",
          "title": "pension contact information page",
          "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/chapters/01-applicant-information/contactInformation.unit.spec.jsx",
          "file": "/src/applications/pensions/tests/chapters/01-applicant-information/contactInformation.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "a7e68d10-93b9-47ce-8266-ec5d336c8a84",
              "title": "Email address and phone number page",
              "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/chapters/01-applicant-information/contactInformation.unit.spec.jsx",
              "file": "/src/applications/pensions/tests/chapters/01-applicant-information/contactInformation.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should have appropriate number of web components",
                  "fullTitle": "pension contact information page Email address and phone number page should have appropriate number of web components",
                  "timedOut": false,
                  "duration": 10,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var _render3 = (0, _react2.render)( /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  definitions: formConfig.defaultDefinitions,\n  schema: schema,\n  uiSchema: uiSchema,\n  data: data,\n  formData: {}\n})),\n    container = _render3.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypesWebComponents)).to.have.lengthOf(expectedNumberOfFields);",
                  "err": {},
                  "uuid": "ecca6bf4-fc65-4149-9b4f-ac2b77c18216",
                  "parentUUID": "a7e68d10-93b9-47ce-8266-ec5d336c8a84",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "ecca6bf4-fc65-4149-9b4f-ac2b77c18216"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 10,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "d10e1a61-0fbc-4aaa-bb2c-d96906d2d09d",
              "title": "Email address and phone number page",
              "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/chapters/01-applicant-information/contactInformation.unit.spec.jsx",
              "file": "/src/applications/pensions/tests/chapters/01-applicant-information/contactInformation.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should show the correct number of errors on submit for web components",
                  "fullTitle": "pension contact information page Email address and phone number page should show the correct number of errors on submit for web components",
                  "timedOut": false,
                  "duration": 23,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var _render4 = (0, _react2.render)( /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  definitions: formConfig.defaultDefinitions,\n  schema: schema,\n  uiSchema: uiSchema,\n  data: data,\n  formData: {}\n})),\n    container = _render4.container,\n    getByRole = _render4.getByRole;\ngetByRole('button', {\n  name: /submit/i\n}).click();\nvar nodes = Array.from(container.querySelectorAll(\"\".concat(expectedFieldTypesWebComponents, \", \").concat(wrapperWebComponents)));\nvar errors = nodes.filter(function (node) {\n  return node.error;\n});\n(0, _chai.expect)(errors).to.have.lengthOf(expectedNumberOfErrors);",
                  "err": {},
                  "uuid": "710511a3-ad07-4986-8ac1-bf3bfb6024a9",
                  "parentUUID": "d10e1a61-0fbc-4aaa-bb2c-d96906d2d09d",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "710511a3-ad07-4986-8ac1-bf3bfb6024a9"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 23,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "c2dbf4d3-dc2e-4ae3-a8ef-0e75ecc3b26a",
          "title": "pension service periods page",
          "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/chapters/02-military-history/servicePeriod.unit.spec.jsx",
          "file": "/src/applications/pensions/tests/chapters/02-military-history/servicePeriod.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should render with all fields and buttons",
              "fullTitle": "pension service periods page should render with all fields and buttons",
              "timedOut": false,
              "duration": 20,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); });",
              "err": {},
              "uuid": "0ec51405-8fa8-4e71-8625-7b4856c91c38",
              "parentUUID": "c2dbf4d3-dc2e-4ae3-a8ef-0e75ecc3b26a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should not allow submit with errors",
              "fullTitle": "pension service periods page should not allow submit with errors",
              "timedOut": false,
              "duration": 17,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); });",
              "err": {},
              "uuid": "a82ae192-93d2-41e6-88f7-d1e8e0b9cdf3",
              "parentUUID": "c2dbf4d3-dc2e-4ae3-a8ef-0e75ecc3b26a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should submit with no errors with all required fields filled in",
              "fullTitle": "pension service periods page should submit with no errors with all required fields filled in",
              "timedOut": false,
              "duration": 85,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); });",
              "err": {},
              "uuid": "81180f14-72b0-4b4d-8083-48522e1b494e",
              "parentUUID": "c2dbf4d3-dc2e-4ae3-a8ef-0e75ecc3b26a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should display warning if the veteran did not serve during a wartime period",
              "fullTitle": "pension service periods page should display warning if the veteran did not serve during a wartime period",
              "timedOut": false,
              "duration": 108,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); });",
              "err": {},
              "uuid": "4e8fbbd6-d103-4e7e-a8ab-ba6e598de485",
              "parentUUID": "c2dbf4d3-dc2e-4ae3-a8ef-0e75ecc3b26a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "0ec51405-8fa8-4e71-8625-7b4856c91c38",
            "a82ae192-93d2-41e6-88f7-d1e8e0b9cdf3",
            "81180f14-72b0-4b4d-8083-48522e1b494e",
            "4e8fbbd6-d103-4e7e-a8ab-ba6e598de485"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 230,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "525da8bb-f19b-4fe7-9586-7a923a0a13a1",
          "title": "Faster claim processing pension page",
          "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/chapters/06-additional-information/fasterClaimProcessing.unit.spec.jsx",
          "file": "/src/applications/pensions/tests/chapters/06-additional-information/fasterClaimProcessing.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "ee3ff52f-4632-42f9-8be3-f5bbb5f71361",
              "title": "Faster claim processing (optional) page",
              "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/chapters/06-additional-information/fasterClaimProcessing.unit.spec.jsx",
              "file": "/src/applications/pensions/tests/chapters/06-additional-information/fasterClaimProcessing.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should have appropriate number of fields",
                  "fullTitle": "Faster claim processing pension page Faster claim processing (optional) page should have appropriate number of fields",
                  "timedOut": false,
                  "duration": 5,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var _render = (0, _react2.render)( /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  definitions: formConfig.defaultDefinitions,\n  schema: schema,\n  uiSchema: uiSchema,\n  data: data,\n  formData: {}\n})),\n    container = _render.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypes)).to.have.lengthOf(expectedNumberOfFields);",
                  "err": {},
                  "uuid": "5e44b897-d944-4cde-861d-1032b1fd06d2",
                  "parentUUID": "ee3ff52f-4632-42f9-8be3-f5bbb5f71361",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "5e44b897-d944-4cde-861d-1032b1fd06d2"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 5,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "17bf0dd4-6acc-48bd-9c70-1d70c24fa414",
          "title": "pension mailing address page",
          "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/chapters/01-applicant-information/mailingAddress.unit.spec.jsx",
          "file": "/src/applications/pensions/tests/chapters/01-applicant-information/mailingAddress.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "5ba80e61-5f1b-43a5-bafd-5d4c9262f3ce",
              "title": "mailing address page",
              "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/chapters/01-applicant-information/mailingAddress.unit.spec.jsx",
              "file": "/src/applications/pensions/tests/chapters/01-applicant-information/mailingAddress.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should have appropriate number of web components",
                  "fullTitle": "pension mailing address page mailing address page should have appropriate number of web components",
                  "timedOut": false,
                  "duration": 32,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var _render3 = (0, _react2.render)( /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  definitions: formConfig.defaultDefinitions,\n  schema: schema,\n  uiSchema: uiSchema,\n  data: data,\n  formData: {}\n})),\n    container = _render3.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypesWebComponents)).to.have.lengthOf(expectedNumberOfFields);",
                  "err": {},
                  "uuid": "74a2c482-ac2b-463d-911b-d8b55a17fa7c",
                  "parentUUID": "5ba80e61-5f1b-43a5-bafd-5d4c9262f3ce",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "74a2c482-ac2b-463d-911b-d8b55a17fa7c"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 32,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "f169288a-6e85-445c-8dc0-e96e3ef50416",
              "title": "mailing address page",
              "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/chapters/01-applicant-information/mailingAddress.unit.spec.jsx",
              "file": "/src/applications/pensions/tests/chapters/01-applicant-information/mailingAddress.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should show the correct number of errors on submit for web components",
                  "fullTitle": "pension mailing address page mailing address page should show the correct number of errors on submit for web components",
                  "timedOut": false,
                  "duration": 80,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var _render4 = (0, _react2.render)( /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  definitions: formConfig.defaultDefinitions,\n  schema: schema,\n  uiSchema: uiSchema,\n  data: data,\n  formData: {}\n})),\n    container = _render4.container,\n    getByRole = _render4.getByRole;\ngetByRole('button', {\n  name: /submit/i\n}).click();\nvar nodes = Array.from(container.querySelectorAll(\"\".concat(expectedFieldTypesWebComponents, \", \").concat(wrapperWebComponents)));\nvar errors = nodes.filter(function (node) {\n  return node.error;\n});\n(0, _chai.expect)(errors).to.have.lengthOf(expectedNumberOfErrors);",
                  "err": {},
                  "uuid": "460f84e4-fcfa-4dcb-8deb-82a45563a5f0",
                  "parentUUID": "f169288a-6e85-445c-8dc0-e96e3ef50416",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "460f84e4-fcfa-4dcb-8deb-82a45563a5f0"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 80,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "c697d26f-00b9-478d-96dd-69d77a25d4bf",
          "title": "pension applicant information page",
          "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/chapters/01-applicant-information/applicantInformation.unit.spec.jsx",
          "file": "/src/applications/pensions/tests/chapters/01-applicant-information/applicantInformation.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should submit with no errors with all required fields filled in",
              "fullTitle": "pension applicant information page should submit with no errors with all required fields filled in",
              "timedOut": false,
              "duration": 38,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); });",
              "err": {},
              "uuid": "704fd77f-e5cc-469c-8302-05130c63d0ea",
              "parentUUID": "c697d26f-00b9-478d-96dd-69d77a25d4bf",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should not allow submit with errors",
              "fullTitle": "pension applicant information page should not allow submit with errors",
              "timedOut": false,
              "duration": 17,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); });",
              "err": {},
              "uuid": "18cf0e1e-e3d8-4b1f-8d4a-b21f4623b336",
              "parentUUID": "c697d26f-00b9-478d-96dd-69d77a25d4bf",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should render with all alerts, fields and buttons",
              "fullTitle": "pension applicant information page should render with all alerts, fields and buttons",
              "timedOut": false,
              "duration": 7,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); });",
              "err": {},
              "uuid": "f2383537-f0bb-41ce-8412-d91ef3390051",
              "parentUUID": "c697d26f-00b9-478d-96dd-69d77a25d4bf",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [
            {
              "uuid": "0d5dbc69-b714-4a45-8b78-e33e24a6526a",
              "title": "setDefaultIsOver65",
              "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/chapters/01-applicant-information/applicantInformation.unit.spec.jsx",
              "file": "/src/applications/pensions/tests/chapters/01-applicant-information/applicantInformation.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should update isOver65 if veteranDateOfBirth changes",
                  "fullTitle": "pension applicant information page setDefaultIsOver65 should update isOver65 if veteranDateOfBirth changes",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var formData = (0, _applicantInformation.setDefaultIsOver65)({\n  veteranDateOfBirth: '2000-01-01',\n  isOver65: false\n}, {\n  veteranDateOfBirth: '1950-01-01',\n  isOver65: false\n}, (0, _moment.default)('2020-01-01'));\n(0, _chai.expect)(formData.isOver65).to.be.true;",
                  "err": {},
                  "uuid": "15663074-4d2a-415f-ac06-cde8cc67f526",
                  "parentUUID": "0d5dbc69-b714-4a45-8b78-e33e24a6526a",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should change nothing if veteranDateOfBirth is unchanged",
                  "fullTitle": "pension applicant information page setDefaultIsOver65 should change nothing if veteranDateOfBirth is unchanged",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var formData = (0, _applicantInformation.setDefaultIsOver65)({\n  veteranDateOfBirth: '1950-01-01',\n  isOver65: false\n}, {\n  veteranDateOfBirth: '1950-01-01',\n  isOver65: false\n}, (0, _moment.default)('2020-01-01'));\n(0, _chai.expect)(formData.isOver65).to.be.false;",
                  "err": {},
                  "uuid": "10ef1b72-621d-4562-bf91-dcc4ea18ad26",
                  "parentUUID": "0d5dbc69-b714-4a45-8b78-e33e24a6526a",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "15663074-4d2a-415f-ac06-cde8cc67f526",
                "10ef1b72-621d-4562-bf91-dcc4ea18ad26"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "b2c63270-c533-4695-8b9b-5bcafb2fb9e5",
              "title": "isOver65",
              "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/chapters/01-applicant-information/applicantInformation.unit.spec.jsx",
              "file": "/src/applications/pensions/tests/chapters/01-applicant-information/applicantInformation.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return true if veteranDateOfBirth is over 65 years ago",
                  "fullTitle": "pension applicant information page isOver65 should return true if veteranDateOfBirth is over 65 years ago",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var over65 = (0, _applicantInformation.isOver65)({\n  veteranDateOfBirth: '1950-01-01'\n}, (0, _moment.default)('2020-01-01'));\n(0, _chai.expect)(over65).to.be.true;",
                  "err": {},
                  "uuid": "cb9415f0-65ad-4fad-99c8-a51c69c21a0a",
                  "parentUUID": "b2c63270-c533-4695-8b9b-5bcafb2fb9e5",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return false if veteranDateOfBirth is under 65 years ago",
                  "fullTitle": "pension applicant information page isOver65 should return false if veteranDateOfBirth is under 65 years ago",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var over65 = (0, _applicantInformation.isOver65)({\n  veteranDateOfBirth: '2000-01-01'\n}, (0, _moment.default)('2020-01-01'));\n(0, _chai.expect)(over65).to.be.false;",
                  "err": {},
                  "uuid": "d21bdb69-a3be-4845-9009-a87e179dd2d7",
                  "parentUUID": "b2c63270-c533-4695-8b9b-5bcafb2fb9e5",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return undefined if veteranDateOfBirth is invalid or null",
                  "fullTitle": "pension applicant information page isOver65 should return undefined if veteranDateOfBirth is invalid or null",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var over65 = (0, _applicantInformation.isOver65)({\n  veteranDateOfBirth: null\n}, (0, _moment.default)('2020-01-01'));\n(0, _chai.expect)(over65).to.be.undefined;",
                  "err": {},
                  "uuid": "27a00942-2b86-420d-a91e-a27b5b2c573b",
                  "parentUUID": "b2c63270-c533-4695-8b9b-5bcafb2fb9e5",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "cb9415f0-65ad-4fad-99c8-a51c69c21a0a",
                "d21bdb69-a3be-4845-9009-a87e179dd2d7",
                "27a00942-2b86-420d-a91e-a27b5b2c573b"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            }
          ],
          "passes": [
            "704fd77f-e5cc-469c-8302-05130c63d0ea",
            "18cf0e1e-e3d8-4b1f-8d4a-b21f4623b336",
            "f2383537-f0bb-41ce-8412-d91ef3390051"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 62,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "f374c648-299a-4d49-add4-898d596422dc",
          "title": "web component tests",
          "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/chapters/02-military-history/generalHistory.unit.spec.jsx",
          "file": "/src/applications/pensions/tests/chapters/02-military-history/generalHistory.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "246f1e86-7036-4dde-be81-d49618c49bfd",
              "title": "military history page",
              "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/chapters/02-military-history/generalHistory.unit.spec.jsx",
              "file": "/src/applications/pensions/tests/chapters/02-military-history/generalHistory.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should have appropriate number of web components",
                  "fullTitle": "web component tests military history page should have appropriate number of web components",
                  "timedOut": false,
                  "duration": 5,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var _render3 = (0, _react2.render)( /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  definitions: formConfig.defaultDefinitions,\n  schema: schema,\n  uiSchema: uiSchema,\n  data: data,\n  formData: {}\n})),\n    container = _render3.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypesWebComponents)).to.have.lengthOf(expectedNumberOfFields);",
                  "err": {},
                  "uuid": "f6175e76-4d51-4496-bfa2-cee9b0f11931",
                  "parentUUID": "246f1e86-7036-4dde-be81-d49618c49bfd",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "f6175e76-4d51-4496-bfa2-cee9b0f11931"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 5,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "b1ac973a-1ae9-4c06-9f53-35947d6b17d8",
              "title": "military history page",
              "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/chapters/02-military-history/generalHistory.unit.spec.jsx",
              "file": "/src/applications/pensions/tests/chapters/02-military-history/generalHistory.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should show the correct number of errors on submit for web components",
                  "fullTitle": "web component tests military history page should show the correct number of errors on submit for web components",
                  "timedOut": false,
                  "duration": 11,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var _render4 = (0, _react2.render)( /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  definitions: formConfig.defaultDefinitions,\n  schema: schema,\n  uiSchema: uiSchema,\n  data: data,\n  formData: {}\n})),\n    container = _render4.container,\n    getByRole = _render4.getByRole;\ngetByRole('button', {\n  name: /submit/i\n}).click();\nvar nodes = Array.from(container.querySelectorAll(\"\".concat(expectedFieldTypesWebComponents, \", \").concat(wrapperWebComponents)));\nvar errors = nodes.filter(function (node) {\n  return node.error;\n});\n(0, _chai.expect)(errors).to.have.lengthOf(expectedNumberOfErrors);",
                  "err": {},
                  "uuid": "daa35fac-6ffd-447d-af4c-8bf70f214f96",
                  "parentUUID": "b1ac973a-1ae9-4c06-9f53-35947d6b17d8",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "daa35fac-6ffd-447d-af4c-8bf70f214f96"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 11,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "6d1037c3-5951-45b3-bc7a-2f52643117c1",
          "title": "scrollToTop function",
          "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/containers/ConfirmationPage.unit.spec.jsx",
          "file": "/src/applications/pensions/tests/containers/ConfirmationPage.unit.spec.jsx",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"scrollToTop function\"",
              "fullTitle": "scrollToTop function \"before each\" hook in \"scrollToTop function\"",
              "timedOut": false,
              "duration": 3,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "scrollToSpy = _sinon.default.stub(Scroll.scroller, 'scrollTo');",
              "err": {},
              "uuid": "688263ca-1752-4c34-8fa0-cbfeabd093cc",
              "parentUUID": "6d1037c3-5951-45b3-bc7a-2f52643117c1",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after each\" hook in \"scrollToTop function\"",
              "fullTitle": "scrollToTop function \"after each\" hook in \"scrollToTop function\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "scrollToSpy.restore();",
              "err": {},
              "uuid": "7616da6d-97f5-4342-8674-9c69b26bec52",
              "parentUUID": "6d1037c3-5951-45b3-bc7a-2f52643117c1",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "should call scroller.scrollTo with correct parameters",
              "fullTitle": "scrollToTop function should call scroller.scrollTo with correct parameters",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, _helpers.scrollToTop)();\n(0, _chai.expect)(scrollToSpy.calledOnce).to.be.true;\n(0, _chai.expect)(scrollToSpy.calledWith('topScrollElement', {\n  duration: 500,\n  delay: 0,\n  smooth: true\n})).to.be.true;",
              "err": {},
              "uuid": "915f2c54-640a-48b5-aadd-8293d60dea04",
              "parentUUID": "6d1037c3-5951-45b3-bc7a-2f52643117c1",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "915f2c54-640a-48b5-aadd-8293d60dea04"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "94570402-b626-4518-b496-63342ee8c660",
          "title": "ListItemView Component",
          "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/components/ListItemView.unit.spec.jsx",
          "file": "/src/applications/pensions/tests/components/ListItemView.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "handles missing title gracefully",
              "fullTitle": "ListItemView Component handles missing title gracefully",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "wrapper = (0, _enzyme.shallow)( /*#__PURE__*/_react.default.createElement(_ListItemView.default, null));\n(0, _chai.expect)(wrapper.text()).to.equal('');\nwrapper.unmount();",
              "err": {},
              "uuid": "77fb7e6a-58a9-45dc-a3c4-836827e108dd",
              "parentUUID": "94570402-b626-4518-b496-63342ee8c660",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "renders without crashing",
              "fullTitle": "ListItemView Component renders without crashing",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "wrapper = (0, _enzyme.shallow)( /*#__PURE__*/_react.default.createElement(_ListItemView.default, {\n  title: \"Test title\"\n}));\n(0, _chai.expect)(wrapper.exists()).to.equal(true);\nwrapper.unmount();",
              "err": {},
              "uuid": "88e26727-91c0-47a1-9754-bd355ee9f87c",
              "parentUUID": "94570402-b626-4518-b496-63342ee8c660",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "displays the correct title",
              "fullTitle": "ListItemView Component displays the correct title",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var title = 'Software Engineer';\nwrapper = (0, _enzyme.shallow)( /*#__PURE__*/_react.default.createElement(_ListItemView.default, {\n  title: title\n}));\n(0, _chai.expect)(wrapper.text()).to.equal('Software Engineer');\nwrapper.unmount();",
              "err": {},
              "uuid": "5cdc4a12-b6cd-4194-8682-36e373a4d92e",
              "parentUUID": "94570402-b626-4518-b496-63342ee8c660",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "77fb7e6a-58a9-45dc-a3c4-836827e108dd",
            "88e26727-91c0-47a1-9754-bd355ee9f87c",
            "5cdc4a12-b6cd-4194-8682-36e373a4d92e"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "f37296c4-c0a3-4189-9327-74142225cedb",
          "title": "Pensions marriage history",
          "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/config/marriageHistory.unit.spec.jsx",
          "file": "/src/applications/pensions/tests/config/marriageHistory.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should not submit empty form",
              "fullTitle": "Pensions marriage history should not submit empty form",
              "timedOut": false,
              "duration": 38,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var onSubmit = _sinon.default.spy();\nvar form = _testUtils.default.renderIntoDocument( /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  schema: schema,\n  definitions: _form.default.defaultDefinitions,\n  onSubmit: onSubmit,\n  uiSchema: uiSchema\n}));\nvar formDOM = (0, _schemaformUtils.getFormDOM)(form);\n(0, _schemaformUtils.submitForm)(form);\n(0, _chai.expect)(formDOM.querySelectorAll('.usa-input-error').length).to.equal(8);\n(0, _chai.expect)(onSubmit.called).to.be.false;",
              "err": {},
              "uuid": "0cd9ac5c-c564-47a5-9f92-426015a65e77",
              "parentUUID": "f37296c4-c0a3-4189-9327-74142225cedb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should render",
              "fullTitle": "Pensions marriage history should render",
              "timedOut": false,
              "duration": 19,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var form = _testUtils.default.renderIntoDocument( /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  schema: schema,\n  definitions: _form.default.defaultDefinitions,\n  uiSchema: uiSchema\n}));\nvar formDOM = (0, _schemaformUtils.getFormDOM)(form);\n(0, _chai.expect)(formDOM.querySelectorAll('input,select').length).to.equal(19);",
              "err": {},
              "uuid": "31ccc5a8-9745-4f5c-b6c3-048dd6e74612",
              "parentUUID": "f37296c4-c0a3-4189-9327-74142225cedb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should submit with valid data",
              "fullTitle": "Pensions marriage history should submit with valid data",
              "timedOut": false,
              "duration": 102,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var onSubmit = _sinon.default.spy();\nvar form = _testUtils.default.renderIntoDocument( /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  schema: schema,\n  definitions: _form.default.defaultDefinitions,\n  onSubmit: onSubmit,\n  uiSchema: uiSchema\n}));\nvar formDOM = (0, _schemaformUtils.getFormDOM)(form);\nformDOM.fillData('#root_spouseFullName_first', 'test');\nformDOM.fillData('#root_spouseFullName_last', 'test');\nformDOM.fillData('#root_dateOfMarriageMonth', '3');\nformDOM.fillData('#root_dateOfMarriageDay', '3');\nformDOM.fillData('#root_dateOfMarriageYear', '2001');\nformDOM.fillData('#root_locationOfMarriage', 'The Pacific');\nformDOM.fillData('#root_marriageType_4', 'Other');\nformDOM.fillData('#root_otherExplanation', 'Something');\nformDOM.fillData('#root_view\\\\:pastMarriage_reasonForSeparation_1', 'Divorced');\nformDOM.fillData('#root_view\\\\:pastMarriage_dateOfSeparationMonth', '3');\nformDOM.fillData('#root_view\\\\:pastMarriage_dateOfSeparationDay', '3');\nformDOM.fillData('#root_view\\\\:pastMarriage_dateOfSeparationYear', '2002');\nformDOM.fillData('#root_view\\\\:pastMarriage_locationOfSeparation', 'The Atlantic');\n(0, _schemaformUtils.submitForm)(form);\n(0, _chai.expect)(formDOM.querySelectorAll('.usa-input-error').length).to.equal(0);\n(0, _chai.expect)(onSubmit.called).to.be.true;",
              "err": {},
              "uuid": "e5b3b4f1-95fb-4638-8c6a-bbe3d46b5e7e",
              "parentUUID": "f37296c4-c0a3-4189-9327-74142225cedb",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [
            {
              "uuid": "3d7e58f3-59b7-414c-87c3-6f77ff6ed051",
              "title": "page title",
              "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/config/marriageHistory.unit.spec.jsx",
              "file": "/src/applications/pensions/tests/config/marriageHistory.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "uses word for index",
                  "fullTitle": "Pensions marriage history page title uses word for index",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)(pageTitle({}, {\n  pagePerItemIndex: 0\n})).to.equal('First marriage');",
                  "err": {},
                  "uuid": "658571a3-1db2-4695-90f6-bf8591931918",
                  "parentUUID": "3d7e58f3-59b7-414c-87c3-6f77ff6ed051",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "uses word for index",
                  "fullTitle": "Pensions marriage history page title uses word for index",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)(pageTitle({})).to.equal('First marriage');",
                  "err": {},
                  "uuid": "193331c0-0995-42f4-8a77-d0aff60b566c",
                  "parentUUID": "3d7e58f3-59b7-414c-87c3-6f77ff6ed051",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "uses word for index",
                  "fullTitle": "Pensions marriage history page title uses word for index",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)(pageTitle({}, {\n  pagePerItemIndex: 49\n})).to.equal('50th marriage');",
                  "err": {},
                  "uuid": "61b2eeaf-0b7c-4854-901b-ac6f29ea0fa4",
                  "parentUUID": "3d7e58f3-59b7-414c-87c3-6f77ff6ed051",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "uses number when at index ten or greater",
                  "fullTitle": "Pensions marriage history page title uses number when at index ten or greater",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)(pageTitle({}, {\n  pagePerItemIndex: 10\n})).to.equal('Eleventh marriage');",
                  "err": {},
                  "uuid": "891335d6-6fc3-4131-80e5-cd51f2efece4",
                  "parentUUID": "3d7e58f3-59b7-414c-87c3-6f77ff6ed051",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "658571a3-1db2-4695-90f6-bf8591931918",
                "193331c0-0995-42f4-8a77-d0aff60b566c",
                "61b2eeaf-0b7c-4854-901b-ac6f29ea0fa4",
                "891335d6-6fc3-4131-80e5-cd51f2efece4"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "1dfa5610-d1eb-4f4e-a9d9-7d6640b933b4",
              "title": "hideIf current marriage",
              "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/config/marriageHistory.unit.spec.jsx",
              "file": "/src/applications/pensions/tests/config/marriageHistory.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "hides if married and last",
                  "fullTitle": "Pensions marriage history hideIf current marriage hides if married and last",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var result = hideIfCurrentMarriage({\n  maritalStatus: 'Married',\n  marriages: [{}]\n}, 0);\n(0, _chai.expect)(result).to.be.true;",
                  "err": {},
                  "uuid": "dbde5cda-b711-4ba4-ad50-254d77f13d77",
                  "parentUUID": "1dfa5610-d1eb-4f4e-a9d9-7d6640b933b4",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "does not hide if not married",
                  "fullTitle": "Pensions marriage history hideIf current marriage does not hide if not married",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var result = hideIfCurrentMarriage({\n  marriages: [{}]\n}, 0);\n(0, _chai.expect)(result).to.be.false;",
                  "err": {},
                  "uuid": "d6bfcfcc-5ea2-4e0a-b227-a9bc1eb40dc5",
                  "parentUUID": "1dfa5610-d1eb-4f4e-a9d9-7d6640b933b4",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "does not hide if married and not last",
                  "fullTitle": "Pensions marriage history hideIf current marriage does not hide if married and not last",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var result = hideIfCurrentMarriage({\n  maritalStatus: 'Married',\n  marriages: [{}, {}]\n}, 0);\n(0, _chai.expect)(result).to.be.false;",
                  "err": {},
                  "uuid": "ca4bcc0c-3ade-43b7-8141-cde31e27bade",
                  "parentUUID": "1dfa5610-d1eb-4f4e-a9d9-7d6640b933b4",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "dbde5cda-b711-4ba4-ad50-254d77f13d77",
                "d6bfcfcc-5ea2-4e0a-b227-a9bc1eb40dc5",
                "ca4bcc0c-3ade-43b7-8141-cde31e27bade"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            }
          ],
          "passes": [
            "0cd9ac5c-c564-47a5-9f92-426015a65e77",
            "31ccc5a8-9745-4f5c-b6c3-048dd6e74612",
            "e5b3b4f1-95fb-4638-8c6a-bbe3d46b5e7e"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 159,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "dc297bd0-c6b0-48a7-a6a6-d9c1e5f51f7f",
          "title": "<WorkHistory />",
          "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/components/SectionField.unit.spec.jsx",
          "file": "/src/applications/pensions/tests/components/SectionField.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "renders with disabilities",
              "fullTitle": "<WorkHistory /> renders with disabilities",
              "timedOut": false,
              "duration": 7,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var formData = {\n  'view:hasVisitedVaMc': false,\n  'view:workedBeforeDisabled': false,\n  'view:history': {\n    jobs: []\n  },\n  disabilities: []\n};\nvar _render4 = (0, _react2.render)( /*#__PURE__*/_react.default.createElement(_SectionField.WorkHistory, {\n  formData: formData\n})),\n    queryByText = _render4.queryByText;\n(0, _chai.expect)(queryByText('test-disability')).to.be.null;",
              "err": {},
              "uuid": "4bc30034-87cb-4a1b-b7a3-ad7546379329",
              "parentUUID": "dc297bd0-c6b0-48a7-a6a6-d9c1e5f51f7f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "renders with disabilities",
              "fullTitle": "<WorkHistory /> renders with disabilities",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var formData = {\n  'view:hasVisitedVaMc': true,\n  'view:workedBeforeDisabled': true,\n  'view:history': {\n    jobs: [{\n      name: 'test-job',\n      jobTitle: 'test-title',\n      address: {\n        street: '1234 Random street',\n        street2: 'Apt 2',\n        city: 'Nopesville',\n        state: 'VA',\n        postalCode: '12345',\n        country: 'USA'\n      },\n      daysMissed: '2',\n      annualEarnings: 60000,\n      dateRange: {\n        from: '10121999',\n        to: '10302000'\n      }\n    }]\n  },\n  disabilities: [{\n    name: 'test-disability'\n  }]\n};\nvar _render3 = (0, _react2.render)( /*#__PURE__*/_react.default.createElement(_SectionField.WorkHistory, {\n  formData: formData\n})),\n    queryByText = _render3.queryByText;\n(0, _chai.expect)(queryByText('test-disability')).to.not.be.null;",
              "err": {},
              "uuid": "bb6b31d1-95b1-4bfb-bdfc-2da86703d426",
              "parentUUID": "dc297bd0-c6b0-48a7-a6a6-d9c1e5f51f7f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "4bc30034-87cb-4a1b-b7a3-ad7546379329",
            "bb6b31d1-95b1-4bfb-bdfc-2da86703d426"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 9,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "5b4f6139-894a-4731-b472-fe5f66812bcf",
          "title": "Pensions spouse info",
          "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/config/spouseMarriageInfo.unit.spec.jsx",
          "file": "/src/applications/pensions/tests/config/spouseMarriageInfo.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "depends should return true if married",
              "fullTitle": "Pensions spouse info depends should return true if married",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var result = depends({\n  maritalStatus: 'Married'\n});\n(0, _chai.expect)(result).to.be.true;",
              "err": {},
              "uuid": "fa6c41cd-4a94-41fe-864b-f091afcc4ddb",
              "parentUUID": "5b4f6139-894a-4731-b472-fe5f66812bcf",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should render spouse address and contrib fields",
              "fullTitle": "Pensions spouse info should render spouse address and contrib fields",
              "timedOut": false,
              "duration": 79,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var form = _testUtils.default.renderIntoDocument( /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  schema: schema,\n  data: {\n    marriages: [{\n      spouseFullName: {\n        first: 'Jane',\n        last: 'Doe'\n      }\n    }]\n  },\n  definitions: _form.default.defaultDefinitions,\n  uiSchema: uiSchema\n}));\nvar formDOM = (0, _schemaformUtils.getFormDOM)(form);\n(0, _chai.expect)(formDOM.querySelectorAll('input,select').length).to.equal(9);\nformDOM.fillData('#root_liveWithSpouseNo', 'N');\n(0, _chai.expect)(formDOM.querySelectorAll('input,select').length).to.equal(17);\n(0, _schemaformUtils.submitForm)(form);\n(0, _chai.expect)(formDOM.querySelectorAll('.usa-input-error').length).to.equal(10);",
              "err": {},
              "uuid": "93feeb95-d226-4a10-bfab-ee84ebaef587",
              "parentUUID": "5b4f6139-894a-4731-b472-fe5f66812bcf",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should render file number",
              "fullTitle": "Pensions spouse info should render file number",
              "timedOut": false,
              "duration": 15,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var form = _testUtils.default.renderIntoDocument( /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  schema: schema,\n  data: {\n    marriages: [{\n      spouseFullName: {\n        first: 'Jane',\n        last: 'Doe'\n      }\n    }]\n  },\n  definitions: _form.default.defaultDefinitions,\n  uiSchema: uiSchema\n}));\nvar formDOM = (0, _schemaformUtils.getFormDOM)(form);\n(0, _chai.expect)(formDOM.querySelectorAll('input,select').length).to.equal(9);\nformDOM.fillData('#root_spouseIsVeteranYes', 'Y');\n(0, _chai.expect)(formDOM.querySelectorAll('input,select').length).to.equal(10);",
              "err": {},
              "uuid": "89c4d822-00b1-4120-8141-7fba06834695",
              "parentUUID": "5b4f6139-894a-4731-b472-fe5f66812bcf",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should not submit empty form",
              "fullTitle": "Pensions spouse info should not submit empty form",
              "timedOut": false,
              "duration": 18,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var onSubmit = _sinon.default.spy();\nvar form = _testUtils.default.renderIntoDocument( /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  schema: schema,\n  definitions: _form.default.defaultDefinitions,\n  onSubmit: onSubmit,\n  uiSchema: uiSchema\n}));\nvar formDOM = (0, _schemaformUtils.getFormDOM)(form);\n(0, _schemaformUtils.submitForm)(form);\n(0, _chai.expect)(formDOM.querySelectorAll('.usa-input-error').length).to.equal(5);\n(0, _chai.expect)(onSubmit.called).to.be.false;",
              "err": {},
              "uuid": "98f2c5bc-fa2f-4938-bc38-248390ca7c83",
              "parentUUID": "5b4f6139-894a-4731-b472-fe5f66812bcf",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should submit with valid data",
              "fullTitle": "Pensions spouse info should submit with valid data",
              "timedOut": false,
              "duration": 40,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var onSubmit = _sinon.default.spy();\nvar form = _testUtils.default.renderIntoDocument( /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  schema: schema,\n  definitions: _form.default.defaultDefinitions,\n  onSubmit: onSubmit,\n  uiSchema: uiSchema\n}));\nvar formDOM = (0, _schemaformUtils.getFormDOM)(form);\nformDOM.fillData('#root_spouseDateOfBirthMonth', '2');\nformDOM.fillData('#root_spouseDateOfBirthDay', '2');\nformDOM.fillData('#root_spouseDateOfBirthYear', '2000');\nformDOM.fillData('#root_spouseSocialSecurityNumber', '234432444');\nformDOM.fillData('#root_spouseIsVeteranNo', 'N');\nformDOM.fillData('#root_liveWithSpouseYes', 'Y');\nformDOM.fillData('#root_spouseMarriages', '1');\n(0, _schemaformUtils.submitForm)(form);\n(0, _chai.expect)(formDOM.querySelectorAll('.usa-input-error').length).to.equal(0);\n(0, _chai.expect)(onSubmit.called).to.be.true;",
              "err": {},
              "uuid": "200b4a72-28c9-4ce3-947f-4cc28783109d",
              "parentUUID": "5b4f6139-894a-4731-b472-fe5f66812bcf",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should render",
              "fullTitle": "Pensions spouse info should render",
              "timedOut": false,
              "duration": 12,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var form = _testUtils.default.renderIntoDocument( /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  schema: schema,\n  data: {\n    marriages: [{\n      spouseFullName: {\n        first: 'Jane',\n        last: 'Doe'\n      }\n    }]\n  },\n  definitions: _form.default.defaultDefinitions,\n  uiSchema: uiSchema\n}));\nvar formDOM = (0, _schemaformUtils.getFormDOM)(form);\n(0, _chai.expect)(formDOM.querySelectorAll('input,select').length).to.equal(9);\n(0, _chai.expect)(formDOM.querySelectorAll('legend')[1].textContent).to.contain('Jane Doe');\n(0, _chai.expect)(formDOM.querySelector('label[for=\"root_spouseSocialSecurityNumber\"]').textContent).to.contain('Jane Doe');",
              "err": {},
              "uuid": "76ba3457-30a3-4706-a492-c32558f5f2a2",
              "parentUUID": "5b4f6139-894a-4731-b472-fe5f66812bcf",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "fa6c41cd-4a94-41fe-864b-f091afcc4ddb",
            "93feeb95-d226-4a10-bfab-ee84ebaef587",
            "89c4d822-00b1-4120-8141-7fba06834695",
            "98f2c5bc-fa2f-4938-bc38-248390ca7c83",
            "200b4a72-28c9-4ce3-947f-4cc28783109d",
            "76ba3457-30a3-4706-a492-c32558f5f2a2"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 164,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "55801980-22af-47a3-a38d-f50ad05a523f",
          "title": "Pension: Financial information, income sources page",
          "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/chapters/05-financial-information/incomeSources.unit.spec.jsx",
          "file": "/src/applications/pensions/tests/chapters/05-financial-information/incomeSources.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "7b2103c6-5132-4e0b-b727-1910e2b6258d",
              "title": "with multiple sources",
              "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/chapters/05-financial-information/incomeSources.unit.spec.jsx",
              "file": "/src/applications/pensions/tests/chapters/05-financial-information/incomeSources.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [],
              "suites": [
                {
                  "uuid": "36b9f1f5-7db7-4f8d-a292-f19adc185548",
                  "title": "Gross monthly income page",
                  "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/chapters/05-financial-information/incomeSources.unit.spec.jsx",
                  "file": "/src/applications/pensions/tests/chapters/05-financial-information/incomeSources.unit.spec.jsx",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "should have appropriate number of web components",
                      "fullTitle": "Pension: Financial information, income sources page with multiple sources Gross monthly income page should have appropriate number of web components",
                      "timedOut": false,
                      "duration": 13,
                      "state": "passed",
                      "speed": "slow",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "var _render3 = (0, _react2.render)( /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  definitions: formConfig.defaultDefinitions,\n  schema: schema,\n  uiSchema: uiSchema,\n  data: data,\n  formData: {}\n})),\n    container = _render3.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypesWebComponents)).to.have.lengthOf(expectedNumberOfFields);",
                      "err": {},
                      "uuid": "51cf2c66-d7e5-47ed-82ed-10e2f1f0463c",
                      "parentUUID": "36b9f1f5-7db7-4f8d-a292-f19adc185548",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "51cf2c66-d7e5-47ed-82ed-10e2f1f0463c"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 13,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "746d986c-a987-4dec-9208-1009a90a2b65",
                  "title": "Gross monthly income page",
                  "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/chapters/05-financial-information/incomeSources.unit.spec.jsx",
                  "file": "/src/applications/pensions/tests/chapters/05-financial-information/incomeSources.unit.spec.jsx",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "should show the correct number of errors on submit for web components",
                      "fullTitle": "Pension: Financial information, income sources page with multiple sources Gross monthly income page should show the correct number of errors on submit for web components",
                      "timedOut": false,
                      "duration": 38,
                      "state": "passed",
                      "speed": "slow",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "var _render4 = (0, _react2.render)( /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  definitions: formConfig.defaultDefinitions,\n  schema: schema,\n  uiSchema: uiSchema,\n  data: data,\n  formData: {}\n})),\n    container = _render4.container,\n    getByRole = _render4.getByRole;\ngetByRole('button', {\n  name: /submit/i\n}).click();\nvar nodes = Array.from(container.querySelectorAll(\"\".concat(expectedFieldTypesWebComponents, \", \").concat(wrapperWebComponents)));\nvar errors = nodes.filter(function (node) {\n  return node.error;\n});\n(0, _chai.expect)(errors).to.have.lengthOf(expectedNumberOfErrors);",
                      "err": {},
                      "uuid": "7d2b0846-74ab-4f6b-be37-bf2d086b3dc1",
                      "parentUUID": "746d986c-a987-4dec-9208-1009a90a2b65",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "7d2b0846-74ab-4f6b-be37-bf2d086b3dc1"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 38,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "103289c3-f4da-473e-9370-df60c77b55df",
                  "title": "Gross monthly income page",
                  "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/chapters/05-financial-information/incomeSources.unit.spec.jsx",
                  "file": "/src/applications/pensions/tests/chapters/05-financial-information/incomeSources.unit.spec.jsx",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "should have appropriate number of fields",
                      "fullTitle": "Pension: Financial information, income sources page with multiple sources Gross monthly income page should have appropriate number of fields",
                      "timedOut": false,
                      "duration": 10,
                      "state": "passed",
                      "speed": "slow",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "var _render = (0, _react2.render)( /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  definitions: formConfig.defaultDefinitions,\n  schema: schema,\n  uiSchema: uiSchema,\n  data: data,\n  formData: {}\n})),\n    container = _render.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypes)).to.have.lengthOf(expectedNumberOfFields);",
                      "err": {},
                      "uuid": "7f6f8d5f-d47e-4751-9f1e-d49210505437",
                      "parentUUID": "103289c3-f4da-473e-9370-df60c77b55df",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "7f6f8d5f-d47e-4751-9f1e-d49210505437"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 10,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "7b3c35b5-c5c3-4585-9567-78ceed686de4",
                  "title": "Gross monthly income page",
                  "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/chapters/05-financial-information/incomeSources.unit.spec.jsx",
                  "file": "/src/applications/pensions/tests/chapters/05-financial-information/incomeSources.unit.spec.jsx",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "should show the correct number of errors on submit",
                      "fullTitle": "Pension: Financial information, income sources page with multiple sources Gross monthly income page should show the correct number of errors on submit",
                      "timedOut": false,
                      "duration": 42,
                      "state": "passed",
                      "speed": "slow",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "var _render2 = (0, _react2.render)( /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  definitions: formConfig.defaultDefinitions,\n  schema: schema,\n  uiSchema: uiSchema,\n  data: data,\n  formData: {}\n})),\n    getByRole = _render2.getByRole,\n    queryAllByRole = _render2.queryAllByRole;\ngetByRole('button', {\n  name: /submit/i\n}).click();\nvar errors = queryAllByRole('alert');\n(0, _chai.expect)(errors).to.have.lengthOf(expectedNumberOfErrors);",
                      "err": {},
                      "uuid": "935543f5-f638-4799-af60-e6a3efd8c887",
                      "parentUUID": "7b3c35b5-c5c3-4585-9567-78ceed686de4",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "935543f5-f638-4799-af60-e6a3efd8c887"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 42,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                }
              ],
              "passes": [],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "75e25c05-08a7-41d8-ac44-af711696b80a",
              "title": "should include a type of income additional field",
              "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/chapters/05-financial-information/incomeSources.unit.spec.jsx",
              "file": "/src/applications/pensions/tests/chapters/05-financial-information/incomeSources.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [],
              "suites": [
                {
                  "uuid": "bcd36714-c97b-468b-aa0a-f22aa8735e65",
                  "title": "Gross monthly income page",
                  "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/chapters/05-financial-information/incomeSources.unit.spec.jsx",
                  "file": "/src/applications/pensions/tests/chapters/05-financial-information/incomeSources.unit.spec.jsx",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "should have appropriate number of web components",
                      "fullTitle": "Pension: Financial information, income sources page should include a type of income additional field Gross monthly income page should have appropriate number of web components",
                      "timedOut": false,
                      "duration": 12,
                      "state": "passed",
                      "speed": "slow",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "var _render3 = (0, _react2.render)( /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  definitions: formConfig.defaultDefinitions,\n  schema: schema,\n  uiSchema: uiSchema,\n  data: data,\n  formData: {}\n})),\n    container = _render3.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypesWebComponents)).to.have.lengthOf(expectedNumberOfFields);",
                      "err": {},
                      "uuid": "795dbbac-c483-4191-8455-8db728b7e166",
                      "parentUUID": "bcd36714-c97b-468b-aa0a-f22aa8735e65",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "795dbbac-c483-4191-8455-8db728b7e166"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 12,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "84bb71d5-de2a-4041-b156-dfcf666fc1a7",
                  "title": "Gross monthly income page",
                  "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/chapters/05-financial-information/incomeSources.unit.spec.jsx",
                  "file": "/src/applications/pensions/tests/chapters/05-financial-information/incomeSources.unit.spec.jsx",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "should have appropriate number of fields",
                      "fullTitle": "Pension: Financial information, income sources page should include a type of income additional field Gross monthly income page should have appropriate number of fields",
                      "timedOut": false,
                      "duration": 12,
                      "state": "passed",
                      "speed": "slow",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "var _render = (0, _react2.render)( /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  definitions: formConfig.defaultDefinitions,\n  schema: schema,\n  uiSchema: uiSchema,\n  data: data,\n  formData: {}\n})),\n    container = _render.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypes)).to.have.lengthOf(expectedNumberOfFields);",
                      "err": {},
                      "uuid": "7b9a1f0c-5d53-4398-be71-87c41d0df967",
                      "parentUUID": "84bb71d5-de2a-4041-b156-dfcf666fc1a7",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "7b9a1f0c-5d53-4398-be71-87c41d0df967"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 12,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                }
              ],
              "passes": [],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "7c8f7080-bebe-470a-b7fe-28007598fed1",
              "title": "should not require type of income additional field",
              "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/chapters/05-financial-information/incomeSources.unit.spec.jsx",
              "file": "/src/applications/pensions/tests/chapters/05-financial-information/incomeSources.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [],
              "suites": [
                {
                  "uuid": "6d4f2faf-a6dc-4e1c-a7ce-b0776507ccb1",
                  "title": "Gross monthly income page",
                  "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/chapters/05-financial-information/incomeSources.unit.spec.jsx",
                  "file": "/src/applications/pensions/tests/chapters/05-financial-information/incomeSources.unit.spec.jsx",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "should show the correct number of errors on submit for web components",
                      "fullTitle": "Pension: Financial information, income sources page should not require type of income additional field Gross monthly income page should show the correct number of errors on submit for web components",
                      "timedOut": false,
                      "duration": 23,
                      "state": "passed",
                      "speed": "slow",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "var _render4 = (0, _react2.render)( /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  definitions: formConfig.defaultDefinitions,\n  schema: schema,\n  uiSchema: uiSchema,\n  data: data,\n  formData: {}\n})),\n    container = _render4.container,\n    getByRole = _render4.getByRole;\ngetByRole('button', {\n  name: /submit/i\n}).click();\nvar nodes = Array.from(container.querySelectorAll(\"\".concat(expectedFieldTypesWebComponents, \", \").concat(wrapperWebComponents)));\nvar errors = nodes.filter(function (node) {\n  return node.error;\n});\n(0, _chai.expect)(errors).to.have.lengthOf(expectedNumberOfErrors);",
                      "err": {},
                      "uuid": "898b5a47-c044-4dfe-bc44-b2608ce39537",
                      "parentUUID": "6d4f2faf-a6dc-4e1c-a7ce-b0776507ccb1",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "898b5a47-c044-4dfe-bc44-b2608ce39537"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 23,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "47e0b99b-60e7-441c-939a-32779aeb9bdc",
                  "title": "Gross monthly income page",
                  "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/chapters/05-financial-information/incomeSources.unit.spec.jsx",
                  "file": "/src/applications/pensions/tests/chapters/05-financial-information/incomeSources.unit.spec.jsx",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "should have appropriate number of web components",
                      "fullTitle": "Pension: Financial information, income sources page should not require type of income additional field Gross monthly income page should have appropriate number of web components",
                      "timedOut": false,
                      "duration": 5,
                      "state": "passed",
                      "speed": "slow",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "var _render3 = (0, _react2.render)( /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  definitions: formConfig.defaultDefinitions,\n  schema: schema,\n  uiSchema: uiSchema,\n  data: data,\n  formData: {}\n})),\n    container = _render3.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypesWebComponents)).to.have.lengthOf(expectedNumberOfFields);",
                      "err": {},
                      "uuid": "9acda0c3-2057-4e70-883b-45b47b802a92",
                      "parentUUID": "47e0b99b-60e7-441c-939a-32779aeb9bdc",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "9acda0c3-2057-4e70-883b-45b47b802a92"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 5,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "f6cc390d-9ac0-47fc-9b68-76a6fd3bfa1d",
                  "title": "Gross monthly income page",
                  "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/chapters/05-financial-information/incomeSources.unit.spec.jsx",
                  "file": "/src/applications/pensions/tests/chapters/05-financial-information/incomeSources.unit.spec.jsx",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "should have appropriate number of fields",
                      "fullTitle": "Pension: Financial information, income sources page should not require type of income additional field Gross monthly income page should have appropriate number of fields",
                      "timedOut": false,
                      "duration": 6,
                      "state": "passed",
                      "speed": "slow",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "var _render = (0, _react2.render)( /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  definitions: formConfig.defaultDefinitions,\n  schema: schema,\n  uiSchema: uiSchema,\n  data: data,\n  formData: {}\n})),\n    container = _render.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypes)).to.have.lengthOf(expectedNumberOfFields);",
                      "err": {},
                      "uuid": "ed792c8e-33c1-4e43-a69c-1842b62f628e",
                      "parentUUID": "f6cc390d-9ac0-47fc-9b68-76a6fd3bfa1d",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "ed792c8e-33c1-4e43-a69c-1842b62f628e"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 6,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "1e9b8dce-e3e0-48e9-a4db-4e4c1c77879f",
                  "title": "Gross monthly income page",
                  "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/chapters/05-financial-information/incomeSources.unit.spec.jsx",
                  "file": "/src/applications/pensions/tests/chapters/05-financial-information/incomeSources.unit.spec.jsx",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "should show the correct number of errors on submit",
                      "fullTitle": "Pension: Financial information, income sources page should not require type of income additional field Gross monthly income page should show the correct number of errors on submit",
                      "timedOut": false,
                      "duration": 29,
                      "state": "passed",
                      "speed": "slow",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "var _render2 = (0, _react2.render)( /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  definitions: formConfig.defaultDefinitions,\n  schema: schema,\n  uiSchema: uiSchema,\n  data: data,\n  formData: {}\n})),\n    getByRole = _render2.getByRole,\n    queryAllByRole = _render2.queryAllByRole;\ngetByRole('button', {\n  name: /submit/i\n}).click();\nvar errors = queryAllByRole('alert');\n(0, _chai.expect)(errors).to.have.lengthOf(expectedNumberOfErrors);",
                      "err": {},
                      "uuid": "5cb06296-fedb-4a8d-ae4f-fd0fadad333e",
                      "parentUUID": "1e9b8dce-e3e0-48e9-a4db-4e4c1c77879f",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "5cb06296-fedb-4a8d-ae4f-fd0fadad333e"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 29,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                }
              ],
              "passes": [],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "8dfbc806-04fd-42c3-8d31-75a9118fa35e",
          "title": "PensionsApp",
          "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/PensionsApp.unit.spec.jsx",
          "file": "/src/applications/pensions/tests/PensionsApp.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should show NoFormPage",
              "fullTitle": "PensionsApp should show NoFormPage",
              "timedOut": false,
              "duration": 5,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); });",
              "err": {},
              "uuid": "5d7c31fb-fa4f-42c6-8d68-84cf4f12ae13",
              "parentUUID": "8dfbc806-04fd-42c3-8d31-75a9118fa35e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should show VA loading indicator",
              "fullTitle": "PensionsApp should show VA loading indicator",
              "timedOut": false,
              "duration": 3,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var mockStore = store();\nvar _render = (0, _react2.render)( /*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n  store: mockStore\n}, /*#__PURE__*/_react.default.createElement(_PensionsApp.default, {\n  location: pensionLocation\n}))),\n    container = _render.container;\n(0, _chai.expect)((0, _ui.$)('va-loading-indicator', container)).to.exist;",
              "err": {},
              "uuid": "2adf3367-ac5f-4fe0-8885-63cf03502faa",
              "parentUUID": "8dfbc806-04fd-42c3-8d31-75a9118fa35e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "5d7c31fb-fa4f-42c6-8d68-84cf4f12ae13",
            "2adf3367-ac5f-4fe0-8885-63cf03502faa"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 8,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "8283a8a2-c319-4d5b-b717-69deded6bf55",
          "title": "pension special monthly pension page",
          "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/chapters/03-health-and-employment-information/specialMonthlyPension.unit.spec.jsx",
          "file": "/src/applications/pensions/tests/chapters/03-health-and-employment-information/specialMonthlyPension.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "6dee36e7-9d43-4399-9dd1-2322d0e5d625",
              "title": "special monthly pension page",
              "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/chapters/03-health-and-employment-information/specialMonthlyPension.unit.spec.jsx",
              "file": "/src/applications/pensions/tests/chapters/03-health-and-employment-information/specialMonthlyPension.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should show the correct number of errors on submit for web components",
                  "fullTitle": "pension special monthly pension page special monthly pension page should show the correct number of errors on submit for web components",
                  "timedOut": false,
                  "duration": 14,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var _render4 = (0, _react2.render)( /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  definitions: formConfig.defaultDefinitions,\n  schema: schema,\n  uiSchema: uiSchema,\n  data: data,\n  formData: {}\n})),\n    container = _render4.container,\n    getByRole = _render4.getByRole;\ngetByRole('button', {\n  name: /submit/i\n}).click();\nvar nodes = Array.from(container.querySelectorAll(\"\".concat(expectedFieldTypesWebComponents, \", \").concat(wrapperWebComponents)));\nvar errors = nodes.filter(function (node) {\n  return node.error;\n});\n(0, _chai.expect)(errors).to.have.lengthOf(expectedNumberOfErrors);",
                  "err": {},
                  "uuid": "2b43b6ec-7a94-46c3-809b-4ab437b13760",
                  "parentUUID": "6dee36e7-9d43-4399-9dd1-2322d0e5d625",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "2b43b6ec-7a94-46c3-809b-4ab437b13760"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 14,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "0623018a-cd0d-4aa9-8caf-21e859e96e70",
              "title": "special monthly pension page",
              "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/chapters/03-health-and-employment-information/specialMonthlyPension.unit.spec.jsx",
              "file": "/src/applications/pensions/tests/chapters/03-health-and-employment-information/specialMonthlyPension.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should have appropriate number of web components",
                  "fullTitle": "pension special monthly pension page special monthly pension page should have appropriate number of web components",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var _render3 = (0, _react2.render)( /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  definitions: formConfig.defaultDefinitions,\n  schema: schema,\n  uiSchema: uiSchema,\n  data: data,\n  formData: {}\n})),\n    container = _render3.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypesWebComponents)).to.have.lengthOf(expectedNumberOfFields);",
                  "err": {},
                  "uuid": "db02427a-ba86-4b67-a702-5b586622c02e",
                  "parentUUID": "0623018a-cd0d-4aa9-8caf-21e859e96e70",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "db02427a-ba86-4b67-a702-5b586622c02e"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 3,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "9273e86f-1d1e-4a98-a595-2bddd9819fc9",
          "title": "Pensions DisclosureTitle",
          "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/components/DisclosureTitle.unit.spec.jsx",
          "file": "/src/applications/pensions/tests/components/DisclosureTitle.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should render",
              "fullTitle": "Pensions DisclosureTitle should render",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var DisclosureTitle = (0, _DisclosureTitle.default)('test', 'Blah blah');\nvar tree = _skinDeep.default.shallowRender( /*#__PURE__*/_react.default.createElement(DisclosureTitle, {\n  id: \"id\",\n  formData: {\n    test: {\n      first: 'Jane',\n      last: 'Doe'\n    }\n  }\n}));\n(0, _chai.expect)(tree.text()).to.contain('Jane Doe');\n(0, _chai.expect)(tree.text()).to.contain('Blah blah');",
              "err": {},
              "uuid": "43d4fa24-e3a0-4faa-a679-acda61bb5199",
              "parentUUID": "9273e86f-1d1e-4a98-a595-2bddd9819fc9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should render spouse name",
              "fullTitle": "Pensions DisclosureTitle should render spouse name",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var DisclosureTitle = (0, _DisclosureTitle.default)('spouse', 'Blah blah');\nvar tree = _skinDeep.default.shallowRender( /*#__PURE__*/_react.default.createElement(DisclosureTitle, {\n  id: \"id\",\n  formData: {\n    maritalStatus: 'Married',\n    marriages: [{\n      spouseFullName: {\n        first: 'John',\n        last: 'Doe'\n      }\n    }, {\n      spouseFullName: {\n        first: 'Jane',\n        last: 'Doe'\n      }\n    }]\n  }\n}));\n(0, _chai.expect)(tree.text()).to.contain('Jane Doe');\n(0, _chai.expect)(tree.text()).to.contain('Blah blah');",
              "err": {},
              "uuid": "e776bfd9-8495-428c-940e-bd1dcebca9bb",
              "parentUUID": "9273e86f-1d1e-4a98-a595-2bddd9819fc9",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "43d4fa24-e3a0-4faa-a679-acda61bb5199",
            "e776bfd9-8495-428c-940e-bd1dcebca9bb"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "1ce0a434-09d2-4c51-aaf2-2efde7d94011",
          "title": "convertDateFormat",
          "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/components/SectionField.unit.spec.jsx",
          "file": "/src/applications/pensions/tests/components/SectionField.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "correctly converts YYYY-MM-DD to MM/DD/YYYY",
              "fullTitle": "convertDateFormat correctly converts YYYY-MM-DD to MM/DD/YYYY",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var inputDate = '2023-10-19';\nvar expectedDate = '10/19/2023';\nvar result = (0, _SectionField.convertDateFormat)(inputDate);\n(0, _chai.expect)(result).to.equal(expectedDate);",
              "err": {},
              "uuid": "cf4a22f9-8c52-47a6-8c70-b6b566cd26dd",
              "parentUUID": "1ce0a434-09d2-4c51-aaf2-2efde7d94011",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "returns undefined for null or undefined input",
              "fullTitle": "convertDateFormat returns undefined for null or undefined input",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, _chai.expect)((0, _SectionField.convertDateFormat)(null)).to.eql('');\n(0, _chai.expect)((0, _SectionField.convertDateFormat)()).to.eql('');",
              "err": {},
              "uuid": "7ab73bac-9fba-4b7f-a879-fabaa497cfcb",
              "parentUUID": "1ce0a434-09d2-4c51-aaf2-2efde7d94011",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "cf4a22f9-8c52-47a6-8c70-b6b566cd26dd",
            "7ab73bac-9fba-4b7f-a879-fabaa497cfcb"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "4d071eb4-2022-4567-afdc-305cebf9e9cd",
          "title": "marital status page",
          "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/chapters/04-household-information/maritalStatus.unit.spec.jsx",
          "file": "/src/applications/pensions/tests/chapters/04-household-information/maritalStatus.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should render web components in form correctly",
              "fullTitle": "marital status page should render web components in form correctly",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var pageTitle = 'marital status';\nvar expectedNumberOfFields = 1;\n(0, _pageTests.testNumberOfWebComponentFields)(_form.default, _maritalStatus.default.schema, _maritalStatus.default.uiSchema, expectedNumberOfFields, pageTitle);\nvar expectedNumberOfErrors = 1;\n(0, _pageTests.testNumberOfErrorsOnSubmitForWebComponents)(_form.default, _maritalStatus.default.schema, _maritalStatus.default.uiSchema, expectedNumberOfErrors, pageTitle);",
              "err": {},
              "uuid": "ce5bc9fe-2a27-433f-9123-501183c2fe12",
              "parentUUID": "4d071eb4-2022-4567-afdc-305cebf9e9cd",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "ce5bc9fe-2a27-433f-9123-501183c2fe12"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "4a481c7a-849b-45ea-a0de-80d67dd3ba20",
          "title": "pension <MedicalEvidenceAlert>",
          "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/components/FormAlerts/FormAlerts.unit.spec.jsx",
          "file": "/src/applications/pensions/tests/components/FormAlerts/FormAlerts.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should render",
              "fullTitle": "pension <MedicalEvidenceAlert> should render",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _render = (0, _react2.render)( /*#__PURE__*/_react.default.createElement(_FormAlerts.MedicalEvidenceAlert, null)),\n    container = _render.container;\nvar selector = container.querySelector('va-alert');\n(0, _chai.expect)(selector).to.exist;\n(0, _chai.expect)(selector).to.contain.attr('status', 'warning');",
              "err": {},
              "uuid": "4ed099e6-26f5-4ba9-a8a4-f314868b2fc7",
              "parentUUID": "4a481c7a-849b-45ea-a0de-80d67dd3ba20",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "4ed099e6-26f5-4ba9-a8a4-f314868b2fc7"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "487c1dbd-2ba9-4652-ad12-b756497615f1",
          "title": "Unauthenticated warning alert",
          "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/containers/UnauthenticatedWarningAlert.unit.spec.jsx",
          "file": "/src/applications/pensions/tests/containers/UnauthenticatedWarningAlert.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should call toggleLoginModal when the \"sign in\" link is clicked",
              "fullTitle": "Unauthenticated warning alert should call toggleLoginModal when the \"sign in\" link is clicked",
              "timedOut": false,
              "duration": 3,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); });",
              "err": {},
              "uuid": "26b3b747-b408-45be-ab23-51bea5996e5d",
              "parentUUID": "487c1dbd-2ba9-4652-ad12-b756497615f1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should not render if the user is logged in",
              "fullTitle": "Unauthenticated warning alert should not render if the user is logged in",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _render = (0, _react2.render)( /*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n  store: mockStoreLoggedIn\n}, /*#__PURE__*/_react.default.createElement(_UnauthenticatedWarningAlert.default, null))),\n    container = _render.container;\nvar selector = container.querySelector('va-alert');\n(0, _chai.expect)(selector).not.to.exist;",
              "err": {},
              "uuid": "0f8e28a2-a1da-4df8-9ce9-9eab19f50fe7",
              "parentUUID": "487c1dbd-2ba9-4652-ad12-b756497615f1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should render `va-alert` with correct title",
              "fullTitle": "Unauthenticated warning alert should render `va-alert` with correct title",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _render2 = (0, _react2.render)( /*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n  store: mockStoreNotLoggedIn\n}, /*#__PURE__*/_react.default.createElement(_UnauthenticatedWarningAlert.default, null))),\n    container = _render2.container;\nvar selector = container.querySelector('va-alert');\n(0, _chai.expect)(selector).to.exist;\n(0, _chai.expect)(selector).to.contain.text('This application is 7 steps long and it contains several substeps per step. We advise you sign in to save your progress.Note: You can sign in after you start your application. But you’ll lose any information you already filled in.');",
              "err": {},
              "uuid": "90ac06d6-6954-4d6a-90a0-fe0aa01430a2",
              "parentUUID": "487c1dbd-2ba9-4652-ad12-b756497615f1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should render sign in link",
              "fullTitle": "Unauthenticated warning alert should render sign in link",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _render3 = (0, _react2.render)( /*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n  store: mockStoreNotLoggedIn\n}, /*#__PURE__*/_react.default.createElement(_UnauthenticatedWarningAlert.default, null))),\n    container = _render3.container;\nvar link = container.querySelector('a');\n(0, _chai.expect)(link).to.exist;\n(0, _chai.expect)(link).to.contain.text('sign in to save your progress');",
              "err": {},
              "uuid": "e54f56c0-60dc-4ee6-831e-40c3f3da7dcf",
              "parentUUID": "487c1dbd-2ba9-4652-ad12-b756497615f1",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "26b3b747-b408-45be-ab23-51bea5996e5d",
            "0f8e28a2-a1da-4df8-9ce9-9eab19f50fe7",
            "90ac06d6-6954-4d6a-90a0-fe0aa01430a2",
            "e54f56c0-60dc-4ee6-831e-40c3f3da7dcf"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 4,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "218b7d94-dbe5-4cda-a6e2-3ebca089946b",
          "title": "pension add medical centers page",
          "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/chapters/03-health-and-employment-information/treatmentHistory.unit.spec.jsx",
          "file": "/src/applications/pensions/tests/chapters/03-health-and-employment-information/treatmentHistory.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should render web components in form correctly",
              "fullTitle": "pension add medical centers page should render web components in form correctly",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var medicalCenters = (0, _medicalCenters.default)();\nvar pageTitle = 'medical centers';\nvar expectedNumberOfFields = 1;\n(0, _pageTests.testNumberOfWebComponentFields)(_form.default, medicalCenters.schema, medicalCenters.uiSchema, expectedNumberOfFields, pageTitle);\nvar expectedNumberOfErrors = 1;\n(0, _pageTests.testNumberOfErrorsOnSubmitForWebComponents)(_form.default, medicalCenters.schema, medicalCenters.uiSchema, expectedNumberOfErrors, pageTitle);",
              "err": {},
              "uuid": "5e275bf2-ca56-4502-a14e-11db183172b2",
              "parentUUID": "218b7d94-dbe5-4cda-a6e2-3ebca089946b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "5e275bf2-ca56-4502-a14e-11db183172b2"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "0fc3b99d-380b-46eb-bc85-5ce08317a8ce",
          "title": "financial information home acreage pension page",
          "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/chapters/05-financial-information/homeAcreageMoreThanTwo.unit.spec.jsx",
          "file": "/src/applications/pensions/tests/chapters/05-financial-information/homeAcreageMoreThanTwo.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "3c1897aa-d2d1-450a-9129-3d8685483041",
              "title": "home acreage page",
              "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/chapters/05-financial-information/homeAcreageMoreThanTwo.unit.spec.jsx",
              "file": "/src/applications/pensions/tests/chapters/05-financial-information/homeAcreageMoreThanTwo.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should have appropriate number of web components",
                  "fullTitle": "financial information home acreage pension page home acreage page should have appropriate number of web components",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var _render3 = (0, _react2.render)( /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  definitions: formConfig.defaultDefinitions,\n  schema: schema,\n  uiSchema: uiSchema,\n  data: data,\n  formData: {}\n})),\n    container = _render3.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypesWebComponents)).to.have.lengthOf(expectedNumberOfFields);",
                  "err": {},
                  "uuid": "a9763791-8875-4002-9ced-3aadad322579",
                  "parentUUID": "3c1897aa-d2d1-450a-9129-3d8685483041",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "a9763791-8875-4002-9ced-3aadad322579"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 3,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "96f337e6-58c9-4af7-ba6c-bd58e5322d14",
              "title": "home acreage page",
              "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/chapters/05-financial-information/homeAcreageMoreThanTwo.unit.spec.jsx",
              "file": "/src/applications/pensions/tests/chapters/05-financial-information/homeAcreageMoreThanTwo.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should show the correct number of errors on submit for web components",
                  "fullTitle": "financial information home acreage pension page home acreage page should show the correct number of errors on submit for web components",
                  "timedOut": false,
                  "duration": 8,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var _render4 = (0, _react2.render)( /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  definitions: formConfig.defaultDefinitions,\n  schema: schema,\n  uiSchema: uiSchema,\n  data: data,\n  formData: {}\n})),\n    container = _render4.container,\n    getByRole = _render4.getByRole;\ngetByRole('button', {\n  name: /submit/i\n}).click();\nvar nodes = Array.from(container.querySelectorAll(\"\".concat(expectedFieldTypesWebComponents, \", \").concat(wrapperWebComponents)));\nvar errors = nodes.filter(function (node) {\n  return node.error;\n});\n(0, _chai.expect)(errors).to.have.lengthOf(expectedNumberOfErrors);",
                  "err": {},
                  "uuid": "ba264ff4-9efb-4c03-ac26-0506fd70903e",
                  "parentUUID": "96f337e6-58c9-4af7-ba6c-bd58e5322d14",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "ba264ff4-9efb-4c03-ac26-0506fd70903e"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 8,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "6962ac59-9277-4c66-a6f5-6cfb0186a934",
          "title": "<Military History />",
          "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/components/SectionField.unit.spec.jsx",
          "file": "/src/applications/pensions/tests/components/SectionField.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "it renders previous names",
              "fullTitle": "<Military History /> it renders previous names",
              "timedOut": false,
              "duration": 8,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _render = (0, _react2.render)( /*#__PURE__*/_react.default.createElement(_SectionField.MilitaryHistory, {\n  formData: formData\n})),\n    queryByText = _render.queryByText;\n(0, _chai.expect)(queryByText('John')).to.not.be.null;",
              "err": {},
              "uuid": "c6aef07c-fb6f-40f7-a4e0-e99c7918a51f",
              "parentUUID": "6962ac59-9277-4c66-a6f5-6cfb0186a934",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "it renders empty previous names",
              "fullTitle": "<Military History /> it renders empty previous names",
              "timedOut": false,
              "duration": 4,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var badPreviousNames = {\n  previousNames: [{\n    first: '',\n    middle: '',\n    last: ''\n  }]\n};\nvar _render2 = (0, _react2.render)( /*#__PURE__*/_react.default.createElement(_SectionField.MilitaryHistory, {\n  formData: badPreviousNames\n})),\n    queryByText = _render2.queryByText;\n(0, _chai.expect)(queryByText('None')).to.not.be.null;",
              "err": {},
              "uuid": "183e5b76-e2e5-4f89-b883-62232134f8e8",
              "parentUUID": "6962ac59-9277-4c66-a6f5-6cfb0186a934",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "c6aef07c-fb6f-40f7-a4e0-e99c7918a51f",
            "183e5b76-e2e5-4f89-b883-62232134f8e8"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 12,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "20e7c5a0-4380-4565-b1c9-ed46fdbd33a0",
          "title": "Child information page",
          "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/chapters/04-household-information/dependentChildInformation.unit.spec.jsx",
          "file": "/src/applications/pensions/tests/chapters/04-household-information/dependentChildInformation.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should ask if the child is in school (18-23 years old)",
              "fullTitle": "Child information page should ask if the child is in school (18-23 years old)",
              "timedOut": false,
              "duration": 16,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var onSubmit = _sinon.default.spy();\nvar _render5 = (0, _react2.render)( /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  arrayPath: arrayPath,\n  pagePerItemIndex: 0,\n  definitions: _form.default.defaultDefinitions,\n  schema: schema,\n  data: dependentData,\n  onSubmit: onSubmit,\n  uiSchema: uiSchema\n})),\n    container = _render5.container;\n(0, _chai.expect)((0, _index.$)('#root_attendingCollegeYes', container)).to.not.be.null;",
              "err": {},
              "uuid": "a4c8feb4-fefb-439c-884c-a07e8ca3df68",
              "parentUUID": "20e7c5a0-4380-4565-b1c9-ed46fdbd33a0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should submit with valid data",
              "fullTitle": "Child information page should submit with valid data",
              "timedOut": false,
              "duration": 33,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); });",
              "err": {},
              "uuid": "22187519-136e-467a-bfc6-19d69f806a33",
              "parentUUID": "20e7c5a0-4380-4565-b1c9-ed46fdbd33a0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should not ask if the child is disabled",
              "fullTitle": "Child information page should not ask if the child is disabled",
              "timedOut": false,
              "duration": 10,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var onSubmit = _sinon.default.spy();\nvar _render8 = (0, _react2.render)( /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  arrayPath: arrayPath,\n  pagePerItemIndex: 0,\n  definitions: _form.default.defaultDefinitions,\n  schema: schema,\n  data: dependentData,\n  onSubmit: onSubmit,\n  uiSchema: uiSchema\n})),\n    container = _render8.container;\n(0, _chai.expect)((0, _index.$)('#root_disabledYes', container)).to.be.null;",
              "err": {},
              "uuid": "c17e3f61-b7a7-4618-851c-cbb40309ee88",
              "parentUUID": "20e7c5a0-4380-4565-b1c9-ed46fdbd33a0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should not require ssn if noSSN is checked",
              "fullTitle": "Child information page should not require ssn if noSSN is checked",
              "timedOut": false,
              "duration": 21,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); });",
              "err": {},
              "uuid": "ffba6b8f-e60b-47cb-a69b-fa1a11221e48",
              "parentUUID": "20e7c5a0-4380-4565-b1c9-ed46fdbd33a0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should show errors when required fields are empty",
              "fullTitle": "Child information page should show errors when required fields are empty",
              "timedOut": false,
              "duration": 10,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); });",
              "err": {},
              "uuid": "7cdc3193-3856-491d-b6b2-80f2084aaa64",
              "parentUUID": "20e7c5a0-4380-4565-b1c9-ed46fdbd33a0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should set the title to the dependents name if available",
              "fullTitle": "Child information page should set the title to the dependents name if available",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, _chai.expect)(title(dependentData.dependents[0])).to.eql('Jane Doe information');\n(0, _chai.expect)(title({\n  fullName: {}\n})).to.eql('  information');",
              "err": {},
              "uuid": "e75b379d-d814-46c2-a87b-c6e06e673f00",
              "parentUUID": "20e7c5a0-4380-4565-b1c9-ed46fdbd33a0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should not ask if the child is in school",
              "fullTitle": "Child information page should not ask if the child is in school",
              "timedOut": false,
              "duration": 8,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var onSubmit = _sinon.default.spy();\nvar _render6 = (0, _react2.render)( /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  arrayPath: arrayPath,\n  pagePerItemIndex: 0,\n  definitions: _form.default.defaultDefinitions,\n  schema: schema,\n  data: _objectSpread(_objectSpread({}, dependentData), {}, {\n    dependents: [_objectSpread(_objectSpread({}, dependentData.dependents[0]), {}, {\n      childDateOfBirth: (0, _moment.default)().subtract(5, 'years').toISOString()\n    })]\n  }),\n  onSubmit: onSubmit,\n  uiSchema: uiSchema\n})),\n    container = _render6.container;\n(0, _chai.expect)((0, _index.$)('#root_attendingCollegeYes', container)).to.be.null;",
              "err": {},
              "uuid": "665a381c-0177-422a-8203-4b174fec09e0",
              "parentUUID": "20e7c5a0-4380-4565-b1c9-ed46fdbd33a0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should ask if the child is disabled (Under 18 years old)",
              "fullTitle": "Child information page should ask if the child is disabled (Under 18 years old)",
              "timedOut": false,
              "duration": 11,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var onSubmit = _sinon.default.spy();\nvar _render7 = (0, _react2.render)( /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  arrayPath: arrayPath,\n  pagePerItemIndex: 0,\n  definitions: _form.default.defaultDefinitions,\n  schema: schema,\n  data: _objectSpread(_objectSpread({}, dependentData), {}, {\n    dependents: [_objectSpread(_objectSpread({}, dependentData.dependents[0]), {}, {\n      childDateOfBirth: (0, _moment.default)().subtract(10, 'years').toISOString()\n    })]\n  }),\n  onSubmit: onSubmit,\n  uiSchema: uiSchema\n})),\n    container = _render7.container;\n(0, _chai.expect)((0, _index.$)('#root_disabledYes', container)).to.not.be.null;",
              "err": {},
              "uuid": "6185eaad-271d-4a22-a3b3-5185e295f833",
              "parentUUID": "20e7c5a0-4380-4565-b1c9-ed46fdbd33a0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should render all fields",
              "fullTitle": "Child information page should render all fields",
              "timedOut": false,
              "duration": 10,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); });",
              "err": {},
              "uuid": "0ad202d4-b81c-4b6b-ba7f-67a8304330e9",
              "parentUUID": "20e7c5a0-4380-4565-b1c9-ed46fdbd33a0",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a4c8feb4-fefb-439c-884c-a07e8ca3df68",
            "22187519-136e-467a-bfc6-19d69f806a33",
            "c17e3f61-b7a7-4618-851c-cbb40309ee88",
            "ffba6b8f-e60b-47cb-a69b-fa1a11221e48",
            "7cdc3193-3856-491d-b6b2-80f2084aaa64",
            "e75b379d-d814-46c2-a87b-c6e06e673f00",
            "665a381c-0177-422a-8203-4b174fec09e0",
            "6185eaad-271d-4a22-a3b3-5185e295f833",
            "0ad202d4-b81c-4b6b-ba7f-67a8304330e9"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 119,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "4536e6e2-b184-4160-b192-3326149e9e37",
          "title": "Pensions SpouseMarriageTitle",
          "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/components/SpouseMarriageTitle.unit.spec.jsx",
          "file": "/src/applications/pensions/tests/components/SpouseMarriageTitle.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should render multi-marriage title",
              "fullTitle": "Pensions SpouseMarriageTitle should render multi-marriage title",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var tree = _skinDeep.default.shallowRender( /*#__PURE__*/_react.default.createElement(_SpouseMarriageTitle.default, {\n  id: \"id\",\n  formData: {\n    spouseMarriages: [{}, {}]\n  }\n}));\n(0, _chai.expect)(tree.text()).to.contain('Spouse’s former marriages');",
              "err": {},
              "uuid": "e682a38a-3159-4526-9ca6-2294ab6267be",
              "parentUUID": "4536e6e2-b184-4160-b192-3326149e9e37",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should render single marriage title",
              "fullTitle": "Pensions SpouseMarriageTitle should render single marriage title",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var tree = _skinDeep.default.shallowRender( /*#__PURE__*/_react.default.createElement(_SpouseMarriageTitle.default, {\n  id: \"id\",\n  formData: {\n    spouseMarriages: [{}]\n  }\n}));\n(0, _chai.expect)(tree.text()).to.contain('Spouse’s former marriage');",
              "err": {},
              "uuid": "422fec20-0c4c-4b1e-89b4-bb32cdfe375f",
              "parentUUID": "4536e6e2-b184-4160-b192-3326149e9e37",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "e682a38a-3159-4526-9ca6-2294ab6267be",
            "422fec20-0c4c-4b1e-89b4-bb32cdfe375f"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "d9165908-58cf-4890-bded-c0ff3ee26b1a",
          "title": "medicaid coverage pension page",
          "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/chapters/03-health-and-employment-information/medicaidCoverage.unit.spec.jsx",
          "file": "/src/applications/pensions/tests/chapters/03-health-and-employment-information/medicaidCoverage.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "68ae717d-ae0f-42d6-bf1b-be1c18a9aec0",
              "title": "medicaid coverage page",
              "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/chapters/03-health-and-employment-information/medicaidCoverage.unit.spec.jsx",
              "file": "/src/applications/pensions/tests/chapters/03-health-and-employment-information/medicaidCoverage.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should have appropriate number of web components",
                  "fullTitle": "medicaid coverage pension page medicaid coverage page should have appropriate number of web components",
                  "timedOut": false,
                  "duration": 6,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var _render3 = (0, _react2.render)( /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  definitions: formConfig.defaultDefinitions,\n  schema: schema,\n  uiSchema: uiSchema,\n  data: data,\n  formData: {}\n})),\n    container = _render3.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypesWebComponents)).to.have.lengthOf(expectedNumberOfFields);",
                  "err": {},
                  "uuid": "ff9bae8d-612f-4680-8948-d8639892070a",
                  "parentUUID": "68ae717d-ae0f-42d6-bf1b-be1c18a9aec0",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "ff9bae8d-612f-4680-8948-d8639892070a"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 6,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "bed8a89b-0eb0-4983-8a75-3530b5aa5efd",
              "title": "medicaid coverage page",
              "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/chapters/03-health-and-employment-information/medicaidCoverage.unit.spec.jsx",
              "file": "/src/applications/pensions/tests/chapters/03-health-and-employment-information/medicaidCoverage.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should show the correct number of errors on submit for web components",
                  "fullTitle": "medicaid coverage pension page medicaid coverage page should show the correct number of errors on submit for web components",
                  "timedOut": false,
                  "duration": 8,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var _render4 = (0, _react2.render)( /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  definitions: formConfig.defaultDefinitions,\n  schema: schema,\n  uiSchema: uiSchema,\n  data: data,\n  formData: {}\n})),\n    container = _render4.container,\n    getByRole = _render4.getByRole;\ngetByRole('button', {\n  name: /submit/i\n}).click();\nvar nodes = Array.from(container.querySelectorAll(\"\".concat(expectedFieldTypesWebComponents, \", \").concat(wrapperWebComponents)));\nvar errors = nodes.filter(function (node) {\n  return node.error;\n});\n(0, _chai.expect)(errors).to.have.lengthOf(expectedNumberOfErrors);",
                  "err": {},
                  "uuid": "52f7156e-1653-4b16-bcee-a4e1e0a5e3d3",
                  "parentUUID": "bed8a89b-0eb0-4983-8a75-3530b5aa5efd",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "52f7156e-1653-4b16-bcee-a4e1e0a5e3d3"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 8,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "448cd76d-a39c-468a-a490-3059101d3ee7",
          "title": "Financial information total net worth pension page",
          "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/chapters/05-financial-information/totalNetWorth.unit.spec.jsx",
          "file": "/src/applications/pensions/tests/chapters/05-financial-information/totalNetWorth.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "649c7557-54f0-487d-b165-949bdc6fc375",
              "title": "total net worth page",
              "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/chapters/05-financial-information/totalNetWorth.unit.spec.jsx",
              "file": "/src/applications/pensions/tests/chapters/05-financial-information/totalNetWorth.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should show the correct number of errors on submit for web components",
                  "fullTitle": "Financial information total net worth pension page total net worth page should show the correct number of errors on submit for web components",
                  "timedOut": false,
                  "duration": 11,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var _render4 = (0, _react2.render)( /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  definitions: formConfig.defaultDefinitions,\n  schema: schema,\n  uiSchema: uiSchema,\n  data: data,\n  formData: {}\n})),\n    container = _render4.container,\n    getByRole = _render4.getByRole;\ngetByRole('button', {\n  name: /submit/i\n}).click();\nvar nodes = Array.from(container.querySelectorAll(\"\".concat(expectedFieldTypesWebComponents, \", \").concat(wrapperWebComponents)));\nvar errors = nodes.filter(function (node) {\n  return node.error;\n});\n(0, _chai.expect)(errors).to.have.lengthOf(expectedNumberOfErrors);",
                  "err": {},
                  "uuid": "b280fa35-5007-41f7-be08-bc30e0c7f4ec",
                  "parentUUID": "649c7557-54f0-487d-b165-949bdc6fc375",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "b280fa35-5007-41f7-be08-bc30e0c7f4ec"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 11,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "559497b6-95da-483d-bdd8-618eaf0604f3",
              "title": "total net worth page",
              "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/chapters/05-financial-information/totalNetWorth.unit.spec.jsx",
              "file": "/src/applications/pensions/tests/chapters/05-financial-information/totalNetWorth.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should have appropriate number of web components",
                  "fullTitle": "Financial information total net worth pension page total net worth page should have appropriate number of web components",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var _render3 = (0, _react2.render)( /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  definitions: formConfig.defaultDefinitions,\n  schema: schema,\n  uiSchema: uiSchema,\n  data: data,\n  formData: {}\n})),\n    container = _render3.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypesWebComponents)).to.have.lengthOf(expectedNumberOfFields);",
                  "err": {},
                  "uuid": "49001017-2cc1-4a4d-84e3-3e42ed85eab9",
                  "parentUUID": "559497b6-95da-483d-bdd8-618eaf0604f3",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "49001017-2cc1-4a4d-84e3-3e42ed85eab9"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 3,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "48dea9e0-4e5b-4c61-aefc-7b84a349693f",
          "title": "pension spouse marriage history page",
          "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/chapters/04-household-information/spouseMarriageHistory.unit.spec.jsx",
          "file": "/src/applications/pensions/tests/chapters/04-household-information/spouseMarriageHistory.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should render with all fields and buttons",
              "fullTitle": "pension spouse marriage history page should render with all fields and buttons",
              "timedOut": false,
              "duration": 7,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); });",
              "err": {},
              "uuid": "4fb05c64-b88f-423d-bfca-18fa4491830e",
              "parentUUID": "48dea9e0-4e5b-4c61-aefc-7b84a349693f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should not allow submit with errors",
              "fullTitle": "pension spouse marriage history page should not allow submit with errors",
              "timedOut": false,
              "duration": 16,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); });",
              "err": {},
              "uuid": "63bc3fee-5ada-4ab8-99e6-9388a4a65cc9",
              "parentUUID": "48dea9e0-4e5b-4c61-aefc-7b84a349693f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "4fb05c64-b88f-423d-bfca-18fa4491830e",
            "63bc3fee-5ada-4ab8-99e6-9388a4a65cc9"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 23,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "c517c56f-a2af-4fc9-a05a-d34385a93af7",
          "title": "pension medical condition page",
          "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/chapters/03-health-and-employment-information/medicalCondition.unit.spec.jsx",
          "file": "/src/applications/pensions/tests/chapters/03-health-and-employment-information/medicalCondition.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "ae1b33e7-c15c-4a00-8d4c-25255b081e9f",
              "title": "medical condition information page",
              "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/chapters/03-health-and-employment-information/medicalCondition.unit.spec.jsx",
              "file": "/src/applications/pensions/tests/chapters/03-health-and-employment-information/medicalCondition.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should have appropriate number of web components",
                  "fullTitle": "pension medical condition page medical condition information page should have appropriate number of web components",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var _render3 = (0, _react2.render)( /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  definitions: formConfig.defaultDefinitions,\n  schema: schema,\n  uiSchema: uiSchema,\n  data: data,\n  formData: {}\n})),\n    container = _render3.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypesWebComponents)).to.have.lengthOf(expectedNumberOfFields);",
                  "err": {},
                  "uuid": "a6e36557-463f-445d-aafd-cab0daa50274",
                  "parentUUID": "ae1b33e7-c15c-4a00-8d4c-25255b081e9f",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "a6e36557-463f-445d-aafd-cab0daa50274"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "0432216b-6697-4aa5-b18a-f4322e081545",
              "title": "medical condition information page",
              "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/chapters/03-health-and-employment-information/medicalCondition.unit.spec.jsx",
              "file": "/src/applications/pensions/tests/chapters/03-health-and-employment-information/medicalCondition.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should show the correct number of errors on submit for web components",
                  "fullTitle": "pension medical condition page medical condition information page should show the correct number of errors on submit for web components",
                  "timedOut": false,
                  "duration": 7,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var _render4 = (0, _react2.render)( /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  definitions: formConfig.defaultDefinitions,\n  schema: schema,\n  uiSchema: uiSchema,\n  data: data,\n  formData: {}\n})),\n    container = _render4.container,\n    getByRole = _render4.getByRole;\ngetByRole('button', {\n  name: /submit/i\n}).click();\nvar nodes = Array.from(container.querySelectorAll(\"\".concat(expectedFieldTypesWebComponents, \", \").concat(wrapperWebComponents)));\nvar errors = nodes.filter(function (node) {\n  return node.error;\n});\n(0, _chai.expect)(errors).to.have.lengthOf(expectedNumberOfErrors);",
                  "err": {},
                  "uuid": "317497cc-ec43-4415-833c-5c3eae1f9441",
                  "parentUUID": "0432216b-6697-4aa5-b18a-f4322e081545",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "317497cc-ec43-4415-833c-5c3eae1f9441"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 7,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "8eb352be-251f-40d6-96ce-fba9198b4181",
          "title": "Supporting documents pension page",
          "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/chapters/06-additional-information/supportingDocuments.unit.spec.jsx",
          "file": "/src/applications/pensions/tests/chapters/06-additional-information/supportingDocuments.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "23bf369a-0aae-46f2-8dd9-ea60f88fc21b",
              "title": "Supporting documents page",
              "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/chapters/06-additional-information/supportingDocuments.unit.spec.jsx",
              "file": "/src/applications/pensions/tests/chapters/06-additional-information/supportingDocuments.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should have appropriate number of fields",
                  "fullTitle": "Supporting documents pension page Supporting documents page should have appropriate number of fields",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var _render = (0, _react2.render)( /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  definitions: formConfig.defaultDefinitions,\n  schema: schema,\n  uiSchema: uiSchema,\n  data: data,\n  formData: {}\n})),\n    container = _render.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypes)).to.have.lengthOf(expectedNumberOfFields);",
                  "err": {},
                  "uuid": "102c820b-8dcd-4c7d-b071-a644e02e0b64",
                  "parentUUID": "23bf369a-0aae-46f2-8dd9-ea60f88fc21b",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "102c820b-8dcd-4c7d-b071-a644e02e0b64"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "db6c94cd-63b8-4ce0-ab50-2717ab2c1996",
          "title": "medicaid status pension page",
          "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/chapters/03-health-and-employment-information/medicaidStatus.unit.spec.jsx",
          "file": "/src/applications/pensions/tests/chapters/03-health-and-employment-information/medicaidStatus.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "bd674e53-4727-4bf9-b151-8524a5dbe28d",
              "title": "medicaid status page",
              "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/chapters/03-health-and-employment-information/medicaidStatus.unit.spec.jsx",
              "file": "/src/applications/pensions/tests/chapters/03-health-and-employment-information/medicaidStatus.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should show the correct number of errors on submit for web components",
                  "fullTitle": "medicaid status pension page medicaid status page should show the correct number of errors on submit for web components",
                  "timedOut": false,
                  "duration": 8,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var _render4 = (0, _react2.render)( /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  definitions: formConfig.defaultDefinitions,\n  schema: schema,\n  uiSchema: uiSchema,\n  data: data,\n  formData: {}\n})),\n    container = _render4.container,\n    getByRole = _render4.getByRole;\ngetByRole('button', {\n  name: /submit/i\n}).click();\nvar nodes = Array.from(container.querySelectorAll(\"\".concat(expectedFieldTypesWebComponents, \", \").concat(wrapperWebComponents)));\nvar errors = nodes.filter(function (node) {\n  return node.error;\n});\n(0, _chai.expect)(errors).to.have.lengthOf(expectedNumberOfErrors);",
                  "err": {},
                  "uuid": "026cee66-0306-42e6-a2ca-e218d2d9eb5f",
                  "parentUUID": "bd674e53-4727-4bf9-b151-8524a5dbe28d",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "026cee66-0306-42e6-a2ca-e218d2d9eb5f"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 8,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "ba055236-6025-4e77-a33c-3dd48e58a006",
              "title": "medicaid status page",
              "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/chapters/03-health-and-employment-information/medicaidStatus.unit.spec.jsx",
              "file": "/src/applications/pensions/tests/chapters/03-health-and-employment-information/medicaidStatus.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should have appropriate number of web components",
                  "fullTitle": "medicaid status pension page medicaid status page should have appropriate number of web components",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var _render3 = (0, _react2.render)( /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  definitions: formConfig.defaultDefinitions,\n  schema: schema,\n  uiSchema: uiSchema,\n  data: data,\n  formData: {}\n})),\n    container = _render3.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypesWebComponents)).to.have.lengthOf(expectedNumberOfFields);",
                  "err": {},
                  "uuid": "0adba07e-7180-4808-a206-45c5c4adde22",
                  "parentUUID": "ba055236-6025-4e77-a33c-3dd48e58a006",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "0adba07e-7180-4808-a206-45c5c4adde22"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 3,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "4d104254-0498-466e-8766-bb42b9061723",
          "title": "Pensions document upload",
          "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/config/documents.unit.spec.jsx",
          "file": "/src/applications/pensions/tests/config/documents.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should submit with valid data",
              "fullTitle": "Pensions document upload should submit with valid data",
              "timedOut": false,
              "duration": 18,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var onSubmit = _sinon.default.spy();\nvar form = (0, _react2.render)( /*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n  store: _helpers.uploadStore\n}, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  schema: schema,\n  data: {\n    files: [{\n      confirmationCode: 'testing'\n    }, {\n      confirmationCode: 'testing2'\n    }]\n  },\n  definitions: _form.default.defaultDefinitions,\n  onSubmit: onSubmit,\n  uiSchema: uiSchema\n})));\nvar formDOM = (0, _schemaformUtils.getFormDOM)(form);\nformDOM.submitForm();\n(0, _chai.expect)(onSubmit.called).to.be.true;",
              "err": {},
              "uuid": "234ef538-2926-453d-b8f2-e764a921174b",
              "parentUUID": "4d104254-0498-466e-8766-bb42b9061723",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should render",
              "fullTitle": "Pensions document upload should render",
              "timedOut": false,
              "duration": 4,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var form = (0, _react2.render)( /*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n  store: _helpers.uploadStore\n}, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  schema: schema,\n  definitions: _form.default.defaultDefinitions,\n  uiSchema: uiSchema,\n  data: {}\n})));\nvar formDOM = (0, _schemaformUtils.getFormDOM)(form);\n(0, _chai.expect)(formDOM.querySelectorAll('input,select').length).to.equal(1);",
              "err": {},
              "uuid": "647cf4c1-074d-46e0-9e87-6975880eceeb",
              "parentUUID": "4d104254-0498-466e-8766-bb42b9061723",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should submit empty form",
              "fullTitle": "Pensions document upload should submit empty form",
              "timedOut": false,
              "duration": 5,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var onSubmit = _sinon.default.spy();\nvar form = (0, _react2.render)( /*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n  store: _helpers.uploadStore\n}, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  schema: schema,\n  definitions: _form.default.defaultDefinitions,\n  onSubmit: onSubmit,\n  uiSchema: uiSchema,\n  data: {}\n})));\nvar formDOM = (0, _schemaformUtils.getFormDOM)(form);\nformDOM.submitForm();\n(0, _chai.expect)(formDOM.querySelectorAll('.usa-input-error').length).to.equal(0);\n(0, _chai.expect)(onSubmit.called).to.be.true;",
              "err": {},
              "uuid": "610bf66f-ebd4-4a0e-b381-4115a0c699d5",
              "parentUUID": "4d104254-0498-466e-8766-bb42b9061723",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "234ef538-2926-453d-b8f2-e764a921174b",
            "647cf4c1-074d-46e0-9e87-6975880eceeb",
            "610bf66f-ebd4-4a0e-b381-4115a0c699d5"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 27,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "6839da3e-7274-48b0-b6f9-6373d30ffdb1",
          "title": "pension <SpecialMonthlyPensionEvidenceAlert>",
          "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/components/FormAlerts/FormAlerts.unit.spec.jsx",
          "file": "/src/applications/pensions/tests/components/FormAlerts/FormAlerts.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should render",
              "fullTitle": "pension <SpecialMonthlyPensionEvidenceAlert> should render",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _render2 = (0, _react2.render)( /*#__PURE__*/_react.default.createElement(_FormAlerts.SpecialMonthlyPensionEvidenceAlert, null)),\n    container = _render2.container;\nvar selector = container.querySelector('va-alert');\n(0, _chai.expect)(selector).to.exist;\n(0, _chai.expect)(selector).to.contain.attr('status', 'warning');",
              "err": {},
              "uuid": "d03cc65f-f9e6-40e2-b1c6-ccea840dac52",
              "parentUUID": "6839da3e-7274-48b0-b6f9-6373d30ffdb1",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "d03cc65f-f9e6-40e2-b1c6-ccea840dac52"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "655068df-6a48-4d9f-8e4d-c9b18fa72d75",
          "title": "pension current employment page",
          "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/chapters/03-health-and-employment-information/currentEmployment.unit.spec.jsx",
          "file": "/src/applications/pensions/tests/chapters/03-health-and-employment-information/currentEmployment.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "4e1a8fed-316d-41f8-8fbb-b60752462101",
              "title": "current employment information page",
              "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/chapters/03-health-and-employment-information/currentEmployment.unit.spec.jsx",
              "file": "/src/applications/pensions/tests/chapters/03-health-and-employment-information/currentEmployment.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should show the correct number of errors on submit for web components",
                  "fullTitle": "pension current employment page current employment information page should show the correct number of errors on submit for web components",
                  "timedOut": false,
                  "duration": 8,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var _render4 = (0, _react2.render)( /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  definitions: formConfig.defaultDefinitions,\n  schema: schema,\n  uiSchema: uiSchema,\n  data: data,\n  formData: {}\n})),\n    container = _render4.container,\n    getByRole = _render4.getByRole;\ngetByRole('button', {\n  name: /submit/i\n}).click();\nvar nodes = Array.from(container.querySelectorAll(\"\".concat(expectedFieldTypesWebComponents, \", \").concat(wrapperWebComponents)));\nvar errors = nodes.filter(function (node) {\n  return node.error;\n});\n(0, _chai.expect)(errors).to.have.lengthOf(expectedNumberOfErrors);",
                  "err": {},
                  "uuid": "62f25299-ee0e-4c7f-a424-0a4bc50f1ddb",
                  "parentUUID": "4e1a8fed-316d-41f8-8fbb-b60752462101",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "62f25299-ee0e-4c7f-a424-0a4bc50f1ddb"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 8,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "3b4dbcbc-a531-4421-9dc7-8aba0544cb36",
              "title": "current employment information page",
              "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/chapters/03-health-and-employment-information/currentEmployment.unit.spec.jsx",
              "file": "/src/applications/pensions/tests/chapters/03-health-and-employment-information/currentEmployment.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should have appropriate number of web components",
                  "fullTitle": "pension current employment page current employment information page should have appropriate number of web components",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var _render3 = (0, _react2.render)( /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  definitions: formConfig.defaultDefinitions,\n  schema: schema,\n  uiSchema: uiSchema,\n  data: data,\n  formData: {}\n})),\n    container = _render3.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypesWebComponents)).to.have.lengthOf(expectedNumberOfFields);",
                  "err": {},
                  "uuid": "80a26a16-4ef4-4b73-b78c-d23f43dfac8d",
                  "parentUUID": "3b4dbcbc-a531-4421-9dc7-8aba0544cb36",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "80a26a16-4ef4-4b73-b78c-d23f43dfac8d"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 3,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "9ad3278f-649e-4e9f-a528-1114448b972c",
          "title": "Unreimbursed medical expenses pension page",
          "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/chapters/05-financial-information/medicalExpenses.unit.spec.jsx",
          "file": "/src/applications/pensions/tests/chapters/05-financial-information/medicalExpenses.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "0cc7df8a-ca51-4e25-b7d0-a6ab88d42a5d",
              "title": "Medical expenses page",
              "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/chapters/05-financial-information/medicalExpenses.unit.spec.jsx",
              "file": "/src/applications/pensions/tests/chapters/05-financial-information/medicalExpenses.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should have appropriate number of web components",
                  "fullTitle": "Unreimbursed medical expenses pension page Medical expenses page should have appropriate number of web components",
                  "timedOut": false,
                  "duration": 5,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var _render3 = (0, _react2.render)( /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  definitions: formConfig.defaultDefinitions,\n  schema: schema,\n  uiSchema: uiSchema,\n  data: data,\n  formData: {}\n})),\n    container = _render3.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypesWebComponents)).to.have.lengthOf(expectedNumberOfFields);",
                  "err": {},
                  "uuid": "778fd4a2-cf98-4598-bf3d-80290c95a23d",
                  "parentUUID": "0cc7df8a-ca51-4e25-b7d0-a6ab88d42a5d",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "778fd4a2-cf98-4598-bf3d-80290c95a23d"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 5,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "ec278891-2bc6-42e6-994f-824a860897a3",
              "title": "Medical expenses page",
              "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/chapters/05-financial-information/medicalExpenses.unit.spec.jsx",
              "file": "/src/applications/pensions/tests/chapters/05-financial-information/medicalExpenses.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should show the correct number of errors on submit for web components",
                  "fullTitle": "Unreimbursed medical expenses pension page Medical expenses page should show the correct number of errors on submit for web components",
                  "timedOut": false,
                  "duration": 15,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var _render4 = (0, _react2.render)( /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  definitions: formConfig.defaultDefinitions,\n  schema: schema,\n  uiSchema: uiSchema,\n  data: data,\n  formData: {}\n})),\n    container = _render4.container,\n    getByRole = _render4.getByRole;\ngetByRole('button', {\n  name: /submit/i\n}).click();\nvar nodes = Array.from(container.querySelectorAll(\"\".concat(expectedFieldTypesWebComponents, \", \").concat(wrapperWebComponents)));\nvar errors = nodes.filter(function (node) {\n  return node.error;\n});\n(0, _chai.expect)(errors).to.have.lengthOf(expectedNumberOfErrors);",
                  "err": {},
                  "uuid": "f86b6d11-b57b-4c82-b2e3-671249b27ae1",
                  "parentUUID": "ec278891-2bc6-42e6-994f-824a860897a3",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "f86b6d11-b57b-4c82-b2e3-671249b27ae1"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 15,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "ea5dd1d0-2527-40ed-878b-eb0b7cea5006",
          "title": "Pensions directDeposit",
          "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/config/directDeposit.unit.spec.jsx",
          "file": "/src/applications/pensions/tests/config/directDeposit.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should submit with valid data",
              "fullTitle": "Pensions directDeposit should submit with valid data",
              "timedOut": false,
              "duration": 12,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var onSubmit = _sinon.default.spy();\nvar form = _testUtils.default.renderIntoDocument( /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  schema: schema,\n  data: {},\n  onSubmit: onSubmit,\n  uiSchema: uiSchema\n}));\nvar formDOM = (0, _schemaformUtils.getFormDOM)(form);\nformDOM.fillData('#root_bankAccount_accountType_0', 'checking');\nformDOM.fillData('#root_bankAccount_accountNumber', '1234');\nformDOM.fillData('#root_bankAccount_routingNumber', '122105155');\nformDOM.submitForm(form);\n(0, _chai.expect)(formDOM.querySelectorAll('.usa-input-error').length).to.equal(0);\n(0, _chai.expect)(onSubmit.called).to.be.true;",
              "err": {},
              "uuid": "4d6cea30-0d88-4271-bb30-42a32d2b3811",
              "parentUUID": "ea5dd1d0-2527-40ed-878b-eb0b7cea5006",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should require bank account fields",
              "fullTitle": "Pensions directDeposit should require bank account fields",
              "timedOut": false,
              "duration": 6,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var form = _testUtils.default.renderIntoDocument( /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  schema: schema,\n  data: {},\n  uiSchema: uiSchema\n}));\nvar formDOM = (0, _schemaformUtils.getFormDOM)(form);\n(0, _chai.expect)(formDOM.querySelectorAll('input').length).to.equal(6);\nformDOM.submitForm(form);\n(0, _chai.expect)(formDOM.querySelectorAll('.usa-input-error').length).to.equal(3);",
              "err": {},
              "uuid": "749aba3f-df6f-480b-888c-9f11274382a4",
              "parentUUID": "ea5dd1d0-2527-40ed-878b-eb0b7cea5006",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should show error on bad routing number",
              "fullTitle": "Pensions directDeposit should show error on bad routing number",
              "timedOut": false,
              "duration": 7,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var form = _testUtils.default.renderIntoDocument( /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  schema: schema,\n  data: {},\n  uiSchema: uiSchema\n}));\nvar formDOM = (0, _schemaformUtils.getFormDOM)(form);\nvar routingNumber = formDOM.querySelector('#root_bankAccount_routingNumber');\nformDOM.fillData('#root_bankAccount_routingNumber', '01234567');\n_testUtils.default.Simulate.blur(routingNumber);\n(0, _chai.expect)(formDOM.querySelector('.usa-input-error #root_bankAccount_routingNumber')).not.to.be.null;",
              "err": {},
              "uuid": "75ac46b1-6a61-4a7d-bbf5-bf17abe3900a",
              "parentUUID": "ea5dd1d0-2527-40ed-878b-eb0b7cea5006",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should render",
              "fullTitle": "Pensions directDeposit should render",
              "timedOut": false,
              "duration": 5,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var form = _testUtils.default.renderIntoDocument( /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  schema: schema,\n  data: {},\n  uiSchema: uiSchema\n}));\nvar formDOM = (0, _schemaformUtils.getFormDOM)(form);\n(0, _chai.expect)(formDOM.querySelectorAll('input').length).to.equal(6);",
              "err": {},
              "uuid": "44565228-a620-4d3c-9fa7-5ea996eb7937",
              "parentUUID": "ea5dd1d0-2527-40ed-878b-eb0b7cea5006",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should render stop message",
              "fullTitle": "Pensions directDeposit should render stop message",
              "timedOut": false,
              "duration": 6,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var form = _testUtils.default.renderIntoDocument( /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  schema: schema,\n  data: {},\n  uiSchema: uiSchema\n}));\nvar formDOM = (0, _schemaformUtils.getFormDOM)(form);\nformDOM.setCheckbox('#root_view\\\\:noDirectDeposit', true);\n(0, _chai.expect)(formDOM.querySelector('.pension-dd-warning')).to.not.be.null;\n(0, _chai.expect)(formDOM.querySelectorAll('input').length).to.equal(1);",
              "err": {},
              "uuid": "ec335dfd-b84c-4b61-a661-a292b4262e27",
              "parentUUID": "ea5dd1d0-2527-40ed-878b-eb0b7cea5006",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "4d6cea30-0d88-4271-bb30-42a32d2b3811",
            "749aba3f-df6f-480b-888c-9f11274382a4",
            "75ac46b1-6a61-4a7d-bbf5-bf17abe3900a",
            "44565228-a620-4d3c-9fa7-5ea996eb7937",
            "ec335dfd-b84c-4b61-a661-a292b4262e27"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 36,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "5985f150-be7f-4b7d-98af-4ca2360b5e12",
          "title": "web component tests",
          "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/chapters/02-military-history/pow.unit.spec.jsx",
          "file": "/src/applications/pensions/tests/chapters/02-military-history/pow.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "7f29a2f1-13fd-411f-9faa-ccc9137ae603",
              "title": "military history page",
              "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/chapters/02-military-history/pow.unit.spec.jsx",
              "file": "/src/applications/pensions/tests/chapters/02-military-history/pow.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should show the correct number of errors on submit for web components",
                  "fullTitle": "web component tests military history page should show the correct number of errors on submit for web components",
                  "timedOut": false,
                  "duration": 8,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var _render4 = (0, _react2.render)( /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  definitions: formConfig.defaultDefinitions,\n  schema: schema,\n  uiSchema: uiSchema,\n  data: data,\n  formData: {}\n})),\n    container = _render4.container,\n    getByRole = _render4.getByRole;\ngetByRole('button', {\n  name: /submit/i\n}).click();\nvar nodes = Array.from(container.querySelectorAll(\"\".concat(expectedFieldTypesWebComponents, \", \").concat(wrapperWebComponents)));\nvar errors = nodes.filter(function (node) {\n  return node.error;\n});\n(0, _chai.expect)(errors).to.have.lengthOf(expectedNumberOfErrors);",
                  "err": {},
                  "uuid": "b45bc897-965b-48f6-9c26-c2fa178b381f",
                  "parentUUID": "7f29a2f1-13fd-411f-9faa-ccc9137ae603",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "b45bc897-965b-48f6-9c26-c2fa178b381f"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 8,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "bd469180-47c5-4325-9d1d-d5c5bba4488f",
              "title": "military history page",
              "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/chapters/02-military-history/pow.unit.spec.jsx",
              "file": "/src/applications/pensions/tests/chapters/02-military-history/pow.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should have appropriate number of web components",
                  "fullTitle": "web component tests military history page should have appropriate number of web components",
                  "timedOut": false,
                  "duration": 5,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var _render3 = (0, _react2.render)( /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  definitions: formConfig.defaultDefinitions,\n  schema: schema,\n  uiSchema: uiSchema,\n  data: data,\n  formData: {}\n})),\n    container = _render3.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypesWebComponents)).to.have.lengthOf(expectedNumberOfFields);",
                  "err": {},
                  "uuid": "a99d6ee2-688c-49dd-a94a-10728acd2a84",
                  "parentUUID": "bd469180-47c5-4325-9d1d-d5c5bba4488f",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "a99d6ee2-688c-49dd-a94a-10728acd2a84"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 5,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "edac9616-5d0f-4873-a0c9-2a04ed00e3af",
          "title": "FinancialDisclosure",
          "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/components/SectionField.unit.spec.jsx",
          "file": "/src/applications/pensions/tests/components/SectionField.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should show other expenses",
              "fullTitle": "FinancialDisclosure should show other expenses",
              "timedOut": false,
              "duration": 4,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var formData = {\n  otherExpenses: [{\n    paidTo: 'frank',\n    purpose: 'mileage',\n    amount: 92,\n    date: '10/12/1999'\n  }]\n};\nvar _render5 = (0, _react2.render)( /*#__PURE__*/_react.default.createElement(_SectionField.FinancialDisclosure, {\n  formData: formData\n})),\n    queryByText = _render5.queryByText;\n(0, _chai.expect)(queryByText('frank')).to.not.be.null;",
              "err": {},
              "uuid": "459a55bf-73ad-4a47-950b-eeb1341034e4",
              "parentUUID": "edac9616-5d0f-4873-a0c9-2a04ed00e3af",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should not show other expenses",
              "fullTitle": "FinancialDisclosure should not show other expenses",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var formData = {\n  otherExpenses: [{\n    paidTo: '',\n    purpose: '',\n    amount: '',\n    date: ''\n  }]\n};\nvar _render6 = (0, _react2.render)( /*#__PURE__*/_react.default.createElement(_SectionField.FinancialDisclosure, {\n  formData: formData\n})),\n    queryByText = _render6.queryByText;\n(0, _chai.expect)(queryByText('frank')).to.be.null;",
              "err": {},
              "uuid": "02f82f4b-0ca8-4b4c-a217-846014b608fd",
              "parentUUID": "edac9616-5d0f-4873-a0c9-2a04ed00e3af",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "459a55bf-73ad-4a47-950b-eeb1341034e4",
            "02f82f4b-0ca8-4b4c-a217-846014b608fd"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 6,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "16313853-dc4b-4a09-9ed6-58be8eac6509",
          "title": "pension pow information page",
          "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/chapters/02-military-history/pow.unit.spec.jsx",
          "file": "/src/applications/pensions/tests/chapters/02-military-history/pow.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should reveal date fields",
              "fullTitle": "pension pow information page should reveal date fields",
              "timedOut": false,
              "duration": 11,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); });",
              "err": {},
              "uuid": "df928b4b-9046-422b-8fe4-bf1f6dc73cae",
              "parentUUID": "16313853-dc4b-4a09-9ed6-58be8eac6509",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should submit with valid data",
              "fullTitle": "pension pow information page should submit with valid data",
              "timedOut": false,
              "duration": 10,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); });",
              "err": {},
              "uuid": "eb5a8bae-072a-4bf9-987c-e71596ea0943",
              "parentUUID": "16313853-dc4b-4a09-9ed6-58be8eac6509",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "df928b4b-9046-422b-8fe4-bf1f6dc73cae",
            "eb5a8bae-072a-4bf9-987c-e71596ea0943"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 21,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "14b26336-0667-4a1a-a880-43a6f2aebb84",
          "title": "pension dependent children page",
          "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/chapters/04-household-information/dependentChildren.unit.spec.jsx",
          "file": "/src/applications/pensions/tests/chapters/04-household-information/dependentChildren.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should reveal additional fields",
              "fullTitle": "pension dependent children page should reveal additional fields",
              "timedOut": false,
              "duration": 11,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); });",
              "err": {},
              "uuid": "053d7f5a-f84a-489f-ab40-8e83c02fbacd",
              "parentUUID": "14b26336-0667-4a1a-a880-43a6f2aebb84",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should submit with valid data",
              "fullTitle": "pension dependent children page should submit with valid data",
              "timedOut": false,
              "duration": 16,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); });",
              "err": {},
              "uuid": "2a9e8db8-b160-4747-bd71-e2019ba8a0a1",
              "parentUUID": "14b26336-0667-4a1a-a880-43a6f2aebb84",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "053d7f5a-f84a-489f-ab40-8e83c02fbacd",
            "2a9e8db8-b160-4747-bd71-e2019ba8a0a1"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 27,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "e4b0db3f-9fd0-4a48-9d8c-cee3e3cff3fd",
          "title": "pension treatment history page",
          "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/chapters/03-health-and-employment-information/treatmentHistory.unit.spec.jsx",
          "file": "/src/applications/pensions/tests/chapters/03-health-and-employment-information/treatmentHistory.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should render web components in form correctly",
              "fullTitle": "pension treatment history page should render web components in form correctly",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var pageTitle = 'treatment history';\nvar expectedNumberOfFields = 1;\n(0, _pageTests.testNumberOfWebComponentFields)(_form.default, _vaTreatmentHistory.default.schema, _vaTreatmentHistory.default.uiSchema, expectedNumberOfFields, pageTitle);\nvar expectedNumberOfErrors = 1;\n(0, _pageTests.testNumberOfErrorsOnSubmitForWebComponents)(_form.default, _vaTreatmentHistory.default.schema, _vaTreatmentHistory.default.uiSchema, expectedNumberOfErrors, pageTitle);",
              "err": {},
              "uuid": "336edb7d-a077-41cd-b36e-1d4778ec3a5a",
              "parentUUID": "e4b0db3f-9fd0-4a48-9d8c-cee3e3cff3fd",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "336edb7d-a077-41cd-b36e-1d4778ec3a5a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "40aedc3d-31ed-46fd-91e7-3a0ef4cd0c2f",
          "title": "Pensions: Financial information transferred assets page",
          "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/chapters/05-financial-information/transferredAssets.unit.spec.jsx",
          "file": "/src/applications/pensions/tests/chapters/05-financial-information/transferredAssets.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "4730a29e-546b-4662-a0e6-41319018ef71",
              "title": "transferred assets page",
              "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/chapters/05-financial-information/transferredAssets.unit.spec.jsx",
              "file": "/src/applications/pensions/tests/chapters/05-financial-information/transferredAssets.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should show the correct number of errors on submit for web components",
                  "fullTitle": "Pensions: Financial information transferred assets page transferred assets page should show the correct number of errors on submit for web components",
                  "timedOut": false,
                  "duration": 12,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var _render4 = (0, _react2.render)( /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  definitions: formConfig.defaultDefinitions,\n  schema: schema,\n  uiSchema: uiSchema,\n  data: data,\n  formData: {}\n})),\n    container = _render4.container,\n    getByRole = _render4.getByRole;\ngetByRole('button', {\n  name: /submit/i\n}).click();\nvar nodes = Array.from(container.querySelectorAll(\"\".concat(expectedFieldTypesWebComponents, \", \").concat(wrapperWebComponents)));\nvar errors = nodes.filter(function (node) {\n  return node.error;\n});\n(0, _chai.expect)(errors).to.have.lengthOf(expectedNumberOfErrors);",
                  "err": {},
                  "uuid": "8bfbd06b-f747-4554-9b50-c5eb6688c5fe",
                  "parentUUID": "4730a29e-546b-4662-a0e6-41319018ef71",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "8bfbd06b-f747-4554-9b50-c5eb6688c5fe"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 12,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "901bfa2f-f530-4e65-8e32-e6ba5ee5c101",
              "title": "transferred assets page",
              "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/chapters/05-financial-information/transferredAssets.unit.spec.jsx",
              "file": "/src/applications/pensions/tests/chapters/05-financial-information/transferredAssets.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should have appropriate number of web components",
                  "fullTitle": "Pensions: Financial information transferred assets page transferred assets page should have appropriate number of web components",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var _render3 = (0, _react2.render)( /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  definitions: formConfig.defaultDefinitions,\n  schema: schema,\n  uiSchema: uiSchema,\n  data: data,\n  formData: {}\n})),\n    container = _render3.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypesWebComponents)).to.have.lengthOf(expectedNumberOfFields);",
                  "err": {},
                  "uuid": "de90a4ac-9095-427f-8cde-4eb13d4aadc3",
                  "parentUUID": "901bfa2f-f530-4e65-8e32-e6ba5ee5c101",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "de90a4ac-9095-427f-8cde-4eb13d4aadc3"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "e0400089-9d1e-4031-993d-60b83c7fc404",
          "title": "formatPhoneNumber",
          "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/components/SectionField.unit.spec.jsx",
          "file": "/src/applications/pensions/tests/components/SectionField.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "returns undefined for null or undefined input",
              "fullTitle": "formatPhoneNumber returns undefined for null or undefined input",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, _chai.expect)((0, _SectionField.formatPhoneNumber)(null)).to.eql('');\n(0, _chai.expect)((0, _SectionField.formatPhoneNumber)()).to.eql('');",
              "err": {},
              "uuid": "9d9f6fc8-e4cd-4429-9d6a-d26f81c451c2",
              "parentUUID": "e0400089-9d1e-4031-993d-60b83c7fc404",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "correctly converts YYYY-MM-DD to MM/DD/YYYY",
              "fullTitle": "formatPhoneNumber correctly converts YYYY-MM-DD to MM/DD/YYYY",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var inputDate = '5555555555';\nvar expectedDate = '(555) 555-5555';\nvar result = (0, _SectionField.formatPhoneNumber)(inputDate);\n(0, _chai.expect)(result).to.equal(expectedDate);",
              "err": {},
              "uuid": "36c446db-48a5-4686-99fd-aa851555b696",
              "parentUUID": "e0400089-9d1e-4031-993d-60b83c7fc404",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "9d9f6fc8-e4cd-4429-9d6a-d26f81c451c2",
            "36c446db-48a5-4686-99fd-aa851555b696"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "d734fa50-0594-4cc6-a14b-ac7ac565b91a",
          "title": "Financial information net worth estimation pension page",
          "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/chapters/05-financial-information/netWorthEstimation.unit.spec.jsx",
          "file": "/src/applications/pensions/tests/chapters/05-financial-information/netWorthEstimation.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "93bd4dde-e206-4ed5-8cb3-d1c5b3fdf8d5",
              "title": "net worth estimation page",
              "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/chapters/05-financial-information/netWorthEstimation.unit.spec.jsx",
              "file": "/src/applications/pensions/tests/chapters/05-financial-information/netWorthEstimation.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should show the correct number of errors on submit for web components",
                  "fullTitle": "Financial information net worth estimation pension page net worth estimation page should show the correct number of errors on submit for web components",
                  "timedOut": false,
                  "duration": 7,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var _render4 = (0, _react2.render)( /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  definitions: formConfig.defaultDefinitions,\n  schema: schema,\n  uiSchema: uiSchema,\n  data: data,\n  formData: {}\n})),\n    container = _render4.container,\n    getByRole = _render4.getByRole;\ngetByRole('button', {\n  name: /submit/i\n}).click();\nvar nodes = Array.from(container.querySelectorAll(\"\".concat(expectedFieldTypesWebComponents, \", \").concat(wrapperWebComponents)));\nvar errors = nodes.filter(function (node) {\n  return node.error;\n});\n(0, _chai.expect)(errors).to.have.lengthOf(expectedNumberOfErrors);",
                  "err": {},
                  "uuid": "45707b41-59a4-4770-b297-ba31bb6ae4e8",
                  "parentUUID": "93bd4dde-e206-4ed5-8cb3-d1c5b3fdf8d5",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "45707b41-59a4-4770-b297-ba31bb6ae4e8"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 7,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "b5d06bce-f564-4008-ab16-e970ef74aeeb",
              "title": "net worth estimation page",
              "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/chapters/05-financial-information/netWorthEstimation.unit.spec.jsx",
              "file": "/src/applications/pensions/tests/chapters/05-financial-information/netWorthEstimation.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should have appropriate number of web components",
                  "fullTitle": "Financial information net worth estimation pension page net worth estimation page should have appropriate number of web components",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var _render3 = (0, _react2.render)( /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  definitions: formConfig.defaultDefinitions,\n  schema: schema,\n  uiSchema: uiSchema,\n  data: data,\n  formData: {}\n})),\n    container = _render3.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypesWebComponents)).to.have.lengthOf(expectedNumberOfFields);",
                  "err": {},
                  "uuid": "7e6c7910-5666-42d6-b5d9-c823bc505e91",
                  "parentUUID": "b5d06bce-f564-4008-ab16-e970ef74aeeb",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "7e6c7910-5666-42d6-b5d9-c823bc505e91"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "65f3869c-08c7-41fd-8f48-37c28357b289",
          "title": "pension applicant information page",
          "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/chapters/02-military-history/generalHistory.unit.spec.jsx",
          "file": "/src/applications/pensions/tests/chapters/02-military-history/generalHistory.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should submit with no errors when No is selected",
              "fullTitle": "pension applicant information page should submit with no errors when No is selected",
              "timedOut": false,
              "duration": 11,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); });",
              "err": {},
              "uuid": "b0140fdf-b2e2-4fef-bc82-998ee87266a7",
              "parentUUID": "65f3869c-08c7-41fd-8f48-37c28357b289",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should not submit with errors when Yes is selected",
              "fullTitle": "pension applicant information page should not submit with errors when Yes is selected",
              "timedOut": false,
              "duration": 21,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); });",
              "err": {},
              "uuid": "00f0d3b2-d932-4800-8557-0f803036f7e8",
              "parentUUID": "65f3869c-08c7-41fd-8f48-37c28357b289",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should reveal name fields",
              "fullTitle": "pension applicant information page should reveal name fields",
              "timedOut": false,
              "duration": 5,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); });",
              "err": {},
              "uuid": "ad73546c-62a3-4212-bfc6-1849c2705aaf",
              "parentUUID": "65f3869c-08c7-41fd-8f48-37c28357b289",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "b0140fdf-b2e2-4fef-bc82-998ee87266a7",
            "00f0d3b2-d932-4800-8557-0f803036f7e8",
            "ad73546c-62a3-4212-bfc6-1849c2705aaf"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 37,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "e92d4c2c-bfd7-4384-90b7-4ba459dcf907",
          "title": "AdditionalInformation",
          "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/components/SectionField.unit.spec.jsx",
          "file": "/src/applications/pensions/tests/components/SectionField.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should render without files",
              "fullTitle": "AdditionalInformation should render without files",
              "timedOut": false,
              "duration": 3,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var formData = {\n  'view:noDirectDeposit': true,\n  bankAccountType: 'savings',\n  noRapidProcessing: false\n};\nvar _render8 = (0, _react2.render)( /*#__PURE__*/_react.default.createElement(_SectionField.AdditionalInformation, {\n  formData: formData\n})),\n    queryByText = _render8.queryByText;\n(0, _chai.expect)(queryByText('Yes, I have uploaded all my documentation')).to.not.be.null;",
              "err": {},
              "uuid": "b28b4faa-3f68-49f3-acf0-2639a26fcd38",
              "parentUUID": "e92d4c2c-bfd7-4384-90b7-4ba459dcf907",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should render with files",
              "fullTitle": "AdditionalInformation should render with files",
              "timedOut": false,
              "duration": 4,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var formData = {\n  'view:noDirectDeposit': false,\n  bankAccount: {\n    accountType: 'checking',\n    accountNumber: '123',\n    routingNumber: '333'\n  },\n  veteranAddress: {\n    street: '123 street',\n    city: 'Los Angeles',\n    state: 'California',\n    postalCode: '96785',\n    country: 'USA'\n  },\n  email: 'bob@example.com',\n  altEmail: 'alt-bob@example.com',\n  files: [{\n    name: 'file 1.txt',\n    size: 3200\n  }],\n  noRapidProcessing: true\n};\nvar _render7 = (0, _react2.render)( /*#__PURE__*/_react.default.createElement(_SectionField.AdditionalInformation, {\n  formData: formData\n})),\n    queryByText = _render7.queryByText;\n(0, _chai.expect)(queryByText('bob@example.com')).to.not.be.null;",
              "err": {},
              "uuid": "c0b5926c-b2f0-42af-8b92-a408254ba4e4",
              "parentUUID": "e92d4c2c-bfd7-4384-90b7-4ba459dcf907",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "b28b4faa-3f68-49f3-acf0-2639a26fcd38",
            "c0b5926c-b2f0-42af-8b92-a408254ba4e4"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 7,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "c00ef4f3-fec8-426a-bcf4-be37d5e70433",
          "title": "Pensions isUnder65",
          "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/config/form.unit.spec.jsx",
          "file": "/src/applications/pensions/tests/config/form.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should return false if date of birth and isOver65 indicate veteran is over 65",
              "fullTitle": "Pensions isUnder65 should return false if date of birth and isOver65 indicate veteran is over 65",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var under65 = (0, _form.isUnder65)({\n  veteranDateOfBirth: '1950-01-01',\n  isOver65: true\n}, (0, _moment.default)('2020-01-01'));\n(0, _chai.expect)(under65).to.be.false;",
              "err": {},
              "uuid": "f85b2c0d-f133-49a2-beb8-7a14fa6c02ea",
              "parentUUID": "c00ef4f3-fec8-426a-bcf4-be37d5e70433",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return true if veteran is less than 65 according to date of birth",
              "fullTitle": "Pensions isUnder65 should return true if veteran is less than 65 according to date of birth",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var under65 = (0, _form.isUnder65)({\n  veteranDateOfBirth: '2000-01-01',\n  isOver65: true\n}, (0, _moment.default)('2020-01-01'));\n(0, _chai.expect)(under65).to.be.true;",
              "err": {},
              "uuid": "ef72f42f-8c57-4276-bba7-5f1c904454b8",
              "parentUUID": "c00ef4f3-fec8-426a-bcf4-be37d5e70433",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return true if veteran is less than 65 according to isOver65",
              "fullTitle": "Pensions isUnder65 should return true if veteran is less than 65 according to isOver65",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var under65 = (0, _form.isUnder65)({\n  veteranDateOfBirth: '1950-01-01',\n  isOver65: false\n}, (0, _moment.default)('2020-01-01'));\n(0, _chai.expect)(under65).to.be.true;",
              "err": {},
              "uuid": "baa621a9-aaea-4393-8af8-7ebd33552cc0",
              "parentUUID": "c00ef4f3-fec8-426a-bcf4-be37d5e70433",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f85b2c0d-f133-49a2-beb8-7a14fa6c02ea",
            "ef72f42f-8c57-4276-bba7-5f1c904454b8",
            "baa621a9-aaea-4393-8af8-7ebd33552cc0"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "26f028b4-0505-474c-8d2a-4934b7459724",
          "title": "Pensions expedited",
          "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/config/expedited.unit.spec.jsx",
          "file": "/src/applications/pensions/tests/config/expedited.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should render warning on Yes",
              "fullTitle": "Pensions expedited should render warning on Yes",
              "timedOut": false,
              "duration": 10,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var form = _testUtils.default.renderIntoDocument( /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  schema: schema,\n  data: {},\n  definitions: definitions,\n  uiSchema: uiSchema\n}));\nvar formDOM = (0, _schemaformUtils.getFormDOM)(form);\nformDOM.fillData('#root_noRapidProcessingYes', 'Y');\n(0, _chai.expect)(formDOM.querySelector('.usa-alert-info').textContent).to.contain('will be submitted as');",
              "err": {},
              "uuid": "5e961a20-9251-413b-9689-98fbebb9f752",
              "parentUUID": "26f028b4-0505-474c-8d2a-4934b7459724",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should render",
              "fullTitle": "Pensions expedited should render",
              "timedOut": false,
              "duration": 4,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var form = _testUtils.default.renderIntoDocument( /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  schema: schema,\n  data: {},\n  definitions: definitions,\n  uiSchema: uiSchema\n}));\nvar formDOM = (0, _schemaformUtils.getFormDOM)(form);\n(0, _chai.expect)(formDOM.querySelectorAll('input,select').length).to.equal(2);",
              "err": {},
              "uuid": "2068cae5-84b1-4dc6-a61d-8f3749ea2a2d",
              "parentUUID": "26f028b4-0505-474c-8d2a-4934b7459724",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should submit",
              "fullTitle": "Pensions expedited should submit",
              "timedOut": false,
              "duration": 12,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var onSubmit = _sinon.default.spy();\nvar form = _testUtils.default.renderIntoDocument( /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  schema: schema,\n  definitions: definitions,\n  onSubmit: onSubmit,\n  data: {},\n  uiSchema: uiSchema\n}));\nvar formDOM = (0, _schemaformUtils.getFormDOM)(form);\nformDOM.submitForm();\n(0, _chai.expect)(onSubmit.called).to.be.true;",
              "err": {},
              "uuid": "4404f442-47b4-4698-b4a0-785d87c64b61",
              "parentUUID": "26f028b4-0505-474c-8d2a-4934b7459724",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should render warning on No",
              "fullTitle": "Pensions expedited should render warning on No",
              "timedOut": false,
              "duration": 6,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var form = _testUtils.default.renderIntoDocument( /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  schema: schema,\n  data: {},\n  definitions: definitions,\n  uiSchema: uiSchema\n}));\nvar formDOM = (0, _schemaformUtils.getFormDOM)(form);\nformDOM.fillData('#root_noRapidProcessingNo', 'N');\n(0, _chai.expect)(formDOM.querySelector('.usa-alert-info').textContent).to.contain('doesn’t qualify');",
              "err": {},
              "uuid": "cf64b932-15c2-4509-9c11-a923057013a4",
              "parentUUID": "26f028b4-0505-474c-8d2a-4934b7459724",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "5e961a20-9251-413b-9689-98fbebb9f752",
            "2068cae5-84b1-4dc6-a61d-8f3749ea2a2d",
            "4404f442-47b4-4698-b4a0-785d87c64b61",
            "cf64b932-15c2-4509-9c11-a923057013a4"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 32,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "79bcb179-2387-4b82-a691-8a0a79502a98",
          "title": "pension nursing home page",
          "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/chapters/03-health-and-employment-information/nursingHome.unit.spec.jsx",
          "file": "/src/applications/pensions/tests/chapters/03-health-and-employment-information/nursingHome.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "4dbfa6ef-bf3f-4953-b856-f2ff4231f0bf",
              "title": "nursing home information page",
              "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/chapters/03-health-and-employment-information/nursingHome.unit.spec.jsx",
              "file": "/src/applications/pensions/tests/chapters/03-health-and-employment-information/nursingHome.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should have appropriate number of web components",
                  "fullTitle": "pension nursing home page nursing home information page should have appropriate number of web components",
                  "timedOut": false,
                  "duration": 6,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var _render3 = (0, _react2.render)( /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  definitions: formConfig.defaultDefinitions,\n  schema: schema,\n  uiSchema: uiSchema,\n  data: data,\n  formData: {}\n})),\n    container = _render3.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypesWebComponents)).to.have.lengthOf(expectedNumberOfFields);",
                  "err": {},
                  "uuid": "0c03f7fb-9cf3-4625-9d13-828b95e46570",
                  "parentUUID": "4dbfa6ef-bf3f-4953-b856-f2ff4231f0bf",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "0c03f7fb-9cf3-4625-9d13-828b95e46570"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 6,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "08da3724-0041-43a3-817b-f337b7723801",
              "title": "nursing home information page",
              "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/chapters/03-health-and-employment-information/nursingHome.unit.spec.jsx",
              "file": "/src/applications/pensions/tests/chapters/03-health-and-employment-information/nursingHome.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should show the correct number of errors on submit for web components",
                  "fullTitle": "pension nursing home page nursing home information page should show the correct number of errors on submit for web components",
                  "timedOut": false,
                  "duration": 10,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var _render4 = (0, _react2.render)( /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  definitions: formConfig.defaultDefinitions,\n  schema: schema,\n  uiSchema: uiSchema,\n  data: data,\n  formData: {}\n})),\n    container = _render4.container,\n    getByRole = _render4.getByRole;\ngetByRole('button', {\n  name: /submit/i\n}).click();\nvar nodes = Array.from(container.querySelectorAll(\"\".concat(expectedFieldTypesWebComponents, \", \").concat(wrapperWebComponents)));\nvar errors = nodes.filter(function (node) {\n  return node.error;\n});\n(0, _chai.expect)(errors).to.have.lengthOf(expectedNumberOfErrors);",
                  "err": {},
                  "uuid": "407b9989-0197-434e-88f5-29103d33788c",
                  "parentUUID": "08da3724-0041-43a3-817b-f337b7723801",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "407b9989-0197-434e-88f5-29103d33788c"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 10,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "37643bcc-9884-402b-aa07-83729adfd18b",
          "title": "reason for current separation page",
          "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/chapters/04-household-information/reasonForCurrentSeparation.unit.spec.jsx",
          "file": "/src/applications/pensions/tests/chapters/04-household-information/reasonForCurrentSeparation.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should render web components in form correctly",
              "fullTitle": "reason for current separation page should render web components in form correctly",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var pageTitle = 'reason for separation';\nvar expectedNumberOfFields = 1;\n(0, _pageTests.testNumberOfWebComponentFields)(_form.default, _reasonForCurrentSeparation.default.schema, _reasonForCurrentSeparation.default.uiSchema, expectedNumberOfFields, pageTitle);\nvar expectedNumberOfErrors = 1;\n(0, _pageTests.testNumberOfErrorsOnSubmitForWebComponents)(_form.default, _reasonForCurrentSeparation.default.schema, _reasonForCurrentSeparation.default.uiSchema, expectedNumberOfErrors, pageTitle);",
              "err": {},
              "uuid": "6a5205c5-a66d-45f2-8aec-8556a17fe4d4",
              "parentUUID": "37643bcc-9884-402b-aa07-83729adfd18b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "6a5205c5-a66d-45f2-8aec-8556a17fe4d4"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "d4c5e5cb-f37c-48e0-8c1d-5706c5d6a40d",
          "title": "Pensions helpers",
          "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/helpers.unit.spec.jsx",
          "file": "/src/applications/pensions/tests/helpers.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "30debea0-e936-4211-9a7e-b2b2f5e4dc7f",
              "title": "fileHelp",
              "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/helpers.unit.spec.jsx",
              "file": "/src/applications/pensions/tests/helpers.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should show disabled child bullet",
                  "fullTitle": "Pensions helpers fileHelp should show disabled child bullet",
                  "timedOut": false,
                  "duration": 0,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "var formData = {\n  dependents: [{\n    disabled: true\n  }]\n};\nvar tree = _skinDeep.default.shallowRender( /*#__PURE__*/_react.default.createElement(FileHelp, {\n  formData: formData\n}));\n(0, _chai.expect)(tree.everySubTree('li').length).to.equal(3);",
                  "err": {
                    "message": "Error: ReactShallowRenderer render(): Shallow rendering works only with custom components, but the provided element type was `undefined`.",
                    "estack": "Error: ReactShallowRenderer render(): Shallow rendering works only with custom components, but the provided element type was `undefined`.\n    at ReactShallowRenderer.render (node_modules/react-shallow-renderer/cjs/react-shallow-renderer.js:779:13)\n    at Object.shallowRender (node_modules/skin-deep/skin-deep.js:34:19)\n    at Context.<anonymous> (src/applications/pensions/tests/helpers.unit.spec.jsx:33:29)\n    at Test.Runnable.run (node_modules/mocha-snapshots/src/index.js:19:22)\n    at processImmediate (internal/timers.js:461:21)\n    at process.callbackTrampoline (internal/async_hooks.js:129:14)",
                    "diff": null
                  },
                  "uuid": "7041d441-c4fd-4756-931d-5bd9d1832dd6",
                  "parentUUID": "30debea0-e936-4211-9a7e-b2b2f5e4dc7f",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should show school child bullet",
                  "fullTitle": "Pensions helpers fileHelp should show school child bullet",
                  "timedOut": false,
                  "duration": 0,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "var formData = {\n  dependents: [{\n    attendingCollege: true\n  }]\n};\nvar tree = _skinDeep.default.shallowRender( /*#__PURE__*/_react.default.createElement(FileHelp, {\n  formData: formData\n}));\n(0, _chai.expect)(tree.everySubTree('li').length).to.equal(3);",
                  "err": {
                    "message": "Error: ReactShallowRenderer render(): Shallow rendering works only with custom components, but the provided element type was `undefined`.",
                    "estack": "Error: ReactShallowRenderer render(): Shallow rendering works only with custom components, but the provided element type was `undefined`.\n    at ReactShallowRenderer.render (node_modules/react-shallow-renderer/cjs/react-shallow-renderer.js:779:13)\n    at Object.shallowRender (node_modules/skin-deep/skin-deep.js:34:19)\n    at Context.<anonymous> (src/applications/pensions/tests/helpers.unit.spec.jsx:45:29)\n    at Test.Runnable.run (node_modules/mocha-snapshots/src/index.js:19:22)\n    at processImmediate (internal/timers.js:461:21)\n    at process.callbackTrampoline (internal/async_hooks.js:129:14)",
                    "diff": null
                  },
                  "uuid": "e9d43cee-7fee-47e9-b017-4bb0e49c9803",
                  "parentUUID": "30debea0-e936-4211-9a7e-b2b2f5e4dc7f",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should render",
                  "fullTitle": "Pensions helpers fileHelp should render",
                  "timedOut": false,
                  "duration": 0,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "var formData = {\n  'view:aidAttendance': true\n};\nvar tree = _skinDeep.default.shallowRender( /*#__PURE__*/_react.default.createElement(FileHelp, {\n  formData: formData\n}));\n(0, _chai.expect)(tree.text()).to.contain('Please upload all doc');\n(0, _chai.expect)(tree.everySubTree('li').length).to.equal(2);",
                  "err": {
                    "message": "Error: ReactShallowRenderer render(): Shallow rendering works only with custom components, but the provided element type was `undefined`.",
                    "estack": "Error: ReactShallowRenderer render(): Shallow rendering works only with custom components, but the provided element type was `undefined`.\n    at ReactShallowRenderer.render (node_modules/react-shallow-renderer/cjs/react-shallow-renderer.js:779:13)\n    at Object.shallowRender (node_modules/skin-deep/skin-deep.js:34:19)\n    at Context.<anonymous> (src/applications/pensions/tests/helpers.unit.spec.jsx:20:29)\n    at Test.Runnable.run (node_modules/mocha-snapshots/src/index.js:19:22)\n    at processImmediate (internal/timers.js:461:21)\n    at process.callbackTrampoline (internal/async_hooks.js:129:14)",
                    "diff": null
                  },
                  "uuid": "0defcb37-4123-4466-889f-1e4f14df6403",
                  "parentUUID": "30debea0-e936-4211-9a7e-b2b2f5e4dc7f",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [],
              "failures": [
                "7041d441-c4fd-4756-931d-5bd9d1832dd6",
                "e9d43cee-7fee-47e9-b017-4bb0e49c9803",
                "0defcb37-4123-4466-889f-1e4f14df6403"
              ],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "dae8dde2-4d43-4989-95fa-0e673b00eb30",
              "title": "submit",
              "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/helpers.unit.spec.jsx",
              "file": "/src/applications/pensions/tests/helpers.unit.spec.jsx",
              "beforeHooks": [
                {
                  "title": "\"before each\" hook in \"submit\"",
                  "fullTitle": "Pensions helpers submit \"before each\" hook in \"submit\"",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "window.VetsGov = {\n  pollTimeout: 1\n};\nwindow.URL = {\n  createObjectURL: _sinon.default.stub().returns('test')\n};",
                  "err": {},
                  "uuid": "f2b2f734-e6ad-4493-a619-889649d18206",
                  "parentUUID": "dae8dde2-4d43-4989-95fa-0e673b00eb30",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [
                {
                  "title": "\"after each\" hook in \"submit\"",
                  "fullTitle": "Pensions helpers submit \"after each\" hook in \"submit\"",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "delete window.URL;",
                  "err": {},
                  "uuid": "33f995fd-eb07-4e52-936d-6f3d0caa7ca4",
                  "parentUUID": "dae8dde2-4d43-4989-95fa-0e673b00eb30",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "tests": [
                {
                  "title": "should reject if initial request fails",
                  "fullTitle": "Pensions helpers submit should reject if initial request fails",
                  "timedOut": false,
                  "duration": 5,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _helpers.mockFetch)(new Error('fake error'), false);\nvar formConfig = {\n  chapters: {}\n};\nvar form = {\n  data: {}\n};\nreturn (0, _helpers2.submit)(form, formConfig).then(function () {\n  _chai.expect.fail();\n}, function (err) {\n  (0, _chai.expect)(err.message).to.equal('fake error');\n});",
                  "err": {},
                  "uuid": "d39d16c8-a168-4822-b0e8-a8a89ff7979c",
                  "parentUUID": "dae8dde2-4d43-4989-95fa-0e673b00eb30",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should resolve if polling state is success",
                  "fullTitle": "Pensions helpers submit should resolve if polling state is success",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _helpers.mockFetch)();\n(0, _helpers.setFetchJSONResponse)(global.fetch.onFirstCall(), {\n  data: {\n    attributes: {\n      guid: 'test'\n    }\n  }\n});\n(0, _helpers.setFetchJSONResponse)(global.fetch.onSecondCall(), {\n  data: {\n    attributes: {\n      state: 'pending'\n    }\n  }\n});\nvar response = {};\n(0, _helpers.setFetchJSONResponse)(global.fetch.onThirdCall(), {\n  data: {\n    attributes: {\n      state: 'success',\n      response: response\n    }\n  }\n});\nvar formConfig = {\n  chapters: {}\n};\nvar form = {\n  data: {}\n};\nreturn (0, _helpers2.submit)(form, formConfig).then(function (res) {\n  (0, _chai.expect)(res).to.deep.equal(response);\n});",
                  "err": {},
                  "uuid": "bb422674-0f9a-4c10-83d8-abd9a4ba025b",
                  "parentUUID": "dae8dde2-4d43-4989-95fa-0e673b00eb30",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should reject if polling state is failed",
                  "fullTitle": "Pensions helpers submit should reject if polling state is failed",
                  "timedOut": false,
                  "duration": 4,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _helpers.mockFetch)();\n(0, _helpers.setFetchJSONResponse)(global.fetch.onFirstCall(), {\n  data: {\n    attributes: {\n      guid: 'test'\n    }\n  }\n});\n(0, _helpers.setFetchJSONResponse)(global.fetch.onSecondCall(), {\n  data: {\n    attributes: {\n      state: 'pending'\n    }\n  }\n});\n(0, _helpers.setFetchJSONResponse)(global.fetch.onThirdCall(), {\n  data: {\n    attributes: {\n      state: 'failed'\n    }\n  }\n});\nvar formConfig = {\n  chapters: {}\n};\nvar form = {\n  data: {}\n};\nreturn (0, _helpers2.submit)(form, formConfig).then(function () {\n  _chai.expect.fail();\n}, function (err) {\n  (0, _chai.expect)(err.message).to.equal('vets_server_error_pensions: status failed');\n});",
                  "err": {},
                  "uuid": "6a45427b-09a0-40a1-9771-2650e94ab288",
                  "parentUUID": "dae8dde2-4d43-4989-95fa-0e673b00eb30",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "d39d16c8-a168-4822-b0e8-a8a89ff7979c",
                "bb422674-0f9a-4c10-83d8-abd9a4ba025b",
                "6a45427b-09a0-40a1-9771-2650e94ab288"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 12,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "85a1ae42-4779-4192-aaa6-a58528d50608",
              "title": "formatCurrency",
              "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/helpers.unit.spec.jsx",
              "file": "/src/applications/pensions/tests/helpers.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should format US currency",
                  "fullTitle": "Pensions helpers formatCurrency should format US currency",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)((0, _helpers2.formatCurrency)(0.01)).to.equal('$0.01');\n(0, _chai.expect)((0, _helpers2.formatCurrency)(1000)).to.equal('$1,000');\n(0, _chai.expect)((0, _helpers2.formatCurrency)(12.75)).to.equal('$12.75');",
                  "err": {},
                  "uuid": "1e881744-0069-4d94-9558-c23a516a12a2",
                  "parentUUID": "85a1ae42-4779-4192-aaa6-a58528d50608",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "1e881744-0069-4d94-9558-c23a516a12a2"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "f38e85d8-f14f-4460-be39-205cf5e4d0c4",
          "title": "<ErrorText />",
          "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/components/ErrorText.unit.spec.jsx",
          "file": "/src/applications/pensions/tests/components/ErrorText.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "renders <CallVBACenter />",
              "fullTitle": "<ErrorText /> renders <CallVBACenter />",
              "timedOut": false,
              "duration": 6,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var wrapper = (0, _enzyme.shallow)( /*#__PURE__*/_react.default.createElement(_ErrorText.default, null));\n(0, _chai.expect)(wrapper.find(_CallVBACenter.default)).to.have.lengthOf(1);\nwrapper.unmount();",
              "err": {},
              "uuid": "83dc2eb6-6ba1-43f0-a6d0-1017a299b1c6",
              "parentUUID": "f38e85d8-f14f-4460-be39-205cf5e4d0c4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "contains the expected static text",
              "fullTitle": "<ErrorText /> contains the expected static text",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var wrapper = (0, _enzyme.shallow)( /*#__PURE__*/_react.default.createElement(_ErrorText.default, null));\n(0, _chai.expect)(wrapper.text()).to.contain('If it still doesn’t work, please');\nwrapper.unmount();",
              "err": {},
              "uuid": "a1e36c1e-c0ae-42b9-9653-c1997f3be0e0",
              "parentUUID": "f38e85d8-f14f-4460-be39-205cf5e4d0c4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "renders without crashing",
              "fullTitle": "<ErrorText /> renders without crashing",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var wrapper = (0, _enzyme.shallow)( /*#__PURE__*/_react.default.createElement(_ErrorText.default, null));\nwrapper.unmount( /*#__PURE__*/_react.default.createElement(_ErrorText.default, null));",
              "err": {},
              "uuid": "80f2e4ec-c11e-4aa1-85f4-2a1b6982986c",
              "parentUUID": "f38e85d8-f14f-4460-be39-205cf5e4d0c4",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "83dc2eb6-6ba1-43f0-a6d0-1017a299b1c6",
            "a1e36c1e-c0ae-42b9-9653-c1997f3be0e0",
            "80f2e4ec-c11e-4aa1-85f4-2a1b6982986c"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 7,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "eacd21e4-493c-4ef1-a1f5-79dd238afd17",
          "title": "financial information home ownership pension page",
          "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/chapters/05-financial-information/homeOwnership.unit.spec.jsx",
          "file": "/src/applications/pensions/tests/chapters/05-financial-information/homeOwnership.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "bcd855dc-43f6-47ce-8667-b7cf2c78d840",
              "title": "home ownership page",
              "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/chapters/05-financial-information/homeOwnership.unit.spec.jsx",
              "file": "/src/applications/pensions/tests/chapters/05-financial-information/homeOwnership.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should have appropriate number of web components",
                  "fullTitle": "financial information home ownership pension page home ownership page should have appropriate number of web components",
                  "timedOut": false,
                  "duration": 10,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var _render3 = (0, _react2.render)( /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  definitions: formConfig.defaultDefinitions,\n  schema: schema,\n  uiSchema: uiSchema,\n  data: data,\n  formData: {}\n})),\n    container = _render3.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypesWebComponents)).to.have.lengthOf(expectedNumberOfFields);",
                  "err": {},
                  "uuid": "bd0905c1-f2f9-4c56-85d3-fd187b9c3d0a",
                  "parentUUID": "bcd855dc-43f6-47ce-8667-b7cf2c78d840",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "bd0905c1-f2f9-4c56-85d3-fd187b9c3d0a"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 10,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "ddd9cabc-f402-4ad0-81af-e4fdc5bb7c64",
              "title": "home ownership page",
              "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/chapters/05-financial-information/homeOwnership.unit.spec.jsx",
              "file": "/src/applications/pensions/tests/chapters/05-financial-information/homeOwnership.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should show the correct number of errors on submit for web components",
                  "fullTitle": "financial information home ownership pension page home ownership page should show the correct number of errors on submit for web components",
                  "timedOut": false,
                  "duration": 8,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var _render4 = (0, _react2.render)( /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  definitions: formConfig.defaultDefinitions,\n  schema: schema,\n  uiSchema: uiSchema,\n  data: data,\n  formData: {}\n})),\n    container = _render4.container,\n    getByRole = _render4.getByRole;\ngetByRole('button', {\n  name: /submit/i\n}).click();\nvar nodes = Array.from(container.querySelectorAll(\"\".concat(expectedFieldTypesWebComponents, \", \").concat(wrapperWebComponents)));\nvar errors = nodes.filter(function (node) {\n  return node.error;\n});\n(0, _chai.expect)(errors).to.have.lengthOf(expectedNumberOfErrors);",
                  "err": {},
                  "uuid": "efed366b-708e-42ef-8b2b-2a9d72423b10",
                  "parentUUID": "ddd9cabc-f402-4ad0-81af-e4fdc5bb7c64",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "efed366b-708e-42ef-8b2b-2a9d72423b10"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 8,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "84cb2b00-7183-41b6-a40b-08aba4bccc16",
          "title": "Pensions aidAttendance",
          "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/config/aidAttendance.unit.spec.jsx",
          "file": "/src/applications/pensions/tests/config/aidAttendance.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should submit",
              "fullTitle": "Pensions aidAttendance should submit",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var onSubmit = _sinon.default.spy();\nvar form = _testUtils.default.renderIntoDocument( /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  schema: schema,\n  definitions: definitions,\n  onSubmit: onSubmit,\n  data: {},\n  uiSchema: uiSchema\n}));\nvar formDOM = (0, _schemaformUtils.getFormDOM)(form);\nformDOM.submitForm();\n(0, _chai.expect)(onSubmit.called).to.be.true;",
              "err": {},
              "uuid": "e642074c-1bd5-4255-91b1-8c668ab5e06d",
              "parentUUID": "84cb2b00-7183-41b6-a40b-08aba4bccc16",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should render",
              "fullTitle": "Pensions aidAttendance should render",
              "timedOut": false,
              "duration": 1,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "var form = _testUtils.default.renderIntoDocument( /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  schema: schema,\n  data: {},\n  definitions: definitions,\n  uiSchema: uiSchema\n}));\nvar formDOM = (0, _schemaformUtils.getFormDOM)(form);\n(0, _chai.expect)(formDOM.querySelectorAll('input,select').length).to.equal(0);\n(0, _chai.expect)(formDOM.querySelectorAll('.usa-alert-info').length).to.equal(2);",
              "err": {
                "message": "AssertionError: expected 0 to equal 2",
                "estack": "AssertionError: expected 0 to equal 2\n    at Context.<anonymous> (src/applications/pensions/tests/config/aidAttendance.unit.spec.jsx:32:67)\n    at Test.Runnable.run (node_modules/mocha-snapshots/src/index.js:19:22)\n    at processImmediate (internal/timers.js:461:21)\n    at process.callbackTrampoline (internal/async_hooks.js:129:14)",
                "diff": "- 0\n+ 2\n"
              },
              "uuid": "4049b16f-9520-40bb-830c-1e951eca59c7",
              "parentUUID": "84cb2b00-7183-41b6-a40b-08aba4bccc16",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "e642074c-1bd5-4255-91b1-8c668ab5e06d"
          ],
          "failures": [
            "4049b16f-9520-40bb-830c-1e951eca59c7"
          ],
          "pending": [],
          "skipped": [],
          "duration": 2,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "817c986d-e84e-4f5d-b2f9-886e9ddd4973",
          "title": "<ConfirmationPage>",
          "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/containers/ConfirmationPage.unit.spec.jsx",
          "file": "/src/applications/pensions/tests/containers/ConfirmationPage.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should render",
              "fullTitle": "<ConfirmationPage> should render",
              "timedOut": false,
              "duration": 8,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var form = generateForm();\nvar tree = _skinDeep.default.shallowRender( /*#__PURE__*/_react.default.createElement(_ConfirmationPage.ConfirmationPage, {\n  form: form\n}));\n(0, _chai.expect)(tree.subTree('.confirmation-page-title').text()).to.equal('Claim submitted');\n(0, _chai.expect)(tree.everySubTree('span')[1].text().trim()).to.equal('for Jane Doe');\n(0, _chai.expect)(tree.everySubTree('li')[2].text()).to.contain('Western Region');\n(0, _chai.expect)(tree.everySubTree('p')[0].text()).to.contain('We process claims in the order we receive them');\n(0, _chai.expect)(tree.everySubTree('p')[1].text()).to.contain('We may contact you for more information or documents.');\n(0, _chai.expect)(tree.everySubTree('p')[3].text()).to.contain('VA Regional Office');",
              "err": {},
              "uuid": "654299e0-6bec-406d-92a3-976629a882c0",
              "parentUUID": "817c986d-e84e-4f5d-b2f9-886e9ddd4973",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should render if no submission response",
              "fullTitle": "<ConfirmationPage> should render if no submission response",
              "timedOut": false,
              "duration": 4,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var form = generateForm({\n  hasResponse: false\n});\nvar tree = (0, _enzyme.shallow)( /*#__PURE__*/_react.default.createElement(_ConfirmationPage.ConfirmationPage, {\n  form: form\n}));\n(0, _chai.expect)(tree.find('.claim-list').children().length).to.eql(4);\ntree.unmount();",
              "err": {},
              "uuid": "2d1a99e2-08f7-4293-b701-4746c1aa2d10",
              "parentUUID": "817c986d-e84e-4f5d-b2f9-886e9ddd4973",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should render with empty regionalOffice",
              "fullTitle": "<ConfirmationPage> should render with empty regionalOffice",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var form = generateForm({\n  hasRegionalOffice: false\n});\nvar tree = (0, _enzyme.shallow)( /*#__PURE__*/_react.default.createElement(_ConfirmationPage.ConfirmationPage, {\n  form: form\n}));\n(0, _chai.expect)(tree.find('address').children().length).to.eql(0);\ntree.unmount();",
              "err": {},
              "uuid": "a3d5f7b9-b896-4cf5-b3c6-f95db78de0f3",
              "parentUUID": "817c986d-e84e-4f5d-b2f9-886e9ddd4973",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "654299e0-6bec-406d-92a3-976629a882c0",
            "2d1a99e2-08f7-4293-b701-4746c1aa2d10",
            "a3d5f7b9-b896-4cf5-b3c6-f95db78de0f3"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 14,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "7aea4602-5e42-464d-9b66-13910ee2c1d3",
          "title": "pension social security disability page",
          "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/chapters/03-health-and-employment-information/socialSecurityDisability.unit.spec.jsx",
          "file": "/src/applications/pensions/tests/chapters/03-health-and-employment-information/socialSecurityDisability.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "d1514478-f2a6-4987-9999-60ce06b53376",
              "title": "health history page",
              "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/chapters/03-health-and-employment-information/socialSecurityDisability.unit.spec.jsx",
              "file": "/src/applications/pensions/tests/chapters/03-health-and-employment-information/socialSecurityDisability.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should show the correct number of errors on submit for web components",
                  "fullTitle": "pension social security disability page health history page should show the correct number of errors on submit for web components",
                  "timedOut": false,
                  "duration": 19,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var _render4 = (0, _react2.render)( /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  definitions: formConfig.defaultDefinitions,\n  schema: schema,\n  uiSchema: uiSchema,\n  data: data,\n  formData: {}\n})),\n    container = _render4.container,\n    getByRole = _render4.getByRole;\ngetByRole('button', {\n  name: /submit/i\n}).click();\nvar nodes = Array.from(container.querySelectorAll(\"\".concat(expectedFieldTypesWebComponents, \", \").concat(wrapperWebComponents)));\nvar errors = nodes.filter(function (node) {\n  return node.error;\n});\n(0, _chai.expect)(errors).to.have.lengthOf(expectedNumberOfErrors);",
                  "err": {},
                  "uuid": "8eb26b52-1954-4f1b-8ae5-aebe3659be21",
                  "parentUUID": "d1514478-f2a6-4987-9999-60ce06b53376",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "8eb26b52-1954-4f1b-8ae5-aebe3659be21"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 19,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "8564bb51-76e6-4156-8513-fea3c769ea85",
              "title": "health history page",
              "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/chapters/03-health-and-employment-information/socialSecurityDisability.unit.spec.jsx",
              "file": "/src/applications/pensions/tests/chapters/03-health-and-employment-information/socialSecurityDisability.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should have appropriate number of web components",
                  "fullTitle": "pension social security disability page health history page should have appropriate number of web components",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var _render3 = (0, _react2.render)( /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  definitions: formConfig.defaultDefinitions,\n  schema: schema,\n  uiSchema: uiSchema,\n  data: data,\n  formData: {}\n})),\n    container = _render3.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypesWebComponents)).to.have.lengthOf(expectedNumberOfFields);",
                  "err": {},
                  "uuid": "508fdb8e-1ad6-4283-ae5c-9978768bd93c",
                  "parentUUID": "8564bb51-76e6-4156-8513-fea3c769ea85",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "508fdb8e-1ad6-4283-ae5c-9978768bd93c"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "b14a9201-836c-4ff9-8432-c33aa5e325a2",
          "title": "web component tests",
          "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/chapters/04-household-information/dependentChildren.unit.spec.jsx",
          "file": "/src/applications/pensions/tests/chapters/04-household-information/dependentChildren.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "3a5af5c6-876c-4a01-b705-0461c20696df",
              "title": "dependent children page",
              "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/chapters/04-household-information/dependentChildren.unit.spec.jsx",
              "file": "/src/applications/pensions/tests/chapters/04-household-information/dependentChildren.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should have appropriate number of web components",
                  "fullTitle": "web component tests dependent children page should have appropriate number of web components",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var _render3 = (0, _react2.render)( /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  definitions: formConfig.defaultDefinitions,\n  schema: schema,\n  uiSchema: uiSchema,\n  data: data,\n  formData: {}\n})),\n    container = _render3.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypesWebComponents)).to.have.lengthOf(expectedNumberOfFields);",
                  "err": {},
                  "uuid": "9569e94e-f075-4a6c-a54c-bf741e031bb6",
                  "parentUUID": "3a5af5c6-876c-4a01-b705-0461c20696df",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "9569e94e-f075-4a6c-a54c-bf741e031bb6"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 3,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "6398be6d-b486-4320-8e84-4437ecb77eb4",
              "title": "dependent children page",
              "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/chapters/04-household-information/dependentChildren.unit.spec.jsx",
              "file": "/src/applications/pensions/tests/chapters/04-household-information/dependentChildren.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should show the correct number of errors on submit for web components",
                  "fullTitle": "web component tests dependent children page should show the correct number of errors on submit for web components",
                  "timedOut": false,
                  "duration": 8,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var _render4 = (0, _react2.render)( /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  definitions: formConfig.defaultDefinitions,\n  schema: schema,\n  uiSchema: uiSchema,\n  data: data,\n  formData: {}\n})),\n    container = _render4.container,\n    getByRole = _render4.getByRole;\ngetByRole('button', {\n  name: /submit/i\n}).click();\nvar nodes = Array.from(container.querySelectorAll(\"\".concat(expectedFieldTypesWebComponents, \", \").concat(wrapperWebComponents)));\nvar errors = nodes.filter(function (node) {\n  return node.error;\n});\n(0, _chai.expect)(errors).to.have.lengthOf(expectedNumberOfErrors);",
                  "err": {},
                  "uuid": "7cdbfedb-1055-4cd0-b547-4ea07f219e1f",
                  "parentUUID": "6398be6d-b486-4320-8e84-4437ecb77eb4",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "7cdbfedb-1055-4cd0-b547-4ea07f219e1f"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 8,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "084f400f-0ac8-4a3a-ab81-03da1627f7f5",
          "title": "Pension: Financial information, receives income page",
          "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/chapters/05-financial-information/receivesIncome.unit.spec.jsx",
          "file": "/src/applications/pensions/tests/chapters/05-financial-information/receivesIncome.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "eb820739-a58a-45e2-b424-4166cfa531b6",
              "title": "Gross monthly income page",
              "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/chapters/05-financial-information/receivesIncome.unit.spec.jsx",
              "file": "/src/applications/pensions/tests/chapters/05-financial-information/receivesIncome.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should show the correct number of errors on submit for web components",
                  "fullTitle": "Pension: Financial information, receives income page Gross monthly income page should show the correct number of errors on submit for web components",
                  "timedOut": false,
                  "duration": 8,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var _render4 = (0, _react2.render)( /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  definitions: formConfig.defaultDefinitions,\n  schema: schema,\n  uiSchema: uiSchema,\n  data: data,\n  formData: {}\n})),\n    container = _render4.container,\n    getByRole = _render4.getByRole;\ngetByRole('button', {\n  name: /submit/i\n}).click();\nvar nodes = Array.from(container.querySelectorAll(\"\".concat(expectedFieldTypesWebComponents, \", \").concat(wrapperWebComponents)));\nvar errors = nodes.filter(function (node) {\n  return node.error;\n});\n(0, _chai.expect)(errors).to.have.lengthOf(expectedNumberOfErrors);",
                  "err": {},
                  "uuid": "7bc49ce2-8b95-49c4-95d4-2a41bb4470b6",
                  "parentUUID": "eb820739-a58a-45e2-b424-4166cfa531b6",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "7bc49ce2-8b95-49c4-95d4-2a41bb4470b6"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 8,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "811fd5b4-28c4-45a0-9a24-e7ba51c528c4",
              "title": "Gross monthly income page",
              "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/chapters/05-financial-information/receivesIncome.unit.spec.jsx",
              "file": "/src/applications/pensions/tests/chapters/05-financial-information/receivesIncome.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should have appropriate number of web components",
                  "fullTitle": "Pension: Financial information, receives income page Gross monthly income page should have appropriate number of web components",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var _render3 = (0, _react2.render)( /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  definitions: formConfig.defaultDefinitions,\n  schema: schema,\n  uiSchema: uiSchema,\n  data: data,\n  formData: {}\n})),\n    container = _render3.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypesWebComponents)).to.have.lengthOf(expectedNumberOfFields);",
                  "err": {},
                  "uuid": "28b212c1-c733-4b6f-988c-08581f91634b",
                  "parentUUID": "811fd5b4-28c4-45a0-9a24-e7ba51c528c4",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "28b212c1-c733-4b6f-988c-08581f91634b"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "c998bee9-fdcc-4cf4-b181-5496c82b30ad",
          "title": "<IntroductionPage />",
          "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/components/IntroductionPage.unit.spec.jsx",
          "file": "/src/applications/pensions/tests/components/IntroductionPage.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "renders",
              "fullTitle": "<IntroductionPage /> renders",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var wrapper = (0, _enzyme.shallow)( /*#__PURE__*/_react.default.createElement(_IntroductionPage.default, {\n  route: {\n    formConfig: _form.default\n  }\n}));\n(0, _chai.expect)(wrapper.find('FormTitle')).to.exist;\n(0, _chai.expect)(wrapper.find('FormTitle').props().title).to.equal('Apply for Veterans Pension benefits');\nwrapper.unmount();",
              "err": {},
              "uuid": "a451233c-755a-4e09-b758-89c86e8d27d9",
              "parentUUID": "c998bee9-fdcc-4cf4-b181-5496c82b30ad",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a451233c-755a-4e09-b758-89c86e8d27d9"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "16fb06ef-be30-46d2-929f-fd7451d2f28e",
          "title": "current spouse marital history",
          "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/chapters/04-household-information/currentSpouseMaritalHistory.unit.spec.jsx",
          "file": "/src/applications/pensions/tests/chapters/04-household-information/currentSpouseMaritalHistory.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should render web components in form correctly",
              "fullTitle": "current spouse marital history should render web components in form correctly",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var pageTitle = 'current spouse marital history';\nvar expectedNumberOfFields = 1;\n(0, _pageTests.testNumberOfWebComponentFields)(_form.default, _currentSpouseMaritalHistory.default.schema, _currentSpouseMaritalHistory.default.uiSchema, expectedNumberOfFields, pageTitle);\nvar expectedNumberOfErrors = 1;\n(0, _pageTests.testNumberOfErrorsOnSubmitForWebComponents)(_form.default, _currentSpouseMaritalHistory.default.schema, _currentSpouseMaritalHistory.default.uiSchema, expectedNumberOfErrors, pageTitle);",
              "err": {},
              "uuid": "9f7ed5b1-ceef-4023-80ad-03b950dd3586",
              "parentUUID": "16fb06ef-be30-46d2-929f-fd7451d2f28e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "9f7ed5b1-ceef-4023-80ad-03b950dd3586"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "b9d2345f-15b5-4130-81a0-1d09ac73aeab",
          "title": "pension age page",
          "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/chapters/03-health-and-employment-information/age.unit.spec.jsx",
          "file": "/src/applications/pensions/tests/chapters/03-health-and-employment-information/age.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "8c37e40d-6bf1-414a-a5ef-2f1cdb6777be",
              "title": "Age page",
              "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/chapters/03-health-and-employment-information/age.unit.spec.jsx",
              "file": "/src/applications/pensions/tests/chapters/03-health-and-employment-information/age.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should show the correct number of errors on submit for web components",
                  "fullTitle": "pension age page Age page should show the correct number of errors on submit for web components",
                  "timedOut": false,
                  "duration": 6,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var _render4 = (0, _react2.render)( /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  definitions: formConfig.defaultDefinitions,\n  schema: schema,\n  uiSchema: uiSchema,\n  data: data,\n  formData: {}\n})),\n    container = _render4.container,\n    getByRole = _render4.getByRole;\ngetByRole('button', {\n  name: /submit/i\n}).click();\nvar nodes = Array.from(container.querySelectorAll(\"\".concat(expectedFieldTypesWebComponents, \", \").concat(wrapperWebComponents)));\nvar errors = nodes.filter(function (node) {\n  return node.error;\n});\n(0, _chai.expect)(errors).to.have.lengthOf(expectedNumberOfErrors);",
                  "err": {},
                  "uuid": "d94e37e8-48e8-44c3-8ec4-7fa18bb16ec3",
                  "parentUUID": "8c37e40d-6bf1-414a-a5ef-2f1cdb6777be",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "d94e37e8-48e8-44c3-8ec4-7fa18bb16ec3"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 6,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "fbf19be8-955a-4d36-aaae-8c02f69168d6",
              "title": "Age page",
              "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/chapters/03-health-and-employment-information/age.unit.spec.jsx",
              "file": "/src/applications/pensions/tests/chapters/03-health-and-employment-information/age.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should have appropriate number of web components",
                  "fullTitle": "pension age page Age page should have appropriate number of web components",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var _render3 = (0, _react2.render)( /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  definitions: formConfig.defaultDefinitions,\n  schema: schema,\n  uiSchema: uiSchema,\n  data: data,\n  formData: {}\n})),\n    container = _render3.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypesWebComponents)).to.have.lengthOf(expectedNumberOfFields);",
                  "err": {},
                  "uuid": "ea4eb5a6-06f6-46f6-a6f8-812c4ee5ab4f",
                  "parentUUID": "fbf19be8-955a-4d36-aaae-8c02f69168d6",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "ea4eb5a6-06f6-46f6-a6f8-812c4ee5ab4f"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 3,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "819c9bb5-1408-4bd4-b42c-8a554bba2a10",
          "title": "Pensions FinancialDisclosureDescription",
          "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/components/FinancialDisclosureDescription.unit.spec.jsx",
          "file": "/src/applications/pensions/tests/components/FinancialDisclosureDescription.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should render dependent warning",
              "fullTitle": "Pensions FinancialDisclosureDescription should render dependent warning",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var pageKeys = ['dependentsNetWorth0'];\nvar viewedPages = new Set();\nvar tree = _skinDeep.default.shallowRender( /*#__PURE__*/_react.default.createElement(_FinancialDisclosureDescription.default, {\n  pageKeys: pageKeys,\n  viewedPages: viewedPages\n}));\n(0, _chai.expect)(tree.text()).to.contain('dependents you added');",
              "err": {},
              "uuid": "f6a0a8bb-2c69-4b86-833f-56f30661fa42",
              "parentUUID": "819c9bb5-1408-4bd4-b42c-8a554bba2a10",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should render spouse warning",
              "fullTitle": "Pensions FinancialDisclosureDescription should render spouse warning",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var pageKeys = ['spouseNetWorth'];\nvar viewedPages = new Set();\nvar tree = _skinDeep.default.shallowRender( /*#__PURE__*/_react.default.createElement(_FinancialDisclosureDescription.default, {\n  pageKeys: pageKeys,\n  viewedPages: viewedPages\n}));\n(0, _chai.expect)(tree.text()).to.contain('spouse have any');",
              "err": {},
              "uuid": "28cc89cc-1f33-4175-97e0-fbb3ca04af94",
              "parentUUID": "819c9bb5-1408-4bd4-b42c-8a554bba2a10",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should render no warning when there are no unviewed pages",
              "fullTitle": "Pensions FinancialDisclosureDescription should render no warning when there are no unviewed pages",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var pageKeys = ['dependentsNetWorth0'];\nvar viewedPages = new Set(['dependentsNetWorth0']);\nvar tree = _skinDeep.default.shallowRender( /*#__PURE__*/_react.default.createElement(_FinancialDisclosureDescription.default, {\n  pageKeys: pageKeys,\n  viewedPages: viewedPages\n}));\n(0, _chai.expect)(tree.text()).to.equal('');",
              "err": {},
              "uuid": "93a2b589-9ed4-4ebf-835e-1150ed94a856",
              "parentUUID": "819c9bb5-1408-4bd4-b42c-8a554bba2a10",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f6a0a8bb-2c69-4b86-833f-56f30661fa42",
            "28cc89cc-1f33-4175-97e0-fbb3ca04af94",
            "93a2b589-9ed4-4ebf-835e-1150ed94a856"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "455c54fc-4296-48c5-b5be-8ea8f4c4e969",
          "title": "bytesToKB",
          "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/components/SectionField.unit.spec.jsx",
          "file": "/src/applications/pensions/tests/components/SectionField.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "correctly converts bytes to KB",
              "fullTitle": "bytesToKB correctly converts bytes to KB",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var inputBytes = 2048;\nvar expectedKB = '2 KB';\nvar result = (0, _SectionField.bytesToKB)(inputBytes);\n(0, _chai.expect)(result).to.equal(expectedKB);",
              "err": {},
              "uuid": "b0999013-81a9-4068-93d2-d102e0920c60",
              "parentUUID": "455c54fc-4296-48c5-b5be-8ea8f4c4e969",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "b0999013-81a9-4068-93d2-d102e0920c60"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "21eb74be-667d-4df2-83e1-50fc1c6660ec",
          "title": "NoFormPage",
          "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/NoFormPage.unit.spec.jsx",
          "file": "/src/applications/pensions/tests/NoFormPage.unit.spec.jsx",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"NoFormPage\"",
              "fullTitle": "NoFormPage \"before all\" hook in \"NoFormPage\"",
              "timedOut": false,
              "duration": 1,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "server.listen();",
              "err": {},
              "uuid": "f96b0010-4f54-4bf1-bd2b-1effe86cdc62",
              "parentUUID": "21eb74be-667d-4df2-83e1-50fc1c6660ec",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"NoFormPage\"",
              "fullTitle": "NoFormPage \"after all\" hook in \"NoFormPage\"",
              "timedOut": false,
              "duration": 1,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "server.close();",
              "err": {},
              "uuid": "930fd92e-7eee-427d-9841-588f156f2b17",
              "parentUUID": "21eb74be-667d-4df2-83e1-50fc1c6660ec",
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"after each\" hook in \"NoFormPage\"",
              "fullTitle": "NoFormPage \"after each\" hook in \"NoFormPage\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "server.resetHandlers();",
              "err": {},
              "uuid": "35eeb8e2-95d9-417c-8167-615cfc9cc9e9",
              "parentUUID": "21eb74be-667d-4df2-83e1-50fc1c6660ec",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "should render if NOT logged in",
              "fullTitle": "NoFormPage should render if NOT logged in",
              "timedOut": false,
              "duration": 6,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); });",
              "err": {},
              "uuid": "162342d1-e220-4eac-ae43-b08acfb48303",
              "parentUUID": "21eb74be-667d-4df2-83e1-50fc1c6660ec",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should render if IS logged in && DOES NOT have form data in progress",
              "fullTitle": "NoFormPage should render if IS logged in && DOES NOT have form data in progress",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); });",
              "err": {},
              "uuid": "d764e2ff-3ae4-48cc-835b-bbeb4e133275",
              "parentUUID": "21eb74be-667d-4df2-83e1-50fc1c6660ec",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should render if IS logged in && DOES have form data in progress",
              "fullTitle": "NoFormPage should render if IS logged in && DOES have form data in progress",
              "timedOut": false,
              "duration": 10,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); });",
              "err": {},
              "uuid": "cfd6234d-232d-4747-a5d2-5243d75d6b3b",
              "parentUUID": "21eb74be-667d-4df2-83e1-50fc1c6660ec",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "162342d1-e220-4eac-ae43-b08acfb48303",
            "d764e2ff-3ae4-48cc-835b-bbeb4e133275",
            "cfd6234d-232d-4747-a5d2-5243d75d6b3b"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 18,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "52621ba6-684b-4009-a70d-39d2663cc3ce",
          "title": "Pensions marriage info",
          "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/config/marriageInfo.unit.spec.jsx",
          "file": "/src/applications/pensions/tests/config/marriageInfo.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should render",
              "fullTitle": "Pensions marriage info should render",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var form = _testUtils.default.renderIntoDocument( /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  schema: schema,\n  definitions: _form.default.defaultDefinitions,\n  uiSchema: uiSchema\n}));\nvar formDOM = (0, _schemaformUtils.getFormDOM)(form);\n(0, _chai.expect)(formDOM.querySelectorAll('input,select').length).to.equal(1);",
              "err": {},
              "uuid": "86f2c0c5-abf9-42db-a516-6fc2622cc7ab",
              "parentUUID": "52621ba6-684b-4009-a70d-39d2663cc3ce",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should submit with valid data",
              "fullTitle": "Pensions marriage info should submit with valid data",
              "timedOut": false,
              "duration": 4,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var onSubmit = _sinon.default.spy();\nvar form = _testUtils.default.renderIntoDocument( /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  schema: schema,\n  definitions: _form.default.defaultDefinitions,\n  onSubmit: onSubmit,\n  uiSchema: uiSchema\n}));\nvar formDOM = (0, _schemaformUtils.getFormDOM)(form);\nformDOM.fillData('#root_marriages', '1');\n(0, _schemaformUtils.submitForm)(form);\n(0, _chai.expect)(formDOM.querySelectorAll('.usa-input-error').length).to.equal(0);\n(0, _chai.expect)(onSubmit.called).to.be.true;",
              "err": {},
              "uuid": "eed0e836-a33b-4101-9803-b48f7c5aaa26",
              "parentUUID": "52621ba6-684b-4009-a70d-39d2663cc3ce",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should render marriage count",
              "fullTitle": "Pensions marriage info should render marriage count",
              "timedOut": false,
              "duration": 5,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var onSubmit = _sinon.default.spy();\nvar form = _testUtils.default.renderIntoDocument( /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  schema: schema,\n  onSubmit: onSubmit,\n  definitions: _form.default.defaultDefinitions,\n  uiSchema: uiSchema\n}));\nvar formDOM = (0, _schemaformUtils.getFormDOM)(form);\n(0, _schemaformUtils.submitForm)(form);\n(0, _chai.expect)(formDOM.querySelectorAll('input').length).to.equal(1);\n(0, _chai.expect)(formDOM.querySelectorAll('.usa-input-error').length).to.equal(1);\n(0, _chai.expect)(onSubmit.called).to.be.false;",
              "err": {},
              "uuid": "b93cc6c6-921f-4302-8e9b-8e76cf192a48",
              "parentUUID": "52621ba6-684b-4009-a70d-39d2663cc3ce",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should not submit empty form",
              "fullTitle": "Pensions marriage info should not submit empty form",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var onSubmit = _sinon.default.spy();\nvar form = _testUtils.default.renderIntoDocument( /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  schema: schema,\n  definitions: _form.default.defaultDefinitions,\n  onSubmit: onSubmit,\n  uiSchema: uiSchema\n}));\nvar formDOM = (0, _schemaformUtils.getFormDOM)(form);\n(0, _schemaformUtils.submitForm)(form);\n(0, _chai.expect)(formDOM.querySelectorAll('.usa-input-error').length).to.equal(1);\n(0, _chai.expect)(onSubmit.called).to.be.false;",
              "err": {},
              "uuid": "a2a6a947-8e97-41e0-add1-364c3106b665",
              "parentUUID": "52621ba6-684b-4009-a70d-39d2663cc3ce",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "86f2c0c5-abf9-42db-a516-6fc2622cc7ab",
            "eed0e836-a33b-4101-9803-b48f7c5aaa26",
            "b93cc6c6-921f-4302-8e9b-8e76cf192a48",
            "a2a6a947-8e97-41e0-add1-364c3106b665"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 13,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "9e887ff5-e840-4490-b973-3d84b9978610",
          "title": "Unreimbursed care expenses pension page",
          "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/chapters/05-financial-information/hasCareExpenses.unit.spec.jsx",
          "file": "/src/applications/pensions/tests/chapters/05-financial-information/hasCareExpenses.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "3c8aa45d-0c04-4851-bcc0-6cdd6768f039",
              "title": "Has care expenses page",
              "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/chapters/05-financial-information/hasCareExpenses.unit.spec.jsx",
              "file": "/src/applications/pensions/tests/chapters/05-financial-information/hasCareExpenses.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should show the correct number of errors on submit for web components",
                  "fullTitle": "Unreimbursed care expenses pension page Has care expenses page should show the correct number of errors on submit for web components",
                  "timedOut": false,
                  "duration": 10,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var _render4 = (0, _react2.render)( /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  definitions: formConfig.defaultDefinitions,\n  schema: schema,\n  uiSchema: uiSchema,\n  data: data,\n  formData: {}\n})),\n    container = _render4.container,\n    getByRole = _render4.getByRole;\ngetByRole('button', {\n  name: /submit/i\n}).click();\nvar nodes = Array.from(container.querySelectorAll(\"\".concat(expectedFieldTypesWebComponents, \", \").concat(wrapperWebComponents)));\nvar errors = nodes.filter(function (node) {\n  return node.error;\n});\n(0, _chai.expect)(errors).to.have.lengthOf(expectedNumberOfErrors);",
                  "err": {},
                  "uuid": "8dfa181c-299d-472b-bd84-8858842f8e19",
                  "parentUUID": "3c8aa45d-0c04-4851-bcc0-6cdd6768f039",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "8dfa181c-299d-472b-bd84-8858842f8e19"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 10,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "5f05b499-7d94-4863-a00f-72d4c72e7e3f",
              "title": "Has care expenses page",
              "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/chapters/05-financial-information/hasCareExpenses.unit.spec.jsx",
              "file": "/src/applications/pensions/tests/chapters/05-financial-information/hasCareExpenses.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should have appropriate number of web components",
                  "fullTitle": "Unreimbursed care expenses pension page Has care expenses page should have appropriate number of web components",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var _render3 = (0, _react2.render)( /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  definitions: formConfig.defaultDefinitions,\n  schema: schema,\n  uiSchema: uiSchema,\n  data: data,\n  formData: {}\n})),\n    container = _render3.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypesWebComponents)).to.have.lengthOf(expectedNumberOfFields);",
                  "err": {},
                  "uuid": "8896d289-6424-4a00-9267-01cd48cd10f9",
                  "parentUUID": "5f05b499-7d94-4863-a00f-72d4c72e7e3f",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "8896d289-6424-4a00-9267-01cd48cd10f9"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "e3665296-c1f9-4a54-923c-b26d2c1c44ec",
          "title": "current spouse full name page",
          "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/helpers.unit.spec.jsx",
          "file": "/src/applications/pensions/tests/helpers.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should have appropriate number of web components",
              "fullTitle": "current spouse full name page should have appropriate number of web components",
              "timedOut": false,
              "duration": 8,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _render3 = (0, _react2.render)( /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  definitions: formConfig.defaultDefinitions,\n  schema: schema,\n  uiSchema: uiSchema,\n  data: data,\n  formData: {}\n})),\n    container = _render3.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypesWebComponents)).to.have.lengthOf(expectedNumberOfFields);",
              "err": {},
              "uuid": "1f8e40d3-6b4e-4bb9-aba8-1497e8581305",
              "parentUUID": "e3665296-c1f9-4a54-923c-b26d2c1c44ec",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "1f8e40d3-6b4e-4bb9-aba8-1497e8581305"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 8,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "e83391e9-11dc-4bc0-a3b1-2070ea1a3184",
          "title": "current spouse full name page",
          "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/helpers.unit.spec.jsx",
          "file": "/src/applications/pensions/tests/helpers.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should show the correct number of errors on submit for web components",
              "fullTitle": "current spouse full name page should show the correct number of errors on submit for web components",
              "timedOut": false,
              "duration": 9,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _render4 = (0, _react2.render)( /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  definitions: formConfig.defaultDefinitions,\n  schema: schema,\n  uiSchema: uiSchema,\n  data: data,\n  formData: {}\n})),\n    container = _render4.container,\n    getByRole = _render4.getByRole;\ngetByRole('button', {\n  name: /submit/i\n}).click();\nvar nodes = Array.from(container.querySelectorAll(\"\".concat(expectedFieldTypesWebComponents, \", \").concat(wrapperWebComponents)));\nvar errors = nodes.filter(function (node) {\n  return node.error;\n});\n(0, _chai.expect)(errors).to.have.lengthOf(expectedNumberOfErrors);",
              "err": {},
              "uuid": "254dc43c-1f12-481a-925a-9d2b940246fc",
              "parentUUID": "e83391e9-11dc-4bc0-a3b1-2070ea1a3184",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "254dc43c-1f12-481a-925a-9d2b940246fc"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 9,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "ce842b1d-cab3-4cdd-8fd6-118336e8bf6d",
          "title": "marital status page",
          "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/helpers.unit.spec.jsx",
          "file": "/src/applications/pensions/tests/helpers.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should have appropriate number of web components",
              "fullTitle": "marital status page should have appropriate number of web components",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _render3 = (0, _react2.render)( /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  definitions: formConfig.defaultDefinitions,\n  schema: schema,\n  uiSchema: uiSchema,\n  data: data,\n  formData: {}\n})),\n    container = _render3.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypesWebComponents)).to.have.lengthOf(expectedNumberOfFields);",
              "err": {},
              "uuid": "6c4b690f-99ba-494f-aed6-c0546bfd8038",
              "parentUUID": "ce842b1d-cab3-4cdd-8fd6-118336e8bf6d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "6c4b690f-99ba-494f-aed6-c0546bfd8038"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "3e2c3543-0b3d-4566-8887-5f4ae68e2f2b",
          "title": "marital status page",
          "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/helpers.unit.spec.jsx",
          "file": "/src/applications/pensions/tests/helpers.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should show the correct number of errors on submit for web components",
              "fullTitle": "marital status page should show the correct number of errors on submit for web components",
              "timedOut": false,
              "duration": 10,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _render4 = (0, _react2.render)( /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  definitions: formConfig.defaultDefinitions,\n  schema: schema,\n  uiSchema: uiSchema,\n  data: data,\n  formData: {}\n})),\n    container = _render4.container,\n    getByRole = _render4.getByRole;\ngetByRole('button', {\n  name: /submit/i\n}).click();\nvar nodes = Array.from(container.querySelectorAll(\"\".concat(expectedFieldTypesWebComponents, \", \").concat(wrapperWebComponents)));\nvar errors = nodes.filter(function (node) {\n  return node.error;\n});\n(0, _chai.expect)(errors).to.have.lengthOf(expectedNumberOfErrors);",
              "err": {},
              "uuid": "5c23077a-d13a-42ae-b545-3f48187b81c9",
              "parentUUID": "3e2c3543-0b3d-4566-8887-5f4ae68e2f2b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "5c23077a-d13a-42ae-b545-3f48187b81c9"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 10,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "c9d33891-3833-4865-8be2-9ec3ff4b9bcb",
          "title": "medical centers page",
          "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/helpers.unit.spec.jsx",
          "file": "/src/applications/pensions/tests/helpers.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should have appropriate number of web components",
              "fullTitle": "medical centers page should have appropriate number of web components",
              "timedOut": false,
              "duration": 4,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _render3 = (0, _react2.render)( /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  definitions: formConfig.defaultDefinitions,\n  schema: schema,\n  uiSchema: uiSchema,\n  data: data,\n  formData: {}\n})),\n    container = _render3.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypesWebComponents)).to.have.lengthOf(expectedNumberOfFields);",
              "err": {},
              "uuid": "baaf22f5-aa3b-4d7f-a536-04841e8e9827",
              "parentUUID": "c9d33891-3833-4865-8be2-9ec3ff4b9bcb",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "baaf22f5-aa3b-4d7f-a536-04841e8e9827"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 4,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "eec193fa-8139-4276-bd1b-156bbbcc87a8",
          "title": "medical centers page",
          "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/helpers.unit.spec.jsx",
          "file": "/src/applications/pensions/tests/helpers.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should show the correct number of errors on submit for web components",
              "fullTitle": "medical centers page should show the correct number of errors on submit for web components",
              "timedOut": false,
              "duration": 10,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _render4 = (0, _react2.render)( /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  definitions: formConfig.defaultDefinitions,\n  schema: schema,\n  uiSchema: uiSchema,\n  data: data,\n  formData: {}\n})),\n    container = _render4.container,\n    getByRole = _render4.getByRole;\ngetByRole('button', {\n  name: /submit/i\n}).click();\nvar nodes = Array.from(container.querySelectorAll(\"\".concat(expectedFieldTypesWebComponents, \", \").concat(wrapperWebComponents)));\nvar errors = nodes.filter(function (node) {\n  return node.error;\n});\n(0, _chai.expect)(errors).to.have.lengthOf(expectedNumberOfErrors);",
              "err": {},
              "uuid": "8355960c-e803-4d81-b99b-becc4fd6a67d",
              "parentUUID": "eec193fa-8139-4276-bd1b-156bbbcc87a8",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "8355960c-e803-4d81-b99b-becc4fd6a67d"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 10,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "d1ff2715-e142-4a49-ac5b-f96b10bab938",
          "title": "treatment history page",
          "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/helpers.unit.spec.jsx",
          "file": "/src/applications/pensions/tests/helpers.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should have appropriate number of web components",
              "fullTitle": "treatment history page should have appropriate number of web components",
              "timedOut": false,
              "duration": 4,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _render3 = (0, _react2.render)( /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  definitions: formConfig.defaultDefinitions,\n  schema: schema,\n  uiSchema: uiSchema,\n  data: data,\n  formData: {}\n})),\n    container = _render3.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypesWebComponents)).to.have.lengthOf(expectedNumberOfFields);",
              "err": {},
              "uuid": "80fa7f0f-d986-42b4-96e2-06bd0b640cad",
              "parentUUID": "d1ff2715-e142-4a49-ac5b-f96b10bab938",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "80fa7f0f-d986-42b4-96e2-06bd0b640cad"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 4,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "91a81e68-02b6-4ee9-b957-96082bf4d176",
          "title": "treatment history page",
          "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/helpers.unit.spec.jsx",
          "file": "/src/applications/pensions/tests/helpers.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should show the correct number of errors on submit for web components",
              "fullTitle": "treatment history page should show the correct number of errors on submit for web components",
              "timedOut": false,
              "duration": 9,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _render4 = (0, _react2.render)( /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  definitions: formConfig.defaultDefinitions,\n  schema: schema,\n  uiSchema: uiSchema,\n  data: data,\n  formData: {}\n})),\n    container = _render4.container,\n    getByRole = _render4.getByRole;\ngetByRole('button', {\n  name: /submit/i\n}).click();\nvar nodes = Array.from(container.querySelectorAll(\"\".concat(expectedFieldTypesWebComponents, \", \").concat(wrapperWebComponents)));\nvar errors = nodes.filter(function (node) {\n  return node.error;\n});\n(0, _chai.expect)(errors).to.have.lengthOf(expectedNumberOfErrors);",
              "err": {},
              "uuid": "b6404bcc-37a7-4313-b3a7-ae4cf9931510",
              "parentUUID": "91a81e68-02b6-4ee9-b957-96082bf4d176",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "b6404bcc-37a7-4313-b3a7-ae4cf9931510"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 9,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "f59c8546-4afc-454f-a7b3-1d643fc6a160",
          "title": "reason for separation page",
          "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/helpers.unit.spec.jsx",
          "file": "/src/applications/pensions/tests/helpers.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should have appropriate number of web components",
              "fullTitle": "reason for separation page should have appropriate number of web components",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _render3 = (0, _react2.render)( /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  definitions: formConfig.defaultDefinitions,\n  schema: schema,\n  uiSchema: uiSchema,\n  data: data,\n  formData: {}\n})),\n    container = _render3.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypesWebComponents)).to.have.lengthOf(expectedNumberOfFields);",
              "err": {},
              "uuid": "0e024779-6786-4c02-a645-4d62b385ae07",
              "parentUUID": "f59c8546-4afc-454f-a7b3-1d643fc6a160",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "0e024779-6786-4c02-a645-4d62b385ae07"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "647d0139-9e7f-4627-8b5d-06fbfe75ab89",
          "title": "reason for separation page",
          "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/helpers.unit.spec.jsx",
          "file": "/src/applications/pensions/tests/helpers.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should show the correct number of errors on submit for web components",
              "fullTitle": "reason for separation page should show the correct number of errors on submit for web components",
              "timedOut": false,
              "duration": 6,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _render4 = (0, _react2.render)( /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  definitions: formConfig.defaultDefinitions,\n  schema: schema,\n  uiSchema: uiSchema,\n  data: data,\n  formData: {}\n})),\n    container = _render4.container,\n    getByRole = _render4.getByRole;\ngetByRole('button', {\n  name: /submit/i\n}).click();\nvar nodes = Array.from(container.querySelectorAll(\"\".concat(expectedFieldTypesWebComponents, \", \").concat(wrapperWebComponents)));\nvar errors = nodes.filter(function (node) {\n  return node.error;\n});\n(0, _chai.expect)(errors).to.have.lengthOf(expectedNumberOfErrors);",
              "err": {},
              "uuid": "9726eb7d-06ae-4959-bbb3-2c3e62e53a10",
              "parentUUID": "647d0139-9e7f-4627-8b5d-06fbfe75ab89",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "9726eb7d-06ae-4959-bbb3-2c3e62e53a10"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 6,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "f137eee0-9506-4e60-a17d-33d5d14234f8",
          "title": "current spouse marital history page",
          "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/helpers.unit.spec.jsx",
          "file": "/src/applications/pensions/tests/helpers.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should have appropriate number of web components",
              "fullTitle": "current spouse marital history page should have appropriate number of web components",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _render3 = (0, _react2.render)( /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  definitions: formConfig.defaultDefinitions,\n  schema: schema,\n  uiSchema: uiSchema,\n  data: data,\n  formData: {}\n})),\n    container = _render3.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypesWebComponents)).to.have.lengthOf(expectedNumberOfFields);",
              "err": {},
              "uuid": "e8e6c42d-d6a9-4ce8-990d-440e42f96e8b",
              "parentUUID": "f137eee0-9506-4e60-a17d-33d5d14234f8",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "e8e6c42d-d6a9-4ce8-990d-440e42f96e8b"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "4b035c82-ac35-4d41-a354-8a3bd09a429b",
          "title": "current spouse marital history page",
          "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/helpers.unit.spec.jsx",
          "file": "/src/applications/pensions/tests/helpers.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should show the correct number of errors on submit for web components",
              "fullTitle": "current spouse marital history page should show the correct number of errors on submit for web components",
              "timedOut": false,
              "duration": 10,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _render4 = (0, _react2.render)( /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  definitions: formConfig.defaultDefinitions,\n  schema: schema,\n  uiSchema: uiSchema,\n  data: data,\n  formData: {}\n})),\n    container = _render4.container,\n    getByRole = _render4.getByRole;\ngetByRole('button', {\n  name: /submit/i\n}).click();\nvar nodes = Array.from(container.querySelectorAll(\"\".concat(expectedFieldTypesWebComponents, \", \").concat(wrapperWebComponents)));\nvar errors = nodes.filter(function (node) {\n  return node.error;\n});\n(0, _chai.expect)(errors).to.have.lengthOf(expectedNumberOfErrors);",
              "err": {},
              "uuid": "b5189d4a-396f-4139-8484-8ebcbab08e32",
              "parentUUID": "4b035c82-ac35-4d41-a354-8a3bd09a429b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "b5189d4a-396f-4139-8484-8ebcbab08e32"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 10,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 10000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "undefined_2024-01-03T152450349Z",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "min",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "id": "default",
        "consoleReporter": "min",
        "reportDir": "mocha/results",
        "reportFilename": "undefined_2024-01-03T152450349Z",
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}