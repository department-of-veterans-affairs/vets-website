{
  "stats": {
    "suites": 147,
    "tests": 193,
    "passes": 193,
    "pending": 0,
    "failures": 0,
    "start": "2024-01-03T15:32:10.270Z",
    "end": "2024-01-03T15:32:12.928Z",
    "duration": 2658,
    "testsRegistered": 193,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "0c61e128-ac71-4c3c-8e55-851dc36b4523",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [
        {
          "title": "\"before each\" hook: beforeEach in \"{root}\"",
          "fullTitle": "\"before each\" hook: beforeEach in \"{root}\"",
          "timedOut": false,
          "duration": 3,
          "state": null,
          "speed": null,
          "pass": false,
          "fail": false,
          "pending": false,
          "context": null,
          "code": "setupJSDom();\nresetFetch();\ncleanupStorage();\nif (!isStressTest) {\n  checkAllowList(this);\n}",
          "err": {},
          "uuid": "56a7f224-fc5a-4737-93bb-ed96d4c77285",
          "parentUUID": "0c61e128-ac71-4c3c-8e55-851dc36b4523",
          "isHook": true,
          "skipped": false
        }
      ],
      "afterHooks": [
        {
          "title": "\"after each\" hook: afterEach in \"{root}\"",
          "fullTitle": "\"after each\" hook: afterEach in \"{root}\"",
          "timedOut": false,
          "duration": 0,
          "state": null,
          "speed": null,
          "pass": false,
          "fail": false,
          "pending": false,
          "context": null,
          "code": "cleanupStorage();",
          "err": {},
          "uuid": "f3d3ecca-31b2-481b-a2af-683f4a5ec551",
          "parentUUID": "0c61e128-ac71-4c3c-8e55-851dc36b4523",
          "isHook": true,
          "skipped": false
        },
        {
          "title": "\"after each\" hook in \"{root}\"",
          "fullTitle": "\"after each\" hook in \"{root}\"",
          "timedOut": false,
          "duration": 0,
          "state": null,
          "speed": null,
          "pass": false,
          "fail": false,
          "pending": false,
          "context": null,
          "code": "(0, _pure.cleanup)();",
          "err": {},
          "uuid": "40344efd-cf46-4c04-8c00-2078ca4f1147",
          "parentUUID": "0c61e128-ac71-4c3c-8e55-851dc36b4523",
          "isHook": true,
          "skipped": false
        }
      ],
      "tests": [],
      "suites": [
        {
          "uuid": "7bab7de0-ccae-417a-86aa-a1850eb3bea9",
          "title": "Pensions: Financial information transferred assets page",
          "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/chapters/05-financial-information/transferredAssets.unit.spec.jsx",
          "file": "/src/applications/pensions/tests/chapters/05-financial-information/transferredAssets.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "f049be7e-d7eb-4445-916b-7124c23a4392",
              "title": "transferred assets page",
              "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/chapters/05-financial-information/transferredAssets.unit.spec.jsx",
              "file": "/src/applications/pensions/tests/chapters/05-financial-information/transferredAssets.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should show the correct number of errors on submit for web components",
                  "fullTitle": "Pensions: Financial information transferred assets page transferred assets page should show the correct number of errors on submit for web components",
                  "timedOut": false,
                  "duration": 70,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var _render4 = (0, _react2.render)( /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  definitions: formConfig.defaultDefinitions,\n  schema: schema,\n  uiSchema: uiSchema,\n  data: data,\n  formData: {}\n})),\n    container = _render4.container,\n    getByRole = _render4.getByRole;\ngetByRole('button', {\n  name: /submit/i\n}).click();\nvar nodes = Array.from(container.querySelectorAll(\"\".concat(expectedFieldTypesWebComponents, \", \").concat(wrapperWebComponents)));\nvar errors = nodes.filter(function (node) {\n  return node.error;\n});\n(0, _chai.expect)(errors).to.have.lengthOf(expectedNumberOfErrors);",
                  "err": {},
                  "uuid": "b59a94f4-2906-49ef-8790-2431a44abd0a",
                  "parentUUID": "f049be7e-d7eb-4445-916b-7124c23a4392",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "b59a94f4-2906-49ef-8790-2431a44abd0a"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 70,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "54971120-88d4-4007-9446-2af8fde9c235",
              "title": "transferred assets page",
              "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/chapters/05-financial-information/transferredAssets.unit.spec.jsx",
              "file": "/src/applications/pensions/tests/chapters/05-financial-information/transferredAssets.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should have appropriate number of web components",
                  "fullTitle": "Pensions: Financial information transferred assets page transferred assets page should have appropriate number of web components",
                  "timedOut": false,
                  "duration": 5,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var _render3 = (0, _react2.render)( /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  definitions: formConfig.defaultDefinitions,\n  schema: schema,\n  uiSchema: uiSchema,\n  data: data,\n  formData: {}\n})),\n    container = _render3.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypesWebComponents)).to.have.lengthOf(expectedNumberOfFields);",
                  "err": {},
                  "uuid": "2b57a8eb-dd3a-4ac7-9ff1-4b1997465577",
                  "parentUUID": "54971120-88d4-4007-9446-2af8fde9c235",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "2b57a8eb-dd3a-4ac7-9ff1-4b1997465577"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 5,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "13bf6e6b-2107-4a12-9fa1-eb9316b7fa6e",
          "title": "Pensions document upload",
          "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/config/documents.unit.spec.jsx",
          "file": "/src/applications/pensions/tests/config/documents.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should submit with valid data",
              "fullTitle": "Pensions document upload should submit with valid data",
              "timedOut": false,
              "duration": 18,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var onSubmit = _sinon.default.spy();\nvar form = (0, _react2.render)( /*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n  store: _helpers.uploadStore\n}, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  schema: schema,\n  data: {\n    files: [{\n      confirmationCode: 'testing'\n    }, {\n      confirmationCode: 'testing2'\n    }]\n  },\n  definitions: _form.default.defaultDefinitions,\n  onSubmit: onSubmit,\n  uiSchema: uiSchema\n})));\nvar formDOM = (0, _schemaformUtils.getFormDOM)(form);\nformDOM.submitForm();\n(0, _chai.expect)(onSubmit.called).to.be.true;",
              "err": {},
              "uuid": "d3cebf88-1da9-4299-a612-98546b321454",
              "parentUUID": "13bf6e6b-2107-4a12-9fa1-eb9316b7fa6e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should submit empty form",
              "fullTitle": "Pensions document upload should submit empty form",
              "timedOut": false,
              "duration": 9,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var onSubmit = _sinon.default.spy();\nvar form = (0, _react2.render)( /*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n  store: _helpers.uploadStore\n}, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  schema: schema,\n  definitions: _form.default.defaultDefinitions,\n  onSubmit: onSubmit,\n  uiSchema: uiSchema,\n  data: {}\n})));\nvar formDOM = (0, _schemaformUtils.getFormDOM)(form);\nformDOM.submitForm();\n(0, _chai.expect)(formDOM.querySelectorAll('.usa-input-error').length).to.equal(0);\n(0, _chai.expect)(onSubmit.called).to.be.true;",
              "err": {},
              "uuid": "0b7fcc1b-b2e0-48ed-a69a-30a756890723",
              "parentUUID": "13bf6e6b-2107-4a12-9fa1-eb9316b7fa6e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should render",
              "fullTitle": "Pensions document upload should render",
              "timedOut": false,
              "duration": 6,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var form = (0, _react2.render)( /*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n  store: _helpers.uploadStore\n}, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  schema: schema,\n  definitions: _form.default.defaultDefinitions,\n  uiSchema: uiSchema,\n  data: {}\n})));\nvar formDOM = (0, _schemaformUtils.getFormDOM)(form);\n(0, _chai.expect)(formDOM.querySelectorAll('input,select').length).to.equal(1);",
              "err": {},
              "uuid": "72f3970f-8f8f-4eff-90a9-b17ede0dc1c2",
              "parentUUID": "13bf6e6b-2107-4a12-9fa1-eb9316b7fa6e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "d3cebf88-1da9-4299-a612-98546b321454",
            "0b7fcc1b-b2e0-48ed-a69a-30a756890723",
            "72f3970f-8f8f-4eff-90a9-b17ede0dc1c2"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 33,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "a2105812-da9a-44ea-9c57-dada5441b5c8",
          "title": "medicaid status pension page",
          "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/chapters/03-health-and-employment-information/medicaidStatus.unit.spec.jsx",
          "file": "/src/applications/pensions/tests/chapters/03-health-and-employment-information/medicaidStatus.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "08fbaf03-5e0d-4908-a6a3-88157440bf63",
              "title": "medicaid status page",
              "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/chapters/03-health-and-employment-information/medicaidStatus.unit.spec.jsx",
              "file": "/src/applications/pensions/tests/chapters/03-health-and-employment-information/medicaidStatus.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should have appropriate number of web components",
                  "fullTitle": "medicaid status pension page medicaid status page should have appropriate number of web components",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var _render3 = (0, _react2.render)( /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  definitions: formConfig.defaultDefinitions,\n  schema: schema,\n  uiSchema: uiSchema,\n  data: data,\n  formData: {}\n})),\n    container = _render3.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypesWebComponents)).to.have.lengthOf(expectedNumberOfFields);",
                  "err": {},
                  "uuid": "68371ef4-74bd-4bad-9689-d637ad01e734",
                  "parentUUID": "08fbaf03-5e0d-4908-a6a3-88157440bf63",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "68371ef4-74bd-4bad-9689-d637ad01e734"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 3,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "313e5939-d27d-4db3-9774-0eb8900ddc76",
              "title": "medicaid status page",
              "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/chapters/03-health-and-employment-information/medicaidStatus.unit.spec.jsx",
              "file": "/src/applications/pensions/tests/chapters/03-health-and-employment-information/medicaidStatus.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should show the correct number of errors on submit for web components",
                  "fullTitle": "medicaid status pension page medicaid status page should show the correct number of errors on submit for web components",
                  "timedOut": false,
                  "duration": 17,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var _render4 = (0, _react2.render)( /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  definitions: formConfig.defaultDefinitions,\n  schema: schema,\n  uiSchema: uiSchema,\n  data: data,\n  formData: {}\n})),\n    container = _render4.container,\n    getByRole = _render4.getByRole;\ngetByRole('button', {\n  name: /submit/i\n}).click();\nvar nodes = Array.from(container.querySelectorAll(\"\".concat(expectedFieldTypesWebComponents, \", \").concat(wrapperWebComponents)));\nvar errors = nodes.filter(function (node) {\n  return node.error;\n});\n(0, _chai.expect)(errors).to.have.lengthOf(expectedNumberOfErrors);",
                  "err": {},
                  "uuid": "05833c8a-31a5-433a-9723-75cc0e4a3bfa",
                  "parentUUID": "313e5939-d27d-4db3-9774-0eb8900ddc76",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "05833c8a-31a5-433a-9723-75cc0e4a3bfa"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 17,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "99d45fcc-9851-45e6-a545-50edb7d4a0a7",
          "title": "financial information home acreage pension page",
          "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/chapters/05-financial-information/homeAcreageMoreThanTwo.unit.spec.jsx",
          "file": "/src/applications/pensions/tests/chapters/05-financial-information/homeAcreageMoreThanTwo.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "51fd9978-d126-41a8-9cda-5a8d1f090b1b",
              "title": "home acreage page",
              "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/chapters/05-financial-information/homeAcreageMoreThanTwo.unit.spec.jsx",
              "file": "/src/applications/pensions/tests/chapters/05-financial-information/homeAcreageMoreThanTwo.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should show the correct number of errors on submit for web components",
                  "fullTitle": "financial information home acreage pension page home acreage page should show the correct number of errors on submit for web components",
                  "timedOut": false,
                  "duration": 14,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var _render4 = (0, _react2.render)( /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  definitions: formConfig.defaultDefinitions,\n  schema: schema,\n  uiSchema: uiSchema,\n  data: data,\n  formData: {}\n})),\n    container = _render4.container,\n    getByRole = _render4.getByRole;\ngetByRole('button', {\n  name: /submit/i\n}).click();\nvar nodes = Array.from(container.querySelectorAll(\"\".concat(expectedFieldTypesWebComponents, \", \").concat(wrapperWebComponents)));\nvar errors = nodes.filter(function (node) {\n  return node.error;\n});\n(0, _chai.expect)(errors).to.have.lengthOf(expectedNumberOfErrors);",
                  "err": {},
                  "uuid": "40656d5e-47c2-4758-8208-cee384f0abbd",
                  "parentUUID": "51fd9978-d126-41a8-9cda-5a8d1f090b1b",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "40656d5e-47c2-4758-8208-cee384f0abbd"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 14,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "6ba8e6c6-7610-4348-a3ce-8799f1457d47",
              "title": "home acreage page",
              "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/chapters/05-financial-information/homeAcreageMoreThanTwo.unit.spec.jsx",
              "file": "/src/applications/pensions/tests/chapters/05-financial-information/homeAcreageMoreThanTwo.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should have appropriate number of web components",
                  "fullTitle": "financial information home acreage pension page home acreage page should have appropriate number of web components",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var _render3 = (0, _react2.render)( /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  definitions: formConfig.defaultDefinitions,\n  schema: schema,\n  uiSchema: uiSchema,\n  data: data,\n  formData: {}\n})),\n    container = _render3.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypesWebComponents)).to.have.lengthOf(expectedNumberOfFields);",
                  "err": {},
                  "uuid": "f0e0c066-2101-454e-8fe8-fcbc8f45e49a",
                  "parentUUID": "6ba8e6c6-7610-4348-a3ce-8799f1457d47",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "f0e0c066-2101-454e-8fe8-fcbc8f45e49a"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "227b9a31-5147-4337-86dd-491da0cc757c",
          "title": "Pensions spouse info",
          "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/config/spouseMarriageInfo.unit.spec.jsx",
          "file": "/src/applications/pensions/tests/config/spouseMarriageInfo.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should render spouse address and contrib fields",
              "fullTitle": "Pensions spouse info should render spouse address and contrib fields",
              "timedOut": false,
              "duration": 99,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var form = _testUtils.default.renderIntoDocument( /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  schema: schema,\n  data: {\n    marriages: [{\n      spouseFullName: {\n        first: 'Jane',\n        last: 'Doe'\n      }\n    }]\n  },\n  definitions: _form.default.defaultDefinitions,\n  uiSchema: uiSchema\n}));\nvar formDOM = (0, _schemaformUtils.getFormDOM)(form);\n(0, _chai.expect)(formDOM.querySelectorAll('input,select').length).to.equal(9);\nformDOM.fillData('#root_liveWithSpouseNo', 'N');\n(0, _chai.expect)(formDOM.querySelectorAll('input,select').length).to.equal(17);\n(0, _schemaformUtils.submitForm)(form);\n(0, _chai.expect)(formDOM.querySelectorAll('.usa-input-error').length).to.equal(10);",
              "err": {},
              "uuid": "3efc44d3-1047-47d6-8c65-e3df3df83695",
              "parentUUID": "227b9a31-5147-4337-86dd-491da0cc757c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should render file number",
              "fullTitle": "Pensions spouse info should render file number",
              "timedOut": false,
              "duration": 21,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var form = _testUtils.default.renderIntoDocument( /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  schema: schema,\n  data: {\n    marriages: [{\n      spouseFullName: {\n        first: 'Jane',\n        last: 'Doe'\n      }\n    }]\n  },\n  definitions: _form.default.defaultDefinitions,\n  uiSchema: uiSchema\n}));\nvar formDOM = (0, _schemaformUtils.getFormDOM)(form);\n(0, _chai.expect)(formDOM.querySelectorAll('input,select').length).to.equal(9);\nformDOM.fillData('#root_spouseIsVeteranYes', 'Y');\n(0, _chai.expect)(formDOM.querySelectorAll('input,select').length).to.equal(10);",
              "err": {},
              "uuid": "4f53791d-2950-428b-8548-b4839b710b28",
              "parentUUID": "227b9a31-5147-4337-86dd-491da0cc757c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "depends should return true if married",
              "fullTitle": "Pensions spouse info depends should return true if married",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var result = depends({\n  maritalStatus: 'Married'\n});\n(0, _chai.expect)(result).to.be.true;",
              "err": {},
              "uuid": "662a0043-28f3-4fae-879d-f2e08543ac95",
              "parentUUID": "227b9a31-5147-4337-86dd-491da0cc757c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should submit with valid data",
              "fullTitle": "Pensions spouse info should submit with valid data",
              "timedOut": false,
              "duration": 55,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var onSubmit = _sinon.default.spy();\nvar form = _testUtils.default.renderIntoDocument( /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  schema: schema,\n  definitions: _form.default.defaultDefinitions,\n  onSubmit: onSubmit,\n  uiSchema: uiSchema\n}));\nvar formDOM = (0, _schemaformUtils.getFormDOM)(form);\nformDOM.fillData('#root_spouseDateOfBirthMonth', '2');\nformDOM.fillData('#root_spouseDateOfBirthDay', '2');\nformDOM.fillData('#root_spouseDateOfBirthYear', '2000');\nformDOM.fillData('#root_spouseSocialSecurityNumber', '234432444');\nformDOM.fillData('#root_spouseIsVeteranNo', 'N');\nformDOM.fillData('#root_liveWithSpouseYes', 'Y');\nformDOM.fillData('#root_spouseMarriages', '1');\n(0, _schemaformUtils.submitForm)(form);\n(0, _chai.expect)(formDOM.querySelectorAll('.usa-input-error').length).to.equal(0);\n(0, _chai.expect)(onSubmit.called).to.be.true;",
              "err": {},
              "uuid": "759e304d-a05c-4373-a802-dcb9cf0ab9a6",
              "parentUUID": "227b9a31-5147-4337-86dd-491da0cc757c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should not submit empty form",
              "fullTitle": "Pensions spouse info should not submit empty form",
              "timedOut": false,
              "duration": 15,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var onSubmit = _sinon.default.spy();\nvar form = _testUtils.default.renderIntoDocument( /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  schema: schema,\n  definitions: _form.default.defaultDefinitions,\n  onSubmit: onSubmit,\n  uiSchema: uiSchema\n}));\nvar formDOM = (0, _schemaformUtils.getFormDOM)(form);\n(0, _schemaformUtils.submitForm)(form);\n(0, _chai.expect)(formDOM.querySelectorAll('.usa-input-error').length).to.equal(5);\n(0, _chai.expect)(onSubmit.called).to.be.false;",
              "err": {},
              "uuid": "38f846f6-1884-4ceb-a175-3c1fae9ecdb1",
              "parentUUID": "227b9a31-5147-4337-86dd-491da0cc757c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should render",
              "fullTitle": "Pensions spouse info should render",
              "timedOut": false,
              "duration": 9,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var form = _testUtils.default.renderIntoDocument( /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  schema: schema,\n  data: {\n    marriages: [{\n      spouseFullName: {\n        first: 'Jane',\n        last: 'Doe'\n      }\n    }]\n  },\n  definitions: _form.default.defaultDefinitions,\n  uiSchema: uiSchema\n}));\nvar formDOM = (0, _schemaformUtils.getFormDOM)(form);\n(0, _chai.expect)(formDOM.querySelectorAll('input,select').length).to.equal(9);\n(0, _chai.expect)(formDOM.querySelectorAll('legend')[1].textContent).to.contain('Jane Doe');\n(0, _chai.expect)(formDOM.querySelector('label[for=\"root_spouseSocialSecurityNumber\"]').textContent).to.contain('Jane Doe');",
              "err": {},
              "uuid": "17b23af9-fe7d-498e-b2b5-f0e095c0de40",
              "parentUUID": "227b9a31-5147-4337-86dd-491da0cc757c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "3efc44d3-1047-47d6-8c65-e3df3df83695",
            "4f53791d-2950-428b-8548-b4839b710b28",
            "662a0043-28f3-4fae-879d-f2e08543ac95",
            "759e304d-a05c-4373-a802-dcb9cf0ab9a6",
            "38f846f6-1884-4ceb-a175-3c1fae9ecdb1",
            "17b23af9-fe7d-498e-b2b5-f0e095c0de40"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 199,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "76755496-7aa9-4b49-a161-94cb2e1388ac",
          "title": "Faster claim processing pension page",
          "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/chapters/06-additional-information/fasterClaimProcessing.unit.spec.jsx",
          "file": "/src/applications/pensions/tests/chapters/06-additional-information/fasterClaimProcessing.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "e116c5a4-9e91-4e32-b27c-8bebfd11d98c",
              "title": "Faster claim processing (optional) page",
              "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/chapters/06-additional-information/fasterClaimProcessing.unit.spec.jsx",
              "file": "/src/applications/pensions/tests/chapters/06-additional-information/fasterClaimProcessing.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should have appropriate number of fields",
                  "fullTitle": "Faster claim processing pension page Faster claim processing (optional) page should have appropriate number of fields",
                  "timedOut": false,
                  "duration": 5,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var _render = (0, _react2.render)( /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  definitions: formConfig.defaultDefinitions,\n  schema: schema,\n  uiSchema: uiSchema,\n  data: data,\n  formData: {}\n})),\n    container = _render.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypes)).to.have.lengthOf(expectedNumberOfFields);",
                  "err": {},
                  "uuid": "3b3a3c91-2e74-48c5-abb0-b0201d83258c",
                  "parentUUID": "e116c5a4-9e91-4e32-b27c-8bebfd11d98c",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "3b3a3c91-2e74-48c5-abb0-b0201d83258c"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 5,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "8ac6a8db-9040-4878-b1c0-77b1a2f31734",
          "title": "web component tests",
          "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/chapters/02-military-history/pow.unit.spec.jsx",
          "file": "/src/applications/pensions/tests/chapters/02-military-history/pow.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "feef76e3-cec7-4a8e-a30d-975577ff53ba",
              "title": "military history page",
              "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/chapters/02-military-history/pow.unit.spec.jsx",
              "file": "/src/applications/pensions/tests/chapters/02-military-history/pow.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should show the correct number of errors on submit for web components",
                  "fullTitle": "web component tests military history page should show the correct number of errors on submit for web components",
                  "timedOut": false,
                  "duration": 22,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var _render4 = (0, _react2.render)( /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  definitions: formConfig.defaultDefinitions,\n  schema: schema,\n  uiSchema: uiSchema,\n  data: data,\n  formData: {}\n})),\n    container = _render4.container,\n    getByRole = _render4.getByRole;\ngetByRole('button', {\n  name: /submit/i\n}).click();\nvar nodes = Array.from(container.querySelectorAll(\"\".concat(expectedFieldTypesWebComponents, \", \").concat(wrapperWebComponents)));\nvar errors = nodes.filter(function (node) {\n  return node.error;\n});\n(0, _chai.expect)(errors).to.have.lengthOf(expectedNumberOfErrors);",
                  "err": {},
                  "uuid": "b2ec5f5d-88cb-483c-98fd-5a5974071d78",
                  "parentUUID": "feef76e3-cec7-4a8e-a30d-975577ff53ba",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "b2ec5f5d-88cb-483c-98fd-5a5974071d78"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 22,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "dcea9ce0-6cee-4ee2-88f8-568513a234f9",
              "title": "military history page",
              "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/chapters/02-military-history/pow.unit.spec.jsx",
              "file": "/src/applications/pensions/tests/chapters/02-military-history/pow.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should have appropriate number of web components",
                  "fullTitle": "web component tests military history page should have appropriate number of web components",
                  "timedOut": false,
                  "duration": 4,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var _render3 = (0, _react2.render)( /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  definitions: formConfig.defaultDefinitions,\n  schema: schema,\n  uiSchema: uiSchema,\n  data: data,\n  formData: {}\n})),\n    container = _render3.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypesWebComponents)).to.have.lengthOf(expectedNumberOfFields);",
                  "err": {},
                  "uuid": "8a371739-93d5-4507-ad1c-31bcb15dfb9c",
                  "parentUUID": "dcea9ce0-6cee-4ee2-88f8-568513a234f9",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "8a371739-93d5-4507-ad1c-31bcb15dfb9c"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 4,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "4cbe8733-17e5-4084-8e47-855a26092e8c",
          "title": "scrollToTop function",
          "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/containers/ConfirmationPage.unit.spec.jsx",
          "file": "/src/applications/pensions/tests/containers/ConfirmationPage.unit.spec.jsx",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"scrollToTop function\"",
              "fullTitle": "scrollToTop function \"before each\" hook in \"scrollToTop function\"",
              "timedOut": false,
              "duration": 3,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "scrollToSpy = _sinon.default.stub(Scroll.scroller, 'scrollTo');",
              "err": {},
              "uuid": "9e0a608c-0068-47f5-aaed-b094fc83f3ac",
              "parentUUID": "4cbe8733-17e5-4084-8e47-855a26092e8c",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after each\" hook in \"scrollToTop function\"",
              "fullTitle": "scrollToTop function \"after each\" hook in \"scrollToTop function\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "scrollToSpy.restore();",
              "err": {},
              "uuid": "551ad755-ec7a-45b0-8e55-311096336ff8",
              "parentUUID": "4cbe8733-17e5-4084-8e47-855a26092e8c",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "should call scroller.scrollTo with correct parameters",
              "fullTitle": "scrollToTop function should call scroller.scrollTo with correct parameters",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, _helpers.scrollToTop)();\n(0, _chai.expect)(scrollToSpy.calledOnce).to.be.true;\n(0, _chai.expect)(scrollToSpy.calledWith('topScrollElement', {\n  duration: 500,\n  delay: 0,\n  smooth: true\n})).to.be.true;",
              "err": {},
              "uuid": "52d78e64-1929-43fe-a3c0-e81ac2faf08e",
              "parentUUID": "4cbe8733-17e5-4084-8e47-855a26092e8c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "52d78e64-1929-43fe-a3c0-e81ac2faf08e"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "b3c4eac9-6092-4180-8756-5e9a045fbd98",
          "title": "Financial information net worth estimation pension page",
          "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/chapters/05-financial-information/netWorthEstimation.unit.spec.jsx",
          "file": "/src/applications/pensions/tests/chapters/05-financial-information/netWorthEstimation.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "f2d97fa5-eef6-4b00-96ca-c820130943fb",
              "title": "net worth estimation page",
              "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/chapters/05-financial-information/netWorthEstimation.unit.spec.jsx",
              "file": "/src/applications/pensions/tests/chapters/05-financial-information/netWorthEstimation.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should show the correct number of errors on submit for web components",
                  "fullTitle": "Financial information net worth estimation pension page net worth estimation page should show the correct number of errors on submit for web components",
                  "timedOut": false,
                  "duration": 19,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var _render4 = (0, _react2.render)( /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  definitions: formConfig.defaultDefinitions,\n  schema: schema,\n  uiSchema: uiSchema,\n  data: data,\n  formData: {}\n})),\n    container = _render4.container,\n    getByRole = _render4.getByRole;\ngetByRole('button', {\n  name: /submit/i\n}).click();\nvar nodes = Array.from(container.querySelectorAll(\"\".concat(expectedFieldTypesWebComponents, \", \").concat(wrapperWebComponents)));\nvar errors = nodes.filter(function (node) {\n  return node.error;\n});\n(0, _chai.expect)(errors).to.have.lengthOf(expectedNumberOfErrors);",
                  "err": {},
                  "uuid": "a6630d87-5e5e-4498-9dda-8796e663de92",
                  "parentUUID": "f2d97fa5-eef6-4b00-96ca-c820130943fb",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "a6630d87-5e5e-4498-9dda-8796e663de92"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 19,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "1386c0ce-fbc0-4b2b-a6fb-e0157db4ba58",
              "title": "net worth estimation page",
              "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/chapters/05-financial-information/netWorthEstimation.unit.spec.jsx",
              "file": "/src/applications/pensions/tests/chapters/05-financial-information/netWorthEstimation.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should have appropriate number of web components",
                  "fullTitle": "Financial information net worth estimation pension page net worth estimation page should have appropriate number of web components",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var _render3 = (0, _react2.render)( /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  definitions: formConfig.defaultDefinitions,\n  schema: schema,\n  uiSchema: uiSchema,\n  data: data,\n  formData: {}\n})),\n    container = _render3.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypesWebComponents)).to.have.lengthOf(expectedNumberOfFields);",
                  "err": {},
                  "uuid": "d6a8781f-62fd-485a-a1ba-245a1d0a58ae",
                  "parentUUID": "1386c0ce-fbc0-4b2b-a6fb-e0157db4ba58",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "d6a8781f-62fd-485a-a1ba-245a1d0a58ae"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 3,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "916bfdff-b99b-457c-91c3-7f701e751f8c",
          "title": "Pensions DisclosureTitle",
          "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/components/DisclosureTitle.unit.spec.jsx",
          "file": "/src/applications/pensions/tests/components/DisclosureTitle.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should render",
              "fullTitle": "Pensions DisclosureTitle should render",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var DisclosureTitle = (0, _DisclosureTitle.default)('test', 'Blah blah');\nvar tree = _skinDeep.default.shallowRender( /*#__PURE__*/_react.default.createElement(DisclosureTitle, {\n  id: \"id\",\n  formData: {\n    test: {\n      first: 'Jane',\n      last: 'Doe'\n    }\n  }\n}));\n(0, _chai.expect)(tree.text()).to.contain('Jane Doe');\n(0, _chai.expect)(tree.text()).to.contain('Blah blah');",
              "err": {},
              "uuid": "f8c4471c-904b-456b-b5fe-16bb61031464",
              "parentUUID": "916bfdff-b99b-457c-91c3-7f701e751f8c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should render spouse name",
              "fullTitle": "Pensions DisclosureTitle should render spouse name",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var DisclosureTitle = (0, _DisclosureTitle.default)('spouse', 'Blah blah');\nvar tree = _skinDeep.default.shallowRender( /*#__PURE__*/_react.default.createElement(DisclosureTitle, {\n  id: \"id\",\n  formData: {\n    maritalStatus: 'Married',\n    marriages: [{\n      spouseFullName: {\n        first: 'John',\n        last: 'Doe'\n      }\n    }, {\n      spouseFullName: {\n        first: 'Jane',\n        last: 'Doe'\n      }\n    }]\n  }\n}));\n(0, _chai.expect)(tree.text()).to.contain('Jane Doe');\n(0, _chai.expect)(tree.text()).to.contain('Blah blah');",
              "err": {},
              "uuid": "a1f28948-b33c-488d-a6c0-4af543448ba0",
              "parentUUID": "916bfdff-b99b-457c-91c3-7f701e751f8c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f8c4471c-904b-456b-b5fe-16bb61031464",
            "a1f28948-b33c-488d-a6c0-4af543448ba0"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "57f7ed76-7b91-4a00-8552-572f6bd187bc",
          "title": "<IntroductionPage />",
          "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/components/IntroductionPage.unit.spec.jsx",
          "file": "/src/applications/pensions/tests/components/IntroductionPage.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "renders",
              "fullTitle": "<IntroductionPage /> renders",
              "timedOut": false,
              "duration": 4,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var wrapper = (0, _enzyme.shallow)( /*#__PURE__*/_react.default.createElement(_IntroductionPage.default, {\n  route: {\n    formConfig: _form.default\n  }\n}));\n(0, _chai.expect)(wrapper.find('FormTitle')).to.exist;\n(0, _chai.expect)(wrapper.find('FormTitle').props().title).to.equal('Apply for Veterans Pension benefits');\nwrapper.unmount();",
              "err": {},
              "uuid": "dc63ab34-f051-4a8e-9211-3eb44054f0d5",
              "parentUUID": "57f7ed76-7b91-4a00-8552-572f6bd187bc",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "dc63ab34-f051-4a8e-9211-3eb44054f0d5"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 4,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "5a5c74e3-69ee-4ab1-8c65-a08fa46a79e2",
          "title": "pension <SpecialMonthlyPensionEvidenceAlert>",
          "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/components/FormAlerts/FormAlerts.unit.spec.jsx",
          "file": "/src/applications/pensions/tests/components/FormAlerts/FormAlerts.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should render",
              "fullTitle": "pension <SpecialMonthlyPensionEvidenceAlert> should render",
              "timedOut": false,
              "duration": 3,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _render2 = (0, _react2.render)( /*#__PURE__*/_react.default.createElement(_FormAlerts.SpecialMonthlyPensionEvidenceAlert, null)),\n    container = _render2.container;\nvar selector = container.querySelector('va-alert');\n(0, _chai.expect)(selector).to.exist;\n(0, _chai.expect)(selector).to.contain.attr('status', 'warning');",
              "err": {},
              "uuid": "a9eeb93e-ae18-4189-99fd-1ca1df773a07",
              "parentUUID": "5a5c74e3-69ee-4ab1-8c65-a08fa46a79e2",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a9eeb93e-ae18-4189-99fd-1ca1df773a07"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "1914febe-21a4-4251-bb7d-b4bf2311829c",
          "title": "Financial information total net worth pension page",
          "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/chapters/05-financial-information/totalNetWorth.unit.spec.jsx",
          "file": "/src/applications/pensions/tests/chapters/05-financial-information/totalNetWorth.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "d3658e09-c6a0-48a2-a7a0-dc868234a163",
              "title": "total net worth page",
              "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/chapters/05-financial-information/totalNetWorth.unit.spec.jsx",
              "file": "/src/applications/pensions/tests/chapters/05-financial-information/totalNetWorth.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should show the correct number of errors on submit for web components",
                  "fullTitle": "Financial information total net worth pension page total net worth page should show the correct number of errors on submit for web components",
                  "timedOut": false,
                  "duration": 16,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var _render4 = (0, _react2.render)( /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  definitions: formConfig.defaultDefinitions,\n  schema: schema,\n  uiSchema: uiSchema,\n  data: data,\n  formData: {}\n})),\n    container = _render4.container,\n    getByRole = _render4.getByRole;\ngetByRole('button', {\n  name: /submit/i\n}).click();\nvar nodes = Array.from(container.querySelectorAll(\"\".concat(expectedFieldTypesWebComponents, \", \").concat(wrapperWebComponents)));\nvar errors = nodes.filter(function (node) {\n  return node.error;\n});\n(0, _chai.expect)(errors).to.have.lengthOf(expectedNumberOfErrors);",
                  "err": {},
                  "uuid": "564da765-9ed8-4ca0-82f7-af0daaadb85e",
                  "parentUUID": "d3658e09-c6a0-48a2-a7a0-dc868234a163",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "564da765-9ed8-4ca0-82f7-af0daaadb85e"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 16,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "1ee796fd-9143-445d-adb1-6f0489923597",
              "title": "total net worth page",
              "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/chapters/05-financial-information/totalNetWorth.unit.spec.jsx",
              "file": "/src/applications/pensions/tests/chapters/05-financial-information/totalNetWorth.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should have appropriate number of web components",
                  "fullTitle": "Financial information total net worth pension page total net worth page should have appropriate number of web components",
                  "timedOut": false,
                  "duration": 5,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var _render3 = (0, _react2.render)( /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  definitions: formConfig.defaultDefinitions,\n  schema: schema,\n  uiSchema: uiSchema,\n  data: data,\n  formData: {}\n})),\n    container = _render3.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypesWebComponents)).to.have.lengthOf(expectedNumberOfFields);",
                  "err": {},
                  "uuid": "9fc3451c-69d0-4f6e-8a7a-7d1c8e6e5979",
                  "parentUUID": "1ee796fd-9143-445d-adb1-6f0489923597",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "9fc3451c-69d0-4f6e-8a7a-7d1c8e6e5979"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 5,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "d5597517-d1d0-4ed0-9252-333b23ae66e2",
          "title": "Pensions DependentField",
          "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/components/DependentField.unit.spec.jsx",
          "file": "/src/applications/pensions/tests/components/DependentField.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should render",
              "fullTitle": "Pensions DependentField should render",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var tree = _skinDeep.default.shallowRender( /*#__PURE__*/_react.default.createElement(_DependentField.default, {\n  id: \"id\",\n  formData: {\n    fullName: {\n      first: 'Jane',\n      last: 'Doe'\n    },\n    relationship: 'child'\n  }\n}));\n(0, _chai.expect)(tree.text()).to.contain('Jane Doe');\n(0, _chai.expect)(tree.text()).to.contain('Child');",
              "err": {},
              "uuid": "1f703ea3-e58b-4695-ba1d-60b7cc60167b",
              "parentUUID": "d5597517-d1d0-4ed0-9252-333b23ae66e2",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "1f703ea3-e58b-4695-ba1d-60b7cc60167b"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "9dc94fe8-98e1-4d05-a365-33525c160138",
          "title": "pension service periods page",
          "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/chapters/02-military-history/servicePeriod.unit.spec.jsx",
          "file": "/src/applications/pensions/tests/chapters/02-military-history/servicePeriod.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should submit with no errors with all required fields filled in",
              "fullTitle": "pension service periods page should submit with no errors with all required fields filled in",
              "timedOut": false,
              "duration": 83,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); });",
              "err": {},
              "uuid": "52ba5cec-db8d-4231-aa0c-0b0b678e9cdd",
              "parentUUID": "9dc94fe8-98e1-4d05-a365-33525c160138",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should display warning if the veteran did not serve during a wartime period",
              "fullTitle": "pension service periods page should display warning if the veteran did not serve during a wartime period",
              "timedOut": false,
              "duration": 86,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); });",
              "err": {},
              "uuid": "b88bd687-4ac3-4fb5-aa2b-31bc4c9699a6",
              "parentUUID": "9dc94fe8-98e1-4d05-a365-33525c160138",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should render with all fields and buttons",
              "fullTitle": "pension service periods page should render with all fields and buttons",
              "timedOut": false,
              "duration": 14,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); });",
              "err": {},
              "uuid": "07d0e055-dc8a-4274-9569-f81d95a4141d",
              "parentUUID": "9dc94fe8-98e1-4d05-a365-33525c160138",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should not allow submit with errors",
              "fullTitle": "pension service periods page should not allow submit with errors",
              "timedOut": false,
              "duration": 25,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); });",
              "err": {},
              "uuid": "aaf95332-7ef9-422a-95dc-7f22b5e6857f",
              "parentUUID": "9dc94fe8-98e1-4d05-a365-33525c160138",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "52ba5cec-db8d-4231-aa0c-0b0b678e9cdd",
            "b88bd687-4ac3-4fb5-aa2b-31bc4c9699a6",
            "07d0e055-dc8a-4274-9569-f81d95a4141d",
            "aaf95332-7ef9-422a-95dc-7f22b5e6857f"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 208,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "37088494-b96f-437b-8c47-d0c0af080479",
          "title": "financial information home ownership pension page",
          "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/chapters/05-financial-information/homeOwnership.unit.spec.jsx",
          "file": "/src/applications/pensions/tests/chapters/05-financial-information/homeOwnership.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "008bc71f-47c7-4c25-9309-12bdf0b14126",
              "title": "home ownership page",
              "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/chapters/05-financial-information/homeOwnership.unit.spec.jsx",
              "file": "/src/applications/pensions/tests/chapters/05-financial-information/homeOwnership.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should have appropriate number of web components",
                  "fullTitle": "financial information home ownership pension page home ownership page should have appropriate number of web components",
                  "timedOut": false,
                  "duration": 9,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var _render3 = (0, _react2.render)( /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  definitions: formConfig.defaultDefinitions,\n  schema: schema,\n  uiSchema: uiSchema,\n  data: data,\n  formData: {}\n})),\n    container = _render3.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypesWebComponents)).to.have.lengthOf(expectedNumberOfFields);",
                  "err": {},
                  "uuid": "d438b444-2321-47b0-a562-2466c19f1e71",
                  "parentUUID": "008bc71f-47c7-4c25-9309-12bdf0b14126",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "d438b444-2321-47b0-a562-2466c19f1e71"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 9,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "f6fd3571-64e6-430d-a5af-01e16d34c557",
              "title": "home ownership page",
              "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/chapters/05-financial-information/homeOwnership.unit.spec.jsx",
              "file": "/src/applications/pensions/tests/chapters/05-financial-information/homeOwnership.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should show the correct number of errors on submit for web components",
                  "fullTitle": "financial information home ownership pension page home ownership page should show the correct number of errors on submit for web components",
                  "timedOut": false,
                  "duration": 15,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var _render4 = (0, _react2.render)( /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  definitions: formConfig.defaultDefinitions,\n  schema: schema,\n  uiSchema: uiSchema,\n  data: data,\n  formData: {}\n})),\n    container = _render4.container,\n    getByRole = _render4.getByRole;\ngetByRole('button', {\n  name: /submit/i\n}).click();\nvar nodes = Array.from(container.querySelectorAll(\"\".concat(expectedFieldTypesWebComponents, \", \").concat(wrapperWebComponents)));\nvar errors = nodes.filter(function (node) {\n  return node.error;\n});\n(0, _chai.expect)(errors).to.have.lengthOf(expectedNumberOfErrors);",
                  "err": {},
                  "uuid": "c9e891e6-a805-476a-94bf-971085e4ee6c",
                  "parentUUID": "f6fd3571-64e6-430d-a5af-01e16d34c557",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "c9e891e6-a805-476a-94bf-971085e4ee6c"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 15,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "22e57487-9855-47b8-852c-8493e717bfd6",
          "title": "Pensions helpers",
          "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/helpers.unit.spec.jsx",
          "file": "/src/applications/pensions/tests/helpers.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "b772f8d6-da5c-4e45-8153-d6777601f473",
              "title": "formatCurrency",
              "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/helpers.unit.spec.jsx",
              "file": "/src/applications/pensions/tests/helpers.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should format US currency",
                  "fullTitle": "Pensions helpers formatCurrency should format US currency",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)((0, _helpers2.formatCurrency)(0.01)).to.equal('$0.01');\n(0, _chai.expect)((0, _helpers2.formatCurrency)(1000)).to.equal('$1,000');\n(0, _chai.expect)((0, _helpers2.formatCurrency)(12.75)).to.equal('$12.75');",
                  "err": {},
                  "uuid": "94069430-5ab9-4d58-9837-0b9160171cff",
                  "parentUUID": "b772f8d6-da5c-4e45-8153-d6777601f473",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "94069430-5ab9-4d58-9837-0b9160171cff"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "98697b07-fc7d-456e-9731-243f37efdb32",
              "title": "submit",
              "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/helpers.unit.spec.jsx",
              "file": "/src/applications/pensions/tests/helpers.unit.spec.jsx",
              "beforeHooks": [
                {
                  "title": "\"before each\" hook in \"submit\"",
                  "fullTitle": "Pensions helpers submit \"before each\" hook in \"submit\"",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "window.VetsGov = {\n  pollTimeout: 1\n};\nwindow.URL = {\n  createObjectURL: _sinon.default.stub().returns('test')\n};",
                  "err": {},
                  "uuid": "df32d744-414c-4d05-afa0-6d7524f9e666",
                  "parentUUID": "98697b07-fc7d-456e-9731-243f37efdb32",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [
                {
                  "title": "\"after each\" hook in \"submit\"",
                  "fullTitle": "Pensions helpers submit \"after each\" hook in \"submit\"",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "delete window.URL;",
                  "err": {},
                  "uuid": "7a6de3a4-f193-46d4-b58b-28f0d1b87b60",
                  "parentUUID": "98697b07-fc7d-456e-9731-243f37efdb32",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "tests": [
                {
                  "title": "should reject if polling state is failed",
                  "fullTitle": "Pensions helpers submit should reject if polling state is failed",
                  "timedOut": false,
                  "duration": 7,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _helpers.mockFetch)();\n(0, _helpers.setFetchJSONResponse)(global.fetch.onFirstCall(), {\n  data: {\n    attributes: {\n      guid: 'test'\n    }\n  }\n});\n(0, _helpers.setFetchJSONResponse)(global.fetch.onSecondCall(), {\n  data: {\n    attributes: {\n      state: 'pending'\n    }\n  }\n});\n(0, _helpers.setFetchJSONResponse)(global.fetch.onThirdCall(), {\n  data: {\n    attributes: {\n      state: 'failed'\n    }\n  }\n});\nvar formConfig = {\n  chapters: {}\n};\nvar form = {\n  data: {}\n};\nreturn (0, _helpers2.submit)(form, formConfig).then(function () {\n  _chai.expect.fail();\n}, function (err) {\n  (0, _chai.expect)(err.message).to.equal('vets_server_error_pensions: status failed');\n});",
                  "err": {},
                  "uuid": "b163e6a3-4a05-4e79-a97e-29f1512ba1e3",
                  "parentUUID": "98697b07-fc7d-456e-9731-243f37efdb32",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should resolve if polling state is success",
                  "fullTitle": "Pensions helpers submit should resolve if polling state is success",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _helpers.mockFetch)();\n(0, _helpers.setFetchJSONResponse)(global.fetch.onFirstCall(), {\n  data: {\n    attributes: {\n      guid: 'test'\n    }\n  }\n});\n(0, _helpers.setFetchJSONResponse)(global.fetch.onSecondCall(), {\n  data: {\n    attributes: {\n      state: 'pending'\n    }\n  }\n});\nvar response = {};\n(0, _helpers.setFetchJSONResponse)(global.fetch.onThirdCall(), {\n  data: {\n    attributes: {\n      state: 'success',\n      response: response\n    }\n  }\n});\nvar formConfig = {\n  chapters: {}\n};\nvar form = {\n  data: {}\n};\nreturn (0, _helpers2.submit)(form, formConfig).then(function (res) {\n  (0, _chai.expect)(res).to.deep.equal(response);\n});",
                  "err": {},
                  "uuid": "0090c9a4-0dc7-4d22-a63a-d8aefca924ee",
                  "parentUUID": "98697b07-fc7d-456e-9731-243f37efdb32",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should reject if initial request fails",
                  "fullTitle": "Pensions helpers submit should reject if initial request fails",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _helpers.mockFetch)(new Error('fake error'), false);\nvar formConfig = {\n  chapters: {}\n};\nvar form = {\n  data: {}\n};\nreturn (0, _helpers2.submit)(form, formConfig).then(function () {\n  _chai.expect.fail();\n}, function (err) {\n  (0, _chai.expect)(err.message).to.equal('fake error');\n});",
                  "err": {},
                  "uuid": "63493608-6dc5-4754-ad58-35d701f05956",
                  "parentUUID": "98697b07-fc7d-456e-9731-243f37efdb32",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "b163e6a3-4a05-4e79-a97e-29f1512ba1e3",
                "0090c9a4-0dc7-4d22-a63a-d8aefca924ee",
                "63493608-6dc5-4754-ad58-35d701f05956"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 12,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "f5ace56b-baa1-4ef2-a0b8-d4f4ce48ed10",
          "title": "pension age page",
          "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/chapters/03-health-and-employment-information/age.unit.spec.jsx",
          "file": "/src/applications/pensions/tests/chapters/03-health-and-employment-information/age.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "2c8ee4ce-fe4d-43f7-998c-f62d5b44261c",
              "title": "Age page",
              "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/chapters/03-health-and-employment-information/age.unit.spec.jsx",
              "file": "/src/applications/pensions/tests/chapters/03-health-and-employment-information/age.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should show the correct number of errors on submit for web components",
                  "fullTitle": "pension age page Age page should show the correct number of errors on submit for web components",
                  "timedOut": false,
                  "duration": 21,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var _render4 = (0, _react2.render)( /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  definitions: formConfig.defaultDefinitions,\n  schema: schema,\n  uiSchema: uiSchema,\n  data: data,\n  formData: {}\n})),\n    container = _render4.container,\n    getByRole = _render4.getByRole;\ngetByRole('button', {\n  name: /submit/i\n}).click();\nvar nodes = Array.from(container.querySelectorAll(\"\".concat(expectedFieldTypesWebComponents, \", \").concat(wrapperWebComponents)));\nvar errors = nodes.filter(function (node) {\n  return node.error;\n});\n(0, _chai.expect)(errors).to.have.lengthOf(expectedNumberOfErrors);",
                  "err": {},
                  "uuid": "e29a013f-b106-4d42-b0ad-de0b5df5507f",
                  "parentUUID": "2c8ee4ce-fe4d-43f7-998c-f62d5b44261c",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "e29a013f-b106-4d42-b0ad-de0b5df5507f"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 21,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "b2a55cfc-5504-45fc-89f5-1ad45dfd24ac",
              "title": "Age page",
              "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/chapters/03-health-and-employment-information/age.unit.spec.jsx",
              "file": "/src/applications/pensions/tests/chapters/03-health-and-employment-information/age.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should have appropriate number of web components",
                  "fullTitle": "pension age page Age page should have appropriate number of web components",
                  "timedOut": false,
                  "duration": 5,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var _render3 = (0, _react2.render)( /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  definitions: formConfig.defaultDefinitions,\n  schema: schema,\n  uiSchema: uiSchema,\n  data: data,\n  formData: {}\n})),\n    container = _render3.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypesWebComponents)).to.have.lengthOf(expectedNumberOfFields);",
                  "err": {},
                  "uuid": "5e6d9c62-a29b-4087-a806-225152d7dca1",
                  "parentUUID": "b2a55cfc-5504-45fc-89f5-1ad45dfd24ac",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "5e6d9c62-a29b-4087-a806-225152d7dca1"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 5,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "7cd256ef-c97a-463b-9573-6d9e9e3cce84",
          "title": "pension spouse marriage history page",
          "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/chapters/04-household-information/spouseMarriageHistory.unit.spec.jsx",
          "file": "/src/applications/pensions/tests/chapters/04-household-information/spouseMarriageHistory.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should render with all fields and buttons",
              "fullTitle": "pension spouse marriage history page should render with all fields and buttons",
              "timedOut": false,
              "duration": 24,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); });",
              "err": {},
              "uuid": "be9117c0-bba0-48e2-9803-b05853a6de17",
              "parentUUID": "7cd256ef-c97a-463b-9573-6d9e9e3cce84",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should not allow submit with errors",
              "fullTitle": "pension spouse marriage history page should not allow submit with errors",
              "timedOut": false,
              "duration": 28,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); });",
              "err": {},
              "uuid": "eb473353-6079-4ff0-b812-f852697c0452",
              "parentUUID": "7cd256ef-c97a-463b-9573-6d9e9e3cce84",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "be9117c0-bba0-48e2-9803-b05853a6de17",
            "eb473353-6079-4ff0-b812-f852697c0452"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 52,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "88718414-6b78-41ee-8e4f-dc4bae2589eb",
          "title": "Unreimbursed care expenses pension page",
          "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/chapters/05-financial-information/careExpenses.unit.spec.jsx",
          "file": "/src/applications/pensions/tests/chapters/05-financial-information/careExpenses.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "9a615a3b-7a53-4c84-ab66-a7b0e07c6bd1",
              "title": "Care expenses page",
              "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/chapters/05-financial-information/careExpenses.unit.spec.jsx",
              "file": "/src/applications/pensions/tests/chapters/05-financial-information/careExpenses.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should have appropriate number of web components",
                  "fullTitle": "Unreimbursed care expenses pension page Care expenses page should have appropriate number of web components",
                  "timedOut": false,
                  "duration": 24,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var _render3 = (0, _react2.render)( /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  definitions: formConfig.defaultDefinitions,\n  schema: schema,\n  uiSchema: uiSchema,\n  data: data,\n  formData: {}\n})),\n    container = _render3.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypesWebComponents)).to.have.lengthOf(expectedNumberOfFields);",
                  "err": {},
                  "uuid": "9d75953f-b5ef-48de-a814-278459628973",
                  "parentUUID": "9a615a3b-7a53-4c84-ab66-a7b0e07c6bd1",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "9d75953f-b5ef-48de-a814-278459628973"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 24,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "69ea7475-d41d-4954-8669-461756a0c161",
              "title": "Care expenses page",
              "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/chapters/05-financial-information/careExpenses.unit.spec.jsx",
              "file": "/src/applications/pensions/tests/chapters/05-financial-information/careExpenses.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should have appropriate number of fields",
                  "fullTitle": "Unreimbursed care expenses pension page Care expenses page should have appropriate number of fields",
                  "timedOut": false,
                  "duration": 19,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var _render = (0, _react2.render)( /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  definitions: formConfig.defaultDefinitions,\n  schema: schema,\n  uiSchema: uiSchema,\n  data: data,\n  formData: {}\n})),\n    container = _render.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypes)).to.have.lengthOf(expectedNumberOfFields);",
                  "err": {},
                  "uuid": "a1274547-22a3-4665-ad47-63c1a64902c4",
                  "parentUUID": "69ea7475-d41d-4954-8669-461756a0c161",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "a1274547-22a3-4665-ad47-63c1a64902c4"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 19,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "fb9c1877-708b-4a47-b6a0-5d9a63f48366",
              "title": "Care expenses page",
              "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/chapters/05-financial-information/careExpenses.unit.spec.jsx",
              "file": "/src/applications/pensions/tests/chapters/05-financial-information/careExpenses.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should show the correct number of errors on submit for web components",
                  "fullTitle": "Unreimbursed care expenses pension page Care expenses page should show the correct number of errors on submit for web components",
                  "timedOut": false,
                  "duration": 52,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var _render4 = (0, _react2.render)( /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  definitions: formConfig.defaultDefinitions,\n  schema: schema,\n  uiSchema: uiSchema,\n  data: data,\n  formData: {}\n})),\n    container = _render4.container,\n    getByRole = _render4.getByRole;\ngetByRole('button', {\n  name: /submit/i\n}).click();\nvar nodes = Array.from(container.querySelectorAll(\"\".concat(expectedFieldTypesWebComponents, \", \").concat(wrapperWebComponents)));\nvar errors = nodes.filter(function (node) {\n  return node.error;\n});\n(0, _chai.expect)(errors).to.have.lengthOf(expectedNumberOfErrors);",
                  "err": {},
                  "uuid": "bdad1bd6-91e2-4ca2-b968-156b973a5f13",
                  "parentUUID": "fb9c1877-708b-4a47-b6a0-5d9a63f48366",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "bdad1bd6-91e2-4ca2-b968-156b973a5f13"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 52,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "7ae87612-5345-4286-a2ea-030cb02a55c3",
              "title": "Care expenses page",
              "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/chapters/05-financial-information/careExpenses.unit.spec.jsx",
              "file": "/src/applications/pensions/tests/chapters/05-financial-information/careExpenses.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should show the correct number of errors on submit",
                  "fullTitle": "Unreimbursed care expenses pension page Care expenses page should show the correct number of errors on submit",
                  "timedOut": false,
                  "duration": 47,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var _render2 = (0, _react2.render)( /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  definitions: formConfig.defaultDefinitions,\n  schema: schema,\n  uiSchema: uiSchema,\n  data: data,\n  formData: {}\n})),\n    getByRole = _render2.getByRole,\n    queryAllByRole = _render2.queryAllByRole;\ngetByRole('button', {\n  name: /submit/i\n}).click();\nvar errors = queryAllByRole('alert');\n(0, _chai.expect)(errors).to.have.lengthOf(expectedNumberOfErrors);",
                  "err": {},
                  "uuid": "b55efe07-ed65-48d7-9bfb-12979c5f29ef",
                  "parentUUID": "7ae87612-5345-4286-a2ea-030cb02a55c3",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "b55efe07-ed65-48d7-9bfb-12979c5f29ef"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 47,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "1b79f8a0-460b-466a-aeb1-ab00aed0ff20",
          "title": "pension pow information page",
          "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/chapters/02-military-history/pow.unit.spec.jsx",
          "file": "/src/applications/pensions/tests/chapters/02-military-history/pow.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should submit with valid data",
              "fullTitle": "pension pow information page should submit with valid data",
              "timedOut": false,
              "duration": 11,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); });",
              "err": {},
              "uuid": "6ae31e7b-a33a-4404-90f8-b879e0e1f9c2",
              "parentUUID": "1b79f8a0-460b-466a-aeb1-ab00aed0ff20",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should reveal date fields",
              "fullTitle": "pension pow information page should reveal date fields",
              "timedOut": false,
              "duration": 17,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); });",
              "err": {},
              "uuid": "daf2f17c-cd6f-4dcb-858a-206333a000a6",
              "parentUUID": "1b79f8a0-460b-466a-aeb1-ab00aed0ff20",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "6ae31e7b-a33a-4404-90f8-b879e0e1f9c2",
            "daf2f17c-cd6f-4dcb-858a-206333a000a6"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 28,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "fc8b7b39-d890-4bdf-9b52-276608a71c82",
          "title": "Child information page",
          "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/chapters/04-household-information/dependentChildInformation.unit.spec.jsx",
          "file": "/src/applications/pensions/tests/chapters/04-household-information/dependentChildInformation.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should ask if the child is in school (18-23 years old)",
              "fullTitle": "Child information page should ask if the child is in school (18-23 years old)",
              "timedOut": false,
              "duration": 13,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var onSubmit = _sinon.default.spy();\nvar _render5 = (0, _react2.render)( /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  arrayPath: arrayPath,\n  pagePerItemIndex: 0,\n  definitions: _form.default.defaultDefinitions,\n  schema: schema,\n  data: dependentData,\n  onSubmit: onSubmit,\n  uiSchema: uiSchema\n})),\n    container = _render5.container;\n(0, _chai.expect)((0, _index.$)('#root_attendingCollegeYes', container)).to.not.be.null;",
              "err": {},
              "uuid": "a829e5a3-b9c3-4e89-b796-cb7c8c84a88b",
              "parentUUID": "fc8b7b39-d890-4bdf-9b52-276608a71c82",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should submit with valid data",
              "fullTitle": "Child information page should submit with valid data",
              "timedOut": false,
              "duration": 39,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); });",
              "err": {},
              "uuid": "61c6bc64-2e29-46eb-85e9-577ac9c1a379",
              "parentUUID": "fc8b7b39-d890-4bdf-9b52-276608a71c82",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should set the title to the dependents name if available",
              "fullTitle": "Child information page should set the title to the dependents name if available",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, _chai.expect)(title(dependentData.dependents[0])).to.eql('Jane Doe information');\n(0, _chai.expect)(title({\n  fullName: {}\n})).to.eql('  information');",
              "err": {},
              "uuid": "03688070-9567-4864-bbeb-2860c8d038da",
              "parentUUID": "fc8b7b39-d890-4bdf-9b52-276608a71c82",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should not ask if the child is disabled",
              "fullTitle": "Child information page should not ask if the child is disabled",
              "timedOut": false,
              "duration": 5,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var onSubmit = _sinon.default.spy();\nvar _render8 = (0, _react2.render)( /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  arrayPath: arrayPath,\n  pagePerItemIndex: 0,\n  definitions: _form.default.defaultDefinitions,\n  schema: schema,\n  data: dependentData,\n  onSubmit: onSubmit,\n  uiSchema: uiSchema\n})),\n    container = _render8.container;\n(0, _chai.expect)((0, _index.$)('#root_disabledYes', container)).to.be.null;",
              "err": {},
              "uuid": "d8812db9-e9b0-4d4d-a554-a59091ff71d6",
              "parentUUID": "fc8b7b39-d890-4bdf-9b52-276608a71c82",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should show errors when required fields are empty",
              "fullTitle": "Child information page should show errors when required fields are empty",
              "timedOut": false,
              "duration": 8,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); });",
              "err": {},
              "uuid": "51e207fb-9c8f-483e-8198-faf54fe060c7",
              "parentUUID": "fc8b7b39-d890-4bdf-9b52-276608a71c82",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should render all fields",
              "fullTitle": "Child information page should render all fields",
              "timedOut": false,
              "duration": 11,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); });",
              "err": {},
              "uuid": "a45462d0-d217-4c3d-be7e-67d670f86f30",
              "parentUUID": "fc8b7b39-d890-4bdf-9b52-276608a71c82",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should not require ssn if noSSN is checked",
              "fullTitle": "Child information page should not require ssn if noSSN is checked",
              "timedOut": false,
              "duration": 36,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); });",
              "err": {},
              "uuid": "16ec856c-1bfc-4d72-a7e6-59b931a679a3",
              "parentUUID": "fc8b7b39-d890-4bdf-9b52-276608a71c82",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should ask if the child is disabled (Under 18 years old)",
              "fullTitle": "Child information page should ask if the child is disabled (Under 18 years old)",
              "timedOut": false,
              "duration": 17,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var onSubmit = _sinon.default.spy();\nvar _render7 = (0, _react2.render)( /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  arrayPath: arrayPath,\n  pagePerItemIndex: 0,\n  definitions: _form.default.defaultDefinitions,\n  schema: schema,\n  data: _objectSpread(_objectSpread({}, dependentData), {}, {\n    dependents: [_objectSpread(_objectSpread({}, dependentData.dependents[0]), {}, {\n      childDateOfBirth: (0, _moment.default)().subtract(10, 'years').toISOString()\n    })]\n  }),\n  onSubmit: onSubmit,\n  uiSchema: uiSchema\n})),\n    container = _render7.container;\n(0, _chai.expect)((0, _index.$)('#root_disabledYes', container)).to.not.be.null;",
              "err": {},
              "uuid": "2713dd1f-1984-43ba-bb8d-33079e0bd173",
              "parentUUID": "fc8b7b39-d890-4bdf-9b52-276608a71c82",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should not ask if the child is in school",
              "fullTitle": "Child information page should not ask if the child is in school",
              "timedOut": false,
              "duration": 21,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var onSubmit = _sinon.default.spy();\nvar _render6 = (0, _react2.render)( /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  arrayPath: arrayPath,\n  pagePerItemIndex: 0,\n  definitions: _form.default.defaultDefinitions,\n  schema: schema,\n  data: _objectSpread(_objectSpread({}, dependentData), {}, {\n    dependents: [_objectSpread(_objectSpread({}, dependentData.dependents[0]), {}, {\n      childDateOfBirth: (0, _moment.default)().subtract(5, 'years').toISOString()\n    })]\n  }),\n  onSubmit: onSubmit,\n  uiSchema: uiSchema\n})),\n    container = _render6.container;\n(0, _chai.expect)((0, _index.$)('#root_attendingCollegeYes', container)).to.be.null;",
              "err": {},
              "uuid": "d94df3eb-013b-4e95-bfd5-e4356da7f36b",
              "parentUUID": "fc8b7b39-d890-4bdf-9b52-276608a71c82",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a829e5a3-b9c3-4e89-b796-cb7c8c84a88b",
            "61c6bc64-2e29-46eb-85e9-577ac9c1a379",
            "03688070-9567-4864-bbeb-2860c8d038da",
            "d8812db9-e9b0-4d4d-a554-a59091ff71d6",
            "51e207fb-9c8f-483e-8198-faf54fe060c7",
            "a45462d0-d217-4c3d-be7e-67d670f86f30",
            "16ec856c-1bfc-4d72-a7e6-59b931a679a3",
            "2713dd1f-1984-43ba-bb8d-33079e0bd173",
            "d94df3eb-013b-4e95-bfd5-e4356da7f36b"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 150,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "7dfad4e6-43bf-472a-8708-4e19990f8d17",
          "title": "marital status page",
          "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/chapters/04-household-information/maritalStatus.unit.spec.jsx",
          "file": "/src/applications/pensions/tests/chapters/04-household-information/maritalStatus.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should render web components in form correctly",
              "fullTitle": "marital status page should render web components in form correctly",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var pageTitle = 'marital status';\nvar expectedNumberOfFields = 1;\n(0, _pageTests.testNumberOfWebComponentFields)(_form.default, _maritalStatus.default.schema, _maritalStatus.default.uiSchema, expectedNumberOfFields, pageTitle);\nvar expectedNumberOfErrors = 1;\n(0, _pageTests.testNumberOfErrorsOnSubmitForWebComponents)(_form.default, _maritalStatus.default.schema, _maritalStatus.default.uiSchema, expectedNumberOfErrors, pageTitle);",
              "err": {},
              "uuid": "c566f25c-3dc3-42d1-bea1-6fcf6e209585",
              "parentUUID": "7dfad4e6-43bf-472a-8708-4e19990f8d17",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "c566f25c-3dc3-42d1-bea1-6fcf6e209585"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "20f6b144-198c-4c63-bce3-18e57ca67698",
          "title": "pension nursing home page",
          "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/chapters/03-health-and-employment-information/nursingHome.unit.spec.jsx",
          "file": "/src/applications/pensions/tests/chapters/03-health-and-employment-information/nursingHome.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "231eee0a-785a-4910-8a23-4b82d3875219",
              "title": "nursing home information page",
              "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/chapters/03-health-and-employment-information/nursingHome.unit.spec.jsx",
              "file": "/src/applications/pensions/tests/chapters/03-health-and-employment-information/nursingHome.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should show the correct number of errors on submit for web components",
                  "fullTitle": "pension nursing home page nursing home information page should show the correct number of errors on submit for web components",
                  "timedOut": false,
                  "duration": 29,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var _render4 = (0, _react2.render)( /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  definitions: formConfig.defaultDefinitions,\n  schema: schema,\n  uiSchema: uiSchema,\n  data: data,\n  formData: {}\n})),\n    container = _render4.container,\n    getByRole = _render4.getByRole;\ngetByRole('button', {\n  name: /submit/i\n}).click();\nvar nodes = Array.from(container.querySelectorAll(\"\".concat(expectedFieldTypesWebComponents, \", \").concat(wrapperWebComponents)));\nvar errors = nodes.filter(function (node) {\n  return node.error;\n});\n(0, _chai.expect)(errors).to.have.lengthOf(expectedNumberOfErrors);",
                  "err": {},
                  "uuid": "5ff0dc16-92ac-48b9-ac6a-2f47d21ab2c9",
                  "parentUUID": "231eee0a-785a-4910-8a23-4b82d3875219",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "5ff0dc16-92ac-48b9-ac6a-2f47d21ab2c9"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 29,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "6f54b33c-5ba2-446f-8913-f46d8aeb8c5e",
              "title": "nursing home information page",
              "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/chapters/03-health-and-employment-information/nursingHome.unit.spec.jsx",
              "file": "/src/applications/pensions/tests/chapters/03-health-and-employment-information/nursingHome.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should have appropriate number of web components",
                  "fullTitle": "pension nursing home page nursing home information page should have appropriate number of web components",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var _render3 = (0, _react2.render)( /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  definitions: formConfig.defaultDefinitions,\n  schema: schema,\n  uiSchema: uiSchema,\n  data: data,\n  formData: {}\n})),\n    container = _render3.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypesWebComponents)).to.have.lengthOf(expectedNumberOfFields);",
                  "err": {},
                  "uuid": "4e0b6862-8400-468c-a7a9-1ddc21de6219",
                  "parentUUID": "6f54b33c-5ba2-446f-8913-f46d8aeb8c5e",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "4e0b6862-8400-468c-a7a9-1ddc21de6219"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "9436c480-0591-4c5f-849c-0dfd104afedb",
          "title": "pension mailing address page",
          "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/chapters/01-applicant-information/mailingAddress.unit.spec.jsx",
          "file": "/src/applications/pensions/tests/chapters/01-applicant-information/mailingAddress.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "a08cc02e-eb71-4a2a-9cea-92523abbb860",
              "title": "mailing address page",
              "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/chapters/01-applicant-information/mailingAddress.unit.spec.jsx",
              "file": "/src/applications/pensions/tests/chapters/01-applicant-information/mailingAddress.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should show the correct number of errors on submit for web components",
                  "fullTitle": "pension mailing address page mailing address page should show the correct number of errors on submit for web components",
                  "timedOut": false,
                  "duration": 60,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var _render4 = (0, _react2.render)( /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  definitions: formConfig.defaultDefinitions,\n  schema: schema,\n  uiSchema: uiSchema,\n  data: data,\n  formData: {}\n})),\n    container = _render4.container,\n    getByRole = _render4.getByRole;\ngetByRole('button', {\n  name: /submit/i\n}).click();\nvar nodes = Array.from(container.querySelectorAll(\"\".concat(expectedFieldTypesWebComponents, \", \").concat(wrapperWebComponents)));\nvar errors = nodes.filter(function (node) {\n  return node.error;\n});\n(0, _chai.expect)(errors).to.have.lengthOf(expectedNumberOfErrors);",
                  "err": {},
                  "uuid": "feddcaa1-cb70-4a2c-adca-43e3d1ed9269",
                  "parentUUID": "a08cc02e-eb71-4a2a-9cea-92523abbb860",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "feddcaa1-cb70-4a2c-adca-43e3d1ed9269"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 60,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "47bdbee4-d10a-4f25-8c53-8ed1b3c879ca",
              "title": "mailing address page",
              "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/chapters/01-applicant-information/mailingAddress.unit.spec.jsx",
              "file": "/src/applications/pensions/tests/chapters/01-applicant-information/mailingAddress.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should have appropriate number of web components",
                  "fullTitle": "pension mailing address page mailing address page should have appropriate number of web components",
                  "timedOut": false,
                  "duration": 13,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var _render3 = (0, _react2.render)( /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  definitions: formConfig.defaultDefinitions,\n  schema: schema,\n  uiSchema: uiSchema,\n  data: data,\n  formData: {}\n})),\n    container = _render3.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypesWebComponents)).to.have.lengthOf(expectedNumberOfFields);",
                  "err": {},
                  "uuid": "480cd1ce-9b8c-4f52-986c-03aabe01e43a",
                  "parentUUID": "47bdbee4-d10a-4f25-8c53-8ed1b3c879ca",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "480cd1ce-9b8c-4f52-986c-03aabe01e43a"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 13,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "e14f8e8e-e39d-4a13-9704-ae80de699e90",
          "title": "Child address page",
          "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/config/dependentChildAddress.unit.spec.jsx",
          "file": "/src/applications/pensions/tests/config/dependentChildAddress.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should render address fields",
              "fullTitle": "Child address page should render address fields",
              "timedOut": false,
              "duration": 26,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var form = _testUtils.default.renderIntoDocument( /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  arrayPath: arrayPath,\n  pagePerItemIndex: 0,\n  definitions: _form.default.defaultDefinitions,\n  schema: schema,\n  data: nameData,\n  uiSchema: uiSchema\n}));\nvar formDOM = (0, _schemaformUtils.getFormDOM)(form);\nformDOM.setYesNo('input#root_childInHouseholdNo', 'N');\n(0, _chai.expect)(formDOM.querySelectorAll('va-select').length).to.equal(1);\n(0, _chai.expect)(formDOM.querySelectorAll('va-text-input').length).to.equal(5);",
              "err": {},
              "uuid": "2ef52c38-92ca-4c4e-aded-8d0146072309",
              "parentUUID": "e14f8e8e-e39d-4a13-9704-ae80de699e90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should submit with valid data",
              "fullTitle": "Child address page should submit with valid data",
              "timedOut": false,
              "duration": 8,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var onSubmit = _sinon.default.spy();\nvar form = _testUtils.default.renderIntoDocument( /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  arrayPath: arrayPath,\n  pagePerItemIndex: 0,\n  definitions: _form.default.defaultDefinitions,\n  schema: schema,\n  data: nameData,\n  onSubmit: onSubmit,\n  uiSchema: uiSchema\n}));\nvar formDOM = (0, _schemaformUtils.getFormDOM)(form);\nformDOM.fillData('#root_childInHouseholdYes', 'Y');\nformDOM.submitForm(form);\n(0, _chai.expect)(onSubmit.called).to.be.true;",
              "err": {},
              "uuid": "934cef44-be30-43bb-b016-3524619b43c2",
              "parentUUID": "e14f8e8e-e39d-4a13-9704-ae80de699e90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should show errors when required fields are empty",
              "fullTitle": "Child address page should show errors when required fields are empty",
              "timedOut": false,
              "duration": 5,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var onSubmit = _sinon.default.spy();\nvar form = _testUtils.default.renderIntoDocument( /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  definitions: _form.default.defaultDefinitions,\n  arrayPath: arrayPath,\n  pagePerItemIndex: 0,\n  schema: schema,\n  onSubmit: onSubmit,\n  data: nameData,\n  uiSchema: uiSchema\n}));\nvar formDOM = (0, _schemaformUtils.getFormDOM)(form);\nformDOM.submitForm(form);\n(0, _chai.expect)(formDOM.querySelectorAll('.usa-input-error').length).to.equal(1);\n(0, _chai.expect)(onSubmit.called).not.to.be.true;",
              "err": {},
              "uuid": "7d263aa9-b052-49df-b241-029bcb510318",
              "parentUUID": "e14f8e8e-e39d-4a13-9704-ae80de699e90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should set the title to the dependents name if available",
              "fullTitle": "Child address page should set the title to the dependents name if available",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var pageTitle = title;\n(0, _chai.expect)(pageTitle({\n  fullName: {\n    first: 'Jane',\n    last: 'Doe'\n  }\n})).to.eql('Jane Doe address');\n(0, _chai.expect)(pageTitle({\n  fullName: {}\n})).to.eql('  address');",
              "err": {},
              "uuid": "79802720-6027-4a04-8b3c-24d77a0eb1bb",
              "parentUUID": "e14f8e8e-e39d-4a13-9704-ae80de699e90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should render",
              "fullTitle": "Child address page should render",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var form = _testUtils.default.renderIntoDocument( /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  arrayPath: arrayPath,\n  pagePerItemIndex: 0,\n  definitions: _form.default.defaultDefinitions,\n  schema: schema,\n  data: nameData,\n  uiSchema: uiSchema\n}));\nvar formDOM = (0, _schemaformUtils.getFormDOM)(form);\n(0, _chai.expect)(formDOM.querySelectorAll('input, select, textarea').length).to.equal(2);",
              "err": {},
              "uuid": "56d20e98-00fb-4864-b7a7-bb496f09a4bf",
              "parentUUID": "e14f8e8e-e39d-4a13-9704-ae80de699e90",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "2ef52c38-92ca-4c4e-aded-8d0146072309",
            "934cef44-be30-43bb-b016-3524619b43c2",
            "7d263aa9-b052-49df-b241-029bcb510318",
            "79802720-6027-4a04-8b3c-24d77a0eb1bb",
            "56d20e98-00fb-4864-b7a7-bb496f09a4bf"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 41,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "1ccdf7e4-9679-463e-9cd9-204d07c86b34",
          "title": "Pensions expedited",
          "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/config/expedited.unit.spec.jsx",
          "file": "/src/applications/pensions/tests/config/expedited.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should submit",
              "fullTitle": "Pensions expedited should submit",
              "timedOut": false,
              "duration": 3,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var onSubmit = _sinon.default.spy();\nvar form = _testUtils.default.renderIntoDocument( /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  schema: schema,\n  definitions: definitions,\n  onSubmit: onSubmit,\n  data: {},\n  uiSchema: uiSchema\n}));\nvar formDOM = (0, _schemaformUtils.getFormDOM)(form);\nformDOM.submitForm();\n(0, _chai.expect)(onSubmit.called).to.be.true;",
              "err": {},
              "uuid": "cb15ea74-92e0-4994-810e-5680509015d9",
              "parentUUID": "1ccdf7e4-9679-463e-9cd9-204d07c86b34",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should render warning on Yes",
              "fullTitle": "Pensions expedited should render warning on Yes",
              "timedOut": false,
              "duration": 4,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var form = _testUtils.default.renderIntoDocument( /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  schema: schema,\n  data: {},\n  definitions: definitions,\n  uiSchema: uiSchema\n}));\nvar formDOM = (0, _schemaformUtils.getFormDOM)(form);\nformDOM.fillData('#root_noRapidProcessingYes', 'Y');\n(0, _chai.expect)(formDOM.querySelector('.usa-alert-info').textContent).to.contain('will be submitted as');",
              "err": {},
              "uuid": "5e93933e-b4a9-4325-aaa4-0f2d87342417",
              "parentUUID": "1ccdf7e4-9679-463e-9cd9-204d07c86b34",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should render",
              "fullTitle": "Pensions expedited should render",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var form = _testUtils.default.renderIntoDocument( /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  schema: schema,\n  data: {},\n  definitions: definitions,\n  uiSchema: uiSchema\n}));\nvar formDOM = (0, _schemaformUtils.getFormDOM)(form);\n(0, _chai.expect)(formDOM.querySelectorAll('input,select').length).to.equal(2);",
              "err": {},
              "uuid": "2e962854-09a8-4439-af5c-eabb614b63dd",
              "parentUUID": "1ccdf7e4-9679-463e-9cd9-204d07c86b34",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should render warning on No",
              "fullTitle": "Pensions expedited should render warning on No",
              "timedOut": false,
              "duration": 4,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var form = _testUtils.default.renderIntoDocument( /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  schema: schema,\n  data: {},\n  definitions: definitions,\n  uiSchema: uiSchema\n}));\nvar formDOM = (0, _schemaformUtils.getFormDOM)(form);\nformDOM.fillData('#root_noRapidProcessingNo', 'N');\n(0, _chai.expect)(formDOM.querySelector('.usa-alert-info').textContent).to.contain('doesn’t qualify');",
              "err": {},
              "uuid": "fa59fbfc-d671-4e55-847b-a05f8a091ae5",
              "parentUUID": "1ccdf7e4-9679-463e-9cd9-204d07c86b34",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "cb15ea74-92e0-4994-810e-5680509015d9",
            "5e93933e-b4a9-4325-aaa4-0f2d87342417",
            "2e962854-09a8-4439-af5c-eabb614b63dd",
            "fa59fbfc-d671-4e55-847b-a05f8a091ae5"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 13,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "16dfa493-1e58-4b50-a80c-b5521cd9c63c",
          "title": "<ErrorText />",
          "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/components/ErrorText.unit.spec.jsx",
          "file": "/src/applications/pensions/tests/components/ErrorText.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "renders <CallVBACenter />",
              "fullTitle": "<ErrorText /> renders <CallVBACenter />",
              "timedOut": false,
              "duration": 5,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var wrapper = (0, _enzyme.shallow)( /*#__PURE__*/_react.default.createElement(_ErrorText.default, null));\n(0, _chai.expect)(wrapper.find(_CallVBACenter.default)).to.have.lengthOf(1);\nwrapper.unmount();",
              "err": {},
              "uuid": "7245cc7f-6aa4-40d4-a38f-9392008a6cfb",
              "parentUUID": "16dfa493-1e58-4b50-a80c-b5521cd9c63c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "renders without crashing",
              "fullTitle": "<ErrorText /> renders without crashing",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var wrapper = (0, _enzyme.shallow)( /*#__PURE__*/_react.default.createElement(_ErrorText.default, null));\nwrapper.unmount( /*#__PURE__*/_react.default.createElement(_ErrorText.default, null));",
              "err": {},
              "uuid": "a4185faf-044d-43f5-8cce-e950fecfc2c5",
              "parentUUID": "16dfa493-1e58-4b50-a80c-b5521cd9c63c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "contains the expected static text",
              "fullTitle": "<ErrorText /> contains the expected static text",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var wrapper = (0, _enzyme.shallow)( /*#__PURE__*/_react.default.createElement(_ErrorText.default, null));\n(0, _chai.expect)(wrapper.text()).to.contain('If it still doesn’t work, please');\nwrapper.unmount();",
              "err": {},
              "uuid": "783543e0-5b19-4da3-abc8-dae59e808feb",
              "parentUUID": "16dfa493-1e58-4b50-a80c-b5521cd9c63c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "7245cc7f-6aa4-40d4-a38f-9392008a6cfb",
            "a4185faf-044d-43f5-8cce-e950fecfc2c5",
            "783543e0-5b19-4da3-abc8-dae59e808feb"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 5,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "4036929e-b75d-46d0-b385-f08523463cff",
          "title": "FinancialDisclosure",
          "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/components/SectionField.unit.spec.jsx",
          "file": "/src/applications/pensions/tests/components/SectionField.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should show other expenses",
              "fullTitle": "FinancialDisclosure should show other expenses",
              "timedOut": false,
              "duration": 6,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var formData = {\n  otherExpenses: [{\n    paidTo: 'frank',\n    purpose: 'mileage',\n    amount: 92,\n    date: '10/12/1999'\n  }]\n};\nvar _render5 = (0, _react2.render)( /*#__PURE__*/_react.default.createElement(_SectionField.FinancialDisclosure, {\n  formData: formData\n})),\n    queryByText = _render5.queryByText;\n(0, _chai.expect)(queryByText('frank')).to.not.be.null;",
              "err": {},
              "uuid": "3e8b3755-1eef-4384-92b2-c9865b247cea",
              "parentUUID": "4036929e-b75d-46d0-b385-f08523463cff",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should not show other expenses",
              "fullTitle": "FinancialDisclosure should not show other expenses",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var formData = {\n  otherExpenses: [{\n    paidTo: '',\n    purpose: '',\n    amount: '',\n    date: ''\n  }]\n};\nvar _render6 = (0, _react2.render)( /*#__PURE__*/_react.default.createElement(_SectionField.FinancialDisclosure, {\n  formData: formData\n})),\n    queryByText = _render6.queryByText;\n(0, _chai.expect)(queryByText('frank')).to.be.null;",
              "err": {},
              "uuid": "5822bbae-724f-4b60-8300-55007cfb8975",
              "parentUUID": "4036929e-b75d-46d0-b385-f08523463cff",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "3e8b3755-1eef-4384-92b2-c9865b247cea",
            "5822bbae-724f-4b60-8300-55007cfb8975"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 8,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "7a92dfd6-b79c-496f-976d-4f7275cdea9f",
          "title": "pension add medical centers page",
          "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/chapters/03-health-and-employment-information/treatmentHistory.unit.spec.jsx",
          "file": "/src/applications/pensions/tests/chapters/03-health-and-employment-information/treatmentHistory.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should render web components in form correctly",
              "fullTitle": "pension add medical centers page should render web components in form correctly",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var medicalCenters = (0, _medicalCenters.default)();\nvar pageTitle = 'medical centers';\nvar expectedNumberOfFields = 1;\n(0, _pageTests.testNumberOfWebComponentFields)(_form.default, medicalCenters.schema, medicalCenters.uiSchema, expectedNumberOfFields, pageTitle);\nvar expectedNumberOfErrors = 1;\n(0, _pageTests.testNumberOfErrorsOnSubmitForWebComponents)(_form.default, medicalCenters.schema, medicalCenters.uiSchema, expectedNumberOfErrors, pageTitle);",
              "err": {},
              "uuid": "33aa71f7-3095-4202-8dd4-bba12ee630d9",
              "parentUUID": "7a92dfd6-b79c-496f-976d-4f7275cdea9f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "33aa71f7-3095-4202-8dd4-bba12ee630d9"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "fee89d10-b38c-4dff-861f-165a6b962eb7",
          "title": "pension <MedicalEvidenceAlert>",
          "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/components/FormAlerts/FormAlerts.unit.spec.jsx",
          "file": "/src/applications/pensions/tests/components/FormAlerts/FormAlerts.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should render",
              "fullTitle": "pension <MedicalEvidenceAlert> should render",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _render = (0, _react2.render)( /*#__PURE__*/_react.default.createElement(_FormAlerts.MedicalEvidenceAlert, null)),\n    container = _render.container;\nvar selector = container.querySelector('va-alert');\n(0, _chai.expect)(selector).to.exist;\n(0, _chai.expect)(selector).to.contain.attr('status', 'warning');",
              "err": {},
              "uuid": "e1a8a86a-964f-49a9-ade9-96bea00f14f5",
              "parentUUID": "fee89d10-b38c-4dff-861f-165a6b962eb7",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "e1a8a86a-964f-49a9-ade9-96bea00f14f5"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "ce09d485-7e8d-413a-a13e-c156059b5730",
          "title": "<Military History />",
          "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/components/SectionField.unit.spec.jsx",
          "file": "/src/applications/pensions/tests/components/SectionField.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "it renders empty previous names",
              "fullTitle": "<Military History /> it renders empty previous names",
              "timedOut": false,
              "duration": 9,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var badPreviousNames = {\n  previousNames: [{\n    first: '',\n    middle: '',\n    last: ''\n  }]\n};\nvar _render2 = (0, _react2.render)( /*#__PURE__*/_react.default.createElement(_SectionField.MilitaryHistory, {\n  formData: badPreviousNames\n})),\n    queryByText = _render2.queryByText;\n(0, _chai.expect)(queryByText('None')).to.not.be.null;",
              "err": {},
              "uuid": "318f3786-8040-44f4-b4ba-c2cf9356d423",
              "parentUUID": "ce09d485-7e8d-413a-a13e-c156059b5730",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "it renders previous names",
              "fullTitle": "<Military History /> it renders previous names",
              "timedOut": false,
              "duration": 3,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _render = (0, _react2.render)( /*#__PURE__*/_react.default.createElement(_SectionField.MilitaryHistory, {\n  formData: formData\n})),\n    queryByText = _render.queryByText;\n(0, _chai.expect)(queryByText('John')).to.not.be.null;",
              "err": {},
              "uuid": "2a9b0350-bdc6-4724-8d66-f811b502ecd7",
              "parentUUID": "ce09d485-7e8d-413a-a13e-c156059b5730",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "318f3786-8040-44f4-b4ba-c2cf9356d423",
            "2a9b0350-bdc6-4724-8d66-f811b502ecd7"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 12,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "53bd5a1a-f9b7-4284-ada8-147b97ea9eb2",
          "title": "AdditionalInformation",
          "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/components/SectionField.unit.spec.jsx",
          "file": "/src/applications/pensions/tests/components/SectionField.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should render without files",
              "fullTitle": "AdditionalInformation should render without files",
              "timedOut": false,
              "duration": 3,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var formData = {\n  'view:noDirectDeposit': true,\n  bankAccountType: 'savings',\n  noRapidProcessing: false\n};\nvar _render8 = (0, _react2.render)( /*#__PURE__*/_react.default.createElement(_SectionField.AdditionalInformation, {\n  formData: formData\n})),\n    queryByText = _render8.queryByText;\n(0, _chai.expect)(queryByText('Yes, I have uploaded all my documentation')).to.not.be.null;",
              "err": {},
              "uuid": "aeff9911-d98b-4d80-be15-4d94e5f14f30",
              "parentUUID": "53bd5a1a-f9b7-4284-ada8-147b97ea9eb2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should render with files",
              "fullTitle": "AdditionalInformation should render with files",
              "timedOut": false,
              "duration": 3,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var formData = {\n  'view:noDirectDeposit': false,\n  bankAccount: {\n    accountType: 'checking',\n    accountNumber: '123',\n    routingNumber: '333'\n  },\n  veteranAddress: {\n    street: '123 street',\n    city: 'Los Angeles',\n    state: 'California',\n    postalCode: '96785',\n    country: 'USA'\n  },\n  email: 'bob@example.com',\n  altEmail: 'alt-bob@example.com',\n  files: [{\n    name: 'file 1.txt',\n    size: 3200\n  }],\n  noRapidProcessing: true\n};\nvar _render7 = (0, _react2.render)( /*#__PURE__*/_react.default.createElement(_SectionField.AdditionalInformation, {\n  formData: formData\n})),\n    queryByText = _render7.queryByText;\n(0, _chai.expect)(queryByText('bob@example.com')).to.not.be.null;",
              "err": {},
              "uuid": "6c8b2bad-d4bd-456b-88af-13d0cb89f051",
              "parentUUID": "53bd5a1a-f9b7-4284-ada8-147b97ea9eb2",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "aeff9911-d98b-4d80-be15-4d94e5f14f30",
            "6c8b2bad-d4bd-456b-88af-13d0cb89f051"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 6,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "f92aaa58-23c7-4803-99eb-359a4445f04e",
          "title": "pension current employment page",
          "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/chapters/03-health-and-employment-information/currentEmployment.unit.spec.jsx",
          "file": "/src/applications/pensions/tests/chapters/03-health-and-employment-information/currentEmployment.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "53668343-bee6-4049-9612-a6ca4976f0cf",
              "title": "current employment information page",
              "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/chapters/03-health-and-employment-information/currentEmployment.unit.spec.jsx",
              "file": "/src/applications/pensions/tests/chapters/03-health-and-employment-information/currentEmployment.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should show the correct number of errors on submit for web components",
                  "fullTitle": "pension current employment page current employment information page should show the correct number of errors on submit for web components",
                  "timedOut": false,
                  "duration": 14,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var _render4 = (0, _react2.render)( /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  definitions: formConfig.defaultDefinitions,\n  schema: schema,\n  uiSchema: uiSchema,\n  data: data,\n  formData: {}\n})),\n    container = _render4.container,\n    getByRole = _render4.getByRole;\ngetByRole('button', {\n  name: /submit/i\n}).click();\nvar nodes = Array.from(container.querySelectorAll(\"\".concat(expectedFieldTypesWebComponents, \", \").concat(wrapperWebComponents)));\nvar errors = nodes.filter(function (node) {\n  return node.error;\n});\n(0, _chai.expect)(errors).to.have.lengthOf(expectedNumberOfErrors);",
                  "err": {},
                  "uuid": "6af81b2c-ca8c-41a5-b7d7-dbd82bf4113a",
                  "parentUUID": "53668343-bee6-4049-9612-a6ca4976f0cf",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "6af81b2c-ca8c-41a5-b7d7-dbd82bf4113a"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 14,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "552ac7cb-5141-4470-990a-48ce001f0548",
              "title": "current employment information page",
              "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/chapters/03-health-and-employment-information/currentEmployment.unit.spec.jsx",
              "file": "/src/applications/pensions/tests/chapters/03-health-and-employment-information/currentEmployment.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should have appropriate number of web components",
                  "fullTitle": "pension current employment page current employment information page should have appropriate number of web components",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var _render3 = (0, _react2.render)( /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  definitions: formConfig.defaultDefinitions,\n  schema: schema,\n  uiSchema: uiSchema,\n  data: data,\n  formData: {}\n})),\n    container = _render3.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypesWebComponents)).to.have.lengthOf(expectedNumberOfFields);",
                  "err": {},
                  "uuid": "bf35fe7b-b15a-40f0-8411-f2959c1444a4",
                  "parentUUID": "552ac7cb-5141-4470-990a-48ce001f0548",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "bf35fe7b-b15a-40f0-8411-f2959c1444a4"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "6f846458-bfc2-404c-b4e6-c8b691fc4a33",
          "title": "reason for current separation page",
          "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/chapters/04-household-information/reasonForCurrentSeparation.unit.spec.jsx",
          "file": "/src/applications/pensions/tests/chapters/04-household-information/reasonForCurrentSeparation.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should render web components in form correctly",
              "fullTitle": "reason for current separation page should render web components in form correctly",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var pageTitle = 'reason for separation';\nvar expectedNumberOfFields = 1;\n(0, _pageTests.testNumberOfWebComponentFields)(_form.default, _reasonForCurrentSeparation.default.schema, _reasonForCurrentSeparation.default.uiSchema, expectedNumberOfFields, pageTitle);\nvar expectedNumberOfErrors = 1;\n(0, _pageTests.testNumberOfErrorsOnSubmitForWebComponents)(_form.default, _reasonForCurrentSeparation.default.schema, _reasonForCurrentSeparation.default.uiSchema, expectedNumberOfErrors, pageTitle);",
              "err": {},
              "uuid": "48eeeb7f-1d24-4f4e-8a02-7de63e95352f",
              "parentUUID": "6f846458-bfc2-404c-b4e6-c8b691fc4a33",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "48eeeb7f-1d24-4f4e-8a02-7de63e95352f"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "95eeb52b-3a68-464f-a4de-62802986cbe6",
          "title": "current spouse marital history",
          "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/chapters/04-household-information/currentSpouseMaritalHistory.unit.spec.jsx",
          "file": "/src/applications/pensions/tests/chapters/04-household-information/currentSpouseMaritalHistory.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should render web components in form correctly",
              "fullTitle": "current spouse marital history should render web components in form correctly",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var pageTitle = 'current spouse marital history';\nvar expectedNumberOfFields = 1;\n(0, _pageTests.testNumberOfWebComponentFields)(_form.default, _currentSpouseMaritalHistory.default.schema, _currentSpouseMaritalHistory.default.uiSchema, expectedNumberOfFields, pageTitle);\nvar expectedNumberOfErrors = 1;\n(0, _pageTests.testNumberOfErrorsOnSubmitForWebComponents)(_form.default, _currentSpouseMaritalHistory.default.schema, _currentSpouseMaritalHistory.default.uiSchema, expectedNumberOfErrors, pageTitle);",
              "err": {},
              "uuid": "a8daf932-291e-4cec-ae60-22e3b2cec708",
              "parentUUID": "95eeb52b-3a68-464f-a4de-62802986cbe6",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a8daf932-291e-4cec-ae60-22e3b2cec708"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "a55699a1-5fd1-4879-ba24-2493ad9ea1b6",
          "title": "web component tests",
          "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/chapters/04-household-information/dependentChildren.unit.spec.jsx",
          "file": "/src/applications/pensions/tests/chapters/04-household-information/dependentChildren.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "38b29d5a-cc86-4797-9a1d-9cd3a393c78b",
              "title": "dependent children page",
              "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/chapters/04-household-information/dependentChildren.unit.spec.jsx",
              "file": "/src/applications/pensions/tests/chapters/04-household-information/dependentChildren.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should have appropriate number of web components",
                  "fullTitle": "web component tests dependent children page should have appropriate number of web components",
                  "timedOut": false,
                  "duration": 4,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var _render3 = (0, _react2.render)( /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  definitions: formConfig.defaultDefinitions,\n  schema: schema,\n  uiSchema: uiSchema,\n  data: data,\n  formData: {}\n})),\n    container = _render3.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypesWebComponents)).to.have.lengthOf(expectedNumberOfFields);",
                  "err": {},
                  "uuid": "c252d813-74ec-4dec-a836-4c490f1a7f39",
                  "parentUUID": "38b29d5a-cc86-4797-9a1d-9cd3a393c78b",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "c252d813-74ec-4dec-a836-4c490f1a7f39"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 4,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "fd65d281-8836-4d2a-a961-93870014e282",
              "title": "dependent children page",
              "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/chapters/04-household-information/dependentChildren.unit.spec.jsx",
              "file": "/src/applications/pensions/tests/chapters/04-household-information/dependentChildren.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should show the correct number of errors on submit for web components",
                  "fullTitle": "web component tests dependent children page should show the correct number of errors on submit for web components",
                  "timedOut": false,
                  "duration": 13,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var _render4 = (0, _react2.render)( /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  definitions: formConfig.defaultDefinitions,\n  schema: schema,\n  uiSchema: uiSchema,\n  data: data,\n  formData: {}\n})),\n    container = _render4.container,\n    getByRole = _render4.getByRole;\ngetByRole('button', {\n  name: /submit/i\n}).click();\nvar nodes = Array.from(container.querySelectorAll(\"\".concat(expectedFieldTypesWebComponents, \", \").concat(wrapperWebComponents)));\nvar errors = nodes.filter(function (node) {\n  return node.error;\n});\n(0, _chai.expect)(errors).to.have.lengthOf(expectedNumberOfErrors);",
                  "err": {},
                  "uuid": "821a030e-293d-4947-a568-694be7657c12",
                  "parentUUID": "fd65d281-8836-4d2a-a961-93870014e282",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "821a030e-293d-4947-a568-694be7657c12"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 13,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "6b49bbee-918e-426a-95e4-f6c7284b619c",
          "title": "formatPhoneNumber",
          "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/components/SectionField.unit.spec.jsx",
          "file": "/src/applications/pensions/tests/components/SectionField.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "correctly converts YYYY-MM-DD to MM/DD/YYYY",
              "fullTitle": "formatPhoneNumber correctly converts YYYY-MM-DD to MM/DD/YYYY",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var inputDate = '5555555555';\nvar expectedDate = '(555) 555-5555';\nvar result = (0, _SectionField.formatPhoneNumber)(inputDate);\n(0, _chai.expect)(result).to.equal(expectedDate);",
              "err": {},
              "uuid": "4ea232e4-d84e-4c2a-b147-320d3b07e544",
              "parentUUID": "6b49bbee-918e-426a-95e4-f6c7284b619c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "returns undefined for null or undefined input",
              "fullTitle": "formatPhoneNumber returns undefined for null or undefined input",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, _chai.expect)((0, _SectionField.formatPhoneNumber)(null)).to.eql('');\n(0, _chai.expect)((0, _SectionField.formatPhoneNumber)()).to.eql('');",
              "err": {},
              "uuid": "c58602f8-d67d-4a2a-b49c-350f9bc9476c",
              "parentUUID": "6b49bbee-918e-426a-95e4-f6c7284b619c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "4ea232e4-d84e-4c2a-b147-320d3b07e544",
            "c58602f8-d67d-4a2a-b49c-350f9bc9476c"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "7f88dce8-8223-48cd-9b8b-5e104b5e9300",
          "title": "pension treatment history page",
          "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/chapters/03-health-and-employment-information/treatmentHistory.unit.spec.jsx",
          "file": "/src/applications/pensions/tests/chapters/03-health-and-employment-information/treatmentHistory.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should render web components in form correctly",
              "fullTitle": "pension treatment history page should render web components in form correctly",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var pageTitle = 'treatment history';\nvar expectedNumberOfFields = 1;\n(0, _pageTests.testNumberOfWebComponentFields)(_form.default, _vaTreatmentHistory.default.schema, _vaTreatmentHistory.default.uiSchema, expectedNumberOfFields, pageTitle);\nvar expectedNumberOfErrors = 1;\n(0, _pageTests.testNumberOfErrorsOnSubmitForWebComponents)(_form.default, _vaTreatmentHistory.default.schema, _vaTreatmentHistory.default.uiSchema, expectedNumberOfErrors, pageTitle);",
              "err": {},
              "uuid": "a8da7675-56fe-477f-bead-b14a6b7c14d5",
              "parentUUID": "7f88dce8-8223-48cd-9b8b-5e104b5e9300",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a8da7675-56fe-477f-bead-b14a6b7c14d5"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "de336acd-348c-4413-81f3-c9e294949a29",
          "title": "Unreimbursed medical expenses pension page",
          "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/chapters/05-financial-information/medicalExpenses.unit.spec.jsx",
          "file": "/src/applications/pensions/tests/chapters/05-financial-information/medicalExpenses.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "4fc7e366-3146-463d-a7ad-541735020797",
              "title": "Medical expenses page",
              "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/chapters/05-financial-information/medicalExpenses.unit.spec.jsx",
              "file": "/src/applications/pensions/tests/chapters/05-financial-information/medicalExpenses.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should show the correct number of errors on submit for web components",
                  "fullTitle": "Unreimbursed medical expenses pension page Medical expenses page should show the correct number of errors on submit for web components",
                  "timedOut": false,
                  "duration": 10,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var _render4 = (0, _react2.render)( /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  definitions: formConfig.defaultDefinitions,\n  schema: schema,\n  uiSchema: uiSchema,\n  data: data,\n  formData: {}\n})),\n    container = _render4.container,\n    getByRole = _render4.getByRole;\ngetByRole('button', {\n  name: /submit/i\n}).click();\nvar nodes = Array.from(container.querySelectorAll(\"\".concat(expectedFieldTypesWebComponents, \", \").concat(wrapperWebComponents)));\nvar errors = nodes.filter(function (node) {\n  return node.error;\n});\n(0, _chai.expect)(errors).to.have.lengthOf(expectedNumberOfErrors);",
                  "err": {},
                  "uuid": "c70ccc78-1c7f-4596-9c69-f60a255c91b4",
                  "parentUUID": "4fc7e366-3146-463d-a7ad-541735020797",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "c70ccc78-1c7f-4596-9c69-f60a255c91b4"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 10,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "6b5d0582-a754-4e8d-9d78-8c2154758512",
              "title": "Medical expenses page",
              "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/chapters/05-financial-information/medicalExpenses.unit.spec.jsx",
              "file": "/src/applications/pensions/tests/chapters/05-financial-information/medicalExpenses.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should have appropriate number of web components",
                  "fullTitle": "Unreimbursed medical expenses pension page Medical expenses page should have appropriate number of web components",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var _render3 = (0, _react2.render)( /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  definitions: formConfig.defaultDefinitions,\n  schema: schema,\n  uiSchema: uiSchema,\n  data: data,\n  formData: {}\n})),\n    container = _render3.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypesWebComponents)).to.have.lengthOf(expectedNumberOfFields);",
                  "err": {},
                  "uuid": "50c7a854-91d1-494d-b1d3-9f7182705e5a",
                  "parentUUID": "6b5d0582-a754-4e8d-9d78-8c2154758512",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "50c7a854-91d1-494d-b1d3-9f7182705e5a"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "4a66c9bb-74c5-493d-8489-910f91270d32",
          "title": "Unreimbursed care expenses pension page",
          "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/chapters/05-financial-information/hasCareExpenses.unit.spec.jsx",
          "file": "/src/applications/pensions/tests/chapters/05-financial-information/hasCareExpenses.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "c7ee1c5d-c22c-4668-b819-36e1355fc890",
              "title": "Has care expenses page",
              "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/chapters/05-financial-information/hasCareExpenses.unit.spec.jsx",
              "file": "/src/applications/pensions/tests/chapters/05-financial-information/hasCareExpenses.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should show the correct number of errors on submit for web components",
                  "fullTitle": "Unreimbursed care expenses pension page Has care expenses page should show the correct number of errors on submit for web components",
                  "timedOut": false,
                  "duration": 9,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var _render4 = (0, _react2.render)( /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  definitions: formConfig.defaultDefinitions,\n  schema: schema,\n  uiSchema: uiSchema,\n  data: data,\n  formData: {}\n})),\n    container = _render4.container,\n    getByRole = _render4.getByRole;\ngetByRole('button', {\n  name: /submit/i\n}).click();\nvar nodes = Array.from(container.querySelectorAll(\"\".concat(expectedFieldTypesWebComponents, \", \").concat(wrapperWebComponents)));\nvar errors = nodes.filter(function (node) {\n  return node.error;\n});\n(0, _chai.expect)(errors).to.have.lengthOf(expectedNumberOfErrors);",
                  "err": {},
                  "uuid": "80ab1278-60cc-4903-97c6-91ca53129d14",
                  "parentUUID": "c7ee1c5d-c22c-4668-b819-36e1355fc890",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "80ab1278-60cc-4903-97c6-91ca53129d14"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 9,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "2f04170c-8d38-4fd9-835f-286eb6ca4aa5",
              "title": "Has care expenses page",
              "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/chapters/05-financial-information/hasCareExpenses.unit.spec.jsx",
              "file": "/src/applications/pensions/tests/chapters/05-financial-information/hasCareExpenses.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should have appropriate number of web components",
                  "fullTitle": "Unreimbursed care expenses pension page Has care expenses page should have appropriate number of web components",
                  "timedOut": false,
                  "duration": 5,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var _render3 = (0, _react2.render)( /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  definitions: formConfig.defaultDefinitions,\n  schema: schema,\n  uiSchema: uiSchema,\n  data: data,\n  formData: {}\n})),\n    container = _render3.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypesWebComponents)).to.have.lengthOf(expectedNumberOfFields);",
                  "err": {},
                  "uuid": "01c94a63-be79-49fe-ae1c-ee16749abf39",
                  "parentUUID": "2f04170c-8d38-4fd9-835f-286eb6ca4aa5",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "01c94a63-be79-49fe-ae1c-ee16749abf39"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 5,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "dcf7017e-891a-462c-a87a-77def12be2dd",
          "title": "Pensions SpouseMarriageTitle",
          "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/components/SpouseMarriageTitle.unit.spec.jsx",
          "file": "/src/applications/pensions/tests/components/SpouseMarriageTitle.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should render multi-marriage title",
              "fullTitle": "Pensions SpouseMarriageTitle should render multi-marriage title",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var tree = _skinDeep.default.shallowRender( /*#__PURE__*/_react.default.createElement(_SpouseMarriageTitle.default, {\n  id: \"id\",\n  formData: {\n    spouseMarriages: [{}, {}]\n  }\n}));\n(0, _chai.expect)(tree.text()).to.contain('Spouse’s former marriages');",
              "err": {},
              "uuid": "688f6d5a-68cd-4660-86f0-ec1489b3407e",
              "parentUUID": "dcf7017e-891a-462c-a87a-77def12be2dd",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should render single marriage title",
              "fullTitle": "Pensions SpouseMarriageTitle should render single marriage title",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var tree = _skinDeep.default.shallowRender( /*#__PURE__*/_react.default.createElement(_SpouseMarriageTitle.default, {\n  id: \"id\",\n  formData: {\n    spouseMarriages: [{}]\n  }\n}));\n(0, _chai.expect)(tree.text()).to.contain('Spouse’s former marriage');",
              "err": {},
              "uuid": "bff10d8d-49ae-4944-9da2-619c7d935be0",
              "parentUUID": "dcf7017e-891a-462c-a87a-77def12be2dd",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "688f6d5a-68cd-4660-86f0-ec1489b3407e",
            "bff10d8d-49ae-4944-9da2-619c7d935be0"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "fe326a60-5688-42d9-8dde-ebeb15bfd4a5",
          "title": "Pension: Financial information, income sources page",
          "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/chapters/05-financial-information/incomeSources.unit.spec.jsx",
          "file": "/src/applications/pensions/tests/chapters/05-financial-information/incomeSources.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "fd72ad4d-2403-49bc-804b-7473abc66b47",
              "title": "should include a type of income additional field",
              "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/chapters/05-financial-information/incomeSources.unit.spec.jsx",
              "file": "/src/applications/pensions/tests/chapters/05-financial-information/incomeSources.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [],
              "suites": [
                {
                  "uuid": "47d52c5f-0ccb-49fa-b260-f86122d46362",
                  "title": "Gross monthly income page",
                  "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/chapters/05-financial-information/incomeSources.unit.spec.jsx",
                  "file": "/src/applications/pensions/tests/chapters/05-financial-information/incomeSources.unit.spec.jsx",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "should have appropriate number of web components",
                      "fullTitle": "Pension: Financial information, income sources page should include a type of income additional field Gross monthly income page should have appropriate number of web components",
                      "timedOut": false,
                      "duration": 8,
                      "state": "passed",
                      "speed": "slow",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "var _render3 = (0, _react2.render)( /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  definitions: formConfig.defaultDefinitions,\n  schema: schema,\n  uiSchema: uiSchema,\n  data: data,\n  formData: {}\n})),\n    container = _render3.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypesWebComponents)).to.have.lengthOf(expectedNumberOfFields);",
                      "err": {},
                      "uuid": "edef6880-ff20-440b-9bd3-92872bea188f",
                      "parentUUID": "47d52c5f-0ccb-49fa-b260-f86122d46362",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "edef6880-ff20-440b-9bd3-92872bea188f"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 8,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "c5a1a0ed-7077-4d33-b42a-f3d4e5ebbf98",
                  "title": "Gross monthly income page",
                  "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/chapters/05-financial-information/incomeSources.unit.spec.jsx",
                  "file": "/src/applications/pensions/tests/chapters/05-financial-information/incomeSources.unit.spec.jsx",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "should have appropriate number of fields",
                      "fullTitle": "Pension: Financial information, income sources page should include a type of income additional field Gross monthly income page should have appropriate number of fields",
                      "timedOut": false,
                      "duration": 4,
                      "state": "passed",
                      "speed": "slow",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "var _render = (0, _react2.render)( /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  definitions: formConfig.defaultDefinitions,\n  schema: schema,\n  uiSchema: uiSchema,\n  data: data,\n  formData: {}\n})),\n    container = _render.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypes)).to.have.lengthOf(expectedNumberOfFields);",
                      "err": {},
                      "uuid": "1a54817c-3acc-401f-a274-15c6fddabef0",
                      "parentUUID": "c5a1a0ed-7077-4d33-b42a-f3d4e5ebbf98",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "1a54817c-3acc-401f-a274-15c6fddabef0"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 4,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                }
              ],
              "passes": [],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "48234fe4-20f8-4824-9987-400e0249b1a2",
              "title": "with multiple sources",
              "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/chapters/05-financial-information/incomeSources.unit.spec.jsx",
              "file": "/src/applications/pensions/tests/chapters/05-financial-information/incomeSources.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [],
              "suites": [
                {
                  "uuid": "2aedb545-e8c0-4f36-ba9b-fb7486f3a67a",
                  "title": "Gross monthly income page",
                  "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/chapters/05-financial-information/incomeSources.unit.spec.jsx",
                  "file": "/src/applications/pensions/tests/chapters/05-financial-information/incomeSources.unit.spec.jsx",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "should show the correct number of errors on submit",
                      "fullTitle": "Pension: Financial information, income sources page with multiple sources Gross monthly income page should show the correct number of errors on submit",
                      "timedOut": false,
                      "duration": 43,
                      "state": "passed",
                      "speed": "slow",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "var _render2 = (0, _react2.render)( /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  definitions: formConfig.defaultDefinitions,\n  schema: schema,\n  uiSchema: uiSchema,\n  data: data,\n  formData: {}\n})),\n    getByRole = _render2.getByRole,\n    queryAllByRole = _render2.queryAllByRole;\ngetByRole('button', {\n  name: /submit/i\n}).click();\nvar errors = queryAllByRole('alert');\n(0, _chai.expect)(errors).to.have.lengthOf(expectedNumberOfErrors);",
                      "err": {},
                      "uuid": "a1ad186b-9161-4ed0-b639-66389b8c6982",
                      "parentUUID": "2aedb545-e8c0-4f36-ba9b-fb7486f3a67a",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "a1ad186b-9161-4ed0-b639-66389b8c6982"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 43,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "ea30392d-1f72-4127-bac6-7486d508445e",
                  "title": "Gross monthly income page",
                  "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/chapters/05-financial-information/incomeSources.unit.spec.jsx",
                  "file": "/src/applications/pensions/tests/chapters/05-financial-information/incomeSources.unit.spec.jsx",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "should show the correct number of errors on submit for web components",
                      "fullTitle": "Pension: Financial information, income sources page with multiple sources Gross monthly income page should show the correct number of errors on submit for web components",
                      "timedOut": false,
                      "duration": 30,
                      "state": "passed",
                      "speed": "slow",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "var _render4 = (0, _react2.render)( /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  definitions: formConfig.defaultDefinitions,\n  schema: schema,\n  uiSchema: uiSchema,\n  data: data,\n  formData: {}\n})),\n    container = _render4.container,\n    getByRole = _render4.getByRole;\ngetByRole('button', {\n  name: /submit/i\n}).click();\nvar nodes = Array.from(container.querySelectorAll(\"\".concat(expectedFieldTypesWebComponents, \", \").concat(wrapperWebComponents)));\nvar errors = nodes.filter(function (node) {\n  return node.error;\n});\n(0, _chai.expect)(errors).to.have.lengthOf(expectedNumberOfErrors);",
                      "err": {},
                      "uuid": "7229e72f-c65a-4765-8aea-94b199afd654",
                      "parentUUID": "ea30392d-1f72-4127-bac6-7486d508445e",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "7229e72f-c65a-4765-8aea-94b199afd654"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 30,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "04de3434-d440-4e10-9a2d-ba90334ced76",
                  "title": "Gross monthly income page",
                  "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/chapters/05-financial-information/incomeSources.unit.spec.jsx",
                  "file": "/src/applications/pensions/tests/chapters/05-financial-information/incomeSources.unit.spec.jsx",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "should have appropriate number of web components",
                      "fullTitle": "Pension: Financial information, income sources page with multiple sources Gross monthly income page should have appropriate number of web components",
                      "timedOut": false,
                      "duration": 7,
                      "state": "passed",
                      "speed": "slow",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "var _render3 = (0, _react2.render)( /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  definitions: formConfig.defaultDefinitions,\n  schema: schema,\n  uiSchema: uiSchema,\n  data: data,\n  formData: {}\n})),\n    container = _render3.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypesWebComponents)).to.have.lengthOf(expectedNumberOfFields);",
                      "err": {},
                      "uuid": "6acb9ab6-858e-4247-aeea-68990ea7bf8e",
                      "parentUUID": "04de3434-d440-4e10-9a2d-ba90334ced76",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "6acb9ab6-858e-4247-aeea-68990ea7bf8e"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 7,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "7a4cb36c-cbd8-41f4-9822-a53308fa8dbe",
                  "title": "Gross monthly income page",
                  "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/chapters/05-financial-information/incomeSources.unit.spec.jsx",
                  "file": "/src/applications/pensions/tests/chapters/05-financial-information/incomeSources.unit.spec.jsx",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "should have appropriate number of fields",
                      "fullTitle": "Pension: Financial information, income sources page with multiple sources Gross monthly income page should have appropriate number of fields",
                      "timedOut": false,
                      "duration": 6,
                      "state": "passed",
                      "speed": "slow",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "var _render = (0, _react2.render)( /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  definitions: formConfig.defaultDefinitions,\n  schema: schema,\n  uiSchema: uiSchema,\n  data: data,\n  formData: {}\n})),\n    container = _render.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypes)).to.have.lengthOf(expectedNumberOfFields);",
                      "err": {},
                      "uuid": "0e64f52d-292d-468b-8981-2c25b5c8b18f",
                      "parentUUID": "7a4cb36c-cbd8-41f4-9822-a53308fa8dbe",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "0e64f52d-292d-468b-8981-2c25b5c8b18f"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 6,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                }
              ],
              "passes": [],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "e80c63b7-961f-4c86-aa1d-e148604c7c88",
              "title": "should not require type of income additional field",
              "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/chapters/05-financial-information/incomeSources.unit.spec.jsx",
              "file": "/src/applications/pensions/tests/chapters/05-financial-information/incomeSources.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [],
              "suites": [
                {
                  "uuid": "85567c43-6994-486b-8e09-6bdb741b5b28",
                  "title": "Gross monthly income page",
                  "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/chapters/05-financial-information/incomeSources.unit.spec.jsx",
                  "file": "/src/applications/pensions/tests/chapters/05-financial-information/incomeSources.unit.spec.jsx",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "should have appropriate number of web components",
                      "fullTitle": "Pension: Financial information, income sources page should not require type of income additional field Gross monthly income page should have appropriate number of web components",
                      "timedOut": false,
                      "duration": 6,
                      "state": "passed",
                      "speed": "slow",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "var _render3 = (0, _react2.render)( /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  definitions: formConfig.defaultDefinitions,\n  schema: schema,\n  uiSchema: uiSchema,\n  data: data,\n  formData: {}\n})),\n    container = _render3.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypesWebComponents)).to.have.lengthOf(expectedNumberOfFields);",
                      "err": {},
                      "uuid": "e030c141-156d-4c3b-a81f-15503db72295",
                      "parentUUID": "85567c43-6994-486b-8e09-6bdb741b5b28",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "e030c141-156d-4c3b-a81f-15503db72295"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 6,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "fa5dba5d-f70b-444a-9539-98d28d50656c",
                  "title": "Gross monthly income page",
                  "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/chapters/05-financial-information/incomeSources.unit.spec.jsx",
                  "file": "/src/applications/pensions/tests/chapters/05-financial-information/incomeSources.unit.spec.jsx",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "should show the correct number of errors on submit",
                      "fullTitle": "Pension: Financial information, income sources page should not require type of income additional field Gross monthly income page should show the correct number of errors on submit",
                      "timedOut": false,
                      "duration": 20,
                      "state": "passed",
                      "speed": "slow",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "var _render2 = (0, _react2.render)( /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  definitions: formConfig.defaultDefinitions,\n  schema: schema,\n  uiSchema: uiSchema,\n  data: data,\n  formData: {}\n})),\n    getByRole = _render2.getByRole,\n    queryAllByRole = _render2.queryAllByRole;\ngetByRole('button', {\n  name: /submit/i\n}).click();\nvar errors = queryAllByRole('alert');\n(0, _chai.expect)(errors).to.have.lengthOf(expectedNumberOfErrors);",
                      "err": {},
                      "uuid": "aaeea79a-bb03-4047-8680-b8a14cab3552",
                      "parentUUID": "fa5dba5d-f70b-444a-9539-98d28d50656c",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "aaeea79a-bb03-4047-8680-b8a14cab3552"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 20,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "65b65d65-131e-4393-ac96-90ca2786b92b",
                  "title": "Gross monthly income page",
                  "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/chapters/05-financial-information/incomeSources.unit.spec.jsx",
                  "file": "/src/applications/pensions/tests/chapters/05-financial-information/incomeSources.unit.spec.jsx",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "should show the correct number of errors on submit for web components",
                      "fullTitle": "Pension: Financial information, income sources page should not require type of income additional field Gross monthly income page should show the correct number of errors on submit for web components",
                      "timedOut": false,
                      "duration": 20,
                      "state": "passed",
                      "speed": "slow",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "var _render4 = (0, _react2.render)( /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  definitions: formConfig.defaultDefinitions,\n  schema: schema,\n  uiSchema: uiSchema,\n  data: data,\n  formData: {}\n})),\n    container = _render4.container,\n    getByRole = _render4.getByRole;\ngetByRole('button', {\n  name: /submit/i\n}).click();\nvar nodes = Array.from(container.querySelectorAll(\"\".concat(expectedFieldTypesWebComponents, \", \").concat(wrapperWebComponents)));\nvar errors = nodes.filter(function (node) {\n  return node.error;\n});\n(0, _chai.expect)(errors).to.have.lengthOf(expectedNumberOfErrors);",
                      "err": {},
                      "uuid": "c87e4d17-6c3c-4b48-b4e6-6f8002cbc6de",
                      "parentUUID": "65b65d65-131e-4393-ac96-90ca2786b92b",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "c87e4d17-6c3c-4b48-b4e6-6f8002cbc6de"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 20,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "a219c96f-9321-4696-a2ae-b2ab676dca67",
                  "title": "Gross monthly income page",
                  "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/chapters/05-financial-information/incomeSources.unit.spec.jsx",
                  "file": "/src/applications/pensions/tests/chapters/05-financial-information/incomeSources.unit.spec.jsx",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "should have appropriate number of fields",
                      "fullTitle": "Pension: Financial information, income sources page should not require type of income additional field Gross monthly income page should have appropriate number of fields",
                      "timedOut": false,
                      "duration": 6,
                      "state": "passed",
                      "speed": "slow",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "var _render = (0, _react2.render)( /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  definitions: formConfig.defaultDefinitions,\n  schema: schema,\n  uiSchema: uiSchema,\n  data: data,\n  formData: {}\n})),\n    container = _render.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypes)).to.have.lengthOf(expectedNumberOfFields);",
                      "err": {},
                      "uuid": "51424f5d-7529-47ac-9f8b-131973674d1a",
                      "parentUUID": "a219c96f-9321-4696-a2ae-b2ab676dca67",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "51424f5d-7529-47ac-9f8b-131973674d1a"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 6,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                }
              ],
              "passes": [],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "5842c2d3-85a5-4c97-a908-ba1ea61224af",
          "title": "pension contact information page",
          "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/chapters/01-applicant-information/contactInformation.unit.spec.jsx",
          "file": "/src/applications/pensions/tests/chapters/01-applicant-information/contactInformation.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "da01f2ce-f664-44fb-818c-6a30a01bed91",
              "title": "Email address and phone number page",
              "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/chapters/01-applicant-information/contactInformation.unit.spec.jsx",
              "file": "/src/applications/pensions/tests/chapters/01-applicant-information/contactInformation.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should show the correct number of errors on submit for web components",
                  "fullTitle": "pension contact information page Email address and phone number page should show the correct number of errors on submit for web components",
                  "timedOut": false,
                  "duration": 8,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var _render4 = (0, _react2.render)( /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  definitions: formConfig.defaultDefinitions,\n  schema: schema,\n  uiSchema: uiSchema,\n  data: data,\n  formData: {}\n})),\n    container = _render4.container,\n    getByRole = _render4.getByRole;\ngetByRole('button', {\n  name: /submit/i\n}).click();\nvar nodes = Array.from(container.querySelectorAll(\"\".concat(expectedFieldTypesWebComponents, \", \").concat(wrapperWebComponents)));\nvar errors = nodes.filter(function (node) {\n  return node.error;\n});\n(0, _chai.expect)(errors).to.have.lengthOf(expectedNumberOfErrors);",
                  "err": {},
                  "uuid": "f8561300-7ba4-417b-9c6f-7d69ffc78a3d",
                  "parentUUID": "da01f2ce-f664-44fb-818c-6a30a01bed91",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "f8561300-7ba4-417b-9c6f-7d69ffc78a3d"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 8,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "c91a0db8-9477-4813-a3b1-9f4dca52fa15",
              "title": "Email address and phone number page",
              "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/chapters/01-applicant-information/contactInformation.unit.spec.jsx",
              "file": "/src/applications/pensions/tests/chapters/01-applicant-information/contactInformation.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should have appropriate number of web components",
                  "fullTitle": "pension contact information page Email address and phone number page should have appropriate number of web components",
                  "timedOut": false,
                  "duration": 4,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var _render3 = (0, _react2.render)( /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  definitions: formConfig.defaultDefinitions,\n  schema: schema,\n  uiSchema: uiSchema,\n  data: data,\n  formData: {}\n})),\n    container = _render3.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypesWebComponents)).to.have.lengthOf(expectedNumberOfFields);",
                  "err": {},
                  "uuid": "ed428c61-55f3-4113-8223-94221367f719",
                  "parentUUID": "c91a0db8-9477-4813-a3b1-9f4dca52fa15",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "ed428c61-55f3-4113-8223-94221367f719"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 4,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "d314cef3-7d1c-4906-b099-93e08607facf",
          "title": "current spouse full name page",
          "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/chapters/04-household-information/currentSpouse.unit.spec.jsx",
          "file": "/src/applications/pensions/tests/chapters/04-household-information/currentSpouse.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should render web components in form correctly",
              "fullTitle": "current spouse full name page should render web components in form correctly",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var pageTitle = 'current spouse full name';\nvar expectedNumberOfFields = 4;\n(0, _pageTests.testNumberOfWebComponentFields)(_form.default, _currentSpouse.default.schema, _currentSpouse.default.uiSchema, expectedNumberOfFields, pageTitle);\nvar expectedNumberOfErrors = 2;\n(0, _pageTests.testNumberOfErrorsOnSubmitForWebComponents)(_form.default, _currentSpouse.default.schema, _currentSpouse.default.uiSchema, expectedNumberOfErrors, pageTitle);",
              "err": {},
              "uuid": "3fb907e8-18aa-4ab8-8d3b-c9a80d1d4d5a",
              "parentUUID": "d314cef3-7d1c-4906-b099-93e08607facf",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "3fb907e8-18aa-4ab8-8d3b-c9a80d1d4d5a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "b10856e9-fe07-40f5-808d-851dca5b5a4e",
          "title": "Pensions marriage history",
          "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/config/marriageHistory.unit.spec.jsx",
          "file": "/src/applications/pensions/tests/config/marriageHistory.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should not submit empty form",
              "fullTitle": "Pensions marriage history should not submit empty form",
              "timedOut": false,
              "duration": 26,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var onSubmit = _sinon.default.spy();\nvar form = _testUtils.default.renderIntoDocument( /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  schema: schema,\n  definitions: _form.default.defaultDefinitions,\n  onSubmit: onSubmit,\n  uiSchema: uiSchema\n}));\nvar formDOM = (0, _schemaformUtils.getFormDOM)(form);\n(0, _schemaformUtils.submitForm)(form);\n(0, _chai.expect)(formDOM.querySelectorAll('.usa-input-error').length).to.equal(8);\n(0, _chai.expect)(onSubmit.called).to.be.false;",
              "err": {},
              "uuid": "6297bc45-b460-4b66-a923-1bdc9fa44e2a",
              "parentUUID": "b10856e9-fe07-40f5-808d-851dca5b5a4e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should render",
              "fullTitle": "Pensions marriage history should render",
              "timedOut": false,
              "duration": 16,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var form = _testUtils.default.renderIntoDocument( /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  schema: schema,\n  definitions: _form.default.defaultDefinitions,\n  uiSchema: uiSchema\n}));\nvar formDOM = (0, _schemaformUtils.getFormDOM)(form);\n(0, _chai.expect)(formDOM.querySelectorAll('input,select').length).to.equal(19);",
              "err": {},
              "uuid": "304687a9-d0fe-41b6-9b23-8c765c99797f",
              "parentUUID": "b10856e9-fe07-40f5-808d-851dca5b5a4e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should submit with valid data",
              "fullTitle": "Pensions marriage history should submit with valid data",
              "timedOut": false,
              "duration": 79,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var onSubmit = _sinon.default.spy();\nvar form = _testUtils.default.renderIntoDocument( /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  schema: schema,\n  definitions: _form.default.defaultDefinitions,\n  onSubmit: onSubmit,\n  uiSchema: uiSchema\n}));\nvar formDOM = (0, _schemaformUtils.getFormDOM)(form);\nformDOM.fillData('#root_spouseFullName_first', 'test');\nformDOM.fillData('#root_spouseFullName_last', 'test');\nformDOM.fillData('#root_dateOfMarriageMonth', '3');\nformDOM.fillData('#root_dateOfMarriageDay', '3');\nformDOM.fillData('#root_dateOfMarriageYear', '2001');\nformDOM.fillData('#root_locationOfMarriage', 'The Pacific');\nformDOM.fillData('#root_marriageType_4', 'Other');\nformDOM.fillData('#root_otherExplanation', 'Something');\nformDOM.fillData('#root_view\\\\:pastMarriage_reasonForSeparation_1', 'Divorced');\nformDOM.fillData('#root_view\\\\:pastMarriage_dateOfSeparationMonth', '3');\nformDOM.fillData('#root_view\\\\:pastMarriage_dateOfSeparationDay', '3');\nformDOM.fillData('#root_view\\\\:pastMarriage_dateOfSeparationYear', '2002');\nformDOM.fillData('#root_view\\\\:pastMarriage_locationOfSeparation', 'The Atlantic');\n(0, _schemaformUtils.submitForm)(form);\n(0, _chai.expect)(formDOM.querySelectorAll('.usa-input-error').length).to.equal(0);\n(0, _chai.expect)(onSubmit.called).to.be.true;",
              "err": {},
              "uuid": "e23eedea-8724-48ab-a6f8-4d35bfeaf8fd",
              "parentUUID": "b10856e9-fe07-40f5-808d-851dca5b5a4e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [
            {
              "uuid": "8c08aaf3-48ab-43db-a062-dfa93a3174bf",
              "title": "page title",
              "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/config/marriageHistory.unit.spec.jsx",
              "file": "/src/applications/pensions/tests/config/marriageHistory.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "uses word for index",
                  "fullTitle": "Pensions marriage history page title uses word for index",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)(pageTitle({}, {\n  pagePerItemIndex: 0\n})).to.equal('First marriage');",
                  "err": {},
                  "uuid": "d1e5b4eb-3a54-470e-8318-042020253a4d",
                  "parentUUID": "8c08aaf3-48ab-43db-a062-dfa93a3174bf",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "uses word for index",
                  "fullTitle": "Pensions marriage history page title uses word for index",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)(pageTitle({})).to.equal('First marriage');",
                  "err": {},
                  "uuid": "742b1ac5-a84f-4a83-9ee4-25a476851f24",
                  "parentUUID": "8c08aaf3-48ab-43db-a062-dfa93a3174bf",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "uses number when at index ten or greater",
                  "fullTitle": "Pensions marriage history page title uses number when at index ten or greater",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)(pageTitle({}, {\n  pagePerItemIndex: 10\n})).to.equal('Eleventh marriage');",
                  "err": {},
                  "uuid": "eac02405-c770-4e01-a1bb-ad0b60bbf4ae",
                  "parentUUID": "8c08aaf3-48ab-43db-a062-dfa93a3174bf",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "uses word for index",
                  "fullTitle": "Pensions marriage history page title uses word for index",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)(pageTitle({}, {\n  pagePerItemIndex: 49\n})).to.equal('50th marriage');",
                  "err": {},
                  "uuid": "17431a2b-1ae4-4a6f-b76e-5937f2ae1510",
                  "parentUUID": "8c08aaf3-48ab-43db-a062-dfa93a3174bf",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "d1e5b4eb-3a54-470e-8318-042020253a4d",
                "742b1ac5-a84f-4a83-9ee4-25a476851f24",
                "eac02405-c770-4e01-a1bb-ad0b60bbf4ae",
                "17431a2b-1ae4-4a6f-b76e-5937f2ae1510"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "56f25a79-c226-4957-9738-61a2516de660",
              "title": "hideIf current marriage",
              "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/config/marriageHistory.unit.spec.jsx",
              "file": "/src/applications/pensions/tests/config/marriageHistory.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "hides if married and last",
                  "fullTitle": "Pensions marriage history hideIf current marriage hides if married and last",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var result = hideIfCurrentMarriage({\n  maritalStatus: 'Married',\n  marriages: [{}]\n}, 0);\n(0, _chai.expect)(result).to.be.true;",
                  "err": {},
                  "uuid": "ee79ceb2-4859-4fe7-96cf-3b3c3e25a3a3",
                  "parentUUID": "56f25a79-c226-4957-9738-61a2516de660",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "does not hide if not married",
                  "fullTitle": "Pensions marriage history hideIf current marriage does not hide if not married",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var result = hideIfCurrentMarriage({\n  marriages: [{}]\n}, 0);\n(0, _chai.expect)(result).to.be.false;",
                  "err": {},
                  "uuid": "81672dec-8c43-4f88-aa6c-fb681766d205",
                  "parentUUID": "56f25a79-c226-4957-9738-61a2516de660",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "does not hide if married and not last",
                  "fullTitle": "Pensions marriage history hideIf current marriage does not hide if married and not last",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var result = hideIfCurrentMarriage({\n  maritalStatus: 'Married',\n  marriages: [{}, {}]\n}, 0);\n(0, _chai.expect)(result).to.be.false;",
                  "err": {},
                  "uuid": "a051a8e1-ac76-4a93-850b-b5b2322af66f",
                  "parentUUID": "56f25a79-c226-4957-9738-61a2516de660",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "ee79ceb2-4859-4fe7-96cf-3b3c3e25a3a3",
                "81672dec-8c43-4f88-aa6c-fb681766d205",
                "a051a8e1-ac76-4a93-850b-b5b2322af66f"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            }
          ],
          "passes": [
            "6297bc45-b460-4b66-a923-1bdc9fa44e2a",
            "304687a9-d0fe-41b6-9b23-8c765c99797f",
            "e23eedea-8724-48ab-a6f8-4d35bfeaf8fd"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 121,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "48001b56-7d10-4441-a2b3-d89d195fa5ef",
          "title": "medicaid coverage pension page",
          "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/chapters/03-health-and-employment-information/medicaidCoverage.unit.spec.jsx",
          "file": "/src/applications/pensions/tests/chapters/03-health-and-employment-information/medicaidCoverage.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "e1e4da14-3110-4d00-98f7-4ada0f5fa71c",
              "title": "medicaid coverage page",
              "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/chapters/03-health-and-employment-information/medicaidCoverage.unit.spec.jsx",
              "file": "/src/applications/pensions/tests/chapters/03-health-and-employment-information/medicaidCoverage.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should have appropriate number of web components",
                  "fullTitle": "medicaid coverage pension page medicaid coverage page should have appropriate number of web components",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var _render3 = (0, _react2.render)( /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  definitions: formConfig.defaultDefinitions,\n  schema: schema,\n  uiSchema: uiSchema,\n  data: data,\n  formData: {}\n})),\n    container = _render3.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypesWebComponents)).to.have.lengthOf(expectedNumberOfFields);",
                  "err": {},
                  "uuid": "1dc7ff84-5ceb-452a-8c14-3e9742296f6f",
                  "parentUUID": "e1e4da14-3110-4d00-98f7-4ada0f5fa71c",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "1dc7ff84-5ceb-452a-8c14-3e9742296f6f"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 3,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "02c1faf2-c046-487d-9874-444397022f8b",
              "title": "medicaid coverage page",
              "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/chapters/03-health-and-employment-information/medicaidCoverage.unit.spec.jsx",
              "file": "/src/applications/pensions/tests/chapters/03-health-and-employment-information/medicaidCoverage.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should show the correct number of errors on submit for web components",
                  "fullTitle": "medicaid coverage pension page medicaid coverage page should show the correct number of errors on submit for web components",
                  "timedOut": false,
                  "duration": 8,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var _render4 = (0, _react2.render)( /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  definitions: formConfig.defaultDefinitions,\n  schema: schema,\n  uiSchema: uiSchema,\n  data: data,\n  formData: {}\n})),\n    container = _render4.container,\n    getByRole = _render4.getByRole;\ngetByRole('button', {\n  name: /submit/i\n}).click();\nvar nodes = Array.from(container.querySelectorAll(\"\".concat(expectedFieldTypesWebComponents, \", \").concat(wrapperWebComponents)));\nvar errors = nodes.filter(function (node) {\n  return node.error;\n});\n(0, _chai.expect)(errors).to.have.lengthOf(expectedNumberOfErrors);",
                  "err": {},
                  "uuid": "3d976b9c-3294-4051-b6e7-2628807d27be",
                  "parentUUID": "02c1faf2-c046-487d-9874-444397022f8b",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "3d976b9c-3294-4051-b6e7-2628807d27be"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 8,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "8a4f5393-ab58-4f80-9da2-c19ff19c6b48",
          "title": "pension applicant information page",
          "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/chapters/01-applicant-information/applicantInformation.unit.spec.jsx",
          "file": "/src/applications/pensions/tests/chapters/01-applicant-information/applicantInformation.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should not allow submit with errors",
              "fullTitle": "pension applicant information page should not allow submit with errors",
              "timedOut": false,
              "duration": 10,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); });",
              "err": {},
              "uuid": "1ec66069-38f2-4ec3-aacd-a532818e932b",
              "parentUUID": "8a4f5393-ab58-4f80-9da2-c19ff19c6b48",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should render with all alerts, fields and buttons",
              "fullTitle": "pension applicant information page should render with all alerts, fields and buttons",
              "timedOut": false,
              "duration": 9,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); });",
              "err": {},
              "uuid": "2dd65aeb-d3c0-4887-a238-53784d636cc9",
              "parentUUID": "8a4f5393-ab58-4f80-9da2-c19ff19c6b48",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should submit with no errors with all required fields filled in",
              "fullTitle": "pension applicant information page should submit with no errors with all required fields filled in",
              "timedOut": false,
              "duration": 25,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); });",
              "err": {},
              "uuid": "846c5747-6736-45e1-89e9-7dd0880b349d",
              "parentUUID": "8a4f5393-ab58-4f80-9da2-c19ff19c6b48",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [
            {
              "uuid": "4210ecf2-3154-4f32-bf48-65eb73fce411",
              "title": "isOver65",
              "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/chapters/01-applicant-information/applicantInformation.unit.spec.jsx",
              "file": "/src/applications/pensions/tests/chapters/01-applicant-information/applicantInformation.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return true if veteranDateOfBirth is over 65 years ago",
                  "fullTitle": "pension applicant information page isOver65 should return true if veteranDateOfBirth is over 65 years ago",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var over65 = (0, _applicantInformation.isOver65)({\n  veteranDateOfBirth: '1950-01-01'\n}, (0, _moment.default)('2020-01-01'));\n(0, _chai.expect)(over65).to.be.true;",
                  "err": {},
                  "uuid": "1da5d586-efd6-4169-8a4d-3059f47473d6",
                  "parentUUID": "4210ecf2-3154-4f32-bf48-65eb73fce411",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return undefined if veteranDateOfBirth is invalid or null",
                  "fullTitle": "pension applicant information page isOver65 should return undefined if veteranDateOfBirth is invalid or null",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var over65 = (0, _applicantInformation.isOver65)({\n  veteranDateOfBirth: null\n}, (0, _moment.default)('2020-01-01'));\n(0, _chai.expect)(over65).to.be.undefined;",
                  "err": {},
                  "uuid": "e7258612-4618-466f-bc94-edbff6cc90e8",
                  "parentUUID": "4210ecf2-3154-4f32-bf48-65eb73fce411",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return false if veteranDateOfBirth is under 65 years ago",
                  "fullTitle": "pension applicant information page isOver65 should return false if veteranDateOfBirth is under 65 years ago",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var over65 = (0, _applicantInformation.isOver65)({\n  veteranDateOfBirth: '2000-01-01'\n}, (0, _moment.default)('2020-01-01'));\n(0, _chai.expect)(over65).to.be.false;",
                  "err": {},
                  "uuid": "b2dac55d-d870-4b9a-96a6-d62f9eb3b20d",
                  "parentUUID": "4210ecf2-3154-4f32-bf48-65eb73fce411",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "1da5d586-efd6-4169-8a4d-3059f47473d6",
                "e7258612-4618-466f-bc94-edbff6cc90e8",
                "b2dac55d-d870-4b9a-96a6-d62f9eb3b20d"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "94a09361-6745-428c-9c7c-362603481705",
              "title": "setDefaultIsOver65",
              "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/chapters/01-applicant-information/applicantInformation.unit.spec.jsx",
              "file": "/src/applications/pensions/tests/chapters/01-applicant-information/applicantInformation.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should update isOver65 if veteranDateOfBirth changes",
                  "fullTitle": "pension applicant information page setDefaultIsOver65 should update isOver65 if veteranDateOfBirth changes",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var formData = (0, _applicantInformation.setDefaultIsOver65)({\n  veteranDateOfBirth: '2000-01-01',\n  isOver65: false\n}, {\n  veteranDateOfBirth: '1950-01-01',\n  isOver65: false\n}, (0, _moment.default)('2020-01-01'));\n(0, _chai.expect)(formData.isOver65).to.be.true;",
                  "err": {},
                  "uuid": "8553cd2b-7b39-4482-974c-e83312d7ed7a",
                  "parentUUID": "94a09361-6745-428c-9c7c-362603481705",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should change nothing if veteranDateOfBirth is unchanged",
                  "fullTitle": "pension applicant information page setDefaultIsOver65 should change nothing if veteranDateOfBirth is unchanged",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var formData = (0, _applicantInformation.setDefaultIsOver65)({\n  veteranDateOfBirth: '1950-01-01',\n  isOver65: false\n}, {\n  veteranDateOfBirth: '1950-01-01',\n  isOver65: false\n}, (0, _moment.default)('2020-01-01'));\n(0, _chai.expect)(formData.isOver65).to.be.false;",
                  "err": {},
                  "uuid": "0162a300-86be-4ed9-8726-ba1c2a5a345d",
                  "parentUUID": "94a09361-6745-428c-9c7c-362603481705",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "8553cd2b-7b39-4482-974c-e83312d7ed7a",
                "0162a300-86be-4ed9-8726-ba1c2a5a345d"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            }
          ],
          "passes": [
            "1ec66069-38f2-4ec3-aacd-a532818e932b",
            "2dd65aeb-d3c0-4887-a238-53784d636cc9",
            "846c5747-6736-45e1-89e9-7dd0880b349d"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 44,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "f6e9163a-bc3c-4509-858e-decf0b4582fc",
          "title": "Pensions FinancialDisclosureDescription",
          "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/components/FinancialDisclosureDescription.unit.spec.jsx",
          "file": "/src/applications/pensions/tests/components/FinancialDisclosureDescription.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should render dependent warning",
              "fullTitle": "Pensions FinancialDisclosureDescription should render dependent warning",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var pageKeys = ['dependentsNetWorth0'];\nvar viewedPages = new Set();\nvar tree = _skinDeep.default.shallowRender( /*#__PURE__*/_react.default.createElement(_FinancialDisclosureDescription.default, {\n  pageKeys: pageKeys,\n  viewedPages: viewedPages\n}));\n(0, _chai.expect)(tree.text()).to.contain('dependents you added');",
              "err": {},
              "uuid": "eaef29ba-1fd8-4860-a6a6-3b57af734853",
              "parentUUID": "f6e9163a-bc3c-4509-858e-decf0b4582fc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should render spouse warning",
              "fullTitle": "Pensions FinancialDisclosureDescription should render spouse warning",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var pageKeys = ['spouseNetWorth'];\nvar viewedPages = new Set();\nvar tree = _skinDeep.default.shallowRender( /*#__PURE__*/_react.default.createElement(_FinancialDisclosureDescription.default, {\n  pageKeys: pageKeys,\n  viewedPages: viewedPages\n}));\n(0, _chai.expect)(tree.text()).to.contain('spouse have any');",
              "err": {},
              "uuid": "56689c98-ae6d-4236-b12d-9c99e1369819",
              "parentUUID": "f6e9163a-bc3c-4509-858e-decf0b4582fc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should render no warning when there are no unviewed pages",
              "fullTitle": "Pensions FinancialDisclosureDescription should render no warning when there are no unviewed pages",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var pageKeys = ['dependentsNetWorth0'];\nvar viewedPages = new Set(['dependentsNetWorth0']);\nvar tree = _skinDeep.default.shallowRender( /*#__PURE__*/_react.default.createElement(_FinancialDisclosureDescription.default, {\n  pageKeys: pageKeys,\n  viewedPages: viewedPages\n}));\n(0, _chai.expect)(tree.text()).to.equal('');",
              "err": {},
              "uuid": "5d5f816c-ba4b-4ca2-be44-03af1cc36b5b",
              "parentUUID": "f6e9163a-bc3c-4509-858e-decf0b4582fc",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "eaef29ba-1fd8-4860-a6a6-3b57af734853",
            "56689c98-ae6d-4236-b12d-9c99e1369819",
            "5d5f816c-ba4b-4ca2-be44-03af1cc36b5b"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "aba85e5a-ab72-462f-9b98-b4377b3536c2",
          "title": "web component tests",
          "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/chapters/02-military-history/generalHistory.unit.spec.jsx",
          "file": "/src/applications/pensions/tests/chapters/02-military-history/generalHistory.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "57e2d4cc-70f3-4b70-84bf-12401e63bf66",
              "title": "military history page",
              "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/chapters/02-military-history/generalHistory.unit.spec.jsx",
              "file": "/src/applications/pensions/tests/chapters/02-military-history/generalHistory.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should show the correct number of errors on submit for web components",
                  "fullTitle": "web component tests military history page should show the correct number of errors on submit for web components",
                  "timedOut": false,
                  "duration": 14,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var _render4 = (0, _react2.render)( /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  definitions: formConfig.defaultDefinitions,\n  schema: schema,\n  uiSchema: uiSchema,\n  data: data,\n  formData: {}\n})),\n    container = _render4.container,\n    getByRole = _render4.getByRole;\ngetByRole('button', {\n  name: /submit/i\n}).click();\nvar nodes = Array.from(container.querySelectorAll(\"\".concat(expectedFieldTypesWebComponents, \", \").concat(wrapperWebComponents)));\nvar errors = nodes.filter(function (node) {\n  return node.error;\n});\n(0, _chai.expect)(errors).to.have.lengthOf(expectedNumberOfErrors);",
                  "err": {},
                  "uuid": "720e7f31-f826-486d-84e9-eab306bb7fd9",
                  "parentUUID": "57e2d4cc-70f3-4b70-84bf-12401e63bf66",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "720e7f31-f826-486d-84e9-eab306bb7fd9"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 14,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "968ab300-66e8-44c6-a590-f561bb72e270",
              "title": "military history page",
              "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/chapters/02-military-history/generalHistory.unit.spec.jsx",
              "file": "/src/applications/pensions/tests/chapters/02-military-history/generalHistory.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should have appropriate number of web components",
                  "fullTitle": "web component tests military history page should have appropriate number of web components",
                  "timedOut": false,
                  "duration": 4,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var _render3 = (0, _react2.render)( /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  definitions: formConfig.defaultDefinitions,\n  schema: schema,\n  uiSchema: uiSchema,\n  data: data,\n  formData: {}\n})),\n    container = _render3.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypesWebComponents)).to.have.lengthOf(expectedNumberOfFields);",
                  "err": {},
                  "uuid": "324225b9-2a31-49b6-a189-baa23ea3425d",
                  "parentUUID": "968ab300-66e8-44c6-a590-f561bb72e270",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "324225b9-2a31-49b6-a189-baa23ea3425d"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 4,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "5ea1dfb8-7181-4c0f-a52e-01bfdc642e7d",
          "title": "pension special monthly pension page",
          "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/chapters/03-health-and-employment-information/specialMonthlyPension.unit.spec.jsx",
          "file": "/src/applications/pensions/tests/chapters/03-health-and-employment-information/specialMonthlyPension.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "c6bd66e3-9f03-4af4-97bc-18ae8baef7a9",
              "title": "special monthly pension page",
              "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/chapters/03-health-and-employment-information/specialMonthlyPension.unit.spec.jsx",
              "file": "/src/applications/pensions/tests/chapters/03-health-and-employment-information/specialMonthlyPension.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should show the correct number of errors on submit for web components",
                  "fullTitle": "pension special monthly pension page special monthly pension page should show the correct number of errors on submit for web components",
                  "timedOut": false,
                  "duration": 11,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var _render4 = (0, _react2.render)( /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  definitions: formConfig.defaultDefinitions,\n  schema: schema,\n  uiSchema: uiSchema,\n  data: data,\n  formData: {}\n})),\n    container = _render4.container,\n    getByRole = _render4.getByRole;\ngetByRole('button', {\n  name: /submit/i\n}).click();\nvar nodes = Array.from(container.querySelectorAll(\"\".concat(expectedFieldTypesWebComponents, \", \").concat(wrapperWebComponents)));\nvar errors = nodes.filter(function (node) {\n  return node.error;\n});\n(0, _chai.expect)(errors).to.have.lengthOf(expectedNumberOfErrors);",
                  "err": {},
                  "uuid": "ed7c3641-30d9-4eb5-bb9c-fce4b32136c9",
                  "parentUUID": "c6bd66e3-9f03-4af4-97bc-18ae8baef7a9",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "ed7c3641-30d9-4eb5-bb9c-fce4b32136c9"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 11,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "f6f20f0d-9e43-47b9-a92b-d910d7d837ee",
              "title": "special monthly pension page",
              "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/chapters/03-health-and-employment-information/specialMonthlyPension.unit.spec.jsx",
              "file": "/src/applications/pensions/tests/chapters/03-health-and-employment-information/specialMonthlyPension.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should have appropriate number of web components",
                  "fullTitle": "pension special monthly pension page special monthly pension page should have appropriate number of web components",
                  "timedOut": false,
                  "duration": 8,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var _render3 = (0, _react2.render)( /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  definitions: formConfig.defaultDefinitions,\n  schema: schema,\n  uiSchema: uiSchema,\n  data: data,\n  formData: {}\n})),\n    container = _render3.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypesWebComponents)).to.have.lengthOf(expectedNumberOfFields);",
                  "err": {},
                  "uuid": "fcbabf10-e18f-418f-89b0-bb34f0a1d3dd",
                  "parentUUID": "f6f20f0d-9e43-47b9-a92b-d910d7d837ee",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "fcbabf10-e18f-418f-89b0-bb34f0a1d3dd"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 8,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "c8a36def-d05e-4c32-9072-a5ac525e8e2f",
          "title": "pension applicant information page",
          "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/chapters/02-military-history/generalHistory.unit.spec.jsx",
          "file": "/src/applications/pensions/tests/chapters/02-military-history/generalHistory.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should not submit with errors when Yes is selected",
              "fullTitle": "pension applicant information page should not submit with errors when Yes is selected",
              "timedOut": false,
              "duration": 18,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); });",
              "err": {},
              "uuid": "d96b7710-0585-4958-b0a6-29611ccb3f59",
              "parentUUID": "c8a36def-d05e-4c32-9072-a5ac525e8e2f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should reveal name fields",
              "fullTitle": "pension applicant information page should reveal name fields",
              "timedOut": false,
              "duration": 7,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); });",
              "err": {},
              "uuid": "98aa70a4-8972-4cab-98f9-5edb43e5e0f3",
              "parentUUID": "c8a36def-d05e-4c32-9072-a5ac525e8e2f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should submit with no errors when No is selected",
              "fullTitle": "pension applicant information page should submit with no errors when No is selected",
              "timedOut": false,
              "duration": 10,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); });",
              "err": {},
              "uuid": "f1ffcab7-ed21-4103-97b8-e00369d17f1f",
              "parentUUID": "c8a36def-d05e-4c32-9072-a5ac525e8e2f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "d96b7710-0585-4958-b0a6-29611ccb3f59",
            "98aa70a4-8972-4cab-98f9-5edb43e5e0f3",
            "f1ffcab7-ed21-4103-97b8-e00369d17f1f"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 35,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "e197d1bd-840f-46c5-85ea-e82df6f36199",
          "title": "ListItemView Component",
          "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/components/ListItemView.unit.spec.jsx",
          "file": "/src/applications/pensions/tests/components/ListItemView.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "renders without crashing",
              "fullTitle": "ListItemView Component renders without crashing",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "wrapper = (0, _enzyme.shallow)( /*#__PURE__*/_react.default.createElement(_ListItemView.default, {\n  title: \"Test title\"\n}));\n(0, _chai.expect)(wrapper.exists()).to.equal(true);\nwrapper.unmount();",
              "err": {},
              "uuid": "e349588f-89d3-4c9c-af7b-60f494853b4a",
              "parentUUID": "e197d1bd-840f-46c5-85ea-e82df6f36199",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "handles missing title gracefully",
              "fullTitle": "ListItemView Component handles missing title gracefully",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "wrapper = (0, _enzyme.shallow)( /*#__PURE__*/_react.default.createElement(_ListItemView.default, null));\n(0, _chai.expect)(wrapper.text()).to.equal('');\nwrapper.unmount();",
              "err": {},
              "uuid": "889b46b2-78f5-4a13-aebe-38a4c045cda4",
              "parentUUID": "e197d1bd-840f-46c5-85ea-e82df6f36199",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "displays the correct title",
              "fullTitle": "ListItemView Component displays the correct title",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var title = 'Software Engineer';\nwrapper = (0, _enzyme.shallow)( /*#__PURE__*/_react.default.createElement(_ListItemView.default, {\n  title: title\n}));\n(0, _chai.expect)(wrapper.text()).to.equal('Software Engineer');\nwrapper.unmount();",
              "err": {},
              "uuid": "043eccfc-ef82-46e3-be37-0a791311cc39",
              "parentUUID": "e197d1bd-840f-46c5-85ea-e82df6f36199",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "e349588f-89d3-4c9c-af7b-60f494853b4a",
            "889b46b2-78f5-4a13-aebe-38a4c045cda4",
            "043eccfc-ef82-46e3-be37-0a791311cc39"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "f743c29b-22c4-4a30-afc0-922a0461bce2",
          "title": "<WorkHistory />",
          "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/components/SectionField.unit.spec.jsx",
          "file": "/src/applications/pensions/tests/components/SectionField.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "renders with disabilities",
              "fullTitle": "<WorkHistory /> renders with disabilities",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var formData = {\n  'view:hasVisitedVaMc': false,\n  'view:workedBeforeDisabled': false,\n  'view:history': {\n    jobs: []\n  },\n  disabilities: []\n};\nvar _render4 = (0, _react2.render)( /*#__PURE__*/_react.default.createElement(_SectionField.WorkHistory, {\n  formData: formData\n})),\n    queryByText = _render4.queryByText;\n(0, _chai.expect)(queryByText('test-disability')).to.be.null;",
              "err": {},
              "uuid": "a926a339-cf11-4c2e-b653-4ebab39ac377",
              "parentUUID": "f743c29b-22c4-4a30-afc0-922a0461bce2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "renders with disabilities",
              "fullTitle": "<WorkHistory /> renders with disabilities",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var formData = {\n  'view:hasVisitedVaMc': true,\n  'view:workedBeforeDisabled': true,\n  'view:history': {\n    jobs: [{\n      name: 'test-job',\n      jobTitle: 'test-title',\n      address: {\n        street: '1234 Random street',\n        street2: 'Apt 2',\n        city: 'Nopesville',\n        state: 'VA',\n        postalCode: '12345',\n        country: 'USA'\n      },\n      daysMissed: '2',\n      annualEarnings: 60000,\n      dateRange: {\n        from: '10121999',\n        to: '10302000'\n      }\n    }]\n  },\n  disabilities: [{\n    name: 'test-disability'\n  }]\n};\nvar _render3 = (0, _react2.render)( /*#__PURE__*/_react.default.createElement(_SectionField.WorkHistory, {\n  formData: formData\n})),\n    queryByText = _render3.queryByText;\n(0, _chai.expect)(queryByText('test-disability')).to.not.be.null;",
              "err": {},
              "uuid": "bfdbaa07-2e88-4795-aeaf-ab0981f503cb",
              "parentUUID": "f743c29b-22c4-4a30-afc0-922a0461bce2",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a926a339-cf11-4c2e-b653-4ebab39ac377",
            "bfdbaa07-2e88-4795-aeaf-ab0981f503cb"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "ec5c1463-cd8c-45ae-a56b-b3a34d511335",
          "title": "bytesToKB",
          "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/components/SectionField.unit.spec.jsx",
          "file": "/src/applications/pensions/tests/components/SectionField.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "correctly converts bytes to KB",
              "fullTitle": "bytesToKB correctly converts bytes to KB",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var inputBytes = 2048;\nvar expectedKB = '2 KB';\nvar result = (0, _SectionField.bytesToKB)(inputBytes);\n(0, _chai.expect)(result).to.equal(expectedKB);",
              "err": {},
              "uuid": "3b192af2-ae19-407a-ae6e-581159817ff0",
              "parentUUID": "ec5c1463-cd8c-45ae-a56b-b3a34d511335",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "3b192af2-ae19-407a-ae6e-581159817ff0"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "86fb63dc-a5f5-4876-b56b-f8f3bef835a1",
          "title": "pension medical condition page",
          "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/chapters/03-health-and-employment-information/medicalCondition.unit.spec.jsx",
          "file": "/src/applications/pensions/tests/chapters/03-health-and-employment-information/medicalCondition.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "6b57f564-91fc-4df8-ae93-9dad43712a33",
              "title": "medical condition information page",
              "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/chapters/03-health-and-employment-information/medicalCondition.unit.spec.jsx",
              "file": "/src/applications/pensions/tests/chapters/03-health-and-employment-information/medicalCondition.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should show the correct number of errors on submit for web components",
                  "fullTitle": "pension medical condition page medical condition information page should show the correct number of errors on submit for web components",
                  "timedOut": false,
                  "duration": 9,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var _render4 = (0, _react2.render)( /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  definitions: formConfig.defaultDefinitions,\n  schema: schema,\n  uiSchema: uiSchema,\n  data: data,\n  formData: {}\n})),\n    container = _render4.container,\n    getByRole = _render4.getByRole;\ngetByRole('button', {\n  name: /submit/i\n}).click();\nvar nodes = Array.from(container.querySelectorAll(\"\".concat(expectedFieldTypesWebComponents, \", \").concat(wrapperWebComponents)));\nvar errors = nodes.filter(function (node) {\n  return node.error;\n});\n(0, _chai.expect)(errors).to.have.lengthOf(expectedNumberOfErrors);",
                  "err": {},
                  "uuid": "334f4021-8e5b-4182-bf32-4e65c9abf9b4",
                  "parentUUID": "6b57f564-91fc-4df8-ae93-9dad43712a33",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "334f4021-8e5b-4182-bf32-4e65c9abf9b4"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 9,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "35580d15-93b6-4efc-9c83-f3a0ffab6d9e",
              "title": "medical condition information page",
              "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/chapters/03-health-and-employment-information/medicalCondition.unit.spec.jsx",
              "file": "/src/applications/pensions/tests/chapters/03-health-and-employment-information/medicalCondition.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should have appropriate number of web components",
                  "fullTitle": "pension medical condition page medical condition information page should have appropriate number of web components",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var _render3 = (0, _react2.render)( /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  definitions: formConfig.defaultDefinitions,\n  schema: schema,\n  uiSchema: uiSchema,\n  data: data,\n  formData: {}\n})),\n    container = _render3.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypesWebComponents)).to.have.lengthOf(expectedNumberOfFields);",
                  "err": {},
                  "uuid": "69c8301c-12ed-4ae4-8257-eac37730f607",
                  "parentUUID": "35580d15-93b6-4efc-9c83-f3a0ffab6d9e",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "69c8301c-12ed-4ae4-8257-eac37730f607"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "42ebcc4f-66c2-4f84-9310-8faa02e81c6f",
          "title": "Pension: Financial information, receives income page",
          "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/chapters/05-financial-information/receivesIncome.unit.spec.jsx",
          "file": "/src/applications/pensions/tests/chapters/05-financial-information/receivesIncome.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "897bcf2c-a0bb-4cac-bb11-807c9b6c0146",
              "title": "Gross monthly income page",
              "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/chapters/05-financial-information/receivesIncome.unit.spec.jsx",
              "file": "/src/applications/pensions/tests/chapters/05-financial-information/receivesIncome.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should show the correct number of errors on submit for web components",
                  "fullTitle": "Pension: Financial information, receives income page Gross monthly income page should show the correct number of errors on submit for web components",
                  "timedOut": false,
                  "duration": 6,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var _render4 = (0, _react2.render)( /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  definitions: formConfig.defaultDefinitions,\n  schema: schema,\n  uiSchema: uiSchema,\n  data: data,\n  formData: {}\n})),\n    container = _render4.container,\n    getByRole = _render4.getByRole;\ngetByRole('button', {\n  name: /submit/i\n}).click();\nvar nodes = Array.from(container.querySelectorAll(\"\".concat(expectedFieldTypesWebComponents, \", \").concat(wrapperWebComponents)));\nvar errors = nodes.filter(function (node) {\n  return node.error;\n});\n(0, _chai.expect)(errors).to.have.lengthOf(expectedNumberOfErrors);",
                  "err": {},
                  "uuid": "1e3e94ce-a17a-483f-9c14-1abe79d25996",
                  "parentUUID": "897bcf2c-a0bb-4cac-bb11-807c9b6c0146",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "1e3e94ce-a17a-483f-9c14-1abe79d25996"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 6,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "e72f371c-5a50-421f-924b-9a63ddf64b6d",
              "title": "Gross monthly income page",
              "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/chapters/05-financial-information/receivesIncome.unit.spec.jsx",
              "file": "/src/applications/pensions/tests/chapters/05-financial-information/receivesIncome.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should have appropriate number of web components",
                  "fullTitle": "Pension: Financial information, receives income page Gross monthly income page should have appropriate number of web components",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var _render3 = (0, _react2.render)( /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  definitions: formConfig.defaultDefinitions,\n  schema: schema,\n  uiSchema: uiSchema,\n  data: data,\n  formData: {}\n})),\n    container = _render3.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypesWebComponents)).to.have.lengthOf(expectedNumberOfFields);",
                  "err": {},
                  "uuid": "ff9e0211-735b-47f0-ad9f-67ba61deca67",
                  "parentUUID": "e72f371c-5a50-421f-924b-9a63ddf64b6d",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "ff9e0211-735b-47f0-ad9f-67ba61deca67"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "a0011b17-9664-4f4f-82bb-ec7358accca1",
          "title": "Unauthenticated warning alert",
          "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/containers/UnauthenticatedWarningAlert.unit.spec.jsx",
          "file": "/src/applications/pensions/tests/containers/UnauthenticatedWarningAlert.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should call toggleLoginModal when the \"sign in\" link is clicked",
              "fullTitle": "Unauthenticated warning alert should call toggleLoginModal when the \"sign in\" link is clicked",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); });",
              "err": {},
              "uuid": "1e66b7cc-7c05-4e52-9913-8b49e26d42e9",
              "parentUUID": "a0011b17-9664-4f4f-82bb-ec7358accca1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should render `va-alert` with correct title",
              "fullTitle": "Unauthenticated warning alert should render `va-alert` with correct title",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _render2 = (0, _react2.render)( /*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n  store: mockStoreNotLoggedIn\n}, /*#__PURE__*/_react.default.createElement(_UnauthenticatedWarningAlert.default, null))),\n    container = _render2.container;\nvar selector = container.querySelector('va-alert');\n(0, _chai.expect)(selector).to.exist;\n(0, _chai.expect)(selector).to.contain.text('This application is 7 steps long and it contains several substeps per step. We advise you sign in to save your progress.Note: You can sign in after you start your application. But you’ll lose any information you already filled in.');",
              "err": {},
              "uuid": "08e46afc-887a-4253-9eb7-d8c0cec80afb",
              "parentUUID": "a0011b17-9664-4f4f-82bb-ec7358accca1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should not render if the user is logged in",
              "fullTitle": "Unauthenticated warning alert should not render if the user is logged in",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _render = (0, _react2.render)( /*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n  store: mockStoreLoggedIn\n}, /*#__PURE__*/_react.default.createElement(_UnauthenticatedWarningAlert.default, null))),\n    container = _render.container;\nvar selector = container.querySelector('va-alert');\n(0, _chai.expect)(selector).not.to.exist;",
              "err": {},
              "uuid": "83b85881-7737-49a6-8080-77aa6996b4c5",
              "parentUUID": "a0011b17-9664-4f4f-82bb-ec7358accca1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should render sign in link",
              "fullTitle": "Unauthenticated warning alert should render sign in link",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _render3 = (0, _react2.render)( /*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n  store: mockStoreNotLoggedIn\n}, /*#__PURE__*/_react.default.createElement(_UnauthenticatedWarningAlert.default, null))),\n    container = _render3.container;\nvar link = container.querySelector('a');\n(0, _chai.expect)(link).to.exist;\n(0, _chai.expect)(link).to.contain.text('sign in to save your progress');",
              "err": {},
              "uuid": "339cc458-83db-4a85-8391-a837885d1e6d",
              "parentUUID": "a0011b17-9664-4f4f-82bb-ec7358accca1",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "1e66b7cc-7c05-4e52-9913-8b49e26d42e9",
            "08e46afc-887a-4253-9eb7-d8c0cec80afb",
            "83b85881-7737-49a6-8080-77aa6996b4c5",
            "339cc458-83db-4a85-8391-a837885d1e6d"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "e7416ec8-07ea-4e72-9b3a-6d8b9b65cac4",
          "title": "<ConfirmationPage>",
          "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/containers/ConfirmationPage.unit.spec.jsx",
          "file": "/src/applications/pensions/tests/containers/ConfirmationPage.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should render",
              "fullTitle": "<ConfirmationPage> should render",
              "timedOut": false,
              "duration": 8,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var form = generateForm();\nvar tree = _skinDeep.default.shallowRender( /*#__PURE__*/_react.default.createElement(_ConfirmationPage.ConfirmationPage, {\n  form: form\n}));\n(0, _chai.expect)(tree.subTree('.confirmation-page-title').text()).to.equal('Claim submitted');\n(0, _chai.expect)(tree.everySubTree('span')[1].text().trim()).to.equal('for Jane Doe');\n(0, _chai.expect)(tree.everySubTree('li')[2].text()).to.contain('Western Region');\n(0, _chai.expect)(tree.everySubTree('p')[0].text()).to.contain('We process claims in the order we receive them');\n(0, _chai.expect)(tree.everySubTree('p')[1].text()).to.contain('We may contact you for more information or documents.');\n(0, _chai.expect)(tree.everySubTree('p')[3].text()).to.contain('VA Regional Office');",
              "err": {},
              "uuid": "5d18ce42-123d-481b-bcd7-2023ac9c325a",
              "parentUUID": "e7416ec8-07ea-4e72-9b3a-6d8b9b65cac4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should render with empty regionalOffice",
              "fullTitle": "<ConfirmationPage> should render with empty regionalOffice",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var form = generateForm({\n  hasRegionalOffice: false\n});\nvar tree = (0, _enzyme.shallow)( /*#__PURE__*/_react.default.createElement(_ConfirmationPage.ConfirmationPage, {\n  form: form\n}));\n(0, _chai.expect)(tree.find('address').children().length).to.eql(0);\ntree.unmount();",
              "err": {},
              "uuid": "f336d2b5-b525-498b-9cee-53b1aa8de5b4",
              "parentUUID": "e7416ec8-07ea-4e72-9b3a-6d8b9b65cac4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should render if no submission response",
              "fullTitle": "<ConfirmationPage> should render if no submission response",
              "timedOut": false,
              "duration": 3,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var form = generateForm({\n  hasResponse: false\n});\nvar tree = (0, _enzyme.shallow)( /*#__PURE__*/_react.default.createElement(_ConfirmationPage.ConfirmationPage, {\n  form: form\n}));\n(0, _chai.expect)(tree.find('.claim-list').children().length).to.eql(4);\ntree.unmount();",
              "err": {},
              "uuid": "7a7a1c5e-5032-4a72-8db7-98226985617f",
              "parentUUID": "e7416ec8-07ea-4e72-9b3a-6d8b9b65cac4",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "5d18ce42-123d-481b-bcd7-2023ac9c325a",
            "f336d2b5-b525-498b-9cee-53b1aa8de5b4",
            "7a7a1c5e-5032-4a72-8db7-98226985617f"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 13,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "c14c5611-9e5d-445d-bd1b-b38bb76b12f2",
          "title": "Pensions marriage info",
          "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/config/marriageInfo.unit.spec.jsx",
          "file": "/src/applications/pensions/tests/config/marriageInfo.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should submit with valid data",
              "fullTitle": "Pensions marriage info should submit with valid data",
              "timedOut": false,
              "duration": 12,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var onSubmit = _sinon.default.spy();\nvar form = _testUtils.default.renderIntoDocument( /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  schema: schema,\n  definitions: _form.default.defaultDefinitions,\n  onSubmit: onSubmit,\n  uiSchema: uiSchema\n}));\nvar formDOM = (0, _schemaformUtils.getFormDOM)(form);\nformDOM.fillData('#root_marriages', '1');\n(0, _schemaformUtils.submitForm)(form);\n(0, _chai.expect)(formDOM.querySelectorAll('.usa-input-error').length).to.equal(0);\n(0, _chai.expect)(onSubmit.called).to.be.true;",
              "err": {},
              "uuid": "99c2a8e4-2e5e-47cc-ae60-b758b081de45",
              "parentUUID": "c14c5611-9e5d-445d-bd1b-b38bb76b12f2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should not submit empty form",
              "fullTitle": "Pensions marriage info should not submit empty form",
              "timedOut": false,
              "duration": 3,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var onSubmit = _sinon.default.spy();\nvar form = _testUtils.default.renderIntoDocument( /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  schema: schema,\n  definitions: _form.default.defaultDefinitions,\n  onSubmit: onSubmit,\n  uiSchema: uiSchema\n}));\nvar formDOM = (0, _schemaformUtils.getFormDOM)(form);\n(0, _schemaformUtils.submitForm)(form);\n(0, _chai.expect)(formDOM.querySelectorAll('.usa-input-error').length).to.equal(1);\n(0, _chai.expect)(onSubmit.called).to.be.false;",
              "err": {},
              "uuid": "1314ba21-6100-4f22-990f-6df529266368",
              "parentUUID": "c14c5611-9e5d-445d-bd1b-b38bb76b12f2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should render marriage count",
              "fullTitle": "Pensions marriage info should render marriage count",
              "timedOut": false,
              "duration": 3,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var onSubmit = _sinon.default.spy();\nvar form = _testUtils.default.renderIntoDocument( /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  schema: schema,\n  onSubmit: onSubmit,\n  definitions: _form.default.defaultDefinitions,\n  uiSchema: uiSchema\n}));\nvar formDOM = (0, _schemaformUtils.getFormDOM)(form);\n(0, _schemaformUtils.submitForm)(form);\n(0, _chai.expect)(formDOM.querySelectorAll('input').length).to.equal(1);\n(0, _chai.expect)(formDOM.querySelectorAll('.usa-input-error').length).to.equal(1);\n(0, _chai.expect)(onSubmit.called).to.be.false;",
              "err": {},
              "uuid": "867555cb-47dc-4a1d-ba83-b67bfe4cf031",
              "parentUUID": "c14c5611-9e5d-445d-bd1b-b38bb76b12f2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should render",
              "fullTitle": "Pensions marriage info should render",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var form = _testUtils.default.renderIntoDocument( /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  schema: schema,\n  definitions: _form.default.defaultDefinitions,\n  uiSchema: uiSchema\n}));\nvar formDOM = (0, _schemaformUtils.getFormDOM)(form);\n(0, _chai.expect)(formDOM.querySelectorAll('input,select').length).to.equal(1);",
              "err": {},
              "uuid": "6fcbe51f-341f-4548-882b-d59394c4bbf0",
              "parentUUID": "c14c5611-9e5d-445d-bd1b-b38bb76b12f2",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "99c2a8e4-2e5e-47cc-ae60-b758b081de45",
            "1314ba21-6100-4f22-990f-6df529266368",
            "867555cb-47dc-4a1d-ba83-b67bfe4cf031",
            "6fcbe51f-341f-4548-882b-d59394c4bbf0"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 20,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "278e3c6a-4b8a-4c6d-98e9-e2ac1beda877",
          "title": "PensionsApp",
          "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/PensionsApp.unit.spec.jsx",
          "file": "/src/applications/pensions/tests/PensionsApp.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should show NoFormPage",
              "fullTitle": "PensionsApp should show NoFormPage",
              "timedOut": false,
              "duration": 4,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); });",
              "err": {},
              "uuid": "e2024023-de84-4a50-acd2-0b0bcba98b87",
              "parentUUID": "278e3c6a-4b8a-4c6d-98e9-e2ac1beda877",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should show VA loading indicator",
              "fullTitle": "PensionsApp should show VA loading indicator",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var mockStore = store();\nvar _render = (0, _react2.render)( /*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n  store: mockStore\n}, /*#__PURE__*/_react.default.createElement(_PensionsApp.default, {\n  location: pensionLocation\n}))),\n    container = _render.container;\n(0, _chai.expect)((0, _ui.$)('va-loading-indicator', container)).to.exist;",
              "err": {},
              "uuid": "8759937b-799f-4140-8cbc-a85ac12ab74f",
              "parentUUID": "278e3c6a-4b8a-4c6d-98e9-e2ac1beda877",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "e2024023-de84-4a50-acd2-0b0bcba98b87",
            "8759937b-799f-4140-8cbc-a85ac12ab74f"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 4,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "0e281720-cbd1-4d9d-b966-b6575aab6ea2",
          "title": "pension social security disability page",
          "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/chapters/03-health-and-employment-information/socialSecurityDisability.unit.spec.jsx",
          "file": "/src/applications/pensions/tests/chapters/03-health-and-employment-information/socialSecurityDisability.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "3cff5340-fea8-45b6-8d56-0f973f04c4e2",
              "title": "health history page",
              "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/chapters/03-health-and-employment-information/socialSecurityDisability.unit.spec.jsx",
              "file": "/src/applications/pensions/tests/chapters/03-health-and-employment-information/socialSecurityDisability.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should have appropriate number of web components",
                  "fullTitle": "pension social security disability page health history page should have appropriate number of web components",
                  "timedOut": false,
                  "duration": 5,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var _render3 = (0, _react2.render)( /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  definitions: formConfig.defaultDefinitions,\n  schema: schema,\n  uiSchema: uiSchema,\n  data: data,\n  formData: {}\n})),\n    container = _render3.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypesWebComponents)).to.have.lengthOf(expectedNumberOfFields);",
                  "err": {},
                  "uuid": "d0b736de-9f26-407e-9a8d-16d437be1780",
                  "parentUUID": "3cff5340-fea8-45b6-8d56-0f973f04c4e2",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "d0b736de-9f26-407e-9a8d-16d437be1780"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 5,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "db1d93ee-edcf-460b-8fd4-2293d1b6f218",
              "title": "health history page",
              "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/chapters/03-health-and-employment-information/socialSecurityDisability.unit.spec.jsx",
              "file": "/src/applications/pensions/tests/chapters/03-health-and-employment-information/socialSecurityDisability.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should show the correct number of errors on submit for web components",
                  "fullTitle": "pension social security disability page health history page should show the correct number of errors on submit for web components",
                  "timedOut": false,
                  "duration": 10,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var _render4 = (0, _react2.render)( /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  definitions: formConfig.defaultDefinitions,\n  schema: schema,\n  uiSchema: uiSchema,\n  data: data,\n  formData: {}\n})),\n    container = _render4.container,\n    getByRole = _render4.getByRole;\ngetByRole('button', {\n  name: /submit/i\n}).click();\nvar nodes = Array.from(container.querySelectorAll(\"\".concat(expectedFieldTypesWebComponents, \", \").concat(wrapperWebComponents)));\nvar errors = nodes.filter(function (node) {\n  return node.error;\n});\n(0, _chai.expect)(errors).to.have.lengthOf(expectedNumberOfErrors);",
                  "err": {},
                  "uuid": "09d23ef2-b14b-42cd-bd62-2575daad1a66",
                  "parentUUID": "db1d93ee-edcf-460b-8fd4-2293d1b6f218",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "09d23ef2-b14b-42cd-bd62-2575daad1a66"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 10,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "915aa93d-e960-4d5b-8f27-67d0d5b495c4",
          "title": "pension dependent children page",
          "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/chapters/04-household-information/dependentChildren.unit.spec.jsx",
          "file": "/src/applications/pensions/tests/chapters/04-household-information/dependentChildren.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should reveal additional fields",
              "fullTitle": "pension dependent children page should reveal additional fields",
              "timedOut": false,
              "duration": 13,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); });",
              "err": {},
              "uuid": "9741b76b-75f3-429c-84f1-463147485ecb",
              "parentUUID": "915aa93d-e960-4d5b-8f27-67d0d5b495c4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should submit with valid data",
              "fullTitle": "pension dependent children page should submit with valid data",
              "timedOut": false,
              "duration": 4,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); });",
              "err": {},
              "uuid": "f8b1b376-7466-4659-9091-146b756bcb7a",
              "parentUUID": "915aa93d-e960-4d5b-8f27-67d0d5b495c4",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "9741b76b-75f3-429c-84f1-463147485ecb",
            "f8b1b376-7466-4659-9091-146b756bcb7a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 17,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "581b6d4c-0fd8-4936-a43a-125d8f00abd2",
          "title": "NoFormPage",
          "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/NoFormPage.unit.spec.jsx",
          "file": "/src/applications/pensions/tests/NoFormPage.unit.spec.jsx",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"NoFormPage\"",
              "fullTitle": "NoFormPage \"before all\" hook in \"NoFormPage\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "server.listen();",
              "err": {},
              "uuid": "692c0db9-3ca3-468b-9869-df81b5d72458",
              "parentUUID": "581b6d4c-0fd8-4936-a43a-125d8f00abd2",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"NoFormPage\"",
              "fullTitle": "NoFormPage \"after all\" hook in \"NoFormPage\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "server.close();",
              "err": {},
              "uuid": "0f8abed0-e986-4e5f-b002-b9c500926fff",
              "parentUUID": "581b6d4c-0fd8-4936-a43a-125d8f00abd2",
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"after each\" hook in \"NoFormPage\"",
              "fullTitle": "NoFormPage \"after each\" hook in \"NoFormPage\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "server.resetHandlers();",
              "err": {},
              "uuid": "66b27077-9307-4c5d-ac36-0de46d8f4c6e",
              "parentUUID": "581b6d4c-0fd8-4936-a43a-125d8f00abd2",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "should render if NOT logged in",
              "fullTitle": "NoFormPage should render if NOT logged in",
              "timedOut": false,
              "duration": 8,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); });",
              "err": {},
              "uuid": "3ca48884-0ee8-4a53-8a42-1d76fb20de4c",
              "parentUUID": "581b6d4c-0fd8-4936-a43a-125d8f00abd2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should render if IS logged in && DOES have form data in progress",
              "fullTitle": "NoFormPage should render if IS logged in && DOES have form data in progress",
              "timedOut": false,
              "duration": 12,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); });",
              "err": {},
              "uuid": "e57a209b-7eb9-430f-9509-f3171bca38b0",
              "parentUUID": "581b6d4c-0fd8-4936-a43a-125d8f00abd2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should render if IS logged in && DOES NOT have form data in progress",
              "fullTitle": "NoFormPage should render if IS logged in && DOES NOT have form data in progress",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); });",
              "err": {},
              "uuid": "3be0abc3-d254-4f13-ac4f-cee1dd9bb155",
              "parentUUID": "581b6d4c-0fd8-4936-a43a-125d8f00abd2",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "3ca48884-0ee8-4a53-8a42-1d76fb20de4c",
            "e57a209b-7eb9-430f-9509-f3171bca38b0",
            "3be0abc3-d254-4f13-ac4f-cee1dd9bb155"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 22,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "2ec9cdcd-d829-4954-8375-6e1bec160497",
          "title": "convertDateFormat",
          "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/components/SectionField.unit.spec.jsx",
          "file": "/src/applications/pensions/tests/components/SectionField.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "returns undefined for null or undefined input",
              "fullTitle": "convertDateFormat returns undefined for null or undefined input",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, _chai.expect)((0, _SectionField.convertDateFormat)(null)).to.eql('');\n(0, _chai.expect)((0, _SectionField.convertDateFormat)()).to.eql('');",
              "err": {},
              "uuid": "1e4a7440-33a4-4177-aeda-1c9e183ff28a",
              "parentUUID": "2ec9cdcd-d829-4954-8375-6e1bec160497",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "correctly converts YYYY-MM-DD to MM/DD/YYYY",
              "fullTitle": "convertDateFormat correctly converts YYYY-MM-DD to MM/DD/YYYY",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var inputDate = '2023-10-19';\nvar expectedDate = '10/19/2023';\nvar result = (0, _SectionField.convertDateFormat)(inputDate);\n(0, _chai.expect)(result).to.equal(expectedDate);",
              "err": {},
              "uuid": "5837c610-fa36-45b0-aa79-a15d53933c68",
              "parentUUID": "2ec9cdcd-d829-4954-8375-6e1bec160497",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "1e4a7440-33a4-4177-aeda-1c9e183ff28a",
            "5837c610-fa36-45b0-aa79-a15d53933c68"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "be12f83a-ce33-4196-b8ec-775fb46c70f1",
          "title": "Supporting documents pension page",
          "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/chapters/06-additional-information/supportingDocuments.unit.spec.jsx",
          "file": "/src/applications/pensions/tests/chapters/06-additional-information/supportingDocuments.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "79781dc5-bdd1-421f-b1d1-2fb9911203d4",
              "title": "Supporting documents page",
              "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/chapters/06-additional-information/supportingDocuments.unit.spec.jsx",
              "file": "/src/applications/pensions/tests/chapters/06-additional-information/supportingDocuments.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should have appropriate number of fields",
                  "fullTitle": "Supporting documents pension page Supporting documents page should have appropriate number of fields",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var _render = (0, _react2.render)( /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  definitions: formConfig.defaultDefinitions,\n  schema: schema,\n  uiSchema: uiSchema,\n  data: data,\n  formData: {}\n})),\n    container = _render.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypes)).to.have.lengthOf(expectedNumberOfFields);",
                  "err": {},
                  "uuid": "118dbd4f-3fe1-47fb-9c77-9e9455506697",
                  "parentUUID": "79781dc5-bdd1-421f-b1d1-2fb9911203d4",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "118dbd4f-3fe1-47fb-9c77-9e9455506697"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "61102be0-e955-49e1-84ff-5a58783a762b",
          "title": "Pensions directDeposit",
          "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/config/directDeposit.unit.spec.jsx",
          "file": "/src/applications/pensions/tests/config/directDeposit.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should show error on bad routing number",
              "fullTitle": "Pensions directDeposit should show error on bad routing number",
              "timedOut": false,
              "duration": 10,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var form = _testUtils.default.renderIntoDocument( /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  schema: schema,\n  data: {},\n  uiSchema: uiSchema\n}));\nvar formDOM = (0, _schemaformUtils.getFormDOM)(form);\nvar routingNumber = formDOM.querySelector('#root_bankAccount_routingNumber');\nformDOM.fillData('#root_bankAccount_routingNumber', '01234567');\n_testUtils.default.Simulate.blur(routingNumber);\n(0, _chai.expect)(formDOM.querySelector('.usa-input-error #root_bankAccount_routingNumber')).not.to.be.null;",
              "err": {},
              "uuid": "e8ea3821-4cac-473f-8abc-e9a33c61eb88",
              "parentUUID": "61102be0-e955-49e1-84ff-5a58783a762b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should submit with valid data",
              "fullTitle": "Pensions directDeposit should submit with valid data",
              "timedOut": false,
              "duration": 12,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var onSubmit = _sinon.default.spy();\nvar form = _testUtils.default.renderIntoDocument( /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  schema: schema,\n  data: {},\n  onSubmit: onSubmit,\n  uiSchema: uiSchema\n}));\nvar formDOM = (0, _schemaformUtils.getFormDOM)(form);\nformDOM.fillData('#root_bankAccount_accountType_0', 'checking');\nformDOM.fillData('#root_bankAccount_accountNumber', '1234');\nformDOM.fillData('#root_bankAccount_routingNumber', '122105155');\nformDOM.submitForm(form);\n(0, _chai.expect)(formDOM.querySelectorAll('.usa-input-error').length).to.equal(0);\n(0, _chai.expect)(onSubmit.called).to.be.true;",
              "err": {},
              "uuid": "3bb6a9e6-81de-401e-a0e7-c4cf14148be8",
              "parentUUID": "61102be0-e955-49e1-84ff-5a58783a762b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should render",
              "fullTitle": "Pensions directDeposit should render",
              "timedOut": false,
              "duration": 4,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var form = _testUtils.default.renderIntoDocument( /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  schema: schema,\n  data: {},\n  uiSchema: uiSchema\n}));\nvar formDOM = (0, _schemaformUtils.getFormDOM)(form);\n(0, _chai.expect)(formDOM.querySelectorAll('input').length).to.equal(6);",
              "err": {},
              "uuid": "45c407e2-227f-46cd-88c4-76f0a596562f",
              "parentUUID": "61102be0-e955-49e1-84ff-5a58783a762b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should render stop message",
              "fullTitle": "Pensions directDeposit should render stop message",
              "timedOut": false,
              "duration": 6,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var form = _testUtils.default.renderIntoDocument( /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  schema: schema,\n  data: {},\n  uiSchema: uiSchema\n}));\nvar formDOM = (0, _schemaformUtils.getFormDOM)(form);\nformDOM.setCheckbox('#root_view\\\\:noDirectDeposit', true);\n(0, _chai.expect)(formDOM.querySelector('.pension-dd-warning')).to.not.be.null;\n(0, _chai.expect)(formDOM.querySelectorAll('input').length).to.equal(1);",
              "err": {},
              "uuid": "4c80afdc-ae39-40eb-b127-5dd8deb7ce24",
              "parentUUID": "61102be0-e955-49e1-84ff-5a58783a762b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should require bank account fields",
              "fullTitle": "Pensions directDeposit should require bank account fields",
              "timedOut": false,
              "duration": 6,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var form = _testUtils.default.renderIntoDocument( /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  schema: schema,\n  data: {},\n  uiSchema: uiSchema\n}));\nvar formDOM = (0, _schemaformUtils.getFormDOM)(form);\n(0, _chai.expect)(formDOM.querySelectorAll('input').length).to.equal(6);\nformDOM.submitForm(form);\n(0, _chai.expect)(formDOM.querySelectorAll('.usa-input-error').length).to.equal(3);",
              "err": {},
              "uuid": "2cd4d33c-d675-41f8-a4f5-152bf75d6c0b",
              "parentUUID": "61102be0-e955-49e1-84ff-5a58783a762b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "e8ea3821-4cac-473f-8abc-e9a33c61eb88",
            "3bb6a9e6-81de-401e-a0e7-c4cf14148be8",
            "45c407e2-227f-46cd-88c4-76f0a596562f",
            "4c80afdc-ae39-40eb-b127-5dd8deb7ce24",
            "2cd4d33c-d675-41f8-a4f5-152bf75d6c0b"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 38,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "fee3c8f5-7aaa-4d1e-ab75-2a8987f4f0d0",
          "title": "Pensions isUnder65",
          "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/config/form.unit.spec.jsx",
          "file": "/src/applications/pensions/tests/config/form.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should return true if veteran is less than 65 according to date of birth",
              "fullTitle": "Pensions isUnder65 should return true if veteran is less than 65 according to date of birth",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var under65 = (0, _form.isUnder65)({\n  veteranDateOfBirth: '2000-01-01',\n  isOver65: true\n}, (0, _moment.default)('2020-01-01'));\n(0, _chai.expect)(under65).to.be.true;",
              "err": {},
              "uuid": "fac3b584-7742-41e1-9c7b-61f8d25597f6",
              "parentUUID": "fee3c8f5-7aaa-4d1e-ab75-2a8987f4f0d0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return false if date of birth and isOver65 indicate veteran is over 65",
              "fullTitle": "Pensions isUnder65 should return false if date of birth and isOver65 indicate veteran is over 65",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var under65 = (0, _form.isUnder65)({\n  veteranDateOfBirth: '1950-01-01',\n  isOver65: true\n}, (0, _moment.default)('2020-01-01'));\n(0, _chai.expect)(under65).to.be.false;",
              "err": {},
              "uuid": "f135bc7b-c703-4b1a-8335-eebb8c54fbba",
              "parentUUID": "fee3c8f5-7aaa-4d1e-ab75-2a8987f4f0d0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return true if veteran is less than 65 according to isOver65",
              "fullTitle": "Pensions isUnder65 should return true if veteran is less than 65 according to isOver65",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var under65 = (0, _form.isUnder65)({\n  veteranDateOfBirth: '1950-01-01',\n  isOver65: false\n}, (0, _moment.default)('2020-01-01'));\n(0, _chai.expect)(under65).to.be.true;",
              "err": {},
              "uuid": "db668849-e996-4380-84ae-e6c8b08b1550",
              "parentUUID": "fee3c8f5-7aaa-4d1e-ab75-2a8987f4f0d0",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "fac3b584-7742-41e1-9c7b-61f8d25597f6",
            "f135bc7b-c703-4b1a-8335-eebb8c54fbba",
            "db668849-e996-4380-84ae-e6c8b08b1550"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "860e4e82-9dca-4514-b008-7595ceef8ecd",
          "title": "marital status page",
          "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/helpers.unit.spec.jsx",
          "file": "/src/applications/pensions/tests/helpers.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should have appropriate number of web components",
              "fullTitle": "marital status page should have appropriate number of web components",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _render3 = (0, _react2.render)( /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  definitions: formConfig.defaultDefinitions,\n  schema: schema,\n  uiSchema: uiSchema,\n  data: data,\n  formData: {}\n})),\n    container = _render3.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypesWebComponents)).to.have.lengthOf(expectedNumberOfFields);",
              "err": {},
              "uuid": "83b0a426-27d8-4ee2-a9b9-ebaa5b957bd6",
              "parentUUID": "860e4e82-9dca-4514-b008-7595ceef8ecd",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "83b0a426-27d8-4ee2-a9b9-ebaa5b957bd6"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "6baf0a9c-2ead-462b-9896-983700097847",
          "title": "marital status page",
          "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/helpers.unit.spec.jsx",
          "file": "/src/applications/pensions/tests/helpers.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should show the correct number of errors on submit for web components",
              "fullTitle": "marital status page should show the correct number of errors on submit for web components",
              "timedOut": false,
              "duration": 9,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _render4 = (0, _react2.render)( /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  definitions: formConfig.defaultDefinitions,\n  schema: schema,\n  uiSchema: uiSchema,\n  data: data,\n  formData: {}\n})),\n    container = _render4.container,\n    getByRole = _render4.getByRole;\ngetByRole('button', {\n  name: /submit/i\n}).click();\nvar nodes = Array.from(container.querySelectorAll(\"\".concat(expectedFieldTypesWebComponents, \", \").concat(wrapperWebComponents)));\nvar errors = nodes.filter(function (node) {\n  return node.error;\n});\n(0, _chai.expect)(errors).to.have.lengthOf(expectedNumberOfErrors);",
              "err": {},
              "uuid": "4ffe7c49-d10e-4828-b929-be5893080021",
              "parentUUID": "6baf0a9c-2ead-462b-9896-983700097847",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "4ffe7c49-d10e-4828-b929-be5893080021"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 9,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "9077948d-c85b-4e70-b81a-824ed5b29c23",
          "title": "medical centers page",
          "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/helpers.unit.spec.jsx",
          "file": "/src/applications/pensions/tests/helpers.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should have appropriate number of web components",
              "fullTitle": "medical centers page should have appropriate number of web components",
              "timedOut": false,
              "duration": 4,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _render3 = (0, _react2.render)( /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  definitions: formConfig.defaultDefinitions,\n  schema: schema,\n  uiSchema: uiSchema,\n  data: data,\n  formData: {}\n})),\n    container = _render3.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypesWebComponents)).to.have.lengthOf(expectedNumberOfFields);",
              "err": {},
              "uuid": "e95110c0-a6a8-472c-9508-3dae51cf609b",
              "parentUUID": "9077948d-c85b-4e70-b81a-824ed5b29c23",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "e95110c0-a6a8-472c-9508-3dae51cf609b"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 4,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "bfd1797c-3d23-4693-b9cc-4fabd2e251e7",
          "title": "medical centers page",
          "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/helpers.unit.spec.jsx",
          "file": "/src/applications/pensions/tests/helpers.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should show the correct number of errors on submit for web components",
              "fullTitle": "medical centers page should show the correct number of errors on submit for web components",
              "timedOut": false,
              "duration": 13,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _render4 = (0, _react2.render)( /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  definitions: formConfig.defaultDefinitions,\n  schema: schema,\n  uiSchema: uiSchema,\n  data: data,\n  formData: {}\n})),\n    container = _render4.container,\n    getByRole = _render4.getByRole;\ngetByRole('button', {\n  name: /submit/i\n}).click();\nvar nodes = Array.from(container.querySelectorAll(\"\".concat(expectedFieldTypesWebComponents, \", \").concat(wrapperWebComponents)));\nvar errors = nodes.filter(function (node) {\n  return node.error;\n});\n(0, _chai.expect)(errors).to.have.lengthOf(expectedNumberOfErrors);",
              "err": {},
              "uuid": "f2b58b2d-0b15-4330-ad8f-9139a23734d3",
              "parentUUID": "bfd1797c-3d23-4693-b9cc-4fabd2e251e7",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f2b58b2d-0b15-4330-ad8f-9139a23734d3"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 13,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "dd15220f-5093-4cc0-960b-c284e63284fc",
          "title": "reason for separation page",
          "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/helpers.unit.spec.jsx",
          "file": "/src/applications/pensions/tests/helpers.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should have appropriate number of web components",
              "fullTitle": "reason for separation page should have appropriate number of web components",
              "timedOut": false,
              "duration": 3,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _render3 = (0, _react2.render)( /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  definitions: formConfig.defaultDefinitions,\n  schema: schema,\n  uiSchema: uiSchema,\n  data: data,\n  formData: {}\n})),\n    container = _render3.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypesWebComponents)).to.have.lengthOf(expectedNumberOfFields);",
              "err": {},
              "uuid": "5e81abe5-630d-45a5-aca1-26352bcae0c4",
              "parentUUID": "dd15220f-5093-4cc0-960b-c284e63284fc",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "5e81abe5-630d-45a5-aca1-26352bcae0c4"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "ecc90a68-fb8f-45d5-a8c7-00bd20166b43",
          "title": "reason for separation page",
          "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/helpers.unit.spec.jsx",
          "file": "/src/applications/pensions/tests/helpers.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should show the correct number of errors on submit for web components",
              "fullTitle": "reason for separation page should show the correct number of errors on submit for web components",
              "timedOut": false,
              "duration": 7,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _render4 = (0, _react2.render)( /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  definitions: formConfig.defaultDefinitions,\n  schema: schema,\n  uiSchema: uiSchema,\n  data: data,\n  formData: {}\n})),\n    container = _render4.container,\n    getByRole = _render4.getByRole;\ngetByRole('button', {\n  name: /submit/i\n}).click();\nvar nodes = Array.from(container.querySelectorAll(\"\".concat(expectedFieldTypesWebComponents, \", \").concat(wrapperWebComponents)));\nvar errors = nodes.filter(function (node) {\n  return node.error;\n});\n(0, _chai.expect)(errors).to.have.lengthOf(expectedNumberOfErrors);",
              "err": {},
              "uuid": "9746b4f0-a76f-4ffa-b11c-a5ace72e9474",
              "parentUUID": "ecc90a68-fb8f-45d5-a8c7-00bd20166b43",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "9746b4f0-a76f-4ffa-b11c-a5ace72e9474"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 7,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "3fb8574d-cd82-4379-8265-9a1d10baccef",
          "title": "current spouse marital history page",
          "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/helpers.unit.spec.jsx",
          "file": "/src/applications/pensions/tests/helpers.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should have appropriate number of web components",
              "fullTitle": "current spouse marital history page should have appropriate number of web components",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _render3 = (0, _react2.render)( /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  definitions: formConfig.defaultDefinitions,\n  schema: schema,\n  uiSchema: uiSchema,\n  data: data,\n  formData: {}\n})),\n    container = _render3.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypesWebComponents)).to.have.lengthOf(expectedNumberOfFields);",
              "err": {},
              "uuid": "9a11f9e9-a93a-490d-ab97-1fd75ec7de73",
              "parentUUID": "3fb8574d-cd82-4379-8265-9a1d10baccef",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "9a11f9e9-a93a-490d-ab97-1fd75ec7de73"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "8f1cdc0e-8dea-4b16-a6fe-7ed7dce17649",
          "title": "current spouse marital history page",
          "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/helpers.unit.spec.jsx",
          "file": "/src/applications/pensions/tests/helpers.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should show the correct number of errors on submit for web components",
              "fullTitle": "current spouse marital history page should show the correct number of errors on submit for web components",
              "timedOut": false,
              "duration": 6,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _render4 = (0, _react2.render)( /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  definitions: formConfig.defaultDefinitions,\n  schema: schema,\n  uiSchema: uiSchema,\n  data: data,\n  formData: {}\n})),\n    container = _render4.container,\n    getByRole = _render4.getByRole;\ngetByRole('button', {\n  name: /submit/i\n}).click();\nvar nodes = Array.from(container.querySelectorAll(\"\".concat(expectedFieldTypesWebComponents, \", \").concat(wrapperWebComponents)));\nvar errors = nodes.filter(function (node) {\n  return node.error;\n});\n(0, _chai.expect)(errors).to.have.lengthOf(expectedNumberOfErrors);",
              "err": {},
              "uuid": "1e1e3d25-f34b-4ff0-aeec-b38bf579a602",
              "parentUUID": "8f1cdc0e-8dea-4b16-a6fe-7ed7dce17649",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "1e1e3d25-f34b-4ff0-aeec-b38bf579a602"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 6,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "9448644f-27eb-4ef0-aa82-4776a292a77d",
          "title": "treatment history page",
          "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/helpers.unit.spec.jsx",
          "file": "/src/applications/pensions/tests/helpers.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should have appropriate number of web components",
              "fullTitle": "treatment history page should have appropriate number of web components",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _render3 = (0, _react2.render)( /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  definitions: formConfig.defaultDefinitions,\n  schema: schema,\n  uiSchema: uiSchema,\n  data: data,\n  formData: {}\n})),\n    container = _render3.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypesWebComponents)).to.have.lengthOf(expectedNumberOfFields);",
              "err": {},
              "uuid": "a1032d3d-f91c-4f31-b5a0-73702df6e2df",
              "parentUUID": "9448644f-27eb-4ef0-aa82-4776a292a77d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a1032d3d-f91c-4f31-b5a0-73702df6e2df"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "42d5a0c5-ef53-4122-b941-0335a566e2d2",
          "title": "treatment history page",
          "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/helpers.unit.spec.jsx",
          "file": "/src/applications/pensions/tests/helpers.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should show the correct number of errors on submit for web components",
              "fullTitle": "treatment history page should show the correct number of errors on submit for web components",
              "timedOut": false,
              "duration": 5,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _render4 = (0, _react2.render)( /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  definitions: formConfig.defaultDefinitions,\n  schema: schema,\n  uiSchema: uiSchema,\n  data: data,\n  formData: {}\n})),\n    container = _render4.container,\n    getByRole = _render4.getByRole;\ngetByRole('button', {\n  name: /submit/i\n}).click();\nvar nodes = Array.from(container.querySelectorAll(\"\".concat(expectedFieldTypesWebComponents, \", \").concat(wrapperWebComponents)));\nvar errors = nodes.filter(function (node) {\n  return node.error;\n});\n(0, _chai.expect)(errors).to.have.lengthOf(expectedNumberOfErrors);",
              "err": {},
              "uuid": "8e496bf9-2770-41e9-93fe-d10ff426e307",
              "parentUUID": "42d5a0c5-ef53-4122-b941-0335a566e2d2",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "8e496bf9-2770-41e9-93fe-d10ff426e307"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 5,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "9e60933a-b344-4abc-a82f-9df7e072945f",
          "title": "current spouse full name page",
          "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/helpers.unit.spec.jsx",
          "file": "/src/applications/pensions/tests/helpers.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should have appropriate number of web components",
              "fullTitle": "current spouse full name page should have appropriate number of web components",
              "timedOut": false,
              "duration": 4,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _render3 = (0, _react2.render)( /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  definitions: formConfig.defaultDefinitions,\n  schema: schema,\n  uiSchema: uiSchema,\n  data: data,\n  formData: {}\n})),\n    container = _render3.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypesWebComponents)).to.have.lengthOf(expectedNumberOfFields);",
              "err": {},
              "uuid": "2d760d62-a436-4e78-8118-cc8f99f7bb45",
              "parentUUID": "9e60933a-b344-4abc-a82f-9df7e072945f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "2d760d62-a436-4e78-8118-cc8f99f7bb45"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 4,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "13b9f820-ee71-40f3-aa96-14d368bf7913",
          "title": "current spouse full name page",
          "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/helpers.unit.spec.jsx",
          "file": "/src/applications/pensions/tests/helpers.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should show the correct number of errors on submit for web components",
              "fullTitle": "current spouse full name page should show the correct number of errors on submit for web components",
              "timedOut": false,
              "duration": 11,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _render4 = (0, _react2.render)( /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  definitions: formConfig.defaultDefinitions,\n  schema: schema,\n  uiSchema: uiSchema,\n  data: data,\n  formData: {}\n})),\n    container = _render4.container,\n    getByRole = _render4.getByRole;\ngetByRole('button', {\n  name: /submit/i\n}).click();\nvar nodes = Array.from(container.querySelectorAll(\"\".concat(expectedFieldTypesWebComponents, \", \").concat(wrapperWebComponents)));\nvar errors = nodes.filter(function (node) {\n  return node.error;\n});\n(0, _chai.expect)(errors).to.have.lengthOf(expectedNumberOfErrors);",
              "err": {},
              "uuid": "bd2b6603-4c05-472c-a85e-b3025eda3d68",
              "parentUUID": "13b9f820-ee71-40f3-aa96-14d368bf7913",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "bd2b6603-4c05-472c-a85e-b3025eda3d68"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 11,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 10000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "undefined_2024-01-03T153210220Z",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "min",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "id": "default",
        "consoleReporter": "min",
        "reportDir": "mocha/results",
        "reportFilename": "undefined_2024-01-03T153210220Z",
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}