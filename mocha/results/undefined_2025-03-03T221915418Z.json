{
  "stats": {
    "suites": 222,
    "tests": 338,
    "passes": 333,
    "pending": 5,
    "failures": 0,
    "start": "2025-03-03T22:19:15.521Z",
    "end": "2025-03-03T22:19:21.801Z",
    "duration": 6280,
    "testsRegistered": 338,
    "passPercent": 100,
    "pendingPercent": 1.4792899408284024,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "02a7f83c-cd16-44e3-b619-5a706eef576d",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [
        {
          "title": "\"before each\" hook: beforeEach in \"{root}\"",
          "fullTitle": "\"before each\" hook: beforeEach in \"{root}\"",
          "timedOut": false,
          "duration": 2,
          "state": null,
          "speed": null,
          "pass": false,
          "fail": false,
          "pending": false,
          "context": null,
          "code": "cov_5fzq6lsur().f[20]++;\ncov_5fzq6lsur().s[70]++;\nsetupJSDom();\ncov_5fzq6lsur().s[71]++;\nresetFetch();\ncov_5fzq6lsur().s[72]++;\ncleanupStorage();\ncov_5fzq6lsur().s[73]++;\nif (isStressTest == 'false') {\n  cov_5fzq6lsur().b[12][0]++;\n  cov_5fzq6lsur().s[74]++;\n  checkAllowList(this);\n} else {\n  cov_5fzq6lsur().b[12][1]++;\n}\ncov_5fzq6lsur().s[75]++;\nif ((cov_5fzq6lsur().b[14][0]++, process.env.CI) || (cov_5fzq6lsur().b[14][1]++, ['trace', 'debug'].includes(process.env.LOG_LEVEL))) {\n  cov_5fzq6lsur().b[13][0]++;\n  cov_5fzq6lsur().s[76]++;\n  console.log('running: ', this.currentTest.file.slice(this.currentTest.file.indexOf('src')));\n} else {\n  cov_5fzq6lsur().b[13][1]++;\n}",
          "err": {},
          "uuid": "3dfd83f6-0d15-4041-b8cd-440626581e02",
          "parentUUID": "02a7f83c-cd16-44e3-b619-5a706eef576d",
          "isHook": true,
          "skipped": false
        }
      ],
      "afterHooks": [
        {
          "title": "\"after each\" hook: afterEach in \"{root}\"",
          "fullTitle": "\"after each\" hook: afterEach in \"{root}\"",
          "timedOut": false,
          "duration": 0,
          "state": null,
          "speed": null,
          "pass": false,
          "fail": false,
          "pending": false,
          "context": null,
          "code": "cov_5fzq6lsur().f[21]++;\ncov_5fzq6lsur().s[77]++;\ncleanupStorage();\ncov_5fzq6lsur().s[78]++;\nflushPromises();",
          "err": {},
          "uuid": "875b9e28-f7b3-4c3d-96be-71400d8b05fa",
          "parentUUID": "02a7f83c-cd16-44e3-b619-5a706eef576d",
          "isHook": true,
          "skipped": false
        },
        {
          "title": "\"after each\" hook in \"{root}\"",
          "fullTitle": "\"after each\" hook in \"{root}\"",
          "timedOut": false,
          "duration": 0,
          "state": null,
          "speed": null,
          "pass": false,
          "fail": false,
          "pending": false,
          "context": null,
          "code": "(0, _pure.cleanup)();",
          "err": {},
          "uuid": "c03a91ab-2489-49a9-a74f-dc6112e50467",
          "parentUUID": "02a7f83c-cd16-44e3-b619-5a706eef576d",
          "isHook": true,
          "skipped": false
        }
      ],
      "tests": [],
      "suites": [
        {
          "uuid": "d5de636a-e1f0-448e-abcf-e9b8276e7dc7",
          "title": "fetchRepresentatives",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/representative-appoint/tests/api/fetchRepresentatives.unit.spec.js",
          "file": "/src/applications/representative-appoint/tests/api/fetchRepresentatives.unit.spec.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"fetchRepresentatives\"",
              "fullTitle": "fetchRepresentatives \"before each\" hook in \"fetchRepresentatives\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "sandbox = _sinon.default.createSandbox();\nglobal.fetch = sandbox.stub(global, 'fetch');",
              "err": {},
              "uuid": "e6ed3d6f-634d-4746-b18f-6b0a6fad818b",
              "parentUUID": "d5de636a-e1f0-448e-abcf-e9b8276e7dc7",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after each\" hook in \"fetchRepresentatives\"",
              "fullTitle": "fetchRepresentatives \"after each\" hook in \"fetchRepresentatives\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "sandbox.restore();",
              "err": {},
              "uuid": "0e855992-f56f-4557-a55a-39e7a9d176c6",
              "parentUUID": "d5de636a-e1f0-448e-abcf-e9b8276e7dc7",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "should call the api with the query param",
              "fullTitle": "fetchRepresentatives should call the api with the query param",
              "timedOut": false,
              "duration": 4,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
              "err": {},
              "uuid": "37c4538c-6a7d-4d1f-828b-8d6419cad681",
              "parentUUID": "d5de636a-e1f0-448e-abcf-e9b8276e7dc7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "returns a list of representatives",
              "fullTitle": "fetchRepresentatives returns a list of representatives",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
              "err": {},
              "uuid": "349b9b07-16d8-4786-a4ab-8e0903d0fc26",
              "parentUUID": "d5de636a-e1f0-448e-abcf-e9b8276e7dc7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should throw an error if the response is not ok",
              "fullTitle": "fetchRepresentatives should throw an error if the response is not ok",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
              "err": {},
              "uuid": "34a3a351-4039-4dbe-a75a-9553db9c7863",
              "parentUUID": "d5de636a-e1f0-448e-abcf-e9b8276e7dc7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should handle errors",
              "fullTitle": "fetchRepresentatives should handle errors",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
              "err": {},
              "uuid": "cc999ee2-9e36-4d23-998e-e5ded1b902f9",
              "parentUUID": "d5de636a-e1f0-448e-abcf-e9b8276e7dc7",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "37c4538c-6a7d-4d1f-828b-8d6419cad681",
            "349b9b07-16d8-4786-a4ab-8e0903d0fc26",
            "34a3a351-4039-4dbe-a75a-9553db9c7863",
            "cc999ee2-9e36-4d23-998e-e5ded1b902f9"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 6,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "ded6452e-948c-4193-b8e7-e003e8ebf61f",
          "title": "fetchRepStatus",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/representative-appoint/tests/api/fetchRepStatus.unit.spec.js",
          "file": "/src/applications/representative-appoint/tests/api/fetchRepStatus.unit.spec.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"fetchRepStatus\"",
              "fullTitle": "fetchRepStatus \"before each\" hook in \"fetchRepStatus\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "sandbox = _sinon.default.createSandbox();\nglobal.fetch = sandbox.stub(global, 'fetch');",
              "err": {},
              "uuid": "ecdb9643-2302-48bf-b857-c202c41bad89",
              "parentUUID": "ded6452e-948c-4193-b8e7-e003e8ebf61f",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after each\" hook in \"fetchRepStatus\"",
              "fullTitle": "fetchRepStatus \"after each\" hook in \"fetchRepStatus\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "sandbox.restore();",
              "err": {},
              "uuid": "c1d335c1-609f-47e7-bc41-e5ffea195d97",
              "parentUUID": "ded6452e-948c-4193-b8e7-e003e8ebf61f",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "should return representative status successfully",
              "fullTitle": "fetchRepStatus should return representative status successfully",
              "timedOut": false,
              "duration": 3,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
              "err": {},
              "uuid": "6745a07c-97d4-4f10-8f90-b8fc8ccbdeb5",
              "parentUUID": "ded6452e-948c-4193-b8e7-e003e8ebf61f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should throw an error if the response is not ok",
              "fullTitle": "fetchRepStatus should throw an error if the response is not ok",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
              "err": {},
              "uuid": "549948bf-34ae-435b-9789-517a6db68f8f",
              "parentUUID": "ded6452e-948c-4193-b8e7-e003e8ebf61f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should handle errors",
              "fullTitle": "fetchRepStatus should handle errors",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
              "err": {},
              "uuid": "c6298629-8cac-47c3-9b6f-11329ee72cb6",
              "parentUUID": "ded6452e-948c-4193-b8e7-e003e8ebf61f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "6745a07c-97d4-4f10-8f90-b8fc8ccbdeb5",
            "549948bf-34ae-435b-9789-517a6db68f8f",
            "c6298629-8cac-47c3-9b6f-11329ee72cb6"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 5,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "059201ac-de81-4ffc-9d97-027cc2d1fdcb",
          "title": "generatePDF",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/representative-appoint/tests/api/generatePDF.unit.spec.js",
          "file": "/src/applications/representative-appoint/tests/api/generatePDF.unit.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should handle errors",
              "fullTitle": "generatePDF should handle errors",
              "timedOut": false,
              "duration": 10,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
              "err": {},
              "uuid": "570c2d1f-51de-4092-995b-aa412e28ac4c",
              "parentUUID": "059201ac-de81-4ffc-9d97-027cc2d1fdcb",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [
            {
              "uuid": "a742bc01-c96d-41f8-a320-445fc2cc29e5",
              "title": "when submitting Form 21-22",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/representative-appoint/tests/api/generatePDF.unit.spec.js",
              "file": "/src/applications/representative-appoint/tests/api/generatePDF.unit.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "sets the pdfUrl in local storage",
                  "fullTitle": "generatePDF when submitting Form 21-22 sets the pdfUrl in local storage",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
                  "err": {},
                  "uuid": "2457afa7-4ca2-4049-8427-c93260f878e9",
                  "parentUUID": "a742bc01-c96d-41f8-a320-445fc2cc29e5",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "2457afa7-4ca2-4049-8427-c93260f878e9"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 3,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "5a896065-fc76-4a55-b507-3dd118166f22",
              "title": "when submitting Form 21-22a",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/representative-appoint/tests/api/generatePDF.unit.spec.js",
              "file": "/src/applications/representative-appoint/tests/api/generatePDF.unit.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "sets the pdfUrl in local storage",
                  "fullTitle": "generatePDF when submitting Form 21-22a sets the pdfUrl in local storage",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
                  "err": {},
                  "uuid": "0cec57f5-230d-439e-89fe-c1d26fa62938",
                  "parentUUID": "5a896065-fc76-4a55-b507-3dd118166f22",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "0cec57f5-230d-439e-89fe-c1d26fa62938"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            }
          ],
          "passes": [
            "570c2d1f-51de-4092-995b-aa412e28ac4c"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 10,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "b3621ff2-3469-4274-ac68-7cce2417c101",
          "title": "sendNextStepsEmail",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/representative-appoint/tests/api/sendNextStepsEmail.unit.spec.js",
          "file": "/src/applications/representative-appoint/tests/api/sendNextStepsEmail.unit.spec.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"sendNextStepsEmail\"",
              "fullTitle": "sendNextStepsEmail \"before each\" hook in \"sendNextStepsEmail\"",
              "timedOut": false,
              "duration": 1,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "sandbox = _sinon.default.createSandbox();\nglobal.fetch = sandbox.stub(global, 'fetch');",
              "err": {},
              "uuid": "5c1333ff-891b-4317-97d6-2900bb619cfc",
              "parentUUID": "b3621ff2-3469-4274-ac68-7cce2417c101",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after each\" hook in \"sendNextStepsEmail\"",
              "fullTitle": "sendNextStepsEmail \"after each\" hook in \"sendNextStepsEmail\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "sandbox.restore();",
              "err": {},
              "uuid": "c283cdd0-3fa5-40f3-9462-4d799f3e01bf",
              "parentUUID": "b3621ff2-3469-4274-ac68-7cce2417c101",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "should call the api with the provided body",
              "fullTitle": "sendNextStepsEmail should call the api with the provided body",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
              "err": {},
              "uuid": "f631a866-14f0-4f63-a89c-f71211cb924b",
              "parentUUID": "b3621ff2-3469-4274-ac68-7cce2417c101",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "returns the api response as json",
              "fullTitle": "sendNextStepsEmail returns the api response as json",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
              "err": {},
              "uuid": "15a7da54-8a9f-4689-8981-25bb4b252804",
              "parentUUID": "b3621ff2-3469-4274-ac68-7cce2417c101",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should throw an error if the response is not ok",
              "fullTitle": "sendNextStepsEmail should throw an error if the response is not ok",
              "timedOut": false,
              "duration": 6,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
              "err": {},
              "uuid": "b94ec89b-6034-4a48-a3c0-4c64524b52e4",
              "parentUUID": "b3621ff2-3469-4274-ac68-7cce2417c101",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should handle errors",
              "fullTitle": "sendNextStepsEmail should handle errors",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
              "err": {},
              "uuid": "0d249a04-5100-4678-815a-8f971d328a58",
              "parentUUID": "b3621ff2-3469-4274-ac68-7cce2417c101",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f631a866-14f0-4f63-a89c-f71211cb924b",
            "15a7da54-8a9f-4689-8981-25bb4b252804",
            "b94ec89b-6034-4a48-a3c0-4c64524b52e4",
            "0d249a04-5100-4678-815a-8f971d328a58"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 12,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "c081dab1-8c2e-4c37-848c-17a9edfbed6c",
          "title": "submitPOARequest",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/representative-appoint/tests/api/submitPOARequest.unit.spec.js",
          "file": "/src/applications/representative-appoint/tests/api/submitPOARequest.unit.spec.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"submitPOARequest\"",
              "fullTitle": "submitPOARequest \"before all\" hook in \"submitPOARequest\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "if (typeof global.fetch !== 'function') {\n  global.fetch = function () {\n    return Promise.resolve();\n  };\n}",
              "err": {},
              "uuid": "430d565a-d647-4a11-a647-5cccd6620d2b",
              "parentUUID": "c081dab1-8c2e-4c37-848c-17a9edfbed6c",
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"before each\" hook in \"submitPOARequest\"",
              "fullTitle": "submitPOARequest \"before each\" hook in \"submitPOARequest\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "sandbox = _sinon.default.createSandbox();\nfetchStub = sandbox.stub(global, 'fetch');",
              "err": {},
              "uuid": "0e0aa17f-e095-4762-b709-924bb0e6185e",
              "parentUUID": "c081dab1-8c2e-4c37-848c-17a9edfbed6c",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after each\" hook in \"submitPOARequest\"",
              "fullTitle": "submitPOARequest \"after each\" hook in \"submitPOARequest\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "sandbox.restore();",
              "err": {},
              "uuid": "a7606298-88c5-4d47-9136-28348d0b767d",
              "parentUUID": "c081dab1-8c2e-4c37-848c-17a9edfbed6c",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "should return parsed JSON when the response is ok",
              "fullTitle": "submitPOARequest should return parsed JSON when the response is ok",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
              "err": {},
              "uuid": "b7435f27-5480-4731-8405-be7f6f9d0998",
              "parentUUID": "c081dab1-8c2e-4c37-848c-17a9edfbed6c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should throw an error when the response is not ok",
              "fullTitle": "submitPOARequest should throw an error when the response is not ok",
              "timedOut": false,
              "duration": 6,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
              "err": {},
              "uuid": "21a4ca90-2cf1-4a77-aa6c-bf8af591d35d",
              "parentUUID": "c081dab1-8c2e-4c37-848c-17a9edfbed6c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should handle errors thrown by fetch",
              "fullTitle": "submitPOARequest should handle errors thrown by fetch",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
              "err": {},
              "uuid": "032197ae-ac87-45ef-ae79-2c3537aa325d",
              "parentUUID": "c081dab1-8c2e-4c37-848c-17a9edfbed6c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "b7435f27-5480-4731-8405-be7f6f9d0998",
            "21a4ca90-2cf1-4a77-aa6c-bf8af591d35d",
            "032197ae-ac87-45ef-ae79-2c3537aa325d"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 9,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "957573c2-aba6-4d3a-b1ec-32b2b63d0237",
          "title": "<AddressAuthorizationDescription>",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/representative-appoint/tests/components/AddressAuthorizationDescription.unit.spec.jsx",
          "file": "/src/applications/representative-appoint/tests/components/AddressAuthorizationDescription.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should render component",
              "fullTitle": "<AddressAuthorizationDescription> should render component",
              "timedOut": false,
              "duration": 14,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var formData = _sparseFormDataExamples.vso;\nvar _render = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_AddressAuthorizationDescription.AddressAuthorizationDescription, {\n    formData: formData\n  })),\n  container = _render.container;\n(0, _chai.expect)(container).to.exist;",
              "err": {},
              "uuid": "f1e5a3c9-b3aa-4ea9-8be6-900834cab166",
              "parentUUID": "957573c2-aba6-4d3a-b1ec-32b2b63d0237",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [
            {
              "uuid": "2a2b5df3-1eda-4872-bf7f-16ee99b1ca26",
              "title": "when the selected representative is an attorney",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/representative-appoint/tests/components/AddressAuthorizationDescription.unit.spec.jsx",
              "file": "/src/applications/representative-appoint/tests/components/AddressAuthorizationDescription.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should include \"Attorney\"",
                  "fullTitle": "<AddressAuthorizationDescription> when the selected representative is an attorney should include \"Attorney\"",
                  "timedOut": false,
                  "duration": 10,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var formData = _sparseFormDataExamples.attorney;\nvar _render2 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_AddressAuthorizationDescription.AddressAuthorizationDescription, {\n    formData: formData\n  })),\n  container = _render2.container;\nvar content = (0, _ui.$)('p', container);\n(0, _chai.expect)(content.textContent).to.contain('Attorney');",
                  "err": {},
                  "uuid": "4e19b484-893d-484c-aee3-42f67fd7b33c",
                  "parentUUID": "2a2b5df3-1eda-4872-bf7f-16ee99b1ca26",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "4e19b484-893d-484c-aee3-42f67fd7b33c"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 10,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "2d632381-e340-4c76-b193-794ad0caacf1",
              "title": "when the selected representative is a claims agent",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/representative-appoint/tests/components/AddressAuthorizationDescription.unit.spec.jsx",
              "file": "/src/applications/representative-appoint/tests/components/AddressAuthorizationDescription.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should include \"Claims Agent\"",
                  "fullTitle": "<AddressAuthorizationDescription> when the selected representative is a claims agent should include \"Claims Agent\"",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var formData = _sparseFormDataExamples.agent;\nvar _render3 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_AddressAuthorizationDescription.AddressAuthorizationDescription, {\n    formData: formData\n  })),\n  container = _render3.container;\nvar content = (0, _ui.$)('p', container);\n(0, _chai.expect)(content.textContent).to.contain('Claims Agent');",
                  "err": {},
                  "uuid": "519cb1d0-adb5-47a5-b2cd-5a618417ee2b",
                  "parentUUID": "2d632381-e340-4c76-b193-794ad0caacf1",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "519cb1d0-adb5-47a5-b2cd-5a618417ee2b"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 3,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "dbd7fb47-b22b-4aa1-88f0-426214ed267a",
              "title": "when the selected representative is a vso representative",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/representative-appoint/tests/components/AddressAuthorizationDescription.unit.spec.jsx",
              "file": "/src/applications/representative-appoint/tests/components/AddressAuthorizationDescription.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should include \"VSO Representative\"",
                  "fullTitle": "<AddressAuthorizationDescription> when the selected representative is a vso representative should include \"VSO Representative\"",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var formData = _sparseFormDataExamples.vso;\nvar _render4 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_AddressAuthorizationDescription.AddressAuthorizationDescription, {\n    formData: formData\n  })),\n  container = _render4.container;\nvar content = (0, _ui.$)('p', container);\n(0, _chai.expect)(content.textContent).to.contain('VSO Representative');",
                  "err": {},
                  "uuid": "1ce61705-a77e-48f7-b604-9202f5cb3d94",
                  "parentUUID": "dbd7fb47-b22b-4aa1-88f0-426214ed267a",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "1ce61705-a77e-48f7-b604-9202f5cb3d94"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 3,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "5bb83181-2911-41b1-95bb-b522a545de60",
              "title": "when the selected representative is an organization",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/representative-appoint/tests/components/AddressAuthorizationDescription.unit.spec.jsx",
              "file": "/src/applications/representative-appoint/tests/components/AddressAuthorizationDescription.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should include \"Organization\"",
                  "fullTitle": "<AddressAuthorizationDescription> when the selected representative is an organization should include \"Organization\"",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var formData = _sparseFormDataExamples.org;\nvar _render5 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_AddressAuthorizationDescription.AddressAuthorizationDescription, {\n    formData: formData\n  })),\n  container = _render5.container;\nvar content = (0, _ui.$)('p', container);\n(0, _chai.expect)(content.textContent).to.contain('Organization');",
                  "err": {},
                  "uuid": "fbd8039b-e30d-489b-abee-ac007c2a5950",
                  "parentUUID": "5bb83181-2911-41b1-95bb-b522a545de60",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "fbd8039b-e30d-489b-abee-ac007c2a5950"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "c85d1123-bedf-427e-8af3-8a14dbcc24c0",
              "title": "when there is no selected rep",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/representative-appoint/tests/components/AddressAuthorizationDescription.unit.spec.jsx",
              "file": "/src/applications/representative-appoint/tests/components/AddressAuthorizationDescription.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should include \"VSO Representative\"",
                  "fullTitle": "<AddressAuthorizationDescription> when there is no selected rep should include \"VSO Representative\"",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var formData = {};\nvar _render6 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_AddressAuthorizationDescription.AddressAuthorizationDescription, {\n    formData: formData\n  })),\n  container = _render6.container;\nvar content = (0, _ui.$)('p', container);\n(0, _chai.expect)(content.textContent).to.contain('VSO Representative');",
                  "err": {},
                  "uuid": "10d5eccb-2f42-4afb-8164-ff6c7ecefbb5",
                  "parentUUID": "c85d1123-bedf-427e-8af3-8a14dbcc24c0",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "10d5eccb-2f42-4afb-8164-ff6c7ecefbb5"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            }
          ],
          "passes": [
            "f1e5a3c9-b3aa-4ea9-8be6-900834cab166"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 14,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "93a9cc72-016e-48f3-8fa5-faf8a1bb6b43",
          "title": "<AddressAuthorizationPolicy>",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/representative-appoint/tests/components/AddressAuthorizationPolicy.unit.spec.jsx",
          "file": "/src/applications/representative-appoint/tests/components/AddressAuthorizationPolicy.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should render component",
              "fullTitle": "<AddressAuthorizationPolicy> should render component",
              "timedOut": false,
              "duration": 7,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps = getProps({\n    formData: _sparseFormDataExamples.vso\n  }),\n  mockStore = _getProps.mockStore;\nvar _render = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_AddressAuthorizationPolicy.default, null))),\n  container = _render.container;\n(0, _chai.expect)(container).to.exist;",
              "err": {},
              "uuid": "82fa48cd-64fa-4cc7-a780-b4f34a6acf74",
              "parentUUID": "93a9cc72-016e-48f3-8fa5-faf8a1bb6b43",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [
            {
              "uuid": "84bcba33-4494-48fe-8c18-22b5a3628bf1",
              "title": "when the selected representative is an organization",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/representative-appoint/tests/components/AddressAuthorizationPolicy.unit.spec.jsx",
              "file": "/src/applications/representative-appoint/tests/components/AddressAuthorizationPolicy.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should use the 21-22 policy",
                  "fullTitle": "<AddressAuthorizationPolicy> when the selected representative is an organization should use the 21-22 policy",
                  "timedOut": false,
                  "duration": 5,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var _getProps2 = getProps({\n    formData: _sparseFormDataExamples.org\n  }),\n  mockStore = _getProps2.mockStore;\nvar _render2 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_AddressAuthorizationPolicy.default, null))),\n  container = _render2.container;\nvar usedPolicy = container.querySelector('[data-testid=\"address-authorization-policy-2122\"]');\nvar unusedPolicy = container.querySelector('[data-testid=\"address-authorization-policy-2122a\"]');\n(0, _chai.expect)(usedPolicy).to.exist;\n(0, _chai.expect)(unusedPolicy).not.to.exist;",
                  "err": {},
                  "uuid": "d7b12921-2723-4f7d-9c94-0a6ea21d2d47",
                  "parentUUID": "84bcba33-4494-48fe-8c18-22b5a3628bf1",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "d7b12921-2723-4f7d-9c94-0a6ea21d2d47"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 5,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "111eafd4-576f-4acb-85d5-cae11a4ca164",
              "title": "when the selected representative is a vso representative",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/representative-appoint/tests/components/AddressAuthorizationPolicy.unit.spec.jsx",
              "file": "/src/applications/representative-appoint/tests/components/AddressAuthorizationPolicy.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should use the 21-22 policy",
                  "fullTitle": "<AddressAuthorizationPolicy> when the selected representative is a vso representative should use the 21-22 policy",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var _getProps3 = getProps({\n    formData: _sparseFormDataExamples.vso\n  }),\n  mockStore = _getProps3.mockStore;\nvar _render3 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_AddressAuthorizationPolicy.default, null))),\n  container = _render3.container;\nvar usedPolicy = container.querySelector('[data-testid=\"address-authorization-policy-2122\"]');\nvar unusedPolicy = container.querySelector('[data-testid=\"address-authorization-policy-2122a\"]');\n(0, _chai.expect)(usedPolicy).to.exist;\n(0, _chai.expect)(unusedPolicy).not.to.exist;",
                  "err": {},
                  "uuid": "5e9b7823-88fa-4681-a7bd-92dbe9228a77",
                  "parentUUID": "111eafd4-576f-4acb-85d5-cae11a4ca164",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "5e9b7823-88fa-4681-a7bd-92dbe9228a77"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 3,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "5ff35fff-d144-4c2a-a09d-9072cf511a82",
              "title": "when the selected representative is an attorney",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/representative-appoint/tests/components/AddressAuthorizationPolicy.unit.spec.jsx",
              "file": "/src/applications/representative-appoint/tests/components/AddressAuthorizationPolicy.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should use the 21-22a policy",
                  "fullTitle": "<AddressAuthorizationPolicy> when the selected representative is an attorney should use the 21-22a policy",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var _getProps4 = getProps({\n    formData: _sparseFormDataExamples.attorney\n  }),\n  mockStore = _getProps4.mockStore;\nvar _render4 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_AddressAuthorizationPolicy.default, null))),\n  container = _render4.container;\nvar usedPolicy = container.querySelector('[data-testid=\"address-authorization-policy-2122a\"]');\nvar unusedPolicy = container.querySelector('[data-testid=\"address-authorization-policy-2122\"]');\n(0, _chai.expect)(usedPolicy).to.exist;\n(0, _chai.expect)(unusedPolicy).not.to.exist;",
                  "err": {},
                  "uuid": "3d131154-9f7b-40d0-a404-95d29ce8772e",
                  "parentUUID": "5ff35fff-d144-4c2a-a09d-9072cf511a82",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "3d131154-9f7b-40d0-a404-95d29ce8772e"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "b61817df-7a0b-43ea-9ba1-a3b19147c201",
              "title": "when the selected representative is a claims agent",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/representative-appoint/tests/components/AddressAuthorizationPolicy.unit.spec.jsx",
              "file": "/src/applications/representative-appoint/tests/components/AddressAuthorizationPolicy.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should use the 21-22a policy",
                  "fullTitle": "<AddressAuthorizationPolicy> when the selected representative is a claims agent should use the 21-22a policy",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var _getProps5 = getProps({\n    formData: _sparseFormDataExamples.agent\n  }),\n  mockStore = _getProps5.mockStore;\nvar _render5 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_AddressAuthorizationPolicy.default, null))),\n  container = _render5.container;\nvar usedPolicy = container.querySelector('[data-testid=\"address-authorization-policy-2122a\"]');\nvar unusedPolicy = container.querySelector('[data-testid=\"address-authorization-policy-2122\"]');\n(0, _chai.expect)(usedPolicy).to.exist;\n(0, _chai.expect)(unusedPolicy).not.to.exist;",
                  "err": {},
                  "uuid": "630e154c-ec7c-436c-b3ed-29b8842df9c1",
                  "parentUUID": "b61817df-7a0b-43ea-9ba1-a3b19147c201",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "630e154c-ec7c-436c-b3ed-29b8842df9c1"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 3,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "b7dc6b38-ce3d-4076-ab81-e1c7c1748461",
              "title": "when there is no selected representative",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/representative-appoint/tests/components/AddressAuthorizationPolicy.unit.spec.jsx",
              "file": "/src/applications/representative-appoint/tests/components/AddressAuthorizationPolicy.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should use the 21-22a policy",
                  "fullTitle": "<AddressAuthorizationPolicy> when there is no selected representative should use the 21-22a policy",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var _getProps6 = getProps(),\n  mockStore = _getProps6.mockStore;\nvar _render6 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_AddressAuthorizationPolicy.default, null))),\n  container = _render6.container;\nvar usedPolicy = container.querySelector('[data-testid=\"address-authorization-policy-2122a\"]');\nvar unusedPolicy = container.querySelector('[data-testid=\"address-authorization-policy-2122\"]');\n(0, _chai.expect)(usedPolicy).to.exist;\n(0, _chai.expect)(unusedPolicy).not.to.exist;",
                  "err": {},
                  "uuid": "0f335e05-6064-4166-9d5b-ff4b3cd89298",
                  "parentUUID": "b7dc6b38-ce3d-4076-ab81-e1c7c1748461",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "0f335e05-6064-4166-9d5b-ff4b3cd89298"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 3,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            }
          ],
          "passes": [
            "82fa48cd-64fa-4cc7-a780-b4f34a6acf74"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 7,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "bf2c68fc-3e62-4ce6-a2d8-e973e3afbca3",
          "title": "AddressBlock Component",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/representative-appoint/tests/components/AddressBlock.unit.spec.jsx",
          "file": "/src/applications/representative-appoint/tests/components/AddressBlock.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should render the representative and organization name",
              "fullTitle": "AddressBlock Component should render the representative and organization name",
              "timedOut": false,
              "duration": 6,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _render = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_AddressBlock.default, {\n    repName: repName,\n    orgName: orgName,\n    addressData: addressData\n  })),\n  container = _render.container;\nvar addressBlock = (0, _ui.$)('.va-address-block', container);\n(0, _chai.expect)(addressBlock).to.exist;\n(0, _chai.expect)(addressBlock.textContent).to.contain(repName);\n(0, _chai.expect)(addressBlock.textContent).to.contain(orgName);",
              "err": {},
              "uuid": "72478c17-6510-40ad-8706-e7652caad070",
              "parentUUID": "bf2c68fc-3e62-4ce6-a2d8-e973e3afbca3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should render the address correctly",
              "fullTitle": "AddressBlock Component should render the address correctly",
              "timedOut": false,
              "duration": 3,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _render2 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_AddressBlock.default, {\n    repName: repName,\n    orgName: orgName,\n    addressData: addressData\n  })),\n  container = _render2.container;\nvar addressBlock = (0, _ui.$)('.va-address-block', container);\n(0, _chai.expect)(addressBlock).to.exist;\n(0, _chai.expect)(addressBlock.textContent).to.contain('123 Main Street');\n(0, _chai.expect)(addressBlock.textContent).to.contain('Suite 4B');\n(0, _chai.expect)(addressBlock.textContent).to.contain('Anytown, AA 11111');",
              "err": {},
              "uuid": "618ed250-4f7d-4590-9772-90ca2e454002",
              "parentUUID": "bf2c68fc-3e62-4ce6-a2d8-e973e3afbca3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should render only the organization name if representative name is not provided",
              "fullTitle": "AddressBlock Component should render only the organization name if representative name is not provided",
              "timedOut": false,
              "duration": 3,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _render3 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_AddressBlock.default, {\n    repName: null,\n    orgName: orgName,\n    addressData: addressData\n  })),\n  container = _render3.container;\nvar addressBlock = (0, _ui.$)('.va-address-block', container);\n(0, _chai.expect)(addressBlock).to.exist;\n(0, _chai.expect)(addressBlock.textContent).to.not.contain(repName);\n(0, _chai.expect)(addressBlock.textContent).to.contain(orgName);",
              "err": {},
              "uuid": "d42a495c-799d-4003-b226-d3a2c4b29baa",
              "parentUUID": "bf2c68fc-3e62-4ce6-a2d8-e973e3afbca3",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "72478c17-6510-40ad-8706-e7652caad070",
            "618ed250-4f7d-4590-9772-90ca2e454002",
            "d42a495c-799d-4003-b226-d3a2c4b29baa"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 12,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "3d25f194-87ee-4612-898c-343303aad739",
          "title": "ContactCard Component",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/representative-appoint/tests/components/ContactCard.unit.spec.jsx",
          "file": "/src/applications/representative-appoint/tests/components/ContactCard.unit.spec.jsx",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"ContactCard Component\"",
              "fullTitle": "ContactCard Component \"before each\" hook in \"ContactCard Component\"",
              "timedOut": false,
              "duration": 5,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "mockRecordClick = _sinon.default.spy();\ncontainer = renderComponent();",
              "err": {},
              "uuid": "7040c983-b4ed-4772-ace5-435242c59010",
              "parentUUID": "3d25f194-87ee-4612-898c-343303aad739",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": "should render the representative and organization name when both names are given",
              "fullTitle": "ContactCard Component should render the representative and organization name when both names are given",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "testHeaderContent(container, orgName);\nvar repNameElement = (0, _ui.$)('p', container);\n(0, _chai.expect)(repNameElement).to.exist;\n(0, _chai.expect)(repNameElement.textContent).to.contain(repName);",
              "err": {},
              "uuid": "1edb6a4a-4cb5-4621-afb3-4dc4e459edfb",
              "parentUUID": "3d25f194-87ee-4612-898c-343303aad739",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should only render the representative name when the organization name is not given",
              "fullTitle": "ContactCard Component should only render the representative name when the organization name is not given",
              "timedOut": false,
              "duration": 5,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var renderedContainer = renderComponent({\n  orgName: undefined\n});\ntestHeaderContent(renderedContainer, repName);\nvar orgNameElement = (0, _ui.$)('p', renderedContainer);\n(0, _chai.expect)(orgNameElement).not.to.exist;",
              "err": {},
              "uuid": "cde50dd5-b322-4352-9053-a5445922b988",
              "parentUUID": "3d25f194-87ee-4612-898c-343303aad739",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should only render the organization name when the representative name is not given",
              "fullTitle": "ContactCard Component should only render the organization name when the representative name is not given",
              "timedOut": false,
              "duration": 4,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var renderedContainer = renderComponent({\n  repName: undefined\n});\ntestHeaderContent(renderedContainer, orgName);\nvar orgNameElement = (0, _ui.$)('p', renderedContainer);\n(0, _chai.expect)(orgNameElement).not.to.exist;",
              "err": {},
              "uuid": "36c63b52-79f3-48f3-9ba8-8865a739258e",
              "parentUUID": "3d25f194-87ee-4612-898c-343303aad739",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should render the address block correctly",
              "fullTitle": "ContactCard Component should render the address block correctly",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var googleMapLink = (0, _ui.$)('a.address-anchor', container);\n(0, _chai.expect)(googleMapLink).to.exist;\n(0, _chai.expect)(googleMapLink.textContent).to.contain('400 South 18th Street');\n(0, _chai.expect)(googleMapLink.textContent).to.contain('Room 119');\n(0, _chai.expect)(googleMapLink.textContent).to.contain('Newark, NJ 07102');",
              "err": {},
              "uuid": "d2471d51-2618-420e-b53c-76e7db77de40",
              "parentUUID": "3d25f194-87ee-4612-898c-343303aad739",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should render the email link with correct href and text",
              "fullTitle": "ContactCard Component should render the email link with correct href and text",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var emailLink = (0, _ui.$)('a[href^=\"mailto\"]', container);\n(0, _chai.expect)(emailLink).to.exist;\n(0, _chai.expect)(emailLink.getAttribute('href')).to.equal(\"mailto:\".concat(email));\n(0, _chai.expect)(emailLink.textContent).to.equal(email);",
              "err": {},
              "uuid": "60ed5ca7-9078-48b9-a44a-77dd10aae76f",
              "parentUUID": "3d25f194-87ee-4612-898c-343303aad739",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "1edb6a4a-4cb5-4621-afb3-4dc4e459edfb",
            "cde50dd5-b322-4352-9053-a5445922b988",
            "36c63b52-79f3-48f3-9ba8-8865a739258e",
            "d2471d51-2618-420e-b53c-76e7db77de40",
            "60ed5ca7-9078-48b9-a44a-77dd10aae76f"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 12,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "97dd865d-b601-4cfc-bc07-e01459b99fd5",
          "title": "Email Component",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/representative-appoint/tests/components/Email.unit.spec.jsx",
          "file": "/src/applications/representative-appoint/tests/components/Email.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should render the email link with correct href and text",
              "fullTitle": "Email Component should render the email link with correct href and text",
              "timedOut": false,
              "duration": 3,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _render = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_Email.default, {\n    email: email,\n    recordClick: mockRecordClick\n  })),\n  container = _render.container;\nvar emailLink = (0, _ui.$)('a', container);\n(0, _chai.expect)(emailLink).to.exist;\n(0, _chai.expect)(emailLink.getAttribute('href')).to.equal(\"mailto:\".concat(email));\n(0, _chai.expect)(emailLink.textContent).to.equal(email);",
              "err": {},
              "uuid": "d468134b-caaf-4230-86a9-d2a2dd95146a",
              "parentUUID": "97dd865d-b601-4cfc-bc07-e01459b99fd5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should call recordClick when the email link is clicked",
              "fullTitle": "Email Component should call recordClick when the email link is clicked",
              "timedOut": false,
              "duration": 6,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var recordClickSpy = _sinon.default.spy();\nvar _render2 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_Email.default, {\n    email: email,\n    recordClick: recordClickSpy\n  })),\n  container = _render2.container;\nvar emailLink = (0, _ui.$)('a', container);\nemailLink.click();\n(0, _chai.expect)(recordClickSpy.calledOnce).to.be.true;",
              "err": {},
              "uuid": "fc33d07d-8395-47b2-8b08-ec9e17623447",
              "parentUUID": "97dd865d-b601-4cfc-bc07-e01459b99fd5",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "d468134b-caaf-4230-86a9-d2a2dd95146a",
            "fc33d07d-8395-47b2-8b08-ec9e17623447"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 9,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "8bc1739c-73b1-46b8-8e65-1f409f0c3346",
          "title": "GetFormHelp",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/representative-appoint/tests/components/GetFormHelp.unit.spec.jsx",
          "file": "/src/applications/representative-appoint/tests/components/GetFormHelp.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should render",
              "fullTitle": "GetFormHelp should render",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _render = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_GetFormHelp.default, null)),\n  container = _render.container;\n(0, _chai.expect)(container).to.exist;",
              "err": {},
              "uuid": "3d35e25d-a8de-4808-b7cc-b44d75d1b2a4",
              "parentUUID": "8bc1739c-73b1-46b8-8e65-1f409f0c3346",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "3d35e25d-a8de-4808-b7cc-b44d75d1b2a4"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "482c3761-08d4-484b-afc9-d2bbc32510c0",
          "title": "GoogleMapLink Component",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/representative-appoint/tests/components/GoogleMapLink.unit.spec.jsx",
          "file": "/src/applications/representative-appoint/tests/components/GoogleMapLink.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should render the Google Maps link with the correct href",
              "fullTitle": "GoogleMapLink Component should render the Google Maps link with the correct href",
              "timedOut": false,
              "duration": 3,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _render = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_GoogleMapLink.default, {\n    addressData: address,\n    recordClick: mockRecordClick\n  })),\n  container = _render.container;\nvar googleMapsLink = (0, _ui.$)('a', container);\nvar expectedAddressString = '400 South 18th Street Room 119 Newark, NJ 07102';\n(0, _chai.expect)(googleMapsLink).to.exist;\n(0, _chai.expect)(googleMapsLink.getAttribute('href')).to.equal(\"https://maps.google.com?daddr=\".concat(expectedAddressString));",
              "err": {},
              "uuid": "0ca004fd-e757-41e2-992d-838c9b6addc7",
              "parentUUID": "482c3761-08d4-484b-afc9-d2bbc32510c0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should call recordClick when the Google Maps link is clicked",
              "fullTitle": "GoogleMapLink Component should call recordClick when the Google Maps link is clicked",
              "timedOut": false,
              "duration": 7,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var recordClickSpy = _sinon.default.spy();\nvar _render2 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_GoogleMapLink.default, {\n    addressData: address,\n    recordClick: recordClickSpy\n  })),\n  container = _render2.container;\nvar googleMapsLink = (0, _ui.$)('a', container);\ngoogleMapsLink.click();\n(0, _chai.expect)(recordClickSpy.calledOnce).to.be.true;",
              "err": {},
              "uuid": "2df65864-41a4-4a4d-b113-4e600f9d57cf",
              "parentUUID": "482c3761-08d4-484b-afc9-d2bbc32510c0",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "0ca004fd-e757-41e2-992d-838c9b6addc7",
            "2df65864-41a4-4a4d-b113-4e600f9d57cf"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 10,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "621646f0-bda9-4672-a796-76de20c898ff",
          "title": "<InsideVAAuthorizationDescription>",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/representative-appoint/tests/components/InsideVAAuthorizationDescription.unit.spec.jsx",
          "file": "/src/applications/representative-appoint/tests/components/InsideVAAuthorizationDescription.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should render component",
              "fullTitle": "<InsideVAAuthorizationDescription> should render component",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var formData = _sparseFormDataExamples.vso;\nvar _render = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_InsideVAAuthorizationDescription.InsideVAAuthorizationDescription, {\n    formData: formData\n  })),\n  container = _render.container;\n(0, _chai.expect)(container).to.exist;",
              "err": {},
              "uuid": "ee465a3a-ecd5-4cea-a94e-1c693e643c91",
              "parentUUID": "621646f0-bda9-4672-a796-76de20c898ff",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [
            {
              "uuid": "d3f33982-4f93-4680-b748-510c0dda114c",
              "title": "when the selected representative is an attorney",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/representative-appoint/tests/components/InsideVAAuthorizationDescription.unit.spec.jsx",
              "file": "/src/applications/representative-appoint/tests/components/InsideVAAuthorizationDescription.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should include \"Attorney\"",
                  "fullTitle": "<InsideVAAuthorizationDescription> when the selected representative is an attorney should include \"Attorney\"",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var formData = _sparseFormDataExamples.attorney;\nvar _render2 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_InsideVAAuthorizationDescription.InsideVAAuthorizationDescription, {\n    formData: formData\n  })),\n  container = _render2.container;\nvar content = (0, _ui.$)('p', container);\n(0, _chai.expect)(content.textContent).to.contain('Attorney');",
                  "err": {},
                  "uuid": "997b7775-c4e5-41cf-8599-ec6e844b5977",
                  "parentUUID": "d3f33982-4f93-4680-b748-510c0dda114c",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "997b7775-c4e5-41cf-8599-ec6e844b5977"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 3,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "7a7ae682-5009-40bc-8d48-7f0dfb9eaff4",
              "title": "when the selected representative is a claims agent",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/representative-appoint/tests/components/InsideVAAuthorizationDescription.unit.spec.jsx",
              "file": "/src/applications/representative-appoint/tests/components/InsideVAAuthorizationDescription.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should include \"Claims Agent\"",
                  "fullTitle": "<InsideVAAuthorizationDescription> when the selected representative is a claims agent should include \"Claims Agent\"",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var formData = _sparseFormDataExamples.agent;\nvar _render3 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_InsideVAAuthorizationDescription.InsideVAAuthorizationDescription, {\n    formData: formData\n  })),\n  container = _render3.container;\nvar content = (0, _ui.$)('p', container);\n(0, _chai.expect)(content.textContent).to.contain('Claims Agent');",
                  "err": {},
                  "uuid": "716834c8-3b3b-4ff2-9213-29c10301cb40",
                  "parentUUID": "7a7ae682-5009-40bc-8d48-7f0dfb9eaff4",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "716834c8-3b3b-4ff2-9213-29c10301cb40"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "7c097b81-267f-454a-840e-73bd8b6a4442",
              "title": "when the selected representative is a vso representative",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/representative-appoint/tests/components/InsideVAAuthorizationDescription.unit.spec.jsx",
              "file": "/src/applications/representative-appoint/tests/components/InsideVAAuthorizationDescription.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should include \"VSO Representative\"",
                  "fullTitle": "<InsideVAAuthorizationDescription> when the selected representative is a vso representative should include \"VSO Representative\"",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var formData = _sparseFormDataExamples.vso;\nvar _render4 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_InsideVAAuthorizationDescription.InsideVAAuthorizationDescription, {\n    formData: formData\n  })),\n  container = _render4.container;\nvar content = (0, _ui.$)('p', container);\n(0, _chai.expect)(content.textContent).to.contain('VSO Representative');",
                  "err": {},
                  "uuid": "662d059a-2b0a-46ec-ac35-a770f99e2ebc",
                  "parentUUID": "7c097b81-267f-454a-840e-73bd8b6a4442",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "662d059a-2b0a-46ec-ac35-a770f99e2ebc"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "a65bd365-c358-4862-948a-3a8f8274e67c",
              "title": "when the selected representative is an organization",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/representative-appoint/tests/components/InsideVAAuthorizationDescription.unit.spec.jsx",
              "file": "/src/applications/representative-appoint/tests/components/InsideVAAuthorizationDescription.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should include \"Organization\"",
                  "fullTitle": "<InsideVAAuthorizationDescription> when the selected representative is an organization should include \"Organization\"",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var formData = _sparseFormDataExamples.org;\nvar _render5 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_InsideVAAuthorizationDescription.InsideVAAuthorizationDescription, {\n    formData: formData\n  })),\n  container = _render5.container;\nvar content = (0, _ui.$)('p', container);\n(0, _chai.expect)(content.textContent).to.contain('Organization');",
                  "err": {},
                  "uuid": "b1d57980-54d7-46f3-9b5e-9e80bf2b6178",
                  "parentUUID": "a65bd365-c358-4862-948a-3a8f8274e67c",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "b1d57980-54d7-46f3-9b5e-9e80bf2b6178"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "1ea332c9-2861-42e7-9fac-9b09eb6d83d1",
              "title": "when there is no selected rep",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/representative-appoint/tests/components/InsideVAAuthorizationDescription.unit.spec.jsx",
              "file": "/src/applications/representative-appoint/tests/components/InsideVAAuthorizationDescription.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should include \"VSO Representative\"",
                  "fullTitle": "<InsideVAAuthorizationDescription> when there is no selected rep should include \"VSO Representative\"",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var formData = {};\nvar _render6 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_InsideVAAuthorizationDescription.InsideVAAuthorizationDescription, {\n    formData: formData\n  })),\n  container = _render6.container;\nvar content = (0, _ui.$)('p', container);\n(0, _chai.expect)(content.textContent).to.contain('VSO Representative');",
                  "err": {},
                  "uuid": "7540181f-6418-44e3-8ed2-2b492a2dfcba",
                  "parentUUID": "1ea332c9-2861-42e7-9fac-9b09eb6d83d1",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "7540181f-6418-44e3-8ed2-2b492a2dfcba"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            }
          ],
          "passes": [
            "ee465a3a-ecd5-4cea-a94e-1c693e643c91"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "34a88859-e057-4f2e-bf99-b6df14245e1c",
          "title": "<MedicalAuthorizationDescription>",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/representative-appoint/tests/components/MedicalAuthorizationDescription.unit.spec.jsx",
          "file": "/src/applications/representative-appoint/tests/components/MedicalAuthorizationDescription.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should render component",
              "fullTitle": "<MedicalAuthorizationDescription> should render component",
              "timedOut": false,
              "duration": 3,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var formData = _sparseFormDataExamples.vso;\nvar _render = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_MedicalAuthorizationDescription.MedicalAuthorizationDescription, {\n    formData: formData\n  })),\n  container = _render.container;\n(0, _chai.expect)(container).to.exist;",
              "err": {},
              "uuid": "908ddbad-8798-4f86-89c0-99d9381a18ef",
              "parentUUID": "34a88859-e057-4f2e-bf99-b6df14245e1c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [
            {
              "uuid": "a8bf8636-b7e5-4f82-bcac-c66ce8aec3e0",
              "title": "when the selected representative is an attorney",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/representative-appoint/tests/components/MedicalAuthorizationDescription.unit.spec.jsx",
              "file": "/src/applications/representative-appoint/tests/components/MedicalAuthorizationDescription.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should include \"Attorney\"",
                  "fullTitle": "<MedicalAuthorizationDescription> when the selected representative is an attorney should include \"Attorney\"",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var formData = _sparseFormDataExamples.attorney;\nvar _render2 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_MedicalAuthorizationDescription.MedicalAuthorizationDescription, {\n    formData: formData\n  })),\n  container = _render2.container;\nvar content = (0, _ui.$)('p', container);\n(0, _chai.expect)(content.textContent).to.contain('Attorney');",
                  "err": {},
                  "uuid": "609ab704-fae2-4056-9288-007599ef9c62",
                  "parentUUID": "a8bf8636-b7e5-4f82-bcac-c66ce8aec3e0",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "609ab704-fae2-4056-9288-007599ef9c62"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "42e3fbe1-ffdb-43cf-b964-1d4484bc3b7e",
              "title": "when the selected representative is a claims agent",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/representative-appoint/tests/components/MedicalAuthorizationDescription.unit.spec.jsx",
              "file": "/src/applications/representative-appoint/tests/components/MedicalAuthorizationDescription.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should include \"Claims Agent\"",
                  "fullTitle": "<MedicalAuthorizationDescription> when the selected representative is a claims agent should include \"Claims Agent\"",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var formData = _sparseFormDataExamples.agent;\nvar _render3 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_MedicalAuthorizationDescription.MedicalAuthorizationDescription, {\n    formData: formData\n  })),\n  container = _render3.container;\nvar content = (0, _ui.$)('p', container);\n(0, _chai.expect)(content.textContent).to.contain('Claims Agent');",
                  "err": {},
                  "uuid": "f7349f8d-1eb5-40be-8123-690a0d49240e",
                  "parentUUID": "42e3fbe1-ffdb-43cf-b964-1d4484bc3b7e",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "f7349f8d-1eb5-40be-8123-690a0d49240e"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 3,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "cf2ead53-1c09-46cc-a708-6ec2c40e9ca2",
              "title": "when the selected representative is a vso representative",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/representative-appoint/tests/components/MedicalAuthorizationDescription.unit.spec.jsx",
              "file": "/src/applications/representative-appoint/tests/components/MedicalAuthorizationDescription.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should include \"VSO Representative\"",
                  "fullTitle": "<MedicalAuthorizationDescription> when the selected representative is a vso representative should include \"VSO Representative\"",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var formData = _sparseFormDataExamples.vso;\nvar _render4 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_MedicalAuthorizationDescription.MedicalAuthorizationDescription, {\n    formData: formData\n  })),\n  container = _render4.container;\nvar content = (0, _ui.$)('p', container);\n(0, _chai.expect)(content.textContent).to.contain('VSO Representative');",
                  "err": {},
                  "uuid": "b7f128da-b093-46ee-8353-4ea56fec2b61",
                  "parentUUID": "cf2ead53-1c09-46cc-a708-6ec2c40e9ca2",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "b7f128da-b093-46ee-8353-4ea56fec2b61"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "ad326165-fa5d-41fe-898e-e218081c6abe",
              "title": "when the selected representative is an organization",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/representative-appoint/tests/components/MedicalAuthorizationDescription.unit.spec.jsx",
              "file": "/src/applications/representative-appoint/tests/components/MedicalAuthorizationDescription.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should include \"Organization\"",
                  "fullTitle": "<MedicalAuthorizationDescription> when the selected representative is an organization should include \"Organization\"",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var formData = _sparseFormDataExamples.org;\nvar _render5 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_MedicalAuthorizationDescription.MedicalAuthorizationDescription, {\n    formData: formData\n  })),\n  container = _render5.container;\nvar content = (0, _ui.$)('p', container);\n(0, _chai.expect)(content.textContent).to.contain('Organization');",
                  "err": {},
                  "uuid": "f4234ef1-3197-45c8-90ba-293b3bcab48a",
                  "parentUUID": "ad326165-fa5d-41fe-898e-e218081c6abe",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "f4234ef1-3197-45c8-90ba-293b3bcab48a"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "cb9c1292-63cb-4c71-a959-21aa2066e001",
              "title": "when there is no selected rep",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/representative-appoint/tests/components/MedicalAuthorizationDescription.unit.spec.jsx",
              "file": "/src/applications/representative-appoint/tests/components/MedicalAuthorizationDescription.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should include \"VSO Representative\"",
                  "fullTitle": "<MedicalAuthorizationDescription> when there is no selected rep should include \"VSO Representative\"",
                  "timedOut": false,
                  "duration": 4,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var formData = {};\nvar _render6 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_MedicalAuthorizationDescription.MedicalAuthorizationDescription, {\n    formData: formData\n  })),\n  container = _render6.container;\nvar content = (0, _ui.$)('p', container);\n(0, _chai.expect)(content.textContent).to.contain('VSO Representative');",
                  "err": {},
                  "uuid": "1a6d4a5b-73ee-44c5-a861-ed63a8c0a410",
                  "parentUUID": "cb9c1292-63cb-4c71-a959-21aa2066e001",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "1a6d4a5b-73ee-44c5-a861-ed63a8c0a410"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 4,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            }
          ],
          "passes": [
            "908ddbad-8798-4f86-89c0-99d9381a18ef"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "b49d5420-330b-4cfb-9d19-ff428034bba7",
          "title": "<MedicalAuthorizationPolicy>",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/representative-appoint/tests/components/MedicalAuthorizationPolicy.unit.spec.jsx",
          "file": "/src/applications/representative-appoint/tests/components/MedicalAuthorizationPolicy.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should render component",
              "fullTitle": "<MedicalAuthorizationPolicy> should render component",
              "timedOut": false,
              "duration": 3,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps = getProps({\n    formData: _sparseFormDataExamples.vso\n  }),\n  mockStore = _getProps.mockStore;\nvar _render = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_MedicalAuthorizationPolicy.default, null))),\n  container = _render.container;\n(0, _chai.expect)(container).to.exist;",
              "err": {},
              "uuid": "4b3812ce-468f-429d-8cb4-5dff8f188c55",
              "parentUUID": "b49d5420-330b-4cfb-9d19-ff428034bba7",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [
            {
              "uuid": "2cf3b75c-b12c-480c-a77d-eca33267a0a9",
              "title": "when the selected representative is an organization",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/representative-appoint/tests/components/MedicalAuthorizationPolicy.unit.spec.jsx",
              "file": "/src/applications/representative-appoint/tests/components/MedicalAuthorizationPolicy.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should use the 21-22 policy",
                  "fullTitle": "<MedicalAuthorizationPolicy> when the selected representative is an organization should use the 21-22 policy",
                  "timedOut": false,
                  "duration": 4,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var _getProps2 = getProps({\n    formData: _sparseFormDataExamples.org\n  }),\n  mockStore = _getProps2.mockStore;\nvar _render2 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_MedicalAuthorizationPolicy.default, null))),\n  container = _render2.container;\nvar usedPolicy = container.querySelector('[data-testid=\"medical-authorization-policy-2122\"]');\nvar unusedPolicy = container.querySelector('[data-testid=\"medical-authorization-policy-2122a\"]');\n(0, _chai.expect)(usedPolicy).to.exist;\n(0, _chai.expect)(unusedPolicy).not.to.exist;",
                  "err": {},
                  "uuid": "f59190b1-e7aa-4c27-9db9-46707029b90f",
                  "parentUUID": "2cf3b75c-b12c-480c-a77d-eca33267a0a9",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "f59190b1-e7aa-4c27-9db9-46707029b90f"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 4,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "1bf6c2a4-30ce-44d9-b749-d5416f06df5c",
              "title": "when the selected representative is a vso representative",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/representative-appoint/tests/components/MedicalAuthorizationPolicy.unit.spec.jsx",
              "file": "/src/applications/representative-appoint/tests/components/MedicalAuthorizationPolicy.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should use the 21-22 policy",
                  "fullTitle": "<MedicalAuthorizationPolicy> when the selected representative is a vso representative should use the 21-22 policy",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var _getProps3 = getProps({\n    formData: _sparseFormDataExamples.vso\n  }),\n  mockStore = _getProps3.mockStore;\nvar _render3 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_MedicalAuthorizationPolicy.default, null))),\n  container = _render3.container;\nvar usedPolicy = container.querySelector('[data-testid=\"medical-authorization-policy-2122\"]');\nvar unusedPolicy = container.querySelector('[data-testid=\"medical-authorization-policy-2122a\"]');\n(0, _chai.expect)(usedPolicy).to.exist;\n(0, _chai.expect)(unusedPolicy).not.to.exist;",
                  "err": {},
                  "uuid": "3fc0983d-51f9-4dcb-acb2-5d45585c1973",
                  "parentUUID": "1bf6c2a4-30ce-44d9-b749-d5416f06df5c",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "3fc0983d-51f9-4dcb-acb2-5d45585c1973"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 3,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "23960732-38b6-4217-9117-abe9415d80c4",
              "title": "when the selected representative is an attorney",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/representative-appoint/tests/components/MedicalAuthorizationPolicy.unit.spec.jsx",
              "file": "/src/applications/representative-appoint/tests/components/MedicalAuthorizationPolicy.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should use the 21-22a policy",
                  "fullTitle": "<MedicalAuthorizationPolicy> when the selected representative is an attorney should use the 21-22a policy",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var _getProps4 = getProps({\n    formData: _sparseFormDataExamples.attorney\n  }),\n  mockStore = _getProps4.mockStore;\nvar _render4 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_MedicalAuthorizationPolicy.default, null))),\n  container = _render4.container;\nvar usedPolicy = container.querySelector('[data-testid=\"medical-authorization-policy-2122a\"]');\nvar unusedPolicy = container.querySelector('[data-testid=\"medical-authorization-policy-2122\"]');\n(0, _chai.expect)(usedPolicy).to.exist;\n(0, _chai.expect)(unusedPolicy).not.to.exist;",
                  "err": {},
                  "uuid": "2efc74e9-c53b-4002-9823-0e8f1b800108",
                  "parentUUID": "23960732-38b6-4217-9117-abe9415d80c4",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "2efc74e9-c53b-4002-9823-0e8f1b800108"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 3,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "e6ec1ffc-3cd1-4d77-89b0-210f9d4b4fa1",
              "title": "when the selected representative is a claims agent",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/representative-appoint/tests/components/MedicalAuthorizationPolicy.unit.spec.jsx",
              "file": "/src/applications/representative-appoint/tests/components/MedicalAuthorizationPolicy.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should use the 21-22a policy",
                  "fullTitle": "<MedicalAuthorizationPolicy> when the selected representative is a claims agent should use the 21-22a policy",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var _getProps5 = getProps({\n    formData: _sparseFormDataExamples.agent\n  }),\n  mockStore = _getProps5.mockStore;\nvar _render5 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_MedicalAuthorizationPolicy.default, null))),\n  container = _render5.container;\nvar usedPolicy = container.querySelector('[data-testid=\"medical-authorization-policy-2122a\"]');\nvar unusedPolicy = container.querySelector('[data-testid=\"medical-authorization-policy-2122\"]');\n(0, _chai.expect)(usedPolicy).to.exist;\n(0, _chai.expect)(unusedPolicy).not.to.exist;",
                  "err": {},
                  "uuid": "a3c12a57-7f0a-47fd-9f62-cdce95cc906e",
                  "parentUUID": "e6ec1ffc-3cd1-4d77-89b0-210f9d4b4fa1",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "a3c12a57-7f0a-47fd-9f62-cdce95cc906e"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 3,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "63d11f76-0c10-44b7-b299-47e563402f58",
              "title": "when there is no selected representative",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/representative-appoint/tests/components/MedicalAuthorizationPolicy.unit.spec.jsx",
              "file": "/src/applications/representative-appoint/tests/components/MedicalAuthorizationPolicy.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should use the 21-22a policy",
                  "fullTitle": "<MedicalAuthorizationPolicy> when there is no selected representative should use the 21-22a policy",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var _getProps6 = getProps(),\n  mockStore = _getProps6.mockStore;\nvar _render6 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_MedicalAuthorizationPolicy.default, null))),\n  container = _render6.container;\nvar usedPolicy = container.querySelector('[data-testid=\"medical-authorization-policy-2122a\"]');\nvar unusedPolicy = container.querySelector('[data-testid=\"medical-authorization-policy-2122\"]');\n(0, _chai.expect)(usedPolicy).to.exist;\n(0, _chai.expect)(unusedPolicy).not.to.exist;",
                  "err": {},
                  "uuid": "b9594e3f-6e72-4758-9db5-784e86380aba",
                  "parentUUID": "63d11f76-0c10-44b7-b299-47e563402f58",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "b9594e3f-6e72-4758-9db5-784e86380aba"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 3,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            }
          ],
          "passes": [
            "4b3812ce-468f-429d-8cb4-5dff8f188c55"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "b9f9dd8d-4d7d-4a2c-a4fa-799d1bc4660d",
          "title": "<MedicalSelectAuthorizationDescription>",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/representative-appoint/tests/components/MedicalSelectAuthorizationDescription.unit.spec.jsx",
          "file": "/src/applications/representative-appoint/tests/components/MedicalSelectAuthorizationDescription.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should render component",
              "fullTitle": "<MedicalSelectAuthorizationDescription> should render component",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var formData = _sparseFormDataExamples.vso;\nvar _render = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_MedicalSelectAuthorizationDescription.MedicalSelectAuthorizationDescription, {\n    formData: formData\n  })),\n  container = _render.container;\n(0, _chai.expect)(container).to.exist;",
              "err": {},
              "uuid": "5ea15c41-67c6-4911-8b43-284200e48712",
              "parentUUID": "b9f9dd8d-4d7d-4a2c-a4fa-799d1bc4660d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [
            {
              "uuid": "d51c500b-03e2-4991-a179-8919ee598855",
              "title": "when the selected representative is an attorney",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/representative-appoint/tests/components/MedicalSelectAuthorizationDescription.unit.spec.jsx",
              "file": "/src/applications/representative-appoint/tests/components/MedicalSelectAuthorizationDescription.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should include \"Attorney\"",
                  "fullTitle": "<MedicalSelectAuthorizationDescription> when the selected representative is an attorney should include \"Attorney\"",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var formData = _sparseFormDataExamples.attorney;\nvar _render2 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_MedicalSelectAuthorizationDescription.MedicalSelectAuthorizationDescription, {\n    formData: formData\n  })),\n  container = _render2.container;\nvar content = (0, _ui.$)('p', container);\n(0, _chai.expect)(content.textContent).to.contain('Attorney');",
                  "err": {},
                  "uuid": "f10a84b3-8f26-4367-8a60-773d0329253f",
                  "parentUUID": "d51c500b-03e2-4991-a179-8919ee598855",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "f10a84b3-8f26-4367-8a60-773d0329253f"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "4ee04a29-626b-4d6d-94cb-90373d973080",
              "title": "when the selected representative is a claims agent",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/representative-appoint/tests/components/MedicalSelectAuthorizationDescription.unit.spec.jsx",
              "file": "/src/applications/representative-appoint/tests/components/MedicalSelectAuthorizationDescription.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should include \"Claims Agent\"",
                  "fullTitle": "<MedicalSelectAuthorizationDescription> when the selected representative is a claims agent should include \"Claims Agent\"",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var formData = _sparseFormDataExamples.agent;\nvar _render3 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_MedicalSelectAuthorizationDescription.MedicalSelectAuthorizationDescription, {\n    formData: formData\n  })),\n  container = _render3.container;\nvar content = (0, _ui.$)('p', container);\n(0, _chai.expect)(content.textContent).to.contain('Claims Agent');",
                  "err": {},
                  "uuid": "cc81be08-a9a0-4f39-8e40-942b73274ef2",
                  "parentUUID": "4ee04a29-626b-4d6d-94cb-90373d973080",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "cc81be08-a9a0-4f39-8e40-942b73274ef2"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "138bf2d4-80fd-4cc5-a63f-1dd3321fc960",
              "title": "when the selected representative is a vso representative",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/representative-appoint/tests/components/MedicalSelectAuthorizationDescription.unit.spec.jsx",
              "file": "/src/applications/representative-appoint/tests/components/MedicalSelectAuthorizationDescription.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should include \"VSO Representative\"",
                  "fullTitle": "<MedicalSelectAuthorizationDescription> when the selected representative is a vso representative should include \"VSO Representative\"",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var formData = _sparseFormDataExamples.vso;\nvar _render4 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_MedicalSelectAuthorizationDescription.MedicalSelectAuthorizationDescription, {\n    formData: formData\n  })),\n  container = _render4.container;\nvar content = (0, _ui.$)('p', container);\n(0, _chai.expect)(content.textContent).to.contain('VSO Representative');",
                  "err": {},
                  "uuid": "bb8b1632-6d71-4f94-827c-a861141cde0c",
                  "parentUUID": "138bf2d4-80fd-4cc5-a63f-1dd3321fc960",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "bb8b1632-6d71-4f94-827c-a861141cde0c"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "2df8ebbb-aae7-4584-bc72-0667a5a4a675",
              "title": "when the selected representative is an organization",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/representative-appoint/tests/components/MedicalSelectAuthorizationDescription.unit.spec.jsx",
              "file": "/src/applications/representative-appoint/tests/components/MedicalSelectAuthorizationDescription.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should include \"Organization\"",
                  "fullTitle": "<MedicalSelectAuthorizationDescription> when the selected representative is an organization should include \"Organization\"",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var formData = _sparseFormDataExamples.org;\nvar _render5 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_MedicalSelectAuthorizationDescription.MedicalSelectAuthorizationDescription, {\n    formData: formData\n  })),\n  container = _render5.container;\nvar content = (0, _ui.$)('p', container);\n(0, _chai.expect)(content.textContent).to.contain('Organization');",
                  "err": {},
                  "uuid": "16e6f453-09cd-47bb-be39-4a25a9bf518b",
                  "parentUUID": "2df8ebbb-aae7-4584-bc72-0667a5a4a675",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "16e6f453-09cd-47bb-be39-4a25a9bf518b"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "1c2c3738-9b3c-4716-b514-628b284487f9",
              "title": "when there is no selected rep",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/representative-appoint/tests/components/MedicalSelectAuthorizationDescription.unit.spec.jsx",
              "file": "/src/applications/representative-appoint/tests/components/MedicalSelectAuthorizationDescription.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should include \"VSO Representative\"",
                  "fullTitle": "<MedicalSelectAuthorizationDescription> when there is no selected rep should include \"VSO Representative\"",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var formData = {};\nvar _render6 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_MedicalSelectAuthorizationDescription.MedicalSelectAuthorizationDescription, {\n    formData: formData\n  })),\n  container = _render6.container;\nvar content = (0, _ui.$)('p', container);\n(0, _chai.expect)(content.textContent).to.contain('VSO Representative');",
                  "err": {},
                  "uuid": "8dc1b9b2-0154-4076-a970-63ad434c91b2",
                  "parentUUID": "1c2c3738-9b3c-4716-b514-628b284487f9",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "8dc1b9b2-0154-4076-a970-63ad434c91b2"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 3,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            }
          ],
          "passes": [
            "5ea15c41-67c6-4911-8b43-284200e48712"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "9449a434-9663-4f50-b51f-a6a603e1ff8b",
          "title": "<OutsideVAAuthorizationDescription>",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/representative-appoint/tests/components/OutsideVAAuthorizationDescription.unit.spec.jsx",
          "file": "/src/applications/representative-appoint/tests/components/OutsideVAAuthorizationDescription.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should render component",
              "fullTitle": "<OutsideVAAuthorizationDescription> should render component",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var formData = _sparseFormDataExamples.vso;\nvar _render = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_OutsideVAAuthorizationDescription.OutsideVAAuthorizationDescription, {\n    formData: formData\n  })),\n  container = _render.container;\n(0, _chai.expect)(container).to.exist;",
              "err": {},
              "uuid": "c9fe6530-2eb1-4fec-9500-4128440d6ef6",
              "parentUUID": "9449a434-9663-4f50-b51f-a6a603e1ff8b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [
            {
              "uuid": "69ab0aa1-6d17-42b4-8158-0f165e5ce7fe",
              "title": "when the selected representative is an attorney",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/representative-appoint/tests/components/OutsideVAAuthorizationDescription.unit.spec.jsx",
              "file": "/src/applications/representative-appoint/tests/components/OutsideVAAuthorizationDescription.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should include \"Attorney\"",
                  "fullTitle": "<OutsideVAAuthorizationDescription> when the selected representative is an attorney should include \"Attorney\"",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var formData = _sparseFormDataExamples.attorney;\nvar _render2 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_OutsideVAAuthorizationDescription.OutsideVAAuthorizationDescription, {\n    formData: formData\n  })),\n  container = _render2.container;\nvar content = (0, _ui.$)('p', container);\n(0, _chai.expect)(content.textContent).to.contain('Attorney');",
                  "err": {},
                  "uuid": "2873e5d0-96e9-4f8b-a715-2e60faec313d",
                  "parentUUID": "69ab0aa1-6d17-42b4-8158-0f165e5ce7fe",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "2873e5d0-96e9-4f8b-a715-2e60faec313d"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "aa887260-b942-4d01-b520-5088e1d5b840",
              "title": "when the selected representative is a claims agent",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/representative-appoint/tests/components/OutsideVAAuthorizationDescription.unit.spec.jsx",
              "file": "/src/applications/representative-appoint/tests/components/OutsideVAAuthorizationDescription.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should include \"Claims Agent\"",
                  "fullTitle": "<OutsideVAAuthorizationDescription> when the selected representative is a claims agent should include \"Claims Agent\"",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var formData = _sparseFormDataExamples.agent;\nvar _render3 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_OutsideVAAuthorizationDescription.OutsideVAAuthorizationDescription, {\n    formData: formData\n  })),\n  container = _render3.container;\nvar content = (0, _ui.$)('p', container);\n(0, _chai.expect)(content.textContent).to.contain('Claims Agent');",
                  "err": {},
                  "uuid": "cd821a54-70de-4b43-aba3-c941c60724b8",
                  "parentUUID": "aa887260-b942-4d01-b520-5088e1d5b840",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "cd821a54-70de-4b43-aba3-c941c60724b8"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "ca0049c2-f175-47cc-8e8f-914e29139680",
              "title": "when the selected representative is a vso representative",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/representative-appoint/tests/components/OutsideVAAuthorizationDescription.unit.spec.jsx",
              "file": "/src/applications/representative-appoint/tests/components/OutsideVAAuthorizationDescription.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should include \"VSO Representative\"",
                  "fullTitle": "<OutsideVAAuthorizationDescription> when the selected representative is a vso representative should include \"VSO Representative\"",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var formData = _sparseFormDataExamples.vso;\nvar _render4 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_OutsideVAAuthorizationDescription.OutsideVAAuthorizationDescription, {\n    formData: formData\n  })),\n  container = _render4.container;\nvar content = (0, _ui.$)('p', container);\n(0, _chai.expect)(content.textContent).to.contain('VSO Representative');",
                  "err": {},
                  "uuid": "b1091f3e-a70b-48a1-b429-877aa8d7333f",
                  "parentUUID": "ca0049c2-f175-47cc-8e8f-914e29139680",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "b1091f3e-a70b-48a1-b429-877aa8d7333f"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "44ef894c-cb37-49af-adcb-329535eec182",
              "title": "when the selected representative is an organization",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/representative-appoint/tests/components/OutsideVAAuthorizationDescription.unit.spec.jsx",
              "file": "/src/applications/representative-appoint/tests/components/OutsideVAAuthorizationDescription.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should include \"Organization\"",
                  "fullTitle": "<OutsideVAAuthorizationDescription> when the selected representative is an organization should include \"Organization\"",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var formData = _sparseFormDataExamples.org;\nvar _render5 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_OutsideVAAuthorizationDescription.OutsideVAAuthorizationDescription, {\n    formData: formData\n  })),\n  container = _render5.container;\nvar content = (0, _ui.$)('p', container);\n(0, _chai.expect)(content.textContent).to.contain('Organization');",
                  "err": {},
                  "uuid": "73c4dea5-f8dd-46e5-8349-93c85fd27620",
                  "parentUUID": "44ef894c-cb37-49af-adcb-329535eec182",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "73c4dea5-f8dd-46e5-8349-93c85fd27620"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "16a5c152-d23d-47c8-a741-ac843ddb1b0a",
              "title": "when there is no selected rep",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/representative-appoint/tests/components/OutsideVAAuthorizationDescription.unit.spec.jsx",
              "file": "/src/applications/representative-appoint/tests/components/OutsideVAAuthorizationDescription.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should include \"VSO Representative\"",
                  "fullTitle": "<OutsideVAAuthorizationDescription> when there is no selected rep should include \"VSO Representative\"",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var formData = {};\nvar _render6 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_OutsideVAAuthorizationDescription.OutsideVAAuthorizationDescription, {\n    formData: formData\n  })),\n  container = _render6.container;\nvar content = (0, _ui.$)('p', container);\n(0, _chai.expect)(content.textContent).to.contain('VSO Representative');",
                  "err": {},
                  "uuid": "a73e42d5-d52e-4459-9843-cfae5c2b4d2d",
                  "parentUUID": "16a5c152-d23d-47c8-a741-ac843ddb1b0a",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "a73e42d5-d52e-4459-9843-cfae5c2b4d2d"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            }
          ],
          "passes": [
            "c9fe6530-2eb1-4fec-9500-4128440d6ef6"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "d83b0f82-cbb3-4d57-8696-0aae124d87e8",
          "title": "<OutsideVAAuthorizationNameDescription>",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/representative-appoint/tests/components/OutsideVAAuthorizationNameDescription.unit.spec.jsx",
          "file": "/src/applications/representative-appoint/tests/components/OutsideVAAuthorizationNameDescription.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should render component",
              "fullTitle": "<OutsideVAAuthorizationNameDescription> should render component",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var formData = _sparseFormDataExamples.vso;\nvar _render = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_OutsideVAAuthorizationNameDescription.OutsideVAAuthorizationNameDescription, {\n    formData: formData\n  })),\n  container = _render.container;\n(0, _chai.expect)(container).to.exist;",
              "err": {},
              "uuid": "aecda985-11c7-4d0b-9282-1c037c1753b3",
              "parentUUID": "d83b0f82-cbb3-4d57-8696-0aae124d87e8",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [
            {
              "uuid": "ad265ec9-099c-4901-8396-790b351a9b63",
              "title": "when the selected representative is an attorney",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/representative-appoint/tests/components/OutsideVAAuthorizationNameDescription.unit.spec.jsx",
              "file": "/src/applications/representative-appoint/tests/components/OutsideVAAuthorizationNameDescription.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should include \"Attorney\"",
                  "fullTitle": "<OutsideVAAuthorizationNameDescription> when the selected representative is an attorney should include \"Attorney\"",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var formData = _sparseFormDataExamples.attorney;\nvar _render2 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_OutsideVAAuthorizationNameDescription.OutsideVAAuthorizationNameDescription, {\n    formData: formData\n  })),\n  container = _render2.container;\nvar content = (0, _ui.$)('p', container);\n(0, _chai.expect)(content.textContent).to.contain('Attorney');",
                  "err": {},
                  "uuid": "f9987b4d-bb75-4078-aaf0-38c5606c8bf7",
                  "parentUUID": "ad265ec9-099c-4901-8396-790b351a9b63",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "f9987b4d-bb75-4078-aaf0-38c5606c8bf7"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "57980259-64ef-4af7-bc3f-d639b00f3552",
              "title": "when the selected representative is a claims agent",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/representative-appoint/tests/components/OutsideVAAuthorizationNameDescription.unit.spec.jsx",
              "file": "/src/applications/representative-appoint/tests/components/OutsideVAAuthorizationNameDescription.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should include \"Claims Agent\"",
                  "fullTitle": "<OutsideVAAuthorizationNameDescription> when the selected representative is a claims agent should include \"Claims Agent\"",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var formData = _sparseFormDataExamples.agent;\nvar _render3 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_OutsideVAAuthorizationNameDescription.OutsideVAAuthorizationNameDescription, {\n    formData: formData\n  })),\n  container = _render3.container;\nvar content = (0, _ui.$)('p', container);\n(0, _chai.expect)(content.textContent).to.contain('Claims Agent');",
                  "err": {},
                  "uuid": "9959caca-b7f0-43cd-8cf0-8195d64e22e7",
                  "parentUUID": "57980259-64ef-4af7-bc3f-d639b00f3552",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "9959caca-b7f0-43cd-8cf0-8195d64e22e7"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "3e691aaf-5873-4856-af38-8d27c9fb7a78",
              "title": "when the selected representative is a vso representative",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/representative-appoint/tests/components/OutsideVAAuthorizationNameDescription.unit.spec.jsx",
              "file": "/src/applications/representative-appoint/tests/components/OutsideVAAuthorizationNameDescription.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should include \"VSO Representative\"",
                  "fullTitle": "<OutsideVAAuthorizationNameDescription> when the selected representative is a vso representative should include \"VSO Representative\"",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var formData = _sparseFormDataExamples.vso;\nvar _render4 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_OutsideVAAuthorizationNameDescription.OutsideVAAuthorizationNameDescription, {\n    formData: formData\n  })),\n  container = _render4.container;\nvar content = (0, _ui.$)('p', container);\n(0, _chai.expect)(content.textContent).to.contain('VSO Representative');",
                  "err": {},
                  "uuid": "89f28995-edda-4923-b84f-e8a612a39b88",
                  "parentUUID": "3e691aaf-5873-4856-af38-8d27c9fb7a78",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "89f28995-edda-4923-b84f-e8a612a39b88"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "dd049944-f3bc-493f-b287-d450a8ffb68e",
              "title": "when the selected representative is an organization",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/representative-appoint/tests/components/OutsideVAAuthorizationNameDescription.unit.spec.jsx",
              "file": "/src/applications/representative-appoint/tests/components/OutsideVAAuthorizationNameDescription.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should include \"Organization\"",
                  "fullTitle": "<OutsideVAAuthorizationNameDescription> when the selected representative is an organization should include \"Organization\"",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var formData = _sparseFormDataExamples.org;\nvar _render5 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_OutsideVAAuthorizationNameDescription.OutsideVAAuthorizationNameDescription, {\n    formData: formData\n  })),\n  container = _render5.container;\nvar content = (0, _ui.$)('p', container);\n(0, _chai.expect)(content.textContent).to.contain('Organization');",
                  "err": {},
                  "uuid": "2c79e937-79c1-49ac-9d3f-951fa1885863",
                  "parentUUID": "dd049944-f3bc-493f-b287-d450a8ffb68e",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "2c79e937-79c1-49ac-9d3f-951fa1885863"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "f981cb1d-b54e-450b-b959-e728693c649b",
              "title": "when there is no selected rep",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/representative-appoint/tests/components/OutsideVAAuthorizationNameDescription.unit.spec.jsx",
              "file": "/src/applications/representative-appoint/tests/components/OutsideVAAuthorizationNameDescription.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should include \"VSO Representative\"",
                  "fullTitle": "<OutsideVAAuthorizationNameDescription> when there is no selected rep should include \"VSO Representative\"",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var formData = {};\nvar _render6 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_OutsideVAAuthorizationNameDescription.OutsideVAAuthorizationNameDescription, {\n    formData: formData\n  })),\n  container = _render6.container;\nvar content = (0, _ui.$)('p', container);\n(0, _chai.expect)(content.textContent).to.contain('VSO Representative');",
                  "err": {},
                  "uuid": "4cdd4e89-4e18-4dd1-a6b2-0e9fded8201d",
                  "parentUUID": "f981cb1d-b54e-450b-b959-e728693c649b",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "4cdd4e89-4e18-4dd1-a6b2-0e9fded8201d"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            }
          ],
          "passes": [
            "aecda985-11c7-4d0b-9282-1c037c1753b3"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "8d85d377-76a7-4cf9-8561-f6d850f8f7bd",
          "title": "<OutsideVAAuthorizationUnsureNote>",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/representative-appoint/tests/components/OutsideVAAuthorizationUnsureNote.unit.spec.jsx",
          "file": "/src/applications/representative-appoint/tests/components/OutsideVAAuthorizationUnsureNote.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should render component",
              "fullTitle": "<OutsideVAAuthorizationUnsureNote> should render component",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps = getProps({\n    formData: _sparseFormDataExamples.vso\n  }),\n  mockStore = _getProps.mockStore;\nvar _render = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_OutsideVAAuthorizationUnsureNote.default, null))),\n  container = _render.container;\n(0, _chai.expect)(container).to.exist;",
              "err": {},
              "uuid": "eed390ae-8719-4a43-9308-a2626f81f394",
              "parentUUID": "8d85d377-76a7-4cf9-8561-f6d850f8f7bd",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [
            {
              "uuid": "33f99664-d842-4327-a685-0cba8f949aa8",
              "title": "when the selected representative is an attorney",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/representative-appoint/tests/components/OutsideVAAuthorizationUnsureNote.unit.spec.jsx",
              "file": "/src/applications/representative-appoint/tests/components/OutsideVAAuthorizationUnsureNote.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should include \"Attorney\"",
                  "fullTitle": "<OutsideVAAuthorizationUnsureNote> when the selected representative is an attorney should include \"Attorney\"",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var _getProps2 = getProps({\n    formData: _sparseFormDataExamples.attorney\n  }),\n  mockStore = _getProps2.mockStore;\nvar _render2 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_OutsideVAAuthorizationUnsureNote.default, null))),\n  container = _render2.container;\nvar content = (0, _ui.$)('p', container);\n(0, _chai.expect)(content.textContent).to.contain('Attorney');",
                  "err": {},
                  "uuid": "e9c5eb6e-a36e-47f6-8ddc-57cd3ca6f4d6",
                  "parentUUID": "33f99664-d842-4327-a685-0cba8f949aa8",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "e9c5eb6e-a36e-47f6-8ddc-57cd3ca6f4d6"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "74e9def1-575c-4262-bcdf-773773a22f8e",
              "title": "when the selected representative is a claims agent",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/representative-appoint/tests/components/OutsideVAAuthorizationUnsureNote.unit.spec.jsx",
              "file": "/src/applications/representative-appoint/tests/components/OutsideVAAuthorizationUnsureNote.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should include \"Claims Agent\"",
                  "fullTitle": "<OutsideVAAuthorizationUnsureNote> when the selected representative is a claims agent should include \"Claims Agent\"",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var _getProps3 = getProps({\n    formData: _sparseFormDataExamples.agent\n  }),\n  mockStore = _getProps3.mockStore;\nvar _render3 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_OutsideVAAuthorizationUnsureNote.default, null))),\n  container = _render3.container;\nvar content = (0, _ui.$)('p', container);\n(0, _chai.expect)(content.textContent).to.contain('Claims Agent');",
                  "err": {},
                  "uuid": "ce4baf9c-4f53-404c-8203-df4169d747ca",
                  "parentUUID": "74e9def1-575c-4262-bcdf-773773a22f8e",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "ce4baf9c-4f53-404c-8203-df4169d747ca"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "19054b31-a049-44cc-b784-68e30d2405f6",
              "title": "when the selected representative is a vso representative",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/representative-appoint/tests/components/OutsideVAAuthorizationUnsureNote.unit.spec.jsx",
              "file": "/src/applications/representative-appoint/tests/components/OutsideVAAuthorizationUnsureNote.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should include \"VSO Representative\"",
                  "fullTitle": "<OutsideVAAuthorizationUnsureNote> when the selected representative is a vso representative should include \"VSO Representative\"",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var _getProps4 = getProps({\n    formData: _sparseFormDataExamples.vso\n  }),\n  props = _getProps4.props,\n  mockStore = _getProps4.mockStore;\nvar _render4 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_OutsideVAAuthorizationUnsureNote.default, props))),\n  container = _render4.container;\nvar content = (0, _ui.$)('p', container);\n(0, _chai.expect)(content.textContent).to.contain('VSO Representative');",
                  "err": {},
                  "uuid": "57a771b7-417f-468d-9871-5ff0d86d7413",
                  "parentUUID": "19054b31-a049-44cc-b784-68e30d2405f6",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "57a771b7-417f-468d-9871-5ff0d86d7413"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "c76fb5a5-7f7c-4a5a-8035-c869c626f249",
              "title": "when the selected representative is an organization",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/representative-appoint/tests/components/OutsideVAAuthorizationUnsureNote.unit.spec.jsx",
              "file": "/src/applications/representative-appoint/tests/components/OutsideVAAuthorizationUnsureNote.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should include \"Organization\"",
                  "fullTitle": "<OutsideVAAuthorizationUnsureNote> when the selected representative is an organization should include \"Organization\"",
                  "timedOut": false,
                  "duration": 5,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var _getProps5 = getProps({\n    formData: _sparseFormDataExamples.org\n  }),\n  mockStore = _getProps5.mockStore;\nvar _render5 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_OutsideVAAuthorizationUnsureNote.default, null))),\n  container = _render5.container;\nvar content = (0, _ui.$)('p', container);\n(0, _chai.expect)(content.textContent).to.contain('Organization');",
                  "err": {},
                  "uuid": "f449a38f-7721-4053-b6a2-be1b1e56bc9e",
                  "parentUUID": "c76fb5a5-7f7c-4a5a-8035-c869c626f249",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "f449a38f-7721-4053-b6a2-be1b1e56bc9e"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 5,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "3c889d49-5a7d-4901-9882-3271afaac9d7",
              "title": "when there is no selected rep",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/representative-appoint/tests/components/OutsideVAAuthorizationUnsureNote.unit.spec.jsx",
              "file": "/src/applications/representative-appoint/tests/components/OutsideVAAuthorizationUnsureNote.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should include \"VSO Representative\"",
                  "fullTitle": "<OutsideVAAuthorizationUnsureNote> when there is no selected rep should include \"VSO Representative\"",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var _getProps6 = getProps(),\n  mockStore = _getProps6.mockStore;\nvar _render6 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_OutsideVAAuthorizationUnsureNote.default, null))),\n  container = _render6.container;\nvar content = (0, _ui.$)('p', container);\n(0, _chai.expect)(content.textContent).to.contain('VSO Representative');",
                  "err": {},
                  "uuid": "203addd0-d826-4bec-8a39-97c36733dd2b",
                  "parentUUID": "3c889d49-5a7d-4901-9882-3271afaac9d7",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "203addd0-d826-4bec-8a39-97c36733dd2b"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 3,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            }
          ],
          "passes": [
            "eed390ae-8719-4a43-9308-a2626f81f394"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "b5eda383-3ab4-4d5e-85e0-e159cda46a8b",
          "title": "Phone Component",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/representative-appoint/tests/components/Phone.unit.spec.jsx",
          "file": "/src/applications/representative-appoint/tests/components/Phone.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should render the phone link with correct contact and extension",
              "fullTitle": "Phone Component should render the phone link with correct contact and extension",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _render = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_Phone.default, {\n    contact: contact,\n    extension: extension,\n    recordClick: mockRecordClick\n  })),\n  container = _render.container;\nvar phoneLink = (0, _ui.$)('va-telephone', container);\n(0, _chai.expect)(phoneLink).to.exist;\n(0, _chai.expect)(phoneLink.getAttribute('contact')).to.equal(contact);\n(0, _chai.expect)(phoneLink.getAttribute('extension')).to.equal(extension);",
              "err": {},
              "uuid": "efe8a826-5c4d-4e3c-bc9b-e416fee52a48",
              "parentUUID": "b5eda383-3ab4-4d5e-85e0-e159cda46a8b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should call recordClick when the phone link is clicked",
              "fullTitle": "Phone Component should call recordClick when the phone link is clicked",
              "timedOut": false,
              "duration": 3,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var recordClickSpy = _sinon.default.spy();\nvar _render2 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_Phone.default, {\n    contact: contact,\n    extension: extension,\n    recordClick: recordClickSpy\n  })),\n  container = _render2.container;\nvar phoneLink = (0, _ui.$)('va-telephone', container);\nphoneLink.click();\n(0, _chai.expect)(recordClickSpy.calledOnce).to.be.true;",
              "err": {},
              "uuid": "b47dc6a3-909f-493b-888f-36aa484e033c",
              "parentUUID": "b5eda383-3ab4-4d5e-85e0-e159cda46a8b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "efe8a826-5c4d-4e3c-bc9b-e416fee52a48",
            "b47dc6a3-909f-493b-888f-36aa484e033c"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 5,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "1d3f03c9-a417-4ea0-8e63-cccb4f6c95a1",
          "title": "<ReplaceAccreditedRepresentative>",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/representative-appoint/tests/components/ReplaceAccreditedRepresentative.unit.spec.jsx",
          "file": "/src/applications/representative-appoint/tests/components/ReplaceAccreditedRepresentative.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should render component",
              "fullTitle": "<ReplaceAccreditedRepresentative> should render component",
              "timedOut": false,
              "duration": 8,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps = getProps(),\n  props = _getProps.props,\n  mockStore = _getProps.mockStore;\nvar _render = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_ReplaceAccreditedRepresentative.ReplaceAccreditedRepresentative, props))),\n  container = _render.container;\n(0, _chai.expect)(container).to.exist;",
              "err": {},
              "uuid": "053a26a1-bcb2-4fa9-a2a8-b0a847f8bdbc",
              "parentUUID": "1d3f03c9-a417-4ea0-8e63-cccb4f6c95a1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should render copy",
              "fullTitle": "<ReplaceAccreditedRepresentative> should render copy",
              "timedOut": false,
              "duration": 9,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps2 = getProps(),\n  props = _getProps2.props,\n  mockStore = _getProps2.mockStore;\nvar _render2 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_ReplaceAccreditedRepresentative.ReplaceAccreditedRepresentative, props))),\n  container = _render2.container;\n(0, _chai.expect)(container.querySelector('h4')).to.contain.text('You’ll replace this current accredited representative:');\n(0, _chai.expect)(container.querySelector('p')).to.contain.text('You’ll replace your current accredited representative with the new one you’ve selected.');",
              "err": {},
              "uuid": "754eccdd-0c49-4dfb-8963-c3c73f70cb46",
              "parentUUID": "1d3f03c9-a417-4ea0-8e63-cccb4f6c95a1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should render selected rep address",
              "fullTitle": "<ReplaceAccreditedRepresentative> should render selected rep address",
              "timedOut": false,
              "duration": 8,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps3 = getProps(),\n  props = _getProps3.props,\n  mockStore = _getProps3.mockStore;\nvar _render3 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_ReplaceAccreditedRepresentative.ReplaceAccreditedRepresentative, props))),\n  container = _render3.container;\n(0, _chai.expect)(container.querySelector('a')).to.contain.text('1608 K St NWWashington, DC 20006');",
              "err": {},
              "uuid": "12ca3f46-dc93-42b7-b15b-536f90f14930",
              "parentUUID": "1d3f03c9-a417-4ea0-8e63-cccb4f6c95a1",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [
            {
              "uuid": "1fa98eaa-cbb6-41dc-8221-239ab0cacf63",
              "title": "when the current rep is an org or VSO",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/representative-appoint/tests/components/ReplaceAccreditedRepresentative.unit.spec.jsx",
              "file": "/src/applications/representative-appoint/tests/components/ReplaceAccreditedRepresentative.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should render the work with any rep note",
                  "fullTitle": "<ReplaceAccreditedRepresentative> when the current rep is an org or VSO should render the work with any rep note",
                  "timedOut": false,
                  "duration": 8,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var _getProps4 = getProps(),\n  props = _getProps4.props,\n  mockStore = _getProps4.mockStore;\nvar _render4 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_ReplaceAccreditedRepresentative.ReplaceAccreditedRepresentative, props))),\n  container = _render4.container;\nvar usedPolicy = container.querySelector('[data-testid=\"work-with-any-VSO-note\"]');\n(0, _chai.expect)(usedPolicy).to.exist;",
                  "err": {},
                  "uuid": "875565b3-8812-4b4e-95df-bd4e5003c57d",
                  "parentUUID": "1fa98eaa-cbb6-41dc-8221-239ab0cacf63",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "875565b3-8812-4b4e-95df-bd4e5003c57d"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 8,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "370ebbdb-57e7-468d-9df8-5513686ab30a",
              "title": "when the current rep is an attorney or claims agent",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/representative-appoint/tests/components/ReplaceAccreditedRepresentative.unit.spec.jsx",
              "file": "/src/applications/representative-appoint/tests/components/ReplaceAccreditedRepresentative.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should not render the work with any rep note",
                  "fullTitle": "<ReplaceAccreditedRepresentative> when the current rep is an attorney or claims agent should not render the work with any rep note",
                  "timedOut": false,
                  "duration": 7,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var _getProps5 = getProps({\n    currentRep: attorney\n  }),\n  props = _getProps5.props,\n  mockStore = _getProps5.mockStore;\nvar _render5 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_ReplaceAccreditedRepresentative.ReplaceAccreditedRepresentative, props))),\n  container = _render5.container;\nvar usedPolicy = container.querySelector('[data-testid=\"work-with-any-VSO-note\"]');\n(0, _chai.expect)(usedPolicy).not.to.exist;",
                  "err": {},
                  "uuid": "076f22e7-fee1-4d28-8817-b451eed58b2c",
                  "parentUUID": "370ebbdb-57e7-468d-9df8-5513686ab30a",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "076f22e7-fee1-4d28-8817-b451eed58b2c"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 7,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            }
          ],
          "passes": [
            "053a26a1-bcb2-4fa9-a2a8-b0a847f8bdbc",
            "754eccdd-0c49-4dfb-8963-c3c73f70cb46",
            "12ca3f46-dc93-42b7-b15b-536f90f14930"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 25,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "c58e7162-619f-4c28-baaf-9f0c8df65bff",
          "title": "SearchResult Component",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/representative-appoint/tests/components/SearchResult.unit.spec.jsx",
          "file": "/src/applications/representative-appoint/tests/components/SearchResult.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [
            {
              "title": "\"after each\" hook in \"SearchResult Component\"",
              "fullTitle": "SearchResult Component \"after each\" hook in \"SearchResult Component\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "useV2FeatureVisibilityStub.restore();",
              "err": {},
              "uuid": "edd0f9f4-fac3-43d8-b498-5e2f0fdaf56e",
              "parentUUID": "c58e7162-619f-4c28-baaf-9f0c8df65bff",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "evaluates addressExists correctly",
              "fullTitle": "SearchResult Component evaluates addressExists correctly",
              "timedOut": false,
              "duration": 7,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var representative = {\n  data: {\n    attributes: {\n      addressLine1: '123 Main St',\n      city: '',\n      stateCode: '',\n      zipCode: ''\n    }\n  }\n};\nuseV2FeatureVisibilityStub = _sinon.default.stub(useV2FeatureToggle, 'default').returns(false);\nvar _render = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_SearchResult.SearchResult, {\n    representative: representative,\n    query: {},\n    handleSelectRepresentative: function handleSelectRepresentative() {},\n    loadingPOA: false\n  })),\n  container = _render.container;\nvar addressAnchor = container.querySelector('.address-anchor');\n(0, _chai.expect)(addressAnchor).to.exist;\n(0, _chai.expect)(addressAnchor.textContent).to.contain('123 Main St');",
              "err": {},
              "uuid": "13522bef-da02-4437-b596-da4cacf16bfd",
              "parentUUID": "c58e7162-619f-4c28-baaf-9f0c8df65bff",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "evaluates addressExists correctly when only city, stateCode, and zipCode exist",
              "fullTitle": "SearchResult Component evaluates addressExists correctly when only city, stateCode, and zipCode exist",
              "timedOut": false,
              "duration": 3,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var representative = {\n  data: {\n    attributes: {\n      city: 'Anytown',\n      stateCode: 'CT',\n      zipCode: '43456'\n    }\n  }\n};\nuseV2FeatureVisibilityStub = _sinon.default.stub(useV2FeatureToggle, 'default').returns(false);\nvar _render2 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_SearchResult.SearchResult, {\n    representative: representative,\n    query: {},\n    handleSelectRepresentative: function handleSelectRepresentative() {},\n    loadingPOA: false\n  })),\n  container = _render2.container;\nvar addressAnchor = container.querySelector('.address-anchor');\n(0, _chai.expect)(addressAnchor).to.exist;\n(0, _chai.expect)(addressAnchor.textContent).to.contain('Anytown, CT');",
              "err": {},
              "uuid": "6a446fec-2cba-45be-8397-b8ee2ad8731d",
              "parentUUID": "c58e7162-619f-4c28-baaf-9f0c8df65bff",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "includes the representative name in the select button text",
              "fullTitle": "SearchResult Component includes the representative name in the select button text",
              "timedOut": false,
              "duration": 4,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var representative = {\n  data: {\n    id: 1,\n    attributes: {\n      addressLine1: '123 Main St',\n      city: '',\n      stateCode: '',\n      zipCode: '',\n      fullName: 'Robert Smith'\n    }\n  }\n};\nuseV2FeatureVisibilityStub = _sinon.default.stub(useV2FeatureToggle, 'default').returns(false);\nvar _render3 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_SearchResult.SearchResult, {\n    representative: representative,\n    query: {},\n    handleSelectRepresentative: function handleSelectRepresentative() {},\n    loadingPOA: false\n  })),\n  container = _render3.container;\nvar selectButton = container.querySelector('[data-testid=\"rep-select-1\"]');\n(0, _chai.expect)(selectButton).to.exist;\n(0, _chai.expect)(selectButton.getAttribute('text')).to.contain('Robert Smith');",
              "err": {},
              "uuid": "8920ad4f-519b-4406-8f5e-f0164f3b9b98",
              "parentUUID": "c58e7162-619f-4c28-baaf-9f0c8df65bff",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [
            {
              "uuid": "25c102f5-3c56-4cab-990d-0803fd53ff59",
              "title": "when v2 is enabled",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/representative-appoint/tests/components/SearchResult.unit.spec.jsx",
              "file": "/src/applications/representative-appoint/tests/components/SearchResult.unit.spec.jsx",
              "beforeHooks": [
                {
                  "title": "\"before each\" hook in \"when v2 is enabled\"",
                  "fullTitle": "SearchResult Component when v2 is enabled \"before each\" hook in \"when v2 is enabled\"",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "formData = {\n  'view:v2IsEnabled': true,\n  userIsDigitalSubmitEligible: true\n};",
                  "err": {},
                  "uuid": "3c06593a-1d54-4071-911e-90cf9ceabe21",
                  "parentUUID": "25c102f5-3c56-4cab-990d-0803fd53ff59",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [],
              "tests": [],
              "suites": [
                {
                  "uuid": "937ec769-17dc-48f1-91ed-85890f60d75c",
                  "title": "when the user is userIsDigitalSubmitEligible",
                  "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/representative-appoint/tests/components/SearchResult.unit.spec.jsx",
                  "file": "/src/applications/representative-appoint/tests/components/SearchResult.unit.spec.jsx",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [],
                  "suites": [
                    {
                      "uuid": "3318d147-79f3-4a52-8afd-77681d0d09bf",
                      "title": "when the representative accepts digital submission",
                      "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/representative-appoint/tests/components/SearchResult.unit.spec.jsx",
                      "file": "/src/applications/representative-appoint/tests/components/SearchResult.unit.spec.jsx",
                      "beforeHooks": [],
                      "afterHooks": [],
                      "tests": [
                        {
                          "title": "displays digital submission methods",
                          "fullTitle": "SearchResult Component when v2 is enabled when the user is userIsDigitalSubmitEligible when the representative accepts digital submission displays digital submission methods",
                          "timedOut": false,
                          "duration": 4,
                          "state": "passed",
                          "speed": "slow",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "var _formData, _formData2;\nformData.representative = {\n  data: {\n    id: 1,\n    type: 'individual',\n    attributes: {\n      addressLine1: '123 Main St',\n      city: '',\n      stateCode: '',\n      zipCode: '',\n      fullName: 'Robert Smith',\n      individualType: 'representative',\n      accreditedOrganizations: {\n        data: [{\n          attributes: {\n            canAcceptDigitalPoaRequests: true\n          }\n        }]\n      }\n    }\n  }\n};\nvar _render4 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_SearchResult.SearchResult, {\n    representative: formData.representative,\n    query: {},\n    handleSelectRepresentative: function handleSelectRepresentative() {},\n    loadingPOA: false,\n    userIsDigitalSubmitEligible: ((_formData = formData) === null || _formData === void 0 ? void 0 : _formData.userIsDigitalSubmitEligible) && ((_formData2 = formData) === null || _formData2 === void 0 ? void 0 : _formData2['view:v2IsEnabled'])\n  })),\n  container = _render4.container;\nvar digitalSubmissionMethods = container.querySelector('[data-testid=\"submission-methods-with-digital\"]');\nvar nonDigitalSubmissionMethods = container.querySelector('[data-testid=\"submission-methods-without-digital\"]');\n(0, _chai.expect)(digitalSubmissionMethods).to.exist;\n(0, _chai.expect)(nonDigitalSubmissionMethods).not.to.exist;",
                          "err": {},
                          "uuid": "4b1c4215-1203-48f1-a7a3-1b44f6772141",
                          "parentUUID": "3318d147-79f3-4a52-8afd-77681d0d09bf",
                          "isHook": false,
                          "skipped": false
                        }
                      ],
                      "suites": [],
                      "passes": [
                        "4b1c4215-1203-48f1-a7a3-1b44f6772141"
                      ],
                      "failures": [],
                      "pending": [],
                      "skipped": [],
                      "duration": 4,
                      "root": false,
                      "rootEmpty": false,
                      "_timeout": 10000
                    },
                    {
                      "uuid": "10f5f4e4-4254-435d-a5d6-363b18b774a1",
                      "title": "when the representative does not accept digital submission",
                      "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/representative-appoint/tests/components/SearchResult.unit.spec.jsx",
                      "file": "/src/applications/representative-appoint/tests/components/SearchResult.unit.spec.jsx",
                      "beforeHooks": [],
                      "afterHooks": [],
                      "tests": [
                        {
                          "title": "displays non digital submission methods",
                          "fullTitle": "SearchResult Component when v2 is enabled when the user is userIsDigitalSubmitEligible when the representative does not accept digital submission displays non digital submission methods",
                          "timedOut": false,
                          "duration": 4,
                          "state": "passed",
                          "speed": "slow",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "var _formData3, _formData4;\nformData.representative = {\n  data: {\n    id: 1,\n    type: 'individual',\n    attributes: {\n      addressLine1: '123 Main St',\n      city: '',\n      stateCode: '',\n      zipCode: '',\n      fullName: 'Robert Smith',\n      individualType: 'representative',\n      accreditedOrganizations: {\n        data: [{\n          attributes: {\n            canAcceptDigitalPoaRequests: false\n          }\n        }]\n      }\n    }\n  }\n};\nvar _render5 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_SearchResult.SearchResult, {\n    representative: formData.representative,\n    query: {},\n    handleSelectRepresentative: function handleSelectRepresentative() {},\n    loadingPOA: false,\n    userIsDigitalSubmitEligible: ((_formData3 = formData) === null || _formData3 === void 0 ? void 0 : _formData3.userIsDigitalSubmitEligible) && ((_formData4 = formData) === null || _formData4 === void 0 ? void 0 : _formData4['view:v2IsEnabled'])\n  })),\n  container = _render5.container;\nvar digitalSubmissionMethods = container.querySelector('[data-testid=\"submission-methods-with-digital\"]');\nvar nonDigitalSubmissionMethods = container.querySelector('[data-testid=\"submission-methods-without-digital\"]');\n(0, _chai.expect)(digitalSubmissionMethods).not.to.exist;\n(0, _chai.expect)(nonDigitalSubmissionMethods).to.exist;",
                          "err": {},
                          "uuid": "9f286ae1-1997-4360-bc73-c04dbd5b6880",
                          "parentUUID": "10f5f4e4-4254-435d-a5d6-363b18b774a1",
                          "isHook": false,
                          "skipped": false
                        }
                      ],
                      "suites": [],
                      "passes": [
                        "9f286ae1-1997-4360-bc73-c04dbd5b6880"
                      ],
                      "failures": [],
                      "pending": [],
                      "skipped": [],
                      "duration": 4,
                      "root": false,
                      "rootEmpty": false,
                      "_timeout": 10000
                    }
                  ],
                  "passes": [],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "2b83f517-2d09-4fee-9b98-7b0742f6605d",
                  "title": "when the user is not userIsDigitalSubmitEligible",
                  "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/representative-appoint/tests/components/SearchResult.unit.spec.jsx",
                  "file": "/src/applications/representative-appoint/tests/components/SearchResult.unit.spec.jsx",
                  "beforeHooks": [
                    {
                      "title": "\"before each\" hook in \"when the user is not userIsDigitalSubmitEligible\"",
                      "fullTitle": "SearchResult Component when v2 is enabled when the user is not userIsDigitalSubmitEligible \"before each\" hook in \"when the user is not userIsDigitalSubmitEligible\"",
                      "timedOut": false,
                      "duration": 0,
                      "state": null,
                      "speed": null,
                      "pass": false,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "formData.userIsDigitalSubmitEligible = false;",
                      "err": {},
                      "uuid": "9964f195-c738-42c9-8a87-0686d8bc9859",
                      "parentUUID": "2b83f517-2d09-4fee-9b98-7b0742f6605d",
                      "isHook": true,
                      "skipped": false
                    }
                  ],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "does not display submission methods",
                      "fullTitle": "SearchResult Component when v2 is enabled when the user is not userIsDigitalSubmitEligible does not display submission methods",
                      "timedOut": false,
                      "duration": 4,
                      "state": "passed",
                      "speed": "slow",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "var _formData5, _formData6;\nvar representative = {\n  data: {\n    id: 1,\n    type: 'individual',\n    attributes: {\n      addressLine1: '123 Main St',\n      city: '',\n      stateCode: '',\n      zipCode: '',\n      fullName: 'Robert Smith',\n      individualType: 'representative'\n    }\n  }\n};\nvar _render6 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_SearchResult.SearchResult, {\n    representative: representative,\n    query: {},\n    handleSelectRepresentative: function handleSelectRepresentative() {},\n    loadingPOA: false,\n    userIsDigitalSubmitEligible: ((_formData5 = formData) === null || _formData5 === void 0 ? void 0 : _formData5.userIsDigitalSubmitEligible) && ((_formData6 = formData) === null || _formData6 === void 0 ? void 0 : _formData6['view:v2IsEnabled'])\n  })),\n  container = _render6.container;\nvar digitalSubmissionMethods = container.querySelector('[data-testid=\"submission-methods-with-digital\"]');\nvar nonDigitalSubmissionMethods = container.querySelector('[data-testid=\"submission-methods-without-digital\"]');\n(0, _chai.expect)(digitalSubmissionMethods).not.to.exist;\n(0, _chai.expect)(nonDigitalSubmissionMethods).not.to.exist;",
                      "err": {},
                      "uuid": "f22b8f09-bac3-452c-b26b-94f316f30dad",
                      "parentUUID": "2b83f517-2d09-4fee-9b98-7b0742f6605d",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "f22b8f09-bac3-452c-b26b-94f316f30dad"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 4,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                }
              ],
              "passes": [],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "174617f6-14f7-4ba6-937b-b85ba6459c06",
              "title": "when v2 is not enabled",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/representative-appoint/tests/components/SearchResult.unit.spec.jsx",
              "file": "/src/applications/representative-appoint/tests/components/SearchResult.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "does not display submission methods",
                  "fullTitle": "SearchResult Component when v2 is not enabled does not display submission methods",
                  "timedOut": false,
                  "duration": 4,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "formData.representative = {\n  data: {\n    id: 1,\n    type: 'individual',\n    attributes: {\n      addressLine1: '123 Main St',\n      city: '',\n      stateCode: '',\n      zipCode: '',\n      fullName: 'Robert Smith',\n      individualType: 'representative'\n    }\n  }\n};\nvar _render7 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_SearchResult.SearchResult, {\n    representative: formData.representative,\n    query: {},\n    handleSelectRepresentative: function handleSelectRepresentative() {},\n    loadingPOA: false,\n    userIsDigitalSubmitEligible: formData.userIsDigitalSubmitEligible && formData['view:v2IsEnabled']\n  })),\n  container = _render7.container;\nvar digitalSubmissionMethods = container.querySelector('[data-testid=\"submission-methods-with-digital\"]');\nvar nonDigitalSubmissionMethods = container.querySelector('[data-testid=\"submission-methods-without-digital\"]');\n(0, _chai.expect)(digitalSubmissionMethods).not.to.exist;\n(0, _chai.expect)(nonDigitalSubmissionMethods).not.to.exist;",
                  "err": {},
                  "uuid": "0509b33a-9655-4926-ae26-5110d84c60f0",
                  "parentUUID": "174617f6-14f7-4ba6-937b-b85ba6459c06",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "0509b33a-9655-4926-ae26-5110d84c60f0"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 4,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            }
          ],
          "passes": [
            "13522bef-da02-4437-b596-da4cacf16bfd",
            "6a446fec-2cba-45be-8397-b8ee2ad8731d",
            "8920ad4f-519b-4406-8f5e-f0164f3b9b98"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 14,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "7f82b969-c652-41ee-8782-5bfec9a87f5e",
          "title": "SearchResultsHeader Component",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/representative-appoint/tests/components/SearchResultsHeader.unit.spec.jsx",
          "file": "/src/applications/representative-appoint/tests/components/SearchResultsHeader.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "displays no results message",
              "fullTitle": "SearchResultsHeader Component displays no results message",
              "timedOut": false,
              "duration": 3,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _render = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_SearchResultsHeader.SearchResultsHeader, {\n    query: \"Bob\",\n    resultCount: 0,\n    inProgress: false\n  })),\n  container = _render.container;\nvar searchHeader = container.querySelector('.search-header');\n(0, _chai.expect)(searchHeader).to.exist;\n(0, _chai.expect)(searchHeader.textContent).to.contain('No results found for \"Bob\".');",
              "err": {},
              "uuid": "8336ee99-f817-4651-a6ab-a504625923e1",
              "parentUUID": "7f82b969-c652-41ee-8782-5bfec9a87f5e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "displays one result",
              "fullTitle": "SearchResultsHeader Component displays one result",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _render2 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_SearchResultsHeader.SearchResultsHeader, {\n    query: \"Bob\",\n    resultCount: 1,\n    inProgress: false\n  })),\n  container = _render2.container;\nvar searchHeader = container.querySelector('.search-header');\n(0, _chai.expect)(searchHeader).to.exist;\n(0, _chai.expect)(searchHeader.textContent).to.contain('Showing 1 result for \"Bob\"');",
              "err": {},
              "uuid": "8f475532-4736-4f28-ad74-857e64a2d189",
              "parentUUID": "7f82b969-c652-41ee-8782-5bfec9a87f5e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "displays multiple results",
              "fullTitle": "SearchResultsHeader Component displays multiple results",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _render3 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_SearchResultsHeader.SearchResultsHeader, {\n    query: \"Bob\",\n    resultCount: 5,\n    inProgress: false\n  })),\n  container = _render3.container;\nvar searchHeader = container.querySelector('.search-header');\n(0, _chai.expect)(searchHeader).to.exist;\n(0, _chai.expect)(searchHeader.textContent).to.contain('Showing 5 results for \"Bob\"');",
              "err": {},
              "uuid": "7a8719b6-8166-441f-8603-2b60754d4bfb",
              "parentUUID": "7f82b969-c652-41ee-8782-5bfec9a87f5e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "does not display when loading in progress",
              "fullTitle": "SearchResultsHeader Component does not display when loading in progress",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _render4 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_SearchResultsHeader.SearchResultsHeader, {\n    query: \"Bob\",\n    resultCount: 5,\n    inProgress: true\n  })),\n  container = _render4.container;\nvar searchHeader = container.querySelector('.search-header');\n(0, _chai.expect)(searchHeader).not.to.exist;",
              "err": {},
              "uuid": "e7103d1b-3c53-4d04-ac4b-88aa0cb21aff",
              "parentUUID": "7f82b969-c652-41ee-8782-5bfec9a87f5e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "8336ee99-f817-4651-a6ab-a504625923e1",
            "8f475532-4736-4f28-ad74-857e64a2d189",
            "7a8719b6-8166-441f-8603-2b60754d4bfb",
            "e7103d1b-3c53-4d04-ac4b-88aa0cb21aff"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 7,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "46f26942-a401-4f04-b224-265e71ea73ec",
          "title": "SubmissionError",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/representative-appoint/tests/components/SubmissionError.unit.spec.jsx",
          "file": "/src/applications/representative-appoint/tests/components/SubmissionError.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should render",
              "fullTitle": "SubmissionError should render",
              "timedOut": false,
              "duration": 13,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
              "err": {},
              "uuid": "60f52234-80a7-469c-bc4f-271fed1d5e76",
              "parentUUID": "46f26942-a401-4f04-b224-265e71ea73ec",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "60f52234-80a7-469c-bc4f-271fed1d5e76"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 13,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "c89d723f-4b5e-4e7d-8c0e-52a4c33a38b0",
          "title": "FormConfig depends function",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/representative-appoint/tests/config/formConfig.unit.spec.jsx",
          "file": "/src/applications/representative-appoint/tests/config/formConfig.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should hide selectAccreditedOrganization when rep status null",
              "fullTitle": "FormConfig depends function should hide selectAccreditedOrganization when rep status null",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, _chai.expect)(repPages.replaceAccreditedRepresentative.depends(_formData2.default)).to.be.false;",
              "err": {},
              "uuid": "82c26b17-ec7a-4062-b965-d50b796f87df",
              "parentUUID": "c89d723f-4b5e-4e7d-8c0e-52a4c33a38b0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should show authorizeMedicalSelect when authorizationRadio is yes",
              "fullTitle": "FormConfig depends function should show authorizeMedicalSelect when authorizationRadio is yes",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, _chai.expect)(authPages.authorizeMedicalSelect.depends(_formData2.default)).to.be.true;",
              "err": {},
              "uuid": "45d0ea8b-34ff-4d95-ac6d-c4aba6d6caa1",
              "parentUUID": "c89d723f-4b5e-4e7d-8c0e-52a4c33a38b0",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [
            {
              "uuid": "95fabd8a-0083-4afa-917a-10822895ddc5",
              "title": "21-22a",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/representative-appoint/tests/config/formConfig.unit.spec.jsx",
              "file": "/src/applications/representative-appoint/tests/config/formConfig.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should show authorizeInsideVA",
                  "fullTitle": "FormConfig depends function 21-22a should show authorizeInsideVA",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)(authPages.authorizeInsideVA.depends(_formData.default)).to.be.true;",
                  "err": {},
                  "uuid": "cb550b4e-ae13-475e-a255-ae4cc91b074d",
                  "parentUUID": "95fabd8a-0083-4afa-917a-10822895ddc5",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should show veteranServiceInformation",
                  "fullTitle": "FormConfig depends function 21-22a should show veteranServiceInformation",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)(veteranPages.veteranServiceInformation.depends(_formData.default)).to.be.true;",
                  "err": {},
                  "uuid": "d8e4cf0d-c9a4-405f-85ee-2e8dee3aff2a",
                  "parentUUID": "95fabd8a-0083-4afa-917a-10822895ddc5",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should show authorizeInsideVA",
                  "fullTitle": "FormConfig depends function 21-22a should show authorizeInsideVA",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)(authPages.authorizeInsideVA.depends(_formData.default)).to.be.true;",
                  "err": {},
                  "uuid": "06e401c6-ae3a-4469-8139-ca37fdbff9c2",
                  "parentUUID": "95fabd8a-0083-4afa-917a-10822895ddc5",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should show authorizeOutsideVA",
                  "fullTitle": "FormConfig depends function 21-22a should show authorizeOutsideVA",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)(authPages.authorizeOutsideVA.depends(_formData.default)).to.be.true;",
                  "err": {},
                  "uuid": "bfe0e1b5-e589-4d9c-8cc4-fefd871cb0a3",
                  "parentUUID": "95fabd8a-0083-4afa-917a-10822895ddc5",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should show authorizeOutsideVANames",
                  "fullTitle": "FormConfig depends function 21-22a should show authorizeOutsideVANames",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)(authPages.authorizeOutsideVANames.depends(_formData.default)).to.be.true;",
                  "err": {},
                  "uuid": "6102ffb3-75be-4f1b-80ab-7ef1593ea974",
                  "parentUUID": "95fabd8a-0083-4afa-917a-10822895ddc5",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should hide selectAccreditedOrganization",
                  "fullTitle": "FormConfig depends function 21-22a should hide selectAccreditedOrganization",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)(repPages.selectAccreditedOrganization.depends(_formData.default)).to.not.be.ok;",
                  "err": {},
                  "uuid": "6e472def-407b-46ab-ad05-2a134f8e2869",
                  "parentUUID": "95fabd8a-0083-4afa-917a-10822895ddc5",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "cb550b4e-ae13-475e-a255-ae4cc91b074d",
                "d8e4cf0d-c9a4-405f-85ee-2e8dee3aff2a",
                "06e401c6-ae3a-4469-8139-ca37fdbff9c2",
                "bfe0e1b5-e589-4d9c-8cc4-fefd871cb0a3",
                "6102ffb3-75be-4f1b-80ab-7ef1593ea974",
                "6e472def-407b-46ab-ad05-2a134f8e2869"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "5ec4cfcd-b71f-4ec3-8ca0-c46b3288a4e4",
              "title": "21-22",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/representative-appoint/tests/config/formConfig.unit.spec.jsx",
              "file": "/src/applications/representative-appoint/tests/config/formConfig.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should hide authorizeInsideVA",
                  "fullTitle": "FormConfig depends function 21-22 should hide authorizeInsideVA",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)(authPages.authorizeInsideVA.depends(_formData2.default)).to.not.be.ok;",
                  "err": {},
                  "uuid": "2dffef0f-718e-4f9e-a095-dd6c40513eb4",
                  "parentUUID": "5ec4cfcd-b71f-4ec3-8ca0-c46b3288a4e4",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should show selectAccreditedOrganization",
                  "fullTitle": "FormConfig depends function 21-22 should show selectAccreditedOrganization",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)(repPages.selectAccreditedOrganization.depends(_formData2.default)).to.be.true;",
                  "err": {},
                  "uuid": "3053e534-44ac-48be-b039-3f3110207baa",
                  "parentUUID": "5ec4cfcd-b71f-4ec3-8ca0-c46b3288a4e4",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should hide authorizeInsideVA",
                  "fullTitle": "FormConfig depends function 21-22 should hide authorizeInsideVA",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)(authPages.authorizeInsideVA.depends(_formData2.default)).to.not.be.ok;",
                  "err": {},
                  "uuid": "2ec553f5-ae3e-42e5-8981-9b8e3502a923",
                  "parentUUID": "5ec4cfcd-b71f-4ec3-8ca0-c46b3288a4e4",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should hide authorizeOutsideVA",
                  "fullTitle": "FormConfig depends function 21-22 should hide authorizeOutsideVA",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)(authPages.authorizeOutsideVA.depends(_formData2.default)).to.not.be.ok;",
                  "err": {},
                  "uuid": "1f6b339b-a5e1-413a-b5e9-fbb993b0c4fe",
                  "parentUUID": "5ec4cfcd-b71f-4ec3-8ca0-c46b3288a4e4",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should hide authorizeOutsideVANames",
                  "fullTitle": "FormConfig depends function 21-22 should hide authorizeOutsideVANames",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)(authPages.authorizeOutsideVANames.depends(_formData2.default)).to.be;",
                  "err": {},
                  "uuid": "462478f3-0ab1-4534-aa5a-763759f6680f",
                  "parentUUID": "5ec4cfcd-b71f-4ec3-8ca0-c46b3288a4e4",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should hide veteranServiceInformation",
                  "fullTitle": "FormConfig depends function 21-22 should hide veteranServiceInformation",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)(veteranPages.veteranServiceInformation.depends(_formData2.default)).to.not.be.ok;",
                  "err": {},
                  "uuid": "ab2dc6a7-584d-4d60-bfd0-3e56ff10ec33",
                  "parentUUID": "5ec4cfcd-b71f-4ec3-8ca0-c46b3288a4e4",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "2dffef0f-718e-4f9e-a095-dd6c40513eb4",
                "3053e534-44ac-48be-b039-3f3110207baa",
                "2ec553f5-ae3e-42e5-8981-9b8e3502a923",
                "1f6b339b-a5e1-413a-b5e9-fbb993b0c4fe",
                "462478f3-0ab1-4534-aa5a-763759f6680f",
                "ab2dc6a7-584d-4d60-bfd0-3e56ff10ec33"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "4dced8ed-3b1f-47ec-be86-dd572fe71e67",
              "title": "applicant is veteran",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/representative-appoint/tests/config/formConfig.unit.spec.jsx",
              "file": "/src/applications/representative-appoint/tests/config/formConfig.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should hide claimant pages",
                  "fullTitle": "FormConfig depends function applicant is veteran should hide claimant pages",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)(claimantPages.claimantRelationship.depends(mockData)).to.be.false;\n(0, _chai.expect)(claimantPages.claimantPersonalInformation.depends(mockData)).to.be.false;\n(0, _chai.expect)(claimantPages.claimantContactMailing.depends(mockData)).to.be.false;\n(0, _chai.expect)(claimantPages.claimantContactPhoneEmail.depends(mockData)).to.be.false;",
                  "err": {},
                  "uuid": "408f3b1a-f41b-4d83-91e4-0da9ea00cff7",
                  "parentUUID": "4dced8ed-3b1f-47ec-be86-dd572fe71e67",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should show veteran pages",
                  "fullTitle": "FormConfig depends function applicant is veteran should show veteran pages",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)(claimantPages.veteranPersonalInformation.depends(mockData)).to.be.true;\n(0, _chai.expect)(claimantPages.veteranContactMailing.depends(mockData)).to.be.true;\n(0, _chai.expect)(claimantPages.veteranContactPhoneEmail.depends(mockData)).to.be.true;\n(0, _chai.expect)(claimantPages.veteranIdentification.depends(mockData)).to.be.true;",
                  "err": {},
                  "uuid": "ae9689ad-21ee-4b63-ac58-4c95563f5208",
                  "parentUUID": "4dced8ed-3b1f-47ec-be86-dd572fe71e67",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should hide veteranInfo",
                  "fullTitle": "FormConfig depends function applicant is veteran should hide veteranInfo",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)(chapters.veteranInfo.depends(mockData)).to.be.false;\n(0, _chai.expect)(veteranPages.veteranPersonalInformation.depends(mockData)).to.be.false;\n(0, _chai.expect)(veteranPages.veteranContactMailingClaimant.depends(mockData)).to.be.false;\n(0, _chai.expect)(veteranPages.veteranContactPhoneEmailClaimant.depends(mockData)).to.be.false;\n(0, _chai.expect)(veteranPages.veteranIdentification.depends(mockData)).to.be.false;",
                  "err": {},
                  "uuid": "0c0abb43-8abb-4ce6-92b0-a5c67cb05bfd",
                  "parentUUID": "4dced8ed-3b1f-47ec-be86-dd572fe71e67",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "408f3b1a-f41b-4d83-91e4-0da9ea00cff7",
                "ae9689ad-21ee-4b63-ac58-4c95563f5208",
                "0c0abb43-8abb-4ce6-92b0-a5c67cb05bfd"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "dcd4b25e-76e9-4360-be6a-0eb2369d198a",
              "title": "applicant is not veteran",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/representative-appoint/tests/config/formConfig.unit.spec.jsx",
              "file": "/src/applications/representative-appoint/tests/config/formConfig.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should show claimant pages",
                  "fullTitle": "FormConfig depends function applicant is not veteran should show claimant pages",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)(claimantPages.claimantRelationship.depends(mockData)).to.be.true;\n(0, _chai.expect)(claimantPages.claimantPersonalInformation.depends(mockData)).to.be.true;\n(0, _chai.expect)(claimantPages.claimantContactMailing.depends(mockData)).to.be.true;\n(0, _chai.expect)(claimantPages.claimantContactPhoneEmail.depends(mockData)).to.be.true;",
                  "err": {},
                  "uuid": "17981715-671c-4f32-b886-a896e032adc3",
                  "parentUUID": "dcd4b25e-76e9-4360-be6a-0eb2369d198a",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should hide veteran pages",
                  "fullTitle": "FormConfig depends function applicant is not veteran should hide veteran pages",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)(claimantPages.veteranPersonalInformation.depends(mockData)).to.be.false;\n(0, _chai.expect)(claimantPages.veteranContactMailing.depends(mockData)).to.be.false;\n(0, _chai.expect)(claimantPages.veteranContactPhoneEmail.depends(mockData)).to.be.false;\n(0, _chai.expect)(claimantPages.veteranIdentification.depends(mockData)).to.be.false;",
                  "err": {},
                  "uuid": "1598c8ca-8c87-4ac0-9135-0edd71bc5616",
                  "parentUUID": "dcd4b25e-76e9-4360-be6a-0eb2369d198a",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should show veteranInfo",
                  "fullTitle": "FormConfig depends function applicant is not veteran should show veteranInfo",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)(chapters.veteranInfo.depends(mockData)).to.be.true;\n(0, _chai.expect)(veteranPages.veteranPersonalInformation.depends(mockData)).to.be.true;\n(0, _chai.expect)(veteranPages.veteranContactMailingClaimant.depends(mockData)).to.be.true;\n(0, _chai.expect)(veteranPages.veteranContactPhoneEmailClaimant.depends(mockData)).to.be.true;\n(0, _chai.expect)(veteranPages.veteranIdentification.depends(mockData)).to.be.true;",
                  "err": {},
                  "uuid": "e070faa8-c09a-4d0b-b532-d3f92d118ceb",
                  "parentUUID": "dcd4b25e-76e9-4360-be6a-0eb2369d198a",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "17981715-671c-4f32-b886-a896e032adc3",
                "1598c8ca-8c87-4ac0-9135-0edd71bc5616",
                "e070faa8-c09a-4d0b-b532-d3f92d118ceb"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            }
          ],
          "passes": [
            "82c26b17-ec7a-4062-b965-d50b796f87df",
            "45d0ea8b-34ff-4d95-ac6d-c4aba6d6caa1"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "2045602d-7030-453d-bf2f-659fc9f8f1d8",
          "title": "prefillTransformer",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/representative-appoint/tests/config/prefillTransformer.unit.spec.js",
          "file": "/src/applications/representative-appoint/tests/config/prefillTransformer.unit.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "2c706408-b300-4680-b76c-d68b55a9d588",
              "title": "when the applicant is the Veteran",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/representative-appoint/tests/config/prefillTransformer.unit.spec.js",
              "file": "/src/applications/representative-appoint/tests/config/prefillTransformer.unit.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should set the Veteran attributes with prefill information",
                  "fullTitle": "prefillTransformer when the applicant is the Veteran should set the Veteran attributes with prefill information",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var data = _objectSpread(_objectSpread({}, _prefill.default), {}, {\n  'view:applicantIsVeteran': 'Yes'\n});\nvar result = (0, _prefillTransformer.default)(data);\n(0, _chai.expect)(result.veteranFullName).to.eql({\n  first: 'Greg',\n  last: 'Anderson',\n  middle: 'A'\n});\n(0, _chai.expect)(result.veteranDateOfBirth).to.eql('1933-04-05');\n(0, _chai.expect)(result.veteranSocialSecurityNumber).to.eql('796121200');\n(0, _chai.expect)(result.veteranHomeAddress).to.eql({\n  street: '123 avenue du Maine',\n  city: 'Paris',\n  state: 'Paris',\n  country: 'FRA',\n  postalCode: '75014'\n});\n(0, _chai.expect)(result.veteranEmail).to.eql('test2@test1.net');\n(0, _chai.expect)(result.primaryPhone).to.eql('4445551212');\n(0, _chai.expect)(result['Branch of Service']).to.eql('Army');",
                  "err": {},
                  "uuid": "94aa9bde-e984-44f3-ba82-b05e8f8b4ece",
                  "parentUUID": "2c706408-b300-4680-b76c-d68b55a9d588",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should reset the applicant attributes",
                  "fullTitle": "prefillTransformer when the applicant is the Veteran should reset the applicant attributes",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var data = _objectSpread(_objectSpread({}, _prefill.default), {}, {\n  'view:applicantIsVeteran': 'Yes',\n  applicantName: 'test',\n  applicantDOB: 'test',\n  applicantEmail: 'test',\n  applicantPhone: 'test',\n  homeAddress: {\n    city: 'test',\n    country: 'test',\n    postalCode: 'test',\n    state: 'test',\n    street: 'test'\n  }\n});\nvar result = (0, _prefillTransformer.default)(data);\n(0, _chai.expect)(result.applicantName).to.be.undefined;\n(0, _chai.expect)(result.applicantDOB).to.be.undefined;\n(0, _chai.expect)(result.applicantEmail).to.be.undefined;\n(0, _chai.expect)(result.applicantPhone).to.be.undefined;\n(0, _chai.expect)(result.homeAddress).to.eql({\n  city: undefined,\n  country: undefined,\n  postalCode: undefined,\n  state: undefined,\n  street: undefined\n});",
                  "err": {},
                  "uuid": "0cbaded1-5fb6-4321-89db-1fc8a0ead1d9",
                  "parentUUID": "2c706408-b300-4680-b76c-d68b55a9d588",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "94aa9bde-e984-44f3-ba82-b05e8f8b4ece",
                "0cbaded1-5fb6-4321-89db-1fc8a0ead1d9"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "0bc189d1-4491-4370-a4fb-92179b1815c7",
              "title": "when the applicant is not the Veteran",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/representative-appoint/tests/config/prefillTransformer.unit.spec.js",
              "file": "/src/applications/representative-appoint/tests/config/prefillTransformer.unit.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should set the applicant attributes with prefill information",
                  "fullTitle": "prefillTransformer when the applicant is not the Veteran should set the applicant attributes with prefill information",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var data = _objectSpread(_objectSpread({}, _prefill.default), {}, {\n  'view:applicantIsVeteran': 'No'\n});\nvar result = (0, _prefillTransformer.default)(data);\n(0, _chai.expect)(result.applicantName).to.eql({\n  first: 'Greg',\n  last: 'Anderson',\n  middle: 'A'\n});\n(0, _chai.expect)(result.applicantDOB).to.eql('1933-04-05');\n(0, _chai.expect)(result.homeAddress).to.eql({\n  street: '123 avenue du Maine',\n  city: 'Paris',\n  state: 'Paris',\n  country: 'FRA',\n  postalCode: '75014'\n});\n(0, _chai.expect)(result.applicantEmail).to.eql('test2@test1.net');\n(0, _chai.expect)(result.applicantPhone).to.eql('4445551212');",
                  "err": {},
                  "uuid": "0fe37683-2c3f-417c-9af7-285c589869ed",
                  "parentUUID": "0bc189d1-4491-4370-a4fb-92179b1815c7",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should reset the Veteran attributes",
                  "fullTitle": "prefillTransformer when the applicant is not the Veteran should reset the Veteran attributes",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var data = _objectSpread(_objectSpread({}, _prefill.default), {}, {\n  'view:applicantIsVeteran': 'No',\n  veteranFullName: 'test',\n  veteranDateOfBirth: 'test',\n  veteranEmail: 'test',\n  primaryPhone: 'test',\n  veteranHomeAddress: {\n    city: 'test',\n    country: 'test',\n    postalCode: 'test',\n    state: 'test',\n    street: 'test'\n  },\n  'Branch of Service': 'test',\n  veteranSocialSecurityNumber: 'test'\n});\nvar result = (0, _prefillTransformer.default)(data);\n(0, _chai.expect)(result.veteranFullName).to.be.undefined;\n(0, _chai.expect)(result.veteranDateOfBirth).to.be.undefined;\n(0, _chai.expect)(result.veteranEmail).to.be.undefined;\n(0, _chai.expect)(result.primaryPhone).to.be.undefined;\n(0, _chai.expect)(result.veteranHomeAddress).to.eql({\n  city: undefined,\n  country: undefined,\n  postalCode: undefined,\n  state: undefined,\n  street: undefined\n});\n(0, _chai.expect)(result['Branch of Service']).to.be.undefined;\n(0, _chai.expect)(result.veteranSocialSecurityNumber).to.be.undefined;",
                  "err": {},
                  "uuid": "0963d00d-d1c4-48e7-bd04-2820d8734c63",
                  "parentUUID": "0bc189d1-4491-4370-a4fb-92179b1815c7",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "0fe37683-2c3f-417c-9af7-285c589869ed",
                "0963d00d-d1c4-48e7-bd04-2820d8734c63"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "2afab82c-b1cd-425a-9b4f-5fc97b5451c2",
              "title": "when the user does not have an ICN",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/representative-appoint/tests/config/prefillTransformer.unit.spec.js",
              "file": "/src/applications/representative-appoint/tests/config/prefillTransformer.unit.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "sets userIsDigitalSubmitEligible to false",
                  "fullTitle": "prefillTransformer when the user does not have an ICN sets userIsDigitalSubmitEligible to false",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var data = _objectSpread(_objectSpread({}, _prefill.default), {}, {\n  identityValidation: {\n    hasIcn: false,\n    hasParticipantId: true\n  }\n});\nvar result = (0, _prefillTransformer.default)(data);\n(0, _chai.expect)(result.userIsDigitalSubmitEligible).to.be.false;",
                  "err": {},
                  "uuid": "252b096a-b4ca-434f-a088-1defa0984d5d",
                  "parentUUID": "2afab82c-b1cd-425a-9b4f-5fc97b5451c2",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "252b096a-b4ca-434f-a088-1defa0984d5d"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "b219e1e7-5746-4bf8-a106-2037c1ce6472",
              "title": "when the user does not have a participant id",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/representative-appoint/tests/config/prefillTransformer.unit.spec.js",
              "file": "/src/applications/representative-appoint/tests/config/prefillTransformer.unit.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "sets userIsDigitalSubmitEligible to false",
                  "fullTitle": "prefillTransformer when the user does not have a participant id sets userIsDigitalSubmitEligible to false",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var data = _objectSpread(_objectSpread({}, _prefill.default), {}, {\n  identityValidation: {\n    hasIcn: true,\n    hasParticipantId: false\n  }\n});\nvar result = (0, _prefillTransformer.default)(data);\n(0, _chai.expect)(result.userIsDigitalSubmitEligible).to.be.false;",
                  "err": {},
                  "uuid": "754ada9a-6803-4b5b-9c0e-bed397eb80a5",
                  "parentUUID": "b219e1e7-5746-4bf8-a106-2037c1ce6472",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "754ada9a-6803-4b5b-9c0e-bed397eb80a5"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "0bf7832a-32a6-437f-b2ab-be8245f81705",
              "title": "when the user has an ICN and a participant id",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/representative-appoint/tests/config/prefillTransformer.unit.spec.js",
              "file": "/src/applications/representative-appoint/tests/config/prefillTransformer.unit.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "sets userIsDigitalSubmitEligible to true",
                  "fullTitle": "prefillTransformer when the user has an ICN and a participant id sets userIsDigitalSubmitEligible to true",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var data = _objectSpread({}, _prefill.default);\nvar result = (0, _prefillTransformer.default)(data);\n(0, _chai.expect)(result.userIsDigitalSubmitEligible).to.be.true;",
                  "err": {},
                  "uuid": "1054750f-4b19-44d7-aaaa-dc546d19522a",
                  "parentUUID": "0bf7832a-32a6-437f-b2ab-be8245f81705",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "1054750f-4b19-44d7-aaaa-dc546d19522a"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "7e485382-8086-4ebb-8878-f9be86143f02",
          "title": "<ConfirmationDigitalSubmission>",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/representative-appoint/tests/containers/ConfirmationDigitalSubmission.unit.spec.jsx",
          "file": "/src/applications/representative-appoint/tests/containers/ConfirmationDigitalSubmission.unit.spec.jsx",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"<ConfirmationDigitalSubmission>\"",
              "fullTitle": "<ConfirmationDigitalSubmission> \"before each\" hook in \"<ConfirmationDigitalSubmission>\"",
              "timedOut": false,
              "duration": 12,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "props = {\n  formData: {\n    submission: {\n      timestamp: (0, _moment.default)().subtract(5, 'days').toISOString()\n    },\n    data: _formData.default\n  }\n};\nmockFormStore = mockStore({\n  form: {\n    submission: {\n      timestamp: (0, _moment.default)().subtract(5, 'days').toISOString()\n    },\n    data: _formData.default\n  }\n});\nvar renderResult = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n  store: mockFormStore\n}, /*#__PURE__*/_react.default.createElement(_ConfirmationDigitalSubmission.default, props)));\ncontainer = renderResult.container;",
              "err": {},
              "uuid": "f3be335c-620a-4f36-8897-b48aa896e7d0",
              "parentUUID": "7e485382-8086-4ebb-8878-f9be86143f02",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": "should render the component",
              "fullTitle": "<ConfirmationDigitalSubmission> should render the component",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, _chai.expect)(container).to.exist;",
              "err": {},
              "uuid": "c21f3302-f1f6-47f3-8bb0-29132a4b7e66",
              "parentUUID": "7e485382-8086-4ebb-8878-f9be86143f02",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should display submission date correctly",
              "fullTitle": "<ConfirmationDigitalSubmission> should display submission date correctly",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var dateSubmitted = (0, _moment.default)(props.formData.submission.timestamp).format('MMMM D, YYYY');\nvar content = (0, _ui.$)('va-alert', container);\n(0, _chai.expect)(content.textContent).to.contain(\"You\\u2019ve submitted your form to appoint the accredited representative on \".concat(dateSubmitted));",
              "err": {},
              "uuid": "9a0156e6-fb5b-4cc6-96aa-1dafd3dc0f4a",
              "parentUUID": "7e485382-8086-4ebb-8878-f9be86143f02",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [
            {
              "uuid": "9ca3ca41-4357-4941-8e99-ffc6e993b938",
              "title": "when print button is clicked",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/representative-appoint/tests/containers/ConfirmationDigitalSubmission.unit.spec.jsx",
              "file": "/src/applications/representative-appoint/tests/containers/ConfirmationDigitalSubmission.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should call window.print",
                  "fullTitle": "<ConfirmationDigitalSubmission> when print button is clicked should call window.print",
                  "timedOut": false,
                  "duration": 11,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var printSpy = _sinon.default.spy(window, 'print');\nvar printButton = container.querySelector('va-button');\n_react2.fireEvent.click(printButton);\n(0, _chai.expect)(printSpy.calledOnce).to.be.true;\nprintSpy.restore();",
                  "err": {},
                  "uuid": "d38c1cf5-9028-4b00-8bce-0262bab13cbc",
                  "parentUUID": "9ca3ca41-4357-4941-8e99-ffc6e993b938",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "d38c1cf5-9028-4b00-8bce-0262bab13cbc"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 11,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            }
          ],
          "passes": [
            "c21f3302-f1f6-47f3-8bb0-29132a4b7e66",
            "9a0156e6-fb5b-4cc6-96aa-1dafd3dc0f4a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "367cc04a-bebb-45cc-ad5f-e8feae53d5ff",
          "title": "Confirmation Page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/representative-appoint/tests/containers/ConfirmationPage.unit.spec.jsx",
          "file": "/src/applications/representative-appoint/tests/containers/ConfirmationPage.unit.spec.jsx",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"Confirmation Page\"",
              "fullTitle": "Confirmation Page \"before each\" hook in \"Confirmation Page\"",
              "timedOut": false,
              "duration": 4,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "defaultProps = {\n  router: {\n    push: _sinon.default.spy()\n  }\n};\nuseSelectorStub = _sinon.default.stub(redux, 'useSelector').returns({\n  data: mockFormData\n});\nvar result = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_ConfirmationPage.default, defaultProps));\ncontainer = result.container;",
              "err": {},
              "uuid": "0a5b276f-7cae-44bb-a3c8-4a0cd85ed276",
              "parentUUID": "367cc04a-bebb-45cc-ad5f-e8feae53d5ff",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after each\" hook in \"Confirmation Page\"",
              "fullTitle": "Confirmation Page \"after each\" hook in \"Confirmation Page\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "useSelectorStub.restore();",
              "err": {},
              "uuid": "e075f977-f191-45ae-9fbf-0c01210f90f0",
              "parentUUID": "367cc04a-bebb-45cc-ad5f-e8feae53d5ff",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "should render with correct text and elements",
              "fullTitle": "Confirmation Page should render with correct text and elements",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var downloadLink = container.querySelector('va-link');\n(0, _chai.expect)(downloadLink).to.exist;\n(0, _chai.expect)(downloadLink.getAttribute('text')).to.equal('Download your form');\nvar checkbox = container.querySelector('va-checkbox');\n(0, _chai.expect)(checkbox).to.exist;\n(0, _chai.expect)(checkbox.getAttribute('label')).to.equal('I’ve downloaded, printed, and signed my form');\nvar button = container.querySelector('va-button');\n(0, _chai.expect)(button).to.exist;",
              "err": {},
              "uuid": "48d42594-8bd7-47d7-8568-a5475dcd5061",
              "parentUUID": "367cc04a-bebb-45cc-ad5f-e8feae53d5ff",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should handle checkbox change",
              "fullTitle": "Confirmation Page should handle checkbox change",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var checkbox = container.querySelector('va-checkbox');\n(0, _chai.expect)(checkbox).to.exist;\n(0, _chai.expect)(checkbox.checked).to.be.false;\ncheckbox.checked = true;\n_react2.fireEvent.click(checkbox);\n(0, _chai.expect)(checkbox.checked).to.be.true;",
              "err": {},
              "uuid": "f331aed8-2d6c-42bd-8614-9dd4a976cd1a",
              "parentUUID": "367cc04a-bebb-45cc-ad5f-e8feae53d5ff",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should not focus on the \"Continue\" button after it is clicked when the checkbox is not checked",
              "fullTitle": "Confirmation Page should not focus on the \"Continue\" button after it is clicked when the checkbox is not checked",
              "timedOut": false,
              "duration": 5,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// We can't text the focus of the checkbox after the button click because it's in the shadow DOM.\n// Instead, we can test that the focus is not on the \"Continue\" button after it is clicked when the checkbox is not checked.\nvar button = container.querySelector('va-button');\n_react2.fireEvent.click(button);\n(0, _chai.expect)(document.activeElement).to.not.equal(button);",
              "err": {},
              "uuid": "0adb78c5-d616-4dd4-9212-ed627ab816aa",
              "parentUUID": "367cc04a-bebb-45cc-ad5f-e8feae53d5ff",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should call the download handler when \"Download your form\" link is clicked",
              "fullTitle": "Confirmation Page should call the download handler when \"Download your form\" link is clicked",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var downloadLink = container.querySelector('va-link');\n_react2.fireEvent.click(downloadLink);\n(0, _chai.expect)(defaultProps.router.push.called).to.be.false;",
              "err": {},
              "uuid": "717dada4-b49c-4cb1-ae4c-984758850a76",
              "parentUUID": "367cc04a-bebb-45cc-ad5f-e8feae53d5ff",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "48d42594-8bd7-47d7-8568-a5475dcd5061",
            "f331aed8-2d6c-42bd-8614-9dd4a976cd1a",
            "0adb78c5-d616-4dd4-9212-ed627ab816aa",
            "717dada4-b49c-4cb1-ae4c-984758850a76"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 6,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "07dfeea1-157d-4a35-b254-60a24135e335",
          "title": "IntroductionPage",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/representative-appoint/tests/containers/IntroductionPage.unit.spec.jsx",
          "file": "/src/applications/representative-appoint/tests/containers/IntroductionPage.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should render",
              "fullTitle": "IntroductionPage should render",
              "timedOut": false,
              "duration": 16,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getData = getData({\n    loggedIn: false\n  }),\n  props = _getData.props,\n  mockStore = _getData.mockStore;\nvar _render = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_IntroductionPage.default, props))),\n  container = _render.container;\n(0, _chai.expect)((0, _ui.$)('h1', container).textContent).to.eq('Request help from a VA accredited representative or VSO');\n(0, _chai.expect)((0, _ui.$)('va-process-list', container)).to.exist;\n(0, _chai.expect)((0, _ui.$)('va-omb-info', container)).to.exist;\n(0, _chai.expect)((0, _ui.$)('va-alert-sign-in[variant=\"signInOptional\"]', container)).to.exist;",
              "err": {},
              "uuid": "0a2db13e-5da5-4648-80be-a9145fb500f5",
              "parentUUID": "07dfeea1-157d-4a35-b254-60a24135e335",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should render start action links",
              "fullTitle": "IntroductionPage should render start action links",
              "timedOut": false,
              "duration": 17,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getData2 = getData(),\n  props = _getData2.props,\n  mockStore = _getData2.mockStore;\nvar _render2 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_IntroductionPage.default, props))),\n  container = _render2.container;\n(0, _chai.expect)((0, _ui.$$)('.vads-c-action-link--green', container).length).to.equal(2);",
              "err": {},
              "uuid": "49aeac39-6847-409a-a721-0041354ca9a3",
              "parentUUID": "07dfeea1-157d-4a35-b254-60a24135e335",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "0a2db13e-5da5-4648-80be-a9145fb500f5",
            "49aeac39-6847-409a-a721-0041354ca9a3"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 33,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "67ca0e6d-408a-47c1-a49e-7e2c12fb4cdf",
          "title": "<NextStepsPage />",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/representative-appoint/tests/containers/NextStepsPage.unit.spec.jsx",
          "file": "/src/applications/representative-appoint/tests/containers/NextStepsPage.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "renders the component with mocked Redux store",
              "fullTitle": "<NextStepsPage /> renders the component with mocked Redux store",
              "timedOut": false,
              "duration": 9,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var store = mockStore({\n  form: {\n    data: _formData.default\n  }\n});\nvar _render = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: store\n  }, /*#__PURE__*/_react.default.createElement(_NextStepsPage.default, null))),\n  container = _render.container;\n(0, _chai.expect)((0, _ui.$)('h1', container).textContent).to.eq('Request help from a VA accredited representative or VSO');\n(0, _chai.expect)((0, _ui.$)('h2', container).textContent).to.eq('Your next steps');",
              "err": {},
              "uuid": "d7994bc6-3427-40ab-847d-394d11705889",
              "parentUUID": "67ca0e6d-408a-47c1-a49e-7e2c12fb4cdf",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "d7994bc6-3427-40ab-847d-394d11705889"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 9,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "15ba7233-0c5e-49d3-b277-c2cad4da69da",
          "title": "<PreSubmitInfo>",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/representative-appoint/tests/containers/PreSubmitInfo.unit.spec.jsx",
          "file": "/src/applications/representative-appoint/tests/containers/PreSubmitInfo.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should render component",
              "fullTitle": "<PreSubmitInfo> should render component",
              "timedOut": false,
              "duration": 20,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps = getProps(),\n  props = _getProps.props,\n  mockStore = _getProps.mockStore;\nvar _renderContainer = renderContainer(props, mockStore),\n  container = _renderContainer.container;\n(0, _chai.expect)(container).to.exist;",
              "err": {},
              "uuid": "0fb1e5d8-ef8d-4fce-91e7-1c3266ce5771",
              "parentUUID": "15ba7233-0c5e-49d3-b277-c2cad4da69da",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should include the applicant name",
              "fullTitle": "<PreSubmitInfo> should include the applicant name",
              "timedOut": false,
              "duration": 19,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps2 = getProps(),\n  props = _getProps2.props,\n  mockStore = _getProps2.mockStore;\nvar _renderContainer2 = renderContainer(props, mockStore),\n  container = _renderContainer2.container;\nvar content = (0, _ui.$)('va-accordion-item', container);\n(0, _chai.expect)(content.textContent).to.contain('John E Doe Sr.');",
              "err": {},
              "uuid": "409fe272-8a45-4cdd-a635-6827dba9f748",
              "parentUUID": "15ba7233-0c5e-49d3-b277-c2cad4da69da",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should include the representative name",
              "fullTitle": "<PreSubmitInfo> should include the representative name",
              "timedOut": false,
              "duration": 14,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps3 = getProps(),\n  props = _getProps3.props,\n  mockStore = _getProps3.mockStore;\nvar _renderContainer3 = renderContainer(props, mockStore),\n  container = _renderContainer3.container;\nvar content = (0, _ui.$)('va-accordion-item', container);\n(0, _chai.expect)(content.textContent).to.contain('American Legion');",
              "err": {},
              "uuid": "aea08ce9-4f2a-43c9-90c5-ad65bf3793cc",
              "parentUUID": "15ba7233-0c5e-49d3-b277-c2cad4da69da",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [
            {
              "uuid": "3626e8db-eca8-47c4-be1f-eb99f733eeb4",
              "title": "initial state",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/representative-appoint/tests/containers/PreSubmitInfo.unit.spec.jsx",
              "file": "/src/applications/representative-appoint/tests/containers/PreSubmitInfo.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should have all checkboxes unchecked by default",
                  "fullTitle": "<PreSubmitInfo> initial state should have all checkboxes unchecked by default",
                  "timedOut": false,
                  "duration": 8,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var _getProps4 = getProps(),\n  props = _getProps4.props,\n  mockStore = _getProps4.mockStore;\nvar _renderContainer4 = renderContainer(props, mockStore),\n  container = _renderContainer4.container;\nvar tcBox = container.querySelector('[data-testid=\"terms-and-conditions\"]');\nvar frBox = container.querySelector('[data-testid=\"form-replacement\"]');\nvar ppBox = container.querySelector('va-privacy-agreement');\n(0, _chai.expect)(tcBox.checked).to.be.false;\n(0, _chai.expect)(frBox.checked).to.be.false;\n(0, _chai.expect)(ppBox).to.exist;",
                  "err": {},
                  "uuid": "17a6d317-62dc-4d3c-a664-2f5d0dc3988d",
                  "parentUUID": "3626e8db-eca8-47c4-be1f-eb99f733eeb4",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "17a6d317-62dc-4d3c-a664-2f5d0dc3988d"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 8,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "03649980-bbe0-4ba0-949d-f5d137c8d9a4",
              "title": "when checkboxes are interacted with",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/representative-appoint/tests/containers/PreSubmitInfo.unit.spec.jsx",
              "file": "/src/applications/representative-appoint/tests/containers/PreSubmitInfo.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "resets onSectionComplete when a checkbox is unchecked",
                  "fullTitle": "<PreSubmitInfo> when checkboxes are interacted with resets onSectionComplete when a checkbox is unchecked",
                  "timedOut": false,
                  "duration": 28,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
                  "err": {},
                  "uuid": "149acfce-20a5-48cb-a7e6-d8f7af697297",
                  "parentUUID": "03649980-bbe0-4ba0-949d-f5d137c8d9a4",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "149acfce-20a5-48cb-a7e6-d8f7af697297"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 28,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "ef3e717f-85d1-4657-9a40-37f75b529c8c",
              "title": "error states",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/representative-appoint/tests/containers/PreSubmitInfo.unit.spec.jsx",
              "file": "/src/applications/representative-appoint/tests/containers/PreSubmitInfo.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "shows errors for unchecked checkboxes",
                  "fullTitle": "<PreSubmitInfo> error states shows errors for unchecked checkboxes",
                  "timedOut": false,
                  "duration": 8,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
                  "err": {},
                  "uuid": "c29df24c-2e3d-4a83-8f2d-b00612aa16de",
                  "parentUUID": "ef3e717f-85d1-4657-9a40-37f75b529c8c",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "clears error states when checkboxes are checked",
                  "fullTitle": "<PreSubmitInfo> error states clears error states when checkboxes are checked",
                  "timedOut": false,
                  "duration": 19,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
                  "err": {},
                  "uuid": "f796b2ae-7178-4cbb-8a37-9d91d6d01a2f",
                  "parentUUID": "ef3e717f-85d1-4657-9a40-37f75b529c8c",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "c29df24c-2e3d-4a83-8f2d-b00612aa16de",
                "f796b2ae-7178-4cbb-8a37-9d91d6d01a2f"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 27,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "f00c166d-68dd-47a9-b41d-9402c60d9ada",
              "title": "when terms and conditions and form replacement are accepted",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/representative-appoint/tests/containers/PreSubmitInfo.unit.spec.jsx",
              "file": "/src/applications/representative-appoint/tests/containers/PreSubmitInfo.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "calls onSectionComplete with false if Privacy Policy is not accepted",
                  "fullTitle": "<PreSubmitInfo> when terms and conditions and form replacement are accepted calls onSectionComplete with false if Privacy Policy is not accepted",
                  "timedOut": false,
                  "duration": 15,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
                  "err": {},
                  "uuid": "da7d9e99-24e9-4aee-bb3e-f18105992269",
                  "parentUUID": "f00c166d-68dd-47a9-b41d-9402c60d9ada",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "da7d9e99-24e9-4aee-bb3e-f18105992269"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 15,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "fc65f067-2be5-451f-ac53-cac7ea13c012",
              "title": "when all checkboxes are accepted",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/representative-appoint/tests/containers/PreSubmitInfo.unit.spec.jsx",
              "file": "/src/applications/representative-appoint/tests/containers/PreSubmitInfo.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "calls onSectionComplete with true",
                  "fullTitle": "<PreSubmitInfo> when all checkboxes are accepted calls onSectionComplete with true",
                  "timedOut": false,
                  "duration": 67,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
                  "err": {},
                  "uuid": "c160a084-1d06-4589-a2ba-7f1c902dfae5",
                  "parentUUID": "fc65f067-2be5-451f-ac53-cac7ea13c012",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "c160a084-1d06-4589-a2ba-7f1c902dfae5"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 67,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "70fdf53b-3237-457b-8c11-237a8c8db215",
              "title": "when only terms and conditions is accepted",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/representative-appoint/tests/containers/PreSubmitInfo.unit.spec.jsx",
              "file": "/src/applications/representative-appoint/tests/containers/PreSubmitInfo.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "calls onSectionComplete with false",
                  "fullTitle": "<PreSubmitInfo> when only terms and conditions is accepted calls onSectionComplete with false",
                  "timedOut": false,
                  "duration": 64,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
                  "err": {},
                  "uuid": "e5b94141-e54e-4450-9c24-82f2dfc07d34",
                  "parentUUID": "70fdf53b-3237-457b-8c11-237a8c8db215",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "shows an error message for form replacement and Privacy Policy",
                  "fullTitle": "<PreSubmitInfo> when only terms and conditions is accepted shows an error message for form replacement and Privacy Policy",
                  "timedOut": false,
                  "duration": 11,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
                  "err": {},
                  "uuid": "b697c538-cfcd-4bab-b34c-07dd9687c655",
                  "parentUUID": "70fdf53b-3237-457b-8c11-237a8c8db215",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "e5b94141-e54e-4450-9c24-82f2dfc07d34",
                "b697c538-cfcd-4bab-b34c-07dd9687c655"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 75,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "4713cd6b-1463-4af3-a246-715ff36fc7b1",
              "title": "when Privacy Policy is not accepted",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/representative-appoint/tests/containers/PreSubmitInfo.unit.spec.jsx",
              "file": "/src/applications/representative-appoint/tests/containers/PreSubmitInfo.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "shows an error message for Privacy Policy",
                  "fullTitle": "<PreSubmitInfo> when Privacy Policy is not accepted shows an error message for Privacy Policy",
                  "timedOut": false,
                  "duration": 15,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
                  "err": {},
                  "uuid": "9dbc03e1-3805-4c36-b23f-2666e1aec47e",
                  "parentUUID": "4713cd6b-1463-4af3-a246-715ff36fc7b1",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "9dbc03e1-3805-4c36-b23f-2666e1aec47e"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 15,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "109ea24a-0a4e-4e60-85b0-6ad6020f3b57",
              "title": "submission pending",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/representative-appoint/tests/containers/PreSubmitInfo.unit.spec.jsx",
              "file": "/src/applications/representative-appoint/tests/containers/PreSubmitInfo.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "displays the loading message",
                  "fullTitle": "<PreSubmitInfo> submission pending displays the loading message",
                  "timedOut": false,
                  "duration": 9,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var _getProps13 = getProps({\n    status: 'submitPending'\n  }),\n  props = _getProps13.props,\n  mockStore = _getProps13.mockStore;\nvar _renderContainer13 = renderContainer(props, mockStore),\n  container = _renderContainer13.container;\n(0, _chai.expect)((0, _ui.$)('va-loading-indicator', container).getAttribute('message')).to.contain('We’re processing your form');",
                  "err": {},
                  "uuid": "d912afc1-ac94-480a-b575-2753b81ff004",
                  "parentUUID": "109ea24a-0a4e-4e60-85b0-6ad6020f3b57",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "d912afc1-ac94-480a-b575-2753b81ff004"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 9,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            }
          ],
          "passes": [
            "0fb1e5d8-ef8d-4fce-91e7-1c3266ce5771",
            "409fe272-8a45-4cdd-a635-6827dba9f748",
            "aea08ce9-4f2a-43c9-90c5-ad65bf3793cc"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 53,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "0b8ce836-ec1a-4b37-a61e-5061e6db08f4",
          "title": "`useDefaultFormData` hook",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/representative-appoint/tests/hooks/useDefaultFormData.unit.spec.jsx",
          "file": "/src/applications/representative-appoint/tests/hooks/useDefaultFormData.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should fire the `setData` dispatch with the correct data when the user is logged out",
              "fullTitle": "`useDefaultFormData` hook should fire the `setData` dispatch with the correct data when the user is logged out",
              "timedOut": false,
              "duration": 6,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getData = getData({}),\n  mockStore = _getData.mockStore;\nvar dispatch = mockStore.dispatch;\nvar expectedData = {\n  veteranFullName: {},\n  'view:isLoggedIn': false,\n  'view:isUserLOA3': false,\n  'view:v2IsEnabled': false\n};\nsubject({\n  mockStore: mockStore\n});\n(0, _chai.expect)(dispatch.firstCall.args[0].type).to.eq('SET_DATA');\n(0, _chai.expect)(dispatch.firstCall.args[0].data).to.deep.eq(expectedData);",
              "err": {},
              "uuid": "883ce9df-8031-488a-b72c-f2b31265f28f",
              "parentUUID": "0b8ce836-ec1a-4b37-a61e-5061e6db08f4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should fire the `setData` dispatch with the correct data when the user is logged in",
              "fullTitle": "`useDefaultFormData` hook should fire the `setData` dispatch with the correct data when the user is logged in",
              "timedOut": false,
              "duration": 3,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getData2 = getData({\n    loggedIn: true,\n    dob: '12/14/1986'\n  }),\n  mockStore = _getData2.mockStore;\nvar dispatch = mockStore.dispatch;\nvar expectedData = {\n  veteranFullName: {},\n  'view:isLoggedIn': true,\n  'view:isUserLOA3': true,\n  'view:v2IsEnabled': false\n};\nsubject({\n  mockStore: mockStore\n});\n(0, _chai.expect)(dispatch.firstCall.args[0].type).to.eq('SET_DATA');\n(0, _chai.expect)(dispatch.firstCall.args[0].data).to.deep.eq(expectedData);",
              "err": {},
              "uuid": "9b73e3a2-1ea8-4aa1-b64e-4d1c019641a4",
              "parentUUID": "0b8ce836-ec1a-4b37-a61e-5061e6db08f4",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "883ce9df-8031-488a-b72c-f2b31265f28f",
            "9b73e3a2-1ea8-4aa1-b64e-4d1c019641a4"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 9,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "96d78870-6089-4189-aa33-a69146a539ee",
          "title": "useTransformForReview",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/representative-appoint/tests/hooks/useTransformReview.unit.spec.jsx",
          "file": "/src/applications/representative-appoint/tests/hooks/useTransformReview.unit.spec.jsx",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"useTransformForReview\"",
              "fullTitle": "useTransformForReview \"before each\" hook in \"useTransformForReview\"",
              "timedOut": false,
              "duration": 89,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "props = {\n  formData: {\n    'view:selectedRepresentative': {\n      attributes: {\n        fullName: 'John Doe'\n      },\n      type: 'Attorney'\n    },\n    selectedAccreditedOrganizationName: 'Veterans Organization',\n    'view:applicantIsVeteran': 'No',\n    veteranFullName: {\n      first: 'Jane',\n      middle: 'A',\n      last: 'Doe'\n    },\n    veteranSocialSecurityNumber: '123-45-6789',\n    veteranVAFileNumber: '987654321',\n    veteranDateOfBirth: '1990-01-01',\n    serviceNumber: 'S123456789',\n    serviceBranch: 'Army',\n    veteranHomeAddress: {\n      street: '123 Main St',\n      city: 'Anytown',\n      state: 'TX',\n      postalCode: '12345'\n    },\n    primaryPhone: '555-1234',\n    veteranEmail: 'jane.doe@example.com',\n    applicantName: {\n      first: 'John',\n      middle: 'B',\n      last: 'Doe'\n    },\n    applicantDOB: '1990-01-01',\n    claimantRelationship: 'Spouse',\n    homeAddress: {\n      street: '456 Oak St',\n      city: 'Anytown',\n      state: 'TX',\n      postalCode: '54321'\n    },\n    applicantPhone: '555-5678',\n    applicantEmail: 'john.doe@example.com'\n  }\n};\nmockStore = mockFormStore({\n  form: {\n    submission: {\n      timestamp: 'mockTimestamp'\n    },\n    data: {}\n  }\n});\nvar renderResult = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n  store: mockStore\n}, /*#__PURE__*/_react.default.createElement(TestComponent, props)));\ncontainer = renderResult.container;",
              "err": {},
              "uuid": "2f448aa8-160b-4e75-aba4-aa6ef9e8341c",
              "parentUUID": "96d78870-6089-4189-aa33-a69146a539ee",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": "should render the representative name",
              "fullTitle": "useTransformForReview should render the representative name",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var content = container.querySelector('div');\n(0, _chai.expect)(content.textContent).to.contain('John');",
              "err": {},
              "uuid": "2bffad57-efa0-482f-a11b-8ce8bb18d4a9",
              "parentUUID": "96d78870-6089-4189-aa33-a69146a539ee",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should render the organization name",
              "fullTitle": "useTransformForReview should render the organization name",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var content = container.querySelector('div');\n(0, _chai.expect)(content.textContent).to.contain('Veterans Organization');",
              "err": {},
              "uuid": "e9d5531c-ed1e-4f35-bca1-b25b58d8bd3d",
              "parentUUID": "96d78870-6089-4189-aa33-a69146a539ee",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [
            {
              "uuid": "f8779a54-0367-40a2-8e85-338541e229a7",
              "title": "when applicant is a veteran",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/representative-appoint/tests/hooks/useTransformReview.unit.spec.jsx",
              "file": "/src/applications/representative-appoint/tests/hooks/useTransformReview.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should render the veteran information",
                  "fullTitle": "useTransformForReview when applicant is a veteran should render the veteran information",
                  "timedOut": false,
                  "duration": 6,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "props.formData['view:applicantIsVeteran'] = 'Yes';\nprops.formData.applicantName = {\n  first: 'Jane',\n  middle: 'A',\n  last: 'Doe'\n};\nvar renderResult = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n  store: mockStore\n}, /*#__PURE__*/_react.default.createElement(TestComponent, props)));\ncontainer = renderResult.container;\nvar content = container.querySelector('div');\n(0, _chai.expect)(content.textContent).to.contain('Your informationFirst nameJane');\n(0, _chai.expect)(content.textContent).to.contain('123-45-6789');",
                  "err": {},
                  "uuid": "6dd90ec1-d6c0-4507-8f8a-122aa6522905",
                  "parentUUID": "f8779a54-0367-40a2-8e85-338541e229a7",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "6dd90ec1-d6c0-4507-8f8a-122aa6522905"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 6,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "b854ac28-6256-472e-9274-7bfb6ac4567b",
              "title": "when applicant is not a veteran",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/representative-appoint/tests/hooks/useTransformReview.unit.spec.jsx",
              "file": "/src/applications/representative-appoint/tests/hooks/useTransformReview.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should render claimant information",
                  "fullTitle": "useTransformForReview when applicant is not a veteran should render claimant information",
                  "timedOut": false,
                  "duration": 7,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var content = container.querySelector('div');\n(0, _chai.expect)(content.textContent).to.contain('Your informationFirst nameJohn');\n(0, _chai.expect)(content.textContent).to.contain('Spouse');",
                  "err": {},
                  "uuid": "82e8ad26-d72d-4ab4-a2b9-bcf666d5b5b7",
                  "parentUUID": "b854ac28-6256-472e-9274-7bfb6ac4567b",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "82e8ad26-d72d-4ab4-a2b9-bcf666d5b5b7"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 7,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            }
          ],
          "passes": [
            "2bffad57-efa0-482f-a11b-8ce8bb18d4a9",
            "e9d5531c-ed1e-4f35-bca1-b25b58d8bd3d"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "76273f82-2307-4dd7-97ec-28e19921d42e",
          "title": "Authorize address page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/representative-appoint/tests/pages/authorizations/authorizeAddress.unit.spec.jsx",
          "file": "/src/applications/representative-appoint/tests/pages/authorizations/authorizeAddress.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should render",
              "fullTitle": "Authorize address page should render",
              "timedOut": false,
              "duration": 0,
              "state": "pending",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": true,
              "context": null,
              "code": "",
              "err": {},
              "uuid": "30f2f93e-08d4-4745-a4e0-981f6be2c283",
              "parentUUID": "76273f82-2307-4dd7-97ec-28e19921d42e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [],
          "pending": [
            "30f2f93e-08d4-4745-a4e0-981f6be2c283"
          ],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "791a1597-0465-49ae-a23e-70c9cd52a429",
          "title": "Authorize Inside VA page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/representative-appoint/tests/pages/authorizations/authorizeInsideVA.unit.spec.jsx",
          "file": "/src/applications/representative-appoint/tests/pages/authorizations/authorizeInsideVA.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should render",
              "fullTitle": "Authorize Inside VA page should render",
              "timedOut": false,
              "duration": 55,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _render = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: {},\n    schema: schema,\n    uiSchema: uiSchema,\n    data: {},\n    formData: {}\n  })),\n  container = _render.container;\n(0, _chai.expect)((0, _ui.$)('button[type=\"submit\"]', container)).to.exist;",
              "err": {},
              "uuid": "b965b0b3-4ea1-479c-ad72-4c067af80f87",
              "parentUUID": "791a1597-0465-49ae-a23e-70c9cd52a429",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "b965b0b3-4ea1-479c-ad72-4c067af80f87"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 55,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "cf4cb775-1299-42d6-96be-3dbabee462c4",
          "title": "Authorize medical page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/representative-appoint/tests/pages/authorizations/authorizeMedical.unit.spec.jsx",
          "file": "/src/applications/representative-appoint/tests/pages/authorizations/authorizeMedical.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should render",
              "fullTitle": "Authorize medical page should render",
              "timedOut": false,
              "duration": 0,
              "state": "pending",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": true,
              "context": null,
              "code": "",
              "err": {},
              "uuid": "3dc5c48b-5cc6-42d5-a86f-c4fe315221bb",
              "parentUUID": "cf4cb775-1299-42d6-96be-3dbabee462c4",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [],
          "pending": [
            "3dc5c48b-5cc6-42d5-a86f-c4fe315221bb"
          ],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "71d204f9-e831-4424-bcc5-c6bb60a7e315",
          "title": "Authorize medical select page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/representative-appoint/tests/pages/authorizations/authorizeMedicalSelect.unit.spec.jsx",
          "file": "/src/applications/representative-appoint/tests/pages/authorizations/authorizeMedicalSelect.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should render",
              "fullTitle": "Authorize medical select page should render",
              "timedOut": false,
              "duration": 16,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _render = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: {},\n    schema: schema,\n    uiSchema: uiSchema,\n    data: {},\n    formData: {}\n  })),\n  container = _render.container;\n(0, _chai.expect)((0, _ui.$)('button[type=\"submit\"]', container)).to.exist;",
              "err": {},
              "uuid": "e14bcd81-e011-423d-9b6f-d404c9efd127",
              "parentUUID": "71d204f9-e831-4424-bcc5-c6bb60a7e315",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "e14bcd81-e011-423d-9b6f-d404c9efd127"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 16,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "3b9cdf53-1e53-421d-8eab-d5856441fbf5",
          "title": "Authorize Outside VA page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/representative-appoint/tests/pages/authorizations/authorizeOutsideVA.unit.spec.jsx",
          "file": "/src/applications/representative-appoint/tests/pages/authorizations/authorizeOutsideVA.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should render",
              "fullTitle": "Authorize Outside VA page should render",
              "timedOut": false,
              "duration": 11,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _render = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: {},\n    schema: schema,\n    uiSchema: uiSchema,\n    data: {},\n    formData: {}\n  })),\n  container = _render.container;\n(0, _chai.expect)((0, _ui.$)('button[type=\"submit\"]', container)).to.exist;",
              "err": {},
              "uuid": "b84676bb-e705-471c-9e70-b4b0e130e4e2",
              "parentUUID": "3b9cdf53-1e53-421d-8eab-d5856441fbf5",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "b84676bb-e705-471c-9e70-b4b0e130e4e2"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 11,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "0977c27d-bc88-4384-aa13-23d094cd0256",
          "title": "Authorize Outside VA Names page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/representative-appoint/tests/pages/authorizations/authorizeOutsideVANames.unit.spec.jsx",
          "file": "/src/applications/representative-appoint/tests/pages/authorizations/authorizeOutsideVANames.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should render",
              "fullTitle": "Authorize Outside VA Names page should render",
              "timedOut": false,
              "duration": 0,
              "state": "pending",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": true,
              "context": null,
              "code": "",
              "err": {},
              "uuid": "d5dd3d97-31e0-4394-a934-486012f00cff",
              "parentUUID": "0977c27d-bc88-4384-aa13-23d094cd0256",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [],
          "pending": [
            "d5dd3d97-31e0-4394-a934-486012f00cff"
          ],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "d50d61de-252f-416f-90db-f4b829acfe2d",
          "title": "Claimant Contact Mailing page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/representative-appoint/tests/pages/claimant/claimantContactMailing.unit.spec.jsx",
          "file": "/src/applications/representative-appoint/tests/pages/claimant/claimantContactMailing.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should render",
              "fullTitle": "Claimant Contact Mailing page should render",
              "timedOut": false,
              "duration": 0,
              "state": "pending",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": true,
              "context": null,
              "code": "",
              "err": {},
              "uuid": "6e42916f-c1c5-42f7-9634-1d9b0772a981",
              "parentUUID": "d50d61de-252f-416f-90db-f4b829acfe2d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should have proper max lengths for address fields",
              "fullTitle": "Claimant Contact Mailing page should have proper max lengths for address fields",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var addressProps = schema.properties.homeAddress.properties;\n(0, _chai.expect)(addressProps.street.maxLength).to.equal(30);\n(0, _chai.expect)(addressProps.street2.maxLength).to.equal(5);\n(0, _chai.expect)(addressProps.city.maxLength).to.equal(18);\n(0, _chai.expect)(addressProps.state.maxLength).to.equal(2);\n(0, _chai.expect)(addressProps.postalCode.maxLength).to.equal(9);",
              "err": {},
              "uuid": "c4437052-da97-4f28-a8d7-7e9aef853685",
              "parentUUID": "d50d61de-252f-416f-90db-f4b829acfe2d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "c4437052-da97-4f28-a8d7-7e9aef853685"
          ],
          "failures": [],
          "pending": [
            "6e42916f-c1c5-42f7-9634-1d9b0772a981"
          ],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "314de44b-903d-43ae-884c-042c247b749e",
          "title": "Claimant Contact Phone Email page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/representative-appoint/tests/pages/claimant/claimantContactPhoneEmail.unit.spec.jsx",
          "file": "/src/applications/representative-appoint/tests/pages/claimant/claimantContactPhoneEmail.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should render",
              "fullTitle": "Claimant Contact Phone Email page should render",
              "timedOut": false,
              "duration": 11,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _render = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: store\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: {},\n    schema: schema,\n    uiSchema: uiSchema,\n    data: {},\n    formData: {}\n  }))),\n  container = _render.container;\n(0, _chai.expect)(container.querySelector('button[type=\"submit\"]')).to.exist;",
              "err": {},
              "uuid": "d5de9c97-483c-420a-acbf-703fc96b41a3",
              "parentUUID": "314de44b-903d-43ae-884c-042c247b749e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should have proper max length for email field",
              "fullTitle": "Claimant Contact Phone Email page should have proper max length for email field",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, _chai.expect)(schema.properties.applicantEmail.maxLength).to.equal(31);",
              "err": {},
              "uuid": "32b7a294-fe6b-4fc7-8aeb-d799dd8656ce",
              "parentUUID": "314de44b-903d-43ae-884c-042c247b749e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "d5de9c97-483c-420a-acbf-703fc96b41a3",
            "32b7a294-fe6b-4fc7-8aeb-d799dd8656ce"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 11,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "314f402c-5518-4de3-b5b8-55c469a0e8b9",
          "title": "Claimant Personal Information page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/representative-appoint/tests/pages/claimant/claimantPersonalInformation.unit.spec.jsx",
          "file": "/src/applications/representative-appoint/tests/pages/claimant/claimantPersonalInformation.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should render",
              "fullTitle": "Claimant Personal Information page should render",
              "timedOut": false,
              "duration": 16,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _render = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: store\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: {},\n    schema: schema,\n    uiSchema: uiSchema,\n    data: {},\n    formData: {}\n  }))),\n  container = _render.container;\n(0, _chai.expect)((0, _ui.$)('button[type=\"submit\"]', container)).to.exist;",
              "err": {},
              "uuid": "869d4b8a-8f32-489b-a6e5-97bc924b0221",
              "parentUUID": "314f402c-5518-4de3-b5b8-55c469a0e8b9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should have proper max lengths for name fields",
              "fullTitle": "Claimant Personal Information page should have proper max lengths for name fields",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var nameProps = schema.properties.applicantName.properties;\n(0, _chai.expect)(nameProps.first.maxLength).to.equal(12);\n(0, _chai.expect)(nameProps.middle.maxLength).to.equal(1);\n(0, _chai.expect)(nameProps.last.maxLength).to.equal(18);",
              "err": {},
              "uuid": "2ff32ee1-572e-407b-89bd-117e31ff7805",
              "parentUUID": "314f402c-5518-4de3-b5b8-55c469a0e8b9",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "869d4b8a-8f32-489b-a6e5-97bc924b0221",
            "2ff32ee1-572e-407b-89bd-117e31ff7805"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 16,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "7fa0987b-e35a-4970-862f-a4016f5793d7",
          "title": "Claimant Relationship page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/representative-appoint/tests/pages/claimant/claimantRelationship.unit.spec.jsx",
          "file": "/src/applications/representative-appoint/tests/pages/claimant/claimantRelationship.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should render",
              "fullTitle": "Claimant Relationship page should render",
              "timedOut": false,
              "duration": 9,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _render = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: {},\n    schema: schema,\n    uiSchema: uiSchema,\n    data: {},\n    formData: {}\n  })),\n  container = _render.container;\n(0, _chai.expect)((0, _ui.$)('button[type=\"submit\"]', container)).to.exist;",
              "err": {},
              "uuid": "8e9f6680-1db7-46ae-b5e5-2c950d6bd4ee",
              "parentUUID": "7fa0987b-e35a-4970-862f-a4016f5793d7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should have proper max length for relationshipNotListed field",
              "fullTitle": "Claimant Relationship page should have proper max length for relationshipNotListed field",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, _chai.expect)(schema.properties.relationshipNotListed.maxLength).to.equal(42);\n(0, _chai.expect)(uiSchema.relationshipNotListed['ui:options'].maxLength).to.equal(42);",
              "err": {},
              "uuid": "280eb80b-d7d9-452d-81de-a6164dcd9020",
              "parentUUID": "7fa0987b-e35a-4970-862f-a4016f5793d7",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "8e9f6680-1db7-46ae-b5e5-2c950d6bd4ee",
            "280eb80b-d7d9-452d-81de-a6164dcd9020"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 10,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "cab322af-bca0-44b3-8156-9705d1dd3510",
          "title": "<ClaimantType /> handlers",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/representative-appoint/tests/pages/claimant/claimantType.unit.spec.jsx",
          "file": "/src/applications/representative-appoint/tests/pages/claimant/claimantType.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [
            {
              "title": "\"after each\" hook in \"<ClaimantType /> handlers\"",
              "fullTitle": "<ClaimantType /> handlers \"after each\" hook in \"<ClaimantType /> handlers\"",
              "timedOut": false,
              "duration": 1,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, _react2.cleanup)();",
              "err": {},
              "uuid": "ec3eadb0-f0b2-4b2e-a4a2-5230fe25f169",
              "parentUUID": "cab322af-bca0-44b3-8156-9705d1dd3510",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "should render",
              "fullTitle": "<ClaimantType /> handlers should render",
              "timedOut": false,
              "duration": 11,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
              "err": {},
              "uuid": "e18fc32a-bbeb-4e59-a2bb-9fabde9257b5",
              "parentUUID": "cab322af-bca0-44b3-8156-9705d1dd3510",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [
            {
              "uuid": "8f1d692f-eacf-4b2f-a200-7bd866934263",
              "title": "when selecting Yes",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/representative-appoint/tests/pages/claimant/claimantType.unit.spec.jsx",
              "file": "/src/applications/representative-appoint/tests/pages/claimant/claimantType.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "updates state correctly",
                  "fullTitle": "<ClaimantType /> handlers when selecting Yes updates state correctly",
                  "timedOut": false,
                  "duration": 15,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
                  "err": {},
                  "uuid": "737858ad-69d5-434c-9a1b-efd0f76f3664",
                  "parentUUID": "8f1d692f-eacf-4b2f-a200-7bd866934263",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "737858ad-69d5-434c-9a1b-efd0f76f3664"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 15,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "eae06faa-5fb4-4f82-b603-fe42cbbeeb88",
              "title": "when selecting No",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/representative-appoint/tests/pages/claimant/claimantType.unit.spec.jsx",
              "file": "/src/applications/representative-appoint/tests/pages/claimant/claimantType.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "updates state correctly",
                  "fullTitle": "<ClaimantType /> handlers when selecting No updates state correctly",
                  "timedOut": false,
                  "duration": 11,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
                  "err": {},
                  "uuid": "5abdba7c-66ee-4d3d-b130-990b7be63122",
                  "parentUUID": "eae06faa-5fb4-4f82-b603-fe42cbbeeb88",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "5abdba7c-66ee-4d3d-b130-990b7be63122"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 11,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "9090c39c-3572-4c67-b585-7d985a6a3bfb",
              "title": "when navigating forward",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/representative-appoint/tests/pages/claimant/claimantType.unit.spec.jsx",
              "file": "/src/applications/representative-appoint/tests/pages/claimant/claimantType.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [],
              "suites": [
                {
                  "uuid": "2818798c-215b-4c7d-aa86-4becbe56091e",
                  "title": "when a selection has been made",
                  "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/representative-appoint/tests/pages/claimant/claimantType.unit.spec.jsx",
                  "file": "/src/applications/representative-appoint/tests/pages/claimant/claimantType.unit.spec.jsx",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [],
                  "suites": [
                    {
                      "uuid": "11be62a5-88ae-4f64-b439-b499ba0d3da5",
                      "title": "when logged in",
                      "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/representative-appoint/tests/pages/claimant/claimantType.unit.spec.jsx",
                      "file": "/src/applications/representative-appoint/tests/pages/claimant/claimantType.unit.spec.jsx",
                      "beforeHooks": [],
                      "afterHooks": [],
                      "tests": [
                        {
                          "title": "attempts to prefill",
                          "fullTitle": "<ClaimantType /> handlers when navigating forward when a selection has been made when logged in attempts to prefill",
                          "timedOut": false,
                          "duration": 16,
                          "state": "passed",
                          "speed": "slow",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
                          "err": {},
                          "uuid": "3d9d927f-ae84-4008-8598-677122610070",
                          "parentUUID": "11be62a5-88ae-4f64-b439-b499ba0d3da5",
                          "isHook": false,
                          "skipped": false
                        },
                        {
                          "title": "routes to the representative select page",
                          "fullTitle": "<ClaimantType /> handlers when navigating forward when a selection has been made when logged in routes to the representative select page",
                          "timedOut": false,
                          "duration": 16,
                          "state": "passed",
                          "speed": "slow",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
                          "err": {},
                          "uuid": "55cc233f-fe7d-4ca3-a06c-8417fc1bd164",
                          "parentUUID": "11be62a5-88ae-4f64-b439-b499ba0d3da5",
                          "isHook": false,
                          "skipped": false
                        }
                      ],
                      "suites": [],
                      "passes": [
                        "3d9d927f-ae84-4008-8598-677122610070",
                        "55cc233f-fe7d-4ca3-a06c-8417fc1bd164"
                      ],
                      "failures": [],
                      "pending": [],
                      "skipped": [],
                      "duration": 32,
                      "root": false,
                      "rootEmpty": false,
                      "_timeout": 10000
                    },
                    {
                      "uuid": "5f6477e2-6d9b-47f5-b0ba-eaebc0d74f99",
                      "title": "when not logged in",
                      "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/representative-appoint/tests/pages/claimant/claimantType.unit.spec.jsx",
                      "file": "/src/applications/representative-appoint/tests/pages/claimant/claimantType.unit.spec.jsx",
                      "beforeHooks": [],
                      "afterHooks": [],
                      "tests": [
                        {
                          "title": "does not attempt to prefill",
                          "fullTitle": "<ClaimantType /> handlers when navigating forward when a selection has been made when not logged in does not attempt to prefill",
                          "timedOut": false,
                          "duration": 14,
                          "state": "passed",
                          "speed": "slow",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
                          "err": {},
                          "uuid": "fb6e8cde-7da7-423a-a937-31f833a0701f",
                          "parentUUID": "5f6477e2-6d9b-47f5-b0ba-eaebc0d74f99",
                          "isHook": false,
                          "skipped": false
                        },
                        {
                          "title": "routes to the representative select page",
                          "fullTitle": "<ClaimantType /> handlers when navigating forward when a selection has been made when not logged in routes to the representative select page",
                          "timedOut": false,
                          "duration": 15,
                          "state": "passed",
                          "speed": "slow",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
                          "err": {},
                          "uuid": "8065bcf8-5ffa-40e8-9355-ab4c03c990b0",
                          "parentUUID": "5f6477e2-6d9b-47f5-b0ba-eaebc0d74f99",
                          "isHook": false,
                          "skipped": false
                        }
                      ],
                      "suites": [],
                      "passes": [
                        "fb6e8cde-7da7-423a-a937-31f833a0701f",
                        "8065bcf8-5ffa-40e8-9355-ab4c03c990b0"
                      ],
                      "failures": [],
                      "pending": [],
                      "skipped": [],
                      "duration": 29,
                      "root": false,
                      "rootEmpty": false,
                      "_timeout": 10000
                    }
                  ],
                  "passes": [],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "f1d6625f-7cbf-4258-a28b-4c00b79c8a8e",
                  "title": "when no selection has been made",
                  "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/representative-appoint/tests/pages/claimant/claimantType.unit.spec.jsx",
                  "file": "/src/applications/representative-appoint/tests/pages/claimant/claimantType.unit.spec.jsx",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "displays an error",
                      "fullTitle": "<ClaimantType /> handlers when navigating forward when no selection has been made displays an error",
                      "timedOut": false,
                      "duration": 22,
                      "state": "passed",
                      "speed": "slow",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
                      "err": {},
                      "uuid": "d55f047f-ee42-488a-b58e-46cf6f20220e",
                      "parentUUID": "f1d6625f-7cbf-4258-a28b-4c00b79c8a8e",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "d55f047f-ee42-488a-b58e-46cf6f20220e"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 22,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                }
              ],
              "passes": [],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "1b74d102-94b3-4ebc-8550-e2b5e25a2255",
              "title": "when navigating backward",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/representative-appoint/tests/pages/claimant/claimantType.unit.spec.jsx",
              "file": "/src/applications/representative-appoint/tests/pages/claimant/claimantType.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "routes to the introduction page",
                  "fullTitle": "<ClaimantType /> handlers when navigating backward routes to the introduction page",
                  "timedOut": false,
                  "duration": 8,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
                  "err": {},
                  "uuid": "5d123ca6-5b30-44b1-bafa-56d26ec7e8e2",
                  "parentUUID": "1b74d102-94b3-4ebc-8550-e2b5e25a2255",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "5d123ca6-5b30-44b1-bafa-56d26ec7e8e2"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 8,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            }
          ],
          "passes": [
            "e18fc32a-bbeb-4e59-a2bb-9fabde9257b5"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 11,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "b00a7339-bad2-40fe-bef1-0ff5b6d2cd11",
          "title": "<ContactAccreditedRepresentative>",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/representative-appoint/tests/pages/representative/contactAccreditedRepresentative.unit.spec.jsx",
          "file": "/src/applications/representative-appoint/tests/pages/representative/contactAccreditedRepresentative.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should render component",
              "fullTitle": "<ContactAccreditedRepresentative> should render component",
              "timedOut": false,
              "duration": 10,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps = getProps(),\n  props = _getProps.props,\n  mockStore = _getProps.mockStore;\nvar _render = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_ContactAccreditedRepresentative.default, props))),\n  container = _render.container;\n(0, _chai.expect)(container).to.exist;",
              "err": {},
              "uuid": "e31e56a7-6b3f-424d-a97c-0738e674261f",
              "parentUUID": "b00a7339-bad2-40fe-bef1-0ff5b6d2cd11",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [
            {
              "uuid": "c04072e6-85d8-4a7b-a7bd-ca6766aafb0a",
              "title": "non-review mode",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/representative-appoint/tests/pages/representative/contactAccreditedRepresentative.unit.spec.jsx",
              "file": "/src/applications/representative-appoint/tests/pages/representative/contactAccreditedRepresentative.unit.spec.jsx",
              "beforeHooks": [
                {
                  "title": "\"before each\" hook in \"non-review mode\"",
                  "fullTitle": "<ContactAccreditedRepresentative> non-review mode \"before each\" hook in \"non-review mode\"",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "Object.defineProperty(window, 'location', {\n  value: {\n    search: ''\n  },\n  writable: true\n});",
                  "err": {},
                  "uuid": "cb5f6158-c009-4a73-98da-5aa3bcd2c296",
                  "parentUUID": "c04072e6-85d8-4a7b-a7bd-ca6766aafb0a",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should call goBack with formData",
                  "fullTitle": "<ContactAccreditedRepresentative> non-review mode should call goBack with formData",
                  "timedOut": false,
                  "duration": 11,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
                  "err": {},
                  "uuid": "120e57a3-505a-46c1-bf01-100e87e66443",
                  "parentUUID": "c04072e6-85d8-4a7b-a7bd-ca6766aafb0a",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should call goForward with formData",
                  "fullTitle": "<ContactAccreditedRepresentative> non-review mode should call goForward with formData",
                  "timedOut": false,
                  "duration": 11,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
                  "err": {},
                  "uuid": "65c9fdd5-4352-4b82-b2ab-2bd6d00262ab",
                  "parentUUID": "c04072e6-85d8-4a7b-a7bd-ca6766aafb0a",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "120e57a3-505a-46c1-bf01-100e87e66443",
                "65c9fdd5-4352-4b82-b2ab-2bd6d00262ab"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 22,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "b06a4786-994d-4750-b0ad-de86a9577ab3",
              "title": "review mode",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/representative-appoint/tests/pages/representative/contactAccreditedRepresentative.unit.spec.jsx",
              "file": "/src/applications/representative-appoint/tests/pages/representative/contactAccreditedRepresentative.unit.spec.jsx",
              "beforeHooks": [
                {
                  "title": "\"before each\" hook in \"review mode\"",
                  "fullTitle": "<ContactAccreditedRepresentative> review mode \"before each\" hook in \"review mode\"",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "Object.defineProperty(window, 'location', {\n  value: {\n    search: '?review=true'\n  },\n  writable: true\n});",
                  "err": {},
                  "uuid": "ffff031e-8745-4356-a4de-b46e36e30135",
                  "parentUUID": "b06a4786-994d-4750-b0ad-de86a9577ab3",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should navigate to the representative selection page when in review mode",
                  "fullTitle": "<ContactAccreditedRepresentative> review mode should navigate to the representative selection page when in review mode",
                  "timedOut": false,
                  "duration": 9,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
                  "err": {},
                  "uuid": "ff39fa15-6102-47b1-9c78-783b8aeb41c3",
                  "parentUUID": "b06a4786-994d-4750-b0ad-de86a9577ab3",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should navigate to the organization selection page when organization selection is required",
                  "fullTitle": "<ContactAccreditedRepresentative> review mode should navigate to the organization selection page when organization selection is required",
                  "timedOut": false,
                  "duration": 12,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
                  "err": {},
                  "uuid": "52fd4553-087c-4430-921e-2bafaf561c1d",
                  "parentUUID": "b06a4786-994d-4750-b0ad-de86a9577ab3",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should navigate to the review-and-submit page when organization selection is not required",
                  "fullTitle": "<ContactAccreditedRepresentative> review mode should navigate to the review-and-submit page when organization selection is not required",
                  "timedOut": false,
                  "duration": 10,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
                  "err": {},
                  "uuid": "ae771718-e3ee-451b-bf67-ee2d4e0508c6",
                  "parentUUID": "b06a4786-994d-4750-b0ad-de86a9577ab3",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "ff39fa15-6102-47b1-9c78-783b8aeb41c3",
                "52fd4553-087c-4430-921e-2bafaf561c1d",
                "ae771718-e3ee-451b-bf67-ee2d4e0508c6"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 31,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            }
          ],
          "passes": [
            "e31e56a7-6b3f-424d-a97c-0738e674261f"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 10,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "a32b8c06-1023-438d-b289-5d96632c36f1",
          "title": "<RepresentativeSubmissionMethod>",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/representative-appoint/tests/pages/representative/representativeSubmissionMethod.unit.spec.jsx",
          "file": "/src/applications/representative-appoint/tests/pages/representative/representativeSubmissionMethod.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should render component",
              "fullTitle": "<RepresentativeSubmissionMethod> should render component",
              "timedOut": false,
              "duration": 5,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps = getProps(),\n  props = _getProps.props,\n  mockStore = _getProps.mockStore;\nvar _render = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_RepresentativeSubmissionMethod.RepresentativeSubmissionMethod, props))),\n  container = _render.container;\n(0, _chai.expect)(container).to.exist;",
              "err": {},
              "uuid": "60b4472f-8fb4-4bc4-a177-bf2420938640",
              "parentUUID": "a32b8c06-1023-438d-b289-5d96632c36f1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "displays an error",
              "fullTitle": "<RepresentativeSubmissionMethod> displays an error",
              "timedOut": false,
              "duration": 8,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
              "err": {},
              "uuid": "c1d9b2f6-583f-4d4d-b933-ca7de3629535",
              "parentUUID": "a32b8c06-1023-438d-b289-5d96632c36f1",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [
            {
              "uuid": "aa42b9a0-1be3-424f-a356-313d93affcc7",
              "title": "non-review mode",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/representative-appoint/tests/pages/representative/representativeSubmissionMethod.unit.spec.jsx",
              "file": "/src/applications/representative-appoint/tests/pages/representative/representativeSubmissionMethod.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should call goBack with formData when handleGoBack is triggered and isReviewPage is false",
                  "fullTitle": "<RepresentativeSubmissionMethod> non-review mode should call goBack with formData when handleGoBack is triggered and isReviewPage is false",
                  "timedOut": false,
                  "duration": 5,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var _getProps3 = getProps(),\n  props = _getProps3.props,\n  mockStore = _getProps3.mockStore;\nvar useReviewPageStub = _sinon.default.stub(reviewPageHook, 'call').returns(false);\nvar _renderContainer2 = renderContainer(props, mockStore),\n  getByText = _renderContainer2.getByText;\n_react2.fireEvent.click(getByText('Back'));\n(0, _chai.expect)(props.goBack.calledOnce).to.be.true;\n(0, _chai.expect)(props.goBack.calledWith(props.formData)).to.be.true;\nuseReviewPageStub.restore();",
                  "err": {},
                  "uuid": "39036e00-2065-46c1-a853-09cc70b51e14",
                  "parentUUID": "aa42b9a0-1be3-424f-a356-313d93affcc7",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should call goForward with formData when handleGoForward is triggered and isReviewPage is false",
                  "fullTitle": "<RepresentativeSubmissionMethod> non-review mode should call goForward with formData when handleGoForward is triggered and isReviewPage is false",
                  "timedOut": false,
                  "duration": 9,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var _getProps4 = getProps(),\n  props = _getProps4.props,\n  mockStore = _getProps4.mockStore;\nvar useReviewPageStub = _sinon.default.stub(reviewPageHook, 'useReviewPage').returns(false);\nprops.formData.representativeSubmissionMethod = 'mail';\nvar _render2 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_RepresentativeSubmissionMethod.RepresentativeSubmissionMethod, props))),\n  getByText = _render2.getByText;\n_react2.fireEvent.click(getByText('Continue'));\n(0, _chai.expect)(props.goForward.calledOnce).to.be.true;\n(0, _chai.expect)(props.goForward.calledWith(props.formData)).to.be.true;\n(0, _chai.expect)(props.goToPath.called).to.be.false;\nuseReviewPageStub.restore();",
                  "err": {},
                  "uuid": "6f5a04fa-8d48-4fc7-91c3-22427a1252e7",
                  "parentUUID": "aa42b9a0-1be3-424f-a356-313d93affcc7",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "39036e00-2065-46c1-a853-09cc70b51e14",
                "6f5a04fa-8d48-4fc7-91c3-22427a1252e7"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 14,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "6b68c4f0-b28e-4795-8e0a-51e6fc929a67",
              "title": "review mode",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/representative-appoint/tests/pages/representative/representativeSubmissionMethod.unit.spec.jsx",
              "file": "/src/applications/representative-appoint/tests/pages/representative/representativeSubmissionMethod.unit.spec.jsx",
              "beforeHooks": [
                {
                  "title": "\"before each\" hook in \"review mode\"",
                  "fullTitle": "<RepresentativeSubmissionMethod> review mode \"before each\" hook in \"review mode\"",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "Object.defineProperty(window, 'location', {\n  value: {\n    search: '?review=true'\n  },\n  writable: true\n});",
                  "err": {},
                  "uuid": "2093df7c-6244-428e-8a2a-a364a728d2cb",
                  "parentUUID": "6b68c4f0-b28e-4795-8e0a-51e6fc929a67",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should call goToPath with the correct path when handleGoBack is triggered and isReviewPage is true",
                  "fullTitle": "<RepresentativeSubmissionMethod> review mode should call goToPath with the correct path when handleGoBack is triggered and isReviewPage is true",
                  "timedOut": false,
                  "duration": 6,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var useReviewPageStub = _sinon.default.stub(reviewPageHook, 'useReviewPage').returns(true);\nvar _getProps5 = getProps(),\n  props = _getProps5.props,\n  mockStore = _getProps5.mockStore;\nvar _renderContainer3 = renderContainer(props, mockStore),\n  getByText = _renderContainer3.getByText;\n_react2.fireEvent.click(getByText('Back'));\n(0, _chai.expect)(props.goBack.called).to.be.false;\n(0, _chai.expect)(props.goToPath.calledOnce).to.be.true;\n(0, _chai.expect)(props.goToPath.calledWith('representative-contact?review=true')).to.be.true;\nuseReviewPageStub.restore();",
                  "err": {},
                  "uuid": "0db520f4-f197-4011-aa3c-6de4abc3e494",
                  "parentUUID": "6b68c4f0-b28e-4795-8e0a-51e6fc929a67",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should call goToPath with /representative-organization?review=true when handleGoForward is triggered, isReviewPage is true, and isReplacingRep is true",
                  "fullTitle": "<RepresentativeSubmissionMethod> review mode should call goToPath with /representative-organization?review=true when handleGoForward is triggered, isReviewPage is true, and isReplacingRep is true",
                  "timedOut": false,
                  "duration": 5,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var _getProps6 = getProps(),\n  props = _getProps6.props,\n  mockStore = _getProps6.mockStore;\nvar useReviewPageStub = _sinon.default.stub(reviewPageHook, 'useReviewPage').returns(true);\nprops.formData.representativeSubmissionMethod = 'mail';\nvar _render3 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_RepresentativeSubmissionMethod.RepresentativeSubmissionMethod, props))),\n  getByText = _render3.getByText;\n_react2.fireEvent.click(getByText('Continue'));\n(0, _chai.expect)(props.goForward.called).to.be.false;\n(0, _chai.expect)(props.goToPath.calledOnce).to.be.true;\n(0, _chai.expect)(props.goToPath.calledWith('/representative-organization?review=true')).to.be.true;\nuseReviewPageStub.restore();",
                  "err": {},
                  "uuid": "6cc07ba8-6a59-418e-be73-4c9064c0beb1",
                  "parentUUID": "6b68c4f0-b28e-4795-8e0a-51e6fc929a67",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "0db520f4-f197-4011-aa3c-6de4abc3e494",
                "6cc07ba8-6a59-418e-be73-4c9064c0beb1"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 11,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "e472ff3e-e5b0-4b73-a666-18cccf9e63d3",
              "title": "pageDepends",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/representative-appoint/tests/pages/representative/representativeSubmissionMethod.unit.spec.jsx",
              "file": "/src/applications/representative-appoint/tests/pages/representative/representativeSubmissionMethod.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [],
              "suites": [
                {
                  "uuid": "b1ba001c-b839-4e09-aff0-f55bfabacfca",
                  "title": "when v2 is not enabled",
                  "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/representative-appoint/tests/pages/representative/representativeSubmissionMethod.unit.spec.jsx",
                  "file": "/src/applications/representative-appoint/tests/pages/representative/representativeSubmissionMethod.unit.spec.jsx",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "returns false",
                      "fullTitle": "<RepresentativeSubmissionMethod> pageDepends when v2 is not enabled returns false",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "slow",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "var formData = {\n  'view:v2IsEnabled': false,\n  'view:selectedRepresentative': {\n    type: 'organization',\n    attributes: {\n      canAcceptDigitalPoaRequests: true\n    }\n  },\n  userIsDigitalSubmitEligible: true,\n  identityValidation: {\n    hasIcn: true,\n    hasParticipantId: true\n  }\n};\nvar result = _pages.representativeSubmissionMethod.pageDepends(formData);\n(0, _chai.expect)(result).to.be.false;",
                      "err": {},
                      "uuid": "abced0c8-9e80-459a-9e3a-83d27a795a34",
                      "parentUUID": "b1ba001c-b839-4e09-aff0-f55bfabacfca",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "abced0c8-9e80-459a-9e3a-83d27a795a34"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "6bd3802c-8b2c-49b7-80d5-a2bdc613977c",
                  "title": "when the selected representative does not accept digital submission",
                  "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/representative-appoint/tests/pages/representative/representativeSubmissionMethod.unit.spec.jsx",
                  "file": "/src/applications/representative-appoint/tests/pages/representative/representativeSubmissionMethod.unit.spec.jsx",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "returns false",
                      "fullTitle": "<RepresentativeSubmissionMethod> pageDepends when the selected representative does not accept digital submission returns false",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "var formData = {\n  'view:v2IsEnabled': true,\n  'view:selectedRepresentative': {\n    type: 'organization',\n    attributes: {\n      canAcceptDigitalPoaRequests: false\n    }\n  },\n  userIsDigitalSubmitEligible: true,\n  identityValidation: {\n    hasIcn: true,\n    hasParticipantId: true\n  }\n};\nvar result = _pages.representativeSubmissionMethod.pageDepends(formData);\n(0, _chai.expect)(result).to.be.false;",
                      "err": {},
                      "uuid": "0fcfc78c-d464-4e6c-b32f-edd2a26990c6",
                      "parentUUID": "6bd3802c-8b2c-49b7-80d5-a2bdc613977c",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "0fcfc78c-d464-4e6c-b32f-edd2a26990c6"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "7365ae91-d845-455d-ae03-3f713169da85",
                  "title": "when the user is not eligible for digital submission",
                  "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/representative-appoint/tests/pages/representative/representativeSubmissionMethod.unit.spec.jsx",
                  "file": "/src/applications/representative-appoint/tests/pages/representative/representativeSubmissionMethod.unit.spec.jsx",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "returns false",
                      "fullTitle": "<RepresentativeSubmissionMethod> pageDepends when the user is not eligible for digital submission returns false",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "var formData = {\n  'view:v2IsEnabled': true,\n  'view:selectedRepresentative': {\n    type: 'organization',\n    attributes: {\n      canAcceptDigitalPoaRequests: true\n    }\n  },\n  userIsDigitalSubmitEligible: false,\n  identityValidation: {\n    hasIcn: false,\n    hasParticipantId: false\n  }\n};\nvar result = _pages.representativeSubmissionMethod.pageDepends(formData);\n(0, _chai.expect)(result).to.be.false;",
                      "err": {},
                      "uuid": "27ec2b92-e651-43e2-b0ee-4f92d84b7501",
                      "parentUUID": "7365ae91-d845-455d-ae03-3f713169da85",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "27ec2b92-e651-43e2-b0ee-4f92d84b7501"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "23fe7dcf-92ee-4930-a716-4dcee3cc5795",
                  "title": "when all digital submission criteria met",
                  "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/representative-appoint/tests/pages/representative/representativeSubmissionMethod.unit.spec.jsx",
                  "file": "/src/applications/representative-appoint/tests/pages/representative/representativeSubmissionMethod.unit.spec.jsx",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "returns true",
                      "fullTitle": "<RepresentativeSubmissionMethod> pageDepends when all digital submission criteria met returns true",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "var formData = {\n  'view:v2IsEnabled': true,\n  'view:selectedRepresentative': {\n    type: 'organization',\n    attributes: {\n      canAcceptDigitalPoaRequests: true\n    }\n  },\n  userIsDigitalSubmitEligible: true,\n  identityValidation: {\n    hasIcn: true,\n    hasParticipantId: true\n  }\n};\nvar result = _pages.representativeSubmissionMethod.pageDepends(formData);\n(0, _chai.expect)(result).to.be.true;",
                      "err": {},
                      "uuid": "3efbaeb0-64e5-47d8-9868-c87994a0ba2e",
                      "parentUUID": "23fe7dcf-92ee-4930-a716-4dcee3cc5795",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "3efbaeb0-64e5-47d8-9868-c87994a0ba2e"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                }
              ],
              "passes": [],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            }
          ],
          "passes": [
            "60b4472f-8fb4-4bc4-a177-bf2420938640",
            "c1d9b2f6-583f-4d4d-b933-ca7de3629535"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 13,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "223060da-1b6f-48a6-8372-883245af3ee2",
          "title": "<SelectAccreditedRepresentative>",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/representative-appoint/tests/pages/representative/selectAccreditedRepresentative.unit.spec.jsx",
          "file": "/src/applications/representative-appoint/tests/pages/representative/selectAccreditedRepresentative.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [
            {
              "title": "\"after each\" hook in \"<SelectAccreditedRepresentative>\"",
              "fullTitle": "<SelectAccreditedRepresentative> \"after each\" hook in \"<SelectAccreditedRepresentative>\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, _react2.cleanup)();",
              "err": {},
              "uuid": "7f18f703-4677-40f0-965e-7e37f7684ee7",
              "parentUUID": "223060da-1b6f-48a6-8372-883245af3ee2",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "should render component",
              "fullTitle": "<SelectAccreditedRepresentative> should render component",
              "timedOut": false,
              "duration": 14,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps = getProps(),\n  props = _getProps.props,\n  mockStore = _getProps.mockStore;\nvar container = renderContainer(props, mockStore);\n(0, _chai.expect)(container).to.exist;",
              "err": {},
              "uuid": "902f3122-161b-4f97-9467-f95ca73aeef8",
              "parentUUID": "223060da-1b6f-48a6-8372-883245af3ee2",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [
            {
              "uuid": "b8c1641f-fca3-49e1-9df9-bb6004b8ef5d",
              "title": "when searching",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/representative-appoint/tests/pages/representative/selectAccreditedRepresentative.unit.spec.jsx",
              "file": "/src/applications/representative-appoint/tests/pages/representative/selectAccreditedRepresentative.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [],
              "suites": [
                {
                  "uuid": "af63245c-311b-4339-a670-1a7716d93256",
                  "title": "when the search input is invalid",
                  "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/representative-appoint/tests/pages/representative/selectAccreditedRepresentative.unit.spec.jsx",
                  "file": "/src/applications/representative-appoint/tests/pages/representative/selectAccreditedRepresentative.unit.spec.jsx",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "displays the no search error",
                      "fullTitle": "<SelectAccreditedRepresentative> when searching when the search input is invalid displays the no search error",
                      "timedOut": false,
                      "duration": 18,
                      "state": "passed",
                      "speed": "slow",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
                      "err": {},
                      "uuid": "0a819daf-76f8-4f96-a971-0a1c1f5d8ded",
                      "parentUUID": "af63245c-311b-4339-a670-1a7716d93256",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "0a819daf-76f8-4f96-a971-0a1c1f5d8ded"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 18,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "a18476a4-dd1f-4b5e-ac1e-9b37ac08d97c",
                  "title": "when the search input is valid",
                  "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/representative-appoint/tests/pages/representative/selectAccreditedRepresentative.unit.spec.jsx",
                  "file": "/src/applications/representative-appoint/tests/pages/representative/selectAccreditedRepresentative.unit.spec.jsx",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "sets the results in state",
                      "fullTitle": "<SelectAccreditedRepresentative> when searching when the search input is valid sets the results in state",
                      "timedOut": false,
                      "duration": 24,
                      "state": "passed",
                      "speed": "slow",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
                      "err": {},
                      "uuid": "2a76f2c9-a198-46ed-8c49-5b90e0a7e45f",
                      "parentUUID": "a18476a4-dd1f-4b5e-ac1e-9b37ac08d97c",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "2a76f2c9-a198-46ed-8c49-5b90e0a7e45f"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 24,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                }
              ],
              "passes": [],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "0a7b6e7a-f6b4-4bed-9816-553a1e6feb4e",
              "title": "when navigating",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/representative-appoint/tests/pages/representative/selectAccreditedRepresentative.unit.spec.jsx",
              "file": "/src/applications/representative-appoint/tests/pages/representative/selectAccreditedRepresentative.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [],
              "suites": [
                {
                  "uuid": "0647cdf9-e190-4924-8582-e3e12a294420",
                  "title": "when not in review mode",
                  "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/representative-appoint/tests/pages/representative/selectAccreditedRepresentative.unit.spec.jsx",
                  "file": "/src/applications/representative-appoint/tests/pages/representative/selectAccreditedRepresentative.unit.spec.jsx",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [],
                  "suites": [
                    {
                      "uuid": "a8ffc9c4-01a5-48f1-991c-df9392e685aa",
                      "title": "when clicking the back button",
                      "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/representative-appoint/tests/pages/representative/selectAccreditedRepresentative.unit.spec.jsx",
                      "file": "/src/applications/representative-appoint/tests/pages/representative/selectAccreditedRepresentative.unit.spec.jsx",
                      "beforeHooks": [],
                      "afterHooks": [],
                      "tests": [
                        {
                          "title": "calls goBack",
                          "fullTitle": "<SelectAccreditedRepresentative> when navigating when not in review mode when clicking the back button calls goBack",
                          "timedOut": false,
                          "duration": 12,
                          "state": "passed",
                          "speed": "slow",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
                          "err": {},
                          "uuid": "d3fc6cd5-ac63-4f87-99a5-a5c42e7d4a10",
                          "parentUUID": "a8ffc9c4-01a5-48f1-991c-df9392e685aa",
                          "isHook": false,
                          "skipped": false
                        }
                      ],
                      "suites": [],
                      "passes": [
                        "d3fc6cd5-ac63-4f87-99a5-a5c42e7d4a10"
                      ],
                      "failures": [],
                      "pending": [],
                      "skipped": [],
                      "duration": 12,
                      "root": false,
                      "rootEmpty": false,
                      "_timeout": 10000
                    },
                    {
                      "uuid": "49ff5d22-e1da-4766-b30a-b823f014a59c",
                      "title": "when clicking the select a rep button",
                      "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/representative-appoint/tests/pages/representative/selectAccreditedRepresentative.unit.spec.jsx",
                      "file": "/src/applications/representative-appoint/tests/pages/representative/selectAccreditedRepresentative.unit.spec.jsx",
                      "beforeHooks": [],
                      "afterHooks": [],
                      "tests": [
                        {
                          "title": "calls getRepStatus and updates state accordingly",
                          "fullTitle": "<SelectAccreditedRepresentative> when navigating when not in review mode when clicking the select a rep button calls getRepStatus and updates state accordingly",
                          "timedOut": false,
                          "duration": 64,
                          "state": "passed",
                          "speed": "slow",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
                          "err": {},
                          "uuid": "f394f255-3e32-450a-98d2-10459c3d54a8",
                          "parentUUID": "49ff5d22-e1da-4766-b30a-b823f014a59c",
                          "isHook": false,
                          "skipped": false
                        }
                      ],
                      "suites": [],
                      "passes": [
                        "f394f255-3e32-450a-98d2-10459c3d54a8"
                      ],
                      "failures": [],
                      "pending": [],
                      "skipped": [],
                      "duration": 64,
                      "root": false,
                      "rootEmpty": false,
                      "_timeout": 10000
                    }
                  ],
                  "passes": [],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "ca466806-7266-4bb8-8a71-85a81c16e83f",
                  "title": "when in review mode",
                  "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/representative-appoint/tests/pages/representative/selectAccreditedRepresentative.unit.spec.jsx",
                  "file": "/src/applications/representative-appoint/tests/pages/representative/selectAccreditedRepresentative.unit.spec.jsx",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [],
                  "suites": [
                    {
                      "uuid": "0828dd6e-31c2-4387-a935-0cd52b2ba4f6",
                      "title": "when clicking the back button",
                      "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/representative-appoint/tests/pages/representative/selectAccreditedRepresentative.unit.spec.jsx",
                      "file": "/src/applications/representative-appoint/tests/pages/representative/selectAccreditedRepresentative.unit.spec.jsx",
                      "beforeHooks": [],
                      "afterHooks": [],
                      "tests": [
                        {
                          "title": "calls goToPath",
                          "fullTitle": "<SelectAccreditedRepresentative> when navigating when in review mode when clicking the back button calls goToPath",
                          "timedOut": false,
                          "duration": 17,
                          "state": "passed",
                          "speed": "slow",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
                          "err": {},
                          "uuid": "26a6fa12-c920-4ff3-98f3-2163bdc6ff7e",
                          "parentUUID": "0828dd6e-31c2-4387-a935-0cd52b2ba4f6",
                          "isHook": false,
                          "skipped": false
                        }
                      ],
                      "suites": [],
                      "passes": [
                        "26a6fa12-c920-4ff3-98f3-2163bdc6ff7e"
                      ],
                      "failures": [],
                      "pending": [],
                      "skipped": [],
                      "duration": 17,
                      "root": false,
                      "rootEmpty": false,
                      "_timeout": 10000
                    },
                    {
                      "uuid": "9e9570d2-26da-4e92-896e-d93c2431fadc",
                      "title": "when clicking the select a rep button",
                      "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/representative-appoint/tests/pages/representative/selectAccreditedRepresentative.unit.spec.jsx",
                      "file": "/src/applications/representative-appoint/tests/pages/representative/selectAccreditedRepresentative.unit.spec.jsx",
                      "beforeHooks": [],
                      "afterHooks": [],
                      "tests": [],
                      "suites": [
                        {
                          "uuid": "79bcbab5-547c-4979-a3a3-0944fd688514",
                          "title": "when selecting a new representative",
                          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/representative-appoint/tests/pages/representative/selectAccreditedRepresentative.unit.spec.jsx",
                          "file": "/src/applications/representative-appoint/tests/pages/representative/selectAccreditedRepresentative.unit.spec.jsx",
                          "beforeHooks": [],
                          "afterHooks": [],
                          "tests": [
                            {
                              "title": "sets the new selection in state",
                              "fullTitle": "<SelectAccreditedRepresentative> when navigating when in review mode when clicking the select a rep button when selecting a new representative sets the new selection in state",
                              "timedOut": false,
                              "duration": 66,
                              "state": "passed",
                              "speed": "slow",
                              "pass": true,
                              "fail": false,
                              "pending": false,
                              "context": null,
                              "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
                              "err": {},
                              "uuid": "104ac9ef-6ecc-47a9-b3e4-b02ce03f2959",
                              "parentUUID": "79bcbab5-547c-4979-a3a3-0944fd688514",
                              "isHook": false,
                              "skipped": false
                            },
                            {
                              "title": "routes to the contact representative page",
                              "fullTitle": "<SelectAccreditedRepresentative> when navigating when in review mode when clicking the select a rep button when selecting a new representative routes to the contact representative page",
                              "timedOut": false,
                              "duration": 73,
                              "state": "passed",
                              "speed": "slow",
                              "pass": true,
                              "fail": false,
                              "pending": false,
                              "context": null,
                              "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
                              "err": {},
                              "uuid": "2d376d9b-2755-4c16-b955-591eeb918bbe",
                              "parentUUID": "79bcbab5-547c-4979-a3a3-0944fd688514",
                              "isHook": false,
                              "skipped": false
                            }
                          ],
                          "suites": [],
                          "passes": [
                            "104ac9ef-6ecc-47a9-b3e4-b02ce03f2959",
                            "2d376d9b-2755-4c16-b955-591eeb918bbe"
                          ],
                          "failures": [],
                          "pending": [],
                          "skipped": [],
                          "duration": 139,
                          "root": false,
                          "rootEmpty": false,
                          "_timeout": 10000
                        },
                        {
                          "uuid": "341c04d5-8020-4483-95c4-e4b45ffca24f",
                          "title": "when selecting the same representative",
                          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/representative-appoint/tests/pages/representative/selectAccreditedRepresentative.unit.spec.jsx",
                          "file": "/src/applications/representative-appoint/tests/pages/representative/selectAccreditedRepresentative.unit.spec.jsx",
                          "beforeHooks": [],
                          "afterHooks": [],
                          "tests": [
                            {
                              "title": "does not attempt to update state",
                              "fullTitle": "<SelectAccreditedRepresentative> when navigating when in review mode when clicking the select a rep button when selecting the same representative does not attempt to update state",
                              "timedOut": false,
                              "duration": 12,
                              "state": "passed",
                              "speed": "slow",
                              "pass": true,
                              "fail": false,
                              "pending": false,
                              "context": null,
                              "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
                              "err": {},
                              "uuid": "464f474d-fa1a-4b4e-b687-89846c1e6845",
                              "parentUUID": "341c04d5-8020-4483-95c4-e4b45ffca24f",
                              "isHook": false,
                              "skipped": false
                            },
                            {
                              "title": "routes to the review page",
                              "fullTitle": "<SelectAccreditedRepresentative> when navigating when in review mode when clicking the select a rep button when selecting the same representative routes to the review page",
                              "timedOut": false,
                              "duration": 11,
                              "state": "passed",
                              "speed": "slow",
                              "pass": true,
                              "fail": false,
                              "pending": false,
                              "context": null,
                              "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
                              "err": {},
                              "uuid": "bbbc9cb3-3b8f-4673-84d2-10509385fe05",
                              "parentUUID": "341c04d5-8020-4483-95c4-e4b45ffca24f",
                              "isHook": false,
                              "skipped": false
                            }
                          ],
                          "suites": [],
                          "passes": [
                            "464f474d-fa1a-4b4e-b687-89846c1e6845",
                            "bbbc9cb3-3b8f-4673-84d2-10509385fe05"
                          ],
                          "failures": [],
                          "pending": [],
                          "skipped": [],
                          "duration": 23,
                          "root": false,
                          "rootEmpty": false,
                          "_timeout": 10000
                        }
                      ],
                      "passes": [],
                      "failures": [],
                      "pending": [],
                      "skipped": [],
                      "duration": 0,
                      "root": false,
                      "rootEmpty": false,
                      "_timeout": 10000
                    },
                    {
                      "uuid": "53b953a1-e44c-4b7a-a93e-44e845093a85",
                      "title": "when clicking the continue button",
                      "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/representative-appoint/tests/pages/representative/selectAccreditedRepresentative.unit.spec.jsx",
                      "file": "/src/applications/representative-appoint/tests/pages/representative/selectAccreditedRepresentative.unit.spec.jsx",
                      "beforeHooks": [],
                      "afterHooks": [],
                      "tests": [
                        {
                          "title": "routes to the review page",
                          "fullTitle": "<SelectAccreditedRepresentative> when navigating when in review mode when clicking the continue button routes to the review page",
                          "timedOut": false,
                          "duration": 11,
                          "state": "passed",
                          "speed": "slow",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
                          "err": {},
                          "uuid": "47e66b99-b7e3-4b37-91b9-8db567f87eef",
                          "parentUUID": "53b953a1-e44c-4b7a-a93e-44e845093a85",
                          "isHook": false,
                          "skipped": false
                        }
                      ],
                      "suites": [],
                      "passes": [
                        "47e66b99-b7e3-4b37-91b9-8db567f87eef"
                      ],
                      "failures": [],
                      "pending": [],
                      "skipped": [],
                      "duration": 11,
                      "root": false,
                      "rootEmpty": false,
                      "_timeout": 10000
                    }
                  ],
                  "passes": [],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "bd94a126-7f8f-485c-b747-2c8244fe4dbc",
                  "title": "error states",
                  "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/representative-appoint/tests/pages/representative/selectAccreditedRepresentative.unit.spec.jsx",
                  "file": "/src/applications/representative-appoint/tests/pages/representative/selectAccreditedRepresentative.unit.spec.jsx",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [],
                  "suites": [
                    {
                      "uuid": "251126dc-aefc-4e7a-9876-1b55e1d9cb9e",
                      "title": "when the search input is invalid",
                      "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/representative-appoint/tests/pages/representative/selectAccreditedRepresentative.unit.spec.jsx",
                      "file": "/src/applications/representative-appoint/tests/pages/representative/selectAccreditedRepresentative.unit.spec.jsx",
                      "beforeHooks": [],
                      "afterHooks": [],
                      "tests": [
                        {
                          "title": "displays the no search error",
                          "fullTitle": "<SelectAccreditedRepresentative> when navigating error states when the search input is invalid displays the no search error",
                          "timedOut": false,
                          "duration": 17,
                          "state": "passed",
                          "speed": "slow",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
                          "err": {},
                          "uuid": "06d84c05-014c-4a88-938b-1c6c9d947856",
                          "parentUUID": "251126dc-aefc-4e7a-9876-1b55e1d9cb9e",
                          "isHook": false,
                          "skipped": false
                        }
                      ],
                      "suites": [],
                      "passes": [
                        "06d84c05-014c-4a88-938b-1c6c9d947856"
                      ],
                      "failures": [],
                      "pending": [],
                      "skipped": [],
                      "duration": 17,
                      "root": false,
                      "rootEmpty": false,
                      "_timeout": 10000
                    },
                    {
                      "uuid": "b0ae9a46-c02d-4958-abb4-fdb4a498224f",
                      "title": "when the search input is valid",
                      "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/representative-appoint/tests/pages/representative/selectAccreditedRepresentative.unit.spec.jsx",
                      "file": "/src/applications/representative-appoint/tests/pages/representative/selectAccreditedRepresentative.unit.spec.jsx",
                      "beforeHooks": [],
                      "afterHooks": [],
                      "tests": [],
                      "suites": [
                        {
                          "uuid": "a2e2eba0-4dd5-430d-9df8-364b0e0df49e",
                          "title": "when there is no selected representative",
                          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/representative-appoint/tests/pages/representative/selectAccreditedRepresentative.unit.spec.jsx",
                          "file": "/src/applications/representative-appoint/tests/pages/representative/selectAccreditedRepresentative.unit.spec.jsx",
                          "beforeHooks": [],
                          "afterHooks": [],
                          "tests": [
                            {
                              "title": "displays the no selection error",
                              "fullTitle": "<SelectAccreditedRepresentative> when navigating error states when the search input is valid when there is no selected representative displays the no selection error",
                              "timedOut": false,
                              "duration": 7,
                              "state": "passed",
                              "speed": "slow",
                              "pass": true,
                              "fail": false,
                              "pending": false,
                              "context": null,
                              "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
                              "err": {},
                              "uuid": "bfc554c9-af11-49be-85de-be5df82c328c",
                              "parentUUID": "a2e2eba0-4dd5-430d-9df8-364b0e0df49e",
                              "isHook": false,
                              "skipped": false
                            }
                          ],
                          "suites": [],
                          "passes": [
                            "bfc554c9-af11-49be-85de-be5df82c328c"
                          ],
                          "failures": [],
                          "pending": [],
                          "skipped": [],
                          "duration": 7,
                          "root": false,
                          "rootEmpty": false,
                          "_timeout": 10000
                        }
                      ],
                      "passes": [],
                      "failures": [],
                      "pending": [],
                      "skipped": [],
                      "duration": 0,
                      "root": false,
                      "rootEmpty": false,
                      "_timeout": 10000
                    }
                  ],
                  "passes": [],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                }
              ],
              "passes": [],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            }
          ],
          "passes": [
            "902f3122-161b-4f97-9467-f95ca73aeef8"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 14,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "69ab94f3-9a03-4084-84d2-d758147a6e57",
          "title": "<SelectAccreditedRepresentative> - formIs2122 logic",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/representative-appoint/tests/pages/representative/selectAccreditedRepresentative.unit.spec.jsx",
          "file": "/src/applications/representative-appoint/tests/pages/representative/selectAccreditedRepresentative.unit.spec.jsx",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"<SelectAccreditedRepresentative> - formIs2122 logic\"",
              "fullTitle": "<SelectAccreditedRepresentative> - formIs2122 logic \"before each\" hook in \"<SelectAccreditedRepresentative> - formIs2122 logic\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "goToPathSpy = _sinon.default.spy();\nhandleGoForward = function handleGoForward(_ref14) {\n  var newSelection = _ref14.newSelection;\n  var currentSelectedRep = {\n    current: {\n      type: 'representative',\n      attributes: {\n        individualType: 'veteran_service_officer'\n      }\n    }\n  };\n  if ((0, _helpers.formIs2122)(currentSelectedRep.current) !== (0, _helpers.formIs2122)(newSelection)) {\n    goToPathSpy('/representative-contact');\n  }\n};",
              "err": {},
              "uuid": "50f36bf9-b43e-459e-87c0-9fc619896838",
              "parentUUID": "69ab94f3-9a03-4084-84d2-d758147a6e57",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "34a5bc0d-095d-410e-8e92-0eb0957d4be5",
              "title": "when the selected representative type changes",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/representative-appoint/tests/pages/representative/selectAccreditedRepresentative.unit.spec.jsx",
              "file": "/src/applications/representative-appoint/tests/pages/representative/selectAccreditedRepresentative.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should not change the path when type changes between representative and organization",
                  "fullTitle": "<SelectAccreditedRepresentative> - formIs2122 logic when the selected representative type changes should not change the path when type changes between representative and organization",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var newSelection = {\n  type: 'organization'\n};\nhandleGoForward({\n  newSelection: newSelection\n});\n(0, _chai.expect)(goToPathSpy.called).to.be.false;",
                  "err": {},
                  "uuid": "fc1523dc-329a-4461-9ab8-3d6561cc147f",
                  "parentUUID": "34a5bc0d-095d-410e-8e92-0eb0957d4be5",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should call goToPath with /representative-contact if type changes to something completely different (e.g., attorney)",
                  "fullTitle": "<SelectAccreditedRepresentative> - formIs2122 logic when the selected representative type changes should call goToPath with /representative-contact if type changes to something completely different (e.g., attorney)",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var newSelection = {\n  type: 'veteran_service_officer',\n  attributes: {\n    individualType: 'attorney'\n  }\n};\nhandleGoForward({\n  newSelection: newSelection\n});\n(0, _chai.expect)(goToPathSpy.calledWith('/representative-contact')).to.be.true;",
                  "err": {},
                  "uuid": "2162fd34-3823-402b-a546-60dc01fd699c",
                  "parentUUID": "34a5bc0d-095d-410e-8e92-0eb0957d4be5",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "fc1523dc-329a-4461-9ab8-3d6561cc147f",
                "2162fd34-3823-402b-a546-60dc01fd699c"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "60762912-b47b-4b5e-bb4d-bcbf9acfe8da",
          "title": "<SelectAccreditedRepresentativeReview>",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/representative-appoint/tests/pages/representative/selectAccreditedRepresentativeReview.unit.spec.jsx",
          "file": "/src/applications/representative-appoint/tests/pages/representative/selectAccreditedRepresentativeReview.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should render component",
              "fullTitle": "<SelectAccreditedRepresentativeReview> should render component",
              "timedOut": false,
              "duration": 4,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps = getProps(),\n  props = _getProps.props,\n  mockStore = _getProps.mockStore;\nvar container = renderContainer(props, mockStore);\n(0, _chai.expect)(container).to.exist;",
              "err": {},
              "uuid": "50d48213-57bb-4803-84fc-bd9bca59fb6b",
              "parentUUID": "60762912-b47b-4b5e-bb4d-bcbf9acfe8da",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should display review-row when orgName is present",
              "fullTitle": "<SelectAccreditedRepresentativeReview> should display review-row when orgName is present",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps2 = getProps(),\n  props = _getProps2.props,\n  mockStore = _getProps2.mockStore;\nvar container = renderContainer(props, mockStore);\nvar reviewRow = container.querySelector('.review-row');\n(0, _chai.expect)(reviewRow).to.not.be.null;",
              "err": {},
              "uuid": "0192cc3f-5fe2-47a6-8c73-f060e2fa1a4f",
              "parentUUID": "60762912-b47b-4b5e-bb4d-bcbf9acfe8da",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should render org for org type",
              "fullTitle": "<SelectAccreditedRepresentativeReview> should render org for org type",
              "timedOut": false,
              "duration": 3,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps3 = getProps(),\n  mockStore = _getProps3.mockStore;\nvar props = {\n  data: {\n    'view:selectedRepresentative': _organizationType.default\n  }\n};\nvar container = renderContainer(props, mockStore);\nvar ddElement = Array.from(container.querySelectorAll('dd')).find(function (dd) {\n  return dd.textContent === 'Organization';\n});\n(0, _chai.expect)(ddElement).to.not.be.null;\n(0, _chai.expect)(ddElement).to.have.text('Organization');",
              "err": {},
              "uuid": "79b642b7-255c-4033-8693-20a7d21d21c6",
              "parentUUID": "60762912-b47b-4b5e-bb4d-bcbf9acfe8da",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "50d48213-57bb-4803-84fc-bd9bca59fb6b",
            "0192cc3f-5fe2-47a6-8c73-f060e2fa1a4f",
            "79b642b7-255c-4033-8693-20a7d21d21c6"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 9,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "4666e296-cdbd-496c-aae9-8f930ac347fd",
          "title": "<SelectOrganization>",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/representative-appoint/tests/pages/representative/selectOrganization.unit.spec.jsx",
          "file": "/src/applications/representative-appoint/tests/pages/representative/selectOrganization.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should render component",
              "fullTitle": "<SelectOrganization> should render component",
              "timedOut": false,
              "duration": 4,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps = getProps(),\n  props = _getProps.props,\n  mockStore = _getProps.mockStore;\nvar _render = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_SelectOrganization.SelectOrganization, props))),\n  container = _render.container;\n(0, _chai.expect)(container).to.exist;",
              "err": {},
              "uuid": "418e3019-e365-4c87-a5fc-322d7f325cd2",
              "parentUUID": "4666e296-cdbd-496c-aae9-8f930ac347fd",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [
            {
              "uuid": "4ed28aee-d582-43e8-a50e-66918ef17199",
              "title": "non-review mode",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/representative-appoint/tests/pages/representative/selectOrganization.unit.spec.jsx",
              "file": "/src/applications/representative-appoint/tests/pages/representative/selectOrganization.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should call goBack with formData when handleGoBack is triggered and isReviewPage is false",
                  "fullTitle": "<SelectOrganization> non-review mode should call goBack with formData when handleGoBack is triggered and isReviewPage is false",
                  "timedOut": false,
                  "duration": 4,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var _getProps2 = getProps({\n    setFormData: function setFormData() {}\n  }),\n  props = _getProps2.props,\n  mockStore = _getProps2.mockStore;\nvar useReviewPageStub = _sinon.default.stub(reviewPageHook, 'call').returns(false);\nvar _renderContainer = renderContainer(props, mockStore),\n  getByText = _renderContainer.getByText;\n_react2.fireEvent.click(getByText('Back'));\n(0, _chai.expect)(props.goBack.calledOnce).to.be.true;\n(0, _chai.expect)(props.goBack.calledWith(props.formData)).to.be.true;\nuseReviewPageStub.restore();",
                  "err": {},
                  "uuid": "27e5777d-a54c-4fe1-ad22-5b509f195916",
                  "parentUUID": "4ed28aee-d582-43e8-a50e-66918ef17199",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should call goForward with formData when handleGoForward is triggered and isReviewPage is false",
                  "fullTitle": "<SelectOrganization> non-review mode should call goForward with formData when handleGoForward is triggered and isReviewPage is false",
                  "timedOut": false,
                  "duration": 6,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var _getProps3 = getProps(),\n  props = _getProps3.props,\n  mockStore = _getProps3.mockStore;\nvar useReviewPageStub = _sinon.default.stub(reviewPageHook, 'useReviewPage').returns(false);\nprops.formData.selectedAccreditedOrganizationId = '123';\nvar _render2 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_SelectOrganization.SelectOrganization, props))),\n  getByText = _render2.getByText;\n_react2.fireEvent.click(getByText('Continue'));\n(0, _chai.expect)(props.goForward.calledOnce).to.be.true;\n(0, _chai.expect)(props.goForward.calledWith(props.formData)).to.be.true;\n(0, _chai.expect)(props.goToPath.called).to.be.false;\nuseReviewPageStub.restore();",
                  "err": {},
                  "uuid": "25b28ec9-6401-4fba-82f3-a206e51c5336",
                  "parentUUID": "4ed28aee-d582-43e8-a50e-66918ef17199",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "27e5777d-a54c-4fe1-ad22-5b509f195916",
                "25b28ec9-6401-4fba-82f3-a206e51c5336"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 10,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "0efa8943-87a9-46a0-bd5e-54d9b5400ec1",
              "title": "review mode",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/representative-appoint/tests/pages/representative/selectOrganization.unit.spec.jsx",
              "file": "/src/applications/representative-appoint/tests/pages/representative/selectOrganization.unit.spec.jsx",
              "beforeHooks": [
                {
                  "title": "\"before each\" hook in \"review mode\"",
                  "fullTitle": "<SelectOrganization> review mode \"before each\" hook in \"review mode\"",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "Object.defineProperty(window, 'location', {\n  value: {\n    search: '?review=true'\n  },\n  writable: true\n});",
                  "err": {},
                  "uuid": "113608f6-7886-455a-bb9a-146ef7a8185e",
                  "parentUUID": "0efa8943-87a9-46a0-bd5e-54d9b5400ec1",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should call goToPath with the correct path when handleGoBack is triggered and isReviewPage is true",
                  "fullTitle": "<SelectOrganization> review mode should call goToPath with the correct path when handleGoBack is triggered and isReviewPage is true",
                  "timedOut": false,
                  "duration": 5,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var useReviewPageStub = _sinon.default.stub(reviewPageHook, 'useReviewPage').returns(true);\nvar _getProps4 = getProps({\n    setFormData: function setFormData() {}\n  }),\n  props = _getProps4.props,\n  mockStore = _getProps4.mockStore;\nvar _renderContainer2 = renderContainer(props, mockStore),\n  getByText = _renderContainer2.getByText;\n_react2.fireEvent.click(getByText('Back'));\n(0, _chai.expect)(props.goBack.called).to.be.false;\n(0, _chai.expect)(props.goToPath.calledOnce).to.be.true;\n(0, _chai.expect)(props.goToPath.calledWith('representative-contact?review=true')).to.be.true;\nuseReviewPageStub.restore();",
                  "err": {},
                  "uuid": "7cd2848b-91db-4cd8-a268-1eb9c42fd1c1",
                  "parentUUID": "0efa8943-87a9-46a0-bd5e-54d9b5400ec1",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should call goToPath with /representative-replace?review=true when handleGoForward is triggered, isReviewPage is true, and isReplacingRep is true",
                  "fullTitle": "<SelectOrganization> review mode should call goToPath with /representative-replace?review=true when handleGoForward is triggered, isReviewPage is true, and isReplacingRep is true",
                  "timedOut": false,
                  "duration": 4,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var _getProps5 = getProps(),\n  props = _getProps5.props,\n  mockStore = _getProps5.mockStore;\nvar useReviewPageStub = _sinon.default.stub(reviewPageHook, 'useReviewPage').returns(true);\nprops.formData['view:representativeStatus'] = {\n  id: '123'\n};\nprops.formData['view:selectedRepresentative'] = _representativeResults.default[0].data;\nprops.formData.selectedAccreditedOrganizationId = '123';\nvar _render3 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_SelectOrganization.SelectOrganization, props))),\n  getByText = _render3.getByText;\n_react2.fireEvent.click(getByText('Continue'));\n(0, _chai.expect)(props.goForward.called).to.be.false;\n(0, _chai.expect)(props.goToPath.calledOnce).to.be.true;\n(0, _chai.expect)(props.goToPath.calledWith('/representative-replace?review=true')).to.be.true;\nuseReviewPageStub.restore();",
                  "err": {},
                  "uuid": "c9f37987-bf4f-4035-93ea-f16d2c9ae9bd",
                  "parentUUID": "0efa8943-87a9-46a0-bd5e-54d9b5400ec1",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should call goToPath with /review-and-submit when handleGoForward is triggered, isReviewPage is true, and isReplacingRep is false",
                  "fullTitle": "<SelectOrganization> review mode should call goToPath with /review-and-submit when handleGoForward is triggered, isReviewPage is true, and isReplacingRep is false",
                  "timedOut": false,
                  "duration": 4,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var _getProps6 = getProps(),\n  props = _getProps6.props,\n  mockStore = _getProps6.mockStore;\nvar useReviewPageStub = _sinon.default.stub(reviewPageHook, 'useReviewPage').returns(true);\nprops.formData['view:representativeStatus'] = null;\nprops.formData['view:selectedRepresentative'] = _representativeResults.default[0].data;\nprops.formData.selectedAccreditedOrganizationId = '123';\nvar _render4 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_SelectOrganization.SelectOrganization, props))),\n  getByText = _render4.getByText;\n_react2.fireEvent.click(getByText('Continue'));\n(0, _chai.expect)(props.goForward.called).to.be.false;\n(0, _chai.expect)(props.goToPath.calledOnce).to.be.true;\n(0, _chai.expect)(props.goToPath.calledWith('/review-and-submit')).to.be.true;\nuseReviewPageStub.restore();",
                  "err": {},
                  "uuid": "4c7e1302-0c9a-4e24-b895-efb9d1129efb",
                  "parentUUID": "0efa8943-87a9-46a0-bd5e-54d9b5400ec1",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "7cd2848b-91db-4cd8-a268-1eb9c42fd1c1",
                "c9f37987-bf4f-4035-93ea-f16d2c9ae9bd",
                "4c7e1302-0c9a-4e24-b895-efb9d1129efb"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 13,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            }
          ],
          "passes": [
            "418e3019-e365-4c87-a5fc-322d7f325cd2"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 4,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "0c7c4ad0-f661-456b-8e2a-45131a38c05e",
          "title": "Veteran Contact Mailing page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/representative-appoint/tests/pages/veteran/veteranContactMailing.unit.spec.jsx",
          "file": "/src/applications/representative-appoint/tests/pages/veteran/veteranContactMailing.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should render",
              "fullTitle": "Veteran Contact Mailing page should render",
              "timedOut": false,
              "duration": 0,
              "state": "pending",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": true,
              "context": null,
              "code": "",
              "err": {},
              "uuid": "1dc8921b-4add-49f9-87bc-076bd2e958ed",
              "parentUUID": "0c7c4ad0-f661-456b-8e2a-45131a38c05e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should have proper max lengths for address fields",
              "fullTitle": "Veteran Contact Mailing page should have proper max lengths for address fields",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var addressProps = schema.properties.veteranHomeAddress.properties;\n(0, _chai.expect)(addressProps.street.maxLength).to.equal(30);\n(0, _chai.expect)(addressProps.street2.maxLength).to.equal(5);\n(0, _chai.expect)(addressProps.city.maxLength).to.equal(18);\n(0, _chai.expect)(addressProps.state.maxLength).to.equal(2);\n(0, _chai.expect)(addressProps.postalCode.maxLength).to.equal(9);",
              "err": {},
              "uuid": "4f8026fb-900b-42e4-b7d1-24fb7eda6f16",
              "parentUUID": "0c7c4ad0-f661-456b-8e2a-45131a38c05e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "4f8026fb-900b-42e4-b7d1-24fb7eda6f16"
          ],
          "failures": [],
          "pending": [
            "1dc8921b-4add-49f9-87bc-076bd2e958ed"
          ],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "33f08005-20d8-4522-8f9e-5d7d68383e93",
          "title": "Veteran Contact Phone Email page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/representative-appoint/tests/pages/veteran/veteranContactPhoneEmail.unit.spec.jsx",
          "file": "/src/applications/representative-appoint/tests/pages/veteran/veteranContactPhoneEmail.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should render",
              "fullTitle": "Veteran Contact Phone Email page should render",
              "timedOut": false,
              "duration": 7,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _render = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: store\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: {},\n    schema: schema,\n    uiSchema: uiSchema,\n    data: {},\n    formData: {}\n  }))),\n  container = _render.container;\n(0, _chai.expect)(container.querySelector('button[type=\"submit\"]')).to.exist;",
              "err": {},
              "uuid": "3da366a0-4f67-4063-adbf-8532f1586e7c",
              "parentUUID": "33f08005-20d8-4522-8f9e-5d7d68383e93",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should have proper max length for email field",
              "fullTitle": "Veteran Contact Phone Email page should have proper max length for email field",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, _chai.expect)(schema.properties.veteranEmail.maxLength).to.equal(61);",
              "err": {},
              "uuid": "fa85df61-992b-45b5-a08d-d9c6fcf34434",
              "parentUUID": "33f08005-20d8-4522-8f9e-5d7d68383e93",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should require email when LOA3 is true and representative submission method is digital",
              "fullTitle": "Veteran Contact Phone Email page should require email when LOA3 is true and representative submission method is digital",
              "timedOut": false,
              "duration": 7,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var formData = {\n  'view:isUserLOA3': true,\n  representativeSubmissionMethod: 'digital'\n};\nvar _render2 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: store\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: {},\n    schema: schema,\n    uiSchema: uiSchema,\n    data: {},\n    formData: formData\n  }))),\n  container = _render2.container;\nvar emailField = container.querySelector('va-text-input[name=\"root_veteranEmail\"]');\n(0, _chai.expect)(emailField).to.exist;\n(0, _chai.expect)(emailField).to.have.attribute('required');",
              "err": {},
              "uuid": "664c58c7-d669-442f-ba00-f13778858ab4",
              "parentUUID": "33f08005-20d8-4522-8f9e-5d7d68383e93",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should NOT require email when LOA3 is false or representative submission method is not digital",
              "fullTitle": "Veteran Contact Phone Email page should NOT require email when LOA3 is false or representative submission method is not digital",
              "timedOut": false,
              "duration": 7,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var formData = {\n  'view:isUserLOA3': false,\n  representativeSubmissionMethod: 'mail'\n};\nvar _render3 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: store\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: {},\n    schema: schema,\n    uiSchema: uiSchema,\n    data: {},\n    formData: formData\n  }))),\n  container = _render3.container;\nvar emailField = container.querySelector('va-text-input[name=\"root_veteranEmail\"]');\n(0, _chai.expect)(emailField).to.exist;\n(0, _chai.expect)(emailField.required).to.equal(false);",
              "err": {},
              "uuid": "b0a260b2-e3a4-41be-ab2a-abeeb1329205",
              "parentUUID": "33f08005-20d8-4522-8f9e-5d7d68383e93",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "3da366a0-4f67-4063-adbf-8532f1586e7c",
            "fa85df61-992b-45b5-a08d-d9c6fcf34434",
            "664c58c7-d669-442f-ba00-f13778858ab4",
            "b0a260b2-e3a4-41be-ab2a-abeeb1329205"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 21,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "1223ffc5-0ec7-4a43-8756-aba1b5a6a6a0",
          "title": "Veteran Contact Phone Email Claimant page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/representative-appoint/tests/pages/veteran/veteranContactPhoneEmailClaimant.unit.spec.jsx",
          "file": "/src/applications/representative-appoint/tests/pages/veteran/veteranContactPhoneEmailClaimant.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should render",
              "fullTitle": "Veteran Contact Phone Email Claimant page should render",
              "timedOut": false,
              "duration": 5,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _render = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: store\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: {},\n    schema: schema,\n    uiSchema: uiSchema,\n    data: {},\n    formData: {}\n  }))),\n  container = _render.container;\n(0, _chai.expect)(container.querySelector('button[type=\"submit\"]')).to.exist;",
              "err": {},
              "uuid": "f926082c-fc65-48d9-968e-3f4c59f61dcc",
              "parentUUID": "1223ffc5-0ec7-4a43-8756-aba1b5a6a6a0",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f926082c-fc65-48d9-968e-3f4c59f61dcc"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 5,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "f8b8fecc-2ea0-42a3-b67c-3e52653dd32d",
          "title": "Veteran Identification page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/representative-appoint/tests/pages/veteran/veteranIdentification.unit.spec.jsx",
          "file": "/src/applications/representative-appoint/tests/pages/veteran/veteranIdentification.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should render",
              "fullTitle": "Veteran Identification page should render",
              "timedOut": false,
              "duration": 11,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _render = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: store\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: {},\n    schema: schema,\n    uiSchema: uiSchema,\n    data: {},\n    formData: {}\n  }))),\n  container = _render.container;\n(0, _chai.expect)(container.querySelector('button[type=\"submit\"]')).to.exist;",
              "err": {},
              "uuid": "a4de2525-74d0-476b-b767-cd08e38e3541",
              "parentUUID": "f8b8fecc-2ea0-42a3-b67c-3e52653dd32d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should have proper max lengths in schema",
              "fullTitle": "Veteran Identification page should have proper max lengths in schema",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, _chai.expect)(schema.properties.veteranVAFileNumber.maxLength).to.equal(9);\n(0, _chai.expect)(schema.properties.veteranServiceNumber.maxLength).to.equal(9);",
              "err": {},
              "uuid": "594b7027-a3bd-4b32-8c56-47634e726871",
              "parentUUID": "f8b8fecc-2ea0-42a3-b67c-3e52653dd32d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a4de2525-74d0-476b-b767-cd08e38e3541",
            "594b7027-a3bd-4b32-8c56-47634e726871"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 11,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "9ecdd9c6-f130-4a29-a8d8-68dd9bf1cc3e",
          "title": "Veteran Personal Information page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/representative-appoint/tests/pages/veteran/veteranPersonalInformation.unit.spec.jsx",
          "file": "/src/applications/representative-appoint/tests/pages/veteran/veteranPersonalInformation.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should render",
              "fullTitle": "Veteran Personal Information page should render",
              "timedOut": false,
              "duration": 8,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _render = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: store\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: {},\n    schema: schema,\n    uiSchema: uiSchema,\n    data: {},\n    formData: {}\n  }))),\n  container = _render.container;\n(0, _chai.expect)(container.querySelector('button[type=\"submit\"]')).to.exist;",
              "err": {},
              "uuid": "2edb5579-c007-4eab-a7b4-993bc9ae0e4f",
              "parentUUID": "9ecdd9c6-f130-4a29-a8d8-68dd9bf1cc3e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should have proper max lengths for name fields",
              "fullTitle": "Veteran Personal Information page should have proper max lengths for name fields",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var nameProps = schema.properties.veteranFullName.properties;\n(0, _chai.expect)(nameProps.first.maxLength).to.equal(12);\n(0, _chai.expect)(nameProps.middle.maxLength).to.equal(1);\n(0, _chai.expect)(nameProps.last.maxLength).to.equal(18);",
              "err": {},
              "uuid": "efecfac2-1249-4aef-b0bf-0accb49f6818",
              "parentUUID": "9ecdd9c6-f130-4a29-a8d8-68dd9bf1cc3e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "2edb5579-c007-4eab-a7b4-993bc9ae0e4f",
            "efecfac2-1249-4aef-b0bf-0accb49f6818"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 8,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "97ae5272-3206-493b-b574-58e62e9841c7",
          "title": "Veteran Service Information page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/representative-appoint/tests/pages/veteran/veteranServiceInformation.unit.spec.jsx",
          "file": "/src/applications/representative-appoint/tests/pages/veteran/veteranServiceInformation.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should render",
              "fullTitle": "Veteran Service Information page should render",
              "timedOut": false,
              "duration": 6,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _render = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: store\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: {},\n    schema: schema,\n    uiSchema: uiSchema,\n    data: {},\n    formData: {}\n  }))),\n  container = _render.container;\n(0, _chai.expect)(container.querySelector('button[type=\"submit\"]')).to.exist;",
              "err": {},
              "uuid": "3957e78f-53eb-4c2e-b969-5b1f4dfcdee7",
              "parentUUID": "97ae5272-3206-493b-b574-58e62e9841c7",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "3957e78f-53eb-4c2e-b969-5b1f4dfcdee7"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 6,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "f1477e31-aa1b-436e-8d37-3480e6b110ad",
          "title": "addressExists",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/representative-appoint/tests/utilities/addressExists.unit.spec.jsx",
          "file": "/src/applications/representative-appoint/tests/utilities/addressExists.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should return true when all address fields are present and non-empty",
              "fullTitle": "addressExists should return true when all address fields are present and non-empty",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var mockAddress = {\n  addressLine1: '123 Main St',\n  city: 'Somewhere',\n  stateCode: 'CA',\n  zipCode: '12345'\n};\nvar result = (0, _helpers.addressExists)(mockAddress);\n(0, _chai.expect)(result).to.be.true;",
              "err": {},
              "uuid": "0758dbb6-1518-4850-a78c-b8d791f8f788",
              "parentUUID": "f1477e31-aa1b-436e-8d37-3480e6b110ad",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return false when addressLine1 is missing",
              "fullTitle": "addressExists should return false when addressLine1 is missing",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var mockAddress = {\n  addressLine1: '',\n  city: 'Somewhere',\n  stateCode: 'CA',\n  zipCode: '12345'\n};\nvar result = (0, _helpers.addressExists)(mockAddress);\n(0, _chai.expect)(result).to.be.false;",
              "err": {},
              "uuid": "e045bb0e-50e3-4d5a-ba1f-ae6c6f2c46de",
              "parentUUID": "f1477e31-aa1b-436e-8d37-3480e6b110ad",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return false when city is missing",
              "fullTitle": "addressExists should return false when city is missing",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var mockAddress = {\n  addressLine1: '123 Main St',\n  city: '',\n  stateCode: 'CA',\n  zipCode: '12345'\n};\nvar result = (0, _helpers.addressExists)(mockAddress);\n(0, _chai.expect)(result).to.be.false;",
              "err": {},
              "uuid": "224581b4-ae38-404b-bfcd-9ee15bc09ac2",
              "parentUUID": "f1477e31-aa1b-436e-8d37-3480e6b110ad",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return false when stateCode is missing",
              "fullTitle": "addressExists should return false when stateCode is missing",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var mockAddress = {\n  addressLine1: '123 Main St',\n  city: 'Somewhere',\n  stateCode: '',\n  zipCode: '12345'\n};\nvar result = (0, _helpers.addressExists)(mockAddress);\n(0, _chai.expect)(result).to.be.false;",
              "err": {},
              "uuid": "08269d0e-90e9-4a8c-98cc-2e7052f71822",
              "parentUUID": "f1477e31-aa1b-436e-8d37-3480e6b110ad",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return false when zipCode is missing",
              "fullTitle": "addressExists should return false when zipCode is missing",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var mockAddress = {\n  addressLine1: '123 Main St',\n  city: 'Somewhere',\n  stateCode: 'CA',\n  zipCode: ''\n};\nvar result = (0, _helpers.addressExists)(mockAddress);\n(0, _chai.expect)(result).to.be.false;",
              "err": {},
              "uuid": "e3468af7-6e01-4ed2-abd1-d8236d4a987d",
              "parentUUID": "f1477e31-aa1b-436e-8d37-3480e6b110ad",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return false when address is completely null or undefined",
              "fullTitle": "addressExists should return false when address is completely null or undefined",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var result = (0, _helpers.addressExists)(null);\n(0, _chai.expect)(result).to.be.false;\nvar undefinedResult = (0, _helpers.addressExists)(undefined);\n(0, _chai.expect)(undefinedResult).to.be.false;",
              "err": {},
              "uuid": "586cc6db-f9d2-4c7b-a412-8ce88b106656",
              "parentUUID": "f1477e31-aa1b-436e-8d37-3480e6b110ad",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return false when address is an empty object",
              "fullTitle": "addressExists should return false when address is an empty object",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var result = (0, _helpers.addressExists)({});\n(0, _chai.expect)(result).to.be.false;",
              "err": {},
              "uuid": "f18e576f-a8bc-451a-957c-ef6769c569d8",
              "parentUUID": "f1477e31-aa1b-436e-8d37-3480e6b110ad",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return false when any of the fields are only whitespace",
              "fullTitle": "addressExists should return false when any of the fields are only whitespace",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var mockAddress = {\n  addressLine1: '  ',\n  city: 'Somewhere',\n  stateCode: 'CA',\n  zipCode: '12345'\n};\nvar result = (0, _helpers.addressExists)(mockAddress);\n(0, _chai.expect)(result).to.be.false;",
              "err": {},
              "uuid": "1a9ea90b-afab-46b9-8fae-c7ec7811b232",
              "parentUUID": "f1477e31-aa1b-436e-8d37-3480e6b110ad",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "0758dbb6-1518-4850-a78c-b8d791f8f788",
            "e045bb0e-50e3-4d5a-ba1f-ae6c6f2c46de",
            "224581b4-ae38-404b-bfcd-9ee15bc09ac2",
            "08269d0e-90e9-4a8c-98cc-2e7052f71822",
            "e3468af7-6e01-4ed2-abd1-d8236d4a987d",
            "586cc6db-f9d2-4c7b-a412-8ce88b106656",
            "f18e576f-a8bc-451a-957c-ef6769c569d8",
            "1a9ea90b-afab-46b9-8fae-c7ec7811b232"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "f6b289e4-64b8-4555-a3ee-f8699c7bf07e",
          "title": "convertRepType",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/representative-appoint/tests/utilities/convertRepType.unit.spec.jsx",
          "file": "/src/applications/representative-appoint/tests/utilities/convertRepType.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "600600e9-4713-4fcd-9208-99aaf273e006",
              "title": "when the input is organization",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/representative-appoint/tests/utilities/convertRepType.unit.spec.jsx",
              "file": "/src/applications/representative-appoint/tests/utilities/convertRepType.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return \"organization\"",
                  "fullTitle": "convertRepType when the input is organization should return \"organization\"",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var result = (0, _helpers.convertRepType)('organization');\n(0, _chai.expect)(result).to.equal('Organization');",
                  "err": {},
                  "uuid": "1cabf327-d9f1-4808-ad66-07c0cd9deff9",
                  "parentUUID": "600600e9-4713-4fcd-9208-99aaf273e006",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "1cabf327-d9f1-4808-ad66-07c0cd9deff9"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "27dc4075-ba05-4931-82ab-0547dd960887",
              "title": "when the input is representative",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/representative-appoint/tests/utilities/convertRepType.unit.spec.jsx",
              "file": "/src/applications/representative-appoint/tests/utilities/convertRepType.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return \"VSO\"",
                  "fullTitle": "convertRepType when the input is representative should return \"VSO\"",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var result = (0, _helpers.convertRepType)('representative');\n(0, _chai.expect)(result).to.equal('VSO');",
                  "err": {},
                  "uuid": "495fdc06-8018-4273-9388-b2f0905bbabc",
                  "parentUUID": "27dc4075-ba05-4931-82ab-0547dd960887",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "495fdc06-8018-4273-9388-b2f0905bbabc"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "2c3b38bd-6c5e-4c27-b96b-4bbe75343e99",
              "title": "when the input is attorney",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/representative-appoint/tests/utilities/convertRepType.unit.spec.jsx",
              "file": "/src/applications/representative-appoint/tests/utilities/convertRepType.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return \"Attorney\"",
                  "fullTitle": "convertRepType when the input is attorney should return \"Attorney\"",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var result = (0, _helpers.convertRepType)('attorney');\n(0, _chai.expect)(result).to.equal('Attorney');",
                  "err": {},
                  "uuid": "d082148e-3bec-4042-ab8a-c8febdf96298",
                  "parentUUID": "2c3b38bd-6c5e-4c27-b96b-4bbe75343e99",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "d082148e-3bec-4042-ab8a-c8febdf96298"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "630b592b-f851-49d1-a088-2da9aafc849e",
              "title": "when the input is claims_agent",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/representative-appoint/tests/utilities/convertRepType.unit.spec.jsx",
              "file": "/src/applications/representative-appoint/tests/utilities/convertRepType.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return \"Claims Agent\"",
                  "fullTitle": "convertRepType when the input is claims_agent should return \"Claims Agent\"",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var result = (0, _helpers.convertRepType)('claims_agent');\n(0, _chai.expect)(result).to.equal('Claims Agent');",
                  "err": {},
                  "uuid": "6b6d853f-9a0d-49db-9c9c-0f50efbae301",
                  "parentUUID": "630b592b-f851-49d1-a088-2da9aafc849e",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "6b6d853f-9a0d-49db-9c9c-0f50efbae301"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "a1777e5e-80db-4f2c-8ff8-652f9f626f25",
              "title": "when the input is claim_agents",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/representative-appoint/tests/utilities/convertRepType.unit.spec.jsx",
              "file": "/src/applications/representative-appoint/tests/utilities/convertRepType.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return \"Claims Agent\"",
                  "fullTitle": "convertRepType when the input is claim_agents should return \"Claims Agent\"",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var result = (0, _helpers.convertRepType)('claim_agents');\n(0, _chai.expect)(result).to.equal('Claims Agent');",
                  "err": {},
                  "uuid": "bf27e509-4fb3-44a5-88d2-6bad1537f01d",
                  "parentUUID": "a1777e5e-80db-4f2c-8ff8-652f9f626f25",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "bf27e509-4fb3-44a5-88d2-6bad1537f01d"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "fa7fc3b0-0b6b-4a22-9417-7e2575a72eff",
              "title": "when the input is veteran_service_officer",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/representative-appoint/tests/utilities/convertRepType.unit.spec.jsx",
              "file": "/src/applications/representative-appoint/tests/utilities/convertRepType.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return \"VSO\"",
                  "fullTitle": "convertRepType when the input is veteran_service_officer should return \"VSO\"",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var result = (0, _helpers.convertRepType)('veteran_service_officer');\n(0, _chai.expect)(result).to.equal('VSO');",
                  "err": {},
                  "uuid": "5811f2b0-25a7-49b6-92b3-9eea21335dd1",
                  "parentUUID": "fa7fc3b0-0b6b-4a22-9417-7e2575a72eff",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "5811f2b0-25a7-49b6-92b3-9eea21335dd1"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "fa139891-1987-4897-a836-92dece1a935b",
          "title": "entityAcceptsDigitalPoaRequests",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/representative-appoint/tests/utilities/entityAcceptsDigitalPoaRequests.unit.spec.jsx",
          "file": "/src/applications/representative-appoint/tests/utilities/entityAcceptsDigitalPoaRequests.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "3238bb8d-ed53-492b-8f7d-d3f0d6552572",
              "title": "when the representative is an organization",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/representative-appoint/tests/utilities/entityAcceptsDigitalPoaRequests.unit.spec.jsx",
              "file": "/src/applications/representative-appoint/tests/utilities/entityAcceptsDigitalPoaRequests.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [],
              "suites": [
                {
                  "uuid": "28bfdfac-a62d-48be-8975-3b6e9970254a",
                  "title": "when the organization accepts digital submissions",
                  "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/representative-appoint/tests/utilities/entityAcceptsDigitalPoaRequests.unit.spec.jsx",
                  "file": "/src/applications/representative-appoint/tests/utilities/entityAcceptsDigitalPoaRequests.unit.spec.jsx",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "returns true",
                      "fullTitle": "entityAcceptsDigitalPoaRequests when the representative is an organization when the organization accepts digital submissions returns true",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "var mockEntity = {\n  type: 'organization',\n  attributes: {\n    canAcceptDigitalPoaRequests: true\n  }\n};\nvar result = (0, _helpers.entityAcceptsDigitalPoaRequests)(mockEntity);\n(0, _chai.expect)(result).to.be.true;",
                      "err": {},
                      "uuid": "71c10f42-d901-40a4-baca-a54327adb690",
                      "parentUUID": "28bfdfac-a62d-48be-8975-3b6e9970254a",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "71c10f42-d901-40a4-baca-a54327adb690"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "e0f20b02-de34-4e03-a506-3de3aac14c61",
                  "title": "when the organization does not accept digital submissions",
                  "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/representative-appoint/tests/utilities/entityAcceptsDigitalPoaRequests.unit.spec.jsx",
                  "file": "/src/applications/representative-appoint/tests/utilities/entityAcceptsDigitalPoaRequests.unit.spec.jsx",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "returns false",
                      "fullTitle": "entityAcceptsDigitalPoaRequests when the representative is an organization when the organization does not accept digital submissions returns false",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "var mockEntity = {\n  type: 'organization',\n  attributes: {\n    canAcceptDigitalPoaRequests: false\n  }\n};\nvar result = (0, _helpers.entityAcceptsDigitalPoaRequests)(mockEntity);\n(0, _chai.expect)(result).to.be.false;",
                      "err": {},
                      "uuid": "0ffdf2cd-a83d-4deb-94bb-93b1165dc7cd",
                      "parentUUID": "e0f20b02-de34-4e03-a506-3de3aac14c61",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "0ffdf2cd-a83d-4deb-94bb-93b1165dc7cd"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                }
              ],
              "passes": [],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "589dbf8a-dfa1-4158-b9ad-7a2616e03e98",
              "title": "when the representative is a vso representative",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/representative-appoint/tests/utilities/entityAcceptsDigitalPoaRequests.unit.spec.jsx",
              "file": "/src/applications/representative-appoint/tests/utilities/entityAcceptsDigitalPoaRequests.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [],
              "suites": [
                {
                  "uuid": "b210febc-f59b-46b8-8b0b-819d8986a1c5",
                  "title": "when at least one organization accepts digital submissions",
                  "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/representative-appoint/tests/utilities/entityAcceptsDigitalPoaRequests.unit.spec.jsx",
                  "file": "/src/applications/representative-appoint/tests/utilities/entityAcceptsDigitalPoaRequests.unit.spec.jsx",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "returns true",
                      "fullTitle": "entityAcceptsDigitalPoaRequests when the representative is a vso representative when at least one organization accepts digital submissions returns true",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "slow",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "var mockEntity = {\n  type: 'representative',\n  attributes: {\n    accreditedOrganizations: {\n      data: [{\n        attributes: {\n          canAcceptDigitalPoaRequests: true\n        }\n      }, {\n        attributes: {\n          canAcceptDigitalPoaRequests: true\n        }\n      }, {\n        attributes: {\n          canAcceptDigitalPoaRequests: false\n        }\n      }]\n    }\n  }\n};\nvar result = (0, _helpers.entityAcceptsDigitalPoaRequests)(mockEntity);\n(0, _chai.expect)(result).to.be.true;",
                      "err": {},
                      "uuid": "ecff9d49-82a8-4c38-b5ef-2a633c683885",
                      "parentUUID": "b210febc-f59b-46b8-8b0b-819d8986a1c5",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "ecff9d49-82a8-4c38-b5ef-2a633c683885"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "96e51b0f-2596-4866-9a6b-92b017e0163e",
                  "title": "when no organization accepts digital submissions",
                  "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/representative-appoint/tests/utilities/entityAcceptsDigitalPoaRequests.unit.spec.jsx",
                  "file": "/src/applications/representative-appoint/tests/utilities/entityAcceptsDigitalPoaRequests.unit.spec.jsx",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "returns false",
                      "fullTitle": "entityAcceptsDigitalPoaRequests when the representative is a vso representative when no organization accepts digital submissions returns false",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "slow",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "var mockEntity = {\n  type: 'representative',\n  attributes: {\n    accreditedOrganizations: {\n      data: [{\n        attributes: {\n          canAcceptDigitalPoaRequests: false\n        }\n      }, {\n        attributes: {\n          canAcceptDigitalPoaRequests: false\n        }\n      }, {\n        attributes: {\n          canAcceptDigitalPoaRequests: false\n        }\n      }]\n    }\n  }\n};\nvar result = (0, _helpers.entityAcceptsDigitalPoaRequests)(mockEntity);\n(0, _chai.expect)(result).to.be.false;",
                      "err": {},
                      "uuid": "f94ef883-7fd7-4944-aabb-5bfc722b0540",
                      "parentUUID": "96e51b0f-2596-4866-9a6b-92b017e0163e",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "f94ef883-7fd7-4944-aabb-5bfc722b0540"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "4bd713c3-790f-4c69-b9e9-a91d4a82844b",
                  "title": "when there are no organizations",
                  "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/representative-appoint/tests/utilities/entityAcceptsDigitalPoaRequests.unit.spec.jsx",
                  "file": "/src/applications/representative-appoint/tests/utilities/entityAcceptsDigitalPoaRequests.unit.spec.jsx",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "returns false",
                      "fullTitle": "entityAcceptsDigitalPoaRequests when the representative is a vso representative when there are no organizations returns false",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "var mockEntity = {\n  type: 'representative',\n  attributes: {\n    accreditedOrganizations: {\n      data: []\n    }\n  }\n};\nvar result = (0, _helpers.entityAcceptsDigitalPoaRequests)(mockEntity);\n(0, _chai.expect)(result).to.be.false;",
                      "err": {},
                      "uuid": "c654ebf7-acaa-416e-a04e-ddc47c7181ef",
                      "parentUUID": "4bd713c3-790f-4c69-b9e9-a91d4a82844b",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "c654ebf7-acaa-416e-a04e-ddc47c7181ef"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                }
              ],
              "passes": [],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "34dca649-f588-420b-ae3b-30fbdad9d6ce",
              "title": "when the representative is an attorney",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/representative-appoint/tests/utilities/entityAcceptsDigitalPoaRequests.unit.spec.jsx",
              "file": "/src/applications/representative-appoint/tests/utilities/entityAcceptsDigitalPoaRequests.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "returns false",
                  "fullTitle": "entityAcceptsDigitalPoaRequests when the representative is an attorney returns false",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var mockEntity = {\n  type: 'representative',\n  attributes: {\n    individualType: 'attorney'\n  }\n};\nvar result = (0, _helpers.entityAcceptsDigitalPoaRequests)(mockEntity);\n(0, _chai.expect)(result).to.be.false;",
                  "err": {},
                  "uuid": "c39b4676-4745-410e-93c1-12d6aaf4843f",
                  "parentUUID": "34dca649-f588-420b-ae3b-30fbdad9d6ce",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "c39b4676-4745-410e-93c1-12d6aaf4843f"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "b99b10bf-9215-4763-8c59-aea28f5c3ef2",
              "title": "when the representative is a claims agent",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/representative-appoint/tests/utilities/entityAcceptsDigitalPoaRequests.unit.spec.jsx",
              "file": "/src/applications/representative-appoint/tests/utilities/entityAcceptsDigitalPoaRequests.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "returns false",
                  "fullTitle": "entityAcceptsDigitalPoaRequests when the representative is a claims agent returns false",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var mockEntity = {\n  type: 'representative',\n  attributes: {\n    individualType: 'claims_agent'\n  }\n};\nvar result = (0, _helpers.entityAcceptsDigitalPoaRequests)(mockEntity);\n(0, _chai.expect)(result).to.be.false;",
                  "err": {},
                  "uuid": "f7f67330-6195-4c13-88ac-2256aeef83e4",
                  "parentUUID": "b99b10bf-9215-4763-8c59-aea28f5c3ef2",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "f7f67330-6195-4c13-88ac-2256aeef83e4"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "0fb4e012-522e-4ef9-9946-d2ed7b7225ac",
          "title": "filterOrganizations",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/representative-appoint/tests/utilities/filterOrganizations.unit.spec.js",
          "file": "/src/applications/representative-appoint/tests/utilities/filterOrganizations.unit.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should return all organizations if representativeSubmissionMethod is not \"digital\"",
              "fullTitle": "filterOrganizations should return all organizations if representativeSubmissionMethod is not \"digital\"",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var formData = {\n  representativeSubmissionMethod: 'mail',\n  'view:selectedRepresentative': {\n    attributes: {\n      accreditedOrganizations: {\n        data: [{\n          id: 1,\n          attributes: {\n            name: 'Org 1',\n            canAcceptDigitalPoaRequests: true\n          }\n        }, {\n          id: 2,\n          attributes: {\n            name: 'Org 2',\n            canAcceptDigitalPoaRequests: false\n          }\n        }]\n      }\n    }\n  }\n};\nvar result = (0, _helpers.filterOrganizations)(formData);\n(0, _chai.expect)(result).to.have.lengthOf(2);\n(0, _chai.expect)(result[0].attributes.name).to.equal('Org 1');\n(0, _chai.expect)(result[1].attributes.name).to.equal('Org 2');",
              "err": {},
              "uuid": "25d5e544-6f7f-41b3-b59d-566ffc22a744",
              "parentUUID": "0fb4e012-522e-4ef9-9946-d2ed7b7225ac",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return only organizations that can accept digital POA requests if representativeSubmissionMethod is \"digital\"",
              "fullTitle": "filterOrganizations should return only organizations that can accept digital POA requests if representativeSubmissionMethod is \"digital\"",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var formData = {\n  representativeSubmissionMethod: 'digital',\n  'view:selectedRepresentative': {\n    attributes: {\n      accreditedOrganizations: {\n        data: [{\n          id: 1,\n          attributes: {\n            name: 'Org 1',\n            canAcceptDigitalPoaRequests: true\n          }\n        }, {\n          id: 2,\n          attributes: {\n            name: 'Org 2',\n            canAcceptDigitalPoaRequests: false\n          }\n        }, {\n          id: 3,\n          attributes: {\n            name: 'Org 3',\n            canAcceptDigitalPoaRequests: true\n          }\n        }]\n      }\n    }\n  }\n};\nvar result = (0, _helpers.filterOrganizations)(formData);\n(0, _chai.expect)(result).to.have.lengthOf(2);\n(0, _chai.expect)(result[0].attributes.name).to.equal('Org 1');\n(0, _chai.expect)(result[1].attributes.name).to.equal('Org 3');",
              "err": {},
              "uuid": "793a160f-e0c3-434e-8a45-9b2c17ab6a77",
              "parentUUID": "0fb4e012-522e-4ef9-9946-d2ed7b7225ac",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return an empty array if no organizations can accept digital POA requests and representativeSubmissionMethod is \"digital\"",
              "fullTitle": "filterOrganizations should return an empty array if no organizations can accept digital POA requests and representativeSubmissionMethod is \"digital\"",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var formData = {\n  representativeSubmissionMethod: 'digital',\n  'view:selectedRepresentative': {\n    attributes: {\n      accreditedOrganizations: {\n        data: [{\n          id: 1,\n          attributes: {\n            name: 'Org 1',\n            canAcceptDigitalPoaRequests: false\n          }\n        }, {\n          id: 2,\n          attributes: {\n            name: 'Org 2',\n            canAcceptDigitalPoaRequests: false\n          }\n        }]\n      }\n    }\n  }\n};\nvar result = (0, _helpers.filterOrganizations)(formData);\n(0, _chai.expect)(result).to.be.an('array').that.is.empty;",
              "err": {},
              "uuid": "aa532dd7-ec6b-413a-a3c4-b7e09cb46541",
              "parentUUID": "0fb4e012-522e-4ef9-9946-d2ed7b7225ac",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "25d5e544-6f7f-41b3-b59d-566ffc22a744",
            "793a160f-e0c3-434e-8a45-9b2c17ab6a77",
            "aa532dd7-ec6b-413a-a3c4-b7e09cb46541"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "48163a91-f52f-4f4a-9503-61341c730547",
          "title": "formatDate",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/representative-appoint/tests/utilities/formatDate.unit.spec.jsx",
          "file": "/src/applications/representative-appoint/tests/utilities/formatDate.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should format a valid date in provided format",
              "fullTitle": "formatDate should format a valid date in provided format",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var result = (0, _helpers.formatDate)('1990-01-02', 'l');\n(0, _chai.expect)(result).to.equal('1/2/1990');",
              "err": {},
              "uuid": "7a7fef8a-df44-4426-933e-b72cc7dc539f",
              "parentUUID": "48163a91-f52f-4f4a-9503-61341c730547",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should default to LL format",
              "fullTitle": "formatDate should default to LL format",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var result = (0, _helpers.formatDate)('1990-01-02');\n(0, _chai.expect)(result).to.equal('January 2, 1990');",
              "err": {},
              "uuid": "d455e643-9a2e-4258-ae20-cec140448a9f",
              "parentUUID": "48163a91-f52f-4f4a-9503-61341c730547",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return \"Unknown\" when the date is invalid",
              "fullTitle": "formatDate should return \"Unknown\" when the date is invalid",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var result = (0, _helpers.formatDate)('1990-13-40');\n(0, _chai.expect)(result).to.equal('Unknown');",
              "err": {},
              "uuid": "153f7544-9ace-4c21-bed7-d82a4733f0e9",
              "parentUUID": "48163a91-f52f-4f4a-9503-61341c730547",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return \"Unknown\" when no date provided",
              "fullTitle": "formatDate should return \"Unknown\" when no date provided",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var result = (0, _helpers.formatDate)();\n(0, _chai.expect)(result).to.equal('Unknown');",
              "err": {},
              "uuid": "e34e7c62-68e2-4cb4-b5ad-fe8e9b1fc475",
              "parentUUID": "48163a91-f52f-4f4a-9503-61341c730547",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "7a7fef8a-df44-4426-933e-b72cc7dc539f",
            "d455e643-9a2e-4258-ae20-cec140448a9f",
            "153f7544-9ace-4c21-bed7-d82a4733f0e9",
            "e34e7c62-68e2-4cb4-b5ad-fe8e9b1fc475"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "e8225717-d36c-471b-ab28-bf2a37efa58e",
          "title": "formIs2122",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/representative-appoint/tests/utilities/formIs2122.unit.spec.jsx",
          "file": "/src/applications/representative-appoint/tests/utilities/formIs2122.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should return true if rep.attributes.individualType is \"veteran_service_officer\"",
              "fullTitle": "formIs2122 should return true if rep.attributes.individualType is \"veteran_service_officer\"",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var rep = {\n  type: 'individual',\n  attributes: {\n    individualType: 'veteran_service_officer'\n  }\n};\n(0, _chai.expect)((0, _helpers.formIs2122)(rep)).to.be.true;",
              "err": {},
              "uuid": "318e689e-7d54-4981-86ed-f7cd802698b4",
              "parentUUID": "e8225717-d36c-471b-ab28-bf2a37efa58e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return true if rep.attributes.individualType is \"representative\"",
              "fullTitle": "formIs2122 should return true if rep.attributes.individualType is \"representative\"",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var rep = {\n  type: 'individual',\n  attributes: {\n    individualType: 'representative'\n  }\n};\n(0, _chai.expect)((0, _helpers.formIs2122)(rep)).to.be.true;",
              "err": {},
              "uuid": "f15eb363-c53c-4cf5-be79-8d8c8ee058c2",
              "parentUUID": "e8225717-d36c-471b-ab28-bf2a37efa58e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return true if rep.type is \"organization\"",
              "fullTitle": "formIs2122 should return true if rep.type is \"organization\"",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var rep = {\n  type: 'organization'\n};\n(0, _chai.expect)((0, _helpers.formIs2122)(rep)).to.be.true;",
              "err": {},
              "uuid": "f2abf3da-90ef-46c3-8f8b-2a76f3d7e601",
              "parentUUID": "e8225717-d36c-471b-ab28-bf2a37efa58e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return false if rep.type is not \"representative\" or \"organization\"",
              "fullTitle": "formIs2122 should return false if rep.type is not \"representative\" or \"organization\"",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var rep = {\n  type: 'other'\n};\n(0, _chai.expect)((0, _helpers.formIs2122)(rep)).to.be.false;",
              "err": {},
              "uuid": "d93402b1-c7eb-4159-8248-7b04b4a78f82",
              "parentUUID": "e8225717-d36c-471b-ab28-bf2a37efa58e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return false if rep is null",
              "fullTitle": "formIs2122 should return false if rep is null",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var rep = null;\n(0, _chai.expect)((0, _helpers.formIs2122)(rep)).to.be.false;",
              "err": {},
              "uuid": "18a32e99-6467-4834-b9d9-35d27c1d3249",
              "parentUUID": "e8225717-d36c-471b-ab28-bf2a37efa58e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return false if rep is undefined",
              "fullTitle": "formIs2122 should return false if rep is undefined",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var rep = undefined;\n(0, _chai.expect)((0, _helpers.formIs2122)(rep)).to.be.false;",
              "err": {},
              "uuid": "2cc114b3-c88d-4f18-b0db-34012058dd2a",
              "parentUUID": "e8225717-d36c-471b-ab28-bf2a37efa58e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return false if rep.type is missing",
              "fullTitle": "formIs2122 should return false if rep.type is missing",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var rep = {};\n(0, _chai.expect)((0, _helpers.formIs2122)(rep)).to.be.false;",
              "err": {},
              "uuid": "6872d3b1-0b95-4a0d-8df2-fee663a07d8c",
              "parentUUID": "e8225717-d36c-471b-ab28-bf2a37efa58e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "318e689e-7d54-4981-86ed-f7cd802698b4",
            "f15eb363-c53c-4cf5-be79-8d8c8ee058c2",
            "f2abf3da-90ef-46c3-8f8b-2a76f3d7e601",
            "d93402b1-c7eb-4159-8248-7b04b4a78f82",
            "18a32e99-6467-4834-b9d9-35d27c1d3249",
            "2cc114b3-c88d-4f18-b0db-34012058dd2a",
            "6872d3b1-0b95-4a0d-8df2-fee663a07d8c"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "5ed270f8-b870-41e3-a478-1c538495ef93",
          "title": "getApplicantName",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/representative-appoint/tests/utilities/getApplicantName.unit.spec.jsx",
          "file": "/src/applications/representative-appoint/tests/utilities/getApplicantName.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "441c3317-7cf1-4f47-94d1-be2eb35cb8d6",
              "title": "when the applicant is the Veteran",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/representative-appoint/tests/utilities/getApplicantName.unit.spec.jsx",
              "file": "/src/applications/representative-appoint/tests/utilities/getApplicantName.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return the Veteran name formatted correctly",
                  "fullTitle": "getApplicantName when the applicant is the Veteran should return the Veteran name formatted correctly",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var mockFormData = {\n  'view:applicantIsVeteran': 'Yes',\n  veteranFullName: {\n    first: 'Bob',\n    middle: 'A',\n    last: 'Smith',\n    suffix: 'Sr.'\n  }\n};\nvar result = (0, _helpers.getApplicantName)(mockFormData);\n(0, _chai.expect)(result).to.equal('Bob A Smith Sr.');",
                  "err": {},
                  "uuid": "ed3c9fff-203e-44dc-b48e-e89bff4eae88",
                  "parentUUID": "441c3317-7cf1-4f47-94d1-be2eb35cb8d6",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "ed3c9fff-203e-44dc-b48e-e89bff4eae88"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "ab781b29-5b2a-4f2a-a467-f226ec307d62",
              "title": "when the applicant is not the Veteran",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/representative-appoint/tests/utilities/getApplicantName.unit.spec.jsx",
              "file": "/src/applications/representative-appoint/tests/utilities/getApplicantName.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return the non-Veteran applicant name formatted correctly",
                  "fullTitle": "getApplicantName when the applicant is not the Veteran should return the non-Veteran applicant name formatted correctly",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var mockFormData = {\n  'view:applicantIsVeteran': 'No',\n  applicantName: {\n    first: 'Bob',\n    middle: 'B',\n    last: 'Smith',\n    suffix: 'Jr.'\n  }\n};\nvar result = (0, _helpers.getApplicantName)(mockFormData);\n(0, _chai.expect)(result).to.equal('Bob B Smith Jr.');",
                  "err": {},
                  "uuid": "5f2f5e09-afc6-4ae4-9798-7fd6d4200864",
                  "parentUUID": "ab781b29-5b2a-4f2a-a467-f226ec307d62",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "5f2f5e09-afc6-4ae4-9798-7fd6d4200864"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "5207c9f2-62ca-48a2-8be5-8b7d2e7f5316",
          "title": "getEntityAddressAsObject",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/representative-appoint/tests/utilities/getEntityAddressAsObject.unit.spec.jsx",
          "file": "/src/applications/representative-appoint/tests/utilities/getEntityAddressAsObject.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should return correct address object based on formData",
              "fullTitle": "getEntityAddressAsObject should return correct address object based on formData",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var mockFormData = {\n  addressLine1: '400 South 18th Street',\n  addressLine2: 'Room 119',\n  addressLine3: '',\n  city: 'Newark',\n  stateCode: 'NJ',\n  zipCode: '07102'\n};\nvar expectedAddressObject = {\n  addressLine1: '400 South 18th Street',\n  addressLine2: 'Room 119',\n  addressLine3: '',\n  city: 'Newark',\n  stateCode: 'NJ',\n  zipCode: '07102'\n};\nvar result = (0, _helpers.getEntityAddressAsObject)(mockFormData);\n(0, _chai.expect)(result).to.deep.equal(expectedAddressObject);",
              "err": {},
              "uuid": "2a2cf895-da5f-4868-a1d5-480d900d56a3",
              "parentUUID": "5207c9f2-62ca-48a2-8be5-8b7d2e7f5316",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return empty strings for missing address fields",
              "fullTitle": "getEntityAddressAsObject should return empty strings for missing address fields",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var mockFormData = {\n  addressLine1: '',\n  addressLine2: '',\n  addressLine3: '',\n  city: '',\n  stateCode: '',\n  zipCode: ''\n};\nvar expectedAddressObject = {\n  addressLine1: '',\n  addressLine2: '',\n  addressLine3: '',\n  city: '',\n  stateCode: '',\n  zipCode: ''\n};\nvar result = (0, _helpers.getEntityAddressAsObject)(mockFormData);\n(0, _chai.expect)(result).to.deep.equal(expectedAddressObject);",
              "err": {},
              "uuid": "9fde40d1-fd9e-47ac-8e1a-f45c3dc6013a",
              "parentUUID": "5207c9f2-62ca-48a2-8be5-8b7d2e7f5316",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "2a2cf895-da5f-4868-a1d5-480d900d56a3",
            "9fde40d1-fd9e-47ac-8e1a-f45c3dc6013a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "8b879300-c8a3-48e4-a62a-457f44f2f914",
          "title": "getEntityAddressAsString",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/representative-appoint/tests/utilities/getEntityAddressAsString.unit.spec.jsx",
          "file": "/src/applications/representative-appoint/tests/utilities/getEntityAddressAsString.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should return the correct formatted address string based on formData",
              "fullTitle": "getEntityAddressAsString should return the correct formatted address string based on formData",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var mockFormData = {\n  addressLine1: '400 South 18th Street',\n  addressLine2: 'Room 119',\n  addressLine3: '',\n  city: 'Newark',\n  stateCode: 'NJ',\n  zipCode: '07102'\n};\nvar expectedAddressString = '400 South 18th Street Room 119 Newark, NJ 07102';\nvar result = (0, _helpers.getEntityAddressAsString)(mockFormData);\n(0, _chai.expect)(result).to.equal(expectedAddressString);",
              "err": {},
              "uuid": "a641bda9-c5a2-44ef-91c5-d9b6de32f14f",
              "parentUUID": "8b879300-c8a3-48e4-a62a-457f44f2f914",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return a correctly formatted string with missing fields",
              "fullTitle": "getEntityAddressAsString should return a correctly formatted string with missing fields",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var mockFormData = {\n  'view:selectedRepresentative': {\n    addressLine1: '',\n    addressLine2: '',\n    addressLine3: '',\n    city: '',\n    stateCode: '',\n    zipCode: ''\n  }\n};\nvar expectedAddressString = '';\nvar result = (0, _helpers.getEntityAddressAsString)(mockFormData);\n(0, _chai.expect)(result).to.equal(expectedAddressString);",
              "err": {},
              "uuid": "bebbc6a0-2120-4dc8-b634-8a40ac502688",
              "parentUUID": "8b879300-c8a3-48e4-a62a-457f44f2f914",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a641bda9-c5a2-44ef-91c5-d9b6de32f14f",
            "bebbc6a0-2120-4dc8-b634-8a40ac502688"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "0f1f66d5-a4bc-42ab-8d08-a6ff37d46fda",
          "title": "getFormName",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/representative-appoint/tests/utilities/getFormName.unit.spec.jsx",
          "file": "/src/applications/representative-appoint/tests/utilities/getFormName.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should return the form name \"Appointment of Veterans Service Organization as Claimant's Representative\" for an organization representative",
              "fullTitle": "getFormName should return the form name \"Appointment of Veterans Service Organization as Claimant's Representative\" for an organization representative",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var mockFormData = {\n  'view:selectedRepresentative': {\n    type: 'organization'\n  }\n};\nvar result = (0, _helpers.getFormName)(mockFormData);\n(0, _chai.expect)(result).to.equal(\"Appointment of Veterans Service Organization as Claimant's Representative\");",
              "err": {},
              "uuid": "d3bcac7e-7f32-49c2-8d25-2466b9c67608",
              "parentUUID": "0f1f66d5-a4bc-42ab-8d08-a6ff37d46fda",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return the form name \"Appointment of Veterans Service Organization as Claimant's Representative\" when individualType is representative for an organization",
              "fullTitle": "getFormName should return the form name \"Appointment of Veterans Service Organization as Claimant's Representative\" when individualType is representative for an organization",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var mockFormData = {\n  'view:selectedRepresentative': {\n    type: 'organization',\n    attributes: {\n      individualType: 'representative'\n    }\n  }\n};\nvar result = (0, _helpers.getFormName)(mockFormData);\n(0, _chai.expect)(result).to.equal(\"Appointment of Veterans Service Organization as Claimant's Representative\");",
              "err": {},
              "uuid": "e642a06e-7c9f-486e-9800-cd6fcf45dd97",
              "parentUUID": "0f1f66d5-a4bc-42ab-8d08-a6ff37d46fda",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return the form name \"Appointment of Individual As Claimant's Representative\" for an attorney representative",
              "fullTitle": "getFormName should return the form name \"Appointment of Individual As Claimant's Representative\" for an attorney representative",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var mockFormData = {\n  'view:selectedRepresentative': {\n    type: 'individual',\n    attributes: {\n      individualType: 'attorney'\n    }\n  }\n};\nvar result = (0, _helpers.getFormName)(mockFormData);\n(0, _chai.expect)(result).to.equal(\"Appointment of Individual As Claimant's Representative\");",
              "err": {},
              "uuid": "69e4310b-877f-47b9-b267-3b3cbff596d5",
              "parentUUID": "0f1f66d5-a4bc-42ab-8d08-a6ff37d46fda",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return the form name \"Appointment of Individual As Claimant's Representative\" for a claims agent representative",
              "fullTitle": "getFormName should return the form name \"Appointment of Individual As Claimant's Representative\" for a claims agent representative",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var mockFormData = {\n  'view:selectedRepresentative': {\n    type: 'individual',\n    attributes: {\n      individualType: 'claimsAgent'\n    }\n  }\n};\nvar result = (0, _helpers.getFormName)(mockFormData);\n(0, _chai.expect)(result).to.equal(\"Appointment of Individual As Claimant's Representative\");",
              "err": {},
              "uuid": "cafde94a-0aeb-4f78-a7c7-24b014fdebce",
              "parentUUID": "0f1f66d5-a4bc-42ab-8d08-a6ff37d46fda",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "d3bcac7e-7f32-49c2-8d25-2466b9c67608",
            "e642a06e-7c9f-486e-9800-cd6fcf45dd97",
            "69e4310b-877f-47b9-b267-3b3cbff596d5",
            "cafde94a-0aeb-4f78-a7c7-24b014fdebce"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "7eb855f3-a434-4445-a6e4-641486d18b00",
          "title": "getFormNumber",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/representative-appoint/tests/utilities/getFormNumber.unit.spec.jsx",
          "file": "/src/applications/representative-appoint/tests/utilities/getFormNumber.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should return \"21-22\" for an organization",
              "fullTitle": "getFormNumber should return \"21-22\" for an organization",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var mockFormData = {\n  'view:selectedRepresentative': {\n    type: 'organization'\n  }\n};\nvar result = (0, _helpers.getFormNumber)(mockFormData);\n(0, _chai.expect)(result).to.equal('21-22');",
              "err": {},
              "uuid": "46c0f91a-8a0b-49a8-9e99-c96da2ae96f1",
              "parentUUID": "7eb855f3-a434-4445-a6e4-641486d18b00",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return \"21-22\" for just an organization representative",
              "fullTitle": "getFormNumber should return \"21-22\" for just an organization representative",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var mockFormData = {\n  'view:selectedRepresentative': {\n    type: 'organization',\n    attributes: {\n      individualType: 'representative'\n    }\n  }\n};\nvar result = (0, _helpers.getFormNumber)(mockFormData);\n(0, _chai.expect)(result).to.equal('21-22');",
              "err": {},
              "uuid": "3b839256-22c8-4ba7-bca5-9f287d17040a",
              "parentUUID": "7eb855f3-a434-4445-a6e4-641486d18b00",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return \"21-22\" for an individual representative",
              "fullTitle": "getFormNumber should return \"21-22\" for an individual representative",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var mockFormData = {\n  'view:selectedRepresentative': {\n    type: 'individual',\n    attributes: {\n      individualType: 'representative'\n    }\n  }\n};\nvar result = (0, _helpers.getFormNumber)(mockFormData);\n(0, _chai.expect)(result).to.equal('21-22');",
              "err": {},
              "uuid": "249a7110-9a03-4f8f-9c93-f64b7af18e12",
              "parentUUID": "7eb855f3-a434-4445-a6e4-641486d18b00",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return \"21-22a\" for an attorney or claims agent",
              "fullTitle": "getFormNumber should return \"21-22a\" for an attorney or claims agent",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var mockFormData = {\n  'view:selectedRepresentative': {\n    type: 'individual',\n    attributes: {\n      individualType: 'attorney'\n    }\n  }\n};\nvar result = (0, _helpers.getFormNumber)(mockFormData);\n(0, _chai.expect)(result).to.equal('21-22a');",
              "err": {},
              "uuid": "294d4697-4b0e-4751-937b-26dd13387e97",
              "parentUUID": "7eb855f3-a434-4445-a6e4-641486d18b00",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "46c0f91a-8a0b-49a8-9e99-c96da2ae96f1",
            "3b839256-22c8-4ba7-bca5-9f287d17040a",
            "249a7110-9a03-4f8f-9c93-f64b7af18e12",
            "294d4697-4b0e-4751-937b-26dd13387e97"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "3c25a42b-cf72-45f8-ab7f-737e956ae4d3",
          "title": "getFormNumberFromEntity",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/representative-appoint/tests/utilities/getFormNumberFromEntity.unit.spec.jsx",
          "file": "/src/applications/representative-appoint/tests/utilities/getFormNumberFromEntity.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should return \"21-22\" when entity type is organization",
              "fullTitle": "getFormNumberFromEntity should return \"21-22\" when entity type is organization",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var mockFormData = {\n  type: 'organization'\n};\nvar result = (0, _helpers.getFormNumberFromEntity)(mockFormData);\n(0, _chai.expect)(result).to.equal('21-22');",
              "err": {},
              "uuid": "27468ea4-85f2-49dd-ad18-710b0495a333",
              "parentUUID": "3c25a42b-cf72-45f8-ab7f-737e956ae4d3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return \"21-22a\" when individual type is attorney",
              "fullTitle": "getFormNumberFromEntity should return \"21-22a\" when individual type is attorney",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var mockFormData = {\n  type: 'individual',\n  attributes: {\n    individualType: 'attorney'\n  }\n};\nvar result = (0, _helpers.getFormNumberFromEntity)(mockFormData);\n(0, _chai.expect)(result).to.equal('21-22a');",
              "err": {},
              "uuid": "4e464305-081d-4aed-ade9-1ebd267a74fc",
              "parentUUID": "3c25a42b-cf72-45f8-ab7f-737e956ae4d3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return \"21-22a\" when individual type is claimsAgent",
              "fullTitle": "getFormNumberFromEntity should return \"21-22a\" when individual type is claimsAgent",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var mockFormData = {\n  type: 'individual',\n  attributes: {\n    individualType: 'claimsAgent'\n  }\n};\nvar result = (0, _helpers.getFormNumberFromEntity)(mockFormData);\n(0, _chai.expect)(result).to.equal('21-22a');",
              "err": {},
              "uuid": "2f71c2e8-4af3-4ee5-b794-216e69dda699",
              "parentUUID": "3c25a42b-cf72-45f8-ab7f-737e956ae4d3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return \"21-22\" when individual type is representative",
              "fullTitle": "getFormNumberFromEntity should return \"21-22\" when individual type is representative",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var mockFormData = {\n  type: 'individual',\n  attributes: {\n    individualType: 'representative'\n  }\n};\nvar result = (0, _helpers.getFormNumberFromEntity)(mockFormData);\n(0, _chai.expect)(result).to.equal('21-22');",
              "err": {},
              "uuid": "cb5afb3b-3d19-421f-a031-7653ffb3e3f5",
              "parentUUID": "3c25a42b-cf72-45f8-ab7f-737e956ae4d3",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "27468ea4-85f2-49dd-ad18-710b0495a333",
            "4e464305-081d-4aed-ade9-1ebd267a74fc",
            "2f71c2e8-4af3-4ee5-b794-216e69dda699",
            "cb5afb3b-3d19-421f-a031-7653ffb3e3f5"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "f3c41640-342a-4012-87f9-761f7a15fd4b",
          "title": "getFormSubtitle",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/representative-appoint/tests/utilities/getFormSubtitle.unit.spec.jsx",
          "file": "/src/applications/representative-appoint/tests/utilities/getFormSubtitle.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "50e568ba-3e10-446e-8107-7045fe21c357",
              "title": "when the entity type is organization",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/representative-appoint/tests/utilities/getFormSubtitle.unit.spec.jsx",
              "file": "/src/applications/representative-appoint/tests/utilities/getFormSubtitle.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return \"VA Form 21-22\"",
                  "fullTitle": "getFormSubtitle when the entity type is organization should return \"VA Form 21-22\"",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var mockFormData = {\n  'view:selectedRepresentative': {\n    type: 'organization'\n  }\n};\nvar result = (0, _helpers.getFormSubtitle)(mockFormData);\n(0, _chai.expect)(result).to.equal('VA Form 21-22');",
                  "err": {},
                  "uuid": "04601b14-69f4-4815-8c60-6a291ba91f6f",
                  "parentUUID": "50e568ba-3e10-446e-8107-7045fe21c357",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "04601b14-69f4-4815-8c60-6a291ba91f6f"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "ec2d668c-0331-4c33-81b2-151bbc32c150",
              "title": "when the entity type is representative",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/representative-appoint/tests/utilities/getFormSubtitle.unit.spec.jsx",
              "file": "/src/applications/representative-appoint/tests/utilities/getFormSubtitle.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [],
              "suites": [
                {
                  "uuid": "19997288-3b93-4b37-b3a9-03846c04eee7",
                  "title": "when the individual type is veteran_service_officer",
                  "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/representative-appoint/tests/utilities/getFormSubtitle.unit.spec.jsx",
                  "file": "/src/applications/representative-appoint/tests/utilities/getFormSubtitle.unit.spec.jsx",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "should return \"VA Form 21-22\"",
                      "fullTitle": "getFormSubtitle when the entity type is representative when the individual type is veteran_service_officer should return \"VA Form 21-22\"",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "var mockFormData = {\n  'view:selectedRepresentative': {\n    type: 'representative',\n    attributes: {\n      individualType: 'veteran_service_officer'\n    }\n  }\n};\nvar result = (0, _helpers.getFormSubtitle)(mockFormData);\n(0, _chai.expect)(result).to.equal('VA Form 21-22');",
                      "err": {},
                      "uuid": "cbb8cbe4-5bcf-4439-afb3-c8f7f96c6fca",
                      "parentUUID": "19997288-3b93-4b37-b3a9-03846c04eee7",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "cbb8cbe4-5bcf-4439-afb3-c8f7f96c6fca"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "6a09bdb0-90c2-46c2-8089-743dbaf05775",
                  "title": "when the individual type is representative",
                  "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/representative-appoint/tests/utilities/getFormSubtitle.unit.spec.jsx",
                  "file": "/src/applications/representative-appoint/tests/utilities/getFormSubtitle.unit.spec.jsx",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "should return \"VA Form 21-22\"",
                      "fullTitle": "getFormSubtitle when the entity type is representative when the individual type is representative should return \"VA Form 21-22\"",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "var mockFormData = {\n  'view:selectedRepresentative': {\n    type: 'representative',\n    attributes: {\n      individualType: 'representative'\n    }\n  }\n};\nvar result = (0, _helpers.getFormSubtitle)(mockFormData);\n(0, _chai.expect)(result).to.equal('VA Form 21-22');",
                      "err": {},
                      "uuid": "b9c6887b-3bc5-48a4-9e56-a8160da1c724",
                      "parentUUID": "6a09bdb0-90c2-46c2-8089-743dbaf05775",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "b9c6887b-3bc5-48a4-9e56-a8160da1c724"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "142f0ec5-efee-409f-aaac-4fd4cfcc7e07",
                  "title": "when the individual type is not veteran_service_officer or representative",
                  "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/representative-appoint/tests/utilities/getFormSubtitle.unit.spec.jsx",
                  "file": "/src/applications/representative-appoint/tests/utilities/getFormSubtitle.unit.spec.jsx",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "should return \"VA Form 21-22a\"",
                      "fullTitle": "getFormSubtitle when the entity type is representative when the individual type is not veteran_service_officer or representative should return \"VA Form 21-22a\"",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "var mockFormData = {\n  'view:selectedRepresentative': {\n    type: 'representative',\n    attributes: {\n      individualType: 'attorney'\n    }\n  }\n};\nvar result = (0, _helpers.getFormSubtitle)(mockFormData);\n(0, _chai.expect)(result).to.equal('VA Form 21-22a');",
                      "err": {},
                      "uuid": "b5ba0795-55ac-46fe-8a12-2f89382c7697",
                      "parentUUID": "142f0ec5-efee-409f-aaac-4fd4cfcc7e07",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "b5ba0795-55ac-46fe-8a12-2f89382c7697"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                }
              ],
              "passes": [],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "4465b07a-af64-4af1-8fdc-85f0dcaa0ccf",
              "title": "when the entity type is individual",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/representative-appoint/tests/utilities/getFormSubtitle.unit.spec.jsx",
              "file": "/src/applications/representative-appoint/tests/utilities/getFormSubtitle.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [],
              "suites": [
                {
                  "uuid": "fdef122a-538e-4795-a292-39e4096fb956",
                  "title": "when the individual type is representative",
                  "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/representative-appoint/tests/utilities/getFormSubtitle.unit.spec.jsx",
                  "file": "/src/applications/representative-appoint/tests/utilities/getFormSubtitle.unit.spec.jsx",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "should return \"VA Form 21-22\"",
                      "fullTitle": "getFormSubtitle when the entity type is individual when the individual type is representative should return \"VA Form 21-22\"",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "var mockFormData = {\n  'view:selectedRepresentative': {\n    type: 'individual',\n    attributes: {\n      individualType: 'representative'\n    }\n  }\n};\nvar result = (0, _helpers.getFormSubtitle)(mockFormData);\n(0, _chai.expect)(result).to.equal('VA Form 21-22');",
                      "err": {},
                      "uuid": "45b1c410-50ae-4030-b45b-346116a20e68",
                      "parentUUID": "fdef122a-538e-4795-a292-39e4096fb956",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "45b1c410-50ae-4030-b45b-346116a20e68"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "7282132b-2847-4a29-8967-507f5a384a93",
                  "title": "when the individual type is veteran_service_officer",
                  "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/representative-appoint/tests/utilities/getFormSubtitle.unit.spec.jsx",
                  "file": "/src/applications/representative-appoint/tests/utilities/getFormSubtitle.unit.spec.jsx",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "should return \"VA Form 21-22\"",
                      "fullTitle": "getFormSubtitle when the entity type is individual when the individual type is veteran_service_officer should return \"VA Form 21-22\"",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "slow",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "var mockFormData = {\n  'view:selectedRepresentative': {\n    type: 'individual',\n    attributes: {\n      individualType: 'veteran_service_officer'\n    }\n  }\n};\nvar result = (0, _helpers.getFormSubtitle)(mockFormData);\n(0, _chai.expect)(result).to.equal('VA Form 21-22');",
                      "err": {},
                      "uuid": "bbbf8b7a-b0ea-400b-8c1e-c33fc8818ec8",
                      "parentUUID": "7282132b-2847-4a29-8967-507f5a384a93",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "bbbf8b7a-b0ea-400b-8c1e-c33fc8818ec8"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "a2b5517f-881d-41f2-a98c-8742079d4499",
                  "title": "when the individual type is not veteran_service_officer or representative",
                  "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/representative-appoint/tests/utilities/getFormSubtitle.unit.spec.jsx",
                  "file": "/src/applications/representative-appoint/tests/utilities/getFormSubtitle.unit.spec.jsx",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "should return \"VA Form 21-22a\"",
                      "fullTitle": "getFormSubtitle when the entity type is individual when the individual type is not veteran_service_officer or representative should return \"VA Form 21-22a\"",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "var mockFormData = {\n  'view:selectedRepresentative': {\n    type: 'individual',\n    attributes: {\n      individualType: 'attorney'\n    }\n  }\n};\nvar result = (0, _helpers.getFormSubtitle)(mockFormData);\n(0, _chai.expect)(result).to.equal('VA Form 21-22a');",
                      "err": {},
                      "uuid": "130fe438-5e39-4954-9aaf-966e004a6bea",
                      "parentUUID": "a2b5517f-881d-41f2-a98c-8742079d4499",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "130fe438-5e39-4954-9aaf-966e004a6bea"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                }
              ],
              "passes": [],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "0e028533-37d1-4df6-87e7-7eafe0f282b3",
              "title": "when the entity type is anything else",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/representative-appoint/tests/utilities/getFormSubtitle.unit.spec.jsx",
              "file": "/src/applications/representative-appoint/tests/utilities/getFormSubtitle.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return \"VA Forms 21-22 and 21-22a\"",
                  "fullTitle": "getFormSubtitle when the entity type is anything else should return \"VA Forms 21-22 and 21-22a\"",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var mockFormData = {\n  'view:selectedRepresentative': {\n    type: 'else'\n  }\n};\nvar result = (0, _helpers.getFormSubtitle)(mockFormData);\n(0, _chai.expect)(result).to.equal('VA Forms 21-22 and 21-22a');",
                  "err": {},
                  "uuid": "7bb5bdac-3e2d-4ece-9223-a598d4c8ea64",
                  "parentUUID": "0e028533-37d1-4df6-87e7-7eafe0f282b3",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "7bb5bdac-3e2d-4ece-9223-a598d4c8ea64"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "f55be4b3-6947-4f4c-bc73-cfa43cb7e878",
          "title": "getOrgName",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/representative-appoint/tests/utilities/getOrgName.unit.spec.jsx",
          "file": "/src/applications/representative-appoint/tests/utilities/getOrgName.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should return the organization name when the representative is an organization",
              "fullTitle": "getOrgName should return the organization name when the representative is an organization",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var mockFormData = {\n  'view:selectedRepresentative': {\n    type: 'organization',\n    attributes: {\n      name: 'Disabled American Veterans'\n    }\n  }\n};\nvar result = (0, _helpers.getOrgName)(mockFormData);\n(0, _chai.expect)(result).to.equal('Disabled American Veterans');",
              "err": {},
              "uuid": "8a55037e-5c1b-4114-a284-c32e9ecfcac0",
              "parentUUID": "f55be4b3-6947-4f4c-bc73-cfa43cb7e878",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return null when the representative is an attorney or claims agent",
              "fullTitle": "getOrgName should return null when the representative is an attorney or claims agent",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var mockFormData = {\n  'view:selectedRepresentative': {\n    type: 'individual',\n    attributes: {\n      individualType: 'attorney'\n    }\n  }\n};\nvar result = (0, _helpers.getOrgName)(mockFormData);\n(0, _chai.expect)(result).to.be.null;",
              "err": {},
              "uuid": "bb9beb29-18e7-4c4c-9200-7294b66aca3e",
              "parentUUID": "f55be4b3-6947-4f4c-bc73-cfa43cb7e878",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return the accredited organization name based on selected ID",
              "fullTitle": "getOrgName should return the accredited organization name based on selected ID",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var mockFormData = {\n  selectedAccreditedOrganizationId: '1',\n  'view:selectedRepresentative': {\n    attributes: {\n      accreditedOrganizations: {\n        data: [{\n          id: '1',\n          attributes: {\n            name: 'Disabled American Veterans'\n          }\n        }, {\n          id: '3',\n          attributes: {\n            name: 'Fake Organization Name'\n          }\n        }]\n      }\n    }\n  }\n};\nvar result = (0, _helpers.getOrgName)(mockFormData);\n(0, _chai.expect)(result).to.equal('Disabled American Veterans');",
              "err": {},
              "uuid": "c0d0f1c9-ef91-4bf2-a84e-5ab36e73fc7d",
              "parentUUID": "f55be4b3-6947-4f4c-bc73-cfa43cb7e878",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return the only accredited organization name when there is one organization",
              "fullTitle": "getOrgName should return the only accredited organization name when there is one organization",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var mockFormData = {\n  'view:selectedRepresentative': {\n    attributes: {\n      accreditedOrganizations: {\n        data: [{\n          id: '1',\n          attributes: {\n            name: 'Disabled American Veterans'\n          }\n        }]\n      }\n    }\n  }\n};\nvar result = (0, _helpers.getOrgName)(mockFormData);\n(0, _chai.expect)(result).to.equal('Disabled American Veterans');",
              "err": {},
              "uuid": "0be10ee8-3d5c-4496-b8c8-a8708864b880",
              "parentUUID": "f55be4b3-6947-4f4c-bc73-cfa43cb7e878",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return undefined when no matching accredited organization is found",
              "fullTitle": "getOrgName should return undefined when no matching accredited organization is found",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var mockFormData = {\n  selectedAccreditedOrganizationId: '2',\n  // No match\n  'view:selectedRepresentative': {\n    attributes: {\n      accreditedOrganizations: {\n        data: [{\n          id: '1',\n          attributes: {\n            name: 'Disabled American Veterans'\n          }\n        }, {\n          id: '3',\n          attributes: {\n            name: 'Fake Organization Name'\n          }\n        }]\n      }\n    }\n  }\n};\nvar result = (0, _helpers.getOrgName)(mockFormData);\n(0, _chai.expect)(result).to.be.undefined;",
              "err": {},
              "uuid": "6bb514a2-36bb-40de-9927-48b4224c1cc9",
              "parentUUID": "f55be4b3-6947-4f4c-bc73-cfa43cb7e878",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "8a55037e-5c1b-4114-a284-c32e9ecfcac0",
            "bb9beb29-18e7-4c4c-9200-7294b66aca3e",
            "c0d0f1c9-ef91-4bf2-a84e-5ab36e73fc7d",
            "0be10ee8-3d5c-4496-b8c8-a8708864b880",
            "6bb514a2-36bb-40de-9927-48b4224c1cc9"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "b6a7d2ad-54f4-48b3-8176-8ee68c9bbd91",
          "title": "getRepresentativeName",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/representative-appoint/tests/utilities/getRepresentativeName.unit.spec.jsx",
          "file": "/src/applications/representative-appoint/tests/utilities/getRepresentativeName.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should return null when there is no selected representative",
              "fullTitle": "getRepresentativeName should return null when there is no selected representative",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var mockFormData = {\n  test: '123'\n};\nvar result = (0, _helpers.getRepresentativeName)(mockFormData);\n(0, _chai.expect)(result).to.be.null;",
              "err": {},
              "uuid": "05e8eb6d-dccd-4de3-9f23-0b1237bdf4c9",
              "parentUUID": "b6a7d2ad-54f4-48b3-8176-8ee68c9bbd91",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return the name attribute for an organization",
              "fullTitle": "getRepresentativeName should return the name attribute for an organization",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var mockFormData = {\n  'view:selectedRepresentative': {\n    type: 'organization',\n    attributes: {\n      name: 'This is my name',\n      fullName: 'This is my full name'\n    }\n  }\n};\nvar result = (0, _helpers.getRepresentativeName)(mockFormData);\n(0, _chai.expect)(result).to.equal('This is my name');",
              "err": {},
              "uuid": "db0ac7f9-ece9-4993-b266-26855969bc85",
              "parentUUID": "b6a7d2ad-54f4-48b3-8176-8ee68c9bbd91",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return selectedAccreditedOrganizationName for an individual with many organizations",
              "fullTitle": "getRepresentativeName should return selectedAccreditedOrganizationName for an individual with many organizations",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var mockFormData = {\n  'view:selectedRepresentative': {\n    type: 'individual',\n    attributes: {\n      name: 'This is my name',\n      fullName: 'This is my full name',\n      accreditedOrganizations: {\n        data: [{\n          id: 1\n        }, {\n          id: 2\n        }]\n      }\n    }\n  },\n  selectedAccreditedOrganizationName: 'This is my selected org name'\n};\nvar result = (0, _helpers.getRepresentativeName)(mockFormData);\n(0, _chai.expect)(result).to.equal('This is my selected org name');",
              "err": {},
              "uuid": "36d12973-4cfe-4fb4-a406-3e7b51071c56",
              "parentUUID": "b6a7d2ad-54f4-48b3-8176-8ee68c9bbd91",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return fullName attribute for an individual with no organizations",
              "fullTitle": "getRepresentativeName should return fullName attribute for an individual with no organizations",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var mockFormData = {\n  'view:selectedRepresentative': {\n    type: 'individual',\n    attributes: {\n      name: 'This is my name',\n      fullName: 'This is my full name',\n      accreditedOrganizations: {\n        data: []\n      }\n    }\n  }\n};\nvar result = (0, _helpers.getRepresentativeName)(mockFormData);\n(0, _chai.expect)(result).to.equal('This is my full name');",
              "err": {},
              "uuid": "1c14f651-0ecd-4e9d-a7ab-f7a0fe560dc5",
              "parentUUID": "b6a7d2ad-54f4-48b3-8176-8ee68c9bbd91",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "05e8eb6d-dccd-4de3-9f23-0b1237bdf4c9",
            "db0ac7f9-ece9-4993-b266-26855969bc85",
            "36d12973-4cfe-4fb4-a406-3e7b51071c56",
            "1c14f651-0ecd-4e9d-a7ab-f7a0fe560dc5"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "31c00c17-ca01-4509-98a0-5194c0b04346",
          "title": "getRepType",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/representative-appoint/tests/utilities/getRepType.unit.spec.jsx",
          "file": "/src/applications/representative-appoint/tests/utilities/getRepType.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should return \"Organization\" when entity type is organization",
              "fullTitle": "getRepType should return \"Organization\" when entity type is organization",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var mockFormData = {\n  type: 'organization'\n};\nvar result = (0, _helpers.getRepType)(mockFormData);\n(0, _chai.expect)(result).to.equal('Organization');",
              "err": {},
              "uuid": "4060f3d4-fb08-4193-80aa-73f608de1b02",
              "parentUUID": "31c00c17-ca01-4509-98a0-5194c0b04346",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return \"Attorney\" when individual type is attorney",
              "fullTitle": "getRepType should return \"Attorney\" when individual type is attorney",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var mockFormData = {\n  type: 'individual',\n  attributes: {\n    individualType: 'attorney'\n  }\n};\nvar result = (0, _helpers.getRepType)(mockFormData);\n(0, _chai.expect)(result).to.equal('Attorney');",
              "err": {},
              "uuid": "8720d78e-6894-4d87-9269-fb2fbc58357c",
              "parentUUID": "31c00c17-ca01-4509-98a0-5194c0b04346",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return \"Claims Agent\" when individual type is claimsAgent",
              "fullTitle": "getRepType should return \"Claims Agent\" when individual type is claimsAgent",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var mockFormData = {\n  type: 'individual',\n  attributes: {\n    individualType: 'claimsAgent'\n  }\n};\nvar result = (0, _helpers.getRepType)(mockFormData);\n(0, _chai.expect)(result).to.equal('Claims Agent');",
              "err": {},
              "uuid": "c7540ed3-f98f-486a-b986-3c4509d50131",
              "parentUUID": "31c00c17-ca01-4509-98a0-5194c0b04346",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return \"VSO Representative\" when individual type is representative",
              "fullTitle": "getRepType should return \"VSO Representative\" when individual type is representative",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var mockFormData = {\n  type: 'individual',\n  attributes: {\n    individualType: 'representative'\n  }\n};\nvar result = (0, _helpers.getRepType)(mockFormData);\n(0, _chai.expect)(result).to.equal('VSO Representative');",
              "err": {},
              "uuid": "93d0f4e6-8b5f-49b6-8cfa-73fd35546b31",
              "parentUUID": "31c00c17-ca01-4509-98a0-5194c0b04346",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "4060f3d4-fb08-4193-80aa-73f608de1b02",
            "8720d78e-6894-4d87-9269-fb2fbc58357c",
            "c7540ed3-f98f-486a-b986-3c4509d50131",
            "93d0f4e6-8b5f-49b6-8cfa-73fd35546b31"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "b77864e8-8ed4-4705-9836-57206bfcb448",
          "title": "formIs2122A",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/representative-appoint/tests/utilities/isAttorneyOrClaimsAgent.unit.spec.jsx",
          "file": "/src/applications/representative-appoint/tests/utilities/isAttorneyOrClaimsAgent.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should return true when the selected rep has an individualType of attorney",
              "fullTitle": "formIs2122A should return true when the selected rep has an individualType of attorney",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var mockFormData = {\n  'view:selectedRepresentative': {\n    attributes: {\n      individualType: 'attorney'\n    }\n  }\n};\nvar result = (0, _helpers.formIs2122A)(mockFormData);\n(0, _chai.expect)(result).to.be.true;",
              "err": {},
              "uuid": "3bedd257-e4e9-4a07-9bc1-ce14d141e0a2",
              "parentUUID": "b77864e8-8ed4-4705-9836-57206bfcb448",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return true when the selected rep has an individualType of claimsAgent",
              "fullTitle": "formIs2122A should return true when the selected rep has an individualType of claimsAgent",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var mockFormData = {\n  'view:selectedRepresentative': {\n    attributes: {\n      individualType: 'claimsAgent'\n    }\n  }\n};\nvar result = (0, _helpers.formIs2122A)(mockFormData);\n(0, _chai.expect)(result).to.be.true;",
              "err": {},
              "uuid": "79906f8a-a341-4fb9-8f41-a1078026f095",
              "parentUUID": "b77864e8-8ed4-4705-9836-57206bfcb448",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return true when the selected rep has an individualType of claims_agent",
              "fullTitle": "formIs2122A should return true when the selected rep has an individualType of claims_agent",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var mockFormData = {\n  'view:selectedRepresentative': {\n    attributes: {\n      individualType: 'claims_agent'\n    }\n  }\n};\nvar result = (0, _helpers.formIs2122A)(mockFormData);\n(0, _chai.expect)(result).to.be.true;",
              "err": {},
              "uuid": "f50afa30-f87a-4d91-ac05-bac28b0d7a55",
              "parentUUID": "b77864e8-8ed4-4705-9836-57206bfcb448",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return true when the selected rep has an individualType of claim_agents",
              "fullTitle": "formIs2122A should return true when the selected rep has an individualType of claim_agents",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var mockFormData = {\n  'view:selectedRepresentative': {\n    attributes: {\n      individualType: 'claim_agents'\n    }\n  }\n};\nvar result = (0, _helpers.formIs2122A)(mockFormData);\n(0, _chai.expect)(result).to.be.true;",
              "err": {},
              "uuid": "94fbff64-ca4c-43f3-8942-03bd0b8017d9",
              "parentUUID": "b77864e8-8ed4-4705-9836-57206bfcb448",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return false when the selected rep has an other individualType",
              "fullTitle": "formIs2122A should return false when the selected rep has an other individualType",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var mockFormData = {\n  'view:selectedRepresentative': {\n    attributes: {\n      individualType: 'representative'\n    }\n  }\n};\nvar result = (0, _helpers.formIs2122A)(mockFormData);\n(0, _chai.expect)(result).to.not.be.ok;",
              "err": {},
              "uuid": "b0a04f12-470e-418e-ae8f-9087b0b4f487",
              "parentUUID": "b77864e8-8ed4-4705-9836-57206bfcb448",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return false when the selected rep has no individualType",
              "fullTitle": "formIs2122A should return false when the selected rep has no individualType",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var mockFormData = {\n  'view:selectedRepresentative': {\n    attributes: {}\n  }\n};\nvar result = (0, _helpers.formIs2122A)(mockFormData);\n(0, _chai.expect)(result).to.not.be.ok;",
              "err": {},
              "uuid": "0985800c-1f9e-4c9e-b492-87d8792615fa",
              "parentUUID": "b77864e8-8ed4-4705-9836-57206bfcb448",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "3bedd257-e4e9-4a07-9bc1-ce14d141e0a2",
            "79906f8a-a341-4fb9-8f41-a1078026f095",
            "f50afa30-f87a-4d91-ac05-bac28b0d7a55",
            "94fbff64-ca4c-43f3-8942-03bd0b8017d9",
            "b0a04f12-470e-418e-ae8f-9087b0b4f487",
            "0985800c-1f9e-4c9e-b492-87d8792615fa"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "4d705143-0009-4c12-ac2d-a8a7309d35c6",
          "title": "isVSORepresentative",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/representative-appoint/tests/utilities/isVSORepresentative.unit.spec.jsx",
          "file": "/src/applications/representative-appoint/tests/utilities/isVSORepresentative.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should return true when the selected rep has at least one organization",
              "fullTitle": "isVSORepresentative should return true when the selected rep has at least one organization",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var mockRep = {\n  type: 'individual',\n  attributes: {\n    accreditedOrganizations: {\n      data: [{\n        id: 1\n      }, {\n        id: 2\n      }]\n    }\n  }\n};\nvar result = (0, _helpers.isVSORepresentative)(mockRep);\n(0, _chai.expect)(result).to.be.true;",
              "err": {},
              "uuid": "d77af141-0894-4ddc-a01f-f55810adbe4f",
              "parentUUID": "4d705143-0009-4c12-ac2d-a8a7309d35c6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return false when the selected rep has no organizations",
              "fullTitle": "isVSORepresentative should return false when the selected rep has no organizations",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var mockRep = {\n  type: 'individual',\n  attributes: {\n    accreditedOrganizations: {\n      data: []\n    }\n  }\n};\nvar result = (0, _helpers.isVSORepresentative)(mockRep);\n(0, _chai.expect)(result).to.be.false;",
              "err": {},
              "uuid": "6ea4fc03-5a2c-4ead-971b-0e5e44ee47bd",
              "parentUUID": "4d705143-0009-4c12-ac2d-a8a7309d35c6",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "d77af141-0894-4ddc-a01f-f55810adbe4f",
            "6ea4fc03-5a2c-4ead-971b-0e5e44ee47bd"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "7deedec8-796a-40b6-a855-517af202dc20",
          "title": "parsePhoneNumber",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/representative-appoint/tests/utilities/parsePhoneNumber.unit.spec.jsx",
          "file": "/src/applications/representative-appoint/tests/utilities/parsePhoneNumber.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should parse a valid US phone number",
              "fullTitle": "parsePhoneNumber should parse a valid US phone number",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var result = (0, _parsePhoneNumber.parsePhoneNumber)('2234567890');\n(0, _chai.expect)(result).to.deep.equal({\n  contact: '2234567890',\n  extension: null\n});",
              "err": {},
              "uuid": "62cb7413-fc33-4c00-bcb1-f09212332c5f",
              "parentUUID": "7deedec8-796a-40b6-a855-517af202dc20",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should parse a phone number with a US country code",
              "fullTitle": "parsePhoneNumber should parse a phone number with a US country code",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var result = (0, _parsePhoneNumber.parsePhoneNumber)('+12234567890');\n(0, _chai.expect)(result).to.deep.equal({\n  contact: '2234567890',\n  extension: null\n});",
              "err": {},
              "uuid": "3bbd02fe-a193-49d2-9887-e40586c8f272",
              "parentUUID": "7deedec8-796a-40b6-a855-517af202dc20",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should parse a phone number with an extension",
              "fullTitle": "parsePhoneNumber should parse a phone number with an extension",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var result = (0, _parsePhoneNumber.parsePhoneNumber)('2234567890 x123');\n(0, _chai.expect)(result).to.deep.equal({\n  contact: '2234567890',\n  extension: '123'\n});",
              "err": {},
              "uuid": "0445d383-8b8c-4a58-acbb-bf543ba56a6e",
              "parentUUID": "7deedec8-796a-40b6-a855-517af202dc20",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return null for non-US phone numbers",
              "fullTitle": "parsePhoneNumber should return null for non-US phone numbers",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var result = (0, _parsePhoneNumber.parsePhoneNumber)('+441234567890');\n(0, _chai.expect)(result).to.deep.equal({\n  contact: null,\n  extension: null\n});",
              "err": {},
              "uuid": "a3321f1d-0bb9-4e91-ab53-b719785e0e2f",
              "parentUUID": "7deedec8-796a-40b6-a855-517af202dc20",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return null for invalid phone numbers",
              "fullTitle": "parsePhoneNumber should return null for invalid phone numbers",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var result = (0, _parsePhoneNumber.parsePhoneNumber)('123');\n(0, _chai.expect)(result).to.deep.equal({\n  contact: null,\n  extension: null\n});",
              "err": {},
              "uuid": "44ad8f47-2a0c-4319-a6ab-a9dcb84f988a",
              "parentUUID": "7deedec8-796a-40b6-a855-517af202dc20",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "62cb7413-fc33-4c00-bcb1-f09212332c5f",
            "3bbd02fe-a193-49d2-9887-e40586c8f272",
            "0445d383-8b8c-4a58-acbb-bf543ba56a6e",
            "a3321f1d-0bb9-4e91-ab53-b719785e0e2f",
            "44ad8f47-2a0c-4319-a6ab-a9dcb84f988a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "09a53a97-bacf-4677-bbc2-f98478f1357a",
          "title": "parseRepType",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/representative-appoint/tests/utilities/parseRepType.unit.spec.jsx",
          "file": "/src/applications/representative-appoint/tests/utilities/parseRepType.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should return correct title and subtitle for Organization",
              "fullTitle": "parseRepType should return correct title and subtitle for Organization",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var result = (0, _helpers.parseRepType)('Organization');\n(0, _chai.expect)(result.title).to.equal('Veterans Service Organization (VSO)');\n(0, _chai.expect)(result.subTitle).to.equal('Veteran Service Organization');",
              "err": {},
              "uuid": "fc188f5b-14b5-430a-8e93-34a1e9812256",
              "parentUUID": "09a53a97-bacf-4677-bbc2-f98478f1357a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return correct title and subtitle for Attorney",
              "fullTitle": "parseRepType should return correct title and subtitle for Attorney",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var result = (0, _helpers.parseRepType)('Attorney');\n(0, _chai.expect)(result.title).to.equal('accredited attorney');\n(0, _chai.expect)(result.subTitle).to.equal('Accredited attorney');",
              "err": {},
              "uuid": "1be88eaf-e436-4e69-8d9e-5567d2b22dfd",
              "parentUUID": "09a53a97-bacf-4677-bbc2-f98478f1357a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return correct title and subtitle for Claims Agent",
              "fullTitle": "parseRepType should return correct title and subtitle for Claims Agent",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var result = (0, _helpers.parseRepType)('Claims Agent');\n(0, _chai.expect)(result.title).to.equal('accredited claims agent');\n(0, _chai.expect)(result.subTitle).to.equal('Accredited claims agent');",
              "err": {},
              "uuid": "ee1579e6-78a7-4e1c-bb28-90bed21bb1ba",
              "parentUUID": "09a53a97-bacf-4677-bbc2-f98478f1357a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return default title and subtitle for unknown type",
              "fullTitle": "parseRepType should return default title and subtitle for unknown type",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var result = (0, _helpers.parseRepType)('Random Type');\n(0, _chai.expect)(result.title).to.equal('accredited representative');\n(0, _chai.expect)(result.subTitle).to.equal('Accredited representative');",
              "err": {},
              "uuid": "18c0f016-0cfa-4a54-b279-a4ff365583aa",
              "parentUUID": "09a53a97-bacf-4677-bbc2-f98478f1357a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "fc188f5b-14b5-430a-8e93-34a1e9812256",
            "1be88eaf-e436-4e69-8d9e-5567d2b22dfd",
            "ee1579e6-78a7-4e1c-bb28-90bed21bb1ba",
            "18c0f016-0cfa-4a54-b279-a4ff365583aa"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "9d13f6fe-8af3-461f-b0a9-d4352022be01",
          "title": "transformData",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/representative-appoint/tests/utilities/pdfTransform.unit.spec.jsx",
          "file": "/src/applications/representative-appoint/tests/utilities/pdfTransform.unit.spec.jsx",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"transformData\"",
              "fullTitle": "transformData \"before each\" hook in \"transformData\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "input = _objectSpread({}, _formData.default);",
              "err": {},
              "uuid": "ad49c470-18f2-4d12-85ba-8bbc23911eeb",
              "parentUUID": "9d13f6fe-8af3-461f-b0a9-d4352022be01",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": "should transform the input data into the expected output format",
              "fullTitle": "transformData should transform the input data into the expected output format",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var expectedOutput = _pdfTransformedFormData.default;\nvar result = (0, _pdfTransform.pdfTransform)(input);\nexpect(result).to.deep.equal(expectedOutput);",
              "err": {},
              "uuid": "bccd6277-0abf-4318-a1ed-b774e3f16101",
              "parentUUID": "9d13f6fe-8af3-461f-b0a9-d4352022be01",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [
            {
              "uuid": "249a4ff3-42fe-4353-aa3e-202c216f47ab",
              "title": "when authorizationRadio is all records",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/representative-appoint/tests/utilities/pdfTransform.unit.spec.jsx",
              "file": "/src/applications/representative-appoint/tests/utilities/pdfTransform.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should ignore the previously selected consent limitations",
                  "fullTitle": "transformData when authorizationRadio is all records should ignore the previously selected consent limitations",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "input.authorizationRadio = 'Yes, they can access all of these types of records';\nvar result = (0, _pdfTransform.pdfTransform)(input);\nexpect(result.consentLimits).to.be.empty;",
                  "err": {},
                  "uuid": "802115e0-2a5c-4d5e-8916-4699f8a6484e",
                  "parentUUID": "249a4ff3-42fe-4353-aa3e-202c216f47ab",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "802115e0-2a5c-4d5e-8916-4699f8a6484e"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "5477aeb4-851a-4407-82b2-19cdd119c93b",
              "title": "when authorizationRadio is some records",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/representative-appoint/tests/utilities/pdfTransform.unit.spec.jsx",
              "file": "/src/applications/representative-appoint/tests/utilities/pdfTransform.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should include the previously selected consent limitations",
                  "fullTitle": "transformData when authorizationRadio is some records should include the previously selected consent limitations",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var result = (0, _pdfTransform.pdfTransform)(input);\nexpect(result.consentLimits).to.deep.equal(['ALCOHOLISM', 'DRUG_ABUSE']);",
                  "err": {},
                  "uuid": "507897e4-73d6-4b92-8ab0-92f7b8e43d29",
                  "parentUUID": "5477aeb4-851a-4407-82b2-19cdd119c93b",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "507897e4-73d6-4b92-8ab0-92f7b8e43d29"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "72fe728b-b692-4cfe-825c-e2a4c34e538e",
              "title": "when authorizationRadio is no records",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/representative-appoint/tests/utilities/pdfTransform.unit.spec.jsx",
              "file": "/src/applications/representative-appoint/tests/utilities/pdfTransform.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should ignore the previously selected consent limitations",
                  "fullTitle": "transformData when authorizationRadio is no records should ignore the previously selected consent limitations",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "input.authorizationRadio = \"No, they can't access any of these types of records\";\nvar result = (0, _pdfTransform.pdfTransform)(input);\nexpect(result.consentLimits).to.be.empty;",
                  "err": {},
                  "uuid": "75135a55-2ef2-4495-8ba4-a1ae6d5e4712",
                  "parentUUID": "72fe728b-b692-4cfe-825c-e2a4c34e538e",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "75135a55-2ef2-4495-8ba4-a1ae6d5e4712"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            }
          ],
          "passes": [
            "bccd6277-0abf-4318-a1ed-b774e3f16101"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "a30a474c-3efa-4b69-9788-ced33be5195e",
          "title": "preparerIsVeteran",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/representative-appoint/tests/utilities/preparerIsVeteran.unit.spec.jsx",
          "file": "/src/applications/representative-appoint/tests/utilities/preparerIsVeteran.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should return true when the applicant is a veteran",
              "fullTitle": "preparerIsVeteran should return true when the applicant is a veteran",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var mockFormData = {\n  'view:applicantIsVeteran': 'Yes'\n};\nvar result = (0, _helpers.preparerIsVeteran)({\n  formData: mockFormData\n});\n(0, _chai.expect)(result).to.be.true;",
              "err": {},
              "uuid": "92043e1e-bdd7-4541-85d3-d8859e16aa82",
              "parentUUID": "a30a474c-3efa-4b69-9788-ced33be5195e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return false when the applicant is not a veteran",
              "fullTitle": "preparerIsVeteran should return false when the applicant is not a veteran",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var mockFormData = {\n  'view:applicantIsVeteran': 'No'\n};\nvar result = (0, _helpers.preparerIsVeteran)({\n  formData: mockFormData\n});\n(0, _chai.expect)(result).to.be.false;",
              "err": {},
              "uuid": "6cb678fc-8830-4265-8969-c11df223eb72",
              "parentUUID": "a30a474c-3efa-4b69-9788-ced33be5195e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return false when the applicant veteran field is undefined",
              "fullTitle": "preparerIsVeteran should return false when the applicant veteran field is undefined",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var mockFormData = {};\nvar result = (0, _helpers.preparerIsVeteran)({\n  formData: mockFormData\n});\n(0, _chai.expect)(result).to.be.false;",
              "err": {},
              "uuid": "f89ec7d1-dcaa-4e1b-8965-17e6db04c0b7",
              "parentUUID": "a30a474c-3efa-4b69-9788-ced33be5195e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return false when no formData is provided",
              "fullTitle": "preparerIsVeteran should return false when no formData is provided",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var result = (0, _helpers.preparerIsVeteran)();\n(0, _chai.expect)(result).to.be.false;",
              "err": {},
              "uuid": "e4008e33-4574-4c79-a087-7dcdfbd964b6",
              "parentUUID": "a30a474c-3efa-4b69-9788-ced33be5195e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "92043e1e-bdd7-4541-85d3-d8859e16aa82",
            "6cb678fc-8830-4265-8969-c11df223eb72",
            "f89ec7d1-dcaa-4e1b-8965-17e6db04c0b7",
            "e4008e33-4574-4c79-a087-7dcdfbd964b6"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "7b4a6732-76ae-48b9-b466-883c96ac9d69",
          "title": "representativeTypeMap",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/representative-appoint/tests/utilities/representativeTypeMap.unit.spec.jsx",
          "file": "/src/applications/representative-appoint/tests/utilities/representativeTypeMap.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should return \"attorney\" when given \"Attorney\"",
              "fullTitle": "representativeTypeMap should return \"attorney\" when given \"Attorney\"",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var result = _helpers.representativeTypeMap.Attorney;\n(0, _chai.expect)(result).to.equal('attorney');",
              "err": {},
              "uuid": "8dbe1810-81d6-4064-b96c-640bca7f1235",
              "parentUUID": "7b4a6732-76ae-48b9-b466-883c96ac9d69",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return \"claims agent\" when given \"Claims Agent\"",
              "fullTitle": "representativeTypeMap should return \"claims agent\" when given \"Claims Agent\"",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var result = _helpers.representativeTypeMap['Claims Agent'];\n(0, _chai.expect)(result).to.equal('claims agent');",
              "err": {},
              "uuid": "90654f3e-464b-4b2f-a7f2-9fb687a2b21d",
              "parentUUID": "7b4a6732-76ae-48b9-b466-883c96ac9d69",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return \"Veterans Service Organization (VSO)\" when given \"Veterans Service Organization (VSO)\"",
              "fullTitle": "representativeTypeMap should return \"Veterans Service Organization (VSO)\" when given \"Veterans Service Organization (VSO)\"",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var result = _helpers.representativeTypeMap['Veterans Service Organization (VSO)'];\n(0, _chai.expect)(result).to.equal('Veterans Service Organization (VSO)');",
              "err": {},
              "uuid": "9538af54-4d0c-4f1c-8b2d-3e96fc5ef0dd",
              "parentUUID": "7b4a6732-76ae-48b9-b466-883c96ac9d69",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "8dbe1810-81d6-4064-b96c-640bca7f1235",
            "90654f3e-464b-4b2f-a7f2-9fb687a2b21d",
            "9538af54-4d0c-4f1c-8b2d-3e96fc5ef0dd"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "3259766e-b943-4d87-b386-22bdd45be400",
          "title": "srSubstitute",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/representative-appoint/tests/utilities/srSubstitute.unit.spec.jsx",
          "file": "/src/applications/representative-appoint/tests/utilities/srSubstitute.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should make the first argument ignored by screen readers",
              "fullTitle": "srSubstitute should make the first argument ignored by screen readers",
              "timedOut": false,
              "duration": 4,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _render = (0, _react.render)((0, _helpers.srSubstitute)('AAA', 'BBB')),\n  getByText = _render.getByText;\n(0, _chai.expect)(getByText('AAA')).to.have.attribute('aria-hidden', 'true');",
              "err": {},
              "uuid": "2a1f69e5-0e3d-48f9-90c0-cf3af69610b4",
              "parentUUID": "3259766e-b943-4d87-b386-22bdd45be400",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should make the second argument screen reader only",
              "fullTitle": "srSubstitute should make the second argument screen reader only",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _render2 = (0, _react.render)((0, _helpers.srSubstitute)('AAA', 'BBB')),\n  container = _render2.container;\n(0, _chai.expect)(container.querySelector('.sr-only')).to.contain.text('BBB');",
              "err": {},
              "uuid": "97a2a6ab-1523-4a15-bfe2-d31b9ea7285a",
              "parentUUID": "3259766e-b943-4d87-b386-22bdd45be400",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "2a1f69e5-0e3d-48f9-90c0-cf3af69610b4",
            "97a2a6ab-1523-4a15-bfe2-d31b9ea7285a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 5,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 10000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.7.3"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "undefined_2025-03-03T221915418Z",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "min",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "id": "default",
        "consoleReporter": "min",
        "reportDir": "mocha/results",
        "reportFilename": "undefined_2025-03-03T221915418Z",
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}