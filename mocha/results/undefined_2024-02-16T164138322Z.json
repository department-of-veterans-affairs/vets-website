{
  "stats": {
    "suites": 22,
    "tests": 48,
    "passes": 41,
    "pending": 0,
    "failures": 7,
    "start": "2024-02-16T16:41:38.364Z",
    "end": "2024-02-16T16:41:38.602Z",
    "duration": 238,
    "testsRegistered": 48,
    "passPercent": 85.41666666666666,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "d0d606b7-c07b-4666-ac66-fb28e2bdddb3",
      "title": "",
      "fullFile": "/Users/fatmakhan/Documents/vets-website/src/applications/gi/tests/utils/helpers.unit.spec.js",
      "file": "/src/applications/gi/tests/utils/helpers.unit.spec.js",
      "beforeHooks": [
        {
          "title": "\"before each\" hook: beforeEach in \"{root}\"",
          "fullTitle": "\"before each\" hook: beforeEach in \"{root}\"",
          "timedOut": false,
          "duration": 4,
          "state": null,
          "speed": null,
          "pass": false,
          "fail": false,
          "pending": false,
          "context": null,
          "code": "setupJSDom();\nresetFetch();\ncleanupStorage();\nif (isStressTest == 'false') {\n  checkAllowList(this);\n}\nconsole.log('running: ', this.currentTest.file.slice(this.currentTest.file.indexOf('src')));",
          "err": {},
          "uuid": "632d6f31-433e-4fd1-a0bf-b43d0c5d831b",
          "parentUUID": "d0d606b7-c07b-4666-ac66-fb28e2bdddb3",
          "isHook": true,
          "skipped": false
        }
      ],
      "afterHooks": [
        {
          "title": "\"after each\" hook: afterEach in \"{root}\"",
          "fullTitle": "\"after each\" hook: afterEach in \"{root}\"",
          "timedOut": false,
          "duration": 0,
          "state": null,
          "speed": null,
          "pass": false,
          "fail": false,
          "pending": false,
          "context": null,
          "code": "cleanupStorage();",
          "err": {},
          "uuid": "36b3eef6-925c-4c4a-8e66-01c8387d9b4e",
          "parentUUID": "d0d606b7-c07b-4666-ac66-fb28e2bdddb3",
          "isHook": true,
          "skipped": false
        }
      ],
      "tests": [],
      "suites": [
        {
          "uuid": "07358a25-a4cf-4931-b4b8-3d55c9a49cc6",
          "title": "GIBCT helpers:",
          "fullFile": "/Users/fatmakhan/Documents/vets-website/src/applications/gi/tests/utils/helpers.unit.spec.js",
          "file": "/src/applications/gi/tests/utils/helpers.unit.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "81872f39-b9af-459a-b149-d2ee1f3e2a58",
              "title": "sortOptionsByStateName",
              "fullFile": "/Users/fatmakhan/Documents/vets-website/src/applications/gi/tests/utils/helpers.unit.spec.js",
              "file": "/src/applications/gi/tests/utils/helpers.unit.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should sort an array of objects by label",
                  "fullTitle": "GIBCT helpers: sortOptionsByStateName should sort an array of objects by label",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var data = [{\n  value: 'AK',\n  label: 'Alaska'\n}, {\n  value: 'AL',\n  label: 'Alabama'\n}, {\n  value: 'AR',\n  label: 'Arkansas'\n}, {\n  value: 'AZ',\n  label: 'Arizona'\n}, {\n  value: 'CA',\n  label: 'California'\n}];\nvar sortedData = [{\n  value: 'AL',\n  label: 'Alabama'\n}, {\n  value: 'AK',\n  label: 'Alaska'\n}, {\n  value: 'AZ',\n  label: 'Arizona'\n}, {\n  value: 'AR',\n  label: 'Arkansas'\n}, {\n  value: 'CA',\n  label: 'California'\n}];\n(0, _chai.expect)(data.sort(_helpers.sortOptionsByStateName)).to.deep.equal(sortedData);\nvar junkData = [{\n  value: 'AL',\n  label: 'Alabama'\n}];\n(0, _chai.expect)((0, _helpers.sortOptionsByStateName)(data, junkData)).to.deep.equal(0);",
                  "err": {},
                  "uuid": "04f06f3b-0782-40cd-b121-4671f4685366",
                  "parentUUID": "81872f39-b9af-459a-b149-d2ee1f3e2a58",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "04f06f3b-0782-40cd-b121-4671f4685366"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "1c6f5228-8e66-4a24-a916-6f99f00f109f",
              "title": "handleInputFocusWithPotentialOverLap",
              "fullFile": "/Users/fatmakhan/Documents/vets-website/src/applications/gi/tests/utils/helpers.unit.spec.js",
              "file": "/src/applications/gi/tests/utils/helpers.unit.spec.js",
              "beforeHooks": [
                {
                  "title": "\"before each\" hook in \"handleInputFocusWithPotentialOverLap\"",
                  "fullTitle": "GIBCT helpers: handleInputFocusWithPotentialOverLap \"before each\" hook in \"handleInputFocusWithPotentialOverLap\"",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "// const isMobileViewStub = sinon.stub().returns(true);\nscrollIntoViewStub = _sinon.default.stub();\nscrollByStub = _sinon.default.stub();\ngetElementByIdStub = _sinon.default.stub(document, 'getElementById');\ngetElementByIdStub.returns({\n  scrollIntoView: scrollIntoViewStub,\n  getBoundingClientRect: _sinon.default.stub().returns({\n    right: 10,\n    left: 0,\n    bottom: 10,\n    top: 0\n  }),\n  scrollBy: scrollByStub\n});",
                  "err": {},
                  "uuid": "f6a72acb-b6b4-4ce3-bf52-83f59a74fe35",
                  "parentUUID": "1c6f5228-8e66-4a24-a916-6f99f00f109f",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [
                {
                  "title": "\"after each\" hook in \"handleInputFocusWithPotentialOverLap\"",
                  "fullTitle": "GIBCT helpers: handleInputFocusWithPotentialOverLap \"after each\" hook in \"handleInputFocusWithPotentialOverLap\"",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "getElementByIdStub.restore();",
                  "err": {},
                  "uuid": "49f7acb9-4704-44a2-9095-10440714648e",
                  "parentUUID": "1c6f5228-8e66-4a24-a916-6f99f00f109f",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "tests": [
                {
                  "title": "should handle input focus with potential overlap",
                  "fullTitle": "GIBCT helpers: handleInputFocusWithPotentialOverLap should handle input focus with potential overlap",
                  "timedOut": false,
                  "duration": 0,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "handleInputFocusWithPotentialOverLap('field1', 'field2', 'scrollableField');\n(0, _chai.expect)(scrollIntoViewStub.called).to.be.false;\n(0, _chai.expect)(scrollByStub.called).to.be.false;",
                  "err": {
                    "message": "ReferenceError: handleInputFocusWithPotentialOverLap is not defined",
                    "estack": "ReferenceError: handleInputFocusWithPotentialOverLap is not defined\n    at Context.<anonymous> (src/applications/gi/tests/utils/helpers.unit.spec.js:479:7)\n    at Test.Runnable.run (node_modules/mocha-snapshots/src/index.js:19:22)\n    at Hook.Runnable.run (node_modules/mocha-snapshots/src/index.js:19:22)\n    at processImmediate (internal/timers.js:461:21)\n    at process.callbackTrampoline (internal/async_hooks.js:129:14)",
                    "diff": null
                  },
                  "uuid": "b583902e-5362-404c-89ec-5109e0881674",
                  "parentUUID": "1c6f5228-8e66-4a24-a916-6f99f00f109f",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [],
              "failures": [
                "b583902e-5362-404c-89ec-5109e0881674"
              ],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "a4aa690a-7bfb-4a1f-8dad-dfd71cef565a",
              "title": "phoneInfo",
              "fullFile": "/Users/fatmakhan/Documents/vets-website/src/applications/gi/tests/utils/helpers.unit.spec.js",
              "file": "/src/applications/gi/tests/utils/helpers.unit.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": " areaCode = 123, phoneNumber = 4567890 are turned into number 'Florida' ",
                  "fullTitle": "GIBCT helpers: phoneInfo  areaCode = 123, phoneNumber = 4567890 are turned into number 'Florida' ",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var areaCode = 123;\nvar phoneNumber = 4567890;\n(0, _chai.expect)((0, _helpers.phoneInfo)(areaCode, phoneNumber)).to.eq('123-4567890');",
                  "err": {},
                  "uuid": "83f4e423-2559-47e5-82f1-0e521fc69fbc",
                  "parentUUID": "a4aa690a-7bfb-4a1f-8dad-dfd71cef565a",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "83f4e423-2559-47e5-82f1-0e521fc69fbc"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "e44409f6-ac2d-4199-96a7-92333061e120",
              "title": "isCountryUSA",
              "fullFile": "/Users/fatmakhan/Documents/vets-website/src/applications/gi/tests/utils/helpers.unit.spec.js",
              "file": "/src/applications/gi/tests/utils/helpers.unit.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should recognize non-USA",
                  "fullTitle": "GIBCT helpers: isCountryUSA should recognize non-USA",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)((0, _helpers.isCountryUSA)('CAN')).to.be.false;",
                  "err": {},
                  "uuid": "24288c1e-1636-4f2e-9c2f-3ff7668d6ab6",
                  "parentUUID": "e44409f6-ac2d-4199-96a7-92333061e120",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should handle lowercase country names",
                  "fullTitle": "GIBCT helpers: isCountryUSA should handle lowercase country names",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)((0, _helpers.isCountryUSA)('usa')).to.be.true;",
                  "err": {},
                  "uuid": "c7435049-cbee-4d4f-b178-c5453f867964",
                  "parentUUID": "e44409f6-ac2d-4199-96a7-92333061e120",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should recognize USA",
                  "fullTitle": "GIBCT helpers: isCountryUSA should recognize USA",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)((0, _helpers.isCountryUSA)('USA')).to.be.true;",
                  "err": {},
                  "uuid": "4715f5da-0ecb-44e0-ab8a-a7927e4a974f",
                  "parentUUID": "e44409f6-ac2d-4199-96a7-92333061e120",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "24288c1e-1636-4f2e-9c2f-3ff7668d6ab6",
                "c7435049-cbee-4d4f-b178-c5453f867964",
                "4715f5da-0ecb-44e0-ab8a-a7927e4a974f"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "e69c7fe7-694d-4fbe-be8e-c0ee6e0a0d57",
              "title": "getStateNameForCode",
              "fullFile": "/Users/fatmakhan/Documents/vets-website/src/applications/gi/tests/utils/helpers.unit.spec.js",
              "file": "/src/applications/gi/tests/utils/helpers.unit.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "field = 'FL' is turned into string 'Florida' ",
                  "fullTitle": "GIBCT helpers: getStateNameForCode field = 'FL' is turned into string 'Florida' ",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var field = 'n/a';\n(0, _chai.expect)((0, _helpers.getStateNameForCode)(field)).to.eq('N/A');",
                  "err": {},
                  "uuid": "972a067e-1218-4481-bd3d-0839fec1fa95",
                  "parentUUID": "e69c7fe7-694d-4fbe-be8e-c0ee6e0a0d57",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "field = 'FL' is turned into string 'Florida' ",
                  "fullTitle": "GIBCT helpers: getStateNameForCode field = 'FL' is turned into string 'Florida' ",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var field = 'FL';\n(0, _chai.expect)((0, _helpers.getStateNameForCode)(field)).to.eq('Florida');",
                  "err": {},
                  "uuid": "2f9d1083-3c4f-426f-bf73-4b4ffee2ac70",
                  "parentUUID": "e69c7fe7-694d-4fbe-be8e-c0ee6e0a0d57",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "972a067e-1218-4481-bd3d-0839fec1fa95",
                "2f9d1083-3c4f-426f-bf73-4b4ffee2ac70"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "fc820b20-a71e-4204-b6cb-89527a03a59f",
              "title": "schoolSize",
              "fullFile": "/Users/fatmakhan/Documents/vets-website/src/applications/gi/tests/utils/helpers.unit.spec.js",
              "file": "/src/applications/gi/tests/utils/helpers.unit.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "enrollment = 1480,000 is turned into string 'Large' ",
                  "fullTitle": "GIBCT helpers: schoolSize enrollment = 1480,000 is turned into string 'Large' ",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var enrollment = 1480000;\n(0, _chai.expect)((0, _helpers.schoolSize)(enrollment)).to.eq('Large');",
                  "err": {},
                  "uuid": "7471250f-336d-471d-8f57-2a13211eb129",
                  "parentUUID": "fc820b20-a71e-4204-b6cb-89527a03a59f",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": " '1abc8' is turned into string 'Unknown' ",
                  "fullTitle": "GIBCT helpers: schoolSize  '1abc8' is turned into string 'Unknown' ",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var enrollment = '1abc8';\n(0, _chai.expect)((0, _helpers.schoolSize)(enrollment)).to.eq('Unknown');",
                  "err": {},
                  "uuid": "94fbdd2b-5753-4e6d-bd0a-0a912e33dad2",
                  "parentUUID": "fc820b20-a71e-4204-b6cb-89527a03a59f",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "enrollment = 14,800 is turned into string 'Medium' ",
                  "fullTitle": "GIBCT helpers: schoolSize enrollment = 14,800 is turned into string 'Medium' ",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var enrollment = 14800;\n(0, _chai.expect)((0, _helpers.schoolSize)(enrollment)).to.eq('Medium');",
                  "err": {},
                  "uuid": "22111b54-a69f-42c2-9820-ced724be61e4",
                  "parentUUID": "fc820b20-a71e-4204-b6cb-89527a03a59f",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "null is turned into string 'Unknown' ",
                  "fullTitle": "GIBCT helpers: schoolSize null is turned into string 'Unknown' ",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var enrollment = null;\n(0, _chai.expect)((0, _helpers.schoolSize)(enrollment)).to.eq('Unknown');",
                  "err": {},
                  "uuid": "6f161774-8a79-47db-af8f-6e829430da2c",
                  "parentUUID": "fc820b20-a71e-4204-b6cb-89527a03a59f",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "enrollment = 1,980 is turned into string 'Small' ",
                  "fullTitle": "GIBCT helpers: schoolSize enrollment = 1,980 is turned into string 'Small' ",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var enrollment = 1980;\n(0, _chai.expect)((0, _helpers.schoolSize)(enrollment)).to.eq('Small');",
                  "err": {},
                  "uuid": "98d4c3bd-e944-4b42-9a38-a0a6e5670295",
                  "parentUUID": "fc820b20-a71e-4204-b6cb-89527a03a59f",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "7471250f-336d-471d-8f57-2a13211eb129",
                "94fbdd2b-5753-4e6d-bd0a-0a912e33dad2",
                "22111b54-a69f-42c2-9820-ced724be61e4",
                "6f161774-8a79-47db-af8f-6e829430da2c",
                "98d4c3bd-e944-4b42-9a38-a0a6e5670295"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "85e9b138-d9ef-4c6c-a22d-452810777b5f",
              "title": "handleScrollOnInputFocus",
              "fullFile": "/Users/fatmakhan/Documents/vets-website/src/applications/gi/tests/utils/helpers.unit.spec.js",
              "file": "/src/applications/gi/tests/utils/helpers.unit.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should scrollIntoView",
                  "fullTitle": "GIBCT helpers: handleScrollOnInputFocus should scrollIntoView",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "window.innerWidth = 480;\ndocument.body.appendChild(mainDiv);\n(0, _helpers.handleScrollOnInputFocus)('test');\n(0, _chai.expect)(scrolledIntoViewIsCalled).to.be.true;",
                  "err": {},
                  "uuid": "01889a82-9cc4-499a-aa00-2b9bf267b14d",
                  "parentUUID": "85e9b138-d9ef-4c6c-a22d-452810777b5f",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "01889a82-9cc4-499a-aa00-2b9bf267b14d"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "e920ea89-3ede-4814-8c78-fe4442065891",
              "title": "naIfNull",
              "fullFile": "/Users/fatmakhan/Documents/vets-website/src/applications/gi/tests/utils/helpers.unit.spec.js",
              "file": "/src/applications/gi/tests/utils/helpers.unit.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Any value will return the same value ",
                  "fullTitle": "GIBCT helpers: naIfNull Any value will return the same value ",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var value = true;\n(0, _chai.expect)((0, _helpers.naIfNull)(value)).to.eq(true);",
                  "err": {},
                  "uuid": "90eabccf-854d-41d5-861e-a727a1a05376",
                  "parentUUID": "e920ea89-3ede-4814-8c78-fe4442065891",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Any null or undefined will return 'N/A' ",
                  "fullTitle": "GIBCT helpers: naIfNull Any null or undefined will return 'N/A' ",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var value = undefined;\n(0, _chai.expect)((0, _helpers.naIfNull)(value)).to.eq('N/A');",
                  "err": {},
                  "uuid": "0a490499-fc7f-4b5a-a9e0-03c75f1aa240",
                  "parentUUID": "e920ea89-3ede-4814-8c78-fe4442065891",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "90eabccf-854d-41d5-861e-a727a1a05376",
                "0a490499-fc7f-4b5a-a9e0-03c75f1aa240"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "5f017f92-de2b-4997-9a34-54afdc156156",
              "title": "formatNumber",
              "fullFile": "/Users/fatmakhan/Documents/vets-website/src/applications/gi/tests/utils/helpers.unit.spec.js",
              "file": "/src/applications/gi/tests/utils/helpers.unit.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should format numbers",
                  "fullTitle": "GIBCT helpers: formatNumber should format numbers",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)((0, _helpers.formatNumber)(1000)).to.equal('1,000');",
                  "err": {},
                  "uuid": "aa93b612-ae11-48ae-a2e5-9008e7ce68bc",
                  "parentUUID": "5f017f92-de2b-4997-9a34-54afdc156156",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "aa93b612-ae11-48ae-a2e5-9008e7ce68bc"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "9cf4dbef-e5f4-4cb4-803c-f833580f3fc7",
              "title": "validateSearchTerm",
              "fullFile": "/Users/fatmakhan/Documents/vets-website/src/applications/gi/tests/utils/helpers.unit.spec.js",
              "file": "/src/applications/gi/tests/utils/helpers.unit.spec.js",
              "beforeHooks": [
                {
                  "title": "\"before each\" hook in \"validateSearchTerm\"",
                  "fullTitle": "GIBCT helpers: validateSearchTerm \"before each\" hook in \"validateSearchTerm\"",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "dispatchError = _sinon.default.spy();\nerror = null;\nfilters = {\n  school: true,\n  employer: true,\n  trainingProvider: true\n};",
                  "err": {},
                  "uuid": "1647a4d6-fce3-4b69-82a5-d84fba307e8d",
                  "parentUUID": "9cf4dbef-e5f4-4cb4-803c-f833580f3fc7",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should dispatchError search input is empty",
                  "fullTitle": "GIBCT helpers: validateSearchTerm should dispatchError search input is empty",
                  "timedOut": false,
                  "duration": 0,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "validateSearchTerm('', dispatchError, error, filters, 'location');\n(0, _chai.expect)(dispatchError.calledWith('Please fill in a city, state, or postal code.')).to.be.true;",
                  "err": {
                    "message": "ReferenceError: validateSearchTerm is not defined",
                    "estack": "ReferenceError: validateSearchTerm is not defined\n    at Context.<anonymous> (src/applications/gi/tests/utils/helpers.unit.spec.js:443:7)\n    at Test.Runnable.run (node_modules/mocha-snapshots/src/index.js:19:22)\n    at Hook.Runnable.run (node_modules/mocha-snapshots/src/index.js:19:22)\n    at processImmediate (internal/timers.js:461:21)\n    at process.callbackTrampoline (internal/async_hooks.js:129:14)",
                    "diff": null
                  },
                  "uuid": "9d81629e-7b2f-4713-bb5a-0030829440c5",
                  "parentUUID": "9cf4dbef-e5f4-4cb4-803c-f833580f3fc7",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should not dispatchError when error is not null for location",
                  "fullTitle": "GIBCT helpers: validateSearchTerm should not dispatchError when error is not null for location",
                  "timedOut": false,
                  "duration": 0,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "var invalid = validateSearchTerm('94121', dispatchError, error = 'error', filters, 'location');\n(0, _chai.expect)(invalid).to.be.true;\n(0, _chai.expect)(dispatchError.calledWith('Please enter a valid postal code.')).to.be.false;",
                  "err": {
                    "message": "ReferenceError: validateSearchTerm is not defined",
                    "estack": "ReferenceError: validateSearchTerm is not defined\n    at Context.<anonymous> (src/applications/gi/tests/utils/helpers.unit.spec.js:431:23)\n    at Test.Runnable.run (node_modules/mocha-snapshots/src/index.js:19:22)\n    at Hook.Runnable.run (node_modules/mocha-snapshots/src/index.js:19:22)\n    at processImmediate (internal/timers.js:461:21)\n    at process.callbackTrampoline (internal/async_hooks.js:129:14)",
                    "diff": null
                  },
                  "uuid": "3a5ece9e-55a7-487b-8ef9-d86531d3b0c8",
                  "parentUUID": "9cf4dbef-e5f4-4cb4-803c-f833580f3fc7",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should not dispatchError when error is not null for name",
                  "fullTitle": "GIBCT helpers: validateSearchTerm should not dispatchError when error is not null for name",
                  "timedOut": false,
                  "duration": 0,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "var invalid = validateSearchTerm('new york', dispatchError, error = 'error', filters, 'name');\n(0, _chai.expect)(invalid).to.be.true;\n(0, _chai.expect)(dispatchError.calledWith('Please fill in a school, employer, or training provider')).to.be.false;",
                  "err": {
                    "message": "ReferenceError: validateSearchTerm is not defined",
                    "estack": "ReferenceError: validateSearchTerm is not defined\n    at Context.<anonymous> (src/applications/gi/tests/utils/helpers.unit.spec.js:416:23)\n    at Test.Runnable.run (node_modules/mocha-snapshots/src/index.js:19:22)\n    at Hook.Runnable.run (node_modules/mocha-snapshots/src/index.js:19:22)\n    at processImmediate (internal/timers.js:461:21)\n    at process.callbackTrampoline (internal/async_hooks.js:129:14)",
                    "diff": null
                  },
                  "uuid": "a0fe719d-22ec-4551-86b2-10db56b2e6ca",
                  "parentUUID": "9cf4dbef-e5f4-4cb4-803c-f833580f3fc7",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should validate name search term",
                  "fullTitle": "GIBCT helpers: validateSearchTerm should validate name search term",
                  "timedOut": false,
                  "duration": 0,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "var valid = validateSearchTerm('Test', dispatchError, error, filters, 'name');\n(0, _chai.expect)(valid).to.be.true;\n(0, _chai.expect)(dispatchError.called).to.be.false;\nvar invalid = validateSearchTerm(' ', dispatchError, error, filters, 'name');\n(0, _chai.expect)(invalid).to.be.false;\n(0, _chai.expect)(dispatchError.calledWith('Please fill in a school, employer, or training provider.')).to.be.true;",
                  "err": {
                    "message": "ReferenceError: validateSearchTerm is not defined",
                    "estack": "ReferenceError: validateSearchTerm is not defined\n    at Context.<anonymous> (src/applications/gi/tests/utils/helpers.unit.spec.js:368:21)\n    at Test.Runnable.run (node_modules/mocha-snapshots/src/index.js:19:22)\n    at Hook.Runnable.run (node_modules/mocha-snapshots/src/index.js:19:22)\n    at processImmediate (internal/timers.js:461:21)\n    at process.callbackTrampoline (internal/async_hooks.js:129:14)",
                    "diff": null
                  },
                  "uuid": "30f629b1-8132-45aa-bd8f-c4b2ae23d429",
                  "parentUUID": "9cf4dbef-e5f4-4cb4-803c-f833580f3fc7",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should validate location search term",
                  "fullTitle": "GIBCT helpers: validateSearchTerm should validate location search term",
                  "timedOut": false,
                  "duration": 0,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "var valid = validateSearchTerm('12345', dispatchError, error, filters, 'location');\n(0, _chai.expect)(valid).to.be.true;\n(0, _chai.expect)(dispatchError.called).to.be.false;\nvar invalid = validateSearchTerm('123456', dispatchError, error, filters, 'location');\n(0, _chai.expect)(invalid).to.be.true;\n(0, _chai.expect)(dispatchError.calledWith('Please enter a valid postal code.')).to.be.true;",
                  "err": {
                    "message": "ReferenceError: validateSearchTerm is not defined",
                    "estack": "ReferenceError: validateSearchTerm is not defined\n    at Context.<anonymous> (src/applications/gi/tests/utils/helpers.unit.spec.js:394:21)\n    at Test.Runnable.run (node_modules/mocha-snapshots/src/index.js:19:22)\n    at Hook.Runnable.run (node_modules/mocha-snapshots/src/index.js:19:22)\n    at processImmediate (internal/timers.js:461:21)\n    at process.callbackTrampoline (internal/async_hooks.js:129:14)",
                    "diff": null
                  },
                  "uuid": "67a1303f-d130-4af6-b58c-4975d589bf6c",
                  "parentUUID": "9cf4dbef-e5f4-4cb4-803c-f833580f3fc7",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [],
              "failures": [
                "9d81629e-7b2f-4713-bb5a-0030829440c5",
                "3a5ece9e-55a7-487b-8ef9-d86531d3b0c8",
                "a0fe719d-22ec-4551-86b2-10db56b2e6ca",
                "30f629b1-8132-45aa-bd8f-c4b2ae23d429",
                "67a1303f-d130-4af6-b58c-4975d589bf6c"
              ],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "457ab19b-2214-4e92-a828-9bb7953d33af",
              "title": "locationInfo",
              "fullFile": "/Users/fatmakhan/Documents/vets-website/src/applications/gi/tests/utils/helpers.unit.spec.js",
              "file": "/src/applications/gi/tests/utils/helpers.unit.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": " Not City are turned into number false ",
                  "fullTitle": "GIBCT helpers: locationInfo  Not City are turned into number false ",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var city = 'Rome';\nvar state = 'Italy';\nvar country = 'CA';\n(0, _chai.expect)((0, _helpers.locationInfo)(city, state, country)).to.eq('Rome, CA');",
                  "err": {},
                  "uuid": "238ed6be-eacb-42c6-bcba-207c56995657",
                  "parentUUID": "457ab19b-2214-4e92-a828-9bb7953d33af",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": " Not City are turned into number false ",
                  "fullTitle": "GIBCT helpers: locationInfo  Not City are turned into number false ",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var city = undefined;\nvar state = undefined;\nvar country = 'CA';\n(0, _chai.expect)((0, _helpers.locationInfo)(city, state, country)).to.eq('CA');",
                  "err": {},
                  "uuid": "6c9651c6-788e-447f-a2a6-8cd957e9db6f",
                  "parentUUID": "457ab19b-2214-4e92-a828-9bb7953d33af",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": " value = 'SampleText' are turned into number false ",
                  "fullTitle": "GIBCT helpers: locationInfo  value = 'SampleText' are turned into number false ",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var city = 'Austin';\nvar state = 'TX';\nvar country = 'USA';\n(0, _chai.expect)((0, _helpers.locationInfo)(city, state, country)).to.eq('Austin, TX');",
                  "err": {},
                  "uuid": "3cca54e0-4552-42ac-a875-579c19c6d817",
                  "parentUUID": "457ab19b-2214-4e92-a828-9bb7953d33af",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": " Not State are turned into number false ",
                  "fullTitle": "GIBCT helpers: locationInfo  Not State are turned into number false ",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var city = 'Austin';\nvar state = undefined;\nvar country = 'USA';\n(0, _chai.expect)((0, _helpers.locationInfo)(city, state, country)).to.eq('Austin');",
                  "err": {},
                  "uuid": "79c17373-0a3f-4477-a6a2-243d789e6ff8",
                  "parentUUID": "457ab19b-2214-4e92-a828-9bb7953d33af",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": " Not City are turned into number false ",
                  "fullTitle": "GIBCT helpers: locationInfo  Not City are turned into number false ",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var city = undefined;\nvar state = 'TX';\nvar country = 'USA';\n(0, _chai.expect)((0, _helpers.locationInfo)(city, state, country)).to.eq('TX');",
                  "err": {},
                  "uuid": "98ab54e7-5f0e-4d1c-8370-1867a976ebf3",
                  "parentUUID": "457ab19b-2214-4e92-a828-9bb7953d33af",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "238ed6be-eacb-42c6-bcba-207c56995657",
                "6c9651c6-788e-447f-a2a6-8cd957e9db6f",
                "3cca54e0-4552-42ac-a875-579c19c6d817",
                "79c17373-0a3f-4477-a6a2-243d789e6ff8",
                "98ab54e7-5f0e-4d1c-8370-1867a976ebf3"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "a93a762b-b9f3-451e-b7b9-55fbef0cb293",
              "title": "convertRatingToStars",
              "fullFile": "/Users/fatmakhan/Documents/vets-website/src/applications/gi/tests/utils/helpers.unit.spec.js",
              "file": "/src/applications/gi/tests/utils/helpers.unit.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "returns null for invalid ratings",
                  "fullTitle": "GIBCT helpers: convertRatingToStars returns null for invalid ratings",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)((0, _helpers.convertRatingToStars)('dogs')).to.eq(null);",
                  "err": {},
                  "uuid": "6f8f992f-70ab-433c-91dd-f8aaa1d761c0",
                  "parentUUID": "a93a762b-b9f3-451e-b7b9-55fbef0cb293",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "converts .7 as a half star",
                  "fullTitle": "GIBCT helpers: convertRatingToStars converts .7 as a half star",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var _convertRatingToStars4 = (0, _helpers.convertRatingToStars)(4.7),\n    full = _convertRatingToStars4.full,\n    half = _convertRatingToStars4.half,\n    display = _convertRatingToStars4.display;\n(0, _chai.expect)(full).to.eq(4);\n(0, _chai.expect)(half).to.eq(true);\n(0, _chai.expect)(display).to.eq('4.7');",
                  "err": {},
                  "uuid": "dcd8a351-7913-43e2-818f-e45dc74293fc",
                  "parentUUID": "a93a762b-b9f3-451e-b7b9-55fbef0cb293",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "converts more than .7 as a full star",
                  "fullTitle": "GIBCT helpers: convertRatingToStars converts more than .7 as a full star",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var _convertRatingToStars5 = (0, _helpers.convertRatingToStars)(3.75),\n    full = _convertRatingToStars5.full,\n    half = _convertRatingToStars5.half,\n    display = _convertRatingToStars5.display;\n(0, _chai.expect)(full).to.eq(4);\n(0, _chai.expect)(half).to.eq(false);\n(0, _chai.expect)(display).to.eq('3.8');",
                  "err": {},
                  "uuid": "e02c253c-1d80-4756-931b-9c59677f08da",
                  "parentUUID": "a93a762b-b9f3-451e-b7b9-55fbef0cb293",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "converts .3 as a half star",
                  "fullTitle": "GIBCT helpers: convertRatingToStars converts .3 as a half star",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var _convertRatingToStars3 = (0, _helpers.convertRatingToStars)(4.29),\n    full = _convertRatingToStars3.full,\n    half = _convertRatingToStars3.half,\n    display = _convertRatingToStars3.display;\n(0, _chai.expect)(full).to.eq(4);\n(0, _chai.expect)(half).to.eq(true);\n(0, _chai.expect)(display).to.eq('4.3');",
                  "err": {},
                  "uuid": "2178de1b-eedb-4dd2-9011-999aa71bdaec",
                  "parentUUID": "a93a762b-b9f3-451e-b7b9-55fbef0cb293",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "converts string to number",
                  "fullTitle": "GIBCT helpers: convertRatingToStars converts string to number",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var _convertRatingToStars = (0, _helpers.convertRatingToStars)('2.24'),\n    full = _convertRatingToStars.full,\n    half = _convertRatingToStars.half,\n    display = _convertRatingToStars.display;\n(0, _chai.expect)(full).to.eq(2);\n(0, _chai.expect)(half).to.eq(false);\n(0, _chai.expect)(display).to.eq('2.2');",
                  "err": {},
                  "uuid": "34347e87-f065-4f7d-8c30-adf5811ab529",
                  "parentUUID": "a93a762b-b9f3-451e-b7b9-55fbef0cb293",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "converts < .3 as a whole number of stars",
                  "fullTitle": "GIBCT helpers: convertRatingToStars converts < .3 as a whole number of stars",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var _convertRatingToStars2 = (0, _helpers.convertRatingToStars)(2.24),\n    full = _convertRatingToStars2.full,\n    half = _convertRatingToStars2.half,\n    display = _convertRatingToStars2.display;\n(0, _chai.expect)(full).to.eq(2);\n(0, _chai.expect)(half).to.eq(false);\n(0, _chai.expect)(display).to.eq('2.2');",
                  "err": {},
                  "uuid": "e6d42036-b5fd-4464-9f15-51ac1eb9aea2",
                  "parentUUID": "a93a762b-b9f3-451e-b7b9-55fbef0cb293",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "6f8f992f-70ab-433c-91dd-f8aaa1d761c0",
                "dcd8a351-7913-43e2-818f-e45dc74293fc",
                "e02c253c-1d80-4756-931b-9c59677f08da",
                "2178de1b-eedb-4dd2-9011-999aa71bdaec",
                "34347e87-f065-4f7d-8c30-adf5811ab529",
                "e6d42036-b5fd-4464-9f15-51ac1eb9aea2"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "044d7653-da80-4177-afdb-e3bcd7f4f3f6",
              "title": "addAllOption",
              "fullFile": "/Users/fatmakhan/Documents/vets-website/src/applications/gi/tests/utils/helpers.unit.spec.js",
              "file": "/src/applications/gi/tests/utils/helpers.unit.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should add ALL option",
                  "fullTitle": "GIBCT helpers: addAllOption should add ALL option",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var options = [{\n  label: 'TEST',\n  value: 'TEST'\n}];\n(0, _chai.expect)((0, _helpers.addAllOption)(options).length).to.equal(2);\n(0, _chai.expect)((0, _helpers.addAllOption)(options)[0].optionLabel).to.equal('All');",
                  "err": {},
                  "uuid": "0caba896-c6ce-424f-96e5-d9d497e9d037",
                  "parentUUID": "044d7653-da80-4177-afdb-e3bcd7f4f3f6",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "0caba896-c6ce-424f-96e5-d9d497e9d037"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "60bdefcd-ec4b-496f-8278-e6ab769e47a4",
              "title": "rubyifyKeys",
              "fullFile": "/Users/fatmakhan/Documents/vets-website/src/applications/gi/tests/utils/helpers.unit.spec.js",
              "file": "/src/applications/gi/tests/utils/helpers.unit.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should properly snake-case keys",
                  "fullTitle": "GIBCT helpers: rubyifyKeys should properly snake-case keys",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var data = {\n  testKey: ''\n};\n(0, _chai.expect)((0, _helpers.rubyifyKeys)(data)).to.have.key('test_key');",
                  "err": {},
                  "uuid": "83a2451f-bf80-43ea-904d-d3e07c31d423",
                  "parentUUID": "60bdefcd-ec4b-496f-8278-e6ab769e47a4",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "83a2451f-bf80-43ea-904d-d3e07c31d423"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "b7ddb2e3-7ece-4145-bc7a-c66a8729b9b1",
              "title": "isURL",
              "fullFile": "/Users/fatmakhan/Documents/vets-website/src/applications/gi/tests/utils/helpers.unit.spec.js",
              "file": "/src/applications/gi/tests/utils/helpers.unit.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Any null or undefined will return 'N/A' ",
                  "fullTitle": "GIBCT helpers: isURL Any null or undefined will return 'N/A' ",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var value = undefined;\n(0, _chai.expect)((0, _helpers.isURL)(value)).to.eq(false);",
                  "err": {},
                  "uuid": "2e74e3d6-e169-43b7-acf3-9ab6a4b7181f",
                  "parentUUID": "b7ddb2e3-7ece-4145-bc7a-c66a8729b9b1",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Any value will return the same value ",
                  "fullTitle": "GIBCT helpers: isURL Any value will return the same value ",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var value = 'https://test.com';\n(0, _chai.expect)((0, _helpers.isURL)(value)).to.eq(true);",
                  "err": {},
                  "uuid": "a66f6ad8-31ae-408e-963b-73ad89d85fcd",
                  "parentUUID": "b7ddb2e3-7ece-4145-bc7a-c66a8729b9b1",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "2e74e3d6-e169-43b7-acf3-9ab6a4b7181f",
                "a66f6ad8-31ae-408e-963b-73ad89d85fcd"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "fc314c18-648f-428b-bd33-925ef8e6b934",
              "title": "boolYesNo",
              "fullFile": "/Users/fatmakhan/Documents/vets-website/src/applications/gi/tests/utils/helpers.unit.spec.js",
              "file": "/src/applications/gi/tests/utils/helpers.unit.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Boolean true is turned into string 'Yes' ",
                  "fullTitle": "GIBCT helpers: boolYesNo Boolean true is turned into string 'Yes' ",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var field = true;\n(0, _chai.expect)((0, _helpers.boolYesNo)(field)).to.eq('Yes');",
                  "err": {},
                  "uuid": "cc80d91b-fa8d-4230-b431-4be5c26c461a",
                  "parentUUID": "fc314c18-648f-428b-bd33-925ef8e6b934",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Boolean true is turned into string 'No' ",
                  "fullTitle": "GIBCT helpers: boolYesNo Boolean true is turned into string 'No' ",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var field = false;\n(0, _chai.expect)((0, _helpers.boolYesNo)(field)).to.eq('No');",
                  "err": {},
                  "uuid": "71a14458-49fe-4174-a1ab-0fe872960b65",
                  "parentUUID": "fc314c18-648f-428b-bd33-925ef8e6b934",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "cc80d91b-fa8d-4230-b431-4be5c26c461a",
                "71a14458-49fe-4174-a1ab-0fe872960b65"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "b54f7037-f0fe-4f71-9bfb-b3a9761b8db6",
              "title": "isCountryInternational",
              "fullFile": "/Users/fatmakhan/Documents/vets-website/src/applications/gi/tests/utils/helpers.unit.spec.js",
              "file": "/src/applications/gi/tests/utils/helpers.unit.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should handle lowercase country names",
                  "fullTitle": "GIBCT helpers: isCountryInternational should handle lowercase country names",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)((0, _helpers.isCountryInternational)('usa')).to.be.false;",
                  "err": {},
                  "uuid": "da8c306a-d54a-42e5-a42f-5efc3a79358b",
                  "parentUUID": "b54f7037-f0fe-4f71-9bfb-b3a9761b8db6",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should recognize USA",
                  "fullTitle": "GIBCT helpers: isCountryInternational should recognize USA",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)((0, _helpers.isCountryInternational)('USA')).to.be.false;",
                  "err": {},
                  "uuid": "fe72ab05-60ca-4d8e-824c-4399298a09b0",
                  "parentUUID": "b54f7037-f0fe-4f71-9bfb-b3a9761b8db6",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should recognize non-USA",
                  "fullTitle": "GIBCT helpers: isCountryInternational should recognize non-USA",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)((0, _helpers.isCountryInternational)('CAN')).to.be.true;",
                  "err": {},
                  "uuid": "9f9442d3-495e-407b-904f-5a8555876b2d",
                  "parentUUID": "b54f7037-f0fe-4f71-9bfb-b3a9761b8db6",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "da8c306a-d54a-42e5-a42f-5efc3a79358b",
                "fe72ab05-60ca-4d8e-824c-4399298a09b0",
                "9f9442d3-495e-407b-904f-5a8555876b2d"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "1447cb16-b1f2-4f56-8386-5879879b1f81",
              "title": "isPresent",
              "fullFile": "/Users/fatmakhan/Documents/vets-website/src/applications/gi/tests/utils/helpers.unit.spec.js",
              "file": "/src/applications/gi/tests/utils/helpers.unit.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": " value = 'SampleText' are turned into number false ",
                  "fullTitle": "GIBCT helpers: isPresent  value = 'SampleText' are turned into number false ",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var value = 'SampleText';\n(0, _chai.expect)((0, _helpers.isPresent)(value)).to.eq(true);",
                  "err": {},
                  "uuid": "9de47c84-d23e-4d97-a223-9c6bc4e39262",
                  "parentUUID": "1447cb16-b1f2-4f56-8386-5879879b1f81",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "9de47c84-d23e-4d97-a223-9c6bc4e39262"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "8701af39-eba9-4361-9571-a09e85b98c4b",
              "title": "searchCriteriaFromCoords",
              "fullFile": "/Users/fatmakhan/Documents/vets-website/src/applications/gi/tests/utils/helpers.unit.spec.js",
              "file": "/src/applications/gi/tests/utils/helpers.unit.spec.js",
              "beforeHooks": [
                {
                  "title": "\"before each\" hook in \"searchCriteriaFromCoords\"",
                  "fullTitle": "GIBCT helpers: searchCriteriaFromCoords \"before each\" hook in \"searchCriteriaFromCoords\"",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "reverseGeocodeStub = _sinon.default.stub(_MapboxClient.default, 'reverseGeocode').returns({\n  send: function send() {\n    return Promise.resolve({\n      body: {\n        features: [{\n          placeName: 'Kinney Creek Road, Gales Creek, Oregon 97117, United States'\n        }]\n      }\n    });\n  }\n});",
                  "err": {},
                  "uuid": "5e877a9b-3e35-4898-872e-4a868b1c019e",
                  "parentUUID": "8701af39-eba9-4361-9571-a09e85b98c4b",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [
                {
                  "title": "\"after each\" hook in \"searchCriteriaFromCoords\"",
                  "fullTitle": "GIBCT helpers: searchCriteriaFromCoords \"after each\" hook in \"searchCriteriaFromCoords\"",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "reverseGeocodeStub.restore();",
                  "err": {},
                  "uuid": "1a03c955-e04a-40dd-ba61-af69bcdf675f",
                  "parentUUID": "8701af39-eba9-4361-9571-a09e85b98c4b",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "tests": [
                {
                  "title": "should return searchString and position based on coordinates",
                  "fullTitle": "GIBCT helpers: searchCriteriaFromCoords should return searchString and position based on coordinates",
                  "timedOut": false,
                  "duration": 1,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); });",
                  "err": {
                    "message": "ReferenceError: searchCriteriaFromCoords is not defined",
                    "estack": "ReferenceError: searchCriteriaFromCoords is not defined\n    at _callee$ (src/applications/gi/tests/utils/helpers.unit.spec.js:342:72)\n    at tryCatch (node_modules/regenerator-runtime/runtime.js:63:40)\n    at Generator.invoke [as _invoke] (node_modules/regenerator-runtime/runtime.js:294:22)\n    at Generator.next (node_modules/regenerator-runtime/runtime.js:119:21)\n    at asyncGeneratorStep (src/applications/gi/tests/utils/helpers.unit.spec.js:13:103)\n    at _next (src/applications/gi/tests/utils/helpers.unit.spec.js:15:194)\n    at /Users/fatmakhan/Documents/vets-website/src/applications/gi/tests/utils/helpers.unit.spec.js:15:364\n    at new Promise (<anonymous>)\n    at Context.<anonymous> (src/applications/gi/tests/utils/helpers.unit.spec.js:15:97)\n    at Test.Runnable.run (node_modules/mocha-snapshots/src/index.js:19:22)\n    at Hook.Runnable.run (node_modules/mocha-snapshots/src/index.js:19:22)\n    at processImmediate (internal/timers.js:461:21)\n    at process.callbackTrampoline (internal/async_hooks.js:129:14)",
                    "diff": null
                  },
                  "uuid": "8cb1bca2-7cbb-4244-9698-b4d690f87523",
                  "parentUUID": "8701af39-eba9-4361-9571-a09e85b98c4b",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [],
              "failures": [
                "8cb1bca2-7cbb-4244-9698-b4d690f87523"
              ],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "d890dcb7-6cc9-4db3-9b34-1e7fcb00710a",
              "title": "formatCurrency",
              "fullFile": "/Users/fatmakhan/Documents/vets-website/src/applications/gi/tests/utils/helpers.unit.spec.js",
              "file": "/src/applications/gi/tests/utils/helpers.unit.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should round currency",
                  "fullTitle": "GIBCT helpers: formatCurrency should round currency",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)((0, _helpers.formatCurrency)(1000.5)).to.equal('$1,001');",
                  "err": {},
                  "uuid": "053cbf02-26e9-4265-ade5-88193899d018",
                  "parentUUID": "d890dcb7-6cc9-4db3-9b34-1e7fcb00710a",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should format currency",
                  "fullTitle": "GIBCT helpers: formatCurrency should format currency",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)((0, _helpers.formatCurrency)(1000)).to.equal('$1,000');",
                  "err": {},
                  "uuid": "3fe69680-0b8d-47b2-90db-022942c6b282",
                  "parentUUID": "d890dcb7-6cc9-4db3-9b34-1e7fcb00710a",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "053cbf02-26e9-4265-ade5-88193899d018",
                "3fe69680-0b8d-47b2-90db-022942c6b282"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "b5672451-2020-447d-bba9-2ee777413eea",
              "title": "scrollToFocusedElement",
              "fullFile": "/Users/fatmakhan/Documents/vets-website/src/applications/gi/tests/utils/helpers.unit.spec.js",
              "file": "/src/applications/gi/tests/utils/helpers.unit.spec.js",
              "beforeHooks": [
                {
                  "title": "\"before each\" hook in \"scrollToFocusedElement\"",
                  "fullTitle": "GIBCT helpers: scrollToFocusedElement \"before each\" hook in \"scrollToFocusedElement\"",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "scrollToStub = _sinon.default.stub().callsFake(function () {});\nglobal.window.scrollTo = scrollToStub;",
                  "err": {},
                  "uuid": "ac73feb7-a3be-45f7-8aee-23be63ea5431",
                  "parentUUID": "b5672451-2020-447d-bba9-2ee777413eea",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [],
              "tests": [
                {
                  "title": "scrolls to focused element if it is below the compare drawer",
                  "fullTitle": "GIBCT helpers: scrollToFocusedElement scrolls to focused element if it is below the compare drawer",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var activeElement = document.createElement('div');\nactiveElement.id = 'testElement';\ndocument.body.appendChild(activeElement);\nactiveElement.focus();\nvar compareDrawer = document.createElement('div');\ncompareDrawer.id = 'compare-drawer';\ncompareDrawer.style.height = '100px';\ndocument.body.appendChild(compareDrawer);\nvar getScrollOptions = function getScrollOptions() {\n  return {};\n};\n(0, _helpers.scrollToFocusedElement)(getScrollOptions);\n(0, _chai.expect)(scrollToStub.calledOnce).to.be.false;\n(0, _chai.expect)(scrollToStub.calledWith(0, activeElement.offsetTop)).to.be.false;",
                  "err": {},
                  "uuid": "9e613e6e-1ba1-4f30-93fe-6f432ede5628",
                  "parentUUID": "b5672451-2020-447d-bba9-2ee777413eea",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "does not scroll if focused element is above the compare drawer",
                  "fullTitle": "GIBCT helpers: scrollToFocusedElement does not scroll if focused element is above the compare drawer",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var activeElement = document.createElement('div');\nactiveElement.id = 'testElement';\ndocument.body.appendChild(activeElement);\nactiveElement.focus();\nvar compareDrawer = document.createElement('div');\ncompareDrawer.id = 'compare-drawer';\ncompareDrawer.style.height = '100px';\ndocument.body.appendChild(compareDrawer);\nvar getScrollOptions = function getScrollOptions() {\n  return {};\n};\nglobal.window.scrollTo(0, 200);\n(0, _helpers.scrollToFocusedElement)(getScrollOptions);\n(0, _chai.expect)(scrollToStub.called).to.be.true;",
                  "err": {},
                  "uuid": "569904c3-df06-4267-a6aa-9f3678cb598b",
                  "parentUUID": "b5672451-2020-447d-bba9-2ee777413eea",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "9e613e6e-1ba1-4f30-93fe-6f432ede5628",
                "569904c3-df06-4267-a6aa-9f3678cb598b"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 3,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 10000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "undefined_2024-02-16T164138322Z",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "min",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "id": "default",
        "consoleReporter": "min",
        "reportDir": "mocha/results",
        "reportFilename": "undefined_2024-02-16T164138322Z",
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}