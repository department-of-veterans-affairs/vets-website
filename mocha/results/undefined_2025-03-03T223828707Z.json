{
  "stats": {
    "suites": 28,
    "tests": 57,
    "passes": 56,
    "pending": 1,
    "failures": 0,
    "start": "2025-03-03T22:38:28.794Z",
    "end": "2025-03-03T22:38:29.568Z",
    "duration": 774,
    "testsRegistered": 57,
    "passPercent": 100,
    "pendingPercent": 1.7543859649122806,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "9219ce7d-56d6-4e64-b783-4ecdccac3b2e",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [
        {
          "title": "\"before each\" hook: beforeEach in \"{root}\"",
          "fullTitle": "\"before each\" hook: beforeEach in \"{root}\"",
          "timedOut": false,
          "duration": 2,
          "state": null,
          "speed": null,
          "pass": false,
          "fail": false,
          "pending": false,
          "context": null,
          "code": "cov_5fzq6lsur().f[20]++;\ncov_5fzq6lsur().s[70]++;\nsetupJSDom();\ncov_5fzq6lsur().s[71]++;\nresetFetch();\ncov_5fzq6lsur().s[72]++;\ncleanupStorage();\ncov_5fzq6lsur().s[73]++;\nif (isStressTest == 'false') {\n  cov_5fzq6lsur().b[12][0]++;\n  cov_5fzq6lsur().s[74]++;\n  checkAllowList(this);\n} else {\n  cov_5fzq6lsur().b[12][1]++;\n}\ncov_5fzq6lsur().s[75]++;\nif ((cov_5fzq6lsur().b[14][0]++, process.env.CI) || (cov_5fzq6lsur().b[14][1]++, ['trace', 'debug'].includes(process.env.LOG_LEVEL))) {\n  cov_5fzq6lsur().b[13][0]++;\n  cov_5fzq6lsur().s[76]++;\n  console.log('running: ', this.currentTest.file.slice(this.currentTest.file.indexOf('src')));\n} else {\n  cov_5fzq6lsur().b[13][1]++;\n}",
          "err": {},
          "uuid": "751d6dcc-6255-4cd0-92e5-b5bd2aa2ff19",
          "parentUUID": "9219ce7d-56d6-4e64-b783-4ecdccac3b2e",
          "isHook": true,
          "skipped": false
        }
      ],
      "afterHooks": [
        {
          "title": "\"after each\" hook: afterEach in \"{root}\"",
          "fullTitle": "\"after each\" hook: afterEach in \"{root}\"",
          "timedOut": false,
          "duration": 0,
          "state": null,
          "speed": null,
          "pass": false,
          "fail": false,
          "pending": false,
          "context": null,
          "code": "cov_5fzq6lsur().f[21]++;\ncov_5fzq6lsur().s[77]++;\ncleanupStorage();\ncov_5fzq6lsur().s[78]++;\nflushPromises();",
          "err": {},
          "uuid": "e0ebe030-ce1a-42b7-95a3-0252a8091063",
          "parentUUID": "9219ce7d-56d6-4e64-b783-4ecdccac3b2e",
          "isHook": true,
          "skipped": false
        },
        {
          "title": "\"after each\" hook in \"{root}\"",
          "fullTitle": "\"after each\" hook in \"{root}\"",
          "timedOut": false,
          "duration": 1,
          "state": null,
          "speed": null,
          "pass": false,
          "fail": false,
          "pending": false,
          "context": null,
          "code": "(0, _pure.cleanup)();",
          "err": {},
          "uuid": "e82d3965-2af8-4f81-b211-8f2349ada4b3",
          "parentUUID": "9219ce7d-56d6-4e64-b783-4ecdccac3b2e",
          "isHook": true,
          "skipped": false
        }
      ],
      "tests": [],
      "suites": [
        {
          "uuid": "ad20cb1d-7c58-49fb-b8c0-43d4f9e58f3d",
          "title": "MHVDown",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/platform/mhv/downtime/tests/components/MHVDown.unit.spec.jsx",
          "file": "/src/platform/mhv/downtime/tests/components/MHVDown.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "renders app title when provided",
              "fullTitle": "MHVDown renders app title when provided",
              "timedOut": false,
              "duration": 23,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var props = {\n  appTitle: 'APPLICATION',\n  endString: endString,\n  startString: startString,\n  timeInterval: timeInterval\n};\nvar _render = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_MHVDown.default, props)),\n  getByText = _render.getByText;\ngetByText(/The maintenance will last TIME INTERVAL/i);\ngetByText(/We’re working on APPLICATION right now/i);\ngetByText(startString);\ngetByText(endString);",
              "err": {},
              "uuid": "a719194b-2874-4af4-b584-d6c2283cfe81",
              "parentUUID": "ad20cb1d-7c58-49fb-b8c0-43d4f9e58f3d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "renders with default text if appTitle not provided",
              "fullTitle": "MHVDown renders with default text if appTitle not provided",
              "timedOut": false,
              "duration": 5,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var props = {\n  endString: endString,\n  startString: startString,\n  timeInterval: timeInterval\n};\nvar _render2 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_MHVDown.default, props)),\n  getByText = _render2.getByText;\ngetByText(/The maintenance will last TIME INTERVAL/i);\ngetByText(startString);\ngetByText(endString);",
              "err": {},
              "uuid": "85c085db-a2d1-463f-936a-773e2faefad0",
              "parentUUID": "ad20cb1d-7c58-49fb-b8c0-43d4f9e58f3d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a719194b-2874-4af4-b584-d6c2283cfe81",
            "85c085db-a2d1-463f-936a-773e2faefad0"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 28,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "0741701b-fb42-43d1-a4c1-ab6d929cc22e",
          "title": "MHVDowntimeApproaching",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/platform/mhv/downtime/tests/components/MHVDowntimeApproaching.unit.spec.jsx",
          "file": "/src/platform/mhv/downtime/tests/components/MHVDowntimeApproaching.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "renders with human-formatted start and end times",
              "fullTitle": "MHVDowntimeApproaching renders with human-formatted start and end times",
              "timedOut": false,
              "duration": 4,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var props = {\n  appTitle: 'APPLICATION',\n  endString: endString,\n  startString: startString,\n  timeInterval: timeInterval\n};\nvar _render = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_MHVDowntimeApproaching.default, props)),\n  getByText = _render.getByText;\ngetByText(/During this time, you won’t be able to use APPLICATION/i);\ngetByText(startString);\ngetByText(endString);",
              "err": {},
              "uuid": "6d6010ba-cfc5-40e0-8097-34444d52cf54",
              "parentUUID": "0741701b-fb42-43d1-a4c1-ab6d929cc22e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "renders with default text if appTitle not provided",
              "fullTitle": "MHVDowntimeApproaching renders with default text if appTitle not provided",
              "timedOut": false,
              "duration": 3,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var props = {\n  endString: endString,\n  startString: startString,\n  timeInterval: timeInterval\n};\nvar _render2 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_MHVDowntimeApproaching.default, props)),\n  getByText = _render2.getByText;\ngetByText(/you won’t be able to use our health tools/i);\ngetByText(startString);\ngetByText(endString);",
              "err": {},
              "uuid": "a2e43bd3-11c9-4b7f-9a68-bddf4ee6b5d6",
              "parentUUID": "0741701b-fb42-43d1-a4c1-ab6d929cc22e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "6d6010ba-cfc5-40e0-8097-34444d52cf54",
            "a2e43bd3-11c9-4b7f-9a68-bddf4ee6b5d6"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 7,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "486696a2-fff1-4f39-b86f-39625a3ce970",
          "title": "MHVDowntime",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/platform/mhv/downtime/tests/containers/MHVDowntime.unit.spec.jsx",
          "file": "/src/platform/mhv/downtime/tests/containers/MHVDowntime.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "renders MHVDown when a service is down",
              "fullTitle": "MHVDowntime renders MHVDown when a service is down",
              "timedOut": false,
              "duration": 40,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var now = new Date();\nvar later = new Date(now).setHours(now.getHours() + 4);\nvar mockServiceProps = {\n  endTime: later,\n  startTime: now,\n  externalService: 'mhv_sm'\n};\nvar mockProps = _objectSpread({\n  status: _exportsFile.externalServiceStatus.down\n}, mockServiceProps);\nvar _render = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_MHVDowntime.default, mockProps)),\n  getByRole = _render.getByRole,\n  getByText = _render.getByText;\ngetByRole('heading', {\n  level: 2,\n  name: 'Maintenance on My HealtheVet'\n});\ngetByText(/our health tools/i);",
              "err": {},
              "uuid": "6dab2be5-23d4-4a9e-a0d8-ff3a150581e4",
              "parentUUID": "486696a2-fff1-4f39-b86f-39625a3ce970",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "renders MHVDowntimeApproaching and children when a service is going down within an hour",
              "fullTitle": "MHVDowntime renders MHVDowntimeApproaching and children when a service is going down within an hour",
              "timedOut": false,
              "duration": 19,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Create a starting datetime 30 minutes into the future, though `status` is what really controls what renders\nvar soon = new Date(Date.now());\nsoon.setMinutes(soon.getMinutes() + 30);\nvar later = new Date(soon).setHours(soon.getHours() + 4);\nvar mockServiceProps = {\n  endTime: later,\n  startTime: soon,\n  externalService: 'mhv_sm'\n};\nvar mockProps = _objectSpread({\n  status: _exportsFile.externalServiceStatus.downtimeApproaching,\n  children: /*#__PURE__*/_react.default.createElement(\"p\", null, \"Child content lives here.\")\n}, mockServiceProps);\nvar _render2 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_MHVDowntime.default, mockProps)),\n  getByRole = _render2.getByRole,\n  getByText = _render2.getByText;\ngetByRole('heading', {\n  level: 2,\n  name: 'Upcoming maintenance on My HealtheVet'\n});\ngetByText(/you won’t be able to use our health tools/i);\ngetByText(/child content lives here/i);",
              "err": {},
              "uuid": "a7ada979-2912-45fc-82e0-3b5f4c235b32",
              "parentUUID": "486696a2-fff1-4f39-b86f-39625a3ce970",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "renders child content when no matching services are down",
              "fullTitle": "MHVDowntime renders child content when no matching services are down",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var mockServiceProps = {\n  endTime: undefined,\n  startTime: undefined,\n  externalService: undefined\n};\nvar mockProps = _objectSpread({\n  children: /*#__PURE__*/_react.default.createElement(\"p\", null, \"Child content renders\"),\n  status: _exportsFile.externalServiceStatus.ok\n}, mockServiceProps);\nvar _render3 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_MHVDowntime.default, mockProps)),\n  getByText = _render3.getByText;\ngetByText('Child content renders');",
              "err": {},
              "uuid": "01cf1f4b-6459-499b-8f6c-a6e1d2f121a3",
              "parentUUID": "486696a2-fff1-4f39-b86f-39625a3ce970",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "renders content with vague time interval and no start/end time if no valid dates provided",
              "fullTitle": "MHVDowntime renders content with vague time interval and no start/end time if no valid dates provided",
              "timedOut": false,
              "duration": 3,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var mockServiceProps = {\n  endTime: {},\n  startTime: undefined,\n  externalService: 'mhv_sm'\n};\nvar mockProps = _objectSpread({\n  status: _exportsFile.externalServiceStatus.downtimeApproaching\n}, mockServiceProps);\nvar _render4 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_MHVDowntime.default, mockProps)),\n  getByText = _render4.getByText,\n  queryByText = _render4.queryByText;\ngetByText(/The maintenance will last some time/i);\ngetByText(/During this time, you won’t be able to use our health tools/i);\n(0, _chai.expect)(queryByText('July 4, 2019 at 9:00 a.m. ET')).to.be.null;\n(0, _chai.expect)(queryByText('July 5, 2019 at 3:00 a.m. ET')).to.be.null;",
              "err": {},
              "uuid": "a4538f4d-2248-44eb-bb89-8c545911b8af",
              "parentUUID": "486696a2-fff1-4f39-b86f-39625a3ce970",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "renders content with vague time interval and start time if end time does not exist",
              "fullTitle": "MHVDowntime renders content with vague time interval and start time if end time does not exist",
              "timedOut": false,
              "duration": 3,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var mockServiceProps = {\n  endTime: {},\n  startTime: new Date('July 4, 2019 09:00:00 EDT'),\n  externalService: 'mhv_sm'\n};\nvar mockProps = _objectSpread({\n  status: _exportsFile.externalServiceStatus.downtimeApproaching\n}, mockServiceProps);\nvar _render5 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_MHVDowntime.default, mockProps)),\n  getByText = _render5.getByText,\n  queryByText = _render5.queryByText;\ngetByText(/The maintenance will last some time/i);\ngetByText(/During this time, you won’t be able to use our health tools/i);\ngetByText(/July 4, 2019 at \\d:\\d{2} (a|p)\\.m\\. [A-Z]{1,2}T/);\n(0, _chai.expect)(queryByText('July 5, 2019 at 3:00 a.m. ET')).to.be.null;",
              "err": {},
              "uuid": "bf1308ab-b538-4cfe-a852-6541a20dea51",
              "parentUUID": "486696a2-fff1-4f39-b86f-39625a3ce970",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "renders content with vague time interval and end time if start time does not exist",
              "fullTitle": "MHVDowntime renders content with vague time interval and end time if start time does not exist",
              "timedOut": false,
              "duration": 3,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var mockServiceProps = {\n  endTime: new Date('July 7, 2019 09:00:00 EDT'),\n  startTime: {\n    toDate: function toDate() {\n      return 'FAKE';\n    }\n  },\n  externalService: 'mhv_sm'\n};\nvar mockProps = _objectSpread({\n  status: _exportsFile.externalServiceStatus.downtimeApproaching\n}, mockServiceProps);\nvar _render6 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_MHVDowntime.default, mockProps)),\n  getByText = _render6.getByText;\ngetByText(/The maintenance will last some time/i);\ngetByText(/During this time, you won’t be able to use our health tools/i);\ngetByText(/July 7, 2019 at \\d:\\d{2} (a|p)\\.m\\. [A-Z]{1,2}T/);",
              "err": {},
              "uuid": "46646cdd-1da2-47ac-a5fc-b9582d823db0",
              "parentUUID": "486696a2-fff1-4f39-b86f-39625a3ce970",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "6dab2be5-23d4-4a9e-a0d8-ff3a150581e4",
            "a7ada979-2912-45fc-82e0-3b5f4c235b32",
            "01cf1f4b-6459-499b-8f6c-a6e1d2f121a3",
            "a4538f4d-2248-44eb-bb89-8c545911b8af",
            "bf1308ab-b538-4cfe-a852-6541a20dea51",
            "46646cdd-1da2-47ac-a5fc-b9582d823db0"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 69,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "4d47d155-5f6e-48e1-a375-b8ee2cc10af2",
          "title": "coerceToDate",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/platform/mhv/downtime/tests/date.unit.spec.js",
          "file": "/src/platform/mhv/downtime/tests/date.unit.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "returns a Date instance when passed a moment object",
              "fullTitle": "coerceToDate returns a Date instance when passed a moment object",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var m = (0, _moment.default)('2024-02-14 09:30');\nvar d = (0, _date.coerceToDate)(m);\n(0, _chai.expect)(d).to.be.an.instanceOf(Date);",
              "err": {},
              "uuid": "28e2bab7-6508-4f7c-a467-37d029a74492",
              "parentUUID": "4d47d155-5f6e-48e1-a375-b8ee2cc10af2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "returns a date instance when passed a date instance",
              "fullTitle": "coerceToDate returns a date instance when passed a date instance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var d1 = new Date();\nvar d2 = (0, _date.coerceToDate)(d1);\n(0, _chai.expect)(d2).to.equal(d1);",
              "err": {},
              "uuid": "2d3aa3a1-d747-4b52-b815-7c91706cea49",
              "parentUUID": "4d47d155-5f6e-48e1-a375-b8ee2cc10af2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "returns null when passed something that is not a date or moment object",
              "fullTitle": "coerceToDate returns null when passed something that is not a date or moment object",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var x = '';\nvar y = undefined;\nvar z = {};\n// F is for Fake\nvar f = {\n  toDate: function toDate() {\n    return 'Tricked you!';\n  }\n};\n(0, _chai.expect)((0, _date.coerceToDate)(x)).to.be.null;\n(0, _chai.expect)((0, _date.coerceToDate)(y)).to.be.null;\n(0, _chai.expect)((0, _date.coerceToDate)(z)).to.be.null;\n(0, _chai.expect)((0, _date.coerceToDate)(f)).to.be.null;",
              "err": {},
              "uuid": "54458a2c-061c-4ea3-8fd4-1d498771b3b6",
              "parentUUID": "4d47d155-5f6e-48e1-a375-b8ee2cc10af2",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "28e2bab7-6508-4f7c-a467-37d029a74492",
            "2d3aa3a1-d747-4b52-b815-7c91706cea49",
            "54458a2c-061c-4ea3-8fd4-1d498771b3b6"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "9a4237d7-423d-477f-8890-564f1f693af5",
          "title": "parseDate",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/platform/mhv/downtime/tests/date.unit.spec.js",
          "file": "/src/platform/mhv/downtime/tests/date.unit.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "parses an ISO 8601 date string",
              "fullTitle": "parseDate parses an ISO 8601 date string",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var dateString = '2024-01-29T15:17:05-05:00';\nvar result = (0, _date.parseDate)(dateString);\n(0, _chai.expect)(result).to.respondTo('toISOString');\n(0, _chai.expect)(result.toISOString()).to.eql('2024-01-29T20:17:05.000Z');",
              "err": {},
              "uuid": "f45fe7db-af47-4783-980d-79a0d5a3aa15",
              "parentUUID": "9a4237d7-423d-477f-8890-564f1f693af5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "returns null for invalid inputs",
              "fullTitle": "parseDate returns null for invalid inputs",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, _chai.expect)((0, _date.parseDate)('foobar')).to.be.null;\n(0, _chai.expect)((0, _date.parseDate)(null)).to.be.null;\n(0, _chai.expect)((0, _date.parseDate)('Tomorrow')).to.be.null;",
              "err": {},
              "uuid": "a08b9641-d962-4512-b748-6942012c3171",
              "parentUUID": "9a4237d7-423d-477f-8890-564f1f693af5",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f45fe7db-af47-4783-980d-79a0d5a3aa15",
            "a08b9641-d962-4512-b748-6942012c3171"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "44d7d709-61f0-43e5-894b-3a9765704e02",
          "title": "formatDatetime",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/platform/mhv/downtime/tests/date.unit.spec.js",
          "file": "/src/platform/mhv/downtime/tests/date.unit.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "formats a datetime string with long month name, full year and timezone abbreviation",
              "fullTitle": "formatDatetime formats a datetime string with long month name, full year and timezone abbreviation",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var dateString = '2024-01-01T15:17:05-05:00';\nvar d = new Date(dateString);\nvar result = (0, _date.formatDatetime)(d);\n// Test must run in context of expected timezone\n(0, _chai.expect)(result).to.match(/January 1, 2024 at \\d:\\d{2} (a|p)\\.m\\. [A-Z]{1,2}T/);",
              "err": {},
              "uuid": "6a795951-d01e-4062-a705-56c8c7118d62",
              "parentUUID": "44d7d709-61f0-43e5-894b-3a9765704e02",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "6a795951-d01e-4062-a705-56c8c7118d62"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "27700c20-48a8-4f3f-9382-9cf3ed79fa85",
          "title": "formatElapsedHours",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/platform/mhv/downtime/tests/date.unit.spec.js",
          "file": "/src/platform/mhv/downtime/tests/date.unit.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "shows 1 hour when time difference is less than an hour and a half",
              "fullTitle": "formatElapsedHours shows 1 hour when time difference is less than an hour and a half",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var startDate = new Date(2024, 2, 14, 14);\nvar endDate = new Date(2024, 2, 14, 15, 15);\nvar result = (0, _date.formatElapsedHours)(startDate, endDate);\n(0, _chai.expect)(result).to.equal('1 hour');",
              "err": {},
              "uuid": "0c492059-541c-4426-badf-2efe2d7d5627",
              "parentUUID": "27700c20-48a8-4f3f-9382-9cf3ed79fa85",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "shows a plural hours when time difference is greater than an hour and a half",
              "fullTitle": "formatElapsedHours shows a plural hours when time difference is greater than an hour and a half",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var startDate = new Date(2024, 2, 14, 14);\nvar endDate = new Date(2024, 2, 14, 18, 30);\nvar result = (0, _date.formatElapsedHours)(startDate, endDate);\n(0, _chai.expect)(result).to.equal('5 hours');",
              "err": {},
              "uuid": "0cca3ef9-5b64-4fe5-af70-13af5d3c4ad9",
              "parentUUID": "27700c20-48a8-4f3f-9382-9cf3ed79fa85",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "returns null when start or end time is not or cannot be coerced to a date",
              "fullTitle": "formatElapsedHours returns null when start or end time is not or cannot be coerced to a date",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, _chai.expect)((0, _date.formatElapsedHours)('foo', new Date())).to.be.null;\n(0, _chai.expect)((0, _date.formatElapsedHours)(new Date(), {\n  toDate: function toDate() {\n    return \"It's a trap!\";\n  }\n})).to.be.null;\n(0, _chai.expect)((0, _date.formatElapsedHours)(undefined, null)).to.be.null;",
              "err": {},
              "uuid": "78c57950-c759-4ea1-a9ba-e4f4012784ca",
              "parentUUID": "27700c20-48a8-4f3f-9382-9cf3ed79fa85",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "0c492059-541c-4426-badf-2efe2d7d5627",
            "0cca3ef9-5b64-4fe5-af70-13af5d3c4ad9",
            "78c57950-c759-4ea1-a9ba-e4f4012784ca"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "a81bebfe-e8cf-4d99-92ac-f51c8c235c9d",
          "title": "<MhvSecondaryNav />",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/platform/mhv/secondary-nav/tests/MhvSecondaryNav.unit.spec.jsx",
          "file": "/src/platform/mhv/secondary-nav/tests/MhvSecondaryNav.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "is hidden when state.featureToggles is unset",
              "fullTitle": "<MhvSecondaryNav /> is hidden when state.featureToggles is unset",
              "timedOut": false,
              "duration": 23,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _setup = setup({\n    initialState: {}\n  }),\n  getByRole = _setup.getByRole;\nvar nav = getByRole('navigation', {\n  name: 'My HealtheVet'\n});\nvar isHidden = nav.classList.contains('vads-u-visibility--hidden');\n(0, _chai.expect)(isHidden).to.be.true;",
              "err": {},
              "uuid": "5763e77e-89dd-4f4d-a313-0d73202f9ba6",
              "parentUUID": "a81bebfe-e8cf-4d99-92ac-f51c8c235c9d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "is hidden when state.featureToggles.loading",
              "fullTitle": "<MhvSecondaryNav /> is hidden when state.featureToggles.loading",
              "timedOut": false,
              "duration": 16,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var initialState = stateFn({\n  loading: true\n});\nvar _setup2 = setup({\n    initialState: initialState\n  }),\n  getByRole = _setup2.getByRole;\nvar nav = getByRole('navigation', {\n  name: 'My HealtheVet'\n});\nvar isHidden = nav.classList.contains('vads-u-visibility--hidden');\n(0, _chai.expect)(isHidden).to.be.true;",
              "err": {},
              "uuid": "19fd874e-eb15-4dcc-97b6-c3816819ffca",
              "parentUUID": "a81bebfe-e8cf-4d99-92ac-f51c8c235c9d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "is hidden when state.featureToggles.loading is undefined",
              "fullTitle": "<MhvSecondaryNav /> is hidden when state.featureToggles.loading is undefined",
              "timedOut": false,
              "duration": 15,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var initialState = stateFn({\n  loading: undefined\n});\nvar _setup3 = setup({\n    initialState: initialState\n  }),\n  getByRole = _setup3.getByRole;\nvar nav = getByRole('navigation', {\n  name: 'My HealtheVet'\n});\nvar isHidden = nav.classList.contains('vads-u-visibility--hidden');\n(0, _chai.expect)(isHidden).to.be.true;",
              "err": {},
              "uuid": "1f792b72-e002-414c-ba5e-95f6ba112437",
              "parentUUID": "a81bebfe-e8cf-4d99-92ac-f51c8c235c9d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "renders",
              "fullTitle": "<MhvSecondaryNav /> renders",
              "timedOut": false,
              "duration": 66,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var initialState = stateFn({\n  loading: false\n});\nvar _setup4 = setup({\n    initialState: initialState\n  }),\n  getByRole = _setup4.getByRole;\nvar nav = getByRole('navigation', {\n  name: 'My HealtheVet'\n});\nvar isHidden = nav.classList.contains('vads-u-visibility--hidden');\n(0, _chai.expect)(isHidden).to.be.false;\nvar mhvLink = getByRole('link', {\n  name: /^My HealtheVet/\n});\n(0, _chai.expect)(mhvLink.href).to.match(/my-health$/);",
              "err": {},
              "uuid": "5dd864f5-7cd4-4e12-a3ca-602e0545c19e",
              "parentUUID": "a81bebfe-e8cf-4d99-92ac-f51c8c235c9d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [
            {
              "uuid": "67bb1533-d9f6-4bd8-b20f-fe4d1f8ead49",
              "title": "Secure Messages href",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/platform/mhv/secondary-nav/tests/MhvSecondaryNav.unit.spec.jsx",
              "file": "/src/platform/mhv/secondary-nav/tests/MhvSecondaryNav.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "when no features set:\n\t /my-health/secure-messages",
                  "fullTitle": "<MhvSecondaryNav /> Secure Messages href when no features set:\n\t /my-health/secure-messages",
                  "timedOut": false,
                  "duration": 55,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var initialState = stateFn({\n  loading: false\n});\nvar _setup5 = setup({\n    initialState: initialState\n  }),\n  getByRole = _setup5.getByRole;\nvar mrLink = getByRole('link', {\n  name: /^Messages/\n});\n(0, _chai.expect)(mrLink.href).to.match(/my-health\\/secure-messages$/);",
                  "err": {},
                  "uuid": "fe2efd78-ae6b-42e9-828f-429e47f7f8ac",
                  "parentUUID": "67bb1533-d9f6-4bd8-b20f-fe4d1f8ead49",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "when mhvSecureMessagingRemoveLandingPage enabled:\n\t my-health/secure-messages/inbox",
                  "fullTitle": "<MhvSecondaryNav /> Secure Messages href when mhvSecureMessagingRemoveLandingPage enabled:\n\t my-health/secure-messages/inbox",
                  "timedOut": false,
                  "duration": 48,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var initialState = stateFn({\n  loading: false,\n  mhvSecureMessagingRemoveLandingPage: true\n});\nvar _setup6 = setup({\n    initialState: initialState\n  }),\n  getByRole = _setup6.getByRole;\nvar mrLink = getByRole('link', {\n  name: /^Messages/\n});\n(0, _chai.expect)(mrLink.href).to.match(/my-health\\/secure-messages\\/inbox$/);",
                  "err": {},
                  "uuid": "70bfe49f-68f3-4143-849f-b0b52542808d",
                  "parentUUID": "67bb1533-d9f6-4bd8-b20f-fe4d1f8ead49",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "fe2efd78-ae6b-42e9-828f-429e47f7f8ac",
                "70bfe49f-68f3-4143-849f-b0b52542808d"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 103,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "d223c123-2bde-46fb-b4b7-989ef0de6793",
              "title": "Medications href",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/platform/mhv/secondary-nav/tests/MhvSecondaryNav.unit.spec.jsx",
              "file": "/src/platform/mhv/secondary-nav/tests/MhvSecondaryNav.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "when no features set:\n\t /my-health/medications/about",
                  "fullTitle": "<MhvSecondaryNav /> Medications href when no features set:\n\t /my-health/medications/about",
                  "timedOut": false,
                  "duration": 49,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var initialState = stateFn({\n  loading: false\n});\nvar _setup7 = setup({\n    initialState: initialState\n  }),\n  getByRole = _setup7.getByRole;\nvar mrLink = getByRole('link', {\n  name: /^Medications/\n});\n(0, _chai.expect)(mrLink.href).to.match(/my-health\\/medications\\/about$/);",
                  "err": {},
                  "uuid": "1815f0e9-fdaa-4960-8684-4a2f5a677965",
                  "parentUUID": "d223c123-2bde-46fb-b4b7-989ef0de6793",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "when mhvMedicationsRemoveLandingPage enabled:\n\t my-health/medications",
                  "fullTitle": "<MhvSecondaryNav /> Medications href when mhvMedicationsRemoveLandingPage enabled:\n\t my-health/medications",
                  "timedOut": false,
                  "duration": 48,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var initialState = stateFn({\n  loading: false,\n  mhvMedicationsRemoveLandingPage: true\n});\nvar _setup8 = setup({\n    initialState: initialState\n  }),\n  getByRole = _setup8.getByRole;\nvar mrLink = getByRole('link', {\n  name: /^Medications/\n});\n(0, _chai.expect)(mrLink.href).to.match(/my-health\\/medications$/);",
                  "err": {},
                  "uuid": "4828498e-860f-47fb-8f8d-49343b2b45fe",
                  "parentUUID": "d223c123-2bde-46fb-b4b7-989ef0de6793",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "1815f0e9-fdaa-4960-8684-4a2f5a677965",
                "4828498e-860f-47fb-8f8d-49343b2b45fe"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 97,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            }
          ],
          "passes": [
            "5763e77e-89dd-4f4d-a313-0d73202f9ba6",
            "19fd874e-eb15-4dcc-97b6-c3816819ffca",
            "1f792b72-e002-414c-ba5e-95f6ba112437",
            "5dd864f5-7cd4-4e12-a3ca-602e0545c19e"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 120,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "06711bd7-192a-4a84-bfdf-46db23be7d4a",
          "title": "MHV Secondary Navigation Item Component",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/platform/mhv/secondary-nav/tests/MhvSecondaryNavItem.unit.spec.jsx",
          "file": "/src/platform/mhv/secondary-nav/tests/MhvSecondaryNavItem.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "5a2432d9-af09-473b-a097-db00bb697650",
              "title": "adds a data-dd-action-name",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/platform/mhv/secondary-nav/tests/MhvSecondaryNavItem.unit.spec.jsx",
              "file": "/src/platform/mhv/secondary-nav/tests/MhvSecondaryNavItem.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "when provided",
                  "fullTitle": "MHV Secondary Navigation Item Component adds a data-dd-action-name when provided",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var title = 'a title';\nvar actionName = 'an action name';\nvar _render = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_MhvSecondaryNavItem.default, {\n    actionName: actionName,\n    title: title,\n    icon: \"home\",\n    href: \"/my-health\"\n  })),\n  getByRole = _render.getByRole;\nvar result = getByRole('link');\n(0, _chai.expect)(result.getAttribute('data-dd-action-name')).to.equal(actionName);",
                  "err": {},
                  "uuid": "9955a3b6-33f7-4218-bd5c-c8a648ee4188",
                  "parentUUID": "5a2432d9-af09-473b-a097-db00bb697650",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "9955a3b6-33f7-4218-bd5c-c8a648ee4188"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 3,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "1f6cbc63-69e2-469e-bff6-f3ae0397c23e",
              "title": "handle abbreviations",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/platform/mhv/secondary-nav/tests/MhvSecondaryNavItem.unit.spec.jsx",
              "file": "/src/platform/mhv/secondary-nav/tests/MhvSecondaryNavItem.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "when provided without arial label",
                  "fullTitle": "MHV Secondary Navigation Item Component handle abbreviations when provided without arial label",
                  "timedOut": false,
                  "duration": 4,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var title = 'a title';\nvar abbr = 'an abbr';\nvar _render2 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_MhvSecondaryNavItem.default, {\n    title: title,\n    abbreviation: abbr,\n    icon: \"home\",\n    href: \"/my-health\"\n  })),\n  getAllByText = _render2.getAllByText,\n  getByRole = _render2.getByRole;\n(0, _chai.expect)(getAllByText(title).length).to.eql(1);\n(0, _chai.expect)(getAllByText(abbr).length).to.eql(1);\n(0, _chai.expect)(getByRole('link').getAttribute('aria-label')).to.be.null;",
                  "err": {},
                  "uuid": "b9745ebc-3262-4da8-b75a-fb97ad5bf436",
                  "parentUUID": "1f6cbc63-69e2-469e-bff6-f3ae0397c23e",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "when provided with aria label",
                  "fullTitle": "MHV Secondary Navigation Item Component handle abbreviations when provided with aria label",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var title = 'a title';\nvar abbr = 'an abbr';\nvar ariaLabel = 'a label';\nvar _render3 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_MhvSecondaryNavItem.default, {\n    title: title,\n    abbreviation: abbr,\n    ariaLabel: ariaLabel,\n    icon: \"home\",\n    href: \"/my-health\"\n  })),\n  getAllByText = _render3.getAllByText,\n  getByLabelText = _render3.getByLabelText;\n(0, _chai.expect)(getAllByText(title).length).to.eql(1);\n(0, _chai.expect)(getAllByText(abbr).length).to.eql(1);\n(0, _chai.expect)(getByLabelText(ariaLabel)).to.exist;",
                  "err": {},
                  "uuid": "411a8966-7e1c-4e6e-97ed-fc7b5a856447",
                  "parentUUID": "1f6cbc63-69e2-469e-bff6-f3ae0397c23e",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "when not provided",
                  "fullTitle": "MHV Secondary Navigation Item Component handle abbreviations when not provided",
                  "timedOut": false,
                  "duration": 4,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var title = 'a title';\nvar ariaLabel = 'a label';\nvar _render4 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_MhvSecondaryNavItem.default, {\n    title: title,\n    icon: \"home\",\n    href: \"/my-health\",\n    ariaLabel: ariaLabel\n  })),\n  getAllByText = _render4.getAllByText,\n  getByRole = _render4.getByRole;\n// The title and abbreviation are the same\n(0, _chai.expect)(getAllByText(title).length).to.eql(2);\n(0, _chai.expect)(getByRole('link').getAttribute('aria-label')).to.be.null;",
                  "err": {},
                  "uuid": "19dc320e-818c-4ec4-b6a2-10df680d04e3",
                  "parentUUID": "1f6cbc63-69e2-469e-bff6-f3ae0397c23e",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "b9745ebc-3262-4da8-b75a-fb97ad5bf436",
                "411a8966-7e1c-4e6e-97ed-fc7b5a856447",
                "19dc320e-818c-4ec4-b6a2-10df680d04e3"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 11,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "72110aaa-3371-4928-aaa8-3b66a20dc3c6",
              "title": "handle headers",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/platform/mhv/secondary-nav/tests/MhvSecondaryNavItem.unit.spec.jsx",
              "file": "/src/platform/mhv/secondary-nav/tests/MhvSecondaryNavItem.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "set an item to be a header",
                  "fullTitle": "MHV Secondary Navigation Item Component handle headers set an item to be a header",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var _render5 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_MhvSecondaryNavItem.default, {\n    title: \"a title\",\n    icon: \"home\",\n    href: \"/my-health\",\n    isHeader: true\n  })),\n  getByTestId = _render5.getByTestId;\nvar item = getByTestId('mhv-sec-nav-item');\n(0, _chai.expect)(item.className).to.include('header');",
                  "err": {},
                  "uuid": "3a9d7084-c505-46b3-b47c-e4f5b5968ac9",
                  "parentUUID": "72110aaa-3371-4928-aaa8-3b66a20dc3c6",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "set an item to not be a header",
                  "fullTitle": "MHV Secondary Navigation Item Component handle headers set an item to not be a header",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var _render6 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_MhvSecondaryNavItem.default, {\n    title: \"a title\",\n    icon: \"home\",\n    href: \"/my-health\"\n  })),\n  getByTestId = _render6.getByTestId;\nvar item = getByTestId('mhv-sec-nav-item');\n(0, _chai.expect)(item.className).to.not.include('header');",
                  "err": {},
                  "uuid": "99eb35d5-17b5-4f01-bdf0-9e25c1ade3b2",
                  "parentUUID": "72110aaa-3371-4928-aaa8-3b66a20dc3c6",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "3a9d7084-c505-46b3-b47c-e4f5b5968ac9",
                "99eb35d5-17b5-4f01-bdf0-9e25c1ade3b2"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 4,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "1b9cb9fb-eab3-4e0c-905e-631cff069f1e",
              "title": "set item to active",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/platform/mhv/secondary-nav/tests/MhvSecondaryNavItem.unit.spec.jsx",
              "file": "/src/platform/mhv/secondary-nav/tests/MhvSecondaryNavItem.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "when not set to active",
                  "fullTitle": "MHV Secondary Navigation Item Component set item to active when not set to active",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var _render7 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_MhvSecondaryNavItem.default, {\n    title: \"a title\",\n    icon: \"home\",\n    href: \"/my-health\"\n  })),\n  getByTestId = _render7.getByTestId;\nvar item = getByTestId('mhv-sec-nav-item');\n(0, _chai.expect)(item.className).to.not.include('active');",
                  "err": {},
                  "uuid": "e60663d4-5c3a-4e56-b131-be4fd608d464",
                  "parentUUID": "1b9cb9fb-eab3-4e0c-905e-631cff069f1e",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "when set to active",
                  "fullTitle": "MHV Secondary Navigation Item Component set item to active when set to active",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var _render8 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_MhvSecondaryNavItem.default, {\n    title: \"a title\",\n    icon: \"home\",\n    href: \"/my-health\",\n    isActive: true\n  })),\n  getByTestId = _render8.getByTestId;\nvar item = getByTestId('mhv-sec-nav-item');\n(0, _chai.expect)(item.className).to.include('active');",
                  "err": {},
                  "uuid": "50edd6ea-e4f7-4158-90c0-f9b7eca05854",
                  "parentUUID": "1b9cb9fb-eab3-4e0c-905e-631cff069f1e",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "e60663d4-5c3a-4e56-b131-be4fd608d464",
                "50edd6ea-e4f7-4158-90c0-f9b7eca05854"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 5,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "abe3c307-592f-4a90-a90b-150830fbcf55",
              "title": "reports custom events to GA",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/platform/mhv/secondary-nav/tests/MhvSecondaryNavItem.unit.spec.jsx",
              "file": "/src/platform/mhv/secondary-nav/tests/MhvSecondaryNavItem.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "when a link is clicked",
                  "fullTitle": "MHV Secondary Navigation Item Component reports custom events to GA when a link is clicked",
                  "timedOut": false,
                  "duration": 16,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
                  "err": {},
                  "uuid": "e9223d39-f45a-4d32-b3e6-39c4996c01a7",
                  "parentUUID": "abe3c307-592f-4a90-a90b-150830fbcf55",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "e9223d39-f45a-4d32-b3e6-39c4996c01a7"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 16,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "9b77ee51-ba91-4998-b228-1644613a5832",
          "title": "MHV Secondary Navigation Menu Component",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/platform/mhv/secondary-nav/tests/MhvSecondaryNavMenu.unit.spec.jsx",
          "file": "/src/platform/mhv/secondary-nav/tests/MhvSecondaryNavMenu.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "3301d6c3-ccfd-43e6-8a03-1b8d43e93bb5",
              "title": "set active item",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/platform/mhv/secondary-nav/tests/MhvSecondaryNavMenu.unit.spec.jsx",
              "file": "/src/platform/mhv/secondary-nav/tests/MhvSecondaryNavMenu.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "based on href",
                  "fullTitle": "MHV Secondary Navigation Menu Component set active item based on href",
                  "timedOut": false,
                  "duration": 26,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "testSecNavItems.forEach(function (item, itemIndex) {\n  setWindowUrl(item.href);\n  var _render2 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_MhvSecondaryNavMenu.default, {\n      items: testSecNavItems\n    })),\n    getAllByTestId = _render2.getAllByTestId;\n  var links = getAllByTestId('mhv-sec-nav-item');\n  links.forEach(function (link, linkIndex) {\n    // This tests that the selected item is active and all others are not.\n    if (itemIndex === linkIndex) (0, _chai.expect)(link.className).to.include(activeClassString);else (0, _chai.expect)(link.className).to.not.include(activeClassString);\n  });\n  (0, _react2.cleanup)(); // must be done after the render\n});",
                  "err": {},
                  "uuid": "19ef8a92-2542-451a-96d1-5ac1d065e32f",
                  "parentUUID": "3301d6c3-ccfd-43e6-8a03-1b8d43e93bb5",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "matches href with trailing slash in href",
                  "fullTitle": "MHV Secondary Navigation Menu Component set active item matches href with trailing slash in href",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "medNavItem.href = '/my-health/medications/';\nsetWindowUrl('/my-health/medications');\n(0, _chai.expect)(getOneLink(medNavItem).className).to.include(activeClassString);",
                  "err": {},
                  "uuid": "0e9aa29c-b5ef-4d43-949d-f3b98caf615f",
                  "parentUUID": "3301d6c3-ccfd-43e6-8a03-1b8d43e93bb5",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "matches href with trailing slash in URL",
                  "fullTitle": "MHV Secondary Navigation Menu Component set active item matches href with trailing slash in URL",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "setWindowUrl('/my-health/medications/');\n(0, _chai.expect)(getOneLink(medNavItem).className).to.include(activeClassString);",
                  "err": {},
                  "uuid": "cad33b4a-d584-4cb3-93ad-2338c4e7282f",
                  "parentUUID": "3301d6c3-ccfd-43e6-8a03-1b8d43e93bb5",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "matches app root URL",
                  "fullTitle": "MHV Secondary Navigation Menu Component set active item matches app root URL",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "setWindowUrl('/my-health/medications/some-page');\n(0, _chai.expect)(getOneLink(medNavItem).className).to.include(activeClassString);",
                  "err": {},
                  "uuid": "3ac3756a-27d5-4e30-9c59-55b3f9625d9f",
                  "parentUUID": "3301d6c3-ccfd-43e6-8a03-1b8d43e93bb5",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "does not match app root URL",
                  "fullTitle": "MHV Secondary Navigation Menu Component set active item does not match app root URL",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "setWindowUrl('/my-health/appointments/some-page');\n(0, _chai.expect)(getOneLink(medNavItem).className).to.not.include(activeClassString);",
                  "err": {},
                  "uuid": "df24a25f-2de6-445d-9ad0-21fe1bb27ce5",
                  "parentUUID": "3301d6c3-ccfd-43e6-8a03-1b8d43e93bb5",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "matches app root URL with trailing slash in URL",
                  "fullTitle": "MHV Secondary Navigation Menu Component set active item matches app root URL with trailing slash in URL",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "setWindowUrl('/my-health/medications/');\n(0, _chai.expect)(getOneLink(medNavItem).className).to.include(activeClassString);",
                  "err": {},
                  "uuid": "c6f54a19-79ad-44ca-9c99-00a8101e38d4",
                  "parentUUID": "3301d6c3-ccfd-43e6-8a03-1b8d43e93bb5",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "matches app root URL with trailing slash in app root URL",
                  "fullTitle": "MHV Secondary Navigation Menu Component set active item matches app root URL with trailing slash in app root URL",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "medNavItem.appRootUrl = '/my-health/medications/';\nsetWindowUrl('/my-health/medications');\n(0, _chai.expect)(getOneLink(medNavItem).className).to.include(activeClassString);",
                  "err": {},
                  "uuid": "80b3b95f-49dd-41bb-8040-ff217ddf8bb0",
                  "parentUUID": "3301d6c3-ccfd-43e6-8a03-1b8d43e93bb5",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "19ef8a92-2542-451a-96d1-5ac1d065e32f",
                "0e9aa29c-b5ef-4d43-949d-f3b98caf615f",
                "cad33b4a-d584-4cb3-93ad-2338c4e7282f",
                "3ac3756a-27d5-4e30-9c59-55b3f9625d9f",
                "df24a25f-2de6-445d-9ad0-21fe1bb27ce5",
                "c6f54a19-79ad-44ca-9c99-00a8101e38d4",
                "80b3b95f-49dd-41bb-8040-ff217ddf8bb0"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 34,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "47816408-9ce8-4153-a8f5-1126b32dce41",
              "title": "renders",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/platform/mhv/secondary-nav/tests/MhvSecondaryNavMenu.unit.spec.jsx",
              "file": "/src/platform/mhv/secondary-nav/tests/MhvSecondaryNavMenu.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "when window location pathname is not set",
                  "fullTitle": "MHV Secondary Navigation Menu Component renders when window location pathname is not set",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "delete window.location;\n(0, _chai.expect)(getOneLink(medNavItem)).to.exist;",
                  "err": {},
                  "uuid": "c605a9d1-0f12-4f7c-afc9-04f56dcae716",
                  "parentUUID": "47816408-9ce8-4153-a8f5-1126b32dce41",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "c605a9d1-0f12-4f7c-afc9-04f56dcae716"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "e68f1707-10f3-400d-afbb-9975f9d18602",
          "title": "MhvServiceRequiredGuard component",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/platform/mhv/tests/components/MhvServiceRequiredGuard.unit.spec.jsx",
          "file": "/src/platform/mhv/tests/components/MhvServiceRequiredGuard.unit.spec.jsx",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"MhvServiceRequiredGuard component\"",
              "fullTitle": "MhvServiceRequiredGuard component \"before each\" hook in \"MhvServiceRequiredGuard component\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "oldLocation = global.window.location;\ndelete global.window.location;\nglobal.window.location = {\n  replace: _sinon.default.spy()\n};",
              "err": {},
              "uuid": "ebce56f9-3bf5-4604-9ae0-8d7dd9938aae",
              "parentUUID": "e68f1707-10f3-400d-afbb-9975f9d18602",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after each\" hook in \"MhvServiceRequiredGuard component\"",
              "fullTitle": "MhvServiceRequiredGuard component \"after each\" hook in \"MhvServiceRequiredGuard component\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "global.window.location = oldLocation;",
              "err": {},
              "uuid": "ae78cb7c-739f-4a23-9ac7-74025be07bc6",
              "parentUUID": "e68f1707-10f3-400d-afbb-9975f9d18602",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "renders without errors",
              "fullTitle": "MhvServiceRequiredGuard component renders without errors",
              "timedOut": false,
              "duration": 5,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var screen = setup(undefined, undefined, '/');\n(0, _chai.expect)(screen);",
              "err": {},
              "uuid": "bb036af9-9ed8-4994-9fa3-7efde8bdb6da",
              "parentUUID": "e68f1707-10f3-400d-afbb-9975f9d18602",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "redirects to /my-health when user is not verified",
              "fullTitle": "MhvServiceRequiredGuard component redirects to /my-health when user is not verified",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
              "err": {},
              "uuid": "33972258-c32a-4d96-b054-b65c2523b956",
              "parentUUID": "e68f1707-10f3-400d-afbb-9975f9d18602",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "redirects to /my-health when user has no services",
              "fullTitle": "MhvServiceRequiredGuard component redirects to /my-health when user has no services",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
              "err": {},
              "uuid": "4c0b9bbe-125c-4e9d-a6ac-d350a4282213",
              "parentUUID": "e68f1707-10f3-400d-afbb-9975f9d18602",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "bb036af9-9ed8-4994-9fa3-7efde8bdb6da",
            "33972258-c32a-4d96-b054-b65c2523b956",
            "4c0b9bbe-125c-4e9d-a6ac-d350a4282213"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 9,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "428ec47a-2a7d-474c-874a-3ce5b7444565",
          "title": "usePrintTitle",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/platform/mhv/tests/hooks-usePrintTitle.unit.spec.jsx",
          "file": "/src/platform/mhv/tests/hooks-usePrintTitle.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should register and unregister event listeners on mount and unmount",
              "fullTitle": "usePrintTitle should register and unregister event listeners on mount and unmount",
              "timedOut": false,
              "duration": 0,
              "state": "pending",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": true,
              "context": null,
              "code": "",
              "err": {},
              "uuid": "b64f7e2c-8cf5-49c1-9c7b-7310ba9d298b",
              "parentUUID": "428ec47a-2a7d-474c-874a-3ce5b7444565",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [],
          "pending": [
            "b64f7e2c-8cf5-49c1-9c7b-7310ba9d298b"
          ],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "db375b7c-c8d4-4140-8193-176b27767b56",
          "title": "useMyHealthAccessGuard",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/platform/mhv/tests/hooks/useMyHealthAccessGuard.unit.spec.jsx",
          "file": "/src/platform/mhv/tests/hooks/useMyHealthAccessGuard.unit.spec.jsx",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"useMyHealthAccessGuard\"",
              "fullTitle": "useMyHealthAccessGuard \"before each\" hook in \"useMyHealthAccessGuard\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "originalLocation = window.location;\ndelete window.location;\nwindow.location = {\n  replace: _sinon.default.spy()\n};",
              "err": {},
              "uuid": "63d45960-c5b1-400d-b2d6-442e269355e8",
              "parentUUID": "db375b7c-c8d4-4140-8193-176b27767b56",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after each\" hook in \"useMyHealthAccessGuard\"",
              "fullTitle": "useMyHealthAccessGuard \"after each\" hook in \"useMyHealthAccessGuard\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "window.location = originalLocation;",
              "err": {},
              "uuid": "6efb881d-393f-461b-a8a4-2d5e4887477d",
              "parentUUID": "db375b7c-c8d4-4140-8193-176b27767b56",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [],
          "suites": [
            {
              "uuid": "63d43ba2-7335-4e32-9ee9-7ea5288eae9f",
              "title": "with valid MHV account",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/platform/mhv/tests/hooks/useMyHealthAccessGuard.unit.spec.jsx",
              "file": "/src/platform/mhv/tests/hooks/useMyHealthAccessGuard.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "renders the component",
                  "fullTitle": "useMyHealthAccessGuard with valid MHV account renders the component",
                  "timedOut": false,
                  "duration": 5,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var _setup = setup(),\n  getByRole = _setup.getByRole;\ngetByRole('heading', {\n  name: 'Health Tool'\n});",
                  "err": {},
                  "uuid": "c6ff5b73-31fa-413b-8728-810ab9f722a1",
                  "parentUUID": "63d43ba2-7335-4e32-9ee9-7ea5288eae9f",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "c6ff5b73-31fa-413b-8728-810ab9f722a1"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 5,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "f76b5b30-3346-4547-bdfa-45da0b557348",
              "title": "with multiple MHV accounts",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/platform/mhv/tests/hooks/useMyHealthAccessGuard.unit.spec.jsx",
              "file": "/src/platform/mhv/tests/hooks/useMyHealthAccessGuard.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "renders the component",
                  "fullTitle": "useMyHealthAccessGuard with multiple MHV accounts renders the component",
                  "timedOut": false,
                  "duration": 4,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var initialState = stateFn({\n  mhvAccountState: 'MULTIPLE'\n});\nvar _setup2 = setup(initialState),\n  getByRole = _setup2.getByRole;\ngetByRole('heading', {\n  name: 'Health Tool'\n});",
                  "err": {},
                  "uuid": "a40c96ba-035a-436e-8e13-623b294d4316",
                  "parentUUID": "f76b5b30-3346-4547-bdfa-45da0b557348",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "a40c96ba-035a-436e-8e13-623b294d4316"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 4,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "a4573d4a-fd3f-4aa3-b2a4-c83b48dd1071",
              "title": "without a valid MHV account",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/platform/mhv/tests/hooks/useMyHealthAccessGuard.unit.spec.jsx",
              "file": "/src/platform/mhv/tests/hooks/useMyHealthAccessGuard.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "redirects to the /my-health path",
                  "fullTitle": "useMyHealthAccessGuard without a valid MHV account redirects to the /my-health path",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
                  "err": {},
                  "uuid": "6cf5030c-57b4-4302-947e-aea81a0d8968",
                  "parentUUID": "a4573d4a-fd3f-4aa3-b2a4-c83b48dd1071",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "6cf5030c-57b4-4302-947e-aea81a0d8968"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 3,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "7bb8c54b-469f-4550-83d8-58a28a782d8c",
          "title": "formatName",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/platform/mhv/tests/util-helpers.unit.spec.jsx",
          "file": "/src/platform/mhv/tests/util-helpers.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should format the user's name with all fields",
              "fullTitle": "formatName should format the user's name with all fields",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var userProfile = {\n  first: first,\n  last: last,\n  middle: middle,\n  suffix: suffix\n};\nvar name = (0, _helpers.formatName)(userProfile);\n(0, _chai.expect)(name).to.eq('Jingleheimer, John Jacob, Jr.');",
              "err": {},
              "uuid": "886019a3-891e-4cee-816d-430c4514ae67",
              "parentUUID": "7bb8c54b-469f-4550-83d8-58a28a782d8c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should format the user's name with first and last",
              "fullTitle": "formatName should format the user's name with first and last",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var userProfile = {\n  first: first,\n  last: last\n};\nvar name = (0, _helpers.formatName)(userProfile);\n(0, _chai.expect)(name).to.eq('Jingleheimer, John');",
              "err": {},
              "uuid": "234fd303-50ca-4d66-bc0e-291ddfb48fa1",
              "parentUUID": "7bb8c54b-469f-4550-83d8-58a28a782d8c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should format the user's name with first, middle, and last",
              "fullTitle": "formatName should format the user's name with first, middle, and last",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var userProfile = {\n  first: first,\n  last: last,\n  middle: middle\n};\nvar name = (0, _helpers.formatName)(userProfile);\n(0, _chai.expect)(name).to.eq('Jingleheimer, John Jacob');",
              "err": {},
              "uuid": "c0fa8602-4e6a-4751-99ed-0f3afc538b2e",
              "parentUUID": "7bb8c54b-469f-4550-83d8-58a28a782d8c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should format the user's name with first, last, and suffix",
              "fullTitle": "formatName should format the user's name with first, last, and suffix",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var userProfile = {\n  first: first,\n  last: last,\n  suffix: suffix\n};\nvar name = (0, _helpers.formatName)(userProfile);\n(0, _chai.expect)(name).to.eq('Jingleheimer, John, Jr.');",
              "err": {},
              "uuid": "ef7fa149-86ae-490a-9da7-db35380660d5",
              "parentUUID": "7bb8c54b-469f-4550-83d8-58a28a782d8c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "886019a3-891e-4cee-816d-430c4514ae67",
            "234fd303-50ca-4d66-bc0e-291ddfb48fa1",
            "c0fa8602-4e6a-4751-99ed-0f3afc538b2e",
            "ef7fa149-86ae-490a-9da7-db35380660d5"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "ed62578b-e089-49af-ac98-bd8b2f2597f4",
          "title": "generatePdfScaffold",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/platform/mhv/tests/util-helpers.unit.spec.jsx",
          "file": "/src/platform/mhv/tests/util-helpers.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "generate a pdf scaffold object",
              "fullTitle": "generatePdfScaffold generate a pdf scaffold object",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var scaffold = (0, _helpers.generatePdfScaffold)(user, title, subject, preface);\n(0, _chai.expect)(scaffold.headerLeft).to.eq('Jingleheimer, John Jacob, Jr.');\n(0, _chai.expect)(scaffold.headerRight).to.eq('Date of birth: June 5, 1979');\n(0, _chai.expect)(scaffold.headerBanner[0].text).to.eq('If you’re ever in crisis and need to talk with someone right away, call the Veterans Crisis Line at ');\n(0, _chai.expect)(scaffold.footerLeft).to.include('Report generated by My HealtheVet on VA.gov on');\n(0, _chai.expect)(scaffold.footerRight).to.eq('Page %PAGE_NUMBER% of %TOTAL_PAGES%');\n(0, _chai.expect)(scaffold.title).to.include('Lab and test results: Microbiology on August');\n(0, _chai.expect)(scaffold.subject).to.eq('VA Medical Record');\n(0, _chai.expect)(scaffold.preface).to.eq('If you have any questions about these results, send a secure message to your care team.');",
              "err": {},
              "uuid": "107a1d8e-7a28-4a5f-8457-3e8670dc84cc",
              "parentUUID": "ed62578b-e089-49af-ac98-bd8b2f2597f4",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "107a1d8e-7a28-4a5f-8457-3e8670dc84cc"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "eddd3487-b49c-40e8-8c21-dfbae40221fe",
          "title": "trapFocus",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/platform/mhv/tests/util-ui.unit.spec.jsx",
          "file": "/src/platform/mhv/tests/util-ui.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should trap focus in a container",
              "fullTitle": "trapFocus should trap focus in a container",
              "timedOut": false,
              "duration": 10,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
              "err": {},
              "uuid": "ce9bb55f-ef06-402c-887b-acc988ecc348",
              "parentUUID": "eddd3487-b49c-40e8-8c21-dfbae40221fe",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "ce9bb55f-ef06-402c-887b-acc988ecc348"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 10,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 10000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.7.3"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "undefined_2025-03-03T223828707Z",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "min",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "id": "default",
        "consoleReporter": "min",
        "reportDir": "mocha/results",
        "reportFilename": "undefined_2025-03-03T223828707Z",
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}