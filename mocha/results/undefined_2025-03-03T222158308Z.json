{
  "stats": {
    "suites": 4,
    "tests": 14,
    "passes": 14,
    "pending": 0,
    "failures": 0,
    "start": "2025-03-03T22:21:58.406Z",
    "end": "2025-03-03T22:21:58.981Z",
    "duration": 575,
    "testsRegistered": 14,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "6a13d365-0b15-41f3-9dab-66742fd7565d",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [
        {
          "title": "\"before each\" hook: beforeEach in \"{root}\"",
          "fullTitle": "\"before each\" hook: beforeEach in \"{root}\"",
          "timedOut": false,
          "duration": 8,
          "state": null,
          "speed": null,
          "pass": false,
          "fail": false,
          "pending": false,
          "context": null,
          "code": "cov_5fzq6lsur().f[20]++;\ncov_5fzq6lsur().s[70]++;\nsetupJSDom();\ncov_5fzq6lsur().s[71]++;\nresetFetch();\ncov_5fzq6lsur().s[72]++;\ncleanupStorage();\ncov_5fzq6lsur().s[73]++;\nif (isStressTest == 'false') {\n  cov_5fzq6lsur().b[12][0]++;\n  cov_5fzq6lsur().s[74]++;\n  checkAllowList(this);\n} else {\n  cov_5fzq6lsur().b[12][1]++;\n}\ncov_5fzq6lsur().s[75]++;\nif ((cov_5fzq6lsur().b[14][0]++, process.env.CI) || (cov_5fzq6lsur().b[14][1]++, ['trace', 'debug'].includes(process.env.LOG_LEVEL))) {\n  cov_5fzq6lsur().b[13][0]++;\n  cov_5fzq6lsur().s[76]++;\n  console.log('running: ', this.currentTest.file.slice(this.currentTest.file.indexOf('src')));\n} else {\n  cov_5fzq6lsur().b[13][1]++;\n}",
          "err": {},
          "uuid": "e4ca8e0c-9795-4bde-9f90-64eff5c1d745",
          "parentUUID": "6a13d365-0b15-41f3-9dab-66742fd7565d",
          "isHook": true,
          "skipped": false
        }
      ],
      "afterHooks": [
        {
          "title": "\"after each\" hook: afterEach in \"{root}\"",
          "fullTitle": "\"after each\" hook: afterEach in \"{root}\"",
          "timedOut": false,
          "duration": 0,
          "state": null,
          "speed": null,
          "pass": false,
          "fail": false,
          "pending": false,
          "context": null,
          "code": "cov_5fzq6lsur().f[21]++;\ncov_5fzq6lsur().s[77]++;\ncleanupStorage();\ncov_5fzq6lsur().s[78]++;\nflushPromises();",
          "err": {},
          "uuid": "50b25df4-350f-4e1a-968f-acd084c6ef75",
          "parentUUID": "6a13d365-0b15-41f3-9dab-66742fd7565d",
          "isHook": true,
          "skipped": false
        },
        {
          "title": "\"after each\" hook in \"{root}\"",
          "fullTitle": "\"after each\" hook in \"{root}\"",
          "timedOut": false,
          "duration": 0,
          "state": null,
          "speed": null,
          "pass": false,
          "fail": false,
          "pending": false,
          "context": null,
          "code": "(0, _pure.cleanup)();",
          "err": {},
          "uuid": "1c9ceb0c-d4d6-436d-8097-795807427709",
          "parentUUID": "6a13d365-0b15-41f3-9dab-66742fd7565d",
          "isHook": true,
          "skipped": false
        }
      ],
      "tests": [],
      "suites": [
        {
          "uuid": "f1bdabf2-1c70-4c4f-860e-ec56560e8a67",
          "title": "AccountSwitch",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/sign-in-changes/tests/AccountSwitch.unit.spec.jsx",
          "file": "/src/applications/sign-in-changes/tests/AccountSwitch.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "renders Login.gov when there is a logingov user email",
              "fullTitle": "AccountSwitch renders Login.gov when there is a logingov user email",
              "timedOut": false,
              "duration": 42,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _render = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_AccountSwitch.default, {\n    userEmails: {\n      logingov: 'test@example.com'\n    }\n  }))),\n  getByText = _render.getByText,\n  container = _render.container,\n  getByTestId = _render.getByTestId;\nvar loginGovButton = (0, _ui.$)('.logingov-verify-buttons', container);\n(0, _chai.expect)(loginGovButton).to.exist;\nvar heading = getByText(/Start using your/i);\n(0, _chai.expect)(heading).to.exist;\nvar maskedEmail = getByTestId('logingovemail');\n(0, _chai.expect)(maskedEmail).to.exist;",
              "err": {},
              "uuid": "0a4cf0ca-dd14-4f63-a632-3eb323ded27a",
              "parentUUID": "f1bdabf2-1c70-4c4f-860e-ec56560e8a67",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "renders ID.me when there is an idme user email",
              "fullTitle": "AccountSwitch renders ID.me when there is an idme user email",
              "timedOut": false,
              "duration": 9,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _render2 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_AccountSwitch.default, {\n    userEmails: {\n      idme: 'test@example.com'\n    }\n  }))),\n  getByText = _render2.getByText,\n  container = _render2.container,\n  getByTestId = _render2.getByTestId;\nvar idmeButton = (0, _ui.$)('.idme-verify-buttons', container);\n(0, _chai.expect)(idmeButton).to.exist;\nvar heading = getByText(/Start using your/i);\n(0, _chai.expect)(heading).to.exist;\nvar maskedEmail = getByTestId('idmeemail');\n(0, _chai.expect)(maskedEmail).to.exist;",
              "err": {},
              "uuid": "dc262239-b7cf-4089-b012-bedc190b19d6",
              "parentUUID": "f1bdabf2-1c70-4c4f-860e-ec56560e8a67",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "renders both Login.gov and ID.me when both emails are provided",
              "fullTitle": "AccountSwitch renders both Login.gov and ID.me when both emails are provided",
              "timedOut": false,
              "duration": 37,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _render3 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_AccountSwitch.default, {\n    userEmails: {\n      logingov: 'logi@example.com',\n      idme: 'idme@example.com'\n    }\n  }))),\n  getAllByRole = _render3.getAllByRole,\n  getByText = _render3.getByText,\n  container = _render3.container,\n  getByTestId = _render3.getByTestId;\nvar buttons = getAllByRole('button');\n(0, _chai.expect)(buttons.length).to.eql(2);\nvar logingovButton = (0, _ui.$)('.logingov-verify-buttons', container);\n(0, _chai.expect)(logingovButton).to.exist;\nvar idmeButton = (0, _ui.$)('.idme-verify-buttons', container);\n(0, _chai.expect)(idmeButton).to.exist;\nvar heading = getByText(/Start using your/i);\n(0, _chai.expect)(heading).to.exist;\nvar logingovMaskedEmail = getByTestId('logingovemail');\n(0, _chai.expect)(logingovMaskedEmail).to.exist;\nvar idmeMaskedEmail = getByTestId('idmeemail');\n(0, _chai.expect)(idmeMaskedEmail).to.exist;",
              "err": {},
              "uuid": "810db838-dd38-44f5-a19a-794e2720f315",
              "parentUUID": "f1bdabf2-1c70-4c4f-860e-ec56560e8a67",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "0a4cf0ca-dd14-4f63-a632-3eb323ded27a",
            "dc262239-b7cf-4089-b012-bedc190b19d6",
            "810db838-dd38-44f5-a19a-794e2720f315"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 88,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "d2a8726e-4ebc-4ca0-9ea1-71139401ca13",
          "title": "CreateAccount",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/sign-in-changes/tests/CreateAccount.unit.spec.jsx",
          "file": "/src/applications/sign-in-changes/tests/CreateAccount.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "renders the static content correctly",
              "fullTitle": "CreateAccount renders the static content correctly",
              "timedOut": false,
              "duration": 17,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var store = generateStore();\nvar screen = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n  store: store\n}, /*#__PURE__*/_react.default.createElement(_CreateAccount.default, null)));\n(0, _chai.expect)(screen.getByText(/Create a different account now/i)).to.exist;\n(0, _chai.expect)(screen.getByText(/Create an identity-verified/i)).to.exist;",
              "err": {},
              "uuid": "12f0998d-aa5b-4e28-afeb-e329bcd647d7",
              "parentUUID": "d2a8726e-4ebc-4ca0-9ea1-71139401ca13",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "renders two LoginButton components with correct csp prop",
              "fullTitle": "CreateAccount renders two LoginButton components with correct csp prop",
              "timedOut": false,
              "duration": 29,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var store = generateStore();\nvar screen = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n  store: store\n}, /*#__PURE__*/_react.default.createElement(_CreateAccount.default, null)));\nvar buttons = screen.getAllByRole('button');\n(0, _chai.expect)(buttons).to.have.lengthOf(2);",
              "err": {},
              "uuid": "73652bb7-ca7f-4085-9cea-34bc9ed5610d",
              "parentUUID": "d2a8726e-4ebc-4ca0-9ea1-71139401ca13",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "12f0998d-aa5b-4e28-afeb-e329bcd647d7",
            "73652bb7-ca7f-4085-9cea-34bc9ed5610d"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 46,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "64cb32d4-25a1-43ee-90a2-cac7d035646e",
          "title": "maskEmail",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/sign-in-changes/tests/helpers.unit.spec.jsx",
          "file": "/src/applications/sign-in-changes/tests/helpers.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "masks the email name after the second character with *",
              "fullTitle": "maskEmail masks the email name after the second character with *",
              "timedOut": false,
              "duration": 3,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var screen = (0, _react.render)((0, _helpers.maskEmail)('johndo@example.com', 'masked-email'));\nvar span = screen.getByTestId('masked-email');\n(0, _chai.expect)(span).to.have.text('joh***@example.com');\n(0, _chai.expect)(span).to.have.attribute('aria-label', 'Email address starting with joh at example.com');",
              "err": {},
              "uuid": "69fcc320-5540-45f5-b15c-e368b4997fd6",
              "parentUUID": "64cb32d4-25a1-43ee-90a2-cac7d035646e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "does not mask the name if it three characters",
              "fullTitle": "maskEmail does not mask the name if it three characters",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var screen = (0, _react.render)((0, _helpers.maskEmail)('abc@example.com', 'masked-email-1'));\nvar span = screen.getByTestId('masked-email-1');\n(0, _chai.expect)(span).to.have.text('abc@example.com');\n(0, _chai.expect)(span).to.have.attribute('aria-label', 'Email address starting with abc at example.com');",
              "err": {},
              "uuid": "977ad71e-9891-4467-bfca-1207a0d69595",
              "parentUUID": "64cb32d4-25a1-43ee-90a2-cac7d035646e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "does not mask the name if it has less than three characters",
              "fullTitle": "maskEmail does not mask the name if it has less than three characters",
              "timedOut": false,
              "duration": 3,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var screen = (0, _react.render)((0, _helpers.maskEmail)('a@example.com', 'masked-email-3'));\nvar span = screen.getByTestId('masked-email-3');\n(0, _chai.expect)(span).to.have.text('a@example.com');\n(0, _chai.expect)(span).to.have.attribute('aria-label', 'Email address starting with a at example.com');",
              "err": {},
              "uuid": "2e3f3723-7d43-416a-ac8a-014f53ae1b21",
              "parentUUID": "64cb32d4-25a1-43ee-90a2-cac7d035646e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "returns a span with an appropriate aria-label if email is an empty string",
              "fullTitle": "maskEmail returns a span with an appropriate aria-label if email is an empty string",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var screen = (0, _react.render)((0, _helpers.maskEmail)('', 'masked-email-empty'));\nvar span = screen.getByTestId('masked-email-empty');\n(0, _chai.expect)(span).to.have.text('No email provided');",
              "err": {},
              "uuid": "6f40f7db-48dd-4a7f-8fb5-8444e2b9bbcb",
              "parentUUID": "64cb32d4-25a1-43ee-90a2-cac7d035646e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "69fcc320-5540-45f5-b15c-e368b4997fd6",
            "977ad71e-9891-4467-bfca-1207a0d69595",
            "2e3f3723-7d43-416a-ac8a-014f53ae1b21",
            "6f40f7db-48dd-4a7f-8fb5-8444e2b9bbcb"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 10,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "bed8ebe5-14dc-42f7-9e7a-d8c6c8c194ae",
          "title": "InterstitialChanges",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/sign-in-changes/tests/InterstitialChanges.unit.spec.jsx",
          "file": "/src/applications/sign-in-changes/tests/InterstitialChanges.unit.spec.jsx",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"InterstitialChanges\"",
              "fullTitle": "InterstitialChanges \"before all\" hook in \"InterstitialChanges\"",
              "timedOut": false,
              "duration": 1,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "return server.listen();",
              "err": {},
              "uuid": "adad83ab-c628-4b96-9d2a-ba8a5349c75f",
              "parentUUID": "bed8ebe5-14dc-42f7-9e7a-d8c6c8c194ae",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"InterstitialChanges\"",
              "fullTitle": "InterstitialChanges \"after all\" hook in \"InterstitialChanges\"",
              "timedOut": false,
              "duration": 1,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "return server.close();",
              "err": {},
              "uuid": "f6a17e4c-faf0-49ce-bc45-02d237333698",
              "parentUUID": "bed8ebe5-14dc-42f7-9e7a-d8c6c8c194ae",
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"after each\" hook in \"InterstitialChanges\"",
              "fullTitle": "InterstitialChanges \"after each\" hook in \"InterstitialChanges\"",
              "timedOut": false,
              "duration": 1,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, _react2.cleanup)();\nglobal.window.location = oldLocation;\nserver.resetHandlers();",
              "err": {},
              "uuid": "1b369dca-ba28-48b6-97cf-f4816e2e70e5",
              "parentUUID": "bed8ebe5-14dc-42f7-9e7a-d8c6c8c194ae",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "renders the static content correctly",
              "fullTitle": "InterstitialChanges renders the static content correctly",
              "timedOut": false,
              "duration": 93,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
              "err": {},
              "uuid": "9b8cf6c2-9903-440d-9124-661597ac4fea",
              "parentUUID": "bed8ebe5-14dc-42f7-9e7a-d8c6c8c194ae",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "renders AccountSwitch when user has Login.gov account",
              "fullTitle": "InterstitialChanges renders AccountSwitch when user has Login.gov account",
              "timedOut": false,
              "duration": 18,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
              "err": {},
              "uuid": "c3bd6c2d-0a1f-43d1-9fe9-13c63d562ea3",
              "parentUUID": "bed8ebe5-14dc-42f7-9e7a-d8c6c8c194ae",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "renders AccountSwitch when user has ID.me account",
              "fullTitle": "InterstitialChanges renders AccountSwitch when user has ID.me account",
              "timedOut": false,
              "duration": 32,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
              "err": {},
              "uuid": "8be1f0b8-d571-4a13-a44b-b97af0aa884d",
              "parentUUID": "bed8ebe5-14dc-42f7-9e7a-d8c6c8c194ae",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "uses the correct returnUrl from sessionStorage",
              "fullTitle": "InterstitialChanges uses the correct returnUrl from sessionStorage",
              "timedOut": false,
              "duration": 49,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
              "err": {},
              "uuid": "e72fd577-4aeb-419d-9699-845e7c6bcc91",
              "parentUUID": "bed8ebe5-14dc-42f7-9e7a-d8c6c8c194ae",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "redirects user to homepage on errors",
              "fullTitle": "InterstitialChanges redirects user to homepage on errors",
              "timedOut": false,
              "duration": 18,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
              "err": {},
              "uuid": "7cae1b1c-f460-4031-975f-28bfc5d51e78",
              "parentUUID": "bed8ebe5-14dc-42f7-9e7a-d8c6c8c194ae",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "9b8cf6c2-9903-440d-9124-661597ac4fea",
            "c3bd6c2d-0a1f-43d1-9fe9-13c63d562ea3",
            "8be1f0b8-d571-4a13-a44b-b97af0aa884d",
            "e72fd577-4aeb-419d-9699-845e7c6bcc91",
            "7cae1b1c-f460-4031-975f-28bfc5d51e78"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 210,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 10000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.7.3"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "undefined_2025-03-03T222158308Z",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "min",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "id": "default",
        "consoleReporter": "min",
        "reportDir": "mocha/results",
        "reportFilename": "undefined_2025-03-03T222158308Z",
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}