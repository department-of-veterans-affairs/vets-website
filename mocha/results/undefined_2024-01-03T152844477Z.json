{
  "stats": {
    "suites": 148,
    "tests": 195,
    "passes": 194,
    "pending": 0,
    "failures": 1,
    "start": "2024-01-03T15:28:44.529Z",
    "end": "2024-01-03T15:28:47.465Z",
    "duration": 2936,
    "testsRegistered": 195,
    "passPercent": 99.48717948717949,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "f4900cb3-5493-4bf4-8d5f-22a72f02839f",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [
        {
          "title": "\"before each\" hook: beforeEach in \"{root}\"",
          "fullTitle": "\"before each\" hook: beforeEach in \"{root}\"",
          "timedOut": false,
          "duration": 3,
          "state": null,
          "speed": null,
          "pass": false,
          "fail": false,
          "pending": false,
          "context": null,
          "code": "setupJSDom();\nresetFetch();\ncleanupStorage();\nif (!isStressTest) {\n  checkAllowList(this);\n}",
          "err": {},
          "uuid": "3e3be4d7-33bf-443f-8a28-6cfefb1de4e7",
          "parentUUID": "f4900cb3-5493-4bf4-8d5f-22a72f02839f",
          "isHook": true,
          "skipped": false
        }
      ],
      "afterHooks": [
        {
          "title": "\"after each\" hook: afterEach in \"{root}\"",
          "fullTitle": "\"after each\" hook: afterEach in \"{root}\"",
          "timedOut": false,
          "duration": 0,
          "state": null,
          "speed": null,
          "pass": false,
          "fail": false,
          "pending": false,
          "context": null,
          "code": "cleanupStorage();",
          "err": {},
          "uuid": "f42e2ac5-adb1-4ea1-a0dd-6474ca640d70",
          "parentUUID": "f4900cb3-5493-4bf4-8d5f-22a72f02839f",
          "isHook": true,
          "skipped": false
        },
        {
          "title": "\"after each\" hook in \"{root}\"",
          "fullTitle": "\"after each\" hook in \"{root}\"",
          "timedOut": false,
          "duration": 0,
          "state": null,
          "speed": null,
          "pass": false,
          "fail": false,
          "pending": false,
          "context": null,
          "code": "(0, _pure.cleanup)();",
          "err": {},
          "uuid": "edcd937f-b203-4f7f-a5d3-88f8b316fe80",
          "parentUUID": "f4900cb3-5493-4bf4-8d5f-22a72f02839f",
          "isHook": true,
          "skipped": false
        }
      ],
      "tests": [],
      "suites": [
        {
          "uuid": "e179cd14-3aa8-43c2-acf5-c4296ce2e080",
          "title": "Pensions directDeposit",
          "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/config/directDeposit.unit.spec.jsx",
          "file": "/src/applications/pensions/tests/config/directDeposit.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should submit with valid data",
              "fullTitle": "Pensions directDeposit should submit with valid data",
              "timedOut": false,
              "duration": 47,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var onSubmit = _sinon.default.spy();\nvar form = _testUtils.default.renderIntoDocument( /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  schema: schema,\n  data: {},\n  onSubmit: onSubmit,\n  uiSchema: uiSchema\n}));\nvar formDOM = (0, _schemaformUtils.getFormDOM)(form);\nformDOM.fillData('#root_bankAccount_accountType_0', 'checking');\nformDOM.fillData('#root_bankAccount_accountNumber', '1234');\nformDOM.fillData('#root_bankAccount_routingNumber', '122105155');\nformDOM.submitForm(form);\n(0, _chai.expect)(formDOM.querySelectorAll('.usa-input-error').length).to.equal(0);\n(0, _chai.expect)(onSubmit.called).to.be.true;",
              "err": {},
              "uuid": "1fd3aed1-e7b6-492c-ad32-07aab8b0b27a",
              "parentUUID": "e179cd14-3aa8-43c2-acf5-c4296ce2e080",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should render",
              "fullTitle": "Pensions directDeposit should render",
              "timedOut": false,
              "duration": 8,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var form = _testUtils.default.renderIntoDocument( /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  schema: schema,\n  data: {},\n  uiSchema: uiSchema\n}));\nvar formDOM = (0, _schemaformUtils.getFormDOM)(form);\n(0, _chai.expect)(formDOM.querySelectorAll('input').length).to.equal(6);",
              "err": {},
              "uuid": "448baaed-c7c5-4663-a513-a362d1449966",
              "parentUUID": "e179cd14-3aa8-43c2-acf5-c4296ce2e080",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should require bank account fields",
              "fullTitle": "Pensions directDeposit should require bank account fields",
              "timedOut": false,
              "duration": 15,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var form = _testUtils.default.renderIntoDocument( /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  schema: schema,\n  data: {},\n  uiSchema: uiSchema\n}));\nvar formDOM = (0, _schemaformUtils.getFormDOM)(form);\n(0, _chai.expect)(formDOM.querySelectorAll('input').length).to.equal(6);\nformDOM.submitForm(form);\n(0, _chai.expect)(formDOM.querySelectorAll('.usa-input-error').length).to.equal(3);",
              "err": {},
              "uuid": "8126ccc6-2992-498c-8a59-8b85cd617597",
              "parentUUID": "e179cd14-3aa8-43c2-acf5-c4296ce2e080",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should show error on bad routing number",
              "fullTitle": "Pensions directDeposit should show error on bad routing number",
              "timedOut": false,
              "duration": 16,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var form = _testUtils.default.renderIntoDocument( /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  schema: schema,\n  data: {},\n  uiSchema: uiSchema\n}));\nvar formDOM = (0, _schemaformUtils.getFormDOM)(form);\nvar routingNumber = formDOM.querySelector('#root_bankAccount_routingNumber');\nformDOM.fillData('#root_bankAccount_routingNumber', '01234567');\n_testUtils.default.Simulate.blur(routingNumber);\n(0, _chai.expect)(formDOM.querySelector('.usa-input-error #root_bankAccount_routingNumber')).not.to.be.null;",
              "err": {},
              "uuid": "86b9a089-eaac-4312-b8de-7acaf816f448",
              "parentUUID": "e179cd14-3aa8-43c2-acf5-c4296ce2e080",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should render stop message",
              "fullTitle": "Pensions directDeposit should render stop message",
              "timedOut": false,
              "duration": 13,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var form = _testUtils.default.renderIntoDocument( /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  schema: schema,\n  data: {},\n  uiSchema: uiSchema\n}));\nvar formDOM = (0, _schemaformUtils.getFormDOM)(form);\nformDOM.setCheckbox('#root_view\\\\:noDirectDeposit', true);\n(0, _chai.expect)(formDOM.querySelector('.pension-dd-warning')).to.not.be.null;\n(0, _chai.expect)(formDOM.querySelectorAll('input').length).to.equal(1);",
              "err": {},
              "uuid": "2e0b136f-24fe-4233-b913-28d9864ab9ab",
              "parentUUID": "e179cd14-3aa8-43c2-acf5-c4296ce2e080",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "1fd3aed1-e7b6-492c-ad32-07aab8b0b27a",
            "448baaed-c7c5-4663-a513-a362d1449966",
            "8126ccc6-2992-498c-8a59-8b85cd617597",
            "86b9a089-eaac-4312-b8de-7acaf816f448",
            "2e0b136f-24fe-4233-b913-28d9864ab9ab"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 99,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "255212cd-e287-4465-b158-c732b5550a0e",
          "title": "pension special monthly pension page",
          "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/chapters/03-health-and-employment-information/specialMonthlyPension.unit.spec.jsx",
          "file": "/src/applications/pensions/tests/chapters/03-health-and-employment-information/specialMonthlyPension.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "be94b166-91a6-471a-9899-7203bfccf0bd",
              "title": "special monthly pension page",
              "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/chapters/03-health-and-employment-information/specialMonthlyPension.unit.spec.jsx",
              "file": "/src/applications/pensions/tests/chapters/03-health-and-employment-information/specialMonthlyPension.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should show the correct number of errors on submit for web components",
                  "fullTitle": "pension special monthly pension page special monthly pension page should show the correct number of errors on submit for web components",
                  "timedOut": false,
                  "duration": 48,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var _render4 = (0, _react2.render)( /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  definitions: formConfig.defaultDefinitions,\n  schema: schema,\n  uiSchema: uiSchema,\n  data: data,\n  formData: {}\n})),\n    container = _render4.container,\n    getByRole = _render4.getByRole;\ngetByRole('button', {\n  name: /submit/i\n}).click();\nvar nodes = Array.from(container.querySelectorAll(\"\".concat(expectedFieldTypesWebComponents, \", \").concat(wrapperWebComponents)));\nvar errors = nodes.filter(function (node) {\n  return node.error;\n});\n(0, _chai.expect)(errors).to.have.lengthOf(expectedNumberOfErrors);",
                  "err": {},
                  "uuid": "4bd435da-06d0-49ce-8ce5-6d919be671be",
                  "parentUUID": "be94b166-91a6-471a-9899-7203bfccf0bd",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "4bd435da-06d0-49ce-8ce5-6d919be671be"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 48,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "84c5b984-379e-437b-ae7b-e5faf6d87c36",
              "title": "special monthly pension page",
              "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/chapters/03-health-and-employment-information/specialMonthlyPension.unit.spec.jsx",
              "file": "/src/applications/pensions/tests/chapters/03-health-and-employment-information/specialMonthlyPension.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should have appropriate number of web components",
                  "fullTitle": "pension special monthly pension page special monthly pension page should have appropriate number of web components",
                  "timedOut": false,
                  "duration": 5,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var _render3 = (0, _react2.render)( /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  definitions: formConfig.defaultDefinitions,\n  schema: schema,\n  uiSchema: uiSchema,\n  data: data,\n  formData: {}\n})),\n    container = _render3.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypesWebComponents)).to.have.lengthOf(expectedNumberOfFields);",
                  "err": {},
                  "uuid": "f18f9fb1-8fcf-4225-8cb3-f089dee1f3ac",
                  "parentUUID": "84c5b984-379e-437b-ae7b-e5faf6d87c36",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "f18f9fb1-8fcf-4225-8cb3-f089dee1f3ac"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 5,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "b76adf0f-244c-4349-9a5b-ff304d93936a",
          "title": "pension nursing home page",
          "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/chapters/03-health-and-employment-information/nursingHome.unit.spec.jsx",
          "file": "/src/applications/pensions/tests/chapters/03-health-and-employment-information/nursingHome.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "1cc440ad-8ef3-4cfb-84e0-86ce694ebea1",
              "title": "nursing home information page",
              "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/chapters/03-health-and-employment-information/nursingHome.unit.spec.jsx",
              "file": "/src/applications/pensions/tests/chapters/03-health-and-employment-information/nursingHome.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should show the correct number of errors on submit for web components",
                  "fullTitle": "pension nursing home page nursing home information page should show the correct number of errors on submit for web components",
                  "timedOut": false,
                  "duration": 20,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var _render4 = (0, _react2.render)( /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  definitions: formConfig.defaultDefinitions,\n  schema: schema,\n  uiSchema: uiSchema,\n  data: data,\n  formData: {}\n})),\n    container = _render4.container,\n    getByRole = _render4.getByRole;\ngetByRole('button', {\n  name: /submit/i\n}).click();\nvar nodes = Array.from(container.querySelectorAll(\"\".concat(expectedFieldTypesWebComponents, \", \").concat(wrapperWebComponents)));\nvar errors = nodes.filter(function (node) {\n  return node.error;\n});\n(0, _chai.expect)(errors).to.have.lengthOf(expectedNumberOfErrors);",
                  "err": {},
                  "uuid": "24bd8880-19f1-4e19-8298-fcce519fb5e7",
                  "parentUUID": "1cc440ad-8ef3-4cfb-84e0-86ce694ebea1",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "24bd8880-19f1-4e19-8298-fcce519fb5e7"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 20,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "2eb49794-e39c-4720-8357-dd42f62d3fe8",
              "title": "nursing home information page",
              "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/chapters/03-health-and-employment-information/nursingHome.unit.spec.jsx",
              "file": "/src/applications/pensions/tests/chapters/03-health-and-employment-information/nursingHome.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should have appropriate number of web components",
                  "fullTitle": "pension nursing home page nursing home information page should have appropriate number of web components",
                  "timedOut": false,
                  "duration": 4,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var _render3 = (0, _react2.render)( /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  definitions: formConfig.defaultDefinitions,\n  schema: schema,\n  uiSchema: uiSchema,\n  data: data,\n  formData: {}\n})),\n    container = _render3.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypesWebComponents)).to.have.lengthOf(expectedNumberOfFields);",
                  "err": {},
                  "uuid": "e393b97e-cc7d-48a5-9219-031d7c0282ec",
                  "parentUUID": "2eb49794-e39c-4720-8357-dd42f62d3fe8",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "e393b97e-cc7d-48a5-9219-031d7c0282ec"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 4,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "5747e0a0-310b-404c-9e55-3a758ad06c85",
          "title": "ListItemView Component",
          "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/components/ListItemView.unit.spec.jsx",
          "file": "/src/applications/pensions/tests/components/ListItemView.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "renders without crashing",
              "fullTitle": "ListItemView Component renders without crashing",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "wrapper = (0, _enzyme.shallow)( /*#__PURE__*/_react.default.createElement(_ListItemView.default, {\n  title: \"Test title\"\n}));\n(0, _chai.expect)(wrapper.exists()).to.equal(true);\nwrapper.unmount();",
              "err": {},
              "uuid": "b9dc2db5-c089-4305-a88b-44e0794daeeb",
              "parentUUID": "5747e0a0-310b-404c-9e55-3a758ad06c85",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "displays the correct title",
              "fullTitle": "ListItemView Component displays the correct title",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var title = 'Software Engineer';\nwrapper = (0, _enzyme.shallow)( /*#__PURE__*/_react.default.createElement(_ListItemView.default, {\n  title: title\n}));\n(0, _chai.expect)(wrapper.text()).to.equal('Software Engineer');\nwrapper.unmount();",
              "err": {},
              "uuid": "58f991bd-44e4-4bc4-a86e-ba6a352df657",
              "parentUUID": "5747e0a0-310b-404c-9e55-3a758ad06c85",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "handles missing title gracefully",
              "fullTitle": "ListItemView Component handles missing title gracefully",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "wrapper = (0, _enzyme.shallow)( /*#__PURE__*/_react.default.createElement(_ListItemView.default, null));\n(0, _chai.expect)(wrapper.text()).to.equal('');\nwrapper.unmount();",
              "err": {},
              "uuid": "22c7e3c5-4027-4309-9f14-bb864651693e",
              "parentUUID": "5747e0a0-310b-404c-9e55-3a758ad06c85",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "b9dc2db5-c089-4305-a88b-44e0794daeeb",
            "58f991bd-44e4-4bc4-a86e-ba6a352df657",
            "22c7e3c5-4027-4309-9f14-bb864651693e"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "425cb337-7c8e-4687-b9f6-f5b35e9348e9",
          "title": "pension age page",
          "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/chapters/03-health-and-employment-information/age.unit.spec.jsx",
          "file": "/src/applications/pensions/tests/chapters/03-health-and-employment-information/age.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "9a3419b1-e269-4284-8474-2292214896df",
              "title": "Age page",
              "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/chapters/03-health-and-employment-information/age.unit.spec.jsx",
              "file": "/src/applications/pensions/tests/chapters/03-health-and-employment-information/age.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should show the correct number of errors on submit for web components",
                  "fullTitle": "pension age page Age page should show the correct number of errors on submit for web components",
                  "timedOut": false,
                  "duration": 16,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var _render4 = (0, _react2.render)( /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  definitions: formConfig.defaultDefinitions,\n  schema: schema,\n  uiSchema: uiSchema,\n  data: data,\n  formData: {}\n})),\n    container = _render4.container,\n    getByRole = _render4.getByRole;\ngetByRole('button', {\n  name: /submit/i\n}).click();\nvar nodes = Array.from(container.querySelectorAll(\"\".concat(expectedFieldTypesWebComponents, \", \").concat(wrapperWebComponents)));\nvar errors = nodes.filter(function (node) {\n  return node.error;\n});\n(0, _chai.expect)(errors).to.have.lengthOf(expectedNumberOfErrors);",
                  "err": {},
                  "uuid": "198539c2-b0ed-4c90-b072-0bd06a1592cd",
                  "parentUUID": "9a3419b1-e269-4284-8474-2292214896df",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "198539c2-b0ed-4c90-b072-0bd06a1592cd"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 16,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "da13a310-6cac-4012-9c85-cd0376767dfc",
              "title": "Age page",
              "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/chapters/03-health-and-employment-information/age.unit.spec.jsx",
              "file": "/src/applications/pensions/tests/chapters/03-health-and-employment-information/age.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should have appropriate number of web components",
                  "fullTitle": "pension age page Age page should have appropriate number of web components",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var _render3 = (0, _react2.render)( /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  definitions: formConfig.defaultDefinitions,\n  schema: schema,\n  uiSchema: uiSchema,\n  data: data,\n  formData: {}\n})),\n    container = _render3.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypesWebComponents)).to.have.lengthOf(expectedNumberOfFields);",
                  "err": {},
                  "uuid": "861381ba-62db-4052-9d03-9086ce848877",
                  "parentUUID": "da13a310-6cac-4012-9c85-cd0376767dfc",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "861381ba-62db-4052-9d03-9086ce848877"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "009cd229-de8b-4ea6-9521-0cbce5ffe3c5",
          "title": "<ErrorText />",
          "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/components/ErrorText.unit.spec.jsx",
          "file": "/src/applications/pensions/tests/components/ErrorText.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "contains the expected static text",
              "fullTitle": "<ErrorText /> contains the expected static text",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var wrapper = (0, _enzyme.shallow)( /*#__PURE__*/_react.default.createElement(_ErrorText.default, null));\n(0, _chai.expect)(wrapper.text()).to.contain('If it still doesn’t work, please');\nwrapper.unmount();",
              "err": {},
              "uuid": "0d4b666f-0fff-4e88-b340-d2b9bfac3689",
              "parentUUID": "009cd229-de8b-4ea6-9521-0cbce5ffe3c5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "renders without crashing",
              "fullTitle": "<ErrorText /> renders without crashing",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var wrapper = (0, _enzyme.shallow)( /*#__PURE__*/_react.default.createElement(_ErrorText.default, null));\nwrapper.unmount( /*#__PURE__*/_react.default.createElement(_ErrorText.default, null));",
              "err": {},
              "uuid": "021b1313-9311-499f-8c01-d75de0456017",
              "parentUUID": "009cd229-de8b-4ea6-9521-0cbce5ffe3c5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "renders <CallVBACenter />",
              "fullTitle": "<ErrorText /> renders <CallVBACenter />",
              "timedOut": false,
              "duration": 7,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var wrapper = (0, _enzyme.shallow)( /*#__PURE__*/_react.default.createElement(_ErrorText.default, null));\n(0, _chai.expect)(wrapper.find(_CallVBACenter.default)).to.have.lengthOf(1);\nwrapper.unmount();",
              "err": {},
              "uuid": "de26b5c6-26b1-47ad-b56d-621a2258cf63",
              "parentUUID": "009cd229-de8b-4ea6-9521-0cbce5ffe3c5",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "0d4b666f-0fff-4e88-b340-d2b9bfac3689",
            "021b1313-9311-499f-8c01-d75de0456017",
            "de26b5c6-26b1-47ad-b56d-621a2258cf63"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 8,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "1f9f2550-4544-4744-8c1e-2f7e349a63b0",
          "title": "Faster claim processing pension page",
          "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/chapters/06-additional-information/fasterClaimProcessing.unit.spec.jsx",
          "file": "/src/applications/pensions/tests/chapters/06-additional-information/fasterClaimProcessing.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "0cebf6cd-81bb-47b7-9a37-30daf99da377",
              "title": "Faster claim processing (optional) page",
              "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/chapters/06-additional-information/fasterClaimProcessing.unit.spec.jsx",
              "file": "/src/applications/pensions/tests/chapters/06-additional-information/fasterClaimProcessing.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should have appropriate number of fields",
                  "fullTitle": "Faster claim processing pension page Faster claim processing (optional) page should have appropriate number of fields",
                  "timedOut": false,
                  "duration": 7,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var _render = (0, _react2.render)( /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  definitions: formConfig.defaultDefinitions,\n  schema: schema,\n  uiSchema: uiSchema,\n  data: data,\n  formData: {}\n})),\n    container = _render.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypes)).to.have.lengthOf(expectedNumberOfFields);",
                  "err": {},
                  "uuid": "4f00962f-c5ab-48ed-aaf7-efb2b93085b0",
                  "parentUUID": "0cebf6cd-81bb-47b7-9a37-30daf99da377",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "4f00962f-c5ab-48ed-aaf7-efb2b93085b0"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 7,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "e444c82d-4d8b-4233-96db-96658e6716d9",
          "title": "bytesToKB",
          "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/components/SectionField.unit.spec.jsx",
          "file": "/src/applications/pensions/tests/components/SectionField.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "correctly converts bytes to KB",
              "fullTitle": "bytesToKB correctly converts bytes to KB",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var inputBytes = 2048;\nvar expectedKB = '2 KB';\nvar result = (0, _SectionField.bytesToKB)(inputBytes);\n(0, _chai.expect)(result).to.equal(expectedKB);",
              "err": {},
              "uuid": "776461a8-1940-4230-b172-16e153b450b6",
              "parentUUID": "e444c82d-4d8b-4233-96db-96658e6716d9",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "776461a8-1940-4230-b172-16e153b450b6"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "5e98ffb2-f9a5-41bd-ad29-bbca39f841c6",
          "title": "Child information page",
          "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/chapters/04-household-information/dependentChildInformation.unit.spec.jsx",
          "file": "/src/applications/pensions/tests/chapters/04-household-information/dependentChildInformation.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should set the title to the dependents name if available",
              "fullTitle": "Child information page should set the title to the dependents name if available",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, _chai.expect)(title(dependentData.dependents[0])).to.eql('Jane Doe information');\n(0, _chai.expect)(title({\n  fullName: {}\n})).to.eql('  information');",
              "err": {},
              "uuid": "79f120e2-b2b9-4487-95c0-09334b880d33",
              "parentUUID": "5e98ffb2-f9a5-41bd-ad29-bbca39f841c6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should ask if the child is in school (18-23 years old)",
              "fullTitle": "Child information page should ask if the child is in school (18-23 years old)",
              "timedOut": false,
              "duration": 20,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var onSubmit = _sinon.default.spy();\nvar _render5 = (0, _react2.render)( /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  arrayPath: arrayPath,\n  pagePerItemIndex: 0,\n  definitions: _form.default.defaultDefinitions,\n  schema: schema,\n  data: dependentData,\n  onSubmit: onSubmit,\n  uiSchema: uiSchema\n})),\n    container = _render5.container;\n(0, _chai.expect)((0, _index.$)('#root_attendingCollegeYes', container)).to.not.be.null;",
              "err": {},
              "uuid": "582982f4-1db9-4d7f-aa71-b90a696df05b",
              "parentUUID": "5e98ffb2-f9a5-41bd-ad29-bbca39f841c6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should show errors when required fields are empty",
              "fullTitle": "Child information page should show errors when required fields are empty",
              "timedOut": false,
              "duration": 21,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); });",
              "err": {},
              "uuid": "a459772e-8aa0-4537-8efe-d5442d527d90",
              "parentUUID": "5e98ffb2-f9a5-41bd-ad29-bbca39f841c6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should ask if the child is disabled (Under 18 years old)",
              "fullTitle": "Child information page should ask if the child is disabled (Under 18 years old)",
              "timedOut": false,
              "duration": 12,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var onSubmit = _sinon.default.spy();\nvar _render7 = (0, _react2.render)( /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  arrayPath: arrayPath,\n  pagePerItemIndex: 0,\n  definitions: _form.default.defaultDefinitions,\n  schema: schema,\n  data: _objectSpread(_objectSpread({}, dependentData), {}, {\n    dependents: [_objectSpread(_objectSpread({}, dependentData.dependents[0]), {}, {\n      childDateOfBirth: (0, _moment.default)().subtract(10, 'years').toISOString()\n    })]\n  }),\n  onSubmit: onSubmit,\n  uiSchema: uiSchema\n})),\n    container = _render7.container;\n(0, _chai.expect)((0, _index.$)('#root_disabledYes', container)).to.not.be.null;",
              "err": {},
              "uuid": "ec75d549-d120-402d-a540-5881ebd2c256",
              "parentUUID": "5e98ffb2-f9a5-41bd-ad29-bbca39f841c6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should not require ssn if noSSN is checked",
              "fullTitle": "Child information page should not require ssn if noSSN is checked",
              "timedOut": false,
              "duration": 25,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); });",
              "err": {},
              "uuid": "b0802dde-3772-4737-a275-8b755b9b4cd9",
              "parentUUID": "5e98ffb2-f9a5-41bd-ad29-bbca39f841c6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should not ask if the child is in school",
              "fullTitle": "Child information page should not ask if the child is in school",
              "timedOut": false,
              "duration": 10,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var onSubmit = _sinon.default.spy();\nvar _render6 = (0, _react2.render)( /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  arrayPath: arrayPath,\n  pagePerItemIndex: 0,\n  definitions: _form.default.defaultDefinitions,\n  schema: schema,\n  data: _objectSpread(_objectSpread({}, dependentData), {}, {\n    dependents: [_objectSpread(_objectSpread({}, dependentData.dependents[0]), {}, {\n      childDateOfBirth: (0, _moment.default)().subtract(5, 'years').toISOString()\n    })]\n  }),\n  onSubmit: onSubmit,\n  uiSchema: uiSchema\n})),\n    container = _render6.container;\n(0, _chai.expect)((0, _index.$)('#root_attendingCollegeYes', container)).to.be.null;",
              "err": {},
              "uuid": "b286e687-f798-4c5b-b9a5-d2aa821d2028",
              "parentUUID": "5e98ffb2-f9a5-41bd-ad29-bbca39f841c6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should submit with valid data",
              "fullTitle": "Child information page should submit with valid data",
              "timedOut": false,
              "duration": 60,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); });",
              "err": {},
              "uuid": "748958a7-715f-409d-981c-330e54f87ee0",
              "parentUUID": "5e98ffb2-f9a5-41bd-ad29-bbca39f841c6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should not ask if the child is disabled",
              "fullTitle": "Child information page should not ask if the child is disabled",
              "timedOut": false,
              "duration": 11,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var onSubmit = _sinon.default.spy();\nvar _render8 = (0, _react2.render)( /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  arrayPath: arrayPath,\n  pagePerItemIndex: 0,\n  definitions: _form.default.defaultDefinitions,\n  schema: schema,\n  data: dependentData,\n  onSubmit: onSubmit,\n  uiSchema: uiSchema\n})),\n    container = _render8.container;\n(0, _chai.expect)((0, _index.$)('#root_disabledYes', container)).to.be.null;",
              "err": {},
              "uuid": "b74ba333-11b2-42e7-91b9-d9eb5cf9e57c",
              "parentUUID": "5e98ffb2-f9a5-41bd-ad29-bbca39f841c6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should render all fields",
              "fullTitle": "Child information page should render all fields",
              "timedOut": false,
              "duration": 12,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); });",
              "err": {},
              "uuid": "baa85998-4b3a-4938-8489-8fbf2b5882ab",
              "parentUUID": "5e98ffb2-f9a5-41bd-ad29-bbca39f841c6",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "79f120e2-b2b9-4487-95c0-09334b880d33",
            "582982f4-1db9-4d7f-aa71-b90a696df05b",
            "a459772e-8aa0-4537-8efe-d5442d527d90",
            "ec75d549-d120-402d-a540-5881ebd2c256",
            "b0802dde-3772-4737-a275-8b755b9b4cd9",
            "b286e687-f798-4c5b-b9a5-d2aa821d2028",
            "748958a7-715f-409d-981c-330e54f87ee0",
            "b74ba333-11b2-42e7-91b9-d9eb5cf9e57c",
            "baa85998-4b3a-4938-8489-8fbf2b5882ab"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 171,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "d6e30b1a-d413-4a55-b1a0-a32f14d73d83",
          "title": "pension contact information page",
          "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/chapters/01-applicant-information/contactInformation.unit.spec.jsx",
          "file": "/src/applications/pensions/tests/chapters/01-applicant-information/contactInformation.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "0313b3b7-9198-4458-8f78-029be282fffd",
              "title": "Email address and phone number page",
              "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/chapters/01-applicant-information/contactInformation.unit.spec.jsx",
              "file": "/src/applications/pensions/tests/chapters/01-applicant-information/contactInformation.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should show the correct number of errors on submit for web components",
                  "fullTitle": "pension contact information page Email address and phone number page should show the correct number of errors on submit for web components",
                  "timedOut": false,
                  "duration": 22,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var _render4 = (0, _react2.render)( /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  definitions: formConfig.defaultDefinitions,\n  schema: schema,\n  uiSchema: uiSchema,\n  data: data,\n  formData: {}\n})),\n    container = _render4.container,\n    getByRole = _render4.getByRole;\ngetByRole('button', {\n  name: /submit/i\n}).click();\nvar nodes = Array.from(container.querySelectorAll(\"\".concat(expectedFieldTypesWebComponents, \", \").concat(wrapperWebComponents)));\nvar errors = nodes.filter(function (node) {\n  return node.error;\n});\n(0, _chai.expect)(errors).to.have.lengthOf(expectedNumberOfErrors);",
                  "err": {},
                  "uuid": "a491ebd6-f428-42f3-bef8-b91ad5b7845d",
                  "parentUUID": "0313b3b7-9198-4458-8f78-029be282fffd",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "a491ebd6-f428-42f3-bef8-b91ad5b7845d"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 22,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "d3d393af-e0aa-4a3d-b976-b4ff3fc8ff9c",
              "title": "Email address and phone number page",
              "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/chapters/01-applicant-information/contactInformation.unit.spec.jsx",
              "file": "/src/applications/pensions/tests/chapters/01-applicant-information/contactInformation.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should have appropriate number of web components",
                  "fullTitle": "pension contact information page Email address and phone number page should have appropriate number of web components",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var _render3 = (0, _react2.render)( /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  definitions: formConfig.defaultDefinitions,\n  schema: schema,\n  uiSchema: uiSchema,\n  data: data,\n  formData: {}\n})),\n    container = _render3.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypesWebComponents)).to.have.lengthOf(expectedNumberOfFields);",
                  "err": {},
                  "uuid": "a2b1eb48-2d4e-495a-8acb-d0663fe8792b",
                  "parentUUID": "d3d393af-e0aa-4a3d-b976-b4ff3fc8ff9c",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "a2b1eb48-2d4e-495a-8acb-d0663fe8792b"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 3,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "d40e1303-b447-46f5-ac37-3412b2fc5e7d",
          "title": "web component tests",
          "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/chapters/04-household-information/dependentChildren.unit.spec.jsx",
          "file": "/src/applications/pensions/tests/chapters/04-household-information/dependentChildren.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "c44a009f-0497-48c1-bbf3-0f7138f396aa",
              "title": "dependent children page",
              "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/chapters/04-household-information/dependentChildren.unit.spec.jsx",
              "file": "/src/applications/pensions/tests/chapters/04-household-information/dependentChildren.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should have appropriate number of web components",
                  "fullTitle": "web component tests dependent children page should have appropriate number of web components",
                  "timedOut": false,
                  "duration": 5,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var _render3 = (0, _react2.render)( /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  definitions: formConfig.defaultDefinitions,\n  schema: schema,\n  uiSchema: uiSchema,\n  data: data,\n  formData: {}\n})),\n    container = _render3.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypesWebComponents)).to.have.lengthOf(expectedNumberOfFields);",
                  "err": {},
                  "uuid": "13b4fe42-8d79-4e0a-837b-789fe7d5c101",
                  "parentUUID": "c44a009f-0497-48c1-bbf3-0f7138f396aa",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "13b4fe42-8d79-4e0a-837b-789fe7d5c101"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 5,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "739a148f-da6a-4323-92b7-ff443ca9232c",
              "title": "dependent children page",
              "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/chapters/04-household-information/dependentChildren.unit.spec.jsx",
              "file": "/src/applications/pensions/tests/chapters/04-household-information/dependentChildren.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should show the correct number of errors on submit for web components",
                  "fullTitle": "web component tests dependent children page should show the correct number of errors on submit for web components",
                  "timedOut": false,
                  "duration": 14,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var _render4 = (0, _react2.render)( /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  definitions: formConfig.defaultDefinitions,\n  schema: schema,\n  uiSchema: uiSchema,\n  data: data,\n  formData: {}\n})),\n    container = _render4.container,\n    getByRole = _render4.getByRole;\ngetByRole('button', {\n  name: /submit/i\n}).click();\nvar nodes = Array.from(container.querySelectorAll(\"\".concat(expectedFieldTypesWebComponents, \", \").concat(wrapperWebComponents)));\nvar errors = nodes.filter(function (node) {\n  return node.error;\n});\n(0, _chai.expect)(errors).to.have.lengthOf(expectedNumberOfErrors);",
                  "err": {},
                  "uuid": "1bd0a8f8-d532-40f8-bdab-0cf12bcb58b8",
                  "parentUUID": "739a148f-da6a-4323-92b7-ff443ca9232c",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "1bd0a8f8-d532-40f8-bdab-0cf12bcb58b8"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 14,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "f6d7518b-1aad-4e0f-9b59-3da5257bd85b",
          "title": "scrollToTop function",
          "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/containers/ConfirmationPage.unit.spec.jsx",
          "file": "/src/applications/pensions/tests/containers/ConfirmationPage.unit.spec.jsx",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"scrollToTop function\"",
              "fullTitle": "scrollToTop function \"before each\" hook in \"scrollToTop function\"",
              "timedOut": false,
              "duration": 2,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "scrollToSpy = _sinon.default.stub(Scroll.scroller, 'scrollTo');",
              "err": {},
              "uuid": "0f17879d-90fa-4734-b716-3d46046ae66c",
              "parentUUID": "f6d7518b-1aad-4e0f-9b59-3da5257bd85b",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after each\" hook in \"scrollToTop function\"",
              "fullTitle": "scrollToTop function \"after each\" hook in \"scrollToTop function\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "scrollToSpy.restore();",
              "err": {},
              "uuid": "5f527615-0322-4e13-b5e6-f6a5ce9044d9",
              "parentUUID": "f6d7518b-1aad-4e0f-9b59-3da5257bd85b",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "should call scroller.scrollTo with correct parameters",
              "fullTitle": "scrollToTop function should call scroller.scrollTo with correct parameters",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, _helpers.scrollToTop)();\n(0, _chai.expect)(scrollToSpy.calledOnce).to.be.true;\n(0, _chai.expect)(scrollToSpy.calledWith('topScrollElement', {\n  duration: 500,\n  delay: 0,\n  smooth: true\n})).to.be.true;",
              "err": {},
              "uuid": "bad448da-cd60-46c7-bbf4-a2f970b40eca",
              "parentUUID": "f6d7518b-1aad-4e0f-9b59-3da5257bd85b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "bad448da-cd60-46c7-bbf4-a2f970b40eca"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "3aed7c60-54e2-4828-a052-62acb6f6b8e8",
          "title": "Pensions aidAttendance",
          "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/config/aidAttendance.unit.spec.jsx",
          "file": "/src/applications/pensions/tests/config/aidAttendance.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should submit",
              "fullTitle": "Pensions aidAttendance should submit",
              "timedOut": false,
              "duration": 5,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var onSubmit = _sinon.default.spy();\nvar form = _testUtils.default.renderIntoDocument( /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  schema: schema,\n  definitions: definitions,\n  onSubmit: onSubmit,\n  data: {},\n  uiSchema: uiSchema\n}));\nvar formDOM = (0, _schemaformUtils.getFormDOM)(form);\nformDOM.submitForm();\n(0, _chai.expect)(onSubmit.called).to.be.true;",
              "err": {},
              "uuid": "3b8d0b82-d33b-4fc7-a2fe-27896f684b30",
              "parentUUID": "3aed7c60-54e2-4828-a052-62acb6f6b8e8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should render",
              "fullTitle": "Pensions aidAttendance should render",
              "timedOut": false,
              "duration": 2,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "var form = _testUtils.default.renderIntoDocument( /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  schema: schema,\n  data: {},\n  definitions: definitions,\n  uiSchema: uiSchema\n}));\nvar formDOM = (0, _schemaformUtils.getFormDOM)(form);\n(0, _chai.expect)(formDOM.querySelectorAll('input,select').length).to.equal(0);\n(0, _chai.expect)(formDOM.querySelectorAll('.usa-alert-info').length).to.equal(2);",
              "err": {
                "message": "AssertionError: expected 0 to equal 2",
                "estack": "AssertionError: expected 0 to equal 2\n    at Context.<anonymous> (src/applications/pensions/tests/config/aidAttendance.unit.spec.jsx:32:67)\n    at Test.Runnable.run (node_modules/mocha-snapshots/src/index.js:19:22)\n    at processImmediate (internal/timers.js:461:21)\n    at process.callbackTrampoline (internal/async_hooks.js:129:14)",
                "diff": "- 0\n+ 2\n"
              },
              "uuid": "bed34455-17eb-49b2-822f-5562e57b0dc6",
              "parentUUID": "3aed7c60-54e2-4828-a052-62acb6f6b8e8",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "3b8d0b82-d33b-4fc7-a2fe-27896f684b30"
          ],
          "failures": [
            "bed34455-17eb-49b2-822f-5562e57b0dc6"
          ],
          "pending": [],
          "skipped": [],
          "duration": 7,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "fb7bae19-0f2e-479e-ae31-6a61b6c7a210",
          "title": "Child address page",
          "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/config/dependentChildAddress.unit.spec.jsx",
          "file": "/src/applications/pensions/tests/config/dependentChildAddress.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should submit with valid data",
              "fullTitle": "Child address page should submit with valid data",
              "timedOut": false,
              "duration": 21,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var onSubmit = _sinon.default.spy();\nvar form = _testUtils.default.renderIntoDocument( /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  arrayPath: arrayPath,\n  pagePerItemIndex: 0,\n  definitions: _form.default.defaultDefinitions,\n  schema: schema,\n  data: nameData,\n  onSubmit: onSubmit,\n  uiSchema: uiSchema\n}));\nvar formDOM = (0, _schemaformUtils.getFormDOM)(form);\nformDOM.fillData('#root_childInHouseholdYes', 'Y');\nformDOM.submitForm(form);\n(0, _chai.expect)(onSubmit.called).to.be.true;",
              "err": {},
              "uuid": "9e7f3431-9748-4dc6-acfa-28065336f88e",
              "parentUUID": "fb7bae19-0f2e-479e-ae31-6a61b6c7a210",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should show errors when required fields are empty",
              "fullTitle": "Child address page should show errors when required fields are empty",
              "timedOut": false,
              "duration": 13,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var onSubmit = _sinon.default.spy();\nvar form = _testUtils.default.renderIntoDocument( /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  definitions: _form.default.defaultDefinitions,\n  arrayPath: arrayPath,\n  pagePerItemIndex: 0,\n  schema: schema,\n  onSubmit: onSubmit,\n  data: nameData,\n  uiSchema: uiSchema\n}));\nvar formDOM = (0, _schemaformUtils.getFormDOM)(form);\nformDOM.submitForm(form);\n(0, _chai.expect)(formDOM.querySelectorAll('.usa-input-error').length).to.equal(1);\n(0, _chai.expect)(onSubmit.called).not.to.be.true;",
              "err": {},
              "uuid": "8e8b5db9-4674-42a9-95a0-773ebdaf21b4",
              "parentUUID": "fb7bae19-0f2e-479e-ae31-6a61b6c7a210",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should render address fields",
              "fullTitle": "Child address page should render address fields",
              "timedOut": false,
              "duration": 50,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var form = _testUtils.default.renderIntoDocument( /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  arrayPath: arrayPath,\n  pagePerItemIndex: 0,\n  definitions: _form.default.defaultDefinitions,\n  schema: schema,\n  data: nameData,\n  uiSchema: uiSchema\n}));\nvar formDOM = (0, _schemaformUtils.getFormDOM)(form);\nformDOM.setYesNo('input#root_childInHouseholdNo', 'N');\n(0, _chai.expect)(formDOM.querySelectorAll('va-select').length).to.equal(1);\n(0, _chai.expect)(formDOM.querySelectorAll('va-text-input').length).to.equal(5);",
              "err": {},
              "uuid": "886a32ed-8a1c-4ca5-b119-9e6e73ef4b11",
              "parentUUID": "fb7bae19-0f2e-479e-ae31-6a61b6c7a210",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should render",
              "fullTitle": "Child address page should render",
              "timedOut": false,
              "duration": 8,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var form = _testUtils.default.renderIntoDocument( /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  arrayPath: arrayPath,\n  pagePerItemIndex: 0,\n  definitions: _form.default.defaultDefinitions,\n  schema: schema,\n  data: nameData,\n  uiSchema: uiSchema\n}));\nvar formDOM = (0, _schemaformUtils.getFormDOM)(form);\n(0, _chai.expect)(formDOM.querySelectorAll('input, select, textarea').length).to.equal(2);",
              "err": {},
              "uuid": "101c0ce5-093a-4a1d-be51-cc1365aa00b3",
              "parentUUID": "fb7bae19-0f2e-479e-ae31-6a61b6c7a210",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should set the title to the dependents name if available",
              "fullTitle": "Child address page should set the title to the dependents name if available",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var pageTitle = title;\n(0, _chai.expect)(pageTitle({\n  fullName: {\n    first: 'Jane',\n    last: 'Doe'\n  }\n})).to.eql('Jane Doe address');\n(0, _chai.expect)(pageTitle({\n  fullName: {}\n})).to.eql('  address');",
              "err": {},
              "uuid": "a8e91eaa-3bfc-4199-8954-56e185271c77",
              "parentUUID": "fb7bae19-0f2e-479e-ae31-6a61b6c7a210",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "9e7f3431-9748-4dc6-acfa-28065336f88e",
            "8e8b5db9-4674-42a9-95a0-773ebdaf21b4",
            "886a32ed-8a1c-4ca5-b119-9e6e73ef4b11",
            "101c0ce5-093a-4a1d-be51-cc1365aa00b3",
            "a8e91eaa-3bfc-4199-8954-56e185271c77"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 92,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "cabac3f8-635b-42c7-bba2-df6f71d86139",
          "title": "pension treatment history page",
          "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/chapters/03-health-and-employment-information/treatmentHistory.unit.spec.jsx",
          "file": "/src/applications/pensions/tests/chapters/03-health-and-employment-information/treatmentHistory.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should render web components in form correctly",
              "fullTitle": "pension treatment history page should render web components in form correctly",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var pageTitle = 'treatment history';\nvar expectedNumberOfFields = 1;\n(0, _pageTests.testNumberOfWebComponentFields)(_form.default, _vaTreatmentHistory.default.schema, _vaTreatmentHistory.default.uiSchema, expectedNumberOfFields, pageTitle);\nvar expectedNumberOfErrors = 1;\n(0, _pageTests.testNumberOfErrorsOnSubmitForWebComponents)(_form.default, _vaTreatmentHistory.default.schema, _vaTreatmentHistory.default.uiSchema, expectedNumberOfErrors, pageTitle);",
              "err": {},
              "uuid": "e3be9f20-d6d8-413c-ab6d-716df9a581af",
              "parentUUID": "cabac3f8-635b-42c7-bba2-df6f71d86139",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "e3be9f20-d6d8-413c-ab6d-716df9a581af"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "d5fd7052-b998-4a14-933a-c7581c98f67a",
          "title": "financial information home acreage pension page",
          "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/chapters/05-financial-information/homeAcreageMoreThanTwo.unit.spec.jsx",
          "file": "/src/applications/pensions/tests/chapters/05-financial-information/homeAcreageMoreThanTwo.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "0380a90a-1446-4d64-a2ec-a42cb7913ffa",
              "title": "home acreage page",
              "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/chapters/05-financial-information/homeAcreageMoreThanTwo.unit.spec.jsx",
              "file": "/src/applications/pensions/tests/chapters/05-financial-information/homeAcreageMoreThanTwo.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should show the correct number of errors on submit for web components",
                  "fullTitle": "financial information home acreage pension page home acreage page should show the correct number of errors on submit for web components",
                  "timedOut": false,
                  "duration": 9,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var _render4 = (0, _react2.render)( /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  definitions: formConfig.defaultDefinitions,\n  schema: schema,\n  uiSchema: uiSchema,\n  data: data,\n  formData: {}\n})),\n    container = _render4.container,\n    getByRole = _render4.getByRole;\ngetByRole('button', {\n  name: /submit/i\n}).click();\nvar nodes = Array.from(container.querySelectorAll(\"\".concat(expectedFieldTypesWebComponents, \", \").concat(wrapperWebComponents)));\nvar errors = nodes.filter(function (node) {\n  return node.error;\n});\n(0, _chai.expect)(errors).to.have.lengthOf(expectedNumberOfErrors);",
                  "err": {},
                  "uuid": "e234098f-460a-4042-99c8-c54a2128fc0b",
                  "parentUUID": "0380a90a-1446-4d64-a2ec-a42cb7913ffa",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "e234098f-460a-4042-99c8-c54a2128fc0b"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 9,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "88dd1d18-e46d-408e-a9b5-6f4fb86c33bc",
              "title": "home acreage page",
              "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/chapters/05-financial-information/homeAcreageMoreThanTwo.unit.spec.jsx",
              "file": "/src/applications/pensions/tests/chapters/05-financial-information/homeAcreageMoreThanTwo.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should have appropriate number of web components",
                  "fullTitle": "financial information home acreage pension page home acreage page should have appropriate number of web components",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var _render3 = (0, _react2.render)( /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  definitions: formConfig.defaultDefinitions,\n  schema: schema,\n  uiSchema: uiSchema,\n  data: data,\n  formData: {}\n})),\n    container = _render3.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypesWebComponents)).to.have.lengthOf(expectedNumberOfFields);",
                  "err": {},
                  "uuid": "c10dc9c8-dce8-4947-b93d-dac24de50871",
                  "parentUUID": "88dd1d18-e46d-408e-a9b5-6f4fb86c33bc",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "c10dc9c8-dce8-4947-b93d-dac24de50871"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "7d37f2c4-bcd8-47df-9549-0ae066ae4255",
          "title": "Unreimbursed care expenses pension page",
          "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/chapters/05-financial-information/careExpenses.unit.spec.jsx",
          "file": "/src/applications/pensions/tests/chapters/05-financial-information/careExpenses.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "7d8a1e0c-0e46-495d-bd29-8c63ffffaf10",
              "title": "Care expenses page",
              "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/chapters/05-financial-information/careExpenses.unit.spec.jsx",
              "file": "/src/applications/pensions/tests/chapters/05-financial-information/careExpenses.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should show the correct number of errors on submit",
                  "fullTitle": "Unreimbursed care expenses pension page Care expenses page should show the correct number of errors on submit",
                  "timedOut": false,
                  "duration": 85,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var _render2 = (0, _react2.render)( /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  definitions: formConfig.defaultDefinitions,\n  schema: schema,\n  uiSchema: uiSchema,\n  data: data,\n  formData: {}\n})),\n    getByRole = _render2.getByRole,\n    queryAllByRole = _render2.queryAllByRole;\ngetByRole('button', {\n  name: /submit/i\n}).click();\nvar errors = queryAllByRole('alert');\n(0, _chai.expect)(errors).to.have.lengthOf(expectedNumberOfErrors);",
                  "err": {},
                  "uuid": "a5d6f17e-434e-420c-8be1-17f7c407f122",
                  "parentUUID": "7d8a1e0c-0e46-495d-bd29-8c63ffffaf10",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "a5d6f17e-434e-420c-8be1-17f7c407f122"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 85,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "7b813633-57db-459c-a54b-db0636ed7b7d",
              "title": "Care expenses page",
              "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/chapters/05-financial-information/careExpenses.unit.spec.jsx",
              "file": "/src/applications/pensions/tests/chapters/05-financial-information/careExpenses.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should have appropriate number of web components",
                  "fullTitle": "Unreimbursed care expenses pension page Care expenses page should have appropriate number of web components",
                  "timedOut": false,
                  "duration": 26,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var _render3 = (0, _react2.render)( /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  definitions: formConfig.defaultDefinitions,\n  schema: schema,\n  uiSchema: uiSchema,\n  data: data,\n  formData: {}\n})),\n    container = _render3.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypesWebComponents)).to.have.lengthOf(expectedNumberOfFields);",
                  "err": {},
                  "uuid": "2a3264bd-0c5b-4ea7-968c-bb979aaeb688",
                  "parentUUID": "7b813633-57db-459c-a54b-db0636ed7b7d",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "2a3264bd-0c5b-4ea7-968c-bb979aaeb688"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 26,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "7cfdb377-274d-49f8-acb9-73c67335c317",
              "title": "Care expenses page",
              "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/chapters/05-financial-information/careExpenses.unit.spec.jsx",
              "file": "/src/applications/pensions/tests/chapters/05-financial-information/careExpenses.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should show the correct number of errors on submit for web components",
                  "fullTitle": "Unreimbursed care expenses pension page Care expenses page should show the correct number of errors on submit for web components",
                  "timedOut": false,
                  "duration": 50,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var _render4 = (0, _react2.render)( /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  definitions: formConfig.defaultDefinitions,\n  schema: schema,\n  uiSchema: uiSchema,\n  data: data,\n  formData: {}\n})),\n    container = _render4.container,\n    getByRole = _render4.getByRole;\ngetByRole('button', {\n  name: /submit/i\n}).click();\nvar nodes = Array.from(container.querySelectorAll(\"\".concat(expectedFieldTypesWebComponents, \", \").concat(wrapperWebComponents)));\nvar errors = nodes.filter(function (node) {\n  return node.error;\n});\n(0, _chai.expect)(errors).to.have.lengthOf(expectedNumberOfErrors);",
                  "err": {},
                  "uuid": "a5cc0032-e383-4fb0-a6e9-83acde4b9ab0",
                  "parentUUID": "7cfdb377-274d-49f8-acb9-73c67335c317",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "a5cc0032-e383-4fb0-a6e9-83acde4b9ab0"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 50,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "a0c8a089-1647-4949-adbb-6d2e0a8e1add",
              "title": "Care expenses page",
              "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/chapters/05-financial-information/careExpenses.unit.spec.jsx",
              "file": "/src/applications/pensions/tests/chapters/05-financial-information/careExpenses.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should have appropriate number of fields",
                  "fullTitle": "Unreimbursed care expenses pension page Care expenses page should have appropriate number of fields",
                  "timedOut": false,
                  "duration": 29,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var _render = (0, _react2.render)( /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  definitions: formConfig.defaultDefinitions,\n  schema: schema,\n  uiSchema: uiSchema,\n  data: data,\n  formData: {}\n})),\n    container = _render.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypes)).to.have.lengthOf(expectedNumberOfFields);",
                  "err": {},
                  "uuid": "4ce457b7-f0c1-4b45-91a3-cbc9ec6e1474",
                  "parentUUID": "a0c8a089-1647-4949-adbb-6d2e0a8e1add",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "4ce457b7-f0c1-4b45-91a3-cbc9ec6e1474"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 29,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "20f7f169-cdef-4727-974e-865ae1918bbb",
          "title": "Pensions isUnder65",
          "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/config/form.unit.spec.jsx",
          "file": "/src/applications/pensions/tests/config/form.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should return false if date of birth and isOver65 indicate veteran is over 65",
              "fullTitle": "Pensions isUnder65 should return false if date of birth and isOver65 indicate veteran is over 65",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var under65 = (0, _form.isUnder65)({\n  veteranDateOfBirth: '1950-01-01',\n  isOver65: true\n}, (0, _moment.default)('2020-01-01'));\n(0, _chai.expect)(under65).to.be.false;",
              "err": {},
              "uuid": "a40f21f4-5caa-4a38-aaa7-304fc79a688d",
              "parentUUID": "20f7f169-cdef-4727-974e-865ae1918bbb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return true if veteran is less than 65 according to isOver65",
              "fullTitle": "Pensions isUnder65 should return true if veteran is less than 65 according to isOver65",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var under65 = (0, _form.isUnder65)({\n  veteranDateOfBirth: '1950-01-01',\n  isOver65: false\n}, (0, _moment.default)('2020-01-01'));\n(0, _chai.expect)(under65).to.be.true;",
              "err": {},
              "uuid": "28cb3a75-cbc5-4084-acb0-6d0c356814ff",
              "parentUUID": "20f7f169-cdef-4727-974e-865ae1918bbb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return true if veteran is less than 65 according to date of birth",
              "fullTitle": "Pensions isUnder65 should return true if veteran is less than 65 according to date of birth",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var under65 = (0, _form.isUnder65)({\n  veteranDateOfBirth: '2000-01-01',\n  isOver65: true\n}, (0, _moment.default)('2020-01-01'));\n(0, _chai.expect)(under65).to.be.true;",
              "err": {},
              "uuid": "7866614d-5422-4915-a905-e0eb8de94b09",
              "parentUUID": "20f7f169-cdef-4727-974e-865ae1918bbb",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a40f21f4-5caa-4a38-aaa7-304fc79a688d",
            "28cb3a75-cbc5-4084-acb0-6d0c356814ff",
            "7866614d-5422-4915-a905-e0eb8de94b09"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "69038edd-e929-4d9b-a56d-ae9aa7c424be",
          "title": "pension <SpecialMonthlyPensionEvidenceAlert>",
          "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/components/FormAlerts/FormAlerts.unit.spec.jsx",
          "file": "/src/applications/pensions/tests/components/FormAlerts/FormAlerts.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should render",
              "fullTitle": "pension <SpecialMonthlyPensionEvidenceAlert> should render",
              "timedOut": false,
              "duration": 4,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _render2 = (0, _react2.render)( /*#__PURE__*/_react.default.createElement(_FormAlerts.SpecialMonthlyPensionEvidenceAlert, null)),\n    container = _render2.container;\nvar selector = container.querySelector('va-alert');\n(0, _chai.expect)(selector).to.exist;\n(0, _chai.expect)(selector).to.contain.attr('status', 'warning');",
              "err": {},
              "uuid": "44b6cd93-fd60-4949-93d3-e88eda461801",
              "parentUUID": "69038edd-e929-4d9b-a56d-ae9aa7c424be",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "44b6cd93-fd60-4949-93d3-e88eda461801"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 4,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "6fbc01a5-fa23-491d-a1a6-03e02583b01a",
          "title": "medicaid coverage pension page",
          "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/chapters/03-health-and-employment-information/medicaidCoverage.unit.spec.jsx",
          "file": "/src/applications/pensions/tests/chapters/03-health-and-employment-information/medicaidCoverage.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "bfe63f44-a344-472a-924e-37736af7ad7d",
              "title": "medicaid coverage page",
              "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/chapters/03-health-and-employment-information/medicaidCoverage.unit.spec.jsx",
              "file": "/src/applications/pensions/tests/chapters/03-health-and-employment-information/medicaidCoverage.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should have appropriate number of web components",
                  "fullTitle": "medicaid coverage pension page medicaid coverage page should have appropriate number of web components",
                  "timedOut": false,
                  "duration": 6,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var _render3 = (0, _react2.render)( /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  definitions: formConfig.defaultDefinitions,\n  schema: schema,\n  uiSchema: uiSchema,\n  data: data,\n  formData: {}\n})),\n    container = _render3.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypesWebComponents)).to.have.lengthOf(expectedNumberOfFields);",
                  "err": {},
                  "uuid": "e8b02aac-95ee-4af7-8a06-151885b03ab4",
                  "parentUUID": "bfe63f44-a344-472a-924e-37736af7ad7d",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "e8b02aac-95ee-4af7-8a06-151885b03ab4"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 6,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "6c671e11-68c6-4201-9d7d-40969117be17",
              "title": "medicaid coverage page",
              "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/chapters/03-health-and-employment-information/medicaidCoverage.unit.spec.jsx",
              "file": "/src/applications/pensions/tests/chapters/03-health-and-employment-information/medicaidCoverage.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should show the correct number of errors on submit for web components",
                  "fullTitle": "medicaid coverage pension page medicaid coverage page should show the correct number of errors on submit for web components",
                  "timedOut": false,
                  "duration": 14,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var _render4 = (0, _react2.render)( /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  definitions: formConfig.defaultDefinitions,\n  schema: schema,\n  uiSchema: uiSchema,\n  data: data,\n  formData: {}\n})),\n    container = _render4.container,\n    getByRole = _render4.getByRole;\ngetByRole('button', {\n  name: /submit/i\n}).click();\nvar nodes = Array.from(container.querySelectorAll(\"\".concat(expectedFieldTypesWebComponents, \", \").concat(wrapperWebComponents)));\nvar errors = nodes.filter(function (node) {\n  return node.error;\n});\n(0, _chai.expect)(errors).to.have.lengthOf(expectedNumberOfErrors);",
                  "err": {},
                  "uuid": "a19a4291-d12a-445a-b587-6f0b18dc204c",
                  "parentUUID": "6c671e11-68c6-4201-9d7d-40969117be17",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "a19a4291-d12a-445a-b587-6f0b18dc204c"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 14,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "fd9fe535-b59b-4d7e-b89b-bf0e3378350f",
          "title": "pension pow information page",
          "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/chapters/02-military-history/pow.unit.spec.jsx",
          "file": "/src/applications/pensions/tests/chapters/02-military-history/pow.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should submit with valid data",
              "fullTitle": "pension pow information page should submit with valid data",
              "timedOut": false,
              "duration": 16,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); });",
              "err": {},
              "uuid": "bf965f84-fd7c-496f-b045-ba25a6718e72",
              "parentUUID": "fd9fe535-b59b-4d7e-b89b-bf0e3378350f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should reveal date fields",
              "fullTitle": "pension pow information page should reveal date fields",
              "timedOut": false,
              "duration": 19,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); });",
              "err": {},
              "uuid": "442349ed-4fbb-47fc-a31c-3b2b3bdf2b74",
              "parentUUID": "fd9fe535-b59b-4d7e-b89b-bf0e3378350f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "bf965f84-fd7c-496f-b045-ba25a6718e72",
            "442349ed-4fbb-47fc-a31c-3b2b3bdf2b74"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 35,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "82aef6af-e3d1-4154-b457-f3f4f998357c",
          "title": "NoFormPage",
          "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/NoFormPage.unit.spec.jsx",
          "file": "/src/applications/pensions/tests/NoFormPage.unit.spec.jsx",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"NoFormPage\"",
              "fullTitle": "NoFormPage \"before all\" hook in \"NoFormPage\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "server.listen();",
              "err": {},
              "uuid": "f4533470-8070-45b1-af17-6ce9d32fa180",
              "parentUUID": "82aef6af-e3d1-4154-b457-f3f4f998357c",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"NoFormPage\"",
              "fullTitle": "NoFormPage \"after all\" hook in \"NoFormPage\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "server.close();",
              "err": {},
              "uuid": "0f28de9a-66de-4148-95be-d13f48b657dd",
              "parentUUID": "82aef6af-e3d1-4154-b457-f3f4f998357c",
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"after each\" hook in \"NoFormPage\"",
              "fullTitle": "NoFormPage \"after each\" hook in \"NoFormPage\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "server.resetHandlers();",
              "err": {},
              "uuid": "48510d20-673b-4dcb-abf7-841b63f5c801",
              "parentUUID": "82aef6af-e3d1-4154-b457-f3f4f998357c",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "should render if IS logged in && DOES have form data in progress",
              "fullTitle": "NoFormPage should render if IS logged in && DOES have form data in progress",
              "timedOut": false,
              "duration": 46,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); });",
              "err": {},
              "uuid": "0610f941-7bf1-4abe-a75c-b3a036617ded",
              "parentUUID": "82aef6af-e3d1-4154-b457-f3f4f998357c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should render if IS logged in && DOES NOT have form data in progress",
              "fullTitle": "NoFormPage should render if IS logged in && DOES NOT have form data in progress",
              "timedOut": false,
              "duration": 9,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); });",
              "err": {},
              "uuid": "c8e6c0a9-ca92-4483-8aec-42b80ef4902a",
              "parentUUID": "82aef6af-e3d1-4154-b457-f3f4f998357c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should render if NOT logged in",
              "fullTitle": "NoFormPage should render if NOT logged in",
              "timedOut": false,
              "duration": 5,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); });",
              "err": {},
              "uuid": "a5013165-6c99-45a3-8e99-97b09022ba3e",
              "parentUUID": "82aef6af-e3d1-4154-b457-f3f4f998357c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "0610f941-7bf1-4abe-a75c-b3a036617ded",
            "c8e6c0a9-ca92-4483-8aec-42b80ef4902a",
            "a5013165-6c99-45a3-8e99-97b09022ba3e"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 60,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "91ed2f7e-281a-4e4c-b91e-1ae5ce7cfe4c",
          "title": "Pensions expedited",
          "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/config/expedited.unit.spec.jsx",
          "file": "/src/applications/pensions/tests/config/expedited.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should render warning on No",
              "fullTitle": "Pensions expedited should render warning on No",
              "timedOut": false,
              "duration": 6,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var form = _testUtils.default.renderIntoDocument( /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  schema: schema,\n  data: {},\n  definitions: definitions,\n  uiSchema: uiSchema\n}));\nvar formDOM = (0, _schemaformUtils.getFormDOM)(form);\nformDOM.fillData('#root_noRapidProcessingNo', 'N');\n(0, _chai.expect)(formDOM.querySelector('.usa-alert-info').textContent).to.contain('doesn’t qualify');",
              "err": {},
              "uuid": "8bc2ac12-22e4-468b-bf94-b46d5cb40d8f",
              "parentUUID": "91ed2f7e-281a-4e4c-b91e-1ae5ce7cfe4c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should submit",
              "fullTitle": "Pensions expedited should submit",
              "timedOut": false,
              "duration": 3,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var onSubmit = _sinon.default.spy();\nvar form = _testUtils.default.renderIntoDocument( /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  schema: schema,\n  definitions: definitions,\n  onSubmit: onSubmit,\n  data: {},\n  uiSchema: uiSchema\n}));\nvar formDOM = (0, _schemaformUtils.getFormDOM)(form);\nformDOM.submitForm();\n(0, _chai.expect)(onSubmit.called).to.be.true;",
              "err": {},
              "uuid": "4fd3ebce-a849-4912-980c-fcf81560fe98",
              "parentUUID": "91ed2f7e-281a-4e4c-b91e-1ae5ce7cfe4c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should render",
              "fullTitle": "Pensions expedited should render",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var form = _testUtils.default.renderIntoDocument( /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  schema: schema,\n  data: {},\n  definitions: definitions,\n  uiSchema: uiSchema\n}));\nvar formDOM = (0, _schemaformUtils.getFormDOM)(form);\n(0, _chai.expect)(formDOM.querySelectorAll('input,select').length).to.equal(2);",
              "err": {},
              "uuid": "c5da0802-140b-4145-a59f-d89709f27b70",
              "parentUUID": "91ed2f7e-281a-4e4c-b91e-1ae5ce7cfe4c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should render warning on Yes",
              "fullTitle": "Pensions expedited should render warning on Yes",
              "timedOut": false,
              "duration": 6,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var form = _testUtils.default.renderIntoDocument( /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  schema: schema,\n  data: {},\n  definitions: definitions,\n  uiSchema: uiSchema\n}));\nvar formDOM = (0, _schemaformUtils.getFormDOM)(form);\nformDOM.fillData('#root_noRapidProcessingYes', 'Y');\n(0, _chai.expect)(formDOM.querySelector('.usa-alert-info').textContent).to.contain('will be submitted as');",
              "err": {},
              "uuid": "4bc8e3e9-c751-49fc-a467-9c37e4b0a63a",
              "parentUUID": "91ed2f7e-281a-4e4c-b91e-1ae5ce7cfe4c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "8bc2ac12-22e4-468b-bf94-b46d5cb40d8f",
            "4fd3ebce-a849-4912-980c-fcf81560fe98",
            "c5da0802-140b-4145-a59f-d89709f27b70",
            "4bc8e3e9-c751-49fc-a467-9c37e4b0a63a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 17,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "97a0808c-59a5-4a9d-83de-d33040d759cf",
          "title": "FinancialDisclosure",
          "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/components/SectionField.unit.spec.jsx",
          "file": "/src/applications/pensions/tests/components/SectionField.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should not show other expenses",
              "fullTitle": "FinancialDisclosure should not show other expenses",
              "timedOut": false,
              "duration": 4,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var formData = {\n  otherExpenses: [{\n    paidTo: '',\n    purpose: '',\n    amount: '',\n    date: ''\n  }]\n};\nvar _render6 = (0, _react2.render)( /*#__PURE__*/_react.default.createElement(_SectionField.FinancialDisclosure, {\n  formData: formData\n})),\n    queryByText = _render6.queryByText;\n(0, _chai.expect)(queryByText('frank')).to.be.null;",
              "err": {},
              "uuid": "4f4f7c11-5f98-4e15-b12d-1a6d13cbfe19",
              "parentUUID": "97a0808c-59a5-4a9d-83de-d33040d759cf",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should show other expenses",
              "fullTitle": "FinancialDisclosure should show other expenses",
              "timedOut": false,
              "duration": 4,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var formData = {\n  otherExpenses: [{\n    paidTo: 'frank',\n    purpose: 'mileage',\n    amount: 92,\n    date: '10/12/1999'\n  }]\n};\nvar _render5 = (0, _react2.render)( /*#__PURE__*/_react.default.createElement(_SectionField.FinancialDisclosure, {\n  formData: formData\n})),\n    queryByText = _render5.queryByText;\n(0, _chai.expect)(queryByText('frank')).to.not.be.null;",
              "err": {},
              "uuid": "86526fa0-2b19-4221-baef-66303b96d4ba",
              "parentUUID": "97a0808c-59a5-4a9d-83de-d33040d759cf",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "4f4f7c11-5f98-4e15-b12d-1a6d13cbfe19",
            "86526fa0-2b19-4221-baef-66303b96d4ba"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 8,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "a785c62d-8b8f-44e3-bfb0-665e17ea59c0",
          "title": "Pensions marriage history",
          "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/config/marriageHistory.unit.spec.jsx",
          "file": "/src/applications/pensions/tests/config/marriageHistory.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should not submit empty form",
              "fullTitle": "Pensions marriage history should not submit empty form",
              "timedOut": false,
              "duration": 22,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var onSubmit = _sinon.default.spy();\nvar form = _testUtils.default.renderIntoDocument( /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  schema: schema,\n  definitions: _form.default.defaultDefinitions,\n  onSubmit: onSubmit,\n  uiSchema: uiSchema\n}));\nvar formDOM = (0, _schemaformUtils.getFormDOM)(form);\n(0, _schemaformUtils.submitForm)(form);\n(0, _chai.expect)(formDOM.querySelectorAll('.usa-input-error').length).to.equal(8);\n(0, _chai.expect)(onSubmit.called).to.be.false;",
              "err": {},
              "uuid": "e46c7b59-358c-463b-b36f-a9df8972f066",
              "parentUUID": "a785c62d-8b8f-44e3-bfb0-665e17ea59c0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should render",
              "fullTitle": "Pensions marriage history should render",
              "timedOut": false,
              "duration": 13,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var form = _testUtils.default.renderIntoDocument( /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  schema: schema,\n  definitions: _form.default.defaultDefinitions,\n  uiSchema: uiSchema\n}));\nvar formDOM = (0, _schemaformUtils.getFormDOM)(form);\n(0, _chai.expect)(formDOM.querySelectorAll('input,select').length).to.equal(19);",
              "err": {},
              "uuid": "72939f4d-2e90-405e-8f8a-da76a18713c6",
              "parentUUID": "a785c62d-8b8f-44e3-bfb0-665e17ea59c0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should submit with valid data",
              "fullTitle": "Pensions marriage history should submit with valid data",
              "timedOut": false,
              "duration": 75,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var onSubmit = _sinon.default.spy();\nvar form = _testUtils.default.renderIntoDocument( /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  schema: schema,\n  definitions: _form.default.defaultDefinitions,\n  onSubmit: onSubmit,\n  uiSchema: uiSchema\n}));\nvar formDOM = (0, _schemaformUtils.getFormDOM)(form);\nformDOM.fillData('#root_spouseFullName_first', 'test');\nformDOM.fillData('#root_spouseFullName_last', 'test');\nformDOM.fillData('#root_dateOfMarriageMonth', '3');\nformDOM.fillData('#root_dateOfMarriageDay', '3');\nformDOM.fillData('#root_dateOfMarriageYear', '2001');\nformDOM.fillData('#root_locationOfMarriage', 'The Pacific');\nformDOM.fillData('#root_marriageType_4', 'Other');\nformDOM.fillData('#root_otherExplanation', 'Something');\nformDOM.fillData('#root_view\\\\:pastMarriage_reasonForSeparation_1', 'Divorced');\nformDOM.fillData('#root_view\\\\:pastMarriage_dateOfSeparationMonth', '3');\nformDOM.fillData('#root_view\\\\:pastMarriage_dateOfSeparationDay', '3');\nformDOM.fillData('#root_view\\\\:pastMarriage_dateOfSeparationYear', '2002');\nformDOM.fillData('#root_view\\\\:pastMarriage_locationOfSeparation', 'The Atlantic');\n(0, _schemaformUtils.submitForm)(form);\n(0, _chai.expect)(formDOM.querySelectorAll('.usa-input-error').length).to.equal(0);\n(0, _chai.expect)(onSubmit.called).to.be.true;",
              "err": {},
              "uuid": "dcef3eb5-58ad-4a23-b02f-88e0bc1d8939",
              "parentUUID": "a785c62d-8b8f-44e3-bfb0-665e17ea59c0",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [
            {
              "uuid": "ec9a9e55-39de-488f-829c-fccc0e20e2b6",
              "title": "page title",
              "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/config/marriageHistory.unit.spec.jsx",
              "file": "/src/applications/pensions/tests/config/marriageHistory.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "uses word for index",
                  "fullTitle": "Pensions marriage history page title uses word for index",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)(pageTitle({}, {\n  pagePerItemIndex: 0\n})).to.equal('First marriage');",
                  "err": {},
                  "uuid": "990a4c8b-5417-4582-95c9-fb4f0cabcd8a",
                  "parentUUID": "ec9a9e55-39de-488f-829c-fccc0e20e2b6",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "uses word for index",
                  "fullTitle": "Pensions marriage history page title uses word for index",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)(pageTitle({}, {\n  pagePerItemIndex: 49\n})).to.equal('50th marriage');",
                  "err": {},
                  "uuid": "5aaf7f7b-93e2-4083-a321-44fa23b247c9",
                  "parentUUID": "ec9a9e55-39de-488f-829c-fccc0e20e2b6",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "uses number when at index ten or greater",
                  "fullTitle": "Pensions marriage history page title uses number when at index ten or greater",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)(pageTitle({}, {\n  pagePerItemIndex: 10\n})).to.equal('Eleventh marriage');",
                  "err": {},
                  "uuid": "16fada83-a8fd-4e64-9d62-ebe001c48708",
                  "parentUUID": "ec9a9e55-39de-488f-829c-fccc0e20e2b6",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "uses word for index",
                  "fullTitle": "Pensions marriage history page title uses word for index",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)(pageTitle({})).to.equal('First marriage');",
                  "err": {},
                  "uuid": "30186a46-6a29-4d8f-9df5-be6f09af4573",
                  "parentUUID": "ec9a9e55-39de-488f-829c-fccc0e20e2b6",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "990a4c8b-5417-4582-95c9-fb4f0cabcd8a",
                "5aaf7f7b-93e2-4083-a321-44fa23b247c9",
                "16fada83-a8fd-4e64-9d62-ebe001c48708",
                "30186a46-6a29-4d8f-9df5-be6f09af4573"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "b234394b-08a4-4b48-aadb-b9586d649424",
              "title": "hideIf current marriage",
              "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/config/marriageHistory.unit.spec.jsx",
              "file": "/src/applications/pensions/tests/config/marriageHistory.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "does not hide if married and not last",
                  "fullTitle": "Pensions marriage history hideIf current marriage does not hide if married and not last",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var result = hideIfCurrentMarriage({\n  maritalStatus: 'Married',\n  marriages: [{}, {}]\n}, 0);\n(0, _chai.expect)(result).to.be.false;",
                  "err": {},
                  "uuid": "ba75b84e-52d3-4a33-acc9-e1a90a48990b",
                  "parentUUID": "b234394b-08a4-4b48-aadb-b9586d649424",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "does not hide if not married",
                  "fullTitle": "Pensions marriage history hideIf current marriage does not hide if not married",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var result = hideIfCurrentMarriage({\n  marriages: [{}]\n}, 0);\n(0, _chai.expect)(result).to.be.false;",
                  "err": {},
                  "uuid": "0a2637f4-42d2-48f1-9252-1a22896b51de",
                  "parentUUID": "b234394b-08a4-4b48-aadb-b9586d649424",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "hides if married and last",
                  "fullTitle": "Pensions marriage history hideIf current marriage hides if married and last",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var result = hideIfCurrentMarriage({\n  maritalStatus: 'Married',\n  marriages: [{}]\n}, 0);\n(0, _chai.expect)(result).to.be.true;",
                  "err": {},
                  "uuid": "5859b4cc-d70f-44da-bb1f-31e38ef80fb9",
                  "parentUUID": "b234394b-08a4-4b48-aadb-b9586d649424",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "ba75b84e-52d3-4a33-acc9-e1a90a48990b",
                "0a2637f4-42d2-48f1-9252-1a22896b51de",
                "5859b4cc-d70f-44da-bb1f-31e38ef80fb9"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            }
          ],
          "passes": [
            "e46c7b59-358c-463b-b36f-a9df8972f066",
            "72939f4d-2e90-405e-8f8a-da76a18713c6",
            "dcef3eb5-58ad-4a23-b02f-88e0bc1d8939"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 110,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "44b3c8ed-2200-45d5-9e79-bc688fb88a87",
          "title": "pension service periods page",
          "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/chapters/02-military-history/servicePeriod.unit.spec.jsx",
          "file": "/src/applications/pensions/tests/chapters/02-military-history/servicePeriod.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should render with all fields and buttons",
              "fullTitle": "pension service periods page should render with all fields and buttons",
              "timedOut": false,
              "duration": 16,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); });",
              "err": {},
              "uuid": "70d02878-eb60-4990-9fa3-c07d5d944e06",
              "parentUUID": "44b3c8ed-2200-45d5-9e79-bc688fb88a87",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should display warning if the veteran did not serve during a wartime period",
              "fullTitle": "pension service periods page should display warning if the veteran did not serve during a wartime period",
              "timedOut": false,
              "duration": 131,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); });",
              "err": {},
              "uuid": "26b774c8-ac8a-49e9-8d66-f726907361c0",
              "parentUUID": "44b3c8ed-2200-45d5-9e79-bc688fb88a87",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should not allow submit with errors",
              "fullTitle": "pension service periods page should not allow submit with errors",
              "timedOut": false,
              "duration": 31,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); });",
              "err": {},
              "uuid": "08d1d158-b2f5-4852-9e96-387b42441b5d",
              "parentUUID": "44b3c8ed-2200-45d5-9e79-bc688fb88a87",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should submit with no errors with all required fields filled in",
              "fullTitle": "pension service periods page should submit with no errors with all required fields filled in",
              "timedOut": false,
              "duration": 66,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); });",
              "err": {},
              "uuid": "5e11ea0b-9921-4181-998c-9e3fc711129e",
              "parentUUID": "44b3c8ed-2200-45d5-9e79-bc688fb88a87",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "70d02878-eb60-4990-9fa3-c07d5d944e06",
            "26b774c8-ac8a-49e9-8d66-f726907361c0",
            "08d1d158-b2f5-4852-9e96-387b42441b5d",
            "5e11ea0b-9921-4181-998c-9e3fc711129e"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 244,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "c264bc3c-8198-4af0-970d-2a8b1e11870a",
          "title": "Financial information net worth estimation pension page",
          "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/chapters/05-financial-information/netWorthEstimation.unit.spec.jsx",
          "file": "/src/applications/pensions/tests/chapters/05-financial-information/netWorthEstimation.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "8f7e8e07-ee88-42fc-a5e6-c46b05f09502",
              "title": "net worth estimation page",
              "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/chapters/05-financial-information/netWorthEstimation.unit.spec.jsx",
              "file": "/src/applications/pensions/tests/chapters/05-financial-information/netWorthEstimation.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should show the correct number of errors on submit for web components",
                  "fullTitle": "Financial information net worth estimation pension page net worth estimation page should show the correct number of errors on submit for web components",
                  "timedOut": false,
                  "duration": 19,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var _render4 = (0, _react2.render)( /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  definitions: formConfig.defaultDefinitions,\n  schema: schema,\n  uiSchema: uiSchema,\n  data: data,\n  formData: {}\n})),\n    container = _render4.container,\n    getByRole = _render4.getByRole;\ngetByRole('button', {\n  name: /submit/i\n}).click();\nvar nodes = Array.from(container.querySelectorAll(\"\".concat(expectedFieldTypesWebComponents, \", \").concat(wrapperWebComponents)));\nvar errors = nodes.filter(function (node) {\n  return node.error;\n});\n(0, _chai.expect)(errors).to.have.lengthOf(expectedNumberOfErrors);",
                  "err": {},
                  "uuid": "8fa6cef0-850a-4c20-a687-069d8a3771d9",
                  "parentUUID": "8f7e8e07-ee88-42fc-a5e6-c46b05f09502",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "8fa6cef0-850a-4c20-a687-069d8a3771d9"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 19,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "2932a85b-2e8b-40e1-b1b1-c7673e4e4569",
              "title": "net worth estimation page",
              "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/chapters/05-financial-information/netWorthEstimation.unit.spec.jsx",
              "file": "/src/applications/pensions/tests/chapters/05-financial-information/netWorthEstimation.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should have appropriate number of web components",
                  "fullTitle": "Financial information net worth estimation pension page net worth estimation page should have appropriate number of web components",
                  "timedOut": false,
                  "duration": 4,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var _render3 = (0, _react2.render)( /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  definitions: formConfig.defaultDefinitions,\n  schema: schema,\n  uiSchema: uiSchema,\n  data: data,\n  formData: {}\n})),\n    container = _render3.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypesWebComponents)).to.have.lengthOf(expectedNumberOfFields);",
                  "err": {},
                  "uuid": "0714dd97-3c96-4502-a56d-6551ee633876",
                  "parentUUID": "2932a85b-2e8b-40e1-b1b1-c7673e4e4569",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "0714dd97-3c96-4502-a56d-6551ee633876"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 4,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "c10380ee-4403-4dec-a698-a00b733bd4ee",
          "title": "pension applicant information page",
          "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/chapters/01-applicant-information/applicantInformation.unit.spec.jsx",
          "file": "/src/applications/pensions/tests/chapters/01-applicant-information/applicantInformation.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should not allow submit with errors",
              "fullTitle": "pension applicant information page should not allow submit with errors",
              "timedOut": false,
              "duration": 13,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); });",
              "err": {},
              "uuid": "4db619ac-96ac-4f35-8bdc-ea4e77da3df8",
              "parentUUID": "c10380ee-4403-4dec-a698-a00b733bd4ee",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should render with all alerts, fields and buttons",
              "fullTitle": "pension applicant information page should render with all alerts, fields and buttons",
              "timedOut": false,
              "duration": 8,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); });",
              "err": {},
              "uuid": "0c71b2d5-38ec-4699-a976-94f9dacbb0a7",
              "parentUUID": "c10380ee-4403-4dec-a698-a00b733bd4ee",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should submit with no errors with all required fields filled in",
              "fullTitle": "pension applicant information page should submit with no errors with all required fields filled in",
              "timedOut": false,
              "duration": 28,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); });",
              "err": {},
              "uuid": "c5950e56-baf4-456f-b2c1-9df14cf5e208",
              "parentUUID": "c10380ee-4403-4dec-a698-a00b733bd4ee",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [
            {
              "uuid": "90085e90-29a9-458f-8275-b3a0be960754",
              "title": "isOver65",
              "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/chapters/01-applicant-information/applicantInformation.unit.spec.jsx",
              "file": "/src/applications/pensions/tests/chapters/01-applicant-information/applicantInformation.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return true if veteranDateOfBirth is over 65 years ago",
                  "fullTitle": "pension applicant information page isOver65 should return true if veteranDateOfBirth is over 65 years ago",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var over65 = (0, _applicantInformation.isOver65)({\n  veteranDateOfBirth: '1950-01-01'\n}, (0, _moment.default)('2020-01-01'));\n(0, _chai.expect)(over65).to.be.true;",
                  "err": {},
                  "uuid": "4f0eee54-9498-4b90-89ec-08475314f8ed",
                  "parentUUID": "90085e90-29a9-458f-8275-b3a0be960754",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return false if veteranDateOfBirth is under 65 years ago",
                  "fullTitle": "pension applicant information page isOver65 should return false if veteranDateOfBirth is under 65 years ago",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var over65 = (0, _applicantInformation.isOver65)({\n  veteranDateOfBirth: '2000-01-01'\n}, (0, _moment.default)('2020-01-01'));\n(0, _chai.expect)(over65).to.be.false;",
                  "err": {},
                  "uuid": "05c79090-e16e-44ab-b4d2-997cc2ad7491",
                  "parentUUID": "90085e90-29a9-458f-8275-b3a0be960754",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return undefined if veteranDateOfBirth is invalid or null",
                  "fullTitle": "pension applicant information page isOver65 should return undefined if veteranDateOfBirth is invalid or null",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var over65 = (0, _applicantInformation.isOver65)({\n  veteranDateOfBirth: null\n}, (0, _moment.default)('2020-01-01'));\n(0, _chai.expect)(over65).to.be.undefined;",
                  "err": {},
                  "uuid": "03bdb4a0-565e-4c5d-b1b0-04af68504b66",
                  "parentUUID": "90085e90-29a9-458f-8275-b3a0be960754",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "4f0eee54-9498-4b90-89ec-08475314f8ed",
                "05c79090-e16e-44ab-b4d2-997cc2ad7491",
                "03bdb4a0-565e-4c5d-b1b0-04af68504b66"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "dd62ad96-1497-499b-ab34-c371cc3ab145",
              "title": "setDefaultIsOver65",
              "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/chapters/01-applicant-information/applicantInformation.unit.spec.jsx",
              "file": "/src/applications/pensions/tests/chapters/01-applicant-information/applicantInformation.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should update isOver65 if veteranDateOfBirth changes",
                  "fullTitle": "pension applicant information page setDefaultIsOver65 should update isOver65 if veteranDateOfBirth changes",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var formData = (0, _applicantInformation.setDefaultIsOver65)({\n  veteranDateOfBirth: '2000-01-01',\n  isOver65: false\n}, {\n  veteranDateOfBirth: '1950-01-01',\n  isOver65: false\n}, (0, _moment.default)('2020-01-01'));\n(0, _chai.expect)(formData.isOver65).to.be.true;",
                  "err": {},
                  "uuid": "93638293-cbe1-44a5-afab-2e13bde57f61",
                  "parentUUID": "dd62ad96-1497-499b-ab34-c371cc3ab145",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should change nothing if veteranDateOfBirth is unchanged",
                  "fullTitle": "pension applicant information page setDefaultIsOver65 should change nothing if veteranDateOfBirth is unchanged",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var formData = (0, _applicantInformation.setDefaultIsOver65)({\n  veteranDateOfBirth: '1950-01-01',\n  isOver65: false\n}, {\n  veteranDateOfBirth: '1950-01-01',\n  isOver65: false\n}, (0, _moment.default)('2020-01-01'));\n(0, _chai.expect)(formData.isOver65).to.be.false;",
                  "err": {},
                  "uuid": "456e7f92-e352-4f1d-aa6b-1269517e4486",
                  "parentUUID": "dd62ad96-1497-499b-ab34-c371cc3ab145",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "93638293-cbe1-44a5-afab-2e13bde57f61",
                "456e7f92-e352-4f1d-aa6b-1269517e4486"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            }
          ],
          "passes": [
            "4db619ac-96ac-4f35-8bdc-ea4e77da3df8",
            "0c71b2d5-38ec-4699-a976-94f9dacbb0a7",
            "c5950e56-baf4-456f-b2c1-9df14cf5e208"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 49,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "c96b9400-c5f6-45b9-9fd7-796a51d4ccdf",
          "title": "Unreimbursed care expenses pension page",
          "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/chapters/05-financial-information/hasCareExpenses.unit.spec.jsx",
          "file": "/src/applications/pensions/tests/chapters/05-financial-information/hasCareExpenses.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "43f52aa3-6f07-46a0-8275-b3ac24cf55fa",
              "title": "Has care expenses page",
              "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/chapters/05-financial-information/hasCareExpenses.unit.spec.jsx",
              "file": "/src/applications/pensions/tests/chapters/05-financial-information/hasCareExpenses.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should have appropriate number of web components",
                  "fullTitle": "Unreimbursed care expenses pension page Has care expenses page should have appropriate number of web components",
                  "timedOut": false,
                  "duration": 6,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var _render3 = (0, _react2.render)( /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  definitions: formConfig.defaultDefinitions,\n  schema: schema,\n  uiSchema: uiSchema,\n  data: data,\n  formData: {}\n})),\n    container = _render3.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypesWebComponents)).to.have.lengthOf(expectedNumberOfFields);",
                  "err": {},
                  "uuid": "eba07778-9556-488f-b258-4901566a4384",
                  "parentUUID": "43f52aa3-6f07-46a0-8275-b3ac24cf55fa",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "eba07778-9556-488f-b258-4901566a4384"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 6,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "b331ca02-8e2a-40eb-a48c-c7d7e21431e7",
              "title": "Has care expenses page",
              "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/chapters/05-financial-information/hasCareExpenses.unit.spec.jsx",
              "file": "/src/applications/pensions/tests/chapters/05-financial-information/hasCareExpenses.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should show the correct number of errors on submit for web components",
                  "fullTitle": "Unreimbursed care expenses pension page Has care expenses page should show the correct number of errors on submit for web components",
                  "timedOut": false,
                  "duration": 12,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var _render4 = (0, _react2.render)( /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  definitions: formConfig.defaultDefinitions,\n  schema: schema,\n  uiSchema: uiSchema,\n  data: data,\n  formData: {}\n})),\n    container = _render4.container,\n    getByRole = _render4.getByRole;\ngetByRole('button', {\n  name: /submit/i\n}).click();\nvar nodes = Array.from(container.querySelectorAll(\"\".concat(expectedFieldTypesWebComponents, \", \").concat(wrapperWebComponents)));\nvar errors = nodes.filter(function (node) {\n  return node.error;\n});\n(0, _chai.expect)(errors).to.have.lengthOf(expectedNumberOfErrors);",
                  "err": {},
                  "uuid": "1bcc7a0f-fe4c-428b-ba7a-c36f40536476",
                  "parentUUID": "b331ca02-8e2a-40eb-a48c-c7d7e21431e7",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "1bcc7a0f-fe4c-428b-ba7a-c36f40536476"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 12,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "3add0b17-f085-4215-9f20-62a127f0b11f",
          "title": "web component tests",
          "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/chapters/02-military-history/generalHistory.unit.spec.jsx",
          "file": "/src/applications/pensions/tests/chapters/02-military-history/generalHistory.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "c6f9aa1a-f7cc-4ae5-9e38-809aabdbd48f",
              "title": "military history page",
              "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/chapters/02-military-history/generalHistory.unit.spec.jsx",
              "file": "/src/applications/pensions/tests/chapters/02-military-history/generalHistory.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should show the correct number of errors on submit for web components",
                  "fullTitle": "web component tests military history page should show the correct number of errors on submit for web components",
                  "timedOut": false,
                  "duration": 17,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var _render4 = (0, _react2.render)( /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  definitions: formConfig.defaultDefinitions,\n  schema: schema,\n  uiSchema: uiSchema,\n  data: data,\n  formData: {}\n})),\n    container = _render4.container,\n    getByRole = _render4.getByRole;\ngetByRole('button', {\n  name: /submit/i\n}).click();\nvar nodes = Array.from(container.querySelectorAll(\"\".concat(expectedFieldTypesWebComponents, \", \").concat(wrapperWebComponents)));\nvar errors = nodes.filter(function (node) {\n  return node.error;\n});\n(0, _chai.expect)(errors).to.have.lengthOf(expectedNumberOfErrors);",
                  "err": {},
                  "uuid": "118db25f-17c3-4124-943a-7fcab5760c90",
                  "parentUUID": "c6f9aa1a-f7cc-4ae5-9e38-809aabdbd48f",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "118db25f-17c3-4124-943a-7fcab5760c90"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 17,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "7359580e-07e2-4709-891c-3b931263aebe",
              "title": "military history page",
              "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/chapters/02-military-history/generalHistory.unit.spec.jsx",
              "file": "/src/applications/pensions/tests/chapters/02-military-history/generalHistory.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should have appropriate number of web components",
                  "fullTitle": "web component tests military history page should have appropriate number of web components",
                  "timedOut": false,
                  "duration": 6,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var _render3 = (0, _react2.render)( /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  definitions: formConfig.defaultDefinitions,\n  schema: schema,\n  uiSchema: uiSchema,\n  data: data,\n  formData: {}\n})),\n    container = _render3.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypesWebComponents)).to.have.lengthOf(expectedNumberOfFields);",
                  "err": {},
                  "uuid": "4adc2420-f166-405d-8a37-758ea56bbe91",
                  "parentUUID": "7359580e-07e2-4709-891c-3b931263aebe",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "4adc2420-f166-405d-8a37-758ea56bbe91"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 6,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "ca55160c-cc0f-415b-afd5-9aaf1108e987",
          "title": "financial information home ownership pension page",
          "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/chapters/05-financial-information/homeOwnership.unit.spec.jsx",
          "file": "/src/applications/pensions/tests/chapters/05-financial-information/homeOwnership.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "a8641f5a-8a11-4af5-b1ed-c08f746682fc",
              "title": "home ownership page",
              "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/chapters/05-financial-information/homeOwnership.unit.spec.jsx",
              "file": "/src/applications/pensions/tests/chapters/05-financial-information/homeOwnership.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should show the correct number of errors on submit for web components",
                  "fullTitle": "financial information home ownership pension page home ownership page should show the correct number of errors on submit for web components",
                  "timedOut": false,
                  "duration": 9,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var _render4 = (0, _react2.render)( /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  definitions: formConfig.defaultDefinitions,\n  schema: schema,\n  uiSchema: uiSchema,\n  data: data,\n  formData: {}\n})),\n    container = _render4.container,\n    getByRole = _render4.getByRole;\ngetByRole('button', {\n  name: /submit/i\n}).click();\nvar nodes = Array.from(container.querySelectorAll(\"\".concat(expectedFieldTypesWebComponents, \", \").concat(wrapperWebComponents)));\nvar errors = nodes.filter(function (node) {\n  return node.error;\n});\n(0, _chai.expect)(errors).to.have.lengthOf(expectedNumberOfErrors);",
                  "err": {},
                  "uuid": "647402d9-c5b9-413e-9465-ae16a27318ff",
                  "parentUUID": "a8641f5a-8a11-4af5-b1ed-c08f746682fc",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "647402d9-c5b9-413e-9465-ae16a27318ff"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 9,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "d0e46ef7-dc67-4c9a-8f94-af1c8831227e",
              "title": "home ownership page",
              "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/chapters/05-financial-information/homeOwnership.unit.spec.jsx",
              "file": "/src/applications/pensions/tests/chapters/05-financial-information/homeOwnership.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should have appropriate number of web components",
                  "fullTitle": "financial information home ownership pension page home ownership page should have appropriate number of web components",
                  "timedOut": false,
                  "duration": 5,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var _render3 = (0, _react2.render)( /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  definitions: formConfig.defaultDefinitions,\n  schema: schema,\n  uiSchema: uiSchema,\n  data: data,\n  formData: {}\n})),\n    container = _render3.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypesWebComponents)).to.have.lengthOf(expectedNumberOfFields);",
                  "err": {},
                  "uuid": "4ce76c82-5bec-45f7-972e-77b886177dcb",
                  "parentUUID": "d0e46ef7-dc67-4c9a-8f94-af1c8831227e",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "4ce76c82-5bec-45f7-972e-77b886177dcb"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 5,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "144c1f20-cafc-4c08-9f12-e475c8ab2662",
          "title": "pension applicant information page",
          "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/chapters/02-military-history/generalHistory.unit.spec.jsx",
          "file": "/src/applications/pensions/tests/chapters/02-military-history/generalHistory.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should not submit with errors when Yes is selected",
              "fullTitle": "pension applicant information page should not submit with errors when Yes is selected",
              "timedOut": false,
              "duration": 25,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); });",
              "err": {},
              "uuid": "8684b49a-eff6-49ec-8786-9998e64cdab9",
              "parentUUID": "144c1f20-cafc-4c08-9f12-e475c8ab2662",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should reveal name fields",
              "fullTitle": "pension applicant information page should reveal name fields",
              "timedOut": false,
              "duration": 6,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); });",
              "err": {},
              "uuid": "ca428729-5a47-4f7b-9094-f8b2810eecd7",
              "parentUUID": "144c1f20-cafc-4c08-9f12-e475c8ab2662",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should submit with no errors when No is selected",
              "fullTitle": "pension applicant information page should submit with no errors when No is selected",
              "timedOut": false,
              "duration": 17,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); });",
              "err": {},
              "uuid": "8f3fddcf-e71e-4881-aab7-6cb62abbf509",
              "parentUUID": "144c1f20-cafc-4c08-9f12-e475c8ab2662",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "8684b49a-eff6-49ec-8786-9998e64cdab9",
            "ca428729-5a47-4f7b-9094-f8b2810eecd7",
            "8f3fddcf-e71e-4881-aab7-6cb62abbf509"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 48,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "d20851b1-ad9d-4a16-9314-ab90ae2c7f65",
          "title": "Financial information total net worth pension page",
          "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/chapters/05-financial-information/totalNetWorth.unit.spec.jsx",
          "file": "/src/applications/pensions/tests/chapters/05-financial-information/totalNetWorth.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "485bf176-c4d9-49ab-89ae-20d725294e29",
              "title": "total net worth page",
              "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/chapters/05-financial-information/totalNetWorth.unit.spec.jsx",
              "file": "/src/applications/pensions/tests/chapters/05-financial-information/totalNetWorth.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should have appropriate number of web components",
                  "fullTitle": "Financial information total net worth pension page total net worth page should have appropriate number of web components",
                  "timedOut": false,
                  "duration": 6,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var _render3 = (0, _react2.render)( /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  definitions: formConfig.defaultDefinitions,\n  schema: schema,\n  uiSchema: uiSchema,\n  data: data,\n  formData: {}\n})),\n    container = _render3.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypesWebComponents)).to.have.lengthOf(expectedNumberOfFields);",
                  "err": {},
                  "uuid": "bbae47f8-bf38-4142-b9c8-77baf517074a",
                  "parentUUID": "485bf176-c4d9-49ab-89ae-20d725294e29",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "bbae47f8-bf38-4142-b9c8-77baf517074a"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 6,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "ece34675-fe9d-4b9e-8934-e69035796f0d",
              "title": "total net worth page",
              "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/chapters/05-financial-information/totalNetWorth.unit.spec.jsx",
              "file": "/src/applications/pensions/tests/chapters/05-financial-information/totalNetWorth.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should show the correct number of errors on submit for web components",
                  "fullTitle": "Financial information total net worth pension page total net worth page should show the correct number of errors on submit for web components",
                  "timedOut": false,
                  "duration": 12,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var _render4 = (0, _react2.render)( /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  definitions: formConfig.defaultDefinitions,\n  schema: schema,\n  uiSchema: uiSchema,\n  data: data,\n  formData: {}\n})),\n    container = _render4.container,\n    getByRole = _render4.getByRole;\ngetByRole('button', {\n  name: /submit/i\n}).click();\nvar nodes = Array.from(container.querySelectorAll(\"\".concat(expectedFieldTypesWebComponents, \", \").concat(wrapperWebComponents)));\nvar errors = nodes.filter(function (node) {\n  return node.error;\n});\n(0, _chai.expect)(errors).to.have.lengthOf(expectedNumberOfErrors);",
                  "err": {},
                  "uuid": "18f5e9fd-4403-495c-898e-9362901fada5",
                  "parentUUID": "ece34675-fe9d-4b9e-8934-e69035796f0d",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "18f5e9fd-4403-495c-898e-9362901fada5"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 12,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "50f8e9fa-fe46-4c8d-aeb6-eb80f0abf600",
          "title": "Pensions: Financial information transferred assets page",
          "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/chapters/05-financial-information/transferredAssets.unit.spec.jsx",
          "file": "/src/applications/pensions/tests/chapters/05-financial-information/transferredAssets.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "4a8123b9-4403-4e1a-82ef-23f9a30ada4d",
              "title": "transferred assets page",
              "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/chapters/05-financial-information/transferredAssets.unit.spec.jsx",
              "file": "/src/applications/pensions/tests/chapters/05-financial-information/transferredAssets.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should have appropriate number of web components",
                  "fullTitle": "Pensions: Financial information transferred assets page transferred assets page should have appropriate number of web components",
                  "timedOut": false,
                  "duration": 4,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var _render3 = (0, _react2.render)( /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  definitions: formConfig.defaultDefinitions,\n  schema: schema,\n  uiSchema: uiSchema,\n  data: data,\n  formData: {}\n})),\n    container = _render3.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypesWebComponents)).to.have.lengthOf(expectedNumberOfFields);",
                  "err": {},
                  "uuid": "bd9be5b6-d0fe-4a1d-a927-a2fcf8d49ac3",
                  "parentUUID": "4a8123b9-4403-4e1a-82ef-23f9a30ada4d",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "bd9be5b6-d0fe-4a1d-a927-a2fcf8d49ac3"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 4,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "6afddefc-bb8c-41b8-a23a-8d13506c696f",
              "title": "transferred assets page",
              "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/chapters/05-financial-information/transferredAssets.unit.spec.jsx",
              "file": "/src/applications/pensions/tests/chapters/05-financial-information/transferredAssets.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should show the correct number of errors on submit for web components",
                  "fullTitle": "Pensions: Financial information transferred assets page transferred assets page should show the correct number of errors on submit for web components",
                  "timedOut": false,
                  "duration": 13,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var _render4 = (0, _react2.render)( /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  definitions: formConfig.defaultDefinitions,\n  schema: schema,\n  uiSchema: uiSchema,\n  data: data,\n  formData: {}\n})),\n    container = _render4.container,\n    getByRole = _render4.getByRole;\ngetByRole('button', {\n  name: /submit/i\n}).click();\nvar nodes = Array.from(container.querySelectorAll(\"\".concat(expectedFieldTypesWebComponents, \", \").concat(wrapperWebComponents)));\nvar errors = nodes.filter(function (node) {\n  return node.error;\n});\n(0, _chai.expect)(errors).to.have.lengthOf(expectedNumberOfErrors);",
                  "err": {},
                  "uuid": "c9c356d2-0aed-4098-a318-99b3c4be5e11",
                  "parentUUID": "6afddefc-bb8c-41b8-a23a-8d13506c696f",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "c9c356d2-0aed-4098-a318-99b3c4be5e11"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 13,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "e461107a-e493-484c-8ae7-d87f53ce4ea9",
          "title": "pension <MedicalEvidenceAlert>",
          "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/components/FormAlerts/FormAlerts.unit.spec.jsx",
          "file": "/src/applications/pensions/tests/components/FormAlerts/FormAlerts.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should render",
              "fullTitle": "pension <MedicalEvidenceAlert> should render",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _render = (0, _react2.render)( /*#__PURE__*/_react.default.createElement(_FormAlerts.MedicalEvidenceAlert, null)),\n    container = _render.container;\nvar selector = container.querySelector('va-alert');\n(0, _chai.expect)(selector).to.exist;\n(0, _chai.expect)(selector).to.contain.attr('status', 'warning');",
              "err": {},
              "uuid": "9b579e02-a6ce-479f-97a5-9c16032784aa",
              "parentUUID": "e461107a-e493-484c-8ae7-d87f53ce4ea9",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "9b579e02-a6ce-479f-97a5-9c16032784aa"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "a7a056a4-2334-412b-97d1-71ab72dc8680",
          "title": "PensionsApp",
          "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/PensionsApp.unit.spec.jsx",
          "file": "/src/applications/pensions/tests/PensionsApp.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should show VA loading indicator",
              "fullTitle": "PensionsApp should show VA loading indicator",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var mockStore = store();\nvar _render = (0, _react2.render)( /*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n  store: mockStore\n}, /*#__PURE__*/_react.default.createElement(_PensionsApp.default, {\n  location: pensionLocation\n}))),\n    container = _render.container;\n(0, _chai.expect)((0, _ui.$)('va-loading-indicator', container)).to.exist;",
              "err": {},
              "uuid": "520ce0b8-8cd8-469e-9da7-cc4b9afe412c",
              "parentUUID": "a7a056a4-2334-412b-97d1-71ab72dc8680",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should show NoFormPage",
              "fullTitle": "PensionsApp should show NoFormPage",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); });",
              "err": {},
              "uuid": "881bb7b1-7126-40f8-b232-4168189f97b6",
              "parentUUID": "a7a056a4-2334-412b-97d1-71ab72dc8680",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "520ce0b8-8cd8-469e-9da7-cc4b9afe412c",
            "881bb7b1-7126-40f8-b232-4168189f97b6"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "91437444-a743-42a2-89ae-4c86e1d1cae1",
          "title": "formatPhoneNumber",
          "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/components/SectionField.unit.spec.jsx",
          "file": "/src/applications/pensions/tests/components/SectionField.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "returns undefined for null or undefined input",
              "fullTitle": "formatPhoneNumber returns undefined for null or undefined input",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, _chai.expect)((0, _SectionField.formatPhoneNumber)(null)).to.eql('');\n(0, _chai.expect)((0, _SectionField.formatPhoneNumber)()).to.eql('');",
              "err": {},
              "uuid": "c3b845a3-64ce-4b35-a1b7-2cca41d9f2bb",
              "parentUUID": "91437444-a743-42a2-89ae-4c86e1d1cae1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "correctly converts YYYY-MM-DD to MM/DD/YYYY",
              "fullTitle": "formatPhoneNumber correctly converts YYYY-MM-DD to MM/DD/YYYY",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var inputDate = '5555555555';\nvar expectedDate = '(555) 555-5555';\nvar result = (0, _SectionField.formatPhoneNumber)(inputDate);\n(0, _chai.expect)(result).to.equal(expectedDate);",
              "err": {},
              "uuid": "2344e5c8-9a57-4244-bc24-4d624cb1ce15",
              "parentUUID": "91437444-a743-42a2-89ae-4c86e1d1cae1",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "c3b845a3-64ce-4b35-a1b7-2cca41d9f2bb",
            "2344e5c8-9a57-4244-bc24-4d624cb1ce15"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "749b23ce-309a-42aa-83cf-2e90742472fa",
          "title": "pension current employment page",
          "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/chapters/03-health-and-employment-information/currentEmployment.unit.spec.jsx",
          "file": "/src/applications/pensions/tests/chapters/03-health-and-employment-information/currentEmployment.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "d94e3933-22e2-4d96-8fc1-361c0c8391b8",
              "title": "current employment information page",
              "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/chapters/03-health-and-employment-information/currentEmployment.unit.spec.jsx",
              "file": "/src/applications/pensions/tests/chapters/03-health-and-employment-information/currentEmployment.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should have appropriate number of web components",
                  "fullTitle": "pension current employment page current employment information page should have appropriate number of web components",
                  "timedOut": false,
                  "duration": 5,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var _render3 = (0, _react2.render)( /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  definitions: formConfig.defaultDefinitions,\n  schema: schema,\n  uiSchema: uiSchema,\n  data: data,\n  formData: {}\n})),\n    container = _render3.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypesWebComponents)).to.have.lengthOf(expectedNumberOfFields);",
                  "err": {},
                  "uuid": "5c80b560-c09d-4e46-9247-b5809e576c42",
                  "parentUUID": "d94e3933-22e2-4d96-8fc1-361c0c8391b8",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "5c80b560-c09d-4e46-9247-b5809e576c42"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 5,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "ff8df051-3709-49af-87fd-64a060f0dfca",
              "title": "current employment information page",
              "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/chapters/03-health-and-employment-information/currentEmployment.unit.spec.jsx",
              "file": "/src/applications/pensions/tests/chapters/03-health-and-employment-information/currentEmployment.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should show the correct number of errors on submit for web components",
                  "fullTitle": "pension current employment page current employment information page should show the correct number of errors on submit for web components",
                  "timedOut": false,
                  "duration": 7,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var _render4 = (0, _react2.render)( /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  definitions: formConfig.defaultDefinitions,\n  schema: schema,\n  uiSchema: uiSchema,\n  data: data,\n  formData: {}\n})),\n    container = _render4.container,\n    getByRole = _render4.getByRole;\ngetByRole('button', {\n  name: /submit/i\n}).click();\nvar nodes = Array.from(container.querySelectorAll(\"\".concat(expectedFieldTypesWebComponents, \", \").concat(wrapperWebComponents)));\nvar errors = nodes.filter(function (node) {\n  return node.error;\n});\n(0, _chai.expect)(errors).to.have.lengthOf(expectedNumberOfErrors);",
                  "err": {},
                  "uuid": "02561f7c-1f35-4203-a77b-4b920c4d2f40",
                  "parentUUID": "ff8df051-3709-49af-87fd-64a060f0dfca",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "02561f7c-1f35-4203-a77b-4b920c4d2f40"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 7,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "806f9fd8-b2bd-4614-b026-4663d25a18c0",
          "title": "medicaid status pension page",
          "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/chapters/03-health-and-employment-information/medicaidStatus.unit.spec.jsx",
          "file": "/src/applications/pensions/tests/chapters/03-health-and-employment-information/medicaidStatus.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "b53b60f5-6c62-401a-ab25-1e09788982a7",
              "title": "medicaid status page",
              "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/chapters/03-health-and-employment-information/medicaidStatus.unit.spec.jsx",
              "file": "/src/applications/pensions/tests/chapters/03-health-and-employment-information/medicaidStatus.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should show the correct number of errors on submit for web components",
                  "fullTitle": "medicaid status pension page medicaid status page should show the correct number of errors on submit for web components",
                  "timedOut": false,
                  "duration": 6,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var _render4 = (0, _react2.render)( /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  definitions: formConfig.defaultDefinitions,\n  schema: schema,\n  uiSchema: uiSchema,\n  data: data,\n  formData: {}\n})),\n    container = _render4.container,\n    getByRole = _render4.getByRole;\ngetByRole('button', {\n  name: /submit/i\n}).click();\nvar nodes = Array.from(container.querySelectorAll(\"\".concat(expectedFieldTypesWebComponents, \", \").concat(wrapperWebComponents)));\nvar errors = nodes.filter(function (node) {\n  return node.error;\n});\n(0, _chai.expect)(errors).to.have.lengthOf(expectedNumberOfErrors);",
                  "err": {},
                  "uuid": "00f78c3c-8229-48be-885c-4db39a056cb2",
                  "parentUUID": "b53b60f5-6c62-401a-ab25-1e09788982a7",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "00f78c3c-8229-48be-885c-4db39a056cb2"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 6,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "9510566c-33c0-4561-8db5-1f3a13748996",
              "title": "medicaid status page",
              "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/chapters/03-health-and-employment-information/medicaidStatus.unit.spec.jsx",
              "file": "/src/applications/pensions/tests/chapters/03-health-and-employment-information/medicaidStatus.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should have appropriate number of web components",
                  "fullTitle": "medicaid status pension page medicaid status page should have appropriate number of web components",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var _render3 = (0, _react2.render)( /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  definitions: formConfig.defaultDefinitions,\n  schema: schema,\n  uiSchema: uiSchema,\n  data: data,\n  formData: {}\n})),\n    container = _render3.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypesWebComponents)).to.have.lengthOf(expectedNumberOfFields);",
                  "err": {},
                  "uuid": "82617729-0893-4700-89b6-c8e42c0b0b97",
                  "parentUUID": "9510566c-33c0-4561-8db5-1f3a13748996",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "82617729-0893-4700-89b6-c8e42c0b0b97"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "5e9a586d-c25b-4d60-a655-c3d787f4e3d5",
          "title": "Pensions DisclosureTitle",
          "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/components/DisclosureTitle.unit.spec.jsx",
          "file": "/src/applications/pensions/tests/components/DisclosureTitle.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should render spouse name",
              "fullTitle": "Pensions DisclosureTitle should render spouse name",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var DisclosureTitle = (0, _DisclosureTitle.default)('spouse', 'Blah blah');\nvar tree = _skinDeep.default.shallowRender( /*#__PURE__*/_react.default.createElement(DisclosureTitle, {\n  id: \"id\",\n  formData: {\n    maritalStatus: 'Married',\n    marriages: [{\n      spouseFullName: {\n        first: 'John',\n        last: 'Doe'\n      }\n    }, {\n      spouseFullName: {\n        first: 'Jane',\n        last: 'Doe'\n      }\n    }]\n  }\n}));\n(0, _chai.expect)(tree.text()).to.contain('Jane Doe');\n(0, _chai.expect)(tree.text()).to.contain('Blah blah');",
              "err": {},
              "uuid": "28b82e83-71da-4935-ad9e-105c926291b3",
              "parentUUID": "5e9a586d-c25b-4d60-a655-c3d787f4e3d5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should render",
              "fullTitle": "Pensions DisclosureTitle should render",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var DisclosureTitle = (0, _DisclosureTitle.default)('test', 'Blah blah');\nvar tree = _skinDeep.default.shallowRender( /*#__PURE__*/_react.default.createElement(DisclosureTitle, {\n  id: \"id\",\n  formData: {\n    test: {\n      first: 'Jane',\n      last: 'Doe'\n    }\n  }\n}));\n(0, _chai.expect)(tree.text()).to.contain('Jane Doe');\n(0, _chai.expect)(tree.text()).to.contain('Blah blah');",
              "err": {},
              "uuid": "59e2a36e-13f0-4dab-ae45-2ba61984bb34",
              "parentUUID": "5e9a586d-c25b-4d60-a655-c3d787f4e3d5",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "28b82e83-71da-4935-ad9e-105c926291b3",
            "59e2a36e-13f0-4dab-ae45-2ba61984bb34"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "96ddcb77-3d62-4009-9917-6019a7fc088d",
          "title": "Pension: Financial information, receives income page",
          "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/chapters/05-financial-information/receivesIncome.unit.spec.jsx",
          "file": "/src/applications/pensions/tests/chapters/05-financial-information/receivesIncome.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "79d265fb-9d1e-4025-832c-33e5384ae101",
              "title": "Gross monthly income page",
              "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/chapters/05-financial-information/receivesIncome.unit.spec.jsx",
              "file": "/src/applications/pensions/tests/chapters/05-financial-information/receivesIncome.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should have appropriate number of web components",
                  "fullTitle": "Pension: Financial information, receives income page Gross monthly income page should have appropriate number of web components",
                  "timedOut": false,
                  "duration": 4,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var _render3 = (0, _react2.render)( /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  definitions: formConfig.defaultDefinitions,\n  schema: schema,\n  uiSchema: uiSchema,\n  data: data,\n  formData: {}\n})),\n    container = _render3.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypesWebComponents)).to.have.lengthOf(expectedNumberOfFields);",
                  "err": {},
                  "uuid": "8ea52f95-a5a5-4986-9620-548cbc114aa7",
                  "parentUUID": "79d265fb-9d1e-4025-832c-33e5384ae101",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "8ea52f95-a5a5-4986-9620-548cbc114aa7"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 4,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "338d0af9-456e-41db-94d9-a771dfa69382",
              "title": "Gross monthly income page",
              "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/chapters/05-financial-information/receivesIncome.unit.spec.jsx",
              "file": "/src/applications/pensions/tests/chapters/05-financial-information/receivesIncome.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should show the correct number of errors on submit for web components",
                  "fullTitle": "Pension: Financial information, receives income page Gross monthly income page should show the correct number of errors on submit for web components",
                  "timedOut": false,
                  "duration": 15,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var _render4 = (0, _react2.render)( /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  definitions: formConfig.defaultDefinitions,\n  schema: schema,\n  uiSchema: uiSchema,\n  data: data,\n  formData: {}\n})),\n    container = _render4.container,\n    getByRole = _render4.getByRole;\ngetByRole('button', {\n  name: /submit/i\n}).click();\nvar nodes = Array.from(container.querySelectorAll(\"\".concat(expectedFieldTypesWebComponents, \", \").concat(wrapperWebComponents)));\nvar errors = nodes.filter(function (node) {\n  return node.error;\n});\n(0, _chai.expect)(errors).to.have.lengthOf(expectedNumberOfErrors);",
                  "err": {},
                  "uuid": "b244ff6c-fa78-4a82-91a3-ad4c4867b160",
                  "parentUUID": "338d0af9-456e-41db-94d9-a771dfa69382",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "b244ff6c-fa78-4a82-91a3-ad4c4867b160"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 15,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "912cd3f1-ec74-4ea3-809a-690b7377a8dd",
          "title": "current spouse marital history",
          "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/chapters/04-household-information/currentSpouseMaritalHistory.unit.spec.jsx",
          "file": "/src/applications/pensions/tests/chapters/04-household-information/currentSpouseMaritalHistory.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should render web components in form correctly",
              "fullTitle": "current spouse marital history should render web components in form correctly",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var pageTitle = 'current spouse marital history';\nvar expectedNumberOfFields = 1;\n(0, _pageTests.testNumberOfWebComponentFields)(_form.default, _currentSpouseMaritalHistory.default.schema, _currentSpouseMaritalHistory.default.uiSchema, expectedNumberOfFields, pageTitle);\nvar expectedNumberOfErrors = 1;\n(0, _pageTests.testNumberOfErrorsOnSubmitForWebComponents)(_form.default, _currentSpouseMaritalHistory.default.schema, _currentSpouseMaritalHistory.default.uiSchema, expectedNumberOfErrors, pageTitle);",
              "err": {},
              "uuid": "b68edeb6-f032-41d7-92aa-da68f0ecfaed",
              "parentUUID": "912cd3f1-ec74-4ea3-809a-690b7377a8dd",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "b68edeb6-f032-41d7-92aa-da68f0ecfaed"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "1a063f66-629f-46b7-b880-dcb0e41a103c",
          "title": "Pensions DependentField",
          "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/components/DependentField.unit.spec.jsx",
          "file": "/src/applications/pensions/tests/components/DependentField.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should render",
              "fullTitle": "Pensions DependentField should render",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var tree = _skinDeep.default.shallowRender( /*#__PURE__*/_react.default.createElement(_DependentField.default, {\n  id: \"id\",\n  formData: {\n    fullName: {\n      first: 'Jane',\n      last: 'Doe'\n    },\n    relationship: 'child'\n  }\n}));\n(0, _chai.expect)(tree.text()).to.contain('Jane Doe');\n(0, _chai.expect)(tree.text()).to.contain('Child');",
              "err": {},
              "uuid": "10f02026-068d-43f3-b01e-7213b4043f4f",
              "parentUUID": "1a063f66-629f-46b7-b880-dcb0e41a103c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "10f02026-068d-43f3-b01e-7213b4043f4f"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "f2d3094a-db7b-4da5-8b73-c26cf8485d55",
          "title": "Pensions document upload",
          "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/config/documents.unit.spec.jsx",
          "file": "/src/applications/pensions/tests/config/documents.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should render",
              "fullTitle": "Pensions document upload should render",
              "timedOut": false,
              "duration": 11,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var form = (0, _react2.render)( /*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n  store: _helpers.uploadStore\n}, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  schema: schema,\n  definitions: _form.default.defaultDefinitions,\n  uiSchema: uiSchema,\n  data: {}\n})));\nvar formDOM = (0, _schemaformUtils.getFormDOM)(form);\n(0, _chai.expect)(formDOM.querySelectorAll('input,select').length).to.equal(1);",
              "err": {},
              "uuid": "1a8629ba-f21a-4a96-8383-0d5345f0f610",
              "parentUUID": "f2d3094a-db7b-4da5-8b73-c26cf8485d55",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should submit empty form",
              "fullTitle": "Pensions document upload should submit empty form",
              "timedOut": false,
              "duration": 7,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var onSubmit = _sinon.default.spy();\nvar form = (0, _react2.render)( /*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n  store: _helpers.uploadStore\n}, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  schema: schema,\n  definitions: _form.default.defaultDefinitions,\n  onSubmit: onSubmit,\n  uiSchema: uiSchema,\n  data: {}\n})));\nvar formDOM = (0, _schemaformUtils.getFormDOM)(form);\nformDOM.submitForm();\n(0, _chai.expect)(formDOM.querySelectorAll('.usa-input-error').length).to.equal(0);\n(0, _chai.expect)(onSubmit.called).to.be.true;",
              "err": {},
              "uuid": "9abe04aa-187c-4bf8-9639-c46f232fab09",
              "parentUUID": "f2d3094a-db7b-4da5-8b73-c26cf8485d55",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should submit with valid data",
              "fullTitle": "Pensions document upload should submit with valid data",
              "timedOut": false,
              "duration": 6,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var onSubmit = _sinon.default.spy();\nvar form = (0, _react2.render)( /*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n  store: _helpers.uploadStore\n}, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  schema: schema,\n  data: {\n    files: [{\n      confirmationCode: 'testing'\n    }, {\n      confirmationCode: 'testing2'\n    }]\n  },\n  definitions: _form.default.defaultDefinitions,\n  onSubmit: onSubmit,\n  uiSchema: uiSchema\n})));\nvar formDOM = (0, _schemaformUtils.getFormDOM)(form);\nformDOM.submitForm();\n(0, _chai.expect)(onSubmit.called).to.be.true;",
              "err": {},
              "uuid": "c630d648-e8a9-4dca-aa13-a6b8f14f0442",
              "parentUUID": "f2d3094a-db7b-4da5-8b73-c26cf8485d55",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "1a8629ba-f21a-4a96-8383-0d5345f0f610",
            "9abe04aa-187c-4bf8-9639-c46f232fab09",
            "c630d648-e8a9-4dca-aa13-a6b8f14f0442"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 24,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "7f359a8d-abed-49fb-a422-74b1ba6592ff",
          "title": "<Military History />",
          "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/components/SectionField.unit.spec.jsx",
          "file": "/src/applications/pensions/tests/components/SectionField.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "it renders empty previous names",
              "fullTitle": "<Military History /> it renders empty previous names",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var badPreviousNames = {\n  previousNames: [{\n    first: '',\n    middle: '',\n    last: ''\n  }]\n};\nvar _render2 = (0, _react2.render)( /*#__PURE__*/_react.default.createElement(_SectionField.MilitaryHistory, {\n  formData: badPreviousNames\n})),\n    queryByText = _render2.queryByText;\n(0, _chai.expect)(queryByText('None')).to.not.be.null;",
              "err": {},
              "uuid": "f35b3626-4e36-4eda-8a68-c44e0276fdd5",
              "parentUUID": "7f359a8d-abed-49fb-a422-74b1ba6592ff",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "it renders previous names",
              "fullTitle": "<Military History /> it renders previous names",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _render = (0, _react2.render)( /*#__PURE__*/_react.default.createElement(_SectionField.MilitaryHistory, {\n  formData: formData\n})),\n    queryByText = _render.queryByText;\n(0, _chai.expect)(queryByText('John')).to.not.be.null;",
              "err": {},
              "uuid": "0fc5668a-9a67-42e8-9117-97763cce38a8",
              "parentUUID": "7f359a8d-abed-49fb-a422-74b1ba6592ff",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f35b3626-4e36-4eda-8a68-c44e0276fdd5",
            "0fc5668a-9a67-42e8-9117-97763cce38a8"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 4,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "e94873ad-bace-48a6-b60f-5b4e58599f96",
          "title": "<WorkHistory />",
          "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/components/SectionField.unit.spec.jsx",
          "file": "/src/applications/pensions/tests/components/SectionField.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "renders with disabilities",
              "fullTitle": "<WorkHistory /> renders with disabilities",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var formData = {\n  'view:hasVisitedVaMc': false,\n  'view:workedBeforeDisabled': false,\n  'view:history': {\n    jobs: []\n  },\n  disabilities: []\n};\nvar _render4 = (0, _react2.render)( /*#__PURE__*/_react.default.createElement(_SectionField.WorkHistory, {\n  formData: formData\n})),\n    queryByText = _render4.queryByText;\n(0, _chai.expect)(queryByText('test-disability')).to.be.null;",
              "err": {},
              "uuid": "828bfdcb-d2ce-4db6-bf59-3f37cc940de2",
              "parentUUID": "e94873ad-bace-48a6-b60f-5b4e58599f96",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "renders with disabilities",
              "fullTitle": "<WorkHistory /> renders with disabilities",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var formData = {\n  'view:hasVisitedVaMc': true,\n  'view:workedBeforeDisabled': true,\n  'view:history': {\n    jobs: [{\n      name: 'test-job',\n      jobTitle: 'test-title',\n      address: {\n        street: '1234 Random street',\n        street2: 'Apt 2',\n        city: 'Nopesville',\n        state: 'VA',\n        postalCode: '12345',\n        country: 'USA'\n      },\n      daysMissed: '2',\n      annualEarnings: 60000,\n      dateRange: {\n        from: '10121999',\n        to: '10302000'\n      }\n    }]\n  },\n  disabilities: [{\n    name: 'test-disability'\n  }]\n};\nvar _render3 = (0, _react2.render)( /*#__PURE__*/_react.default.createElement(_SectionField.WorkHistory, {\n  formData: formData\n})),\n    queryByText = _render3.queryByText;\n(0, _chai.expect)(queryByText('test-disability')).to.not.be.null;",
              "err": {},
              "uuid": "6c9727a1-329f-4ea1-9ec5-a8533583a31f",
              "parentUUID": "e94873ad-bace-48a6-b60f-5b4e58599f96",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "828bfdcb-d2ce-4db6-bf59-3f37cc940de2",
            "6c9727a1-329f-4ea1-9ec5-a8533583a31f"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 4,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "173f4827-9161-47b7-b2b3-b04a5ed016cc",
          "title": "Pension: Financial information, income sources page",
          "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/chapters/05-financial-information/incomeSources.unit.spec.jsx",
          "file": "/src/applications/pensions/tests/chapters/05-financial-information/incomeSources.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "0581e23e-391d-4cad-bb81-7c2c4faf04ab",
              "title": "should not require type of income additional field",
              "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/chapters/05-financial-information/incomeSources.unit.spec.jsx",
              "file": "/src/applications/pensions/tests/chapters/05-financial-information/incomeSources.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [],
              "suites": [
                {
                  "uuid": "779479bd-ea61-4879-aa5e-96d534abca56",
                  "title": "Gross monthly income page",
                  "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/chapters/05-financial-information/incomeSources.unit.spec.jsx",
                  "file": "/src/applications/pensions/tests/chapters/05-financial-information/incomeSources.unit.spec.jsx",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "should show the correct number of errors on submit",
                      "fullTitle": "Pension: Financial information, income sources page should not require type of income additional field Gross monthly income page should show the correct number of errors on submit",
                      "timedOut": false,
                      "duration": 29,
                      "state": "passed",
                      "speed": "slow",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "var _render2 = (0, _react2.render)( /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  definitions: formConfig.defaultDefinitions,\n  schema: schema,\n  uiSchema: uiSchema,\n  data: data,\n  formData: {}\n})),\n    getByRole = _render2.getByRole,\n    queryAllByRole = _render2.queryAllByRole;\ngetByRole('button', {\n  name: /submit/i\n}).click();\nvar errors = queryAllByRole('alert');\n(0, _chai.expect)(errors).to.have.lengthOf(expectedNumberOfErrors);",
                      "err": {},
                      "uuid": "8a0507f9-47a5-4575-8b4a-c9f56aa3067b",
                      "parentUUID": "779479bd-ea61-4879-aa5e-96d534abca56",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "8a0507f9-47a5-4575-8b4a-c9f56aa3067b"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 29,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "ac9bdd69-0f5a-44cd-ad0e-6e9b9cb8a813",
                  "title": "Gross monthly income page",
                  "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/chapters/05-financial-information/incomeSources.unit.spec.jsx",
                  "file": "/src/applications/pensions/tests/chapters/05-financial-information/incomeSources.unit.spec.jsx",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "should show the correct number of errors on submit for web components",
                      "fullTitle": "Pension: Financial information, income sources page should not require type of income additional field Gross monthly income page should show the correct number of errors on submit for web components",
                      "timedOut": false,
                      "duration": 23,
                      "state": "passed",
                      "speed": "slow",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "var _render4 = (0, _react2.render)( /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  definitions: formConfig.defaultDefinitions,\n  schema: schema,\n  uiSchema: uiSchema,\n  data: data,\n  formData: {}\n})),\n    container = _render4.container,\n    getByRole = _render4.getByRole;\ngetByRole('button', {\n  name: /submit/i\n}).click();\nvar nodes = Array.from(container.querySelectorAll(\"\".concat(expectedFieldTypesWebComponents, \", \").concat(wrapperWebComponents)));\nvar errors = nodes.filter(function (node) {\n  return node.error;\n});\n(0, _chai.expect)(errors).to.have.lengthOf(expectedNumberOfErrors);",
                      "err": {},
                      "uuid": "f60f0a07-8091-465f-9d61-27a48c302144",
                      "parentUUID": "ac9bdd69-0f5a-44cd-ad0e-6e9b9cb8a813",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "f60f0a07-8091-465f-9d61-27a48c302144"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 23,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "aa450396-fa4a-4603-ae87-4d5764cb61cd",
                  "title": "Gross monthly income page",
                  "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/chapters/05-financial-information/incomeSources.unit.spec.jsx",
                  "file": "/src/applications/pensions/tests/chapters/05-financial-information/incomeSources.unit.spec.jsx",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "should have appropriate number of fields",
                      "fullTitle": "Pension: Financial information, income sources page should not require type of income additional field Gross monthly income page should have appropriate number of fields",
                      "timedOut": false,
                      "duration": 7,
                      "state": "passed",
                      "speed": "slow",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "var _render = (0, _react2.render)( /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  definitions: formConfig.defaultDefinitions,\n  schema: schema,\n  uiSchema: uiSchema,\n  data: data,\n  formData: {}\n})),\n    container = _render.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypes)).to.have.lengthOf(expectedNumberOfFields);",
                      "err": {},
                      "uuid": "db403e62-5e3b-43e4-b139-8783ef536359",
                      "parentUUID": "aa450396-fa4a-4603-ae87-4d5764cb61cd",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "db403e62-5e3b-43e4-b139-8783ef536359"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 7,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "a9552ca0-e2ef-4150-8cf4-fad2b80dfe68",
                  "title": "Gross monthly income page",
                  "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/chapters/05-financial-information/incomeSources.unit.spec.jsx",
                  "file": "/src/applications/pensions/tests/chapters/05-financial-information/incomeSources.unit.spec.jsx",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "should have appropriate number of web components",
                      "fullTitle": "Pension: Financial information, income sources page should not require type of income additional field Gross monthly income page should have appropriate number of web components",
                      "timedOut": false,
                      "duration": 6,
                      "state": "passed",
                      "speed": "slow",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "var _render3 = (0, _react2.render)( /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  definitions: formConfig.defaultDefinitions,\n  schema: schema,\n  uiSchema: uiSchema,\n  data: data,\n  formData: {}\n})),\n    container = _render3.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypesWebComponents)).to.have.lengthOf(expectedNumberOfFields);",
                      "err": {},
                      "uuid": "da1d6ebd-f768-4986-817a-7c7a4fde1943",
                      "parentUUID": "a9552ca0-e2ef-4150-8cf4-fad2b80dfe68",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "da1d6ebd-f768-4986-817a-7c7a4fde1943"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 6,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                }
              ],
              "passes": [],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "e6c19ea3-f045-4542-962c-6ad8e8878475",
              "title": "with multiple sources",
              "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/chapters/05-financial-information/incomeSources.unit.spec.jsx",
              "file": "/src/applications/pensions/tests/chapters/05-financial-information/incomeSources.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [],
              "suites": [
                {
                  "uuid": "e942b18b-ab69-438e-9eb0-55143b78a0c2",
                  "title": "Gross monthly income page",
                  "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/chapters/05-financial-information/incomeSources.unit.spec.jsx",
                  "file": "/src/applications/pensions/tests/chapters/05-financial-information/incomeSources.unit.spec.jsx",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "should have appropriate number of fields",
                      "fullTitle": "Pension: Financial information, income sources page with multiple sources Gross monthly income page should have appropriate number of fields",
                      "timedOut": false,
                      "duration": 9,
                      "state": "passed",
                      "speed": "slow",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "var _render = (0, _react2.render)( /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  definitions: formConfig.defaultDefinitions,\n  schema: schema,\n  uiSchema: uiSchema,\n  data: data,\n  formData: {}\n})),\n    container = _render.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypes)).to.have.lengthOf(expectedNumberOfFields);",
                      "err": {},
                      "uuid": "f2cdc786-b6a3-4523-a5c3-55e437968a44",
                      "parentUUID": "e942b18b-ab69-438e-9eb0-55143b78a0c2",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "f2cdc786-b6a3-4523-a5c3-55e437968a44"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 9,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "3010f70a-a5fa-4a27-8776-3b831306d58b",
                  "title": "Gross monthly income page",
                  "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/chapters/05-financial-information/incomeSources.unit.spec.jsx",
                  "file": "/src/applications/pensions/tests/chapters/05-financial-information/incomeSources.unit.spec.jsx",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "should show the correct number of errors on submit for web components",
                      "fullTitle": "Pension: Financial information, income sources page with multiple sources Gross monthly income page should show the correct number of errors on submit for web components",
                      "timedOut": false,
                      "duration": 37,
                      "state": "passed",
                      "speed": "slow",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "var _render4 = (0, _react2.render)( /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  definitions: formConfig.defaultDefinitions,\n  schema: schema,\n  uiSchema: uiSchema,\n  data: data,\n  formData: {}\n})),\n    container = _render4.container,\n    getByRole = _render4.getByRole;\ngetByRole('button', {\n  name: /submit/i\n}).click();\nvar nodes = Array.from(container.querySelectorAll(\"\".concat(expectedFieldTypesWebComponents, \", \").concat(wrapperWebComponents)));\nvar errors = nodes.filter(function (node) {\n  return node.error;\n});\n(0, _chai.expect)(errors).to.have.lengthOf(expectedNumberOfErrors);",
                      "err": {},
                      "uuid": "2482dc3a-4aa6-4d6b-9efa-119e4a3bc384",
                      "parentUUID": "3010f70a-a5fa-4a27-8776-3b831306d58b",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "2482dc3a-4aa6-4d6b-9efa-119e4a3bc384"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 37,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "6b9db2a5-ee76-4279-adfe-331a7ed32a22",
                  "title": "Gross monthly income page",
                  "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/chapters/05-financial-information/incomeSources.unit.spec.jsx",
                  "file": "/src/applications/pensions/tests/chapters/05-financial-information/incomeSources.unit.spec.jsx",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "should show the correct number of errors on submit",
                      "fullTitle": "Pension: Financial information, income sources page with multiple sources Gross monthly income page should show the correct number of errors on submit",
                      "timedOut": false,
                      "duration": 33,
                      "state": "passed",
                      "speed": "slow",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "var _render2 = (0, _react2.render)( /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  definitions: formConfig.defaultDefinitions,\n  schema: schema,\n  uiSchema: uiSchema,\n  data: data,\n  formData: {}\n})),\n    getByRole = _render2.getByRole,\n    queryAllByRole = _render2.queryAllByRole;\ngetByRole('button', {\n  name: /submit/i\n}).click();\nvar errors = queryAllByRole('alert');\n(0, _chai.expect)(errors).to.have.lengthOf(expectedNumberOfErrors);",
                      "err": {},
                      "uuid": "50dfd5bc-9c37-4fbe-9867-6ec90deef490",
                      "parentUUID": "6b9db2a5-ee76-4279-adfe-331a7ed32a22",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "50dfd5bc-9c37-4fbe-9867-6ec90deef490"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 33,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "abd63360-91c1-460b-a7ca-eeb24988aec2",
                  "title": "Gross monthly income page",
                  "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/chapters/05-financial-information/incomeSources.unit.spec.jsx",
                  "file": "/src/applications/pensions/tests/chapters/05-financial-information/incomeSources.unit.spec.jsx",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "should have appropriate number of web components",
                      "fullTitle": "Pension: Financial information, income sources page with multiple sources Gross monthly income page should have appropriate number of web components",
                      "timedOut": false,
                      "duration": 13,
                      "state": "passed",
                      "speed": "slow",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "var _render3 = (0, _react2.render)( /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  definitions: formConfig.defaultDefinitions,\n  schema: schema,\n  uiSchema: uiSchema,\n  data: data,\n  formData: {}\n})),\n    container = _render3.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypesWebComponents)).to.have.lengthOf(expectedNumberOfFields);",
                      "err": {},
                      "uuid": "aa1a130a-e38c-405a-a76e-fad6156229bd",
                      "parentUUID": "abd63360-91c1-460b-a7ca-eeb24988aec2",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "aa1a130a-e38c-405a-a76e-fad6156229bd"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 13,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                }
              ],
              "passes": [],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "c20143d6-db26-4806-86d9-77a9c72a514b",
              "title": "should include a type of income additional field",
              "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/chapters/05-financial-information/incomeSources.unit.spec.jsx",
              "file": "/src/applications/pensions/tests/chapters/05-financial-information/incomeSources.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [],
              "suites": [
                {
                  "uuid": "a5b4a1a4-5944-4e43-b9dd-f76a4c1e68a7",
                  "title": "Gross monthly income page",
                  "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/chapters/05-financial-information/incomeSources.unit.spec.jsx",
                  "file": "/src/applications/pensions/tests/chapters/05-financial-information/incomeSources.unit.spec.jsx",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "should have appropriate number of fields",
                      "fullTitle": "Pension: Financial information, income sources page should include a type of income additional field Gross monthly income page should have appropriate number of fields",
                      "timedOut": false,
                      "duration": 5,
                      "state": "passed",
                      "speed": "slow",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "var _render = (0, _react2.render)( /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  definitions: formConfig.defaultDefinitions,\n  schema: schema,\n  uiSchema: uiSchema,\n  data: data,\n  formData: {}\n})),\n    container = _render.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypes)).to.have.lengthOf(expectedNumberOfFields);",
                      "err": {},
                      "uuid": "f1838770-22d7-4bc2-91bc-2d55385e1705",
                      "parentUUID": "a5b4a1a4-5944-4e43-b9dd-f76a4c1e68a7",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "f1838770-22d7-4bc2-91bc-2d55385e1705"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 5,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "33fff287-dd47-4754-b5ff-6ebbd8789a59",
                  "title": "Gross monthly income page",
                  "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/chapters/05-financial-information/incomeSources.unit.spec.jsx",
                  "file": "/src/applications/pensions/tests/chapters/05-financial-information/incomeSources.unit.spec.jsx",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "should have appropriate number of web components",
                      "fullTitle": "Pension: Financial information, income sources page should include a type of income additional field Gross monthly income page should have appropriate number of web components",
                      "timedOut": false,
                      "duration": 4,
                      "state": "passed",
                      "speed": "slow",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "var _render3 = (0, _react2.render)( /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  definitions: formConfig.defaultDefinitions,\n  schema: schema,\n  uiSchema: uiSchema,\n  data: data,\n  formData: {}\n})),\n    container = _render3.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypesWebComponents)).to.have.lengthOf(expectedNumberOfFields);",
                      "err": {},
                      "uuid": "03a18c4d-9aab-4b6c-8f82-ac4ed9923936",
                      "parentUUID": "33fff287-dd47-4754-b5ff-6ebbd8789a59",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "03a18c4d-9aab-4b6c-8f82-ac4ed9923936"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 4,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                }
              ],
              "passes": [],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "13683b62-b71b-4c24-b1b9-ed605195878e",
          "title": "Unauthenticated warning alert",
          "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/containers/UnauthenticatedWarningAlert.unit.spec.jsx",
          "file": "/src/applications/pensions/tests/containers/UnauthenticatedWarningAlert.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should not render if the user is logged in",
              "fullTitle": "Unauthenticated warning alert should not render if the user is logged in",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _render = (0, _react2.render)( /*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n  store: mockStoreLoggedIn\n}, /*#__PURE__*/_react.default.createElement(_UnauthenticatedWarningAlert.default, null))),\n    container = _render.container;\nvar selector = container.querySelector('va-alert');\n(0, _chai.expect)(selector).not.to.exist;",
              "err": {},
              "uuid": "177e8daf-ea7f-4551-a73f-1ad1403c701e",
              "parentUUID": "13683b62-b71b-4c24-b1b9-ed605195878e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should render `va-alert` with correct title",
              "fullTitle": "Unauthenticated warning alert should render `va-alert` with correct title",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _render2 = (0, _react2.render)( /*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n  store: mockStoreNotLoggedIn\n}, /*#__PURE__*/_react.default.createElement(_UnauthenticatedWarningAlert.default, null))),\n    container = _render2.container;\nvar selector = container.querySelector('va-alert');\n(0, _chai.expect)(selector).to.exist;\n(0, _chai.expect)(selector).to.contain.text('This application is 7 steps long and it contains several substeps per step. We advise you sign in to save your progress.Note: You can sign in after you start your application. But you’ll lose any information you already filled in.');",
              "err": {},
              "uuid": "a29140c5-a845-4242-8f6b-1c2b0b28128c",
              "parentUUID": "13683b62-b71b-4c24-b1b9-ed605195878e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should render sign in link",
              "fullTitle": "Unauthenticated warning alert should render sign in link",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _render3 = (0, _react2.render)( /*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n  store: mockStoreNotLoggedIn\n}, /*#__PURE__*/_react.default.createElement(_UnauthenticatedWarningAlert.default, null))),\n    container = _render3.container;\nvar link = container.querySelector('a');\n(0, _chai.expect)(link).to.exist;\n(0, _chai.expect)(link).to.contain.text('sign in to save your progress');",
              "err": {},
              "uuid": "d723f03b-7014-4970-99ca-38a6f27cc513",
              "parentUUID": "13683b62-b71b-4c24-b1b9-ed605195878e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should call toggleLoginModal when the \"sign in\" link is clicked",
              "fullTitle": "Unauthenticated warning alert should call toggleLoginModal when the \"sign in\" link is clicked",
              "timedOut": false,
              "duration": 3,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); });",
              "err": {},
              "uuid": "8529be18-8cff-4d80-869e-872299e1e0c4",
              "parentUUID": "13683b62-b71b-4c24-b1b9-ed605195878e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "177e8daf-ea7f-4551-a73f-1ad1403c701e",
            "a29140c5-a845-4242-8f6b-1c2b0b28128c",
            "d723f03b-7014-4970-99ca-38a6f27cc513",
            "8529be18-8cff-4d80-869e-872299e1e0c4"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 5,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "f6f8d90e-260c-49cc-8522-24bfc370edbc",
          "title": "convertDateFormat",
          "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/components/SectionField.unit.spec.jsx",
          "file": "/src/applications/pensions/tests/components/SectionField.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "correctly converts YYYY-MM-DD to MM/DD/YYYY",
              "fullTitle": "convertDateFormat correctly converts YYYY-MM-DD to MM/DD/YYYY",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var inputDate = '2023-10-19';\nvar expectedDate = '10/19/2023';\nvar result = (0, _SectionField.convertDateFormat)(inputDate);\n(0, _chai.expect)(result).to.equal(expectedDate);",
              "err": {},
              "uuid": "93b42d12-5b7c-4da9-86e4-359523ab282e",
              "parentUUID": "f6f8d90e-260c-49cc-8522-24bfc370edbc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "returns undefined for null or undefined input",
              "fullTitle": "convertDateFormat returns undefined for null or undefined input",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, _chai.expect)((0, _SectionField.convertDateFormat)(null)).to.eql('');\n(0, _chai.expect)((0, _SectionField.convertDateFormat)()).to.eql('');",
              "err": {},
              "uuid": "7719b6c8-0839-468f-a46a-7911602c6440",
              "parentUUID": "f6f8d90e-260c-49cc-8522-24bfc370edbc",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "93b42d12-5b7c-4da9-86e4-359523ab282e",
            "7719b6c8-0839-468f-a46a-7911602c6440"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "6da2a37a-73d9-47bc-8d94-bd979a0fa5e7",
          "title": "Pensions helpers",
          "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/helpers.unit.spec.jsx",
          "file": "/src/applications/pensions/tests/helpers.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "ac99c9ef-11a5-479f-8452-088affdd9efb",
              "title": "formatCurrency",
              "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/helpers.unit.spec.jsx",
              "file": "/src/applications/pensions/tests/helpers.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should format US currency",
                  "fullTitle": "Pensions helpers formatCurrency should format US currency",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)((0, _helpers2.formatCurrency)(0.01)).to.equal('$0.01');\n(0, _chai.expect)((0, _helpers2.formatCurrency)(1000)).to.equal('$1,000');\n(0, _chai.expect)((0, _helpers2.formatCurrency)(12.75)).to.equal('$12.75');",
                  "err": {},
                  "uuid": "5f473f30-31dd-46f7-8067-6fa3cb92ae7a",
                  "parentUUID": "ac99c9ef-11a5-479f-8452-088affdd9efb",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "5f473f30-31dd-46f7-8067-6fa3cb92ae7a"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "cd07e021-b84b-463d-9058-84145ee870a4",
              "title": "submit",
              "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/helpers.unit.spec.jsx",
              "file": "/src/applications/pensions/tests/helpers.unit.spec.jsx",
              "beforeHooks": [
                {
                  "title": "\"before each\" hook in \"submit\"",
                  "fullTitle": "Pensions helpers submit \"before each\" hook in \"submit\"",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "window.VetsGov = {\n  pollTimeout: 1\n};\nwindow.URL = {\n  createObjectURL: _sinon.default.stub().returns('test')\n};",
                  "err": {},
                  "uuid": "77f249cf-1617-47c5-8870-235a3f13a4d9",
                  "parentUUID": "cd07e021-b84b-463d-9058-84145ee870a4",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [
                {
                  "title": "\"after each\" hook in \"submit\"",
                  "fullTitle": "Pensions helpers submit \"after each\" hook in \"submit\"",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "delete window.URL;",
                  "err": {},
                  "uuid": "a02fa985-6d45-47db-a45f-3c3e21e66873",
                  "parentUUID": "cd07e021-b84b-463d-9058-84145ee870a4",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "tests": [
                {
                  "title": "should resolve if polling state is success",
                  "fullTitle": "Pensions helpers submit should resolve if polling state is success",
                  "timedOut": false,
                  "duration": 7,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _helpers.mockFetch)();\n(0, _helpers.setFetchJSONResponse)(global.fetch.onFirstCall(), {\n  data: {\n    attributes: {\n      guid: 'test'\n    }\n  }\n});\n(0, _helpers.setFetchJSONResponse)(global.fetch.onSecondCall(), {\n  data: {\n    attributes: {\n      state: 'pending'\n    }\n  }\n});\nvar response = {};\n(0, _helpers.setFetchJSONResponse)(global.fetch.onThirdCall(), {\n  data: {\n    attributes: {\n      state: 'success',\n      response: response\n    }\n  }\n});\nvar formConfig = {\n  chapters: {}\n};\nvar form = {\n  data: {}\n};\nreturn (0, _helpers2.submit)(form, formConfig).then(function (res) {\n  (0, _chai.expect)(res).to.deep.equal(response);\n});",
                  "err": {},
                  "uuid": "7c438b5d-f9d9-45f0-b156-714997c6ab13",
                  "parentUUID": "cd07e021-b84b-463d-9058-84145ee870a4",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should reject if polling state is failed",
                  "fullTitle": "Pensions helpers submit should reject if polling state is failed",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _helpers.mockFetch)();\n(0, _helpers.setFetchJSONResponse)(global.fetch.onFirstCall(), {\n  data: {\n    attributes: {\n      guid: 'test'\n    }\n  }\n});\n(0, _helpers.setFetchJSONResponse)(global.fetch.onSecondCall(), {\n  data: {\n    attributes: {\n      state: 'pending'\n    }\n  }\n});\n(0, _helpers.setFetchJSONResponse)(global.fetch.onThirdCall(), {\n  data: {\n    attributes: {\n      state: 'failed'\n    }\n  }\n});\nvar formConfig = {\n  chapters: {}\n};\nvar form = {\n  data: {}\n};\nreturn (0, _helpers2.submit)(form, formConfig).then(function () {\n  _chai.expect.fail();\n}, function (err) {\n  (0, _chai.expect)(err.message).to.equal('vets_server_error_pensions: status failed');\n});",
                  "err": {},
                  "uuid": "67cd2803-8e98-485d-a8f0-d15b89eb1acd",
                  "parentUUID": "cd07e021-b84b-463d-9058-84145ee870a4",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should reject if initial request fails",
                  "fullTitle": "Pensions helpers submit should reject if initial request fails",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _helpers.mockFetch)(new Error('fake error'), false);\nvar formConfig = {\n  chapters: {}\n};\nvar form = {\n  data: {}\n};\nreturn (0, _helpers2.submit)(form, formConfig).then(function () {\n  _chai.expect.fail();\n}, function (err) {\n  (0, _chai.expect)(err.message).to.equal('fake error');\n});",
                  "err": {},
                  "uuid": "365bf828-ae74-4411-9061-129f6ca944fa",
                  "parentUUID": "cd07e021-b84b-463d-9058-84145ee870a4",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "7c438b5d-f9d9-45f0-b156-714997c6ab13",
                "67cd2803-8e98-485d-a8f0-d15b89eb1acd",
                "365bf828-ae74-4411-9061-129f6ca944fa"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 12,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "4db68acf-d72d-4290-a417-420de543367b",
          "title": "current spouse full name page",
          "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/chapters/04-household-information/currentSpouse.unit.spec.jsx",
          "file": "/src/applications/pensions/tests/chapters/04-household-information/currentSpouse.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should render web components in form correctly",
              "fullTitle": "current spouse full name page should render web components in form correctly",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var pageTitle = 'current spouse full name';\nvar expectedNumberOfFields = 4;\n(0, _pageTests.testNumberOfWebComponentFields)(_form.default, _currentSpouse.default.schema, _currentSpouse.default.uiSchema, expectedNumberOfFields, pageTitle);\nvar expectedNumberOfErrors = 2;\n(0, _pageTests.testNumberOfErrorsOnSubmitForWebComponents)(_form.default, _currentSpouse.default.schema, _currentSpouse.default.uiSchema, expectedNumberOfErrors, pageTitle);",
              "err": {},
              "uuid": "819682a7-a9f2-4df1-9d79-2c6e50c4f450",
              "parentUUID": "4db68acf-d72d-4290-a417-420de543367b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "819682a7-a9f2-4df1-9d79-2c6e50c4f450"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "d1095cee-6fe3-4883-93ad-693b22ad95ec",
          "title": "Unreimbursed medical expenses pension page",
          "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/chapters/05-financial-information/medicalExpenses.unit.spec.jsx",
          "file": "/src/applications/pensions/tests/chapters/05-financial-information/medicalExpenses.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "5be6ebb7-4c41-4eb9-a8c2-e64e6356d0a1",
              "title": "Medical expenses page",
              "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/chapters/05-financial-information/medicalExpenses.unit.spec.jsx",
              "file": "/src/applications/pensions/tests/chapters/05-financial-information/medicalExpenses.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should have appropriate number of web components",
                  "fullTitle": "Unreimbursed medical expenses pension page Medical expenses page should have appropriate number of web components",
                  "timedOut": false,
                  "duration": 14,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var _render3 = (0, _react2.render)( /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  definitions: formConfig.defaultDefinitions,\n  schema: schema,\n  uiSchema: uiSchema,\n  data: data,\n  formData: {}\n})),\n    container = _render3.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypesWebComponents)).to.have.lengthOf(expectedNumberOfFields);",
                  "err": {},
                  "uuid": "7b039258-9a3e-4d75-9e58-2f7953a004a7",
                  "parentUUID": "5be6ebb7-4c41-4eb9-a8c2-e64e6356d0a1",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "7b039258-9a3e-4d75-9e58-2f7953a004a7"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 14,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "bc1ae1c2-067a-4d7f-b688-1e7806255ed8",
              "title": "Medical expenses page",
              "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/chapters/05-financial-information/medicalExpenses.unit.spec.jsx",
              "file": "/src/applications/pensions/tests/chapters/05-financial-information/medicalExpenses.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should show the correct number of errors on submit for web components",
                  "fullTitle": "Unreimbursed medical expenses pension page Medical expenses page should show the correct number of errors on submit for web components",
                  "timedOut": false,
                  "duration": 13,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var _render4 = (0, _react2.render)( /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  definitions: formConfig.defaultDefinitions,\n  schema: schema,\n  uiSchema: uiSchema,\n  data: data,\n  formData: {}\n})),\n    container = _render4.container,\n    getByRole = _render4.getByRole;\ngetByRole('button', {\n  name: /submit/i\n}).click();\nvar nodes = Array.from(container.querySelectorAll(\"\".concat(expectedFieldTypesWebComponents, \", \").concat(wrapperWebComponents)));\nvar errors = nodes.filter(function (node) {\n  return node.error;\n});\n(0, _chai.expect)(errors).to.have.lengthOf(expectedNumberOfErrors);",
                  "err": {},
                  "uuid": "b99766ab-ab57-4f78-88a2-882206f0435e",
                  "parentUUID": "bc1ae1c2-067a-4d7f-b688-1e7806255ed8",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "b99766ab-ab57-4f78-88a2-882206f0435e"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 13,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "5b360c73-c5fa-4fc4-b1be-70f428e4d152",
          "title": "Pensions spouse info",
          "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/config/spouseMarriageInfo.unit.spec.jsx",
          "file": "/src/applications/pensions/tests/config/spouseMarriageInfo.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "depends should return true if married",
              "fullTitle": "Pensions spouse info depends should return true if married",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var result = depends({\n  maritalStatus: 'Married'\n});\n(0, _chai.expect)(result).to.be.true;",
              "err": {},
              "uuid": "dbc9d354-2105-4e8b-9f52-a607a6d1b5b4",
              "parentUUID": "5b360c73-c5fa-4fc4-b1be-70f428e4d152",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should render file number",
              "fullTitle": "Pensions spouse info should render file number",
              "timedOut": false,
              "duration": 18,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var form = _testUtils.default.renderIntoDocument( /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  schema: schema,\n  data: {\n    marriages: [{\n      spouseFullName: {\n        first: 'Jane',\n        last: 'Doe'\n      }\n    }]\n  },\n  definitions: _form.default.defaultDefinitions,\n  uiSchema: uiSchema\n}));\nvar formDOM = (0, _schemaformUtils.getFormDOM)(form);\n(0, _chai.expect)(formDOM.querySelectorAll('input,select').length).to.equal(9);\nformDOM.fillData('#root_spouseIsVeteranYes', 'Y');\n(0, _chai.expect)(formDOM.querySelectorAll('input,select').length).to.equal(10);",
              "err": {},
              "uuid": "522e818c-1dee-44d8-a267-7e06a638b195",
              "parentUUID": "5b360c73-c5fa-4fc4-b1be-70f428e4d152",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should render",
              "fullTitle": "Pensions spouse info should render",
              "timedOut": false,
              "duration": 11,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var form = _testUtils.default.renderIntoDocument( /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  schema: schema,\n  data: {\n    marriages: [{\n      spouseFullName: {\n        first: 'Jane',\n        last: 'Doe'\n      }\n    }]\n  },\n  definitions: _form.default.defaultDefinitions,\n  uiSchema: uiSchema\n}));\nvar formDOM = (0, _schemaformUtils.getFormDOM)(form);\n(0, _chai.expect)(formDOM.querySelectorAll('input,select').length).to.equal(9);\n(0, _chai.expect)(formDOM.querySelectorAll('legend')[1].textContent).to.contain('Jane Doe');\n(0, _chai.expect)(formDOM.querySelector('label[for=\"root_spouseSocialSecurityNumber\"]').textContent).to.contain('Jane Doe');",
              "err": {},
              "uuid": "81c9462e-577d-48cc-8c5e-dd405ba01c8e",
              "parentUUID": "5b360c73-c5fa-4fc4-b1be-70f428e4d152",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should not submit empty form",
              "fullTitle": "Pensions spouse info should not submit empty form",
              "timedOut": false,
              "duration": 15,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var onSubmit = _sinon.default.spy();\nvar form = _testUtils.default.renderIntoDocument( /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  schema: schema,\n  definitions: _form.default.defaultDefinitions,\n  onSubmit: onSubmit,\n  uiSchema: uiSchema\n}));\nvar formDOM = (0, _schemaformUtils.getFormDOM)(form);\n(0, _schemaformUtils.submitForm)(form);\n(0, _chai.expect)(formDOM.querySelectorAll('.usa-input-error').length).to.equal(5);\n(0, _chai.expect)(onSubmit.called).to.be.false;",
              "err": {},
              "uuid": "9523beb3-b086-4ea9-9f1d-46df827c8806",
              "parentUUID": "5b360c73-c5fa-4fc4-b1be-70f428e4d152",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should render spouse address and contrib fields",
              "fullTitle": "Pensions spouse info should render spouse address and contrib fields",
              "timedOut": false,
              "duration": 59,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var form = _testUtils.default.renderIntoDocument( /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  schema: schema,\n  data: {\n    marriages: [{\n      spouseFullName: {\n        first: 'Jane',\n        last: 'Doe'\n      }\n    }]\n  },\n  definitions: _form.default.defaultDefinitions,\n  uiSchema: uiSchema\n}));\nvar formDOM = (0, _schemaformUtils.getFormDOM)(form);\n(0, _chai.expect)(formDOM.querySelectorAll('input,select').length).to.equal(9);\nformDOM.fillData('#root_liveWithSpouseNo', 'N');\n(0, _chai.expect)(formDOM.querySelectorAll('input,select').length).to.equal(17);\n(0, _schemaformUtils.submitForm)(form);\n(0, _chai.expect)(formDOM.querySelectorAll('.usa-input-error').length).to.equal(10);",
              "err": {},
              "uuid": "22069647-e33e-4979-abb7-15fb24ccada3",
              "parentUUID": "5b360c73-c5fa-4fc4-b1be-70f428e4d152",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should submit with valid data",
              "fullTitle": "Pensions spouse info should submit with valid data",
              "timedOut": false,
              "duration": 58,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var onSubmit = _sinon.default.spy();\nvar form = _testUtils.default.renderIntoDocument( /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  schema: schema,\n  definitions: _form.default.defaultDefinitions,\n  onSubmit: onSubmit,\n  uiSchema: uiSchema\n}));\nvar formDOM = (0, _schemaformUtils.getFormDOM)(form);\nformDOM.fillData('#root_spouseDateOfBirthMonth', '2');\nformDOM.fillData('#root_spouseDateOfBirthDay', '2');\nformDOM.fillData('#root_spouseDateOfBirthYear', '2000');\nformDOM.fillData('#root_spouseSocialSecurityNumber', '234432444');\nformDOM.fillData('#root_spouseIsVeteranNo', 'N');\nformDOM.fillData('#root_liveWithSpouseYes', 'Y');\nformDOM.fillData('#root_spouseMarriages', '1');\n(0, _schemaformUtils.submitForm)(form);\n(0, _chai.expect)(formDOM.querySelectorAll('.usa-input-error').length).to.equal(0);\n(0, _chai.expect)(onSubmit.called).to.be.true;",
              "err": {},
              "uuid": "13d7b5b9-1c45-40b6-bd89-57369911b552",
              "parentUUID": "5b360c73-c5fa-4fc4-b1be-70f428e4d152",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "dbc9d354-2105-4e8b-9f52-a607a6d1b5b4",
            "522e818c-1dee-44d8-a267-7e06a638b195",
            "81c9462e-577d-48cc-8c5e-dd405ba01c8e",
            "9523beb3-b086-4ea9-9f1d-46df827c8806",
            "22069647-e33e-4979-abb7-15fb24ccada3",
            "13d7b5b9-1c45-40b6-bd89-57369911b552"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 161,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "34485c9b-b3c8-4e4e-9b07-038849e133ac",
          "title": "pension medical condition page",
          "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/chapters/03-health-and-employment-information/medicalCondition.unit.spec.jsx",
          "file": "/src/applications/pensions/tests/chapters/03-health-and-employment-information/medicalCondition.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "28e9bd2d-bb4f-4d61-b135-bdb38b2a6169",
              "title": "medical condition information page",
              "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/chapters/03-health-and-employment-information/medicalCondition.unit.spec.jsx",
              "file": "/src/applications/pensions/tests/chapters/03-health-and-employment-information/medicalCondition.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should have appropriate number of web components",
                  "fullTitle": "pension medical condition page medical condition information page should have appropriate number of web components",
                  "timedOut": false,
                  "duration": 7,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var _render3 = (0, _react2.render)( /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  definitions: formConfig.defaultDefinitions,\n  schema: schema,\n  uiSchema: uiSchema,\n  data: data,\n  formData: {}\n})),\n    container = _render3.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypesWebComponents)).to.have.lengthOf(expectedNumberOfFields);",
                  "err": {},
                  "uuid": "b8a323f8-3e38-4562-bbe2-38cace67f602",
                  "parentUUID": "28e9bd2d-bb4f-4d61-b135-bdb38b2a6169",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "b8a323f8-3e38-4562-bbe2-38cace67f602"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 7,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "bd07c9c9-163f-456d-81e7-d1c155b93a4e",
              "title": "medical condition information page",
              "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/chapters/03-health-and-employment-information/medicalCondition.unit.spec.jsx",
              "file": "/src/applications/pensions/tests/chapters/03-health-and-employment-information/medicalCondition.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should show the correct number of errors on submit for web components",
                  "fullTitle": "pension medical condition page medical condition information page should show the correct number of errors on submit for web components",
                  "timedOut": false,
                  "duration": 8,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var _render4 = (0, _react2.render)( /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  definitions: formConfig.defaultDefinitions,\n  schema: schema,\n  uiSchema: uiSchema,\n  data: data,\n  formData: {}\n})),\n    container = _render4.container,\n    getByRole = _render4.getByRole;\ngetByRole('button', {\n  name: /submit/i\n}).click();\nvar nodes = Array.from(container.querySelectorAll(\"\".concat(expectedFieldTypesWebComponents, \", \").concat(wrapperWebComponents)));\nvar errors = nodes.filter(function (node) {\n  return node.error;\n});\n(0, _chai.expect)(errors).to.have.lengthOf(expectedNumberOfErrors);",
                  "err": {},
                  "uuid": "b4d78ad7-d2ce-4f5e-95a5-1ed2e39c33d4",
                  "parentUUID": "bd07c9c9-163f-456d-81e7-d1c155b93a4e",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "b4d78ad7-d2ce-4f5e-95a5-1ed2e39c33d4"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 8,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "69bb1bc9-4921-4636-b616-8522d587b330",
          "title": "Pensions SpouseMarriageTitle",
          "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/components/SpouseMarriageTitle.unit.spec.jsx",
          "file": "/src/applications/pensions/tests/components/SpouseMarriageTitle.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should render multi-marriage title",
              "fullTitle": "Pensions SpouseMarriageTitle should render multi-marriage title",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var tree = _skinDeep.default.shallowRender( /*#__PURE__*/_react.default.createElement(_SpouseMarriageTitle.default, {\n  id: \"id\",\n  formData: {\n    spouseMarriages: [{}, {}]\n  }\n}));\n(0, _chai.expect)(tree.text()).to.contain('Spouse’s former marriages');",
              "err": {},
              "uuid": "f5b17401-a532-4544-99fd-a19205def8c1",
              "parentUUID": "69bb1bc9-4921-4636-b616-8522d587b330",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should render single marriage title",
              "fullTitle": "Pensions SpouseMarriageTitle should render single marriage title",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var tree = _skinDeep.default.shallowRender( /*#__PURE__*/_react.default.createElement(_SpouseMarriageTitle.default, {\n  id: \"id\",\n  formData: {\n    spouseMarriages: [{}]\n  }\n}));\n(0, _chai.expect)(tree.text()).to.contain('Spouse’s former marriage');",
              "err": {},
              "uuid": "be25363f-b08f-4e5d-a400-0a76b998e660",
              "parentUUID": "69bb1bc9-4921-4636-b616-8522d587b330",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f5b17401-a532-4544-99fd-a19205def8c1",
            "be25363f-b08f-4e5d-a400-0a76b998e660"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "7fb54f68-88c9-4327-b6f5-bf45ccb61e19",
          "title": "reason for current separation page",
          "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/chapters/04-household-information/reasonForCurrentSeparation.unit.spec.jsx",
          "file": "/src/applications/pensions/tests/chapters/04-household-information/reasonForCurrentSeparation.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should render web components in form correctly",
              "fullTitle": "reason for current separation page should render web components in form correctly",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var pageTitle = 'reason for separation';\nvar expectedNumberOfFields = 1;\n(0, _pageTests.testNumberOfWebComponentFields)(_form.default, _reasonForCurrentSeparation.default.schema, _reasonForCurrentSeparation.default.uiSchema, expectedNumberOfFields, pageTitle);\nvar expectedNumberOfErrors = 1;\n(0, _pageTests.testNumberOfErrorsOnSubmitForWebComponents)(_form.default, _reasonForCurrentSeparation.default.schema, _reasonForCurrentSeparation.default.uiSchema, expectedNumberOfErrors, pageTitle);",
              "err": {},
              "uuid": "9d8950d8-6179-45ab-aaab-b52213714972",
              "parentUUID": "7fb54f68-88c9-4327-b6f5-bf45ccb61e19",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "9d8950d8-6179-45ab-aaab-b52213714972"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "dccb2fbd-6b63-4868-8f4e-2b22c90e6f7e",
          "title": "pension mailing address page",
          "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/chapters/01-applicant-information/mailingAddress.unit.spec.jsx",
          "file": "/src/applications/pensions/tests/chapters/01-applicant-information/mailingAddress.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "8132bcac-b8e5-4ace-b602-9b23bbe70d3e",
              "title": "mailing address page",
              "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/chapters/01-applicant-information/mailingAddress.unit.spec.jsx",
              "file": "/src/applications/pensions/tests/chapters/01-applicant-information/mailingAddress.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should have appropriate number of web components",
                  "fullTitle": "pension mailing address page mailing address page should have appropriate number of web components",
                  "timedOut": false,
                  "duration": 14,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var _render3 = (0, _react2.render)( /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  definitions: formConfig.defaultDefinitions,\n  schema: schema,\n  uiSchema: uiSchema,\n  data: data,\n  formData: {}\n})),\n    container = _render3.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypesWebComponents)).to.have.lengthOf(expectedNumberOfFields);",
                  "err": {},
                  "uuid": "96f48bc6-b2ae-4882-a61d-36be0ed64878",
                  "parentUUID": "8132bcac-b8e5-4ace-b602-9b23bbe70d3e",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "96f48bc6-b2ae-4882-a61d-36be0ed64878"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 14,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "666b1d77-678e-4caa-9018-14c8da12d18e",
              "title": "mailing address page",
              "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/chapters/01-applicant-information/mailingAddress.unit.spec.jsx",
              "file": "/src/applications/pensions/tests/chapters/01-applicant-information/mailingAddress.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should show the correct number of errors on submit for web components",
                  "fullTitle": "pension mailing address page mailing address page should show the correct number of errors on submit for web components",
                  "timedOut": false,
                  "duration": 43,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var _render4 = (0, _react2.render)( /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  definitions: formConfig.defaultDefinitions,\n  schema: schema,\n  uiSchema: uiSchema,\n  data: data,\n  formData: {}\n})),\n    container = _render4.container,\n    getByRole = _render4.getByRole;\ngetByRole('button', {\n  name: /submit/i\n}).click();\nvar nodes = Array.from(container.querySelectorAll(\"\".concat(expectedFieldTypesWebComponents, \", \").concat(wrapperWebComponents)));\nvar errors = nodes.filter(function (node) {\n  return node.error;\n});\n(0, _chai.expect)(errors).to.have.lengthOf(expectedNumberOfErrors);",
                  "err": {},
                  "uuid": "d3e049a5-7f2b-4c37-ac63-f2c8bdca1b0b",
                  "parentUUID": "666b1d77-678e-4caa-9018-14c8da12d18e",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "d3e049a5-7f2b-4c37-ac63-f2c8bdca1b0b"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 43,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "2fbca248-59fe-49b3-8869-5d0ed54efee3",
          "title": "marital status page",
          "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/chapters/04-household-information/maritalStatus.unit.spec.jsx",
          "file": "/src/applications/pensions/tests/chapters/04-household-information/maritalStatus.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should render web components in form correctly",
              "fullTitle": "marital status page should render web components in form correctly",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var pageTitle = 'marital status';\nvar expectedNumberOfFields = 1;\n(0, _pageTests.testNumberOfWebComponentFields)(_form.default, _maritalStatus.default.schema, _maritalStatus.default.uiSchema, expectedNumberOfFields, pageTitle);\nvar expectedNumberOfErrors = 1;\n(0, _pageTests.testNumberOfErrorsOnSubmitForWebComponents)(_form.default, _maritalStatus.default.schema, _maritalStatus.default.uiSchema, expectedNumberOfErrors, pageTitle);",
              "err": {},
              "uuid": "f892dfe0-40dd-452a-ba8c-197ddb919b9d",
              "parentUUID": "2fbca248-59fe-49b3-8869-5d0ed54efee3",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f892dfe0-40dd-452a-ba8c-197ddb919b9d"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "ad9c7e17-c32c-4530-9de0-92fece503319",
          "title": "AdditionalInformation",
          "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/components/SectionField.unit.spec.jsx",
          "file": "/src/applications/pensions/tests/components/SectionField.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should render with files",
              "fullTitle": "AdditionalInformation should render with files",
              "timedOut": false,
              "duration": 3,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var formData = {\n  'view:noDirectDeposit': false,\n  bankAccount: {\n    accountType: 'checking',\n    accountNumber: '123',\n    routingNumber: '333'\n  },\n  veteranAddress: {\n    street: '123 street',\n    city: 'Los Angeles',\n    state: 'California',\n    postalCode: '96785',\n    country: 'USA'\n  },\n  email: 'bob@example.com',\n  altEmail: 'alt-bob@example.com',\n  files: [{\n    name: 'file 1.txt',\n    size: 3200\n  }],\n  noRapidProcessing: true\n};\nvar _render7 = (0, _react2.render)( /*#__PURE__*/_react.default.createElement(_SectionField.AdditionalInformation, {\n  formData: formData\n})),\n    queryByText = _render7.queryByText;\n(0, _chai.expect)(queryByText('bob@example.com')).to.not.be.null;",
              "err": {},
              "uuid": "fc10dfd4-3fb4-4275-975f-e6512da868ba",
              "parentUUID": "ad9c7e17-c32c-4530-9de0-92fece503319",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should render without files",
              "fullTitle": "AdditionalInformation should render without files",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var formData = {\n  'view:noDirectDeposit': true,\n  bankAccountType: 'savings',\n  noRapidProcessing: false\n};\nvar _render8 = (0, _react2.render)( /*#__PURE__*/_react.default.createElement(_SectionField.AdditionalInformation, {\n  formData: formData\n})),\n    queryByText = _render8.queryByText;\n(0, _chai.expect)(queryByText('Yes, I have uploaded all my documentation')).to.not.be.null;",
              "err": {},
              "uuid": "f5726312-19ff-4e14-bccc-9443fe79464c",
              "parentUUID": "ad9c7e17-c32c-4530-9de0-92fece503319",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "fc10dfd4-3fb4-4275-975f-e6512da868ba",
            "f5726312-19ff-4e14-bccc-9443fe79464c"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 4,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "dee30124-8a88-452d-ac96-7a96a01973dd",
          "title": "pension social security disability page",
          "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/chapters/03-health-and-employment-information/socialSecurityDisability.unit.spec.jsx",
          "file": "/src/applications/pensions/tests/chapters/03-health-and-employment-information/socialSecurityDisability.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "4b3ef27d-06e5-4258-83d6-bb1f8ad7e719",
              "title": "health history page",
              "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/chapters/03-health-and-employment-information/socialSecurityDisability.unit.spec.jsx",
              "file": "/src/applications/pensions/tests/chapters/03-health-and-employment-information/socialSecurityDisability.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should have appropriate number of web components",
                  "fullTitle": "pension social security disability page health history page should have appropriate number of web components",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var _render3 = (0, _react2.render)( /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  definitions: formConfig.defaultDefinitions,\n  schema: schema,\n  uiSchema: uiSchema,\n  data: data,\n  formData: {}\n})),\n    container = _render3.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypesWebComponents)).to.have.lengthOf(expectedNumberOfFields);",
                  "err": {},
                  "uuid": "40effbf2-283e-4be1-9122-7a4e5f09ba97",
                  "parentUUID": "4b3ef27d-06e5-4258-83d6-bb1f8ad7e719",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "40effbf2-283e-4be1-9122-7a4e5f09ba97"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 3,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "f19c3c34-0b95-490e-9443-a8daca79cc49",
              "title": "health history page",
              "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/chapters/03-health-and-employment-information/socialSecurityDisability.unit.spec.jsx",
              "file": "/src/applications/pensions/tests/chapters/03-health-and-employment-information/socialSecurityDisability.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should show the correct number of errors on submit for web components",
                  "fullTitle": "pension social security disability page health history page should show the correct number of errors on submit for web components",
                  "timedOut": false,
                  "duration": 11,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var _render4 = (0, _react2.render)( /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  definitions: formConfig.defaultDefinitions,\n  schema: schema,\n  uiSchema: uiSchema,\n  data: data,\n  formData: {}\n})),\n    container = _render4.container,\n    getByRole = _render4.getByRole;\ngetByRole('button', {\n  name: /submit/i\n}).click();\nvar nodes = Array.from(container.querySelectorAll(\"\".concat(expectedFieldTypesWebComponents, \", \").concat(wrapperWebComponents)));\nvar errors = nodes.filter(function (node) {\n  return node.error;\n});\n(0, _chai.expect)(errors).to.have.lengthOf(expectedNumberOfErrors);",
                  "err": {},
                  "uuid": "299094dc-db2a-4f27-b634-cbbd55ab3a3e",
                  "parentUUID": "f19c3c34-0b95-490e-9443-a8daca79cc49",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "299094dc-db2a-4f27-b634-cbbd55ab3a3e"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 11,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "56e4d753-85ac-4abf-820b-8d3d5f659006",
          "title": "Pensions FinancialDisclosureDescription",
          "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/components/FinancialDisclosureDescription.unit.spec.jsx",
          "file": "/src/applications/pensions/tests/components/FinancialDisclosureDescription.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should render dependent warning",
              "fullTitle": "Pensions FinancialDisclosureDescription should render dependent warning",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var pageKeys = ['dependentsNetWorth0'];\nvar viewedPages = new Set();\nvar tree = _skinDeep.default.shallowRender( /*#__PURE__*/_react.default.createElement(_FinancialDisclosureDescription.default, {\n  pageKeys: pageKeys,\n  viewedPages: viewedPages\n}));\n(0, _chai.expect)(tree.text()).to.contain('dependents you added');",
              "err": {},
              "uuid": "77840fe9-9a43-4edc-8b5f-873c719e1ee3",
              "parentUUID": "56e4d753-85ac-4abf-820b-8d3d5f659006",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should render no warning when there are no unviewed pages",
              "fullTitle": "Pensions FinancialDisclosureDescription should render no warning when there are no unviewed pages",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var pageKeys = ['dependentsNetWorth0'];\nvar viewedPages = new Set(['dependentsNetWorth0']);\nvar tree = _skinDeep.default.shallowRender( /*#__PURE__*/_react.default.createElement(_FinancialDisclosureDescription.default, {\n  pageKeys: pageKeys,\n  viewedPages: viewedPages\n}));\n(0, _chai.expect)(tree.text()).to.equal('');",
              "err": {},
              "uuid": "7d799d68-2101-4ac8-a514-9876460c15ba",
              "parentUUID": "56e4d753-85ac-4abf-820b-8d3d5f659006",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should render spouse warning",
              "fullTitle": "Pensions FinancialDisclosureDescription should render spouse warning",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var pageKeys = ['spouseNetWorth'];\nvar viewedPages = new Set();\nvar tree = _skinDeep.default.shallowRender( /*#__PURE__*/_react.default.createElement(_FinancialDisclosureDescription.default, {\n  pageKeys: pageKeys,\n  viewedPages: viewedPages\n}));\n(0, _chai.expect)(tree.text()).to.contain('spouse have any');",
              "err": {},
              "uuid": "622d4884-58f3-4778-a347-939f52a2ce20",
              "parentUUID": "56e4d753-85ac-4abf-820b-8d3d5f659006",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "77840fe9-9a43-4edc-8b5f-873c719e1ee3",
            "7d799d68-2101-4ac8-a514-9876460c15ba",
            "622d4884-58f3-4778-a347-939f52a2ce20"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "c6fb1359-c9fa-46e4-b1a1-ac48ede3c7fc",
          "title": "<IntroductionPage />",
          "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/components/IntroductionPage.unit.spec.jsx",
          "file": "/src/applications/pensions/tests/components/IntroductionPage.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "renders",
              "fullTitle": "<IntroductionPage /> renders",
              "timedOut": false,
              "duration": 3,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var wrapper = (0, _enzyme.shallow)( /*#__PURE__*/_react.default.createElement(_IntroductionPage.default, {\n  route: {\n    formConfig: _form.default\n  }\n}));\n(0, _chai.expect)(wrapper.find('FormTitle')).to.exist;\n(0, _chai.expect)(wrapper.find('FormTitle').props().title).to.equal('Apply for Veterans Pension benefits');\nwrapper.unmount();",
              "err": {},
              "uuid": "bbb0f361-3bc7-4dd3-bc16-f9bed82d6560",
              "parentUUID": "c6fb1359-c9fa-46e4-b1a1-ac48ede3c7fc",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "bbb0f361-3bc7-4dd3-bc16-f9bed82d6560"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "7388fa0d-dcab-4d07-9591-29df9a57cb2d",
          "title": "<ConfirmationPage>",
          "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/containers/ConfirmationPage.unit.spec.jsx",
          "file": "/src/applications/pensions/tests/containers/ConfirmationPage.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should render if no submission response",
              "fullTitle": "<ConfirmationPage> should render if no submission response",
              "timedOut": false,
              "duration": 8,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var form = generateForm({\n  hasResponse: false\n});\nvar tree = (0, _enzyme.shallow)( /*#__PURE__*/_react.default.createElement(_ConfirmationPage.ConfirmationPage, {\n  form: form\n}));\n(0, _chai.expect)(tree.find('.claim-list').children().length).to.eql(4);\ntree.unmount();",
              "err": {},
              "uuid": "72d19ffd-d1d1-4167-92d6-39af7991ff17",
              "parentUUID": "7388fa0d-dcab-4d07-9591-29df9a57cb2d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should render with empty regionalOffice",
              "fullTitle": "<ConfirmationPage> should render with empty regionalOffice",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var form = generateForm({\n  hasRegionalOffice: false\n});\nvar tree = (0, _enzyme.shallow)( /*#__PURE__*/_react.default.createElement(_ConfirmationPage.ConfirmationPage, {\n  form: form\n}));\n(0, _chai.expect)(tree.find('address').children().length).to.eql(0);\ntree.unmount();",
              "err": {},
              "uuid": "457db7ca-f8ed-43b1-ac55-0361cdb704e8",
              "parentUUID": "7388fa0d-dcab-4d07-9591-29df9a57cb2d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should render",
              "fullTitle": "<ConfirmationPage> should render",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var form = generateForm();\nvar tree = _skinDeep.default.shallowRender( /*#__PURE__*/_react.default.createElement(_ConfirmationPage.ConfirmationPage, {\n  form: form\n}));\n(0, _chai.expect)(tree.subTree('.confirmation-page-title').text()).to.equal('Claim submitted');\n(0, _chai.expect)(tree.everySubTree('span')[1].text().trim()).to.equal('for Jane Doe');\n(0, _chai.expect)(tree.everySubTree('li')[2].text()).to.contain('Western Region');\n(0, _chai.expect)(tree.everySubTree('p')[0].text()).to.contain('We process claims in the order we receive them');\n(0, _chai.expect)(tree.everySubTree('p')[1].text()).to.contain('We may contact you for more information or documents.');\n(0, _chai.expect)(tree.everySubTree('p')[3].text()).to.contain('VA Regional Office');",
              "err": {},
              "uuid": "58f23485-273d-46af-bb97-55210824c366",
              "parentUUID": "7388fa0d-dcab-4d07-9591-29df9a57cb2d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "72d19ffd-d1d1-4167-92d6-39af7991ff17",
            "457db7ca-f8ed-43b1-ac55-0361cdb704e8",
            "58f23485-273d-46af-bb97-55210824c366"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 12,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "a2a4e917-8fac-414c-809a-b5244e154e9e",
          "title": "web component tests",
          "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/chapters/02-military-history/pow.unit.spec.jsx",
          "file": "/src/applications/pensions/tests/chapters/02-military-history/pow.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "fa82f5a5-23d3-4789-a87d-6c85a3db8935",
              "title": "military history page",
              "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/chapters/02-military-history/pow.unit.spec.jsx",
              "file": "/src/applications/pensions/tests/chapters/02-military-history/pow.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should show the correct number of errors on submit for web components",
                  "fullTitle": "web component tests military history page should show the correct number of errors on submit for web components",
                  "timedOut": false,
                  "duration": 11,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var _render4 = (0, _react2.render)( /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  definitions: formConfig.defaultDefinitions,\n  schema: schema,\n  uiSchema: uiSchema,\n  data: data,\n  formData: {}\n})),\n    container = _render4.container,\n    getByRole = _render4.getByRole;\ngetByRole('button', {\n  name: /submit/i\n}).click();\nvar nodes = Array.from(container.querySelectorAll(\"\".concat(expectedFieldTypesWebComponents, \", \").concat(wrapperWebComponents)));\nvar errors = nodes.filter(function (node) {\n  return node.error;\n});\n(0, _chai.expect)(errors).to.have.lengthOf(expectedNumberOfErrors);",
                  "err": {},
                  "uuid": "f2749dda-91de-4542-8bd5-5a14f9baaf13",
                  "parentUUID": "fa82f5a5-23d3-4789-a87d-6c85a3db8935",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "f2749dda-91de-4542-8bd5-5a14f9baaf13"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 11,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "46d6c9b7-f616-412b-a189-49bb70904942",
              "title": "military history page",
              "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/chapters/02-military-history/pow.unit.spec.jsx",
              "file": "/src/applications/pensions/tests/chapters/02-military-history/pow.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should have appropriate number of web components",
                  "fullTitle": "web component tests military history page should have appropriate number of web components",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var _render3 = (0, _react2.render)( /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  definitions: formConfig.defaultDefinitions,\n  schema: schema,\n  uiSchema: uiSchema,\n  data: data,\n  formData: {}\n})),\n    container = _render3.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypesWebComponents)).to.have.lengthOf(expectedNumberOfFields);",
                  "err": {},
                  "uuid": "ae456f70-86ee-4e39-848a-5f2cb986a40f",
                  "parentUUID": "46d6c9b7-f616-412b-a189-49bb70904942",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "ae456f70-86ee-4e39-848a-5f2cb986a40f"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "88436839-768a-4627-8338-5b704dc03b55",
          "title": "pension spouse marriage history page",
          "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/chapters/04-household-information/spouseMarriageHistory.unit.spec.jsx",
          "file": "/src/applications/pensions/tests/chapters/04-household-information/spouseMarriageHistory.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should not allow submit with errors",
              "fullTitle": "pension spouse marriage history page should not allow submit with errors",
              "timedOut": false,
              "duration": 17,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); });",
              "err": {},
              "uuid": "ee47cfe0-d590-4a20-8e2c-3230b2f067f8",
              "parentUUID": "88436839-768a-4627-8338-5b704dc03b55",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should render with all fields and buttons",
              "fullTitle": "pension spouse marriage history page should render with all fields and buttons",
              "timedOut": false,
              "duration": 10,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); });",
              "err": {},
              "uuid": "26a0f0a2-da6a-40b5-8d2f-245acc74f419",
              "parentUUID": "88436839-768a-4627-8338-5b704dc03b55",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "ee47cfe0-d590-4a20-8e2c-3230b2f067f8",
            "26a0f0a2-da6a-40b5-8d2f-245acc74f419"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 27,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "9a3b6734-e0c9-479e-9328-4772f22c9ccc",
          "title": "pension dependent children page",
          "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/chapters/04-household-information/dependentChildren.unit.spec.jsx",
          "file": "/src/applications/pensions/tests/chapters/04-household-information/dependentChildren.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should reveal additional fields",
              "fullTitle": "pension dependent children page should reveal additional fields",
              "timedOut": false,
              "duration": 19,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); });",
              "err": {},
              "uuid": "6ea406fb-e345-4f1e-abca-1dde9c1f2cb5",
              "parentUUID": "9a3b6734-e0c9-479e-9328-4772f22c9ccc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should submit with valid data",
              "fullTitle": "pension dependent children page should submit with valid data",
              "timedOut": false,
              "duration": 5,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); });",
              "err": {},
              "uuid": "b6f09f8d-d7cb-4474-8ea1-53d9e9d4015c",
              "parentUUID": "9a3b6734-e0c9-479e-9328-4772f22c9ccc",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "6ea406fb-e345-4f1e-abca-1dde9c1f2cb5",
            "b6f09f8d-d7cb-4474-8ea1-53d9e9d4015c"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 24,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "8dee0cd9-7b10-4b49-902a-09cbc1b1f323",
          "title": "Pensions marriage info",
          "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/config/marriageInfo.unit.spec.jsx",
          "file": "/src/applications/pensions/tests/config/marriageInfo.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should render",
              "fullTitle": "Pensions marriage info should render",
              "timedOut": false,
              "duration": 6,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var form = _testUtils.default.renderIntoDocument( /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  schema: schema,\n  definitions: _form.default.defaultDefinitions,\n  uiSchema: uiSchema\n}));\nvar formDOM = (0, _schemaformUtils.getFormDOM)(form);\n(0, _chai.expect)(formDOM.querySelectorAll('input,select').length).to.equal(1);",
              "err": {},
              "uuid": "fe7c1681-640a-4d7d-a298-6fc07755c92f",
              "parentUUID": "8dee0cd9-7b10-4b49-902a-09cbc1b1f323",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should render marriage count",
              "fullTitle": "Pensions marriage info should render marriage count",
              "timedOut": false,
              "duration": 5,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var onSubmit = _sinon.default.spy();\nvar form = _testUtils.default.renderIntoDocument( /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  schema: schema,\n  onSubmit: onSubmit,\n  definitions: _form.default.defaultDefinitions,\n  uiSchema: uiSchema\n}));\nvar formDOM = (0, _schemaformUtils.getFormDOM)(form);\n(0, _schemaformUtils.submitForm)(form);\n(0, _chai.expect)(formDOM.querySelectorAll('input').length).to.equal(1);\n(0, _chai.expect)(formDOM.querySelectorAll('.usa-input-error').length).to.equal(1);\n(0, _chai.expect)(onSubmit.called).to.be.false;",
              "err": {},
              "uuid": "1ae394b4-2a85-4554-bcb9-98f098537f73",
              "parentUUID": "8dee0cd9-7b10-4b49-902a-09cbc1b1f323",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should not submit empty form",
              "fullTitle": "Pensions marriage info should not submit empty form",
              "timedOut": false,
              "duration": 3,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var onSubmit = _sinon.default.spy();\nvar form = _testUtils.default.renderIntoDocument( /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  schema: schema,\n  definitions: _form.default.defaultDefinitions,\n  onSubmit: onSubmit,\n  uiSchema: uiSchema\n}));\nvar formDOM = (0, _schemaformUtils.getFormDOM)(form);\n(0, _schemaformUtils.submitForm)(form);\n(0, _chai.expect)(formDOM.querySelectorAll('.usa-input-error').length).to.equal(1);\n(0, _chai.expect)(onSubmit.called).to.be.false;",
              "err": {},
              "uuid": "4c2c01f5-e9a6-4dbe-bba9-b3b803a38310",
              "parentUUID": "8dee0cd9-7b10-4b49-902a-09cbc1b1f323",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should submit with valid data",
              "fullTitle": "Pensions marriage info should submit with valid data",
              "timedOut": false,
              "duration": 7,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var onSubmit = _sinon.default.spy();\nvar form = _testUtils.default.renderIntoDocument( /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  schema: schema,\n  definitions: _form.default.defaultDefinitions,\n  onSubmit: onSubmit,\n  uiSchema: uiSchema\n}));\nvar formDOM = (0, _schemaformUtils.getFormDOM)(form);\nformDOM.fillData('#root_marriages', '1');\n(0, _schemaformUtils.submitForm)(form);\n(0, _chai.expect)(formDOM.querySelectorAll('.usa-input-error').length).to.equal(0);\n(0, _chai.expect)(onSubmit.called).to.be.true;",
              "err": {},
              "uuid": "1fae3750-b2cf-4965-ba7c-2cf81df2848f",
              "parentUUID": "8dee0cd9-7b10-4b49-902a-09cbc1b1f323",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "fe7c1681-640a-4d7d-a298-6fc07755c92f",
            "1ae394b4-2a85-4554-bcb9-98f098537f73",
            "4c2c01f5-e9a6-4dbe-bba9-b3b803a38310",
            "1fae3750-b2cf-4965-ba7c-2cf81df2848f"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 21,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "976c900c-0d61-42fb-bdca-e3bb9628effb",
          "title": "pension add medical centers page",
          "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/chapters/03-health-and-employment-information/treatmentHistory.unit.spec.jsx",
          "file": "/src/applications/pensions/tests/chapters/03-health-and-employment-information/treatmentHistory.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should render web components in form correctly",
              "fullTitle": "pension add medical centers page should render web components in form correctly",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var medicalCenters = (0, _medicalCenters.default)();\nvar pageTitle = 'medical centers';\nvar expectedNumberOfFields = 1;\n(0, _pageTests.testNumberOfWebComponentFields)(_form.default, medicalCenters.schema, medicalCenters.uiSchema, expectedNumberOfFields, pageTitle);\nvar expectedNumberOfErrors = 1;\n(0, _pageTests.testNumberOfErrorsOnSubmitForWebComponents)(_form.default, medicalCenters.schema, medicalCenters.uiSchema, expectedNumberOfErrors, pageTitle);",
              "err": {},
              "uuid": "a2da6c71-2cc2-4cbb-9a82-1e946b535883",
              "parentUUID": "976c900c-0d61-42fb-bdca-e3bb9628effb",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a2da6c71-2cc2-4cbb-9a82-1e946b535883"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "8d28edca-ba29-47eb-9ce6-1686c6697d27",
          "title": "Supporting documents pension page",
          "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/chapters/06-additional-information/supportingDocuments.unit.spec.jsx",
          "file": "/src/applications/pensions/tests/chapters/06-additional-information/supportingDocuments.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "e30aae5d-8dbc-4ccf-965f-f5d21d0bac33",
              "title": "Supporting documents page",
              "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/chapters/06-additional-information/supportingDocuments.unit.spec.jsx",
              "file": "/src/applications/pensions/tests/chapters/06-additional-information/supportingDocuments.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should have appropriate number of fields",
                  "fullTitle": "Supporting documents pension page Supporting documents page should have appropriate number of fields",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var _render = (0, _react2.render)( /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  definitions: formConfig.defaultDefinitions,\n  schema: schema,\n  uiSchema: uiSchema,\n  data: data,\n  formData: {}\n})),\n    container = _render.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypes)).to.have.lengthOf(expectedNumberOfFields);",
                  "err": {},
                  "uuid": "9ceb44c5-3923-42ef-b188-f4744c0d5118",
                  "parentUUID": "e30aae5d-8dbc-4ccf-965f-f5d21d0bac33",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "9ceb44c5-3923-42ef-b188-f4744c0d5118"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "012af67d-1a5a-4078-a972-55df6d204861",
          "title": "treatment history page",
          "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/helpers.unit.spec.jsx",
          "file": "/src/applications/pensions/tests/helpers.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should have appropriate number of web components",
              "fullTitle": "treatment history page should have appropriate number of web components",
              "timedOut": false,
              "duration": 6,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _render3 = (0, _react2.render)( /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  definitions: formConfig.defaultDefinitions,\n  schema: schema,\n  uiSchema: uiSchema,\n  data: data,\n  formData: {}\n})),\n    container = _render3.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypesWebComponents)).to.have.lengthOf(expectedNumberOfFields);",
              "err": {},
              "uuid": "8e85e314-db38-4836-97c3-287f805fc47e",
              "parentUUID": "012af67d-1a5a-4078-a972-55df6d204861",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "8e85e314-db38-4836-97c3-287f805fc47e"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 6,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "e4e08d9b-87ab-438a-93b1-b311a30d6cfb",
          "title": "treatment history page",
          "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/helpers.unit.spec.jsx",
          "file": "/src/applications/pensions/tests/helpers.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should show the correct number of errors on submit for web components",
              "fullTitle": "treatment history page should show the correct number of errors on submit for web components",
              "timedOut": false,
              "duration": 13,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _render4 = (0, _react2.render)( /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  definitions: formConfig.defaultDefinitions,\n  schema: schema,\n  uiSchema: uiSchema,\n  data: data,\n  formData: {}\n})),\n    container = _render4.container,\n    getByRole = _render4.getByRole;\ngetByRole('button', {\n  name: /submit/i\n}).click();\nvar nodes = Array.from(container.querySelectorAll(\"\".concat(expectedFieldTypesWebComponents, \", \").concat(wrapperWebComponents)));\nvar errors = nodes.filter(function (node) {\n  return node.error;\n});\n(0, _chai.expect)(errors).to.have.lengthOf(expectedNumberOfErrors);",
              "err": {},
              "uuid": "e2158f1e-78b4-44f8-b2ea-b14bf71436b1",
              "parentUUID": "e4e08d9b-87ab-438a-93b1-b311a30d6cfb",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "e2158f1e-78b4-44f8-b2ea-b14bf71436b1"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 13,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "7e7b8e2d-1265-47ec-aae9-4b4963076750",
          "title": "current spouse marital history page",
          "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/helpers.unit.spec.jsx",
          "file": "/src/applications/pensions/tests/helpers.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should have appropriate number of web components",
              "fullTitle": "current spouse marital history page should have appropriate number of web components",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _render3 = (0, _react2.render)( /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  definitions: formConfig.defaultDefinitions,\n  schema: schema,\n  uiSchema: uiSchema,\n  data: data,\n  formData: {}\n})),\n    container = _render3.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypesWebComponents)).to.have.lengthOf(expectedNumberOfFields);",
              "err": {},
              "uuid": "b5ab643d-b9b0-4350-8fba-e9baaef953e2",
              "parentUUID": "7e7b8e2d-1265-47ec-aae9-4b4963076750",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "b5ab643d-b9b0-4350-8fba-e9baaef953e2"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "923bbbc4-87f1-4170-ac62-d1266c9ee269",
          "title": "current spouse marital history page",
          "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/helpers.unit.spec.jsx",
          "file": "/src/applications/pensions/tests/helpers.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should show the correct number of errors on submit for web components",
              "fullTitle": "current spouse marital history page should show the correct number of errors on submit for web components",
              "timedOut": false,
              "duration": 9,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _render4 = (0, _react2.render)( /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  definitions: formConfig.defaultDefinitions,\n  schema: schema,\n  uiSchema: uiSchema,\n  data: data,\n  formData: {}\n})),\n    container = _render4.container,\n    getByRole = _render4.getByRole;\ngetByRole('button', {\n  name: /submit/i\n}).click();\nvar nodes = Array.from(container.querySelectorAll(\"\".concat(expectedFieldTypesWebComponents, \", \").concat(wrapperWebComponents)));\nvar errors = nodes.filter(function (node) {\n  return node.error;\n});\n(0, _chai.expect)(errors).to.have.lengthOf(expectedNumberOfErrors);",
              "err": {},
              "uuid": "07a2aafc-d95f-4bfc-9c20-48b94a1a64a1",
              "parentUUID": "923bbbc4-87f1-4170-ac62-d1266c9ee269",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "07a2aafc-d95f-4bfc-9c20-48b94a1a64a1"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 9,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "3c90949d-2e54-413d-ba18-d7b8eab9dc4d",
          "title": "current spouse full name page",
          "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/helpers.unit.spec.jsx",
          "file": "/src/applications/pensions/tests/helpers.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should have appropriate number of web components",
              "fullTitle": "current spouse full name page should have appropriate number of web components",
              "timedOut": false,
              "duration": 11,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _render3 = (0, _react2.render)( /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  definitions: formConfig.defaultDefinitions,\n  schema: schema,\n  uiSchema: uiSchema,\n  data: data,\n  formData: {}\n})),\n    container = _render3.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypesWebComponents)).to.have.lengthOf(expectedNumberOfFields);",
              "err": {},
              "uuid": "332df332-50ae-4b01-aaeb-e9938dad51ea",
              "parentUUID": "3c90949d-2e54-413d-ba18-d7b8eab9dc4d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "332df332-50ae-4b01-aaeb-e9938dad51ea"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 11,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "7c59128f-a9b6-434a-a579-83dd502492e6",
          "title": "current spouse full name page",
          "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/helpers.unit.spec.jsx",
          "file": "/src/applications/pensions/tests/helpers.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should show the correct number of errors on submit for web components",
              "fullTitle": "current spouse full name page should show the correct number of errors on submit for web components",
              "timedOut": false,
              "duration": 13,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _render4 = (0, _react2.render)( /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  definitions: formConfig.defaultDefinitions,\n  schema: schema,\n  uiSchema: uiSchema,\n  data: data,\n  formData: {}\n})),\n    container = _render4.container,\n    getByRole = _render4.getByRole;\ngetByRole('button', {\n  name: /submit/i\n}).click();\nvar nodes = Array.from(container.querySelectorAll(\"\".concat(expectedFieldTypesWebComponents, \", \").concat(wrapperWebComponents)));\nvar errors = nodes.filter(function (node) {\n  return node.error;\n});\n(0, _chai.expect)(errors).to.have.lengthOf(expectedNumberOfErrors);",
              "err": {},
              "uuid": "3e736a47-4285-4ffc-a787-dd427f18fd7b",
              "parentUUID": "7c59128f-a9b6-434a-a579-83dd502492e6",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "3e736a47-4285-4ffc-a787-dd427f18fd7b"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 13,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "881a055a-78a2-4c8d-a890-a9a187e8f691",
          "title": "reason for separation page",
          "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/helpers.unit.spec.jsx",
          "file": "/src/applications/pensions/tests/helpers.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should have appropriate number of web components",
              "fullTitle": "reason for separation page should have appropriate number of web components",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _render3 = (0, _react2.render)( /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  definitions: formConfig.defaultDefinitions,\n  schema: schema,\n  uiSchema: uiSchema,\n  data: data,\n  formData: {}\n})),\n    container = _render3.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypesWebComponents)).to.have.lengthOf(expectedNumberOfFields);",
              "err": {},
              "uuid": "aa6f0f2b-40c3-4289-bad5-ae1641d8e1c5",
              "parentUUID": "881a055a-78a2-4c8d-a890-a9a187e8f691",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "aa6f0f2b-40c3-4289-bad5-ae1641d8e1c5"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "95044a31-ebd0-4d91-886f-7085f52d6592",
          "title": "reason for separation page",
          "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/helpers.unit.spec.jsx",
          "file": "/src/applications/pensions/tests/helpers.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should show the correct number of errors on submit for web components",
              "fullTitle": "reason for separation page should show the correct number of errors on submit for web components",
              "timedOut": false,
              "duration": 12,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _render4 = (0, _react2.render)( /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  definitions: formConfig.defaultDefinitions,\n  schema: schema,\n  uiSchema: uiSchema,\n  data: data,\n  formData: {}\n})),\n    container = _render4.container,\n    getByRole = _render4.getByRole;\ngetByRole('button', {\n  name: /submit/i\n}).click();\nvar nodes = Array.from(container.querySelectorAll(\"\".concat(expectedFieldTypesWebComponents, \", \").concat(wrapperWebComponents)));\nvar errors = nodes.filter(function (node) {\n  return node.error;\n});\n(0, _chai.expect)(errors).to.have.lengthOf(expectedNumberOfErrors);",
              "err": {},
              "uuid": "2b1c29a6-c3af-4aaf-ae2a-73f9dd9f0e09",
              "parentUUID": "95044a31-ebd0-4d91-886f-7085f52d6592",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "2b1c29a6-c3af-4aaf-ae2a-73f9dd9f0e09"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 12,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "f65768f5-3422-48d1-86d9-983388c077a8",
          "title": "marital status page",
          "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/helpers.unit.spec.jsx",
          "file": "/src/applications/pensions/tests/helpers.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should have appropriate number of web components",
              "fullTitle": "marital status page should have appropriate number of web components",
              "timedOut": false,
              "duration": 6,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _render3 = (0, _react2.render)( /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  definitions: formConfig.defaultDefinitions,\n  schema: schema,\n  uiSchema: uiSchema,\n  data: data,\n  formData: {}\n})),\n    container = _render3.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypesWebComponents)).to.have.lengthOf(expectedNumberOfFields);",
              "err": {},
              "uuid": "6c302169-6dac-44d0-ba4c-f050cfa1f30b",
              "parentUUID": "f65768f5-3422-48d1-86d9-983388c077a8",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "6c302169-6dac-44d0-ba4c-f050cfa1f30b"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 6,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "ba4c0546-e6e6-481f-b2d2-c8fe528ae4d1",
          "title": "marital status page",
          "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/helpers.unit.spec.jsx",
          "file": "/src/applications/pensions/tests/helpers.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should show the correct number of errors on submit for web components",
              "fullTitle": "marital status page should show the correct number of errors on submit for web components",
              "timedOut": false,
              "duration": 14,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _render4 = (0, _react2.render)( /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  definitions: formConfig.defaultDefinitions,\n  schema: schema,\n  uiSchema: uiSchema,\n  data: data,\n  formData: {}\n})),\n    container = _render4.container,\n    getByRole = _render4.getByRole;\ngetByRole('button', {\n  name: /submit/i\n}).click();\nvar nodes = Array.from(container.querySelectorAll(\"\".concat(expectedFieldTypesWebComponents, \", \").concat(wrapperWebComponents)));\nvar errors = nodes.filter(function (node) {\n  return node.error;\n});\n(0, _chai.expect)(errors).to.have.lengthOf(expectedNumberOfErrors);",
              "err": {},
              "uuid": "f270250e-75e4-4fa4-a078-1bfaa03279fd",
              "parentUUID": "ba4c0546-e6e6-481f-b2d2-c8fe528ae4d1",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f270250e-75e4-4fa4-a078-1bfaa03279fd"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 14,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "15d0f536-7700-4826-8f77-517d36d6d283",
          "title": "medical centers page",
          "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/helpers.unit.spec.jsx",
          "file": "/src/applications/pensions/tests/helpers.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should have appropriate number of web components",
              "fullTitle": "medical centers page should have appropriate number of web components",
              "timedOut": false,
              "duration": 10,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _render3 = (0, _react2.render)( /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  definitions: formConfig.defaultDefinitions,\n  schema: schema,\n  uiSchema: uiSchema,\n  data: data,\n  formData: {}\n})),\n    container = _render3.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypesWebComponents)).to.have.lengthOf(expectedNumberOfFields);",
              "err": {},
              "uuid": "f0d5c0c9-942a-40f8-be09-001b99cf4400",
              "parentUUID": "15d0f536-7700-4826-8f77-517d36d6d283",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f0d5c0c9-942a-40f8-be09-001b99cf4400"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 10,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "86917432-7e63-4450-bf76-283cfe9844f0",
          "title": "medical centers page",
          "fullFile": "/Users/zack/development/coforma/va/vets-website/src/applications/pensions/tests/helpers.unit.spec.jsx",
          "file": "/src/applications/pensions/tests/helpers.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should show the correct number of errors on submit for web components",
              "fullTitle": "medical centers page should show the correct number of errors on submit for web components",
              "timedOut": false,
              "duration": 13,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _render4 = (0, _react2.render)( /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  definitions: formConfig.defaultDefinitions,\n  schema: schema,\n  uiSchema: uiSchema,\n  data: data,\n  formData: {}\n})),\n    container = _render4.container,\n    getByRole = _render4.getByRole;\ngetByRole('button', {\n  name: /submit/i\n}).click();\nvar nodes = Array.from(container.querySelectorAll(\"\".concat(expectedFieldTypesWebComponents, \", \").concat(wrapperWebComponents)));\nvar errors = nodes.filter(function (node) {\n  return node.error;\n});\n(0, _chai.expect)(errors).to.have.lengthOf(expectedNumberOfErrors);",
              "err": {},
              "uuid": "865b96d9-fcea-46ae-b2e4-0bbcf3a52d05",
              "parentUUID": "86917432-7e63-4450-bf76-283cfe9844f0",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "865b96d9-fcea-46ae-b2e4-0bbcf3a52d05"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 13,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 10000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "undefined_2024-01-03T152844477Z",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "min",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "id": "default",
        "consoleReporter": "min",
        "reportDir": "mocha/results",
        "reportFilename": "undefined_2024-01-03T152844477Z",
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}