{
  "stats": {
    "suites": 19,
    "tests": 119,
    "passes": 119,
    "pending": 0,
    "failures": 0,
    "start": "2023-10-19T20:13:02.348Z",
    "end": "2023-10-19T20:13:02.748Z",
    "duration": 400,
    "testsRegistered": 119,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "879b1e09-9031-44fd-8c75-3c2c6e3fcc89",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [
        {
          "title": "\"before each\" hook: beforeEach in \"{root}\"",
          "fullTitle": "\"before each\" hook: beforeEach in \"{root}\"",
          "timedOut": false,
          "duration": 2,
          "state": null,
          "speed": null,
          "pass": false,
          "fail": false,
          "pending": false,
          "context": null,
          "code": "setupJSDom();\nresetFetch();\nif (!isStressTest) {\n  checkAllowList(this);\n}",
          "err": {},
          "uuid": "406dcb68-f5c7-4211-8f11-f4e7f76b5e77",
          "parentUUID": "879b1e09-9031-44fd-8c75-3c2c6e3fcc89",
          "isHook": true,
          "skipped": false
        }
      ],
      "afterHooks": [
        {
          "title": "\"after each\" hook: afterEach in \"{root}\"",
          "fullTitle": "\"after each\" hook: afterEach in \"{root}\"",
          "timedOut": false,
          "duration": 0,
          "state": null,
          "speed": null,
          "pass": false,
          "fail": false,
          "pending": false,
          "context": null,
          "code": "localStorage.clear();",
          "err": {},
          "uuid": "a723f27a-a97a-4290-a528-dcbc6688c780",
          "parentUUID": "879b1e09-9031-44fd-8c75-3c2c6e3fcc89",
          "isHook": true,
          "skipped": false
        },
        {
          "title": "\"after each\" hook in \"{root}\"",
          "fullTitle": "\"after each\" hook in \"{root}\"",
          "timedOut": false,
          "duration": 0,
          "state": null,
          "speed": null,
          "pass": false,
          "fail": false,
          "pending": false,
          "context": null,
          "code": "(0, _pure.cleanup)();",
          "err": {},
          "uuid": "c690d956-f653-46b7-b46c-8bc548254745",
          "parentUUID": "879b1e09-9031-44fd-8c75-3c2c6e3fcc89",
          "isHook": true,
          "skipped": false
        }
      ],
      "tests": [],
      "suites": [
        {
          "uuid": "57c78b12-b566-4819-8214-aea20dac6af3",
          "title": "getCalculatedBenefits",
          "fullFile": "/Users/gcionapoleon/Documents/Github-2023/Github_three/vets-website/src/applications/gi/tests/selectors/calculator.unit.spec.js",
          "file": "/src/applications/gi/tests/selectors/calculator.unit.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should hide term 2 and 3 calculations if only attending 1 term",
              "fullTitle": "getCalculatedBenefits should hide term 2 and 3 calculations if only attending 1 term",
              "timedOut": false,
              "duration": 4,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var state = (0, _set.default)('calculator', _objectSpread(_objectSpread({}, defaultState.calculator), {}, {\n  calendar: 'nontraditional',\n  numberNontradTerms: '1'\n}), defaultState);\nvar _getCalculatedBenefit4 = (0, _calculator.getCalculatedBenefits)(state),\n    outputs = _getCalculatedBenefit4.outputs;\n(0, _chai.expect)(outputs.perTerm.tuitionFees.terms[1].visible).to.be.false;\n(0, _chai.expect)(outputs.perTerm.tuitionFees.terms[2].visible).to.be.false;\n(0, _chai.expect)(outputs.perTerm.housingAllowance.terms[1].visible).to.be.false;\n(0, _chai.expect)(outputs.perTerm.housingAllowance.terms[2].visible).to.be.false;\n(0, _chai.expect)(outputs.perTerm.yellowRibbon.terms[2].visible).to.be.false;\n(0, _chai.expect)(outputs.perTerm.yellowRibbon.terms[3].visible).to.be.false;\n(0, _chai.expect)(outputs.perTerm.yellowRibbon.terms[4].visible).to.be.false;\n(0, _chai.expect)(outputs.perTerm.yellowRibbon.terms[5].visible).to.be.false;",
              "err": {},
              "uuid": "19384c07-16b5-43f3-ae60-3f201eb4e853",
              "parentUUID": "57c78b12-b566-4819-8214-aea20dac6af3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should show the in-state field for public schols",
              "fullTitle": "getCalculatedBenefits should show the in-state field for public schols",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var state = (0, _set.default)('profile.attributes.type', 'PUBLIC', defaultState);\n(0, _chai.expect)((0, _calculator.getCalculatedBenefits)(state).inputs.inState).to.be.true;",
              "err": {},
              "uuid": "73a05e4c-512a-4ea3-bdc2-deb1d011ef50",
              "parentUUID": "57c78b12-b566-4819-8214-aea20dac6af3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should calculate housing allowance as DEARATEFULLTIME * 0.25 for DEA (35) if enrolledOld is quarter and tuitionFeesPerTerm > totalHousingAllowance",
              "fullTitle": "getCalculatedBenefits should calculate housing allowance as DEARATEFULLTIME * 0.25 for DEA (35) if enrolledOld is quarter and tuitionFeesPerTerm > totalHousingAllowance",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var state = (0, _set.default)('calculator.enrolledOld', 'quarter', defaultState);\nstate = (0, _set.default)('eligibility.giBillChapter', '35', state);\n(0, _chai.expect)((0, _calculator.getCalculatedBenefits)(state).outputs.housingAllowance.value).to.equal((0, _helpers.formatCurrency)(defaultState.constants.constants.DEARATEUPTOONEQUARTER));",
              "err": {},
              "uuid": "5715a2bf-e4b1-46b7-b566-1ec4d437e160",
              "parentUUID": "57c78b12-b566-4819-8214-aea20dac6af3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should use VA rate when Post-9/11 GI Bill benefit used before 1/1/2018",
              "fullTitle": "getCalculatedBenefits should use VA rate when Post-9/11 GI Bill benefit used before 1/1/2018",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var state = (0, _set.default)('profile.attributes.dodBah', 2000, defaultState);\nstate = (0, _set.default)('calculator.giBillBenefit', 'yes', state);\n(0, _chai.expect)((0, _calculator.getCalculatedBenefits)(state).outputs.housingAllowance.value).to.equal('$2,271');",
              "err": {},
              "uuid": "74ada178-dccb-4158-9d72-f6a2090c0150",
              "parentUUID": "57c78b12-b566-4819-8214-aea20dac6af3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should calculate housing allowance as DEARATEFULLTIME * 0.5 for DEA (35) if enrolledOld is 'less than half' and tuitionFeesPerTerm > totalHousingAllowance",
              "fullTitle": "getCalculatedBenefits should calculate housing allowance as DEARATEFULLTIME * 0.5 for DEA (35) if enrolledOld is 'less than half' and tuitionFeesPerTerm > totalHousingAllowance",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var state = (0, _set.default)('calculator.enrolledOld', 'less than half', defaultState);\nstate = (0, _set.default)('eligibility.giBillChapter', '35', state);\n(0, _chai.expect)((0, _calculator.getCalculatedBenefits)(state).outputs.housingAllowance.value).to.equal((0, _helpers.formatCurrency)(defaultState.constants.constants.DEARATEUPTOONEHALF));",
              "err": {},
              "uuid": "4e705485-295a-4d96-805e-67fa72beb61a",
              "parentUUID": "57c78b12-b566-4819-8214-aea20dac6af3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should hide Yellow Ribbon fields when school does not offer it",
              "fullTitle": "getCalculatedBenefits should hide Yellow Ribbon fields when school does not offer it",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var state = (0, _set.default)('profile.attributes.yr', false, defaultState);\nvar _getCalculatedBenefit2 = (0, _calculator.getCalculatedBenefits)(state),\n    inputs = _getCalculatedBenefit2.inputs,\n    outputs = _getCalculatedBenefit2.outputs;\n(0, _chai.expect)(inputs.yellowRibbon).to.be.false;\n(0, _chai.expect)(outputs.perTerm.yellowRibbon.visible).to.be.false;",
              "err": {},
              "uuid": "5f2cdefa-186b-4ed6-82ae-6b71efe3c279",
              "parentUUID": "57c78b12-b566-4819-8214-aea20dac6af3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should show scholarships in calculations if there were any",
              "fullTitle": "getCalculatedBenefits should show scholarships in calculations if there were any",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var state = (0, _set.default)('calculator.scholarships', 10000, defaultState);\nstate = (0, _set.default)('calculator.tuitionAssist', 5000, state);\n(0, _chai.expect)((0, _calculator.getCalculatedBenefits)(state).outputs.yourScholarships.visible).to.be.true;",
              "err": {},
              "uuid": "ba89ddcf-6016-407b-b566-53f3227fcf72",
              "parentUUID": "57c78b12-b566-4819-8214-aea20dac6af3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should hide scholarships in calculations if there were none",
              "fullTitle": "getCalculatedBenefits should hide scholarships in calculations if there were none",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var state = (0, _set.default)('calculator.scholarships', 0, defaultState);\nstate = (0, _set.default)('calculator.tuitionAssist', 0, state);\n(0, _chai.expect)((0, _calculator.getCalculatedBenefits)(state).outputs.yourScholarships.visible).to.be.false;",
              "err": {},
              "uuid": "6430853a-f9bb-4f31-9372-db1b1a2413b2",
              "parentUUID": "57c78b12-b566-4819-8214-aea20dac6af3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should use DOD rate when available",
              "fullTitle": "getCalculatedBenefits should use DOD rate when available",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var state = (0, _set.default)('profile.attributes.dodBah', 2000, defaultState);\nstate = (0, _set.default)('calculator.giBillBenefit', 'no', state);\n(0, _chai.expect)((0, _calculator.getCalculatedBenefits)(state).outputs.housingAllowance.value).to.equal('$2,000');",
              "err": {},
              "uuid": "f7bd4ac1-6576-4229-be64-c0ed30ff06eb",
              "parentUUID": "57c78b12-b566-4819-8214-aea20dac6af3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should hide school-related fields for OJT",
              "fullTitle": "getCalculatedBenefits should hide school-related fields for OJT",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var state = (0, _set.default)('profile.attributes.type', 'OJT', defaultState);\nvar _getCalculatedBenefit3 = (0, _calculator.getCalculatedBenefits)(state),\n    inputs = _getCalculatedBenefit3.inputs,\n    outputs = _getCalculatedBenefit3.outputs;\n(0, _chai.expect)(inputs.tuition).to.be.false;\n(0, _chai.expect)(inputs.books).to.be.false;\n(0, _chai.expect)(inputs.yellowRibbon).to.be.false;\n(0, _chai.expect)(inputs.scholarships).to.be.false;\n(0, _chai.expect)(inputs.tuitionAssist).to.be.false;\n(0, _chai.expect)(inputs.enrolled).to.be.false;\n(0, _chai.expect)(inputs.enrolledOld).to.be.false;\n(0, _chai.expect)(inputs.calendar).to.be.false;\n(0, _chai.expect)(outputs.tuitionAndFeesCharged.visible).to.be.false;\n(0, _chai.expect)(outputs.giBillPaysToSchool.visible).to.be.false;\n(0, _chai.expect)(outputs.yourScholarships.visible).to.be.false;\n(0, _chai.expect)(outputs.outOfPocketTuition.visible).to.be.false;\n(0, _chai.expect)(outputs.totalPaidToYou.visible).to.be.false;\n(0, _chai.expect)(outputs.perTerm.tuitionFees.visible).to.be.false;\n(0, _chai.expect)(outputs.perTerm.yellowRibbon.visible).to.be.false;",
              "err": {},
              "uuid": "7706c141-81af-4cc7-901c-f8b006a59e07",
              "parentUUID": "57c78b12-b566-4819-8214-aea20dac6af3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should show the books field for GI Bill Ch 31",
              "fullTitle": "getCalculatedBenefits should show the books field for GI Bill Ch 31",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var state = (0, _set.default)('eligibility.giBillChapter', '31', defaultState);\n(0, _chai.expect)((0, _calculator.getCalculatedBenefits)(state).inputs.books).to.be.true;",
              "err": {},
              "uuid": "20b87e23-54ae-426b-bbe1-df0ee0b196a1",
              "parentUUID": "57c78b12-b566-4819-8214-aea20dac6af3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should hide term 3 calculations if attending fewer than 3 terms",
              "fullTitle": "getCalculatedBenefits should hide term 3 calculations if attending fewer than 3 terms",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var state = (0, _set.default)('calculator.calendar', 'semesters', defaultState);\nvar _getCalculatedBenefit5 = (0, _calculator.getCalculatedBenefits)(state),\n    outputs = _getCalculatedBenefit5.outputs;\n(0, _chai.expect)(outputs.perTerm.tuitionFees.terms[2].visible).to.be.false;\n(0, _chai.expect)(outputs.perTerm.housingAllowance.terms[2].visible).to.be.false;\n(0, _chai.expect)(outputs.perTerm.yellowRibbon.terms[4].visible).to.be.false;\n(0, _chai.expect)(outputs.perTerm.yellowRibbon.terms[5].visible).to.be.false;",
              "err": {},
              "uuid": "93c32116-c2ce-4285-a60f-8501812b416c",
              "parentUUID": "57c78b12-b566-4819-8214-aea20dac6af3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should show Yellow Ribbon fields when eligible",
              "fullTitle": "getCalculatedBenefits should show Yellow Ribbon fields when eligible",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var state = (0, _set.default)('calculator.yellowRibbonRecipient', 'yes', defaultState);\nvar _getCalculatedBenefit = (0, _calculator.getCalculatedBenefits)(state),\n    inputs = _getCalculatedBenefit.inputs,\n    outputs = _getCalculatedBenefit.outputs;\n(0, _chai.expect)(inputs.yellowRibbon).to.be.true;\n(0, _chai.expect)(outputs.perTerm.yellowRibbon.visible).to.be.true;",
              "err": {},
              "uuid": "3dfe21d1-4610-4099-834d-0c947a3d0a63",
              "parentUUID": "57c78b12-b566-4819-8214-aea20dac6af3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should calculate DEARATETHREEQUARTERS housing allowance for DEA (35) if enrolledOld is 'three quaters'",
              "fullTitle": "getCalculatedBenefits should calculate DEARATETHREEQUARTERS housing allowance for DEA (35) if enrolledOld is 'three quaters'",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var state = (0, _set.default)('calculator.enrolledOld', 'three quarters', defaultState);\nstate = (0, _set.default)('eligibility.giBillChapter', '35', state);\n(0, _chai.expect)((0, _calculator.getCalculatedBenefits)(state).outputs.housingAllowance.value).to.equal((0, _helpers.formatCurrency)(defaultState.constants.constants.DEARATETHREEQUARTERS));",
              "err": {},
              "uuid": "02412b98-b579-4c88-9e5c-ff4cafe2b8f9",
              "parentUUID": "57c78b12-b566-4819-8214-aea20dac6af3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should show the buy-up field for GI Bill Ch 30",
              "fullTitle": "getCalculatedBenefits should show the buy-up field for GI Bill Ch 30",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var state = (0, _set.default)('eligibility.giBillChapter', '30', defaultState);\n(0, _chai.expect)((0, _calculator.getCalculatedBenefits)(state).inputs.buyUp).to.be.true;",
              "err": {},
              "uuid": "d4334faa-384b-4729-9cee-effe7a6b44ef",
              "parentUUID": "57c78b12-b566-4819-8214-aea20dac6af3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should show the tuition assistance field for GI Bill Ch 33 with eligible military status",
              "fullTitle": "getCalculatedBenefits should show the tuition assistance field for GI Bill Ch 33 with eligible military status",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var state = (0, _set.default)('eligibility.militaryStatus', 'national guard / reserves', defaultState);\n(0, _chai.expect)((0, _calculator.getCalculatedBenefits)(state).inputs.tuitionAssist).to.be.true;",
              "err": {},
              "uuid": "a88bbb16-e467-4664-8a23-0f4c8f0bc8d3",
              "parentUUID": "57c78b12-b566-4819-8214-aea20dac6af3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should hide kicker fields for GI Bill Ch 35",
              "fullTitle": "getCalculatedBenefits should hide kicker fields for GI Bill Ch 35",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var state = (0, _set.default)('eligibility.giBillChapter', '35', defaultState);\n(0, _chai.expect)((0, _calculator.getCalculatedBenefits)(state).inputs.kicker).to.be.false;",
              "err": {},
              "uuid": "8e7985d9-be88-4864-b30a-9d4081125f0d",
              "parentUUID": "57c78b12-b566-4819-8214-aea20dac6af3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should calculate DEARATEONEHALF housing allowance for DEA (35) if enrolledOld is half",
              "fullTitle": "getCalculatedBenefits should calculate DEARATEONEHALF housing allowance for DEA (35) if enrolledOld is half",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var state = (0, _set.default)('calculator.enrolledOld', 'half', defaultState);\nstate = (0, _set.default)('eligibility.giBillChapter', '35', state);\n(0, _chai.expect)((0, _calculator.getCalculatedBenefits)(state).outputs.housingAllowance.value).to.equal((0, _helpers.formatCurrency)(defaultState.constants.constants.DEARATEONEHALF));",
              "err": {},
              "uuid": "dfdc1bc3-7aaa-44e7-8439-9d613cfa8d21",
              "parentUUID": "57c78b12-b566-4819-8214-aea20dac6af3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should hide kicker fields for correspondence schools",
              "fullTitle": "getCalculatedBenefits should hide kicker fields for correspondence schools",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var state = (0, _set.default)('profile.attributes.type', 'correspondence', defaultState);\n(0, _chai.expect)((0, _calculator.getCalculatedBenefits)(state).inputs.kicker).to.be.false;",
              "err": {},
              "uuid": "461298fa-14a3-471b-954c-bc5bb204038b",
              "parentUUID": "57c78b12-b566-4819-8214-aea20dac6af3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should calculate housing allowance using half the average DOD/VA rate if OJT and online only courses",
              "fullTitle": "getCalculatedBenefits should calculate housing allowance using half the average DOD/VA rate if OJT and online only courses",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var working = '30';\nvar state = _objectSpread(_objectSpread({}, defaultState), {}, {\n  calculator: _objectSpread(_objectSpread({}, defaultState.calculator), {}, {\n    type: 'OJT',\n    working: working\n  }),\n  eligibility: _objectSpread(_objectSpread({}, defaultState.eligibility), {}, {\n    onlineClasses: 'yes'\n  }),\n  profile: _objectSpread(_objectSpread({}, defaultState.profile), {}, {\n    attributes: _objectSpread(_objectSpread({}, defaultState.profile.attributes), {}, {\n      type: 'ojt'\n    })\n  })\n});\nvar ropOjt = working / 30;\nvar monthlyRateFinal = ropOjt * defaultState.constants.constants.AVGDODBAH / 2;\n(0, _chai.expect)((0, _calculator.getCalculatedBenefits)(state).outputs.housingAllowance.value).to.equal((0, _helpers.formatCurrency)(monthlyRateFinal));",
              "err": {},
              "uuid": "391d6f49-8140-4a1c-821f-ec884f3b84ed",
              "parentUUID": "57c78b12-b566-4819-8214-aea20dac6af3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should hide Yellow Ribbon fields when is active duty and is thirty six months plus cumulative post-9/11 active duty service",
              "fullTitle": "getCalculatedBenefits should hide Yellow Ribbon fields when is active duty and is thirty six months plus cumulative post-9/11 active duty service",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var state = (0, _set.default)('eligibility.militaryStatus', 'active duty', defaultState);\nstate = (0, _set.default)('eligibility.giBillChapter', 33, state);\nstate = (0, _set.default)('eligibility.cumulativeService', '1.0', state);\n(0, _chai.expect)((0, _calculator.getCalculatedBenefits)(state).inputs.yellowRibbon).to.be.false;",
              "err": {},
              "uuid": "4ec314e5-ad4e-4acb-8cc3-c8f2cec86000",
              "parentUUID": "57c78b12-b566-4819-8214-aea20dac6af3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should calculate housing allowance using tuitionFeesPerTerm for DEA (35) if enrolledOld is 'less than half' and tuitionFeesPerTerm < totalHousingAllowance",
              "fullTitle": "getCalculatedBenefits should calculate housing allowance using tuitionFeesPerTerm for DEA (35) if enrolledOld is 'less than half' and tuitionFeesPerTerm < totalHousingAllowance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var tuitionFees = 4430;\nvar state = _objectSpread(_objectSpread({}, defaultState), {}, {\n  calculator: _objectSpread(_objectSpread({}, defaultState.calculator), {}, {\n    enrolledOld: 'less than half',\n    calendar: 'semesters',\n    tuitionInState: tuitionFees,\n    tuitionOutOfState: 8600,\n    tuitionFees: tuitionFees,\n    inStateTuitionFees: tuitionFees,\n    books: 1500\n  }),\n  eligibility: _objectSpread(_objectSpread({}, defaultState.eligibility), {}, {\n    giBillChapter: '35'\n  })\n});\nvar tuitionFeesPerTerm = tuitionFees / 2;\nvar housingAllowance = tuitionFeesPerTerm / 4.5;\n(0, _chai.expect)((0, _calculator.getCalculatedBenefits)(state).outputs.housingAllowance.value).to.equal((0, _helpers.formatCurrency)(housingAllowance));",
              "err": {},
              "uuid": "55b22a87-1575-48f2-a97c-2d1c2de73958",
              "parentUUID": "57c78b12-b566-4819-8214-aea20dac6af3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should fall back to VA rate",
              "fullTitle": "getCalculatedBenefits should fall back to VA rate",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var state = (0, _set.default)('calculator.giBillBenefit', 'no', defaultState);\n(0, _chai.expect)((0, _calculator.getCalculatedBenefits)(state).outputs.housingAllowance.value).to.equal('$2,271');",
              "err": {},
              "uuid": "282abab6-1fef-4fe2-b02a-bbd38044d5b2",
              "parentUUID": "57c78b12-b566-4819-8214-aea20dac6af3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should calculate DEARATEFULLTIME housing allowance for DEA (35) if enrolledOld is full",
              "fullTitle": "getCalculatedBenefits should calculate DEARATEFULLTIME housing allowance for DEA (35) if enrolledOld is full",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var state = (0, _set.default)('calculator.enrolledOld', 'full', defaultState);\nstate = (0, _set.default)('eligibility.giBillChapter', '35', state);\n(0, _chai.expect)((0, _calculator.getCalculatedBenefits)(state).outputs.housingAllowance.value).to.equal((0, _helpers.formatCurrency)(defaultState.constants.constants.DEARATEFULLTIME));",
              "err": {},
              "uuid": "69ad59e1-da1b-496f-97d6-1145228a79ef",
              "parentUUID": "57c78b12-b566-4819-8214-aea20dac6af3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should calculate no housing allowance for active duty and Ch 33",
              "fullTitle": "getCalculatedBenefits should calculate no housing allowance for active duty and Ch 33",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var state = (0, _set.default)('eligibility.militaryStatus', 'active duty', defaultState);\n(0, _chai.expect)((0, _calculator.getCalculatedBenefits)(state).outputs.housingAllowance.value).to.equal('$0');",
              "err": {},
              "uuid": "f99cb9e0-397b-45de-a4f7-12696935f656",
              "parentUUID": "57c78b12-b566-4819-8214-aea20dac6af3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should calculate housing allowance using tuitionFeesPerTerm for DEA (35) if enrolledOld is quarter and tuitionFeesPerTerm < totalHousingAllowance",
              "fullTitle": "getCalculatedBenefits should calculate housing allowance using tuitionFeesPerTerm for DEA (35) if enrolledOld is quarter and tuitionFeesPerTerm < totalHousingAllowance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var tuitionFees = 2500;\nvar state = _objectSpread(_objectSpread({}, defaultState), {}, {\n  calculator: _objectSpread(_objectSpread({}, defaultState.calculator), {}, {\n    enrolledOld: 'quarter',\n    calendar: 'semesters',\n    tuitionInState: tuitionFees,\n    tuitionOutOfState: 8600,\n    tuitionFees: tuitionFees,\n    inStateTuitionFees: tuitionFees,\n    books: 1500\n  }),\n  eligibility: _objectSpread(_objectSpread({}, defaultState.eligibility), {}, {\n    giBillChapter: '35'\n  })\n});\nvar tuitionFeesPerTerm = tuitionFees / 2;\nvar housingAllowance = tuitionFeesPerTerm / 4.5;\n(0, _chai.expect)((0, _calculator.getCalculatedBenefits)(state).outputs.housingAllowance.value).to.equal((0, _helpers.formatCurrency)(housingAllowance));",
              "err": {},
              "uuid": "dc6e0c80-9643-4b25-950a-7bf1996cd4a7",
              "parentUUID": "57c78b12-b566-4819-8214-aea20dac6af3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should hide kicker fields for flight schools",
              "fullTitle": "getCalculatedBenefits should hide kicker fields for flight schools",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var state = (0, _set.default)('profile.attributes.type', 'flight', defaultState);\n(0, _chai.expect)((0, _calculator.getCalculatedBenefits)(state).inputs.kicker).to.be.false;",
              "err": {},
              "uuid": "417ae5ee-3eaf-45cd-8cac-e1e70b72fa0c",
              "parentUUID": "57c78b12-b566-4819-8214-aea20dac6af3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should calculate housing allowance using tuitionFeesPerTerm for DEA (35) if OJT",
              "fullTitle": "getCalculatedBenefits should calculate housing allowance using tuitionFeesPerTerm for DEA (35) if OJT",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var working = '30';\nvar state = _objectSpread(_objectSpread({}, defaultState), {}, {\n  calculator: _objectSpread(_objectSpread({}, defaultState.calculator), {}, {\n    type: 'OJT',\n    working: working\n  }),\n  eligibility: _objectSpread(_objectSpread({}, defaultState.eligibility), {}, {\n    giBillChapter: '35'\n  }),\n  profile: _objectSpread(_objectSpread({}, defaultState.profile), {}, {\n    attributes: _objectSpread(_objectSpread({}, defaultState.profile.attributes), {}, {\n      type: 'ojt'\n    })\n  })\n});\nvar ropOjt = working / 30;\nvar monthlyRateFinal = ropOjt * defaultState.constants.constants.DEARATEOJT;\n(0, _chai.expect)((0, _calculator.getCalculatedBenefits)(state).outputs.housingAllowance.value).to.equal((0, _helpers.formatCurrency)(monthlyRateFinal));",
              "err": {},
              "uuid": "0ddb9732-9e9b-42f2-91de-a137b37de0a2",
              "parentUUID": "57c78b12-b566-4819-8214-aea20dac6af3",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "19384c07-16b5-43f3-ae60-3f201eb4e853",
            "73a05e4c-512a-4ea3-bdc2-deb1d011ef50",
            "5715a2bf-e4b1-46b7-b566-1ec4d437e160",
            "74ada178-dccb-4158-9d72-f6a2090c0150",
            "4e705485-295a-4d96-805e-67fa72beb61a",
            "5f2cdefa-186b-4ed6-82ae-6b71efe3c279",
            "ba89ddcf-6016-407b-b566-53f3227fcf72",
            "6430853a-f9bb-4f31-9372-db1b1a2413b2",
            "f7bd4ac1-6576-4229-be64-c0ed30ff06eb",
            "7706c141-81af-4cc7-901c-f8b006a59e07",
            "20b87e23-54ae-426b-bbe1-df0ee0b196a1",
            "93c32116-c2ce-4285-a60f-8501812b416c",
            "3dfe21d1-4610-4099-834d-0c947a3d0a63",
            "02412b98-b579-4c88-9e5c-ff4cafe2b8f9",
            "d4334faa-384b-4729-9cee-effe7a6b44ef",
            "a88bbb16-e467-4664-8a23-0f4c8f0bc8d3",
            "8e7985d9-be88-4864-b30a-9d4081125f0d",
            "dfdc1bc3-7aaa-44e7-8439-9d613cfa8d21",
            "461298fa-14a3-471b-954c-bc5bb204038b",
            "391d6f49-8140-4a1c-821f-ec884f3b84ed",
            "4ec314e5-ad4e-4acb-8cc3-c8f2cec86000",
            "55b22a87-1575-48f2-a97c-2d1c2de73958",
            "282abab6-1fef-4fe2-b02a-bbd38044d5b2",
            "69ad59e1-da1b-496f-97d6-1145228a79ef",
            "f99cb9e0-397b-45de-a4f7-12696935f656",
            "dc6e0c80-9643-4b25-950a-7bf1996cd4a7",
            "417ae5ee-3eaf-45cd-8cac-e1e70b72fa0c",
            "0ddb9732-9e9b-42f2-91de-a137b37de0a2"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 13,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "f5647fb3-6a29-482f-b4c0-c1d2379cc57c",
          "title": "getFiltersChanged",
          "fullFile": "/Users/gcionapoleon/Documents/Github-2023/Github_three/vets-website/src/applications/gi/tests/selectors/filters.unit.spec.js",
          "file": "/src/applications/gi/tests/selectors/filters.unit.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "compares default state filters to initial state filters",
              "fullTitle": "getFiltersChanged compares default state filters to initial state filters",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, _chai.expect)((0, _filters.getFiltersChanged)(defaultState.filters)).to.be.false;",
              "err": {},
              "uuid": "43f98d62-176b-4be0-b616-b37d4685ee7c",
              "parentUUID": "f5647fb3-6a29-482f-b4c0-c1d2379cc57c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "compares modified filters to initial state filters",
              "fullTitle": "getFiltersChanged compares modified filters to initial state filters",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, _chai.expect)((0, _filters.getFiltersChanged)(_objectSpread(_objectSpread({}, defaultState.filters), {}, {\n  employers: false\n}))).to.be.true;",
              "err": {},
              "uuid": "b266bcca-3c84-4a32-91da-0871e7d56125",
              "parentUUID": "f5647fb3-6a29-482f-b4c0-c1d2379cc57c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "43f98d62-176b-4be0-b616-b37d4685ee7c",
            "b266bcca-3c84-4a32-91da-0871e7d56125"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "c83c6591-d420-4e51-91f6-679983a67db5",
          "title": "getSearchQueryChanged",
          "fullFile": "/Users/gcionapoleon/Documents/Github-2023/Github_three/vets-website/src/applications/gi/tests/selectors/search.unit.spec.js",
          "file": "/src/applications/gi/tests/selectors/search.unit.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "compares default state query to initial state query",
              "fullTitle": "getSearchQueryChanged compares default state query to initial state query",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, _chai.expect)((0, _search.getSearchQueryChanged)(defaultState.search.query)).to.be.false;",
              "err": {},
              "uuid": "24db3495-2e90-42e3-add5-871ca9d4aa24",
              "parentUUID": "c83c6591-d420-4e51-91f6-679983a67db5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "compares modified query to initial state query",
              "fullTitle": "getSearchQueryChanged compares modified query to initial state query",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, _chai.expect)((0, _search.getSearchQueryChanged)(_objectSpread(_objectSpread({}, defaultState.search.query), {}, {\n  name: 'test'\n}))).to.be.true;",
              "err": {},
              "uuid": "897d76a1-0a96-4115-ab7f-dbf35a04dba8",
              "parentUUID": "c83c6591-d420-4e51-91f6-679983a67db5",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "24db3495-2e90-42e3-add5-871ca9d4aa24",
            "897d76a1-0a96-4115-ab7f-dbf35a04dba8"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "6c7c3926-902e-4db1-8bf0-1fbab514e0ad",
          "title": "updateUrlParams",
          "fullFile": "/Users/gcionapoleon/Documents/Github-2023/Github_three/vets-website/src/applications/gi/tests/selectors/compare.unit.spec.js",
          "file": "/src/applications/gi/tests/selectors/compare.unit.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "returns url string with facility codes",
              "fullTitle": "updateUrlParams returns url string with facility codes",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var facilityCodes = ['1', '2'];\n(0, _chai.expect)((0, _compare.updateUrlParams)(facilityCodes)).to.equal(\"/compare/?facilities=\".concat(facilityCodes.join(',')));",
              "err": {},
              "uuid": "b69b52d5-e7b3-4f92-beb9-f3be92267d99",
              "parentUUID": "6c7c3926-902e-4db1-8bf0-1fbab514e0ad",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "returns url string with facility codes and version",
              "fullTitle": "updateUrlParams returns url string with facility codes and version",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var facilityCodes = ['1', '2'];\nvar version = 1;\n(0, _chai.expect)((0, _compare.updateUrlParams)(facilityCodes, version)).to.equal(\"/compare/?facilities=\".concat(facilityCodes.join(','), \"&version=\").concat(version));",
              "err": {},
              "uuid": "707f127a-d61f-41a2-9fca-46b5cd4f6f51",
              "parentUUID": "6c7c3926-902e-4db1-8bf0-1fbab514e0ad",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "b69b52d5-e7b3-4f92-beb9-f3be92267d99",
            "707f127a-d61f-41a2-9fca-46b5cd4f6f51"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "df22fd59-2ad2-4071-9a45-6e414f467561",
          "title": "getCompareCalculatorState",
          "fullFile": "/Users/gcionapoleon/Documents/Github-2023/Github_three/vets-website/src/applications/gi/tests/selectors/compare.unit.spec.js",
          "file": "/src/applications/gi/tests/selectors/compare.unit.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should return yes for giBillBenefit for USA with dodBah greater than bah",
              "fullTitle": "getCompareCalculatorState should return yes for giBillBenefit for USA with dodBah greater than bah",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var compareState = (0, _compare.getCompareCalculatorState)(defaultState.calculator, _objectSpread(_objectSpread({}, institution), {}, {\n  dodBah: 3000,\n  bah: 2500\n}), defaultState.constants);\n(0, _chai.expect)(compareState.giBillBenefit).to.equal('yes');",
              "err": {},
              "uuid": "fb1e7fc0-a95c-45f0-bc7f-6ae8a683f191",
              "parentUUID": "df22fd59-2ad2-4071-9a45-6e414f467561",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return tuitionFees as institution.tuitionInState",
              "fullTitle": "getCompareCalculatorState should return tuitionFees as institution.tuitionInState",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var compareState = (0, _compare.getCompareCalculatorState)(defaultState.calculator, institution, defaultState.constants);\n(0, _chai.expect)(compareState.tuitionFees).to.equal(institution.tuitionInState);",
              "err": {},
              "uuid": "611a2084-7d5a-4a0e-b65c-4549ac223a31",
              "parentUUID": "df22fd59-2ad2-4071-9a45-6e414f467561",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "returns yellowRibbonDegreeLevel as yellowRibbonPrograms[0].degreeLevel",
              "fullTitle": "getCompareCalculatorState returns yellowRibbonDegreeLevel as yellowRibbonPrograms[0].degreeLevel",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var compareState = (0, _compare.getCompareCalculatorState)(defaultState.calculator, institution, defaultState.constants);\n(0, _chai.expect)(compareState.yellowRibbonDegreeLevel).to.equal(institution.yellowRibbonPrograms[0].degreeLevel);",
              "err": {},
              "uuid": "5ce695c7-7859-4eff-b7f2-31ce5c6b61e0",
              "parentUUID": "df22fd59-2ad2-4071-9a45-6e414f467561",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "returns default values for yellowRibbon values when no yellowRibbonPrograms",
              "fullTitle": "getCompareCalculatorState returns default values for yellowRibbon values when no yellowRibbonPrograms",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var compareState = (0, _compare.getCompareCalculatorState)(defaultState.calculator, _objectSpread(_objectSpread({}, institution), {}, {\n  yellowRibbonPrograms: []\n}), defaultState.constants);\n(0, _chai.expect)(compareState.yellowRibbonAmount).to.equal(0);\n(0, _chai.expect)(compareState.yellowRibbonDegreeLevel).to.equal('');\n(0, _chai.expect)(compareState.yellowRibbonDivision).to.equal('');\n(0, _chai.expect)(compareState.yellowRibbonDegreeLevelOptions).to.be.empty;\n(0, _chai.expect)(compareState.yellowRibbonDivisionOptions).to.be.empty;\n(0, _chai.expect)(compareState.yellowRibbonMaxAmount).to.be.undefined;\n(0, _chai.expect)(compareState.yellowRibbonMaxNumberOfStudents).to.be.undefined;\n(0, _chai.expect)(compareState.yellowRibbonPrograms).to.be.empty;\n(0, _chai.expect)(compareState.yellowRibbonProgramIndex).to.be.undefined;",
              "err": {},
              "uuid": "83ec33d6-19ce-4dd0-aad2-0b8a7d27121c",
              "parentUUID": "df22fd59-2ad2-4071-9a45-6e414f467561",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "returns yellowRibbonDivisionOptions as array of degreeLevel",
              "fullTitle": "getCompareCalculatorState returns yellowRibbonDivisionOptions as array of degreeLevel",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var compareState = (0, _compare.getCompareCalculatorState)(defaultState.calculator, institution, defaultState.constants);\nvar yellowRibbonDivisionOptions = _toConsumableArray(new Set(institution.yellowRibbonPrograms.filter(function (program) {\n  return program.degreeLevel === compareState.yellowRibbonDegreeLevelOptions[0];\n}).map(function (program) {\n  return program.divisionProfessionalSchool;\n})));\n(0, _chai.expect)(compareState.yellowRibbonDivisionOptions).to.be.an('array').that.includes.members(yellowRibbonDivisionOptions);",
              "err": {},
              "uuid": "d517c62c-3884-4178-a5b8-82a22f11ed45",
              "parentUUID": "df22fd59-2ad2-4071-9a45-6e414f467561",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "returns yellowRibbonPrograms as institution.yellowRibbonPrograms with indexes",
              "fullTitle": "getCompareCalculatorState returns yellowRibbonPrograms as institution.yellowRibbonPrograms with indexes",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var compareState = (0, _compare.getCompareCalculatorState)(defaultState.calculator, institution, defaultState.constants);\nvar yellowRibbonPrograms = institution.yellowRibbonPrograms.map(function (program, index) {\n  return _objectSpread(_objectSpread({}, program), {}, {\n    index: index\n  });\n});\n(0, _chai.expect)(compareState.yellowRibbonPrograms).to.be.an('array').that.deep.includes.members(yellowRibbonPrograms);",
              "err": {},
              "uuid": "78f58dca-7c2a-4949-9eac-b70ad0edc0a7",
              "parentUUID": "df22fd59-2ad2-4071-9a45-6e414f467561",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return value for giBillBenefit for non-USA based on constants",
              "fullTitle": "getCompareCalculatorState should return value for giBillBenefit for non-USA based on constants",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var compareState = (0, _compare.getCompareCalculatorState)(defaultState.calculator, _objectSpread(_objectSpread({}, institution), {}, {\n  country: 'CAN'\n}), defaultState.constants);\n(0, _chai.expect)(compareState.giBillBenefit).to.equal('yes');",
              "err": {},
              "uuid": "6e865783-7d9e-450c-ac92-06e4e0ca4abc",
              "parentUUID": "df22fd59-2ad2-4071-9a45-6e414f467561",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return tuitionFees as 0",
              "fullTitle": "getCompareCalculatorState should return tuitionFees as 0",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var compareState = (0, _compare.getCompareCalculatorState)(defaultState.calculator, _objectSpread(_objectSpread({}, institution), {}, {\n  tuitionInState: null\n}), defaultState.constants);\n(0, _chai.expect)(compareState.tuitionFees).to.equal(0);",
              "err": {},
              "uuid": "03841341-1c81-4123-a71c-c5494fa87a00",
              "parentUUID": "df22fd59-2ad2-4071-9a45-6e414f467561",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return calendar from institution",
              "fullTitle": "getCompareCalculatorState should return calendar from institution",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var compareState = (0, _compare.getCompareCalculatorState)(defaultState.calculator, institution, defaultState.constants);\n(0, _chai.expect)(compareState.calendar).to.equal(institution.calendar);",
              "err": {},
              "uuid": "a672c032-db2a-405f-a535-80c3a31f9a7d",
              "parentUUID": "df22fd59-2ad2-4071-9a45-6e414f467561",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return inStateTuitionFees as 0",
              "fullTitle": "getCompareCalculatorState should return inStateTuitionFees as 0",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var compareState = (0, _compare.getCompareCalculatorState)(defaultState.calculator, _objectSpread(_objectSpread({}, institution), {}, {\n  tuitionInState: null\n}), defaultState.constants);\n(0, _chai.expect)(compareState.inStateTuitionFees).to.equal(0);",
              "err": {},
              "uuid": "0b019ad3-f7a0-4596-b77e-e35854f2ddc7",
              "parentUUID": "df22fd59-2ad2-4071-9a45-6e414f467561",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should contain calculator properties",
              "fullTitle": "getCompareCalculatorState should contain calculator properties",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var compareState = (0, _compare.getCompareCalculatorState)(defaultState.calculator, institution, defaultState.constants);\n(0, _chai.expect)(compareState).to.have.any.keys(Object.keys(defaultState.calculator));",
              "err": {},
              "uuid": "061cbea8-99e5-44eb-922b-956d452b3560",
              "parentUUID": "df22fd59-2ad2-4071-9a45-6e414f467561",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return yes for giBillBenefit for USA with no dodBah",
              "fullTitle": "getCompareCalculatorState should return yes for giBillBenefit for USA with no dodBah",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var compareState = (0, _compare.getCompareCalculatorState)(defaultState.calculator, _objectSpread(_objectSpread({}, institution), {}, {\n  dodBah: null\n}), defaultState.constants);\n(0, _chai.expect)(compareState.giBillBenefit).to.equal('yes');",
              "err": {},
              "uuid": "a7764c97-c280-4e7d-bd03-d6a7aed62c38",
              "parentUUID": "df22fd59-2ad2-4071-9a45-6e414f467561",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return calendar as semesters",
              "fullTitle": "getCompareCalculatorState should return calendar as semesters",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var compareState = (0, _compare.getCompareCalculatorState)(defaultState.calculator, _objectSpread(_objectSpread({}, institution), {}, {\n  calendar: null\n}), defaultState.constants);\n(0, _chai.expect)(compareState.calendar).to.equal('semesters');",
              "err": {},
              "uuid": "b5616e0e-5b60-4d2a-8a98-bd542d34f7a2",
              "parentUUID": "df22fd59-2ad2-4071-9a45-6e414f467561",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "returns yellowRibbonProgramIndex as yellowRibbonPrograms[0].index",
              "fullTitle": "getCompareCalculatorState returns yellowRibbonProgramIndex as yellowRibbonPrograms[0].index",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var compareState = (0, _compare.getCompareCalculatorState)(defaultState.calculator, institution, defaultState.constants);\n(0, _chai.expect)(compareState.yellowRibbonProgramIndex).to.equal(compareState.yellowRibbonPrograms[0].index);",
              "err": {},
              "uuid": "1f84f25c-0033-484c-8a83-77cd5adbb00b",
              "parentUUID": "df22fd59-2ad2-4071-9a45-6e414f467561",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return inStateTuitionFees as institution.tuitionInState",
              "fullTitle": "getCompareCalculatorState should return inStateTuitionFees as institution.tuitionInState",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var compareState = (0, _compare.getCompareCalculatorState)(defaultState.calculator, institution, defaultState.constants);\n(0, _chai.expect)(compareState.inStateTuitionFees).to.equal(institution.tuitionInState);",
              "err": {},
              "uuid": "daa7b29e-46d8-4785-8f3a-463a0c445194",
              "parentUUID": "df22fd59-2ad2-4071-9a45-6e414f467561",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "returns yellowRibbonMaxAmount as yellowRibbonAmount",
              "fullTitle": "getCompareCalculatorState returns yellowRibbonMaxAmount as yellowRibbonAmount",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var compareState = (0, _compare.getCompareCalculatorState)(defaultState.calculator, institution, defaultState.constants);\n(0, _chai.expect)(compareState.yellowRibbonMaxAmount).to.equal(compareState.yellowRibbonAmount);",
              "err": {},
              "uuid": "077446bd-055d-4972-8f01-7849d3a5af5e",
              "parentUUID": "df22fd59-2ad2-4071-9a45-6e414f467561",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return books from institution",
              "fullTitle": "getCompareCalculatorState should return books from institution",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var compareState = (0, _compare.getCompareCalculatorState)(defaultState.calculator, institution, defaultState.constants);\n(0, _chai.expect)(compareState.books).to.equal(institution.books);",
              "err": {},
              "uuid": "bde12667-e00b-41ff-8c5f-173659b16f25",
              "parentUUID": "df22fd59-2ad2-4071-9a45-6e414f467561",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return no for giBillBenefit for USA with dodBah less than bah",
              "fullTitle": "getCompareCalculatorState should return no for giBillBenefit for USA with dodBah less than bah",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var compareState = (0, _compare.getCompareCalculatorState)(defaultState.calculator, institution, defaultState.constants);\n(0, _chai.expect)(compareState.giBillBenefit).to.equal('no');",
              "err": {},
              "uuid": "7def501b-b6ab-4a27-906f-8ec175760968",
              "parentUUID": "df22fd59-2ad2-4071-9a45-6e414f467561",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "returns yellowRibbonDegreeLevelOptions as array of degreeLevel",
              "fullTitle": "getCompareCalculatorState returns yellowRibbonDegreeLevelOptions as array of degreeLevel",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var compareState = (0, _compare.getCompareCalculatorState)(defaultState.calculator, institution, defaultState.constants);\nvar yellowRibbonDegreeLevelOptions = _toConsumableArray(new Set(institution.yellowRibbonPrograms.map(function (program) {\n  return program.degreeLevel;\n})));\n(0, _chai.expect)(compareState.yellowRibbonDegreeLevelOptions).to.be.an('array').that.includes.members(yellowRibbonDegreeLevelOptions);",
              "err": {},
              "uuid": "42947598-6d47-499e-8805-a1d3e5d4604f",
              "parentUUID": "df22fd59-2ad2-4071-9a45-6e414f467561",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return tuitionInState from institution",
              "fullTitle": "getCompareCalculatorState should return tuitionInState from institution",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var compareState = (0, _compare.getCompareCalculatorState)(defaultState.calculator, institution, defaultState.constants);\n(0, _chai.expect)(compareState.tuitionInState).to.equal(institution.tuitionInState);",
              "err": {},
              "uuid": "d1ab61a8-d9dd-4855-85db-4e748f017bef",
              "parentUUID": "df22fd59-2ad2-4071-9a45-6e414f467561",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return beneficiaryLocationBah",
              "fullTitle": "getCompareCalculatorState should return beneficiaryLocationBah",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var compareState = (0, _compare.getCompareCalculatorState)(defaultState.calculator, institution, defaultState.constants);\n(0, _chai.expect)(compareState.beneficiaryLocationBah).to.be.null;",
              "err": {},
              "uuid": "43692764-0e0c-4092-bb4b-91dc89292f0e",
              "parentUUID": "df22fd59-2ad2-4071-9a45-6e414f467561",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return beneficiaryLocationGrandfatheredBah",
              "fullTitle": "getCompareCalculatorState should return beneficiaryLocationGrandfatheredBah",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var compareState = (0, _compare.getCompareCalculatorState)(defaultState.calculator, institution, defaultState.constants);\n(0, _chai.expect)(compareState.beneficiaryLocationGrandfatheredBah).to.be.null;",
              "err": {},
              "uuid": "348851e1-b201-4263-800b-351f6927c36c",
              "parentUUID": "df22fd59-2ad2-4071-9a45-6e414f467561",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return tuittuitionOutOfStateionInState as 0",
              "fullTitle": "getCompareCalculatorState should return tuittuitionOutOfStateionInState as 0",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var compareState = (0, _compare.getCompareCalculatorState)(defaultState.calculator, _objectSpread(_objectSpread({}, institution), {}, {\n  tuitionOutOfState: null\n}), defaultState.constants);\n(0, _chai.expect)(compareState.tuitionOutOfState).to.equal(0);",
              "err": {},
              "uuid": "7cc7a464-90f6-465d-b9eb-10359a65611f",
              "parentUUID": "df22fd59-2ad2-4071-9a45-6e414f467561",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return type",
              "fullTitle": "getCompareCalculatorState should return type",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var compareState = (0, _compare.getCompareCalculatorState)(defaultState.calculator, institution, defaultState.constants);\n(0, _chai.expect)(compareState.type).to.equal(institution.type);",
              "err": {},
              "uuid": "88e31b00-f38d-4599-977b-806d70fd4454",
              "parentUUID": "df22fd59-2ad2-4071-9a45-6e414f467561",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "returns yellowRibbonMaxNumberOfStudents as yellowRibbonPrograms[0].numberOfStudents",
              "fullTitle": "getCompareCalculatorState returns yellowRibbonMaxNumberOfStudents as yellowRibbonPrograms[0].numberOfStudents",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var compareState = (0, _compare.getCompareCalculatorState)(defaultState.calculator, institution, defaultState.constants);\n(0, _chai.expect)(compareState.yellowRibbonMaxNumberOfStudents).to.equal(institution.yellowRibbonPrograms[0].numberOfStudents);",
              "err": {},
              "uuid": "79adb0f4-0a7b-4bc6-910d-41baba02e223",
              "parentUUID": "df22fd59-2ad2-4071-9a45-6e414f467561",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "returns yellowRibbonAmount as yellowRibbonPrograms[0].contributionAmount",
              "fullTitle": "getCompareCalculatorState returns yellowRibbonAmount as yellowRibbonPrograms[0].contributionAmount",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var compareState = (0, _compare.getCompareCalculatorState)(defaultState.calculator, institution, defaultState.constants);\n(0, _chai.expect)(compareState.yellowRibbonAmount).to.equal(institution.yellowRibbonPrograms[0].contributionAmount);",
              "err": {},
              "uuid": "0c8a1092-d57f-4346-84b0-233d29aca882",
              "parentUUID": "df22fd59-2ad2-4071-9a45-6e414f467561",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return tuitionInState as 0",
              "fullTitle": "getCompareCalculatorState should return tuitionInState as 0",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var compareState = (0, _compare.getCompareCalculatorState)(defaultState.calculator, _objectSpread(_objectSpread({}, institution), {}, {\n  tuitionInState: null\n}), defaultState.constants);\n(0, _chai.expect)(compareState.tuitionInState).to.equal(0);",
              "err": {},
              "uuid": "26a369de-5ebb-46ba-b491-f80eab3eee3f",
              "parentUUID": "df22fd59-2ad2-4071-9a45-6e414f467561",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return books as 0",
              "fullTitle": "getCompareCalculatorState should return books as 0",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var compareState = (0, _compare.getCompareCalculatorState)(defaultState.calculator, _objectSpread(_objectSpread({}, institution), {}, {\n  books: null\n}), defaultState.constants);\n(0, _chai.expect)(compareState.books).to.equal(0);",
              "err": {},
              "uuid": "52b96d5e-2013-4176-ac57-f249df244acc",
              "parentUUID": "df22fd59-2ad2-4071-9a45-6e414f467561",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return tuitionOutOfState from institution",
              "fullTitle": "getCompareCalculatorState should return tuitionOutOfState from institution",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var compareState = (0, _compare.getCompareCalculatorState)(defaultState.calculator, institution, defaultState.constants);\n(0, _chai.expect)(compareState.tuitionOutOfState).to.equal(institution.tuitionOutOfState);",
              "err": {},
              "uuid": "9d800a71-4fef-42df-ab33-c6f4a2d6b3dc",
              "parentUUID": "df22fd59-2ad2-4071-9a45-6e414f467561",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "returns yellowRibbonDivision as yellowRibbonPrograms[0].divisionProfessionalSchool",
              "fullTitle": "getCompareCalculatorState returns yellowRibbonDivision as yellowRibbonPrograms[0].divisionProfessionalSchool",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var compareState = (0, _compare.getCompareCalculatorState)(defaultState.calculator, institution, defaultState.constants);\n(0, _chai.expect)(compareState.yellowRibbonDivision).to.equal(institution.yellowRibbonPrograms[0].divisionProfessionalSchool);",
              "err": {},
              "uuid": "102a784c-7029-4837-8220-ed93516f932b",
              "parentUUID": "df22fd59-2ad2-4071-9a45-6e414f467561",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "fb1e7fc0-a95c-45f0-bc7f-6ae8a683f191",
            "611a2084-7d5a-4a0e-b65c-4549ac223a31",
            "5ce695c7-7859-4eff-b7f2-31ce5c6b61e0",
            "83ec33d6-19ce-4dd0-aad2-0b8a7d27121c",
            "d517c62c-3884-4178-a5b8-82a22f11ed45",
            "78f58dca-7c2a-4949-9eac-b70ad0edc0a7",
            "6e865783-7d9e-450c-ac92-06e4e0ca4abc",
            "03841341-1c81-4123-a71c-c5494fa87a00",
            "a672c032-db2a-405f-a535-80c3a31f9a7d",
            "0b019ad3-f7a0-4596-b77e-e35854f2ddc7",
            "061cbea8-99e5-44eb-922b-956d452b3560",
            "a7764c97-c280-4e7d-bd03-d6a7aed62c38",
            "b5616e0e-5b60-4d2a-8a98-bd542d34f7a2",
            "1f84f25c-0033-484c-8a83-77cd5adbb00b",
            "daa7b29e-46d8-4785-8f3a-463a0c445194",
            "077446bd-055d-4972-8f01-7849d3a5af5e",
            "bde12667-e00b-41ff-8c5f-173659b16f25",
            "7def501b-b6ab-4a27-906f-8ec175760968",
            "42947598-6d47-499e-8805-a1d3e5d4604f",
            "d1ab61a8-d9dd-4855-85db-4e748f017bef",
            "43692764-0e0c-4092-bb4b-91dc89292f0e",
            "348851e1-b201-4263-800b-351f6927c36c",
            "7cc7a464-90f6-465d-b9eb-10359a65611f",
            "88e31b00-f38d-4599-977b-806d70fd4454",
            "79adb0f4-0a7b-4bc6-910d-41baba02e223",
            "0c8a1092-d57f-4346-84b0-233d29aca882",
            "26a369de-5ebb-46ba-b491-f80eab3eee3f",
            "52b96d5e-2013-4176-ac57-f249df244acc",
            "9d800a71-4fef-42df-ab33-c6f4a2d6b3dc",
            "102a784c-7029-4837-8220-ed93516f932b"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "0f6e24b6-57c1-4532-ab93-24734aa4b8b0",
          "title": "GIBCT helpers:",
          "fullFile": "/Users/gcionapoleon/Documents/Github-2023/Github_three/vets-website/src/applications/gi/tests/utils/helpers.unit.spec.js",
          "file": "/src/applications/gi/tests/utils/helpers.unit.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "fe0fdf9b-f023-4b37-8f99-4879ab006862",
              "title": "convertRatingToStars",
              "fullFile": "/Users/gcionapoleon/Documents/Github-2023/Github_three/vets-website/src/applications/gi/tests/utils/helpers.unit.spec.js",
              "file": "/src/applications/gi/tests/utils/helpers.unit.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "converts more than .7 as a full star",
                  "fullTitle": "GIBCT helpers: convertRatingToStars converts more than .7 as a full star",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var _convertRatingToStars5 = (0, _helpers.convertRatingToStars)(3.75),\n    full = _convertRatingToStars5.full,\n    half = _convertRatingToStars5.half,\n    display = _convertRatingToStars5.display;\n(0, _chai.expect)(full).to.eq(4);\n(0, _chai.expect)(half).to.eq(false);\n(0, _chai.expect)(display).to.eq('3.8');",
                  "err": {},
                  "uuid": "a0569af4-905f-4f62-9a86-ca294f7402a3",
                  "parentUUID": "fe0fdf9b-f023-4b37-8f99-4879ab006862",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "converts .7 as a half star",
                  "fullTitle": "GIBCT helpers: convertRatingToStars converts .7 as a half star",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var _convertRatingToStars4 = (0, _helpers.convertRatingToStars)(4.7),\n    full = _convertRatingToStars4.full,\n    half = _convertRatingToStars4.half,\n    display = _convertRatingToStars4.display;\n(0, _chai.expect)(full).to.eq(4);\n(0, _chai.expect)(half).to.eq(true);\n(0, _chai.expect)(display).to.eq('4.7');",
                  "err": {},
                  "uuid": "5de9b1d2-8873-42c9-b15f-9c77ec69d943",
                  "parentUUID": "fe0fdf9b-f023-4b37-8f99-4879ab006862",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "converts string to number",
                  "fullTitle": "GIBCT helpers: convertRatingToStars converts string to number",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var _convertRatingToStars = (0, _helpers.convertRatingToStars)('2.24'),\n    full = _convertRatingToStars.full,\n    half = _convertRatingToStars.half,\n    display = _convertRatingToStars.display;\n(0, _chai.expect)(full).to.eq(2);\n(0, _chai.expect)(half).to.eq(false);\n(0, _chai.expect)(display).to.eq('2.2');",
                  "err": {},
                  "uuid": "a5e54bfd-f31d-41c8-922e-81bc089d1cb7",
                  "parentUUID": "fe0fdf9b-f023-4b37-8f99-4879ab006862",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "converts < .3 as a whole number of stars",
                  "fullTitle": "GIBCT helpers: convertRatingToStars converts < .3 as a whole number of stars",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var _convertRatingToStars2 = (0, _helpers.convertRatingToStars)(2.24),\n    full = _convertRatingToStars2.full,\n    half = _convertRatingToStars2.half,\n    display = _convertRatingToStars2.display;\n(0, _chai.expect)(full).to.eq(2);\n(0, _chai.expect)(half).to.eq(false);\n(0, _chai.expect)(display).to.eq('2.2');",
                  "err": {},
                  "uuid": "b54d3ccf-998d-4720-961e-3dd3cf83fce7",
                  "parentUUID": "fe0fdf9b-f023-4b37-8f99-4879ab006862",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "converts .3 as a half star",
                  "fullTitle": "GIBCT helpers: convertRatingToStars converts .3 as a half star",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var _convertRatingToStars3 = (0, _helpers.convertRatingToStars)(4.29),\n    full = _convertRatingToStars3.full,\n    half = _convertRatingToStars3.half,\n    display = _convertRatingToStars3.display;\n(0, _chai.expect)(full).to.eq(4);\n(0, _chai.expect)(half).to.eq(true);\n(0, _chai.expect)(display).to.eq('4.3');",
                  "err": {},
                  "uuid": "923e77fa-41b5-4ef9-9183-41bb8698409d",
                  "parentUUID": "fe0fdf9b-f023-4b37-8f99-4879ab006862",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "returns null for invalid ratings",
                  "fullTitle": "GIBCT helpers: convertRatingToStars returns null for invalid ratings",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)((0, _helpers.convertRatingToStars)('dogs')).to.eq(null);",
                  "err": {},
                  "uuid": "e8566285-11ad-407d-acc5-5af47629102a",
                  "parentUUID": "fe0fdf9b-f023-4b37-8f99-4879ab006862",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "a0569af4-905f-4f62-9a86-ca294f7402a3",
                "5de9b1d2-8873-42c9-b15f-9c77ec69d943",
                "a5e54bfd-f31d-41c8-922e-81bc089d1cb7",
                "b54d3ccf-998d-4720-961e-3dd3cf83fce7",
                "923e77fa-41b5-4ef9-9183-41bb8698409d",
                "e8566285-11ad-407d-acc5-5af47629102a"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "7e8c75ab-e847-4577-a974-e439297174d4",
              "title": "formatNumber",
              "fullFile": "/Users/gcionapoleon/Documents/Github-2023/Github_three/vets-website/src/applications/gi/tests/utils/helpers.unit.spec.js",
              "file": "/src/applications/gi/tests/utils/helpers.unit.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should format numbers",
                  "fullTitle": "GIBCT helpers: formatNumber should format numbers",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)((0, _helpers.formatNumber)(1000)).to.equal('1,000');",
                  "err": {},
                  "uuid": "b50d0046-09db-4f76-9da7-d7abc8b3681c",
                  "parentUUID": "7e8c75ab-e847-4577-a974-e439297174d4",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "b50d0046-09db-4f76-9da7-d7abc8b3681c"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "5f8b4504-532c-4554-890f-bda780750ddd",
              "title": "rubyifyKeys",
              "fullFile": "/Users/gcionapoleon/Documents/Github-2023/Github_three/vets-website/src/applications/gi/tests/utils/helpers.unit.spec.js",
              "file": "/src/applications/gi/tests/utils/helpers.unit.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should properly snake-case keys",
                  "fullTitle": "GIBCT helpers: rubyifyKeys should properly snake-case keys",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var data = {\n  testKey: ''\n};\n(0, _chai.expect)((0, _helpers.rubyifyKeys)(data)).to.have.key('test_key');",
                  "err": {},
                  "uuid": "52a5af97-59c3-43d3-908d-7af08c6ab1f6",
                  "parentUUID": "5f8b4504-532c-4554-890f-bda780750ddd",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "52a5af97-59c3-43d3-908d-7af08c6ab1f6"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "954c23e5-6a6f-48a6-9691-81ba56a6b3fc",
              "title": "isCountryUSA",
              "fullFile": "/Users/gcionapoleon/Documents/Github-2023/Github_three/vets-website/src/applications/gi/tests/utils/helpers.unit.spec.js",
              "file": "/src/applications/gi/tests/utils/helpers.unit.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should recognize USA",
                  "fullTitle": "GIBCT helpers: isCountryUSA should recognize USA",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)((0, _helpers.isCountryUSA)('USA')).to.be.true;",
                  "err": {},
                  "uuid": "db9c5d85-af24-4a30-a2f5-435e872e0464",
                  "parentUUID": "954c23e5-6a6f-48a6-9691-81ba56a6b3fc",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should recognize non-USA",
                  "fullTitle": "GIBCT helpers: isCountryUSA should recognize non-USA",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)((0, _helpers.isCountryUSA)('CAN')).to.be.false;",
                  "err": {},
                  "uuid": "0d083fcb-a5c2-4cc2-a938-a91073e79762",
                  "parentUUID": "954c23e5-6a6f-48a6-9691-81ba56a6b3fc",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should handle lowercase country names",
                  "fullTitle": "GIBCT helpers: isCountryUSA should handle lowercase country names",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)((0, _helpers.isCountryUSA)('usa')).to.be.true;",
                  "err": {},
                  "uuid": "5bf7764d-6049-48ce-b715-8f3aea8777f3",
                  "parentUUID": "954c23e5-6a6f-48a6-9691-81ba56a6b3fc",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "db9c5d85-af24-4a30-a2f5-435e872e0464",
                "0d083fcb-a5c2-4cc2-a938-a91073e79762",
                "5bf7764d-6049-48ce-b715-8f3aea8777f3"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "e50cc27e-0adc-472c-8a3c-99f6b68c32b8",
              "title": "sortOptionsByStateName",
              "fullFile": "/Users/gcionapoleon/Documents/Github-2023/Github_three/vets-website/src/applications/gi/tests/utils/helpers.unit.spec.js",
              "file": "/src/applications/gi/tests/utils/helpers.unit.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should sort an array of objects by label",
                  "fullTitle": "GIBCT helpers: sortOptionsByStateName should sort an array of objects by label",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var data = [{\n  value: 'AK',\n  label: 'Alaska'\n}, {\n  value: 'AL',\n  label: 'Alabama'\n}, {\n  value: 'AR',\n  label: 'Arkansas'\n}, {\n  value: 'AZ',\n  label: 'Arizona'\n}, {\n  value: 'CA',\n  label: 'California'\n}];\nvar sortedData = [{\n  value: 'AL',\n  label: 'Alabama'\n}, {\n  value: 'AK',\n  label: 'Alaska'\n}, {\n  value: 'AZ',\n  label: 'Arizona'\n}, {\n  value: 'AR',\n  label: 'Arkansas'\n}, {\n  value: 'CA',\n  label: 'California'\n}];\n(0, _chai.expect)(data.sort(_helpers.sortOptionsByStateName)).to.deep.equal(sortedData);",
                  "err": {},
                  "uuid": "20ab718e-8813-4b9e-b44a-1ea103b863b6",
                  "parentUUID": "e50cc27e-0adc-472c-8a3c-99f6b68c32b8",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "20ab718e-8813-4b9e-b44a-1ea103b863b6"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "82ed1692-31f5-4760-b858-da6bf77223bf",
              "title": "handleScrollOnInputFocus",
              "fullFile": "/Users/gcionapoleon/Documents/Github-2023/Github_three/vets-website/src/applications/gi/tests/utils/helpers.unit.spec.js",
              "file": "/src/applications/gi/tests/utils/helpers.unit.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should scrollIntoView",
                  "fullTitle": "GIBCT helpers: handleScrollOnInputFocus should scrollIntoView",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "window.innerWidth = 480;\ndocument.body.appendChild(mainDiv);\n(0, _helpers.handleScrollOnInputFocus)('test');\n(0, _chai.expect)(scrolledIntoViewIsCalled).to.be.true;",
                  "err": {},
                  "uuid": "87d09d64-4da1-43b3-8931-7e57fcdbb4d6",
                  "parentUUID": "82ed1692-31f5-4760-b858-da6bf77223bf",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "87d09d64-4da1-43b3-8931-7e57fcdbb4d6"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "31ab5a38-625a-4ff4-8b53-42e0103f3059",
              "title": "isCountryInternational",
              "fullFile": "/Users/gcionapoleon/Documents/Github-2023/Github_three/vets-website/src/applications/gi/tests/utils/helpers.unit.spec.js",
              "file": "/src/applications/gi/tests/utils/helpers.unit.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should recognize non-USA",
                  "fullTitle": "GIBCT helpers: isCountryInternational should recognize non-USA",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)((0, _helpers.isCountryInternational)('CAN')).to.be.true;",
                  "err": {},
                  "uuid": "e4f15a32-0360-43d8-b4fe-f4b9c6ef25fe",
                  "parentUUID": "31ab5a38-625a-4ff4-8b53-42e0103f3059",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should handle lowercase country names",
                  "fullTitle": "GIBCT helpers: isCountryInternational should handle lowercase country names",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)((0, _helpers.isCountryInternational)('usa')).to.be.false;",
                  "err": {},
                  "uuid": "19df6ee7-f755-43e5-939c-d5dac55d18c1",
                  "parentUUID": "31ab5a38-625a-4ff4-8b53-42e0103f3059",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should recognize USA",
                  "fullTitle": "GIBCT helpers: isCountryInternational should recognize USA",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)((0, _helpers.isCountryInternational)('USA')).to.be.false;",
                  "err": {},
                  "uuid": "96427f03-2718-4314-a1fd-b2efc5298a4c",
                  "parentUUID": "31ab5a38-625a-4ff4-8b53-42e0103f3059",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "e4f15a32-0360-43d8-b4fe-f4b9c6ef25fe",
                "19df6ee7-f755-43e5-939c-d5dac55d18c1",
                "96427f03-2718-4314-a1fd-b2efc5298a4c"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "d73ca078-ae6e-408c-bc16-4460102cf728",
              "title": "formatCurrency",
              "fullFile": "/Users/gcionapoleon/Documents/Github-2023/Github_three/vets-website/src/applications/gi/tests/utils/helpers.unit.spec.js",
              "file": "/src/applications/gi/tests/utils/helpers.unit.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should round currency",
                  "fullTitle": "GIBCT helpers: formatCurrency should round currency",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)((0, _helpers.formatCurrency)(1000.5)).to.equal('$1,001');",
                  "err": {},
                  "uuid": "daf03944-bd5e-4e3a-9b0c-df8925e2c327",
                  "parentUUID": "d73ca078-ae6e-408c-bc16-4460102cf728",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should format currency",
                  "fullTitle": "GIBCT helpers: formatCurrency should format currency",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)((0, _helpers.formatCurrency)(1000)).to.equal('$1,000');",
                  "err": {},
                  "uuid": "406a05f0-6169-46e9-9e12-d27154db48ac",
                  "parentUUID": "d73ca078-ae6e-408c-bc16-4460102cf728",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "daf03944-bd5e-4e3a-9b0c-df8925e2c327",
                "406a05f0-6169-46e9-9e12-d27154db48ac"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "46b01b47-d832-4992-9fc6-7c9abf599ea7",
              "title": "addAllOption",
              "fullFile": "/Users/gcionapoleon/Documents/Github-2023/Github_three/vets-website/src/applications/gi/tests/utils/helpers.unit.spec.js",
              "file": "/src/applications/gi/tests/utils/helpers.unit.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should add ALL option",
                  "fullTitle": "GIBCT helpers: addAllOption should add ALL option",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var options = [{\n  label: 'TEST',\n  value: 'TEST'\n}];\n(0, _chai.expect)((0, _helpers.addAllOption)(options).length).to.equal(2);\n(0, _chai.expect)((0, _helpers.addAllOption)(options)[0].optionLabel).to.equal('All');",
                  "err": {},
                  "uuid": "3214bc9d-7391-4a36-b2a3-a3c578372a8a",
                  "parentUUID": "46b01b47-d832-4992-9fc6-7c9abf599ea7",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "3214bc9d-7391-4a36-b2a3-a3c578372a8a"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "c2b46afa-4dc6-4228-87df-a1e4a64d0e32",
          "title": "buildSearchFilters",
          "fullFile": "/Users/gcionapoleon/Documents/Github-2023/Github_three/vets-website/src/applications/gi/tests/selectors/filters.unit.spec.js",
          "file": "/src/applications/gi/tests/selectors/filters.unit.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "returns boolean fields whose values are true",
              "fullTitle": "buildSearchFilters returns boolean fields whose values are true",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var filters = _objectSpread(_objectSpread({}, defaultState.filters), {}, {\n  excludeCautionFlags: true,\n  accredited: true,\n  studentVeteran: true,\n  yellowRibbonScholarship: true,\n  preferredProvider: true\n});\n(0, _chai.expect)((0, _filters.buildSearchFilters)(filters)).to.have.all.keys('excludeCautionFlags', 'accredited', 'studentVeteran', 'yellowRibbonScholarship', 'preferredProvider');",
              "err": {},
              "uuid": "4b9e8ef9-d148-4249-97ac-60e66d071365",
              "parentUUID": "c2b46afa-4dc6-4228-87df-a1e4a64d0e32",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "returns excludedSchoolTypes",
              "fullTitle": "buildSearchFilters returns excludedSchoolTypes",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var filters = _objectSpread(_objectSpread({}, defaultState.filters), {}, {\n  excludedSchoolTypes: ['PUBLIC', 'PRIVATE', 'FOREIGN', 'FLIGHT', 'CORRESPONDENCE']\n});\n(0, _chai.expect)((0, _filters.buildSearchFilters)(filters)).to.have.all.keys('excludedSchoolTypes');",
              "err": {},
              "uuid": "c55d189d-6ecf-4d70-8cbb-c6d5a4c4461f",
              "parentUUID": "c2b46afa-4dc6-4228-87df-a1e4a64d0e32",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "returns excluded flip values schools, employers, vettec when false",
              "fullTitle": "buildSearchFilters returns excluded flip values schools, employers, vettec when false",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var filters = _objectSpread(_objectSpread({}, defaultState.filters), {}, {\n  schools: false,\n  employers: false,\n  vettec: false\n});\n(0, _chai.expect)((0, _filters.buildSearchFilters)(filters)).to.have.all.keys('excludeSchools', 'excludeEmployers', 'excludeVettec');",
              "err": {},
              "uuid": "3af52da2-fac8-4cd7-8ed6-99f907305087",
              "parentUUID": "c2b46afa-4dc6-4228-87df-a1e4a64d0e32",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "returns country, state, specialMission when does not have a value of ALL",
              "fullTitle": "buildSearchFilters returns country, state, specialMission when does not have a value of ALL",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var filters = _objectSpread(_objectSpread({}, defaultState.filters), {}, {\n  country: 'CAN',\n  state: 'ALB',\n  specialMission: 'hbcu'\n});\n(0, _chai.expect)((0, _filters.buildSearchFilters)(filters)).to.have.all.keys('country', 'state', 'specialMission');",
              "err": {},
              "uuid": "a9a3c7e4-b6ef-4eb9-89f7-e399ff3c93e3",
              "parentUUID": "c2b46afa-4dc6-4228-87df-a1e4a64d0e32",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "4b9e8ef9-d148-4249-97ac-60e66d071365",
            "c55d189d-6ecf-4d70-8cbb-c6d5a4c4461f",
            "3af52da2-fac8-4cd7-8ed6-99f907305087",
            "a9a3c7e4-b6ef-4eb9-89f7-e399ff3c93e3"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "b801aee4-4cc7-46f5-9cd3-b78b17072386",
          "title": "updateUrlParams",
          "fullFile": "/Users/gcionapoleon/Documents/Github-2023/Github_three/vets-website/src/applications/gi/tests/selectors/search.unit.spec.js",
          "file": "/src/applications/gi/tests/selectors/search.unit.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "pushes only tab to url",
              "fullTitle": "updateUrlParams pushes only tab to url",
              "timedOut": false,
              "duration": 6,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var history = (0, _history.createMemoryHistory)();\n(0, _sinon.spy)(history, 'push');\n(0, _search.updateUrlParams)(history, _constants.TABS.name, defaultState.search.query, defaultState.filters);\n(0, _chai.expect)(history.push.calledOnce).to.be.true;\n(0, _chai.expect)(history.push.getCall(0).args[0]).to.equal('/?search=name');",
              "err": {},
              "uuid": "79fdd4b4-b97d-465e-88c3-5c00f431d7f1",
              "parentUUID": "b801aee4-4cc7-46f5-9cd3-b78b17072386",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "pushes query name params to url",
              "fullTitle": "updateUrlParams pushes query name params to url",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var history = (0, _history.createMemoryHistory)();\n(0, _sinon.spy)(history, 'push');\nvar query = _objectSpread(_objectSpread({}, defaultState.search.query), {}, {\n  search: _constants.TABS.name,\n  name: 'test'\n});\n(0, _search.updateUrlParams)(history, _constants.TABS.name, query, defaultState.filters);\n(0, _chai.expect)(history.push.calledOnce).to.be.true;\n(0, _chai.expect)(history.push.getCall(0).args[0]).to.equal('/?search=name&name=test');",
              "err": {},
              "uuid": "3f7d5366-08e0-4880-b083-5c2302cb0c2e",
              "parentUUID": "b801aee4-4cc7-46f5-9cd3-b78b17072386",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "pushes query location params to url",
              "fullTitle": "updateUrlParams pushes query location params to url",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var history = (0, _history.createMemoryHistory)();\n(0, _sinon.spy)(history, 'push');\nvar query = _objectSpread(_objectSpread({}, defaultState.search.query), {}, {\n  search: _constants.TABS.location,\n  location: 'nowhere, ka'\n});\n(0, _search.updateUrlParams)(history, _constants.TABS.location, query, defaultState.filters);\n(0, _chai.expect)(history.push.calledOnce).to.be.true;\n(0, _chai.expect)(history.push.getCall(0).args[0]).to.equal('/?search=location&location=nowhere%2C%20ka');",
              "err": {},
              "uuid": "6aa03fc8-b290-45ce-b298-827e1e99e695",
              "parentUUID": "b801aee4-4cc7-46f5-9cd3-b78b17072386",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "pushes filters params to url",
              "fullTitle": "updateUrlParams pushes filters params to url",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var history = (0, _history.createMemoryHistory)();\n(0, _sinon.spy)(history, 'push');\nvar query = _objectSpread(_objectSpread({}, defaultState.search.query), {}, {\n  search: _constants.TABS.name,\n  name: 'test'\n});\nvar filters = _objectSpread(_objectSpread({}, defaultState.filters), {}, {\n  excludeCautionFlags: true\n});\n(0, _search.updateUrlParams)(history, _constants.TABS.name, query, filters);\n(0, _chai.expect)(history.push.calledOnce).to.be.true;\n(0, _chai.expect)(history.push.getCall(0).args[0]).to.equal('/?search=name&name=test&excludeCautionFlags=true');",
              "err": {},
              "uuid": "89ddb351-93cc-4bd6-986d-733d4a3fddf7",
              "parentUUID": "b801aee4-4cc7-46f5-9cd3-b78b17072386",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "pushes version to url",
              "fullTitle": "updateUrlParams pushes version to url",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var history = (0, _history.createMemoryHistory)();\n(0, _sinon.spy)(history, 'push');\nvar query = _objectSpread(_objectSpread({}, defaultState.search.query), {}, {\n  search: _constants.TABS.location,\n  location: 'nowhere, ka'\n});\n(0, _search.updateUrlParams)(history, _constants.TABS.location, query, defaultState.filters, 1);\n(0, _chai.expect)(history.push.calledOnce).to.be.true;\n(0, _chai.expect)(history.push.getCall(0).args[0]).to.equal('/?search=location&location=nowhere%2C%20ka&version=1');",
              "err": {},
              "uuid": "03532682-6a97-4a72-a5f1-5173cc200c73",
              "parentUUID": "b801aee4-4cc7-46f5-9cd3-b78b17072386",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "79fdd4b4-b97d-465e-88c3-5c00f431d7f1",
            "3f7d5366-08e0-4880-b083-5c2302cb0c2e",
            "6aa03fc8-b290-45ce-b298-827e1e99e695",
            "89ddb351-93cc-4bd6-986d-733d4a3fddf7",
            "03532682-6a97-4a72-a5f1-5173cc200c73"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 7,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "be81e31f-db43-437c-9048-96e16ad34e26",
          "title": "estimatedBenefits",
          "fullFile": "/Users/gcionapoleon/Documents/Github-2023/Github_three/vets-website/src/applications/gi/tests/selectors/estimator.unit.spec.js",
          "file": "/src/applications/gi/tests/selectors/estimator.unit.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should estimate housing for purple heart benefit",
              "fullTitle": "estimatedBenefits should estimate housing for purple heart benefit",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var state = (0, _set.default)('eligibility.cululativeService', 'purple heart', defaultState);\n(0, _chai.expect)((0, _estimator.estimatedBenefits)(state, {\n  institution: {\n    type: 'public',\n    bah: 2000,\n    country: 'usa'\n  }\n}).housing.value).to.equal(2000);",
              "err": {},
              "uuid": "c9b8340e-ce99-40cd-bd93-9bb0155d28e3",
              "parentUUID": "be81e31f-db43-437c-9048-96e16ad34e26",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "lower DoD rate than VA should result in DoD rate displaying",
              "fullTitle": "estimatedBenefits lower DoD rate than VA should result in DoD rate displaying",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, _chai.expect)((0, _estimator.estimatedBenefits)(defaultState, {\n  institution: {\n    bah: 1000,\n    dodBah: 500,\n    country: 'usa'\n  }\n}).housing.value).to.equal(500);",
              "err": {},
              "uuid": "edd3e92d-8e6f-4818-b36b-cf17a114bfb9",
              "parentUUID": "be81e31f-db43-437c-9048-96e16ad34e26",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should estimate zero housing allowance for active duty",
              "fullTitle": "estimatedBenefits should estimate zero housing allowance for active duty",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var state = (0, _set.default)('eligibility.militaryStatus', 'active duty', defaultState);\n(0, _chai.expect)((0, _estimator.estimatedBenefits)(state, {\n  institution: {\n    type: 'public school',\n    bah: 1000,\n    country: 'usa'\n  }\n}).housing.value).to.equal(0);",
              "err": {},
              "uuid": "7a456552-89d4-41cf-9907-c89b11ac116c",
              "parentUUID": "be81e31f-db43-437c-9048-96e16ad34e26",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should display lower AVGDODBAH rate for non-usa institutions",
              "fullTitle": "estimatedBenefits should display lower AVGDODBAH rate for non-usa institutions",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, _chai.expect)((0, _estimator.estimatedBenefits)(defaultState, {\n  institution: {\n    type: 'public',\n    country: 'canada'\n  }\n}).housing.value).to.equal(defaultState.constants.constants.AVGDODBAH);",
              "err": {},
              "uuid": "2588bd0a-2396-489f-83bc-a53777b12de7",
              "parentUUID": "be81e31f-db43-437c-9048-96e16ad34e26",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should display 1/2 lower AVGVABAH rate for online classes for non-usa institutions",
              "fullTitle": "estimatedBenefits should display 1/2 lower AVGVABAH rate for online classes for non-usa institutions",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var state = (0, _set.default)('eligibility.onlineClasses', 'yes', defaultState);\nstate = (0, _set.default)('constants.constants.AVGVABAH', 1000, state);\n(0, _chai.expect)((0, _estimator.estimatedBenefits)(state, {\n  institution: {\n    type: 'public',\n    country: 'canada'\n  }\n}).housing.value).to.equal(state.constants.constants.AVGVABAH * 0.5);",
              "err": {},
              "uuid": "6d6699cf-a0d7-4bee-9901-254b4c7871c7",
              "parentUUID": "be81e31f-db43-437c-9048-96e16ad34e26",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should estimate OJT housing allowance for chapter 30 as .75 * MGIB3YRRATE",
              "fullTitle": "estimatedBenefits should estimate OJT housing allowance for chapter 30 as .75 * MGIB3YRRATE",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var state = (0, _set.default)('eligibility.giBillChapter', '30', defaultState);\n(0, _chai.expect)((0, _estimator.estimatedBenefits)(state, {\n  institution: {\n    type: 'ojt',\n    bah: 1000,\n    country: 'usa'\n  }\n}).housing.value).to.equal(Math.round(state.constants.constants.MGIB3YRRATE * 0.75));",
              "err": {},
              "uuid": "490c28ec-5627-428d-b06e-eb228fa8cbc8",
              "parentUUID": "be81e31f-db43-437c-9048-96e16ad34e26",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should display lower AVGVABAH rate for non-usa institutions",
              "fullTitle": "estimatedBenefits should display lower AVGVABAH rate for non-usa institutions",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var state = (0, _set.default)('constants.constants.AVGVABAH', 200, defaultState);\n(0, _chai.expect)((0, _estimator.estimatedBenefits)(state, {\n  institution: {\n    type: 'public',\n    country: 'canada'\n  }\n}).housing.value).to.equal(state.constants.constants.AVGVABAH);",
              "err": {},
              "uuid": "760af585-88cf-4fa5-8f66-0e197765f8db",
              "parentUUID": "be81e31f-db43-437c-9048-96e16ad34e26",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should estimate zero tuition allowance for OJT school",
              "fullTitle": "estimatedBenefits should estimate zero tuition allowance for OJT school",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, _chai.expect)((0, _estimator.estimatedBenefits)(defaultState, {\n  institution: {\n    type: 'ojt',\n    bah: 1000,\n    country: 'usa'\n  }\n}).tuition.value).to.equal('N/A');",
              "err": {},
              "uuid": "21ea48d8-6a29-4b5c-b5c9-57a8dde1fff6",
              "parentUUID": "be81e31f-db43-437c-9048-96e16ad34e26",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should estimate zero housing allowance for active duty spouse",
              "fullTitle": "estimatedBenefits should estimate zero housing allowance for active duty spouse",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var state = (0, _set.default)('eligibility.militaryStatus', 'spouse', defaultState);\nstate = (0, _set.default)('eligibility.spouseActiveDuty', 'yes', state);\n(0, _chai.expect)((0, _estimator.estimatedBenefits)(state, {\n  institution: {\n    type: 'public school',\n    bah: 1000,\n    country: 'usa'\n  }\n}).housing.value).to.equal(0);",
              "err": {},
              "uuid": "94bb0d2f-3ffa-475e-b50f-0595e6053c61",
              "parentUUID": "be81e31f-db43-437c-9048-96e16ad34e26",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should estimate zero tuition allowance for old GI bill",
              "fullTitle": "estimatedBenefits should estimate zero tuition allowance for old GI bill",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var state = (0, _set.default)('eligibility.giBillChapter', '30', defaultState);\n(0, _chai.expect)((0, _estimator.estimatedBenefits)(state, {\n  institution: {\n    type: 'public school',\n    bah: 1000,\n    country: 'usa'\n  }\n}).tuition.value).to.equal(0);",
              "err": {},
              "uuid": "46ac30ec-7181-4add-87f8-3d8fffd0332b",
              "parentUUID": "be81e31f-db43-437c-9048-96e16ad34e26",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "lower VA rate than DoD should result in VA rate displaying",
              "fullTitle": "estimatedBenefits lower VA rate than DoD should result in VA rate displaying",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, _chai.expect)((0, _estimator.estimatedBenefits)(defaultState, {\n  institution: {\n    bah: 1000,\n    dodBah: 5000,\n    country: 'usa'\n  }\n}).housing.value).to.equal(1000);",
              "err": {},
              "uuid": "410658f5-8291-45f2-8a85-09c538567943",
              "parentUUID": "be81e31f-db43-437c-9048-96e16ad34e26",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should estimate books for purple heart benefit",
              "fullTitle": "estimatedBenefits should estimate books for purple heart benefit",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var state = (0, _set.default)('eligibility.cululativeService', 'purple heart', defaultState);\n(0, _chai.expect)((0, _estimator.estimatedBenefits)(state, {\n  institution: {\n    type: 'public',\n    country: 'usa'\n  }\n}).books.value).to.equal(1000);",
              "err": {},
              "uuid": "d81388b1-a4b9-4db1-aaa4-acdb3a5c85ce",
              "parentUUID": "be81e31f-db43-437c-9048-96e16ad34e26",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should estimate zero housing allowance for correspondence school",
              "fullTitle": "estimatedBenefits should estimate zero housing allowance for correspondence school",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, _chai.expect)((0, _estimator.estimatedBenefits)(defaultState, {\n  institution: {\n    type: 'correspondence',\n    bah: 1000,\n    country: 'usa'\n  }\n}).housing.value).to.equal(0);",
              "err": {},
              "uuid": "2e08065c-7efd-40d8-a29b-da3f32294b40",
              "parentUUID": "be81e31f-db43-437c-9048-96e16ad34e26",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should display 1/2 lower DoD average rate for online classes",
              "fullTitle": "estimatedBenefits should display 1/2 lower DoD average rate for online classes",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var state = (0, _set.default)('constants.constants.AVGDODBAH', 500, defaultState);\nstate = (0, _set.default)('eligibility.onlineClasses', 'yes', state);\n(0, _chai.expect)((0, _estimator.estimatedBenefits)(state, {\n  institution: {\n    institution: {\n      type: 'public',\n      country: 'usa'\n    }\n  }\n}).housing.value).to.equal(250);",
              "err": {},
              "uuid": "3b3d53a7-469f-4c62-8cf2-81990be3fa9b",
              "parentUUID": "be81e31f-db43-437c-9048-96e16ad34e26",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should display 1/2 lower VA average rate for online classes for usa institutions",
              "fullTitle": "estimatedBenefits should display 1/2 lower VA average rate for online classes for usa institutions",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var state = (0, _set.default)('eligibility.onlineClasses', 'yes', defaultState);\nstate = (0, _set.default)('constants.constants.AVGVABAH', 1000, state);\n(0, _chai.expect)((0, _estimator.estimatedBenefits)(state, {\n  institution: {\n    type: 'public',\n    country: 'usa'\n  }\n}).housing.value).to.equal(state.constants.constants.AVGVABAH * 0.5);",
              "err": {},
              "uuid": "b27f9d15-b8a5-4918-a20a-21e3755ea53a",
              "parentUUID": "be81e31f-db43-437c-9048-96e16ad34e26",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should estimate housing allowance for chapter 30 as MGIB3YRRATE",
              "fullTitle": "estimatedBenefits should estimate housing allowance for chapter 30 as MGIB3YRRATE",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var state = (0, _set.default)('eligibility.giBillChapter', '30', defaultState);\n(0, _chai.expect)((0, _estimator.estimatedBenefits)(state, {\n  institution: {\n    type: 'public school',\n    bah: 1000,\n    country: 'usa'\n  }\n}).housing.value).to.equal(Math.round(state.constants.constants.MGIB3YRRATE));",
              "err": {},
              "uuid": "3f766e39-0297-485e-a31e-fb2de00c74c7",
              "parentUUID": "be81e31f-db43-437c-9048-96e16ad34e26",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "c9b8340e-ce99-40cd-bd93-9bb0155d28e3",
            "edd3e92d-8e6f-4818-b36b-cf17a114bfb9",
            "7a456552-89d4-41cf-9907-c89b11ac116c",
            "2588bd0a-2396-489f-83bc-a53777b12de7",
            "6d6699cf-a0d7-4bee-9901-254b4c7871c7",
            "490c28ec-5627-428d-b06e-eb228fa8cbc8",
            "760af585-88cf-4fa5-8f66-0e197765f8db",
            "21ea48d8-6a29-4b5c-b5c9-57a8dde1fff6",
            "94bb0d2f-3ffa-475e-b50f-0595e6053c61",
            "46ac30ec-7181-4add-87f8-3d8fffd0332b",
            "410658f5-8291-45f2-8a85-09c538567943",
            "d81388b1-a4b9-4db1-aaa4-acdb3a5c85ce",
            "2e08065c-7efd-40d8-a29b-da3f32294b40",
            "3b3d53a7-469f-4c62-8cf2-81990be3fa9b",
            "b27f9d15-b8a5-4918-a20a-21e3755ea53a",
            "3f766e39-0297-485e-a31e-fb2de00c74c7"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "abd3b31e-2448-4289-877d-0786ed6518e8",
          "title": "getCalculatedBenefits",
          "fullFile": "/Users/gcionapoleon/Documents/Github-2023/Github_three/vets-website/src/applications/gi/tests/selectors/vetTecCalculator.unit.spec.js",
          "file": "/src/applications/gi/tests/selectors/vetTecCalculator.unit.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should default vetTecScholarships to \"TBD\"",
              "fullTitle": "getCalculatedBenefits should default vetTecScholarships to \"TBD\"",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, _chai.expect)((0, _vetTecCalculator.getCalculatedBenefits)(defaultState).outputs.vetTecScholarships).to.equal('$0');",
              "err": {},
              "uuid": "985cd759-2a12-4000-95a6-e1114e830e79",
              "parentUUID": "abd3b31e-2448-4289-877d-0786ed6518e8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should default vaPaysToProvider to \"TBD\"",
              "fullTitle": "getCalculatedBenefits should default vaPaysToProvider to \"TBD\"",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, _chai.expect)((0, _vetTecCalculator.getCalculatedBenefits)(defaultState).outputs.vaPaysToProvider).to.equal('TBD');",
              "err": {},
              "uuid": "444db393-d670-40ba-b37c-fc5b3c0fa479",
              "parentUUID": "abd3b31e-2448-4289-877d-0786ed6518e8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should correctly calculate inPersonRate",
              "fullTitle": "getCalculatedBenefits should correctly calculate inPersonRate",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, _chai.expect)((0, _vetTecCalculator.getCalculatedBenefits)(defaultState).outputs.inPersonRate).to.equal('$1,800');",
              "err": {},
              "uuid": "182dab09-ad8e-4e56-a91f-538b664092e0",
              "parentUUID": "abd3b31e-2448-4289-877d-0786ed6518e8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should default outOfPocketTuitionFees to \"TBD\"",
              "fullTitle": "getCalculatedBenefits should default outOfPocketTuitionFees to \"TBD\"",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, _chai.expect)((0, _vetTecCalculator.getCalculatedBenefits)(defaultState).outputs.outOfPocketTuitionFees).to.equal('TBD');",
              "err": {},
              "uuid": "2332c8a6-ef7d-486d-9a39-07789194e354",
              "parentUUID": "abd3b31e-2448-4289-877d-0786ed6518e8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should default quarterVetTecPayment to \"TBD\"",
              "fullTitle": "getCalculatedBenefits should default quarterVetTecPayment to \"TBD\"",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, _chai.expect)((0, _vetTecCalculator.getCalculatedBenefits)(defaultState).outputs.quarterVetTecPayment).to.equal('TBD');",
              "err": {},
              "uuid": "c2bb1cfa-3f09-4553-9dff-1a90e3a31964",
              "parentUUID": "abd3b31e-2448-4289-877d-0786ed6518e8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should calculate onlineRate as AVGDODBAH constant",
              "fullTitle": "getCalculatedBenefits should calculate onlineRate as AVGDODBAH constant",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, _chai.expect)((0, _vetTecCalculator.getCalculatedBenefits)(defaultState).outputs.onlineRate).to.equal('$825');",
              "err": {},
              "uuid": "f85f57b5-a4c8-431b-8993-768c5e404d00",
              "parentUUID": "abd3b31e-2448-4289-877d-0786ed6518e8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should correctly calculate and format vetTecTuitionFees",
              "fullTitle": "getCalculatedBenefits should correctly calculate and format vetTecTuitionFees",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var state = (0, _set.default)('calculator.vetTecTuitionFees', '100', defaultState);\nvar calculatedBenefits = (0, _vetTecCalculator.getCalculatedBenefits)(state);\n(0, _chai.expect)(calculatedBenefits.outputs.vetTecTuitionFees).to.equal('$100');\n(0, _chai.expect)(calculatedBenefits.outputs.vetTecScholarships).to.equal('$0');\n(0, _chai.expect)(calculatedBenefits.outputs.vaPaysToProvider).to.equal('$100');\n(0, _chai.expect)(calculatedBenefits.outputs.quarterVetTecPayment).to.equal('$25');\n(0, _chai.expect)(calculatedBenefits.outputs.halfVetTecPayment).to.equal('$50');",
              "err": {},
              "uuid": "8222372a-03fa-4aa8-bee1-1400fc16fe9f",
              "parentUUID": "abd3b31e-2448-4289-877d-0786ed6518e8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should correctly calculate and format fields based on vetTecScholarships and vetTecTuitionFees",
              "fullTitle": "getCalculatedBenefits should correctly calculate and format fields based on vetTecScholarships and vetTecTuitionFees",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var state = _objectSpread(_objectSpread({}, defaultState), {}, {\n  calculator: _objectSpread(_objectSpread({}, defaultState.calculator), {}, {\n    vetTecTuitionFees: 1000,\n    vetTecScholarships: 300\n  })\n});\nvar calculatedBenefits = (0, _vetTecCalculator.getCalculatedBenefits)(state);\n(0, _chai.expect)(calculatedBenefits.outputs.vetTecTuitionFees).to.equal('$1,000');\n(0, _chai.expect)(calculatedBenefits.outputs.vetTecScholarships).to.equal('$300');\n(0, _chai.expect)(calculatedBenefits.outputs.vaPaysToProvider).to.equal('$700');\n(0, _chai.expect)(calculatedBenefits.outputs.quarterVetTecPayment).to.equal('$175');\n(0, _chai.expect)(calculatedBenefits.outputs.halfVetTecPayment).to.equal('$350');",
              "err": {},
              "uuid": "a14d2046-a1cc-421d-92e0-ab0979d9fea6",
              "parentUUID": "abd3b31e-2448-4289-877d-0786ed6518e8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should default halfVetTecPayment to \"TBD\"",
              "fullTitle": "getCalculatedBenefits should default halfVetTecPayment to \"TBD\"",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, _chai.expect)((0, _vetTecCalculator.getCalculatedBenefits)(defaultState).outputs.halfVetTecPayment).to.equal('TBD');",
              "err": {},
              "uuid": "46d1e828-6498-4229-8c4a-6485135ad60a",
              "parentUUID": "abd3b31e-2448-4289-877d-0786ed6518e8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should correctly calculate and format vetTecScholarships",
              "fullTitle": "getCalculatedBenefits should correctly calculate and format vetTecScholarships",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var state = (0, _set.default)('calculator.vetTecScholarships', '100', defaultState);\nvar calculatedBenefits = (0, _vetTecCalculator.getCalculatedBenefits)(state);\n(0, _chai.expect)(calculatedBenefits.outputs.vetTecTuitionFees).to.equal('TBD');\n(0, _chai.expect)(calculatedBenefits.outputs.vetTecScholarships).to.equal('$100');\n(0, _chai.expect)(calculatedBenefits.outputs.vaPaysToProvider).to.equal('TBD');\n(0, _chai.expect)(calculatedBenefits.outputs.quarterVetTecPayment).to.equal('TBD');\n(0, _chai.expect)(calculatedBenefits.outputs.halfVetTecPayment).to.equal('TBD');",
              "err": {},
              "uuid": "24dd1b9c-c523-4705-8409-314373333d46",
              "parentUUID": "abd3b31e-2448-4289-877d-0786ed6518e8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should default vetTecTuitionFees to \"TBD\"",
              "fullTitle": "getCalculatedBenefits should default vetTecTuitionFees to \"TBD\"",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, _chai.expect)((0, _vetTecCalculator.getCalculatedBenefits)(defaultState).outputs.vetTecTuitionFees).to.equal('TBD');",
              "err": {},
              "uuid": "8912c78f-6a19-4761-9742-83b77a3b4a05",
              "parentUUID": "abd3b31e-2448-4289-877d-0786ed6518e8",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "985cd759-2a12-4000-95a6-e1114e830e79",
            "444db393-d670-40ba-b37c-fc5b3c0fa479",
            "182dab09-ad8e-4e56-a91f-538b664092e0",
            "2332c8a6-ef7d-486d-9a39-07789194e354",
            "c2bb1cfa-3f09-4553-9dff-1a90e3a31964",
            "f85f57b5-a4c8-431b-8993-768c5e404d00",
            "8222372a-03fa-4aa8-bee1-1400fc16fe9f",
            "a14d2046-a1cc-421d-92e0-ab0979d9fea6",
            "46d1e828-6498-4229-8c4a-6485135ad60a",
            "24dd1b9c-c523-4705-8409-314373333d46",
            "8912c78f-6a19-4761-9742-83b77a3b4a05"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 10000
    }
  ],
  "meta": {
    "mocha": {
      "version": "8.2.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "undefined_2023-10-19T201302270Z",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "min",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.1"
    },
    "marge": {
      "options": {
        "id": "default",
        "consoleReporter": "min",
        "reportDir": "mocha/results",
        "reportFilename": "undefined_2023-10-19T201302270Z",
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "6.1.0"
    }
  }
}