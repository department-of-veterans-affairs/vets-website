{
  "stats": {
    "suites": 63,
    "tests": 154,
    "passes": 151,
    "pending": 3,
    "failures": 0,
    "start": "2025-03-03T22:25:33.161Z",
    "end": "2025-03-03T22:25:34.982Z",
    "duration": 1821,
    "testsRegistered": 154,
    "passPercent": 100,
    "pendingPercent": 1.948051948051948,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "734ee1af-b2e2-431e-82ec-672382219b62",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [
        {
          "title": "\"before each\" hook: beforeEach in \"{root}\"",
          "fullTitle": "\"before each\" hook: beforeEach in \"{root}\"",
          "timedOut": false,
          "duration": 3,
          "state": null,
          "speed": null,
          "pass": false,
          "fail": false,
          "pending": false,
          "context": null,
          "code": "cov_5fzq6lsur().f[20]++;\ncov_5fzq6lsur().s[70]++;\nsetupJSDom();\ncov_5fzq6lsur().s[71]++;\nresetFetch();\ncov_5fzq6lsur().s[72]++;\ncleanupStorage();\ncov_5fzq6lsur().s[73]++;\nif (isStressTest == 'false') {\n  cov_5fzq6lsur().b[12][0]++;\n  cov_5fzq6lsur().s[74]++;\n  checkAllowList(this);\n} else {\n  cov_5fzq6lsur().b[12][1]++;\n}\ncov_5fzq6lsur().s[75]++;\nif ((cov_5fzq6lsur().b[14][0]++, process.env.CI) || (cov_5fzq6lsur().b[14][1]++, ['trace', 'debug'].includes(process.env.LOG_LEVEL))) {\n  cov_5fzq6lsur().b[13][0]++;\n  cov_5fzq6lsur().s[76]++;\n  console.log('running: ', this.currentTest.file.slice(this.currentTest.file.indexOf('src')));\n} else {\n  cov_5fzq6lsur().b[13][1]++;\n}",
          "err": {},
          "uuid": "53900b94-18b9-42c5-9541-f0dfd96643f7",
          "parentUUID": "734ee1af-b2e2-431e-82ec-672382219b62",
          "isHook": true,
          "skipped": false
        }
      ],
      "afterHooks": [
        {
          "title": "\"after each\" hook: afterEach in \"{root}\"",
          "fullTitle": "\"after each\" hook: afterEach in \"{root}\"",
          "timedOut": false,
          "duration": 0,
          "state": null,
          "speed": null,
          "pass": false,
          "fail": false,
          "pending": false,
          "context": null,
          "code": "cov_5fzq6lsur().f[21]++;\ncov_5fzq6lsur().s[77]++;\ncleanupStorage();\ncov_5fzq6lsur().s[78]++;\nflushPromises();",
          "err": {},
          "uuid": "ac11d3df-c4b1-4435-b438-d14dabb59648",
          "parentUUID": "734ee1af-b2e2-431e-82ec-672382219b62",
          "isHook": true,
          "skipped": false
        },
        {
          "title": "\"after each\" hook in \"{root}\"",
          "fullTitle": "\"after each\" hook in \"{root}\"",
          "timedOut": false,
          "duration": 0,
          "state": null,
          "speed": null,
          "pass": false,
          "fail": false,
          "pending": false,
          "context": null,
          "code": "(0, _pure.cleanup)();",
          "err": {},
          "uuid": "849f3e4e-083e-4669-bfb9-799b57dd5e1c",
          "parentUUID": "734ee1af-b2e2-431e-82ec-672382219b62",
          "isHook": true,
          "skipped": false
        }
      ],
      "tests": [],
      "suites": [
        {
          "uuid": "daa8fdb6-e791-47ab-96d7-9c3fd792ac17",
          "title": "CustomEmailField Component",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/survivor-dependent-education-benefit/22-5490/tests/components/CustomEmailField.unit.spec.jsx",
          "file": "/src/applications/survivor-dependent-education-benefit/22-5490/tests/components/CustomEmailField.unit.spec.jsx",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"CustomEmailField Component\"",
              "fullTitle": "CustomEmailField Component \"before each\" hook in \"CustomEmailField Component\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "store = mockStore(initialState);\nsandbox = _sinon.default.createSandbox();",
              "err": {},
              "uuid": "12f0402d-ac35-48ce-8296-81f660b1afcb",
              "parentUUID": "daa8fdb6-e791-47ab-96d7-9c3fd792ac17",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after each\" hook in \"CustomEmailField Component\"",
              "fullTitle": "CustomEmailField Component \"after each\" hook in \"CustomEmailField Component\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "sandbox.restore();",
              "err": {},
              "uuid": "50422afa-4021-4211-84f6-d1cad2c11c9b",
              "parentUUID": "daa8fdb6-e791-47ab-96d7-9c3fd792ac17",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "should render with initial email",
              "fullTitle": "CustomEmailField Component should render with initial email",
              "timedOut": false,
              "duration": 41,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var wrapper = (0, _enzyme.mount)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n  store: store\n}, /*#__PURE__*/_react.default.createElement(_CustomEmailField.default, {\n  schema: {\n    type: 'string'\n  },\n  uiSchema: {}\n})));\n(0, _chai.expect)(wrapper.find('EmailWidget').prop('value')).to.equal('test@example.com');\nwrapper.unmount();",
              "err": {},
              "uuid": "805ef5e3-113d-4039-900b-accc6caec204",
              "parentUUID": "daa8fdb6-e791-47ab-96d7-9c3fd792ac17",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should not call fetchDuplicateContactInfo when an invalid email is entered",
              "fullTitle": "CustomEmailField Component should not call fetchDuplicateContactInfo when an invalid email is entered",
              "timedOut": false,
              "duration": 6,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "sandbox.stub(validations, 'isValidEmail').returns(false);\nvar fetchDuplicateContactInfoSpy = sandbox.spy();\nvar wrapper = (0, _enzyme.mount)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n  store: store\n}, /*#__PURE__*/_react.default.createElement(_CustomEmailField.default, {\n  schema: {\n    type: 'string'\n  },\n  uiSchema: {}\n})));\nvar invalidEmail = 'invalid-email';\nwrapper.find('EmailWidget').props().onChange(invalidEmail);\n(0, _chai.expect)(fetchDuplicateContactInfoSpy.notCalled).to.be.true;\nwrapper.unmount();",
              "err": {},
              "uuid": "f99f1d99-cfe7-457b-9c78-0190ca9fd033",
              "parentUUID": "daa8fdb6-e791-47ab-96d7-9c3fd792ac17",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "805ef5e3-113d-4039-900b-accc6caec204",
            "f99f1d99-cfe7-457b-9c78-0190ca9fd033"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 47,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "7994f79c-06b9-429d-82d1-0198dda50224",
          "title": "CustomPhoneNumberField",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/survivor-dependent-education-benefit/22-5490/tests/components/CustomPhoneNumberField.unit.spec.jsx",
          "file": "/src/applications/survivor-dependent-education-benefit/22-5490/tests/components/CustomPhoneNumberField.unit.spec.jsx",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"CustomPhoneNumberField\"",
              "fullTitle": "CustomPhoneNumberField \"before each\" hook in \"CustomPhoneNumberField\"",
              "timedOut": false,
              "duration": 2,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "store = mockStore(initialState);\nfetchDuplicateContactInfoSpy = _sinon.default.spy();\nsetFormDataSpy = _sinon.default.spy();\nsandbox = _sinon.default.sandbox.create();\nwrapper = (0, _enzyme.mount)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n  store: store\n}, /*#__PURE__*/_react.default.createElement(_CustomPhoneNumberField.default, {\n  schema: {\n    type: 'string'\n  },\n  uiSchema: {},\n  fetchDuplicateContactInfo: fetchDuplicateContactInfoSpy,\n  setFormData: setFormDataSpy,\n  mobilePhone: initialState.form.data.mobilePhone,\n  duplicateEmail: initialState.data.duplicateEmail,\n  formData: initialState.form.data\n})));",
              "err": {},
              "uuid": "e5aed278-1cfb-4483-9828-73580ee8b010",
              "parentUUID": "7994f79c-06b9-429d-82d1-0198dda50224",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after each\" hook in \"CustomPhoneNumberField\"",
              "fullTitle": "CustomPhoneNumberField \"after each\" hook in \"CustomPhoneNumberField\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "wrapper.unmount();\nsandbox.restore();",
              "err": {},
              "uuid": "9de541b8-4c98-4a71-be04-139036a89c5a",
              "parentUUID": "7994f79c-06b9-429d-82d1-0198dda50224",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "should render the PhoneNumberWidget with correct value",
              "fullTitle": "CustomPhoneNumberField should render the PhoneNumberWidget with correct value",
              "timedOut": false,
              "duration": 16,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, _chai.expect)(wrapper.find(_PhoneNumberWidget.default)).to.have.lengthOf(1);\n(0, _chai.expect)(wrapper.find(_PhoneNumberWidget.default).prop('value')).to.equal('123-867-5309');",
              "err": {},
              "uuid": "c2c51b22-a7ff-4b91-abda-ab497bc71809",
              "parentUUID": "7994f79c-06b9-429d-82d1-0198dda50224",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should not call fetchDuplicateContactInfo when phone number length <= 9",
              "fullTitle": "CustomPhoneNumberField should not call fetchDuplicateContactInfo when phone number length <= 9",
              "timedOut": false,
              "duration": 5,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var newPhoneNumber = '987654321';\nwrapper.find(_PhoneNumberWidget.default).props().onChange(newPhoneNumber);\n(0, _chai.expect)(fetchDuplicateContactInfoSpy.notCalled).to.be.true;",
              "err": {},
              "uuid": "e0c79f33-6df3-4257-b283-90c771646834",
              "parentUUID": "7994f79c-06b9-429d-82d1-0198dda50224",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "c2c51b22-a7ff-4b91-abda-ab497bc71809",
            "e0c79f33-6df3-4257-b283-90c771646834"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 21,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "17ad3062-299d-4252-84cd-645a0010a440",
          "title": "DirectDepositCustomReview",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/survivor-dependent-education-benefit/22-5490/tests/components/DirectDepositCustomReview.unit.spec.jsx",
          "file": "/src/applications/survivor-dependent-education-benefit/22-5490/tests/components/DirectDepositCustomReview.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "renders without crashing",
              "fullTitle": "DirectDepositCustomReview renders without crashing",
              "timedOut": false,
              "duration": 16,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var initialState = {\n  form: {\n    data: {\n      'view:directDeposit': {\n        bankAccount: {\n          accountType: 'checking',\n          routingNumber: '123456789',\n          accountNumber: '123456789012'\n        }\n      }\n    }\n  },\n  formContext: {\n    onReviewPage: true\n  }\n};\nvar store = mockStore(initialState);\nvar _render = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: store\n  }, /*#__PURE__*/_react.default.createElement(_DirectDepositCustomReview.default, {\n    editPage: function editPage() {}\n  }))),\n  getByText = _render.getByText;\n(0, _chai.expect)(getByText('Review your direct deposit information')).to.exist;",
              "err": {},
              "uuid": "8c867a94-e556-4992-b17a-2b0e7abdef32",
              "parentUUID": "17ad3062-299d-4252-84cd-645a0010a440",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "8c867a94-e556-4992-b17a-2b0e7abdef32"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 16,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "1630db71-7378-4735-83a1-12423d4a6a50",
          "title": "DirectDepositDescription component",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/survivor-dependent-education-benefit/22-5490/tests/components/DirectDepositDescription.unit.spec.jsx",
          "file": "/src/applications/survivor-dependent-education-benefit/22-5490/tests/components/DirectDepositDescription.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "returns null when formContext.onReviewPage is true",
              "fullTitle": "DirectDepositDescription component returns null when formContext.onReviewPage is true",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var wrapper = (0, _enzyme.shallow)(/*#__PURE__*/_react.default.createElement(_DirectDepositDescription.default, {\n  formContext: {\n    onReviewPage: true\n  }\n}));\n(0, _chai.expect)(wrapper.isEmptyRender()).to.be.true;\nwrapper.unmount();",
              "err": {},
              "uuid": "4cc581b8-6bde-410d-8f65-6d8501b45012",
              "parentUUID": "1630db71-7378-4735-83a1-12423d4a6a50",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "renders correctly when formContext.onReviewPage is false",
              "fullTitle": "DirectDepositDescription component renders correctly when formContext.onReviewPage is false",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var wrapper = (0, _enzyme.shallow)(/*#__PURE__*/_react.default.createElement(_DirectDepositDescription.default, {\n  formContext: {\n    onReviewPage: false\n  }\n}));\n(0, _chai.expect)(wrapper.text()).to.include('We make payments only through direct deposit');\nwrapper.unmount();",
              "err": {},
              "uuid": "b52ae877-cf6c-4d8e-83a0-d27dd1b3711b",
              "parentUUID": "1630db71-7378-4735-83a1-12423d4a6a50",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "4cc581b8-6bde-410d-8f65-6d8501b45012",
            "b52ae877-cf6c-4d8e-83a0-d27dd1b3711b"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "cd789f4e-a6cc-4476-98f3-c249ce80f348",
          "title": "DirectDepositTitle component",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/survivor-dependent-education-benefit/22-5490/tests/components/DirectDepositTitle.unit.spec.jsx",
          "file": "/src/applications/survivor-dependent-education-benefit/22-5490/tests/components/DirectDepositTitle.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "renders the title when not on the review page",
              "fullTitle": "DirectDepositTitle component renders the title when not on the review page",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var formContext = {\n  onReviewPage: false\n};\nvar title = 'Direct Deposit Information';\nvar wrapper = (0, _enzyme.shallow)(/*#__PURE__*/_react.default.createElement(_DirectDepositTitle.default, {\n  formContext: formContext,\n  title: title\n}));\n(0, _chai.expect)(wrapper.text()).to.equal(title);\nwrapper.unmount();",
              "err": {},
              "uuid": "d07a3b68-8760-40c4-9ca1-c46ebd6c6c29",
              "parentUUID": "cd789f4e-a6cc-4476-98f3-c249ce80f348",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "returns null when on the review page",
              "fullTitle": "DirectDepositTitle component returns null when on the review page",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var formContext = {\n  onReviewPage: true\n};\nvar wrapper = (0, _enzyme.shallow)(/*#__PURE__*/_react.default.createElement(_DirectDepositTitle.default, {\n  formContext: formContext,\n  title: \"Direct Deposit Information\"\n}));\n(0, _chai.expect)(wrapper.isEmptyRender()).to.be.true;\nwrapper.unmount();",
              "err": {},
              "uuid": "34fa1181-88b5-4fa6-b78f-6e7656292d49",
              "parentUUID": "cd789f4e-a6cc-4476-98f3-c249ce80f348",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "returns null when formContext is not provided",
              "fullTitle": "DirectDepositTitle component returns null when formContext is not provided",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var wrapper = (0, _enzyme.shallow)(/*#__PURE__*/_react.default.createElement(_DirectDepositTitle.default, {\n  title: \"Direct Deposit Information\"\n}));\n(0, _chai.expect)(wrapper.isEmptyRender()).to.be.true;\nwrapper.unmount();",
              "err": {},
              "uuid": "02e88617-f8fa-411f-9310-e0ad8bfdb468",
              "parentUUID": "cd789f4e-a6cc-4476-98f3-c249ce80f348",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "d07a3b68-8760-40c4-9ca1-c46ebd6c6c29",
            "34fa1181-88b5-4fa6-b78f-6e7656292d49",
            "02e88617-f8fa-411f-9310-e0ad8bfdb468"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "f10a0266-2158-4558-82be-f6dd73b805de",
          "title": "DirectDepositViewField component",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/survivor-dependent-education-benefit/22-5490/tests/components/DirectDepositViewField.unit.spec.js",
          "file": "/src/applications/survivor-dependent-education-benefit/22-5490/tests/components/DirectDepositViewField.unit.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "renders the DirectDepositViewField footer",
              "fullTitle": "DirectDepositViewField component renders the DirectDepositViewField footer",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, _chai.expect)(/*#__PURE__*/_react.default.createElement(_DirectDepositViewField.default, null));",
              "err": {},
              "uuid": "927bc034-1dc3-4acf-a9d9-5ab026bfac5a",
              "parentUUID": "f10a0266-2158-4558-82be-f6dd73b805de",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should render obfuscated checking account information",
              "fullTitle": "DirectDepositViewField component should render obfuscated checking account information",
              "timedOut": false,
              "duration": 4,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var wrapper = (0, _enzyme.mount)(/*#__PURE__*/_react.default.createElement(_DirectDepositViewField.default, {\n  formData: initialState\n}));\n(0, _chai.expect)(wrapper.text()).to.include('Checking account');\n(0, _chai.expect)(wrapper.text()).to.include('●●●●●1321');\n(0, _chai.expect)(wrapper.text()).to.include('●●●●●3123');\nwrapper.unmount();",
              "err": {},
              "uuid": "3fe828ba-022a-4229-b284-4a67cbd25123",
              "parentUUID": "f10a0266-2158-4558-82be-f6dd73b805de",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should render account information when no account type is provided",
              "fullTitle": "DirectDepositViewField component should render account information when no account type is provided",
              "timedOut": false,
              "duration": 3,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "initialState.bankAccount.accountType = '';\nvar wrapper = (0, _enzyme.mount)(/*#__PURE__*/_react.default.createElement(_DirectDepositViewField.default, {\n  formData: initialState\n}));\n(0, _chai.expect)(wrapper.text()).to.include('Account');\n(0, _chai.expect)(wrapper.text()).to.include('●●●●●1321');\n(0, _chai.expect)(wrapper.text()).to.include('●●●●●3123');\nwrapper.unmount();",
              "err": {},
              "uuid": "e047b754-5f35-43fa-82d7-586129829b19",
              "parentUUID": "f10a0266-2158-4558-82be-f6dd73b805de",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "927bc034-1dc3-4acf-a9d9-5ab026bfac5a",
            "3fe828ba-022a-4229-b284-4a67cbd25123",
            "e047b754-5f35-43fa-82d7-586129829b19"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 7,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "cd724241-9b30-4933-b56e-4196cdb47df1",
          "title": "DuplicateContactInfoModal",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/survivor-dependent-education-benefit/22-5490/tests/components/DuplicateContactInfoModal.unit.spec.jsx",
          "file": "/src/applications/survivor-dependent-education-benefit/22-5490/tests/components/DuplicateContactInfoModal.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should render with data",
              "fullTitle": "DuplicateContactInfoModal should render with data",
              "timedOut": false,
              "duration": 5,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var wrapper = (0, _enzyme.mount)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n  store: store\n}, /*#__PURE__*/_react.default.createElement(_DuplicateContactInfoModal.default, null)));\n(0, _chai.expect)(wrapper.text()).to.include('This will impact how we:');\nwrapper.unmount();",
              "err": {},
              "uuid": "f576a7c4-580c-4d7a-9fdf-63c976b93a88",
              "parentUUID": "cd724241-9b30-4933-b56e-4196cdb47df1",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f576a7c4-580c-4d7a-9fdf-63c976b93a88"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 5,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "d0f7be99-9ed8-48fc-8546-81c736922fe1",
          "title": "EmailReviewField component",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/survivor-dependent-education-benefit/22-5490/tests/components/EmailReviewField.unit.spec.jsx",
          "file": "/src/applications/survivor-dependent-education-benefit/22-5490/tests/components/EmailReviewField.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "renders the EmailReviewField footer",
              "fullTitle": "EmailReviewField component renders the EmailReviewField footer",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var wrapper = (0, _enzyme.mount)(/*#__PURE__*/_react.default.createElement(_EmailReviewField.default, null, /*#__PURE__*/_react.default.createElement(\"div\", {\n  formData: \"test@test.com\"\n})));\n(0, _chai.expect)(wrapper.text()).to.include('test');\nwrapper.unmount();",
              "err": {},
              "uuid": "77487263-ca2a-4077-a3b7-482e551280ec",
              "parentUUID": "d0f7be99-9ed8-48fc-8546-81c736922fe1",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "77487263-ca2a-4077-a3b7-482e551280ec"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "0764cf4c-fab8-4685-96a9-5991bf56a800",
          "title": "FormFooter component",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/survivor-dependent-education-benefit/22-5490/tests/components/FormFooter.unit.spec.js",
          "file": "/src/applications/survivor-dependent-education-benefit/22-5490/tests/components/FormFooter.unit.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "renders the FormFooter footer",
              "fullTitle": "FormFooter component renders the FormFooter footer",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var wrapper = (0, _enzyme.mount)(/*#__PURE__*/_react.default.createElement(_FormFooter.default, null));\n(0, _chai.expect)(wrapper.text()).to.include('If you need help with your application or have questions about');\nwrapper.unmount();",
              "err": {},
              "uuid": "81c493dd-0475-4c16-8d82-a86342164c99",
              "parentUUID": "0764cf4c-fab8-4685-96a9-5991bf56a800",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "81c493dd-0475-4c16-8d82-a86342164c99"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "9eab6f6c-832e-489f-b7ac-333ad5dfaf16",
          "title": "MailingAddressViewField component",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/survivor-dependent-education-benefit/22-5490/tests/components/MailingAddressViewField.unit.spec.jsx",
          "file": "/src/applications/survivor-dependent-education-benefit/22-5490/tests/components/MailingAddressViewField.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should render the mailing address",
              "fullTitle": "MailingAddressViewField component should render the mailing address",
              "timedOut": false,
              "duration": 3,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var wrapper = (0, _enzyme.mount)(/*#__PURE__*/_react.default.createElement(_MailingAddressViewField.default, {\n  formData: initialState\n}));\n(0, _chai.expect)(wrapper.text()).to.include('123 true st');\n(0, _chai.expect)(wrapper.text()).to.include('#1');\n(0, _chai.expect)(wrapper.text()).to.include('Fairfax');\n(0, _chai.expect)(wrapper.text()).to.include('VA');\n(0, _chai.expect)(wrapper.text()).to.include('22042');\nwrapper.unmount();",
              "err": {},
              "uuid": "b99ba1f3-47ee-4ec5-bb9b-d6ddc3882d54",
              "parentUUID": "9eab6f6c-832e-489f-b7ac-333ad5dfaf16",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "b99ba1f3-47ee-4ec5-bb9b-d6ddc3882d54"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "999af55a-0752-4a6d-9a5c-e86eb419f672",
          "title": "ObfuscateReviewField component",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/survivor-dependent-education-benefit/22-5490/tests/components/ObfuscateReviewField.unit.spec.jsx",
          "file": "/src/applications/survivor-dependent-education-benefit/22-5490/tests/components/ObfuscateReviewField.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "renders without crashing",
              "fullTitle": "ObfuscateReviewField component renders without crashing",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var uiSchema = {\n  'ui:title': 'Obfuscated Title'\n};\nvar formData = 'Sensitive Information';\nvar wrapper = (0, _enzyme.mount)(/*#__PURE__*/_react.default.createElement(_ObfuscateReviewField.default, {\n  uiSchema: uiSchema\n}, /*#__PURE__*/_react.default.createElement(\"span\", {\n  formData: formData\n})));\n(0, _chai.expect)(wrapper.exists()).to.be.true;\nwrapper.unmount();",
              "err": {},
              "uuid": "1e11d19a-1b33-4cc0-aeea-ee57ac23f8cf",
              "parentUUID": "999af55a-0752-4a6d-9a5c-e86eb419f672",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "displays the title from uiSchema",
              "fullTitle": "ObfuscateReviewField component displays the title from uiSchema",
              "timedOut": false,
              "duration": 3,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var uiSchema = {\n  'ui:title': 'Obfuscated Title'\n};\nvar formData = 'Sensitive Information';\nvar wrapper = (0, _enzyme.mount)(/*#__PURE__*/_react.default.createElement(_ObfuscateReviewField.default, {\n  uiSchema: uiSchema\n}, /*#__PURE__*/_react.default.createElement(\"span\", {\n  formData: formData\n})));\n(0, _chai.expect)(wrapper.find('dt').text()).to.equal('Obfuscated Title');\nwrapper.unmount();",
              "err": {},
              "uuid": "279f4d2a-99f2-4a81-8eab-c3c6e363e865",
              "parentUUID": "999af55a-0752-4a6d-9a5c-e86eb419f672",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "obfuscates the formData content",
              "fullTitle": "ObfuscateReviewField component obfuscates the formData content",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var uiSchema = {\n  'ui:title': 'Obfuscated Title'\n};\nvar formData = 'Sensitive Information';\nvar wrapper = (0, _enzyme.mount)(/*#__PURE__*/_react.default.createElement(_ObfuscateReviewField.default, {\n  uiSchema: uiSchema\n}, /*#__PURE__*/_react.default.createElement(\"span\", {\n  formData: formData\n})));\nvar obfuscatedText = wrapper.find('dd').text();\n// Adjusted expectation to check for `●` characters\n(0, _chai.expect)(obfuscatedText).to.not.equal(formData);\n(0, _chai.expect)(obfuscatedText).to.match(/●+/); // Checks if the obfuscation contains `●` characters\nwrapper.unmount();",
              "err": {},
              "uuid": "73896d7f-8694-4278-b92d-84cbaf94655a",
              "parentUUID": "999af55a-0752-4a6d-9a5c-e86eb419f672",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "1e11d19a-1b33-4cc0-aeea-ee57ac23f8cf",
            "279f4d2a-99f2-4a81-8eab-c3c6e363e865",
            "73896d7f-8694-4278-b92d-84cbaf94655a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 7,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "4e11e489-e901-482d-a2b6-1aec623058cf",
          "title": "PersonalInformation component",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/survivor-dependent-education-benefit/22-5490/tests/components/PersonalInformation.unit.spec.js",
          "file": "/src/applications/survivor-dependent-education-benefit/22-5490/tests/components/PersonalInformation.unit.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "renders the PersonalInformation footer",
              "fullTitle": "PersonalInformation component renders the PersonalInformation footer",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, _chai.expect)(/*#__PURE__*/_react.default.createElement(_PersonalInformation.default, null));",
              "err": {},
              "uuid": "74ca03ec-e7e0-46e1-9c32-71e4f555a185",
              "parentUUID": "4e11e489-e901-482d-a2b6-1aec623058cf",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should render the user full name and formatted date of birth",
              "fullTitle": "PersonalInformation component should render the user full name and formatted date of birth",
              "timedOut": false,
              "duration": 3,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var store = mockStore(initialState);\nvar wrapper = (0, _enzyme.mount)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n  store: store\n}, /*#__PURE__*/_react.default.createElement(_PersonalInformation.default, null)));\n(0, _chai.expect)(wrapper.text()).to.include('John M Doe');\n(0, _chai.expect)(wrapper.text()).to.include('Date of birth: January 1, 1990');\nwrapper.unmount();",
              "err": {},
              "uuid": "95aebd43-1000-4d04-b4df-40b9879026bb",
              "parentUUID": "4e11e489-e901-482d-a2b6-1aec623058cf",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should render the user full name and formatted date of birth",
              "fullTitle": "PersonalInformation component should render the user full name and formatted date of birth",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "initialState.user.profile.dob = '';\nvar store = mockStore(initialState);\nvar wrapper = (0, _enzyme.mount)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n  store: store\n}, /*#__PURE__*/_react.default.createElement(_PersonalInformation.default, null)));\n(0, _chai.expect)(wrapper.text()).to.include('John M Doe');\n(0, _chai.expect)(wrapper.text()).to.include('Date of birth: Not available');\nwrapper.unmount();",
              "err": {},
              "uuid": "272c07d3-110d-462d-9cb9-49233d76b586",
              "parentUUID": "4e11e489-e901-482d-a2b6-1aec623058cf",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "74ca03ec-e7e0-46e1-9c32-71e4f555a185",
            "95aebd43-1000-4d04-b4df-40b9879026bb",
            "272c07d3-110d-462d-9cb9-49233d76b586"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 5,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "b6caa456-e0bd-4abf-87e1-49624dba8101",
          "title": "PersonalInformationReviewField component",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/survivor-dependent-education-benefit/22-5490/tests/components/PersonalInformationReviewField.unit.spec.jsx",
          "file": "/src/applications/survivor-dependent-education-benefit/22-5490/tests/components/PersonalInformationReviewField.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "renders the PersonalInformationReviewField footer",
              "fullTitle": "PersonalInformationReviewField component renders the PersonalInformationReviewField footer",
              "timedOut": false,
              "duration": 3,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var store = mockStore(initialState);\nvar wrapper = (0, _enzyme.mount)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n  store: store\n}, /*#__PURE__*/_react.default.createElement(_PersonalInformationReviewField.default, {\n  data: {\n    highSchoolDiploma: 'yes'\n  },\n  title: \"date of birth\"\n})));\n(0, _chai.expect)(wrapper.text()).to.include('test T testerson');\nwrapper.unmount();",
              "err": {},
              "uuid": "ae220233-3e0a-4826-9dfe-c3ef7db76fcd",
              "parentUUID": "b6caa456-e0bd-4abf-87e1-49624dba8101",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "ae220233-3e0a-4826-9dfe-c3ef7db76fcd"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "dfd9ea62-3f60-4aa6-ab16-011a8d33d875",
          "title": "PhoneReviewField component",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/survivor-dependent-education-benefit/22-5490/tests/components/PhoneReviewField.unit.spec.jsx",
          "file": "/src/applications/survivor-dependent-education-benefit/22-5490/tests/components/PhoneReviewField.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "renders the PhoneReviewField footer",
              "fullTitle": "PhoneReviewField component renders the PhoneReviewField footer",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var formData = {\n  phone: '3333333333'\n};\nvar uiSchema = {\n  phone: {\n    'ui:title': 'Review Phone'\n  }\n};\nvar wrapper = (0, _enzyme.mount)(/*#__PURE__*/_react.default.createElement(_PhoneReviewField.default, {\n  uiSchema: uiSchema,\n  formData: formData\n}));\n(0, _chai.expect)(wrapper.text()).to.include('3333333333');\n(0, _chai.expect)(wrapper.text()).to.include('Review Phone');\nwrapper.unmount();",
              "err": {},
              "uuid": "0b1c4b73-572d-4df8-8d08-e66eb8a8a637",
              "parentUUID": "dfd9ea62-3f60-4aa6-ab16-011a8d33d875",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "0b1c4b73-572d-4df8-8d08-e66eb8a8a637"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "7bdad373-a29f-47ae-9085-ff2145d2471e",
          "title": "PhoneViewField component",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/survivor-dependent-education-benefit/22-5490/tests/components/PhoneViewField.unit.spec.jsx",
          "file": "/src/applications/survivor-dependent-education-benefit/22-5490/tests/components/PhoneViewField.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "renders the PhoneViewField footer",
              "fullTitle": "PhoneViewField component renders the PhoneViewField footer",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var formData = {\n  phone: '3333333333'\n};\nvar wrapper = (0, _enzyme.mount)(/*#__PURE__*/_react.default.createElement(_PhoneViewField.default, {\n  formData: formData\n}));\n(0, _chai.expect)(wrapper.text()).to.include('333-333-3333');\nwrapper.unmount();",
              "err": {},
              "uuid": "7ee778ba-8067-4890-8909-0818e97c521d",
              "parentUUID": "7bdad373-a29f-47ae-9085-ff2145d2471e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "7ee778ba-8067-4890-8909-0818e97c521d"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "1047dfed-22e1-44e5-b38b-cd2ad873a624",
          "title": "YesNoReviewField component",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/survivor-dependent-education-benefit/22-5490/tests/components/YesNoReviewField.unit.spec.jsx",
          "file": "/src/applications/survivor-dependent-education-benefit/22-5490/tests/components/YesNoReviewField.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "renders the YesNoReviewField footer",
              "fullTitle": "YesNoReviewField component renders the YesNoReviewField footer",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var uiSchema = {\n  'ui:title': 'test title'\n};\nvar wrapper = (0, _enzyme.mount)(/*#__PURE__*/_react.default.createElement(_YesNoReviewField.default, {\n  uiSchema: uiSchema\n}, /*#__PURE__*/_react.default.createElement(\"div\", {\n  formData: \"yes\"\n})));\n(0, _chai.expect)(wrapper.text()).to.include('test title');\nwrapper.unmount();",
              "err": {},
              "uuid": "27fc7a10-6679-49e6-bf5f-3651a3449262",
              "parentUUID": "1047dfed-22e1-44e5-b38b-cd2ad873a624",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "27fc7a10-6679-49e6-bf5f-3651a3449262"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "3a95f3fe-696a-4c96-8e63-4a2deafe038e",
          "title": "<ConfirmationPage>",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/survivor-dependent-education-benefit/22-5490/tests/containers/ConfirmationPage.unit.spec.js",
          "file": "/src/applications/survivor-dependent-education-benefit/22-5490/tests/containers/ConfirmationPage.unit.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should render the UnderReviewConfirmationFry component with the new title when chosenBenefit is \"fry\"",
              "fullTitle": "<ConfirmationPage> should render the UnderReviewConfirmationFry component with the new title when chosenBenefit is \"fry\"",
              "timedOut": false,
              "duration": 23,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getData = getData({\n    chosenBenefit: 'fry'\n  }),\n  mockStore = _getData.mockStore;\nvar _renderComponent = renderComponent({\n    mockStore: mockStore\n  }),\n  getByText = _renderComponent.getByText;\n// Use a regex matcher to find \"FRY, Chapter 33\" and other text\n(0, _chai.expect)(getByText(/Fry Scholarship \\(Chapter 33\\)/i)).to.exist;\n// Check for the received application title text\n(0, _chai.expect)(getByText(/We’ve received your application/i)).to.exist;\n// Check for the application form title\n(0, _chai.expect)(getByText(/Application for VA Education Benefits \\(VA Form 22-5490\\)/i)).to.exist;\n// Check for the presence of the new \"FRY, Chapter 33\" title\n(0, _chai.expect)(getByText('FRY, Chapter 33')).to.exist;\n// Check for the received application title text\n(0, _chai.expect)(getByText('We’ve received your application')).to.exist;\n// Check for the application form title\n(0, _chai.expect)(getByText('Application for VA Education Benefits (VA Form 22-5490)')).to.exist;",
              "err": {},
              "uuid": "83142571-170d-4411-ad0f-f39740a0c82f",
              "parentUUID": "3a95f3fe-696a-4c96-8e63-4a2deafe038e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should render the UnderReviewConfirmationDEAChapter35 component with the new title when chosenBenefit is \"dea\"",
              "fullTitle": "<ConfirmationPage> should render the UnderReviewConfirmationDEAChapter35 component with the new title when chosenBenefit is \"dea\"",
              "timedOut": false,
              "duration": 12,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getData2 = getData({\n    chosenBenefit: 'dea'\n  }),\n  mockStore = _getData2.mockStore;\nvar _renderComponent2 = renderComponent({\n    mockStore: mockStore\n  }),\n  getByText = _renderComponent2.getByText;\n// Use a regex matcher to find \"DEA, Chapter 35\" and other text\n(0, _chai.expect)(getByText(/Survivors' and Dependents' Educational Assistance \\(Chapter 35\\)/i)).to.exist;\n// Check for the received application title text\n(0, _chai.expect)(getByText(/We’ve received your application/i)).to.exist;\n// Check for the application form title\n(0, _chai.expect)(getByText(/Application for VA Education Benefits \\(VA Form 22-5490\\)/i)).to.exist;\n// Check for the presence of the new \"DEA, Chapter 35\" title\n(0, _chai.expect)(getByText('DEA, Chapter 35')).to.exist;",
              "err": {},
              "uuid": "52a5437e-97b5-4692-ac41-3fcb154b483e",
              "parentUUID": "3a95f3fe-696a-4c96-8e63-4a2deafe038e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should render nothing if chosenBenefit is neither \"fry\" nor \"dea\"",
              "fullTitle": "<ConfirmationPage> should render nothing if chosenBenefit is neither \"fry\" nor \"dea\"",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getData3 = getData({\n    chosenBenefit: 'unknown'\n  }),\n  mockStore = _getData3.mockStore;\nvar _renderComponent3 = renderComponent({\n    mockStore: mockStore\n  }),\n  container = _renderComponent3.container;\n// Expect the container to be empty, as no component should render for \"unknown\"\n(0, _chai.expect)(container.innerHTML).to.equal('');",
              "err": {},
              "uuid": "213ac0e8-8534-4985-9de9-8cc9980f653b",
              "parentUUID": "3a95f3fe-696a-4c96-8e63-4a2deafe038e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "83142571-170d-4411-ad0f-f39740a0c82f",
            "52a5437e-97b5-4692-ac41-3fcb154b483e",
            "213ac0e8-8534-4985-9de9-8cc9980f653b"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 37,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "ce7a1fec-0beb-41c9-be98-49a87e91b867",
          "title": "<IntroductionPage>",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/survivor-dependent-education-benefit/22-5490/tests/containers/IntroductionPage.unit.spec.js",
          "file": "/src/applications/survivor-dependent-education-benefit/22-5490/tests/containers/IntroductionPage.unit.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "4230484b-f646-4daf-8ce6-96c1a1a6b67e",
              "title": "when the page renders",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/survivor-dependent-education-benefit/22-5490/tests/containers/IntroductionPage.unit.spec.js",
              "file": "/src/applications/survivor-dependent-education-benefit/22-5490/tests/containers/IntroductionPage.unit.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should contain the correct page title and introductory text",
                  "fullTitle": "<IntroductionPage> when the page renders should contain the correct page title and introductory text",
                  "timedOut": false,
                  "duration": 16,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var _getData = getData(),\n  mockStore = _getData.mockStore,\n  props = _getData.props;\nvar _renderComponent = renderComponent({\n    mockStore: mockStore,\n    props: props\n  }),\n  container = _renderComponent.container,\n  getByText = _renderComponent.getByText;\n(0, _chai.expect)(container.querySelector(selectors.wrapper)).to.exist;\n(0, _chai.expect)(getByText('Apply for education benefits as an eligible dependent')).to.exist;\n(0, _chai.expect)(getByText(\"Form 22-5490 (Dependent's Application for VA Education Benefits)\")).to.exist;\n(0, _chai.expect)(container.querySelector(selectors.introText)).to.exist;",
                  "err": {},
                  "uuid": "c7cc80a4-594b-4b57-8776-d7e776d463de",
                  "parentUUID": "4230484b-f646-4daf-8ce6-96c1a1a6b67e",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should contain the process timeline for steps to get started with the application",
                  "fullTitle": "<IntroductionPage> when the page renders should contain the process timeline for steps to get started with the application",
                  "timedOut": false,
                  "duration": 9,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var _getData2 = getData(),\n  mockStore = _getData2.mockStore,\n  props = _getData2.props;\nvar _renderComponent2 = renderComponent({\n    mockStore: mockStore,\n    props: props\n  }),\n  container = _renderComponent2.container;\n(0, _chai.expect)(container.querySelector(selectors.processTimeline)).to.exist;",
                  "err": {},
                  "uuid": "53f0be7e-bd79-434b-bdd7-e568abadcea3",
                  "parentUUID": "4230484b-f646-4daf-8ce6-96c1a1a6b67e",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "c7cc80a4-594b-4b57-8776-d7e776d463de",
                "53f0be7e-bd79-434b-bdd7-e568abadcea3"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 25,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "d805ef22-9cc9-4a94-a703-86f5c1ba6816",
              "title": "conditional rendering tests",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/survivor-dependent-education-benefit/22-5490/tests/containers/IntroductionPage.unit.spec.js",
              "file": "/src/applications/survivor-dependent-education-benefit/22-5490/tests/containers/IntroductionPage.unit.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should not show the start button if maintenance alert is active",
                  "fullTitle": "<IntroductionPage> conditional rendering tests should not show the start button if maintenance alert is active",
                  "timedOut": false,
                  "duration": 10,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var _getData3 = getData(true, true, false, true),\n  mockStore = _getData3.mockStore,\n  props = _getData3.props; // Enable maintenance alert\nvar _renderComponent3 = renderComponent({\n    mockStore: mockStore,\n    props: props\n  }),\n  container = _renderComponent3.container;\nvar startButton = container.querySelector(selectors.startButton);\n(0, _chai.expect)(startButton).to.not.exist;",
                  "err": {},
                  "uuid": "992c24f6-0b07-41ee-a9af-541b2888c59e",
                  "parentUUID": "d805ef22-9cc9-4a94-a703-86f5c1ba6816",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should not show the start button if user is not LOA3",
                  "fullTitle": "<IntroductionPage> conditional rendering tests should not show the start button if user is not LOA3",
                  "timedOut": false,
                  "duration": 42,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var _getData4 = getData(true, false),\n  mockStore = _getData4.mockStore,\n  props = _getData4.props; // Set LOA3 to false\nvar _renderComponent4 = renderComponent({\n    mockStore: mockStore,\n    props: props\n  }),\n  container = _renderComponent4.container;\nvar startButton = container.querySelector(selectors.startButton);\n(0, _chai.expect)(startButton).to.not.exist;",
                  "err": {},
                  "uuid": "4f670f12-2c73-4f1b-bcf1-a4576ad02133",
                  "parentUUID": "d805ef22-9cc9-4a94-a703-86f5c1ba6816",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "992c24f6-0b07-41ee-a9af-541b2888c59e",
                "4f670f12-2c73-4f1b-bcf1-a4576ad02133"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 52,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "81b010a5-f9e9-459b-8c96-afcd873b2f9f",
          "title": "Personal Information action",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/survivor-dependent-education-benefit/22-5490/tests/unit/actions.unit.spec.js",
          "file": "/src/applications/survivor-dependent-education-benefit/22-5490/tests/unit/actions.unit.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should dispatch a fetch personal information action",
              "fullTitle": "Personal Information action should dispatch a fetch personal information action",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var mockData = {\n  data: {\n    attributes: {\n      name: 'John Doe'\n    }\n  }\n};\n(0, _helpers.mockApiRequest)(mockData);\nvar dispatch = _sinon.default.spy();\nreturn (0, _actions.fetchPersonalInformation)()(dispatch).then(function () {\n  (0, _chai.expect)(dispatch.firstCall.args[0].type).to.equal(_actions.FETCH_PERSONAL_INFORMATION);\n});",
              "err": {},
              "uuid": "a6f9e64c-724e-4b19-a014-9e031d6059f3",
              "parentUUID": "81b010a5-f9e9-459b-8c96-afcd873b2f9f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should dispatch a fetch error",
              "fullTitle": "Personal Information action should dispatch a fetch error",
              "timedOut": false,
              "duration": 4,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, _helpers.mockApiRequest)({}, false);\nvar dispatch = _sinon.default.spy();\nreturn (0, _actions.fetchPersonalInformation)()(dispatch).then(function () {\n  (0, _chai.expect)(_typeof(dispatch.firstCall.args[0])).to.equal('object');\n});",
              "err": {},
              "uuid": "a1855e2c-da2e-4480-b831-2b38c4d40123",
              "parentUUID": "81b010a5-f9e9-459b-8c96-afcd873b2f9f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a6f9e64c-724e-4b19-a014-9e031d6059f3",
            "a1855e2c-da2e-4480-b831-2b38c4d40123"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 6,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "0889131d-5f3f-49ba-8ec5-4e33258fba31",
          "title": "Duplicate Contact Info action",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/survivor-dependent-education-benefit/22-5490/tests/unit/actions.unit.spec.js",
          "file": "/src/applications/survivor-dependent-education-benefit/22-5490/tests/unit/actions.unit.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should dispatch a fetch duplicate contact action",
              "fullTitle": "Duplicate Contact Info action should dispatch a fetch duplicate contact action",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var mockData = {\n  data: {\n    duplicates: []\n  }\n};\n(0, _helpers.mockApiRequest)(mockData);\nvar dispatch = _sinon.default.spy();\nreturn (0, _actions.fetchDuplicateContactInfo)(email, phoneNumber)(dispatch).then(function () {\n  (0, _chai.expect)(dispatch.firstCall.args[0].type).to.equal(_actions.FETCH_DUPLICATE_CONTACT);\n});",
              "err": {},
              "uuid": "e502f837-4063-4672-927a-76949462a1d3",
              "parentUUID": "0889131d-5f3f-49ba-8ec5-4e33258fba31",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should dispatch a fetch error",
              "fullTitle": "Duplicate Contact Info action should dispatch a fetch error",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, _helpers.mockApiRequest)({}, false);\nvar dispatch = _sinon.default.spy();\nreturn (0, _actions.fetchDuplicateContactInfo)(email, phoneNumber)(dispatch).then(function () {\n  (0, _chai.expect)(_typeof(dispatch.firstCall.args[0])).to.equal('object');\n});",
              "err": {},
              "uuid": "3696197a-c107-4f81-b9a4-ad28491fb5be",
              "parentUUID": "0889131d-5f3f-49ba-8ec5-4e33258fba31",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "e502f837-4063-4672-927a-76949462a1d3",
            "3696197a-c107-4f81-b9a4-ad28491fb5be"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "986af844-6536-46a6-b82f-ccab3143987a",
          "title": "Claim Status action",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/survivor-dependent-education-benefit/22-5490/tests/unit/actions.unit.spec.js",
          "file": "/src/applications/survivor-dependent-education-benefit/22-5490/tests/unit/actions.unit.spec.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"Claim Status action\"",
              "fullTitle": "Claim Status action \"before each\" hook in \"Claim Status action\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "sandbox = _sinon.default.sandbox.create();",
              "err": {},
              "uuid": "dd934068-9c05-473c-a7d9-181312b4f84c",
              "parentUUID": "986af844-6536-46a6-b82f-ccab3143987a",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after each\" hook in \"Claim Status action\"",
              "fullTitle": "Claim Status action \"after each\" hook in \"Claim Status action\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "sandbox.restore();",
              "err": {},
              "uuid": "01d78ce2-6d77-4c61-80dd-18dd0836bb68",
              "parentUUID": "986af844-6536-46a6-b82f-ccab3143987a",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "should dispatch a fetch claim status action",
              "fullTitle": "Claim Status action should dispatch a fetch claim status action",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var mockData = {\n  data: {\n    attributes: {\n      claimStatus: 'COMPLETED',\n      receivedDate: '2024-01-01'\n    }\n  }\n};\n(0, _helpers.mockApiRequest)(mockData);\nvar dispatch = _sinon.default.spy();\nreturn (0, _actions.fetchClaimStatus)(selectedChapter)(dispatch).then(function () {\n  (0, _chai.expect)(dispatch.firstCall.args[0].type).to.equal(_actions.FETCH_CLAIM_STATUS);\n});",
              "err": {},
              "uuid": "6be83809-c440-42ca-a62c-a6fc556cfa59",
              "parentUUID": "986af844-6536-46a6-b82f-ccab3143987a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should handle fetch claim status eror",
              "fullTitle": "Claim Status action should handle fetch claim status eror",
              "timedOut": false,
              "duration": 5,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "sandbox.stub(api, 'apiRequest').rejects(new Error('Network Error'));\nvar dispatch = _sinon.default.spy();\nreturn (0, _actions.fetchClaimStatus)(selectedChapter)(dispatch).then(function () {\n  (0, _chai.expect)(dispatch.firstCall.args[0].type).to.equal(_actions.FETCH_CLAIM_STATUS);\n});",
              "err": {},
              "uuid": "b6886caa-6197-4eb1-ac1c-7685f7e29bb8",
              "parentUUID": "986af844-6536-46a6-b82f-ccab3143987a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should handle polling timeout",
              "fullTitle": "Claim Status action should handle polling timeout",
              "timedOut": false,
              "duration": 0,
              "state": "pending",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": true,
              "context": null,
              "code": "",
              "err": {},
              "uuid": "3f97305d-de1b-410f-9cba-9175d7ba3e22",
              "parentUUID": "986af844-6536-46a6-b82f-ccab3143987a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "6be83809-c440-42ca-a62c-a6fc556cfa59",
            "b6886caa-6197-4eb1-ac1c-7685f7e29bb8"
          ],
          "failures": [],
          "pending": [
            "3f97305d-de1b-410f-9cba-9175d7ba3e22"
          ],
          "skipped": [],
          "duration": 7,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "4c9abc28-4b29-41ee-9b16-64e0f179e630",
          "title": "Update Global Email action",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/survivor-dependent-education-benefit/22-5490/tests/unit/actions.unit.spec.js",
          "file": "/src/applications/survivor-dependent-education-benefit/22-5490/tests/unit/actions.unit.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should create an update global email action",
              "fullTitle": "Update Global Email action should create an update global email action",
              "timedOut": false,
              "duration": 4,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var email = 'test@example.com';\nvar action = (0, _actions.updateGlobalEmail)(email);\n(0, _chai.expect)(action.type).to.equal(_actions.UPDATE_GLOBAL_EMAIL);\n(0, _chai.expect)(action.email).to.equal(email);",
              "err": {},
              "uuid": "f95c81b5-78b3-4034-8c5c-2f743122b21a",
              "parentUUID": "4c9abc28-4b29-41ee-9b16-64e0f179e630",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f95c81b5-78b3-4034-8c5c-2f743122b21a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 4,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "9f2ac3d1-86d7-4d32-922c-da4f81a17349",
          "title": "Update Global Phone Number action",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/survivor-dependent-education-benefit/22-5490/tests/unit/actions.unit.spec.js",
          "file": "/src/applications/survivor-dependent-education-benefit/22-5490/tests/unit/actions.unit.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should create an update global phone number action",
              "fullTitle": "Update Global Phone Number action should create an update global phone number action",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var mobilePhone = '1234567890';\nvar action = (0, _actions.updateGlobalPhoneNumber)(mobilePhone);\n(0, _chai.expect)(action.type).to.equal(_actions.UPDATE_GLOBAL_PHONE_NUMBER);\n(0, _chai.expect)(action.mobilePhone).to.equal(mobilePhone);",
              "err": {},
              "uuid": "73242ec1-d20d-41da-b1da-09fcb4a60f26",
              "parentUUID": "9f2ac3d1-86d7-4d32-922c-da4f81a17349",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "73242ec1-d20d-41da-b1da-09fcb4a60f26"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "8faa5bff-acd0-4496-8eb0-4040c579193d",
          "title": "Acknowledge Duplicate action",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/survivor-dependent-education-benefit/22-5490/tests/unit/actions.unit.spec.js",
          "file": "/src/applications/survivor-dependent-education-benefit/22-5490/tests/unit/actions.unit.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should create an acknowledge duplicate action",
              "fullTitle": "Acknowledge Duplicate action should create an acknowledge duplicate action",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var contactInfo = {\n  email: 'test@example.com',\n  phone: '1234567890'\n};\nvar action = (0, _actions.acknowledgeDuplicate)(contactInfo);\n(0, _chai.expect)(action.type).to.equal(_actions.ACKNOWLEDGE_DUPLICATE);\n(0, _chai.expect)(action.contactInfo).to.equal(contactInfo);",
              "err": {},
              "uuid": "cc43febd-01bc-4f5c-81e8-77cc2a2b2dde",
              "parentUUID": "8faa5bff-acd0-4496-8eb0-4040c579193d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "cc43febd-01bc-4f5c-81e8-77cc2a2b2dde"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "1cbe0abd-0ed3-4688-998a-dea90765a7fe",
          "title": "Toggle Modal action",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/survivor-dependent-education-benefit/22-5490/tests/unit/actions.unit.spec.js",
          "file": "/src/applications/survivor-dependent-education-benefit/22-5490/tests/unit/actions.unit.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should create a toggle modal action",
              "fullTitle": "Toggle Modal action should create a toggle modal action",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var toggle = true;\nvar action = (0, _actions.toggleModal)(toggle);\n(0, _chai.expect)(action.type).to.equal(_actions.TOGGLE_MODAL);\n(0, _chai.expect)(action.toggle).to.equal(toggle);",
              "err": {},
              "uuid": "d3695462-68f7-4088-b446-de898f58ddf8",
              "parentUUID": "1cbe0abd-0ed3-4688-998a-dea90765a7fe",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "d3695462-68f7-4088-b446-de898f58ddf8"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "857ca085-687b-4ed5-bd3e-874175d8e784",
          "title": "Complex Form 22-5490 Detailed Interaction Tests",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/survivor-dependent-education-benefit/22-5490/tests/unit/config/form.unit.spec.js",
          "file": "/src/applications/survivor-dependent-education-benefit/22-5490/tests/unit/config/form.unit.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should fill out the benefit selection fields",
              "fullTitle": "Complex Form 22-5490 Detailed Interaction Tests should fill out the benefit selection fields",
              "timedOut": false,
              "duration": 41,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _formConfig$chapters$6 = _form.default.chapters.benefitSelectionChapter.pages.benefitSelection,\n  schema = _formConfig$chapters$6.schema,\n  uiSchema = _formConfig$chapters$6.uiSchema;\nvar form = (0, _enzyme.mount)(/*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  schema: schema,\n  uiSchema: uiSchema,\n  definitions: _form.default.defaultDefinitions,\n  data: {},\n  formData: {}\n}));\n(0, _schemaformUtils.selectRadio)(form, 'root_chosenBenefit', 'fry');\n(0, _chai.expect)(form.find('input[name=\"root_chosenBenefit\"][value=\"fry\"]').props().checked).to.be.true;\nform.unmount();",
              "err": {},
              "uuid": "3cb3f839-0eef-4db0-9db1-51101ed092e6",
              "parentUUID": "857ca085-687b-4ed5-bd3e-874175d8e784",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should fill out the review personal information fields",
              "fullTitle": "Complex Form 22-5490 Detailed Interaction Tests should fill out the review personal information fields",
              "timedOut": false,
              "duration": 11,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var initialState = {\n  user: {\n    profile: {\n      userFullName: {\n        first: 'john',\n        middle: 't',\n        last: 'test'\n      },\n      dob: '1990-01-01'\n    }\n  }\n};\nvar mockStore = (0, _reduxMockStore.default)();\nvar store = mockStore(initialState);\nvar _formConfig$chapters$7 = _form.default.chapters.yourInformationChapter.pages.reviewPersonalInformation,\n  schema = _formConfig$chapters$7.schema,\n  uiSchema = _formConfig$chapters$7.uiSchema;\nvar form = (0, _enzyme.mount)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n  store: store\n}, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  schema: schema,\n  uiSchema: uiSchema,\n  definitions: _form.default.defaultDefinitions,\n  data: {},\n  formData: {}\n})));\n(0, _chai.expect)(form.find('h3').text()).to.include('Review your personal information');\nform.unmount();",
              "err": {},
              "uuid": "17dfb7db-1bb1-4ecf-9015-c2c6cf0b41f2",
              "parentUUID": "857ca085-687b-4ed5-bd3e-874175d8e784",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should fill out the marriage information fields",
              "fullTitle": "Complex Form 22-5490 Detailed Interaction Tests should fill out the marriage information fields",
              "timedOut": false,
              "duration": 16,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var baseData = {\n  relationShipToMember: 'spouse'\n};\nvar _formConfig$chapters$8 = _form.default.chapters.additionalConsiderationsChapter.pages.marriageInformation,\n  schema = _formConfig$chapters$8.schema,\n  uiSchema = _formConfig$chapters$8.uiSchema;\nvar form = (0, _enzyme.mount)(/*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  schema: schema,\n  uiSchema: uiSchema,\n  definitions: _form.default.defaultDefinitions,\n  data: baseData,\n  formData: baseData\n}));\n(0, _schemaformUtils.selectRadio)(form, 'root_marriageStatus', 'married');\n(0, _chai.expect)(form.find('input[name=\"root_marriageStatus\"][value=\"married\"]').props().checked).to.be.true;\nform.unmount();",
              "err": {},
              "uuid": "ab6b1229-db15-428c-b6ea-e4ef8b78482c",
              "parentUUID": "857ca085-687b-4ed5-bd3e-874175d8e784",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should fill out the remarriage information fields",
              "fullTitle": "Complex Form 22-5490 Detailed Interaction Tests should fill out the remarriage information fields",
              "timedOut": false,
              "duration": 14,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _formConfig$chapters$9 = _form.default.chapters.additionalConsiderationsChapter.pages.remarriageInformation,\n  schema = _formConfig$chapters$9.schema,\n  uiSchema = _formConfig$chapters$9.uiSchema;\nvar form = (0, _enzyme.mount)(/*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  schema: schema,\n  uiSchema: uiSchema,\n  definitions: _form.default.defaultDefinitions,\n  data: {\n    marriageStatus: 'divorced',\n    relationShipToMember: 'spouse',\n    remarriageStatus: 'yes'\n  },\n  formData: {}\n}));\n(0, _schemaformUtils.selectRadio)(form, 'root_remarriageStatus', 'no');\n(0, _chai.expect)(form.find('input[name=\"root_remarriageStatus\"][value=\"no\"]').props().checked).to.be.true;\nform.unmount();",
              "err": {},
              "uuid": "3c1f071e-9368-486c-bce6-126d355912ed",
              "parentUUID": "857ca085-687b-4ed5-bd3e-874175d8e784",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should fill out the outstanding felony fields",
              "fullTitle": "Complex Form 22-5490 Detailed Interaction Tests should fill out the outstanding felony fields",
              "timedOut": false,
              "duration": 10,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _formConfig$chapters$10 = _form.default.chapters.additionalConsiderationsChapter.pages.outstandingFelony,\n  schema = _formConfig$chapters$10.schema,\n  uiSchema = _formConfig$chapters$10.uiSchema;\nvar form = (0, _enzyme.mount)(/*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  schema: schema,\n  uiSchema: uiSchema,\n  definitions: _form.default.defaultDefinitions,\n  data: {},\n  formData: {}\n}));\n(0, _schemaformUtils.selectRadio)(form, 'root_felonyOrWarrant', 'no');\n(0, _chai.expect)(form.find('input[name=\"root_felonyOrWarrant\"][value=\"no\"]').props().checked).to.be.true;\nform.unmount();",
              "err": {},
              "uuid": "ce2bf8d9-f962-4e06-bfce-b9b9b3fefb13",
              "parentUUID": "857ca085-687b-4ed5-bd3e-874175d8e784",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should fill out the contact information fields",
              "fullTitle": "Complex Form 22-5490 Detailed Interaction Tests should fill out the contact information fields",
              "timedOut": false,
              "duration": 58,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var initialState = {\n  user: {\n    profile: {\n      userFullName: {\n        first: 'john',\n        middle: 't',\n        last: 'test'\n      },\n      dob: '1990-01-01'\n    }\n  },\n  form: {\n    data: {\n      duplicateEmail: [],\n      duplicatePhone: [],\n      email: ''\n    }\n  },\n  data: {\n    openModal: false\n  }\n};\nvar middlewares = [_reduxThunk.default];\nvar mockStore = (0, _reduxMockStore.default)(middlewares);\nvar store = mockStore(initialState);\nvar _formConfig$chapters$11 = _form.default.chapters.contactInformationChapter.pages.contactInformation,\n  schema = _formConfig$chapters$11.schema,\n  uiSchema = _formConfig$chapters$11.uiSchema;\nvar form = (0, _enzyme.mount)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n  store: store\n}, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  schema: schema,\n  uiSchema: uiSchema,\n  definitions: _form.default.defaultDefinitions,\n  data: {},\n  formData: {}\n})));\n(0, _schemaformUtils.fillData)(form, 'input#root_mobilePhone_phone', '555-555-5555');\n(0, _schemaformUtils.fillData)(form, 'input#root_homePhone_phone', '444-444-4444');\n(0, _schemaformUtils.fillData)(form, 'input#root_email', 'test@test.com');\n(0, _schemaformUtils.fillData)(form, 'input#root_confirmEmail', 'test@test.com');\n(0, _chai.expect)(form.find('input#root_mobilePhone_phone').prop('value')).to.equal('555-555-5555');\n(0, _chai.expect)(form.find('input#root_homePhone_phone').prop('value')).to.equal('444-444-4444');\nform.unmount();",
              "err": {},
              "uuid": "8f5d4b01-ed38-402e-bd96-571461f6ad6c",
              "parentUUID": "857ca085-687b-4ed5-bd3e-874175d8e784",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should fill out the mailing address fields",
              "fullTitle": "Complex Form 22-5490 Detailed Interaction Tests should fill out the mailing address fields",
              "timedOut": false,
              "duration": 147,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _formConfig$chapters$12 = _form.default.chapters.contactInformationChapter.pages.mailingAddress,\n  schema = _formConfig$chapters$12.schema,\n  uiSchema = _formConfig$chapters$12.uiSchema;\nvar form = (0, _enzyme.mount)(/*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  schema: schema,\n  uiSchema: uiSchema,\n  definitions: _form.default.defaultDefinitions,\n  data: {},\n  formData: {}\n}));\nform.find('select#root_mailingAddressInput_address_country').simulate('change', {\n  target: {\n    value: 'USA'\n  }\n});\n(0, _schemaformUtils.fillData)(form, 'input#root_mailingAddressInput_address_street', '123 Main St');\n(0, _schemaformUtils.fillData)(form, 'input#root_mailingAddressInput_address_city', 'Anytown');\nform.find('select#root_mailingAddressInput_address_state').simulate('change', {\n  target: {\n    value: 'CA'\n  }\n});\n(0, _schemaformUtils.fillData)(form, 'input#root_mailingAddressInput_address_postalCode', '12345');\n(0, _chai.expect)(form.find('input#root_mailingAddressInput_address_street').prop('value')).to.equal('123 Main St');\n(0, _chai.expect)(form.find('input#root_mailingAddressInput_address_city').prop('value')).to.equal('Anytown');\n(0, _chai.expect)(form.find('select#root_mailingAddressInput_address_state').prop('value')).to.equal('CA');\n(0, _chai.expect)(form.find('input#root_mailingAddressInput_address_postalCode').prop('value')).to.equal('12345');\nform.unmount();",
              "err": {},
              "uuid": "ef807b7b-d54e-4263-b652-a3ed3002923f",
              "parentUUID": "857ca085-687b-4ed5-bd3e-874175d8e784",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should fill render errors when comleting mailing address fields",
              "fullTitle": "Complex Form 22-5490 Detailed Interaction Tests should fill render errors when comleting mailing address fields",
              "timedOut": false,
              "duration": 144,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _formConfig$chapters$13 = _form.default.chapters.contactInformationChapter.pages.mailingAddress,\n  schema = _formConfig$chapters$13.schema,\n  uiSchema = _formConfig$chapters$13.uiSchema;\nvar form = (0, _enzyme.mount)(/*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  schema: schema,\n  uiSchema: uiSchema,\n  definitions: _form.default.defaultDefinitions,\n  data: {},\n  formData: {}\n}));\nform.find('select#root_mailingAddressInput_address_country').simulate('change', {\n  target: {\n    value: 'USA'\n  }\n});\n(0, _schemaformUtils.fillData)(form, 'input#root_mailingAddressInput_address_street', '');\n(0, _schemaformUtils.fillData)(form, 'input#root_mailingAddressInput_address_city', 'Anytown');\nform.find('select#root_mailingAddressInput_address_state').simulate('change', {\n  target: {\n    value: 'CA'\n  }\n});\n(0, _schemaformUtils.fillData)(form, 'input#root_mailingAddressInput_address_postalCode', '12345');\nform.find('form').simulate('submit');\nvar errorMessages = form.find('.usa-input-error-message');\n(0, _chai.expect)(errorMessages.length).to.be.at.least(1);\n(0, _chai.expect)(errorMessages.at(0).text()).to.include('Please enter your full street address');\n(0, _schemaformUtils.fillData)(form, 'input#root_mailingAddressInput_address_street', 'SA');\nform.find('form').simulate('submit');\n(0, _chai.expect)(errorMessages.at(0).text()).to.include('minimum of 3 characters');\n(0, _schemaformUtils.fillData)(form, 'input#root_mailingAddressInput_address_street', 'aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa');\nform.find('form').simulate('submit');\n(0, _chai.expect)(errorMessages.at(0).text()).to.include('maximum of 40 characters');\nform.unmount();",
              "err": {},
              "uuid": "a27dfd3e-21b1-4060-a9ac-b8ff677246d8",
              "parentUUID": "857ca085-687b-4ed5-bd3e-874175d8e784",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should fill out the contact method fields",
              "fullTitle": "Complex Form 22-5490 Detailed Interaction Tests should fill out the contact method fields",
              "timedOut": false,
              "duration": 22,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var initialState = {\n  featureToggles: {\n    showMeb5490MaintenanceAlert: true\n  },\n  user: {\n    profile: {\n      userFullName: {\n        first: 'john',\n        middle: 't',\n        last: 'test'\n      },\n      dob: '1990-01-01',\n      loa: {\n        current: 3\n      }\n    }\n  }\n};\nvar mockStore = (0, _reduxMockStore.default)();\nvar store = mockStore(initialState);\nvar _formConfig$chapters$14 = _form.default.chapters.contactInformationChapter.pages.chooseContactMethod,\n  schema = _formConfig$chapters$14.schema,\n  uiSchema = _formConfig$chapters$14.uiSchema;\nvar form = (0, _enzyme.mount)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n  store: store\n}, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  schema: schema,\n  uiSchema: uiSchema,\n  definitions: _form.default.defaultDefinitions,\n  data: {\n    title: 'test form',\n    mobilePhone: {\n      phone: '4138675309'\n    }\n  },\n  formData: {\n    title: 'test form',\n    mobilePhone: {\n      phone: '4138675309'\n    }\n  }\n})));\n(0, _schemaformUtils.selectRadio)(form, 'root_contactMethod', 'Email');\n(0, _schemaformUtils.selectRadio)(form, 'root_notificationMethod', 'No, just send me email notifications');\n(0, _chai.expect)(form.find('input[name=\"root_contactMethod\"][value=\"Email\"]').props().checked).to.be.true;\n(0, _chai.expect)(form.find('input[name=\"root_notificationMethod\"][value=\"No, just send me email notifications\"]').props().checked).to.be.true;\nform.unmount();",
              "err": {},
              "uuid": "66e65a7d-3c3c-455f-9a16-ea1b4d0c5b06",
              "parentUUID": "857ca085-687b-4ed5-bd3e-874175d8e784",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should fill out the direct deposit fields",
              "fullTitle": "Complex Form 22-5490 Detailed Interaction Tests should fill out the direct deposit fields",
              "timedOut": false,
              "duration": 22,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _formConfig$chapters$15 = _form.default.chapters.directDepositChapter.pages.directDeposit,\n  schema = _formConfig$chapters$15.schema,\n  uiSchema = _formConfig$chapters$15.uiSchema;\nvar form = (0, _enzyme.mount)(/*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  schema: schema,\n  uiSchema: uiSchema,\n  definitions: _form.default.defaultDefinitions,\n  data: {},\n  formData: {}\n}));\n(0, _schemaformUtils.fillData)(form, 'input[name=\"root_view:directDeposit_bankAccount_accountNumber\"]', '123456789');\n(0, _schemaformUtils.fillData)(form, 'input[name=\"root_view:directDeposit_bankAccount_routingNumber\"]', '031101279');\n(0, _chai.expect)(form.find('input[name=\"root_view:directDeposit_bankAccount_accountNumber\"]').prop('value')).to.equal('123456789');\n(0, _chai.expect)(form.find('input[name=\"root_view:directDeposit_bankAccount_routingNumber\"]').prop('value')).to.equal('031101279');\nform.unmount();",
              "err": {},
              "uuid": "97ffa6f0-184a-459e-abb4-8526500367e8",
              "parentUUID": "857ca085-687b-4ed5-bd3e-874175d8e784",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [
            {
              "uuid": "3c297ad8-ce2f-42ac-b789-0edcaabd7cc1",
              "title": "applicantInformation",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/survivor-dependent-education-benefit/22-5490/tests/unit/config/form.unit.spec.js",
              "file": "/src/applications/survivor-dependent-education-benefit/22-5490/tests/unit/config/form.unit.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should fill out the applicant information fields",
                  "fullTitle": "Complex Form 22-5490 Detailed Interaction Tests applicantInformation should fill out the applicant information fields",
                  "timedOut": false,
                  "duration": 35,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var _formConfig$chapters$ = _form.default.chapters.applicantInformationChapter.pages.applicantInformation,\n  schema = _formConfig$chapters$.schema,\n  uiSchema = _formConfig$chapters$.uiSchema;\nvar form = (0, _enzyme.mount)(/*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  schema: schema,\n  uiSchema: uiSchema,\n  definitions: _form.default.defaultDefinitions,\n  data: {},\n  formData: {}\n}));\n(0, _schemaformUtils.fillData)(form, 'input#root_fullName_first', 'John');\n(0, _schemaformUtils.fillData)(form, 'input#root_fullName_last', 'Doe');\n(0, _schemaformUtils.fillData)(form, 'input#root_ssn', '123456789');\n(0, _schemaformUtils.selectRadio)(form, 'root_relationShipToMember', 'spouse');\n(0, _chai.expect)(form.find('input#root_fullName_first').props().value).to.equal('John');\n(0, _chai.expect)(form.find('input#root_fullName_last').props().value).to.equal('Doe');\n(0, _chai.expect)(form.find('input#root_ssn').props().value).to.equal('123456789');\n(0, _chai.expect)(form.find('input[name=\"root_relationShipToMember\"][value=\"spouse\"]').props().checked).to.be.true;\nform.unmount();",
                  "err": {},
                  "uuid": "23f4439f-e0ce-4349-8f6c-22610502ea3a",
                  "parentUUID": "3c297ad8-ce2f-42ac-b789-0edcaabd7cc1",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should render an error when no first/last name are provided",
                  "fullTitle": "Complex Form 22-5490 Detailed Interaction Tests applicantInformation should render an error when no first/last name are provided",
                  "timedOut": false,
                  "duration": 67,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var _formConfig$chapters$2 = _form.default.chapters.applicantInformationChapter.pages.applicantInformation,\n  schema = _formConfig$chapters$2.schema,\n  uiSchema = _formConfig$chapters$2.uiSchema;\nvar form = (0, _enzyme.mount)(/*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  schema: schema,\n  uiSchema: uiSchema,\n  definitions: _form.default.defaultDefinitions,\n  data: {},\n  formData: {}\n}));\nform.find('input#root_fullName_first').simulate('change', {\n  target: {\n    value: ''\n  }\n});\nform.find('input#root_fullName_last').simulate('change', {\n  target: {\n    value: ''\n  }\n});\nform.find('input#root_ssn').simulate('change', {\n  target: {\n    value: '123456789'\n  }\n});\nform.find('select#root_dateOfBirthMonth').simulate('change', {\n  target: {\n    value: '1'\n  }\n});\nform.find('select#root_dateOfBirthDay').simulate('change', {\n  target: {\n    value: '1'\n  }\n});\nform.find('input#root_dateOfBirthYear').simulate('change', {\n  target: {\n    value: '1990'\n  }\n});\n(0, _schemaformUtils.selectRadio)(form, 'root_relationShipToMember', 'spouse');\nform.find('form').simulate('submit');\nvar errorMessages = form.find('.usa-input-error-message');\n(0, _chai.expect)(errorMessages.length).to.be.at.least(1);\n(0, _chai.expect)(errorMessages.at(0).text()).to.include('Error Please enter a first name');\n(0, _chai.expect)(errorMessages.at(1).text()).to.include('Error Please enter a last name');\nform.unmount();",
                  "err": {},
                  "uuid": "69315b72-efaa-493e-9895-832d5ca1bc4b",
                  "parentUUID": "3c297ad8-ce2f-42ac-b789-0edcaabd7cc1",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should render errors when names are too long",
                  "fullTitle": "Complex Form 22-5490 Detailed Interaction Tests applicantInformation should render errors when names are too long",
                  "timedOut": false,
                  "duration": 74,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var _formConfig$chapters$3 = _form.default.chapters.applicantInformationChapter.pages.applicantInformation,\n  schema = _formConfig$chapters$3.schema,\n  uiSchema = _formConfig$chapters$3.uiSchema;\nvar form = (0, _enzyme.mount)(/*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  schema: schema,\n  uiSchema: uiSchema,\n  definitions: _form.default.defaultDefinitions,\n  data: {},\n  formData: {}\n}));\nform.find('input#root_fullName_first').simulate('change', {\n  target: {\n    value: 'abcdefghijklmnopqrstuvwxyz'\n  }\n});\nform.find('input#root_fullName_middle').simulate('change', {\n  target: {\n    value: 'abcdefghijklmnopqrstuvwxyz'\n  }\n});\nform.find('input#root_fullName_last').simulate('change', {\n  target: {\n    value: 'abcdefghijklmnopqrstuvwxyzabcd'\n  }\n});\nform.find('input#root_ssn').simulate('change', {\n  target: {\n    value: '123456789'\n  }\n});\nform.find('select#root_dateOfBirthMonth').simulate('change', {\n  target: {\n    value: '1'\n  }\n});\nform.find('select#root_dateOfBirthDay').simulate('change', {\n  target: {\n    value: '1'\n  }\n});\nform.find('input#root_dateOfBirthYear').simulate('change', {\n  target: {\n    value: '1990'\n  }\n});\n(0, _schemaformUtils.selectRadio)(form, 'root_relationShipToMember', 'spouse');\nform.find('form').simulate('submit');\nvar errorMessages = form.find('.usa-input-error-message');\n(0, _chai.expect)(errorMessages.length).to.be.at.least(1);\n(0, _chai.expect)(errorMessages.at(0).text()).to.include('Error Must be 20 characters or less');\n(0, _chai.expect)(errorMessages.at(1).text()).to.include('Error Must be 20 characters or less');\n(0, _chai.expect)(errorMessages.at(2).text()).to.include('Error Must be 26 characters or less');\nform.unmount();",
                  "err": {},
                  "uuid": "b7d6bf1f-0dca-435b-8240-9a17014d24fe",
                  "parentUUID": "3c297ad8-ce2f-42ac-b789-0edcaabd7cc1",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should render an error when last name is too short",
                  "fullTitle": "Complex Form 22-5490 Detailed Interaction Tests applicantInformation should render an error when last name is too short",
                  "timedOut": false,
                  "duration": 65,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var _formConfig$chapters$4 = _form.default.chapters.applicantInformationChapter.pages.applicantInformation,\n  schema = _formConfig$chapters$4.schema,\n  uiSchema = _formConfig$chapters$4.uiSchema;\nvar form = (0, _enzyme.mount)(/*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  schema: schema,\n  uiSchema: uiSchema,\n  definitions: _form.default.defaultDefinitions,\n  data: {},\n  formData: {}\n}));\nform.find('input#root_fullName_first').simulate('change', {\n  target: {\n    value: 'john'\n  }\n});\nform.find('input#root_fullName_middle').simulate('change', {\n  target: {\n    value: 'tesh'\n  }\n});\nform.find('input#root_fullName_last').simulate('change', {\n  target: {\n    value: 'a'\n  }\n});\nform.find('input#root_ssn').simulate('change', {\n  target: {\n    value: '123456789'\n  }\n});\nform.find('select#root_dateOfBirthMonth').simulate('change', {\n  target: {\n    value: '1'\n  }\n});\nform.find('select#root_dateOfBirthDay').simulate('change', {\n  target: {\n    value: '1'\n  }\n});\nform.find('input#root_dateOfBirthYear').simulate('change', {\n  target: {\n    value: '1990'\n  }\n});\n(0, _schemaformUtils.selectRadio)(form, 'root_relationShipToMember', 'spouse');\nform.find('form').simulate('submit');\nvar errorMessages = form.find('.usa-input-error-message');\n(0, _chai.expect)(errorMessages.length).to.be.at.least(1);\n(0, _chai.expect)(errorMessages.at(0).text()).to.include('Must be 2 characters or more');\nform.unmount();",
                  "err": {},
                  "uuid": "c005c90c-a8e4-4d03-aaf2-d7a7871df718",
                  "parentUUID": "3c297ad8-ce2f-42ac-b789-0edcaabd7cc1",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should render errors when first/middle/last names are invalid",
                  "fullTitle": "Complex Form 22-5490 Detailed Interaction Tests applicantInformation should render errors when first/middle/last names are invalid",
                  "timedOut": false,
                  "duration": 66,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var _formConfig$chapters$5 = _form.default.chapters.applicantInformationChapter.pages.applicantInformation,\n  schema = _formConfig$chapters$5.schema,\n  uiSchema = _formConfig$chapters$5.uiSchema;\nvar form = (0, _enzyme.mount)(/*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  schema: schema,\n  uiSchema: uiSchema,\n  definitions: _form.default.defaultDefinitions,\n  data: {},\n  formData: {}\n}));\nform.find('input#root_fullName_first').simulate('change', {\n  target: {\n    value: '((((9'\n  }\n});\nform.find('input#root_fullName_middle').simulate('change', {\n  target: {\n    value: '&&&&'\n  }\n});\nform.find('input#root_fullName_last').simulate('change', {\n  target: {\n    value: '&&&&'\n  }\n});\nform.find('input#root_ssn').simulate('change', {\n  target: {\n    value: '123456789'\n  }\n});\nform.find('select#root_dateOfBirthMonth').simulate('change', {\n  target: {\n    value: '1'\n  }\n});\nform.find('select#root_dateOfBirthDay').simulate('change', {\n  target: {\n    value: '1'\n  }\n});\nform.find('input#root_dateOfBirthYear').simulate('change', {\n  target: {\n    value: '1990'\n  }\n});\n(0, _schemaformUtils.selectRadio)(form, 'root_relationShipToMember', 'spouse');\nform.find('form').simulate('submit');\nvar errorMessages = form.find('.usa-input-error-message');\n(0, _chai.expect)(errorMessages.length).to.be.at.least(1);\n(0, _chai.expect)(errorMessages.at(0).text()).to.include('Error Please enter a valid entry. Acceptable entries are letters, spaces and apostrophes.');\n(0, _chai.expect)(errorMessages.at(1).text()).to.include('Error Please enter a valid entry. Acceptable entries are letters, spaces and apostrophes.');\n(0, _chai.expect)(errorMessages.at(2).text()).to.include('Error Please enter a valid entry. Acceptable entries are letters, spaces, dashes and apostrophes.');\nform.unmount();",
                  "err": {},
                  "uuid": "c479a422-099f-4b6b-a262-197204cb1d3c",
                  "parentUUID": "3c297ad8-ce2f-42ac-b789-0edcaabd7cc1",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "23f4439f-e0ce-4349-8f6c-22610502ea3a",
                "69315b72-efaa-493e-9895-832d5ca1bc4b",
                "b7d6bf1f-0dca-435b-8240-9a17014d24fe",
                "c005c90c-a8e4-4d03-aaf2-d7a7871df718",
                "c479a422-099f-4b6b-a262-197204cb1d3c"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 307,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            }
          ],
          "passes": [
            "3cb3f839-0eef-4db0-9db1-51101ed092e6",
            "17dfb7db-1bb1-4ecf-9015-c2c6cf0b41f2",
            "ab6b1229-db15-428c-b6ea-e4ef8b78482c",
            "3c1f071e-9368-486c-bce6-126d355912ed",
            "ce2bf8d9-f962-4e06-bfce-b9b9b3fefb13",
            "8f5d4b01-ed38-402e-bd96-571461f6ad6c",
            "ef807b7b-d54e-4263-b652-a3ed3002923f",
            "a27dfd3e-21b1-4060-a9ac-b8ff677246d8",
            "66e65a7d-3c3c-455f-9a16-ea1b4d0c5b06",
            "97ffa6f0-184a-459e-abb4-8526500367e8"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 485,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "ade625e7-0009-44f6-92ff-4d053729cd07",
          "title": "Helpers Module",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/survivor-dependent-education-benefit/22-5490/tests/unit/helpers.unit.spec.js",
          "file": "/src/applications/survivor-dependent-education-benefit/22-5490/tests/unit/helpers.unit.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "9006c437-2011-477b-816e-949aeb52a7de",
              "title": "isOnlyWhitespace",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/survivor-dependent-education-benefit/22-5490/tests/unit/helpers.unit.spec.js",
              "file": "/src/applications/survivor-dependent-education-benefit/22-5490/tests/unit/helpers.unit.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return true for strings containing only spaces",
                  "fullTitle": "Helpers Module isOnlyWhitespace should return true for strings containing only spaces",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)((0, _helpers.isOnlyWhitespace)(' ')).to.be.true;",
                  "err": {},
                  "uuid": "d6f9fcfd-a957-4711-88d4-a53e351600f0",
                  "parentUUID": "9006c437-2011-477b-816e-949aeb52a7de",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return true for strings containing only tabs and newlines",
                  "fullTitle": "Helpers Module isOnlyWhitespace should return true for strings containing only tabs and newlines",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)((0, _helpers.isOnlyWhitespace)('\\t\\n\\t')).to.be.true;",
                  "err": {},
                  "uuid": "1439ea75-ef9a-4cab-9402-c70eef057893",
                  "parentUUID": "9006c437-2011-477b-816e-949aeb52a7de",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return false for strings containing non-whitespace characters",
                  "fullTitle": "Helpers Module isOnlyWhitespace should return false for strings containing non-whitespace characters",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)((0, _helpers.isOnlyWhitespace)('abc')).to.be.false;",
                  "err": {},
                  "uuid": "5ee10edf-5617-4c89-997b-9f77907042b3",
                  "parentUUID": "9006c437-2011-477b-816e-949aeb52a7de",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return false for strings with whitespace and non-whitespace characters",
                  "fullTitle": "Helpers Module isOnlyWhitespace should return false for strings with whitespace and non-whitespace characters",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)((0, _helpers.isOnlyWhitespace)('  abc  ')).to.be.false;",
                  "err": {},
                  "uuid": "53dc0c20-aa3d-49a1-a451-c078ee061233",
                  "parentUUID": "9006c437-2011-477b-816e-949aeb52a7de",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return undefined when input is undefined",
                  "fullTitle": "Helpers Module isOnlyWhitespace should return undefined when input is undefined",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)((0, _helpers.isOnlyWhitespace)(undefined)).to.be.undefined;",
                  "err": {},
                  "uuid": "92c2aa84-0ec7-4827-8732-82ce7b8d0cd9",
                  "parentUUID": "9006c437-2011-477b-816e-949aeb52a7de",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "d6f9fcfd-a957-4711-88d4-a53e351600f0",
                "1439ea75-ef9a-4cab-9402-c70eef057893",
                "5ee10edf-5617-4c89-997b-9f77907042b3",
                "53dc0c20-aa3d-49a1-a451-c078ee061233",
                "92c2aa84-0ec7-4827-8732-82ce7b8d0cd9"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "7fbe09f6-83a3-4a69-9f43-1dccac9ce0d6",
              "title": "isAlphaNumeric",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/survivor-dependent-education-benefit/22-5490/tests/unit/helpers.unit.spec.js",
              "file": "/src/applications/survivor-dependent-education-benefit/22-5490/tests/unit/helpers.unit.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return true for alphanumeric strings",
                  "fullTitle": "Helpers Module isAlphaNumeric should return true for alphanumeric strings",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)((0, _helpers.isAlphaNumeric)('abc123')).to.be.true;",
                  "err": {},
                  "uuid": "8c1f2c8f-e308-40dd-a1dc-a7c4c686232f",
                  "parentUUID": "7fbe09f6-83a3-4a69-9f43-1dccac9ce0d6",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return false for strings with special characters",
                  "fullTitle": "Helpers Module isAlphaNumeric should return false for strings with special characters",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)((0, _helpers.isAlphaNumeric)('abc123!')).to.be.false;",
                  "err": {},
                  "uuid": "d7430ae8-18a2-4f55-aabd-2c945ec91efe",
                  "parentUUID": "7fbe09f6-83a3-4a69-9f43-1dccac9ce0d6",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return false for strings with spaces",
                  "fullTitle": "Helpers Module isAlphaNumeric should return false for strings with spaces",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)((0, _helpers.isAlphaNumeric)('abc 123')).to.be.false;",
                  "err": {},
                  "uuid": "ca7ade45-e619-49b8-a308-135394b252c9",
                  "parentUUID": "7fbe09f6-83a3-4a69-9f43-1dccac9ce0d6",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return true for strings with only letters",
                  "fullTitle": "Helpers Module isAlphaNumeric should return true for strings with only letters",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)((0, _helpers.isAlphaNumeric)('abcdef')).to.be.true;",
                  "err": {},
                  "uuid": "79f3c3a2-e315-408b-8630-e6fcc95487ac",
                  "parentUUID": "7fbe09f6-83a3-4a69-9f43-1dccac9ce0d6",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return true for strings with only numbers",
                  "fullTitle": "Helpers Module isAlphaNumeric should return true for strings with only numbers",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)((0, _helpers.isAlphaNumeric)('123456')).to.be.true;",
                  "err": {},
                  "uuid": "ad3c6145-99d1-4ae9-821b-c954ac5fd3ce",
                  "parentUUID": "7fbe09f6-83a3-4a69-9f43-1dccac9ce0d6",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return false for empty strings",
                  "fullTitle": "Helpers Module isAlphaNumeric should return false for empty strings",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)((0, _helpers.isAlphaNumeric)('')).to.be.false;",
                  "err": {},
                  "uuid": "4c3c509f-cb28-443d-bf96-9e44bcbf8dbb",
                  "parentUUID": "7fbe09f6-83a3-4a69-9f43-1dccac9ce0d6",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "8c1f2c8f-e308-40dd-a1dc-a7c4c686232f",
                "d7430ae8-18a2-4f55-aabd-2c945ec91efe",
                "ca7ade45-e619-49b8-a308-135394b252c9",
                "79f3c3a2-e315-408b-8630-e6fcc95487ac",
                "ad3c6145-99d1-4ae9-821b-c954ac5fd3ce",
                "4c3c509f-cb28-443d-bf96-9e44bcbf8dbb"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "07eaa1a7-ae9b-4cbb-aaf4-571df91d8f46",
              "title": "titleCase",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/survivor-dependent-education-benefit/22-5490/tests/unit/helpers.unit.spec.js",
              "file": "/src/applications/survivor-dependent-education-benefit/22-5490/tests/unit/helpers.unit.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should capitalize the first letter and lowercase the rest",
                  "fullTitle": "Helpers Module titleCase should capitalize the first letter and lowercase the rest",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)((0, _helpers.titleCase)('hello')).to.equal('Hello');",
                  "err": {},
                  "uuid": "82ef3ca8-0cfc-480f-b023-df2a593f4092",
                  "parentUUID": "07eaa1a7-ae9b-4cbb-aaf4-571df91d8f46",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should handle uppercase strings",
                  "fullTitle": "Helpers Module titleCase should handle uppercase strings",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)((0, _helpers.titleCase)('HELLO')).to.equal('Hello');",
                  "err": {},
                  "uuid": "4b8258b9-6990-426b-99bb-f14f74493c87",
                  "parentUUID": "07eaa1a7-ae9b-4cbb-aaf4-571df91d8f46",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should handle mixed case strings",
                  "fullTitle": "Helpers Module titleCase should handle mixed case strings",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)((0, _helpers.titleCase)('hElLo')).to.equal('Hello');",
                  "err": {},
                  "uuid": "8fd07687-18af-4fe9-a582-63f3bdadd5c8",
                  "parentUUID": "07eaa1a7-ae9b-4cbb-aaf4-571df91d8f46",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should handle single-character strings",
                  "fullTitle": "Helpers Module titleCase should handle single-character strings",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)((0, _helpers.titleCase)('h')).to.equal('H');",
                  "err": {},
                  "uuid": "2b3e163c-50bd-42bd-b0b0-8daf4b832657",
                  "parentUUID": "07eaa1a7-ae9b-4cbb-aaf4-571df91d8f46",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should throw an error for empty strings",
                  "fullTitle": "Helpers Module titleCase should throw an error for empty strings",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)(function () {\n  return (0, _helpers.titleCase)('');\n}).to.throw();",
                  "err": {},
                  "uuid": "ec949275-7d2f-4b2a-b7a9-5b2981e0e128",
                  "parentUUID": "07eaa1a7-ae9b-4cbb-aaf4-571df91d8f46",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should throw an error when input is null or undefined",
                  "fullTitle": "Helpers Module titleCase should throw an error when input is null or undefined",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)(function () {\n  return (0, _helpers.titleCase)(null);\n}).to.throw();\n(0, _chai.expect)(function () {\n  return (0, _helpers.titleCase)(undefined);\n}).to.throw();",
                  "err": {},
                  "uuid": "8ecf714c-5cb5-4d57-bf33-bb2a0ef901b2",
                  "parentUUID": "07eaa1a7-ae9b-4cbb-aaf4-571df91d8f46",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "82ef3ca8-0cfc-480f-b023-df2a593f4092",
                "4b8258b9-6990-426b-99bb-f14f74493c87",
                "8fd07687-18af-4fe9-a582-63f3bdadd5c8",
                "2b3e163c-50bd-42bd-b0b0-8daf4b832657",
                "ec949275-7d2f-4b2a-b7a9-5b2981e0e128",
                "8ecf714c-5cb5-4d57-bf33-bb2a0ef901b2"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "402bf232-d688-4206-957d-8ba2a5d03ad3",
              "title": "obfuscate",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/survivor-dependent-education-benefit/22-5490/tests/unit/helpers.unit.spec.js",
              "file": "/src/applications/survivor-dependent-education-benefit/22-5490/tests/unit/helpers.unit.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should obfuscate all but the last 4 characters by default",
                  "fullTitle": "Helpers Module obfuscate should obfuscate all but the last 4 characters by default",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)((0, _helpers.obfuscate)('1234567890')).to.equal('●●●●●●7890');",
                  "err": {},
                  "uuid": "47b46f2d-692e-446a-971a-556f9829b233",
                  "parentUUID": "402bf232-d688-4206-957d-8ba2a5d03ad3",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should use custom number of visible characters",
                  "fullTitle": "Helpers Module obfuscate should use custom number of visible characters",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)((0, _helpers.obfuscate)('1234567890', 2)).to.equal('●●●●●●●●90');",
                  "err": {},
                  "uuid": "6046132f-0f5c-4be1-9ba6-3a041b675268",
                  "parentUUID": "402bf232-d688-4206-957d-8ba2a5d03ad3",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should use custom obfuscation character",
                  "fullTitle": "Helpers Module obfuscate should use custom obfuscation character",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)((0, _helpers.obfuscate)('1234567890', 4, '*')).to.equal('******7890');",
                  "err": {},
                  "uuid": "953c313b-87eb-41fa-ab36-44b8fe501656",
                  "parentUUID": "402bf232-d688-4206-957d-8ba2a5d03ad3",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return the original string if length is less than or equal to numVisibleChars",
                  "fullTitle": "Helpers Module obfuscate should return the original string if length is less than or equal to numVisibleChars",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)((0, _helpers.obfuscate)('1234')).to.equal('1234');",
                  "err": {},
                  "uuid": "aad2dff7-824e-450a-8201-3f11ea26dc98",
                  "parentUUID": "402bf232-d688-4206-957d-8ba2a5d03ad3",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return an empty string when input is empty",
                  "fullTitle": "Helpers Module obfuscate should return an empty string when input is empty",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)((0, _helpers.obfuscate)('')).to.equal('');",
                  "err": {},
                  "uuid": "fc9f1d62-4ba7-4293-b5e6-20a9b73b64a1",
                  "parentUUID": "402bf232-d688-4206-957d-8ba2a5d03ad3",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return an empty string when input is null or undefined",
                  "fullTitle": "Helpers Module obfuscate should return an empty string when input is null or undefined",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)((0, _helpers.obfuscate)(null)).to.equal('');\n(0, _chai.expect)((0, _helpers.obfuscate)(undefined)).to.equal('');",
                  "err": {},
                  "uuid": "dc5229a9-344d-4912-a4bf-f724c4c0f27f",
                  "parentUUID": "402bf232-d688-4206-957d-8ba2a5d03ad3",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "47b46f2d-692e-446a-971a-556f9829b233",
                "6046132f-0f5c-4be1-9ba6-3a041b675268",
                "953c313b-87eb-41fa-ab36-44b8fe501656",
                "aad2dff7-824e-450a-8201-3f11ea26dc98",
                "fc9f1d62-4ba7-4293-b5e6-20a9b73b64a1",
                "dc5229a9-344d-4912-a4bf-f724c4c0f27f"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "fd2ed491-711b-4d8a-94c0-ce82a2fa01a6",
              "title": "formatReadableDate",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/survivor-dependent-education-benefit/22-5490/tests/unit/helpers.unit.spec.js",
              "file": "/src/applications/survivor-dependent-education-benefit/22-5490/tests/unit/helpers.unit.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should format a valid date string correctly",
                  "fullTitle": "Helpers Module formatReadableDate should format a valid date string correctly",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)((0, _helpers.formatReadableDate)('2000-01-01')).to.equal('January 1, 2000');",
                  "err": {},
                  "uuid": "1f5c7dcb-a7eb-45ed-acfc-4bc063eedd58",
                  "parentUUID": "fd2ed491-711b-4d8a-94c0-ce82a2fa01a6",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return an empty string for invalid date formats",
                  "fullTitle": "Helpers Module formatReadableDate should return an empty string for invalid date formats",
                  "timedOut": false,
                  "duration": 0,
                  "state": "pending",
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": true,
                  "context": null,
                  "code": "",
                  "err": {},
                  "uuid": "75ca2b97-e1fe-49dd-8b8d-9a31c3e82963",
                  "parentUUID": "fd2ed491-711b-4d8a-94c0-ce82a2fa01a6",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return an empty string when input is null or undefined",
                  "fullTitle": "Helpers Module formatReadableDate should return an empty string when input is null or undefined",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)((0, _helpers.formatReadableDate)(null)).to.equal('');\n(0, _chai.expect)((0, _helpers.formatReadableDate)(undefined)).to.equal('');",
                  "err": {},
                  "uuid": "be7de902-93c8-4ef4-bef3-f1887cb8c755",
                  "parentUUID": "fd2ed491-711b-4d8a-94c0-ce82a2fa01a6",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "1f5c7dcb-a7eb-45ed-acfc-4bc063eedd58",
                "be7de902-93c8-4ef4-bef3-f1887cb8c755"
              ],
              "failures": [],
              "pending": [
                "75ca2b97-e1fe-49dd-8b8d-9a31c3e82963"
              ],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "c2b15264-e5fd-4264-9ac0-74a7b7980297",
              "title": "addWhitespaceOnlyError",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/survivor-dependent-education-benefit/22-5490/tests/unit/helpers.unit.spec.js",
              "file": "/src/applications/survivor-dependent-education-benefit/22-5490/tests/unit/helpers.unit.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should add an error if the field contains only whitespace",
                  "fullTitle": "Helpers Module addWhitespaceOnlyError should add an error if the field contains only whitespace",
                  "timedOut": false,
                  "duration": 0,
                  "state": "pending",
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": true,
                  "context": null,
                  "code": "",
                  "err": {},
                  "uuid": "ccd82b4a-7777-4229-aee6-9b4efa8fe9e0",
                  "parentUUID": "c2b15264-e5fd-4264-9ac0-74a7b7980297",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should not add an error if the field contains non-whitespace characters",
                  "fullTitle": "Helpers Module addWhitespaceOnlyError should not add an error if the field contains non-whitespace characters",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var errors = {\n  addError: _sinon.default.spy()\n};\n(0, _helpers.addWhitespaceOnlyError)('abc', errors, 'Field cannot be empty');\n(0, _chai.expect)(errors.addError.notCalled).to.be.true;",
                  "err": {},
                  "uuid": "cc37f1e1-23e9-490f-afa8-ff5fc5380b6e",
                  "parentUUID": "c2b15264-e5fd-4264-9ac0-74a7b7980297",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "cc37f1e1-23e9-490f-afa8-ff5fc5380b6e"
              ],
              "failures": [],
              "pending": [
                "ccd82b4a-7777-4229-aee6-9b4efa8fe9e0"
              ],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "25f47955-b9fc-405f-9abd-ebfd176ed3d8",
              "title": "transformAlphaOnlyLowercase",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/survivor-dependent-education-benefit/22-5490/tests/unit/helpers.unit.spec.js",
              "file": "/src/applications/survivor-dependent-education-benefit/22-5490/tests/unit/helpers.unit.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should transform string to lowercase and remove non-alpha characters",
                  "fullTitle": "Helpers Module transformAlphaOnlyLowercase should transform string to lowercase and remove non-alpha characters",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)((0, _helpers.transformAlphaOnlyLowercase)('Abc123!@#')).to.equal('abc');",
                  "err": {},
                  "uuid": "05532f03-8feb-4f08-b50b-da879113e0b9",
                  "parentUUID": "25f47955-b9fc-405f-9abd-ebfd176ed3d8",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return an empty string when input has no alphabetic characters",
                  "fullTitle": "Helpers Module transformAlphaOnlyLowercase should return an empty string when input has no alphabetic characters",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)((0, _helpers.transformAlphaOnlyLowercase)('12345!@#')).to.equal('');",
                  "err": {},
                  "uuid": "dac8727b-5f49-4bc4-ac50-fd692cab1317",
                  "parentUUID": "25f47955-b9fc-405f-9abd-ebfd176ed3d8",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should throw an error when input is null or undefined",
                  "fullTitle": "Helpers Module transformAlphaOnlyLowercase should throw an error when input is null or undefined",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)(function () {\n  return (0, _helpers.transformAlphaOnlyLowercase)(null);\n}).to.throw();\n(0, _chai.expect)(function () {\n  return (0, _helpers.transformAlphaOnlyLowercase)(undefined);\n}).to.throw();",
                  "err": {},
                  "uuid": "30175704-035d-4ae0-a2b0-ff746c6dc45d",
                  "parentUUID": "25f47955-b9fc-405f-9abd-ebfd176ed3d8",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "05532f03-8feb-4f08-b50b-da879113e0b9",
                "dac8727b-5f49-4bc4-ac50-fd692cab1317",
                "30175704-035d-4ae0-a2b0-ff746c6dc45d"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "0b3d40cd-aa82-4088-b9ac-f6734213d96e",
              "title": "equalsAlphaOnlyIgnoreCase",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/survivor-dependent-education-benefit/22-5490/tests/unit/helpers.unit.spec.js",
              "file": "/src/applications/survivor-dependent-education-benefit/22-5490/tests/unit/helpers.unit.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return true for strings that are equal when non-alpha characters are removed",
                  "fullTitle": "Helpers Module equalsAlphaOnlyIgnoreCase should return true for strings that are equal when non-alpha characters are removed",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)((0, _helpers.equalsAlphaOnlyIgnoreCase)('Abc123', 'aBc!@#123')).to.be.true;",
                  "err": {},
                  "uuid": "dbbe15b5-4302-4654-b8c5-a0cc20bde88f",
                  "parentUUID": "0b3d40cd-aa82-4088-b9ac-f6734213d96e",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return false for strings that are not equal after transformation",
                  "fullTitle": "Helpers Module equalsAlphaOnlyIgnoreCase should return false for strings that are not equal after transformation",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)((0, _helpers.equalsAlphaOnlyIgnoreCase)('abc', 'def')).to.be.false;",
                  "err": {},
                  "uuid": "0550c3bb-beda-4e46-b22a-39a636799131",
                  "parentUUID": "0b3d40cd-aa82-4088-b9ac-f6734213d96e",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should handle empty strings",
                  "fullTitle": "Helpers Module equalsAlphaOnlyIgnoreCase should handle empty strings",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)((0, _helpers.equalsAlphaOnlyIgnoreCase)('', '')).to.be.true;",
                  "err": {},
                  "uuid": "126e2aa5-c2c7-4877-b3c6-1eeeeb7bf084",
                  "parentUUID": "0b3d40cd-aa82-4088-b9ac-f6734213d96e",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should throw an error when input is null or undefined",
                  "fullTitle": "Helpers Module equalsAlphaOnlyIgnoreCase should throw an error when input is null or undefined",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)(function () {\n  return (0, _helpers.equalsAlphaOnlyIgnoreCase)(null, 'abc');\n}).to.throw();\n(0, _chai.expect)(function () {\n  return (0, _helpers.equalsAlphaOnlyIgnoreCase)('abc', null);\n}).to.throw();",
                  "err": {},
                  "uuid": "ad839bd5-79d9-4dd0-be98-e7e2bbd1445c",
                  "parentUUID": "0b3d40cd-aa82-4088-b9ac-f6734213d96e",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "dbbe15b5-4302-4654-b8c5-a0cc20bde88f",
                "0550c3bb-beda-4e46-b22a-39a636799131",
                "126e2aa5-c2c7-4877-b3c6-1eeeeb7bf084",
                "ad839bd5-79d9-4dd0-be98-e7e2bbd1445c"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "dd20ffdc-2d5d-4c31-b5ba-dacca2159cbd",
              "title": "prefillTransformer",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/survivor-dependent-education-benefit/22-5490/tests/unit/helpers.unit.spec.js",
              "file": "/src/applications/survivor-dependent-education-benefit/22-5490/tests/unit/helpers.unit.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should correctly transform form data based on the provided state",
                  "fullTitle": "Helpers Module prefillTransformer should correctly transform form data based on the provided state",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var pages = {};\nvar formData = {\n  relationShipToMember: 'Spouse',\n  relativeSocialSecurityNumber: '123-45-6789',\n  highSchoolDiploma: 'Yes',\n  graduationDate: '2000-01-01',\n  marriageStatus: 'Married',\n  marriageDate: '2000-01-01',\n  remarriageStatus: 'Not Remarried',\n  remarriageDate: '2000-01-01',\n  felonyOrWarrant: 'No',\n  chosenBenefit: 'Some Benefit',\n  contactMethod: 'Email',\n  declineDirectDeposit: false,\n  bankAccount: {\n    accountType: 'Checking',\n    accountNumber: '123456789',\n    routingNumber: '987654321'\n  }\n};\nvar metadata = {};\nvar state = {\n  data: {\n    bankInformation: {\n      accountType: 'Checking',\n      accountNumber: '123456789',\n      routingNumber: '987654321'\n    },\n    formData: {\n      data: {\n        id: '123',\n        attributes: {\n          claimant: {\n            claimantId: '456',\n            firstName: 'John',\n            middleName: 'M',\n            lastName: 'Doe',\n            suffix: 'Jr',\n            contactInfo: {\n              emailAddress: 'john.doe@example.com',\n              mobilePhoneNumber: '555-555-5555',\n              homePhoneNumber: '444-444-4444',\n              addressLine1: '123 Main St',\n              city: 'Anytown',\n              stateCode: 'CA',\n              zipcode: '12345',\n              countryCodeIso3: 'USA',\n              addressType: 'DOMESTIC'\n            }\n          },\n          sponsors: ['Sponsor1', 'Sponsor2']\n        }\n      }\n    }\n  },\n  user: {\n    profile: {\n      userFullName: {\n        first: 'Jane',\n        middle: 'A',\n        last: 'Smith'\n      },\n      email: 'jane.smith@va.gov',\n      vapContactInfo: {\n        email: {\n          emailAddress: 'jane.smith@example.com'\n        },\n        mobilePhone: {\n          areaCode: '555',\n          phoneNumber: '6667777',\n          isInternational: false\n        },\n        homePhone: {\n          areaCode: '555',\n          phoneNumber: '8889999',\n          isInternational: false\n        },\n        mailingAddress: {\n          addressLine1: '456 Elm St',\n          city: 'Othertown',\n          stateCode: 'NY',\n          zipcode: '67890',\n          countryCodeIso3: 'USA',\n          addressType: 'DOMESTIC'\n        }\n      }\n    }\n  }\n};\nvar result = (0, _helpers.prefillTransformer)(pages, formData, metadata, state);\n(0, _chai.expect)(result.formData.claimantFullName.first).to.equal('Jane');\n(0, _chai.expect)(result.formData.claimantFullName.middle).to.equal('A');\n(0, _chai.expect)(result.formData.claimantFullName.last).to.equal('Smith');\n(0, _chai.expect)(result.formData.email).to.equal('jane.smith@example.com');\n(0, _chai.expect)(result.formData.confirmEmail).to.equal('jane.smith@example.com');\n(0, _chai.expect)(result.formData.mobilePhone.phone).to.equal('5556667777');\n(0, _chai.expect)(result.formData.mobilePhone.isInternational).to.be.false;\n(0, _chai.expect)(result.formData.homePhone.phone).to.equal('5558889999');\n(0, _chai.expect)(result.formData.homePhone.isInternational).to.be.false;\n(0, _chai.expect)(result.formData.mailingAddressInput.address.street).to.equal('456 Elm St');\n(0, _chai.expect)(result.formData.mailingAddressInput.address.city).to.equal('Othertown');\n(0, _chai.expect)(result.formData.mailingAddressInput.address.state).to.equal('NY');\n(0, _chai.expect)(result.formData.mailingAddressInput.address.postalCode).to.equal('67890');\n(0, _chai.expect)(result.formData.mailingAddressInput.address.country).to.equal('USA');\n(0, _chai.expect)(result.formData.mailingAddressInput.livesOnMilitaryBase).to.be.false;\n(0, _chai.expect)(result.formData.bankAccount.accountType).to.equal('Checking');\n(0, _chai.expect)(result.formData.bankAccount.accountNumber).to.equal('123456789');\n(0, _chai.expect)(result.formData.bankAccount.routingNumber).to.equal('987654321');\n(0, _chai.expect)(result.formData.claimantId).to.equal('456');\n(0, _chai.expect)(result.formData.formId).to.equal('123');",
                  "err": {},
                  "uuid": "d0b333e6-9c7b-43e6-9e7b-6e5298376e31",
                  "parentUUID": "dd20ffdc-2d5d-4c31-b5ba-dacca2159cbd",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "d0b333e6-9c7b-43e6-9e7b-6e5298376e31"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 3,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "40b4eabe-cdd4-4ccb-bd35-f3ad58aaef2e",
          "title": "prefillTransformer",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/survivor-dependent-education-benefit/22-5490/tests/unit/prefill-transformer.unit.spec.js",
          "file": "/src/applications/survivor-dependent-education-benefit/22-5490/tests/unit/prefill-transformer.unit.spec.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"prefillTransformer\"",
              "fullTitle": "prefillTransformer \"before each\" hook in \"prefillTransformer\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "mockClaimantInfo = JSON.parse(JSON.stringify(_prefillTransformerTestData.claimantInfo));",
              "err": {},
              "uuid": "650db721-655f-4a2a-b978-683a208c2bd7",
              "parentUUID": "40b4eabe-cdd4-4ccb-bd35-f3ad58aaef2e",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "2f3b1234-c34e-4d27-bbb9-b90bd249dae5",
              "title": "transforms claimantId",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/survivor-dependent-education-benefit/22-5490/tests/unit/prefill-transformer.unit.spec.js",
              "file": "/src/applications/survivor-dependent-education-benefit/22-5490/tests/unit/prefill-transformer.unit.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "the transformed claimant info includes a claimantId",
                  "fullTitle": "prefillTransformer transforms claimantId the transformed claimant info includes a claimantId",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var _transformedClaimantI;\nvar transformedClaimantInfo = (0, _helpers.prefillTransformer)(null, null, null, _objectSpread({}, mockClaimantInfo));\n// Check the military claimant section\n(0, _chai.expect)(transformedClaimantInfo === null || transformedClaimantInfo === void 0 ? void 0 : (_transformedClaimantI = transformedClaimantInfo.formData) === null || _transformedClaimantI === void 0 ? void 0 : _transformedClaimantI.claimantId).to.eql('1000000000000246');",
                  "err": {},
                  "uuid": "194d1862-f2a0-4faf-aecf-e9eb383c78b7",
                  "parentUUID": "2f3b1234-c34e-4d27-bbb9-b90bd249dae5",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "194d1862-f2a0-4faf-aecf-e9eb383c78b7"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "455faaad-b4fb-4bb5-9988-479442653497",
              "title": "transforms notification method",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/survivor-dependent-education-benefit/22-5490/tests/unit/prefill-transformer.unit.spec.js",
              "file": "/src/applications/survivor-dependent-education-benefit/22-5490/tests/unit/prefill-transformer.unit.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "the transformed claimant has the correct notification method",
                  "fullTitle": "prefillTransformer transforms notification method the transformed claimant has the correct notification method",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var _transformedClaimantI2;\nvar transformedClaimantInfo = (0, _helpers.prefillTransformer)(null, null, null, _objectSpread({}, mockClaimantInfo));\n// Check the military claimant section\n(0, _chai.expect)(transformedClaimantInfo === null || transformedClaimantInfo === void 0 ? void 0 : (_transformedClaimantI2 = transformedClaimantInfo.formData) === null || _transformedClaimantI2 === void 0 ? void 0 : _transformedClaimantI2.notificationMethod).to.eql('EMAIL');",
                  "err": {},
                  "uuid": "6381baa1-66a2-40e1-9d67-dab5382db2a1",
                  "parentUUID": "455faaad-b4fb-4bb5-9988-479442653497",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "6381baa1-66a2-40e1-9d67-dab5382db2a1"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "b37711b7-b55d-4038-846e-840da746aa38",
              "title": "prefillTransformer with International Address",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/survivor-dependent-education-benefit/22-5490/tests/unit/prefill-transformer.unit.spec.js",
              "file": "/src/applications/survivor-dependent-education-benefit/22-5490/tests/unit/prefill-transformer.unit.spec.js",
              "beforeHooks": [
                {
                  "title": "\"before each\" hook in \"prefillTransformer with International Address\"",
                  "fullTitle": "prefillTransformer prefillTransformer with International Address \"before each\" hook in \"prefillTransformer with International Address\"",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "mockInternationalClaimantInfo = JSON.parse(JSON.stringify(_prefillTransformerTestData.mockInternationalAddressUserState));",
                  "err": {},
                  "uuid": "2c9af268-f5a3-42de-aa9a-ce566c7fdd62",
                  "parentUUID": "b37711b7-b55d-4038-846e-840da746aa38",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [],
              "tests": [],
              "suites": [
                {
                  "uuid": "6981fd52-3fe5-40d5-9543-2d072f62d594",
                  "title": "transforms international country code",
                  "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/survivor-dependent-education-benefit/22-5490/tests/unit/prefill-transformer.unit.spec.js",
                  "file": "/src/applications/survivor-dependent-education-benefit/22-5490/tests/unit/prefill-transformer.unit.spec.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "claimant has the correct Country Mapping",
                      "fullTitle": "prefillTransformer prefillTransformer with International Address transforms international country code claimant has the correct Country Mapping",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "slow",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "var _transformedClaimantI3, _transformedClaimantI4, _transformedClaimantI5;\nvar transformedClaimantInfo = (0, _helpers.prefillTransformer)(null, null, null, _objectSpread({}, mockInternationalClaimantInfo));\n(0, _chai.expect)(transformedClaimantInfo === null || transformedClaimantInfo === void 0 ? void 0 : (_transformedClaimantI3 = transformedClaimantInfo.formData) === null || _transformedClaimantI3 === void 0 ? void 0 : (_transformedClaimantI4 = _transformedClaimantI3.mailingAddressInput) === null || _transformedClaimantI4 === void 0 ? void 0 : (_transformedClaimantI5 = _transformedClaimantI4.address) === null || _transformedClaimantI5 === void 0 ? void 0 : _transformedClaimantI5.country).to.eql('ESP');",
                      "err": {},
                      "uuid": "e86bfa7d-94f7-4ec9-94db-4b35a67c05ee",
                      "parentUUID": "6981fd52-3fe5-40d5-9543-2d072f62d594",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "e86bfa7d-94f7-4ec9-94db-4b35a67c05ee"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "fe490c30-9294-4234-ab19-ade00e74df7a",
                  "title": "transforms international state or province",
                  "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/survivor-dependent-education-benefit/22-5490/tests/unit/prefill-transformer.unit.spec.js",
                  "file": "/src/applications/survivor-dependent-education-benefit/22-5490/tests/unit/prefill-transformer.unit.spec.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "claimant has the correct state or province",
                      "fullTitle": "prefillTransformer prefillTransformer with International Address transforms international state or province claimant has the correct state or province",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "slow",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "var _transformedClaimantI6, _transformedClaimantI7, _transformedClaimantI8;\nvar transformedClaimantInfo = (0, _helpers.prefillTransformer)(null, null, null, _objectSpread({}, mockInternationalClaimantInfo));\n(0, _chai.expect)(transformedClaimantInfo === null || transformedClaimantInfo === void 0 ? void 0 : (_transformedClaimantI6 = transformedClaimantInfo.formData) === null || _transformedClaimantI6 === void 0 ? void 0 : (_transformedClaimantI7 = _transformedClaimantI6.mailingAddressInput) === null || _transformedClaimantI7 === void 0 ? void 0 : (_transformedClaimantI8 = _transformedClaimantI7.address) === null || _transformedClaimantI8 === void 0 ? void 0 : _transformedClaimantI8.state).to.eql('Comunidad De Madrid');",
                      "err": {},
                      "uuid": "9675a34a-a6bd-4d6c-adb2-05301b611fcd",
                      "parentUUID": "fe490c30-9294-4234-ab19-ade00e74df7a",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "9675a34a-a6bd-4d6c-adb2-05301b611fcd"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "fd77777d-8669-4145-80d6-a750e112da3c",
                  "title": "transforms international postal code",
                  "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/survivor-dependent-education-benefit/22-5490/tests/unit/prefill-transformer.unit.spec.js",
                  "file": "/src/applications/survivor-dependent-education-benefit/22-5490/tests/unit/prefill-transformer.unit.spec.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "claimant has the correct postal code",
                      "fullTitle": "prefillTransformer prefillTransformer with International Address transforms international postal code claimant has the correct postal code",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "slow",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "var _transformedClaimantI9, _transformedClaimantI10, _transformedClaimantI11;\nvar transformedClaimantInfo = (0, _helpers.prefillTransformer)(null, null, null, _objectSpread({}, mockInternationalClaimantInfo));\n(0, _chai.expect)(transformedClaimantInfo === null || transformedClaimantInfo === void 0 ? void 0 : (_transformedClaimantI9 = transformedClaimantInfo.formData) === null || _transformedClaimantI9 === void 0 ? void 0 : (_transformedClaimantI10 = _transformedClaimantI9.mailingAddressInput) === null || _transformedClaimantI10 === void 0 ? void 0 : (_transformedClaimantI11 = _transformedClaimantI10.address) === null || _transformedClaimantI11 === void 0 ? void 0 : _transformedClaimantI11.postalCode).to.eql('28014');",
                      "err": {},
                      "uuid": "b738a1bf-d254-4889-ae9a-6ebd33ecdd6d",
                      "parentUUID": "fd77777d-8669-4145-80d6-a750e112da3c",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "b738a1bf-d254-4889-ae9a-6ebd33ecdd6d"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                }
              ],
              "passes": [],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "f04a479f-a1ea-4d35-bef7-a816bb891669",
              "title": "prefillTransformer with International Address",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/survivor-dependent-education-benefit/22-5490/tests/unit/prefill-transformer.unit.spec.js",
              "file": "/src/applications/survivor-dependent-education-benefit/22-5490/tests/unit/prefill-transformer.unit.spec.js",
              "beforeHooks": [
                {
                  "title": "\"before each\" hook in \"prefillTransformer with International Address\"",
                  "fullTitle": "prefillTransformer prefillTransformer with International Address \"before each\" hook in \"prefillTransformer with International Address\"",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "mockDomesticClaimantInfo = JSON.parse(JSON.stringify(_prefillTransformerTestData.mockDomesticUserState));",
                  "err": {},
                  "uuid": "e89e18ee-8ced-461e-a05b-4f9a2f47f507",
                  "parentUUID": "f04a479f-a1ea-4d35-bef7-a816bb891669",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [],
              "tests": [],
              "suites": [
                {
                  "uuid": "04bbd496-d3dc-4e12-bdf9-74f29dd24835",
                  "title": "transforms USA country code",
                  "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/survivor-dependent-education-benefit/22-5490/tests/unit/prefill-transformer.unit.spec.js",
                  "file": "/src/applications/survivor-dependent-education-benefit/22-5490/tests/unit/prefill-transformer.unit.spec.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "claimant has the correct Country Mapping",
                      "fullTitle": "prefillTransformer prefillTransformer with International Address transforms USA country code claimant has the correct Country Mapping",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "slow",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "var _transformedClaimantI12, _transformedClaimantI13, _transformedClaimantI14;\nvar transformedClaimantInfo = (0, _helpers.prefillTransformer)(null, null, null, _objectSpread({}, mockDomesticClaimantInfo));\n(0, _chai.expect)(transformedClaimantInfo === null || transformedClaimantInfo === void 0 ? void 0 : (_transformedClaimantI12 = transformedClaimantInfo.formData) === null || _transformedClaimantI12 === void 0 ? void 0 : (_transformedClaimantI13 = _transformedClaimantI12.mailingAddressInput) === null || _transformedClaimantI13 === void 0 ? void 0 : (_transformedClaimantI14 = _transformedClaimantI13.address) === null || _transformedClaimantI14 === void 0 ? void 0 : _transformedClaimantI14.country).to.eql('USA');",
                      "err": {},
                      "uuid": "9cfc624d-485f-4297-ab48-5043ab8280c4",
                      "parentUUID": "04bbd496-d3dc-4e12-bdf9-74f29dd24835",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "9cfc624d-485f-4297-ab48-5043ab8280c4"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "82527397-8ec1-4d76-b65b-6da94dabe050",
                  "title": "transforms international state or province",
                  "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/survivor-dependent-education-benefit/22-5490/tests/unit/prefill-transformer.unit.spec.js",
                  "file": "/src/applications/survivor-dependent-education-benefit/22-5490/tests/unit/prefill-transformer.unit.spec.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "claimant has the correct state code or province",
                      "fullTitle": "prefillTransformer prefillTransformer with International Address transforms international state or province claimant has the correct state code or province",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "slow",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "var _transformedClaimantI15, _transformedClaimantI16, _transformedClaimantI17;\nvar transformedClaimantInfo = (0, _helpers.prefillTransformer)(null, null, null, _objectSpread({}, mockDomesticClaimantInfo));\n(0, _chai.expect)(transformedClaimantInfo === null || transformedClaimantInfo === void 0 ? void 0 : (_transformedClaimantI15 = transformedClaimantInfo.formData) === null || _transformedClaimantI15 === void 0 ? void 0 : (_transformedClaimantI16 = _transformedClaimantI15.mailingAddressInput) === null || _transformedClaimantI16 === void 0 ? void 0 : (_transformedClaimantI17 = _transformedClaimantI16.address) === null || _transformedClaimantI17 === void 0 ? void 0 : _transformedClaimantI17.state).to.eql('WI');",
                      "err": {},
                      "uuid": "12be608b-b52c-4ad3-9bc8-7d10ac3d38cc",
                      "parentUUID": "82527397-8ec1-4d76-b65b-6da94dabe050",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "12be608b-b52c-4ad3-9bc8-7d10ac3d38cc"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "795030d0-59cc-4c27-b45c-ec6727a01e3d",
                  "title": "transforms international postal code",
                  "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/survivor-dependent-education-benefit/22-5490/tests/unit/prefill-transformer.unit.spec.js",
                  "file": "/src/applications/survivor-dependent-education-benefit/22-5490/tests/unit/prefill-transformer.unit.spec.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "claimant has the correct postal code",
                      "fullTitle": "prefillTransformer prefillTransformer with International Address transforms international postal code claimant has the correct postal code",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "var _transformedClaimantI18, _transformedClaimantI19, _transformedClaimantI20;\nvar transformedClaimantInfo = (0, _helpers.prefillTransformer)(null, null, null, _objectSpread({}, mockDomesticClaimantInfo));\n(0, _chai.expect)(transformedClaimantInfo === null || transformedClaimantInfo === void 0 ? void 0 : (_transformedClaimantI18 = transformedClaimantInfo.formData) === null || _transformedClaimantI18 === void 0 ? void 0 : (_transformedClaimantI19 = _transformedClaimantI18.mailingAddressInput) === null || _transformedClaimantI19 === void 0 ? void 0 : (_transformedClaimantI20 = _transformedClaimantI19.address) === null || _transformedClaimantI20 === void 0 ? void 0 : _transformedClaimantI20.postalCode).to.eql('53005');",
                      "err": {},
                      "uuid": "84c61ca1-794f-42bf-b463-20bd28ff33f4",
                      "parentUUID": "795030d0-59cc-4c27-b45c-ec6727a01e3d",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "84c61ca1-794f-42bf-b463-20bd28ff33f4"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                }
              ],
              "passes": [],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "f486199c-12e7-4eca-9c31-0709c0f31ce2",
          "title": "form submit transform",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/survivor-dependent-education-benefit/22-5490/tests/utils/form-submit-transform.unit.spec.js",
          "file": "/src/applications/survivor-dependent-education-benefit/22-5490/tests/utils/form-submit-transform.unit.spec.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"form submit transform\"",
              "fullTitle": "form submit transform \"before each\" hook in \"form submit transform\"",
              "timedOut": false,
              "duration": 1,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "mockSubmissionForm = JSON.parse(JSON.stringify(_formSubmissionTestData.submissionForm));\nsubmissionObject = JSON.parse((0, _formSubmitTransform.transform5490Form)({}, mockSubmissionForm));",
              "err": {},
              "uuid": "aa87971e-4667-479c-b6cf-3c92feece32e",
              "parentUUID": "f486199c-12e7-4eca-9c31-0709c0f31ce2",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "00d09bb2-d422-469b-b1ed-fc5cde76194c",
              "title": "getSchemaCountryCode",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/survivor-dependent-education-benefit/22-5490/tests/utils/form-submit-transform.unit.spec.js",
              "file": "/src/applications/survivor-dependent-education-benefit/22-5490/tests/utils/form-submit-transform.unit.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "returns default schema country code for null input",
                  "fullTitle": "form submit transform getSchemaCountryCode returns default schema country code for null input",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)((0, _formSubmitTransform.getSchemaCountryCode)(null)).to.eql('USA');",
                  "err": {},
                  "uuid": "abd701c3-0df5-4748-a9bf-1eaf80008b48",
                  "parentUUID": "00d09bb2-d422-469b-b1ed-fc5cde76194c",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "returns default schema country code for non-string input",
                  "fullTitle": "form submit transform getSchemaCountryCode returns default schema country code for non-string input",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)((0, _formSubmitTransform.getSchemaCountryCode)(123)).to.eql('USA');",
                  "err": {},
                  "uuid": "ffbcf794-348f-4c09-ba80-0c64c823fe01",
                  "parentUUID": "00d09bb2-d422-469b-b1ed-fc5cde76194c",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "returns correct schema country code for valid three-character code",
                  "fullTitle": "form submit transform getSchemaCountryCode returns correct schema country code for valid three-character code",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)((0, _formSubmitTransform.getSchemaCountryCode)('CAN')).to.eql('CAN'); // Canada",
                  "err": {},
                  "uuid": "ea0a4e0c-7547-4eca-988d-392d7e5ad12a",
                  "parentUUID": "00d09bb2-d422-469b-b1ed-fc5cde76194c",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "returns correct schema country code for two-character LTS code",
                  "fullTitle": "form submit transform getSchemaCountryCode returns correct schema country code for two-character LTS code",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)((0, _formSubmitTransform.getSchemaCountryCode)('CA')).to.eql('CAN'); // Canada",
                  "err": {},
                  "uuid": "47897331-6185-4e9e-b1cf-f659dd6c84e1",
                  "parentUUID": "00d09bb2-d422-469b-b1ed-fc5cde76194c",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "abd701c3-0df5-4748-a9bf-1eaf80008b48",
                "ffbcf794-348f-4c09-ba80-0c64c823fe01",
                "ea0a4e0c-7547-4eca-988d-392d7e5ad12a",
                "47897331-6185-4e9e-b1cf-f659dd6c84e1"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "f0245d70-c13d-4dbc-954e-7a50ccbfbc85",
              "title": "getLTSCountryCode",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/survivor-dependent-education-benefit/22-5490/tests/utils/form-submit-transform.unit.spec.js",
              "file": "/src/applications/survivor-dependent-education-benefit/22-5490/tests/utils/form-submit-transform.unit.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "returns LTS country code for a valid schema country code",
                  "fullTitle": "form submit transform getLTSCountryCode returns LTS country code for a valid schema country code",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)((0, _formSubmitTransform.getLTSCountryCode)('CAN')).to.eql('CA'); // Canada",
                  "err": {},
                  "uuid": "3fd0c96b-455f-4ce6-9c0b-147f7cbc7492",
                  "parentUUID": "f0245d70-c13d-4dbc-954e-7a50ccbfbc85",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "returns LTS country code for a valid two-character input",
                  "fullTitle": "form submit transform getLTSCountryCode returns LTS country code for a valid two-character input",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)((0, _formSubmitTransform.getLTSCountryCode)('CA')).to.eql('CA'); // Canada",
                  "err": {},
                  "uuid": "94b07439-96e2-4597-b2f5-da0b42179717",
                  "parentUUID": "f0245d70-c13d-4dbc-954e-7a50ccbfbc85",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "returns \"ZZ\" for an unrecognized country code",
                  "fullTitle": "form submit transform getLTSCountryCode returns \"ZZ\" for an unrecognized country code",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)((0, _formSubmitTransform.getLTSCountryCode)('XYZ')).to.eql('ZZ'); // Unknown country",
                  "err": {},
                  "uuid": "f5572303-b980-411c-a2cf-304a8b0b4172",
                  "parentUUID": "f0245d70-c13d-4dbc-954e-7a50ccbfbc85",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "3fd0c96b-455f-4ce6-9c0b-147f7cbc7492",
                "94b07439-96e2-4597-b2f5-da0b42179717",
                "f5572303-b980-411c-a2cf-304a8b0b4172"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "721cd1e0-b0dc-41a8-a523-2e473a508afe",
              "title": "getAddressType",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/survivor-dependent-education-benefit/22-5490/tests/utils/form-submit-transform.unit.spec.js",
              "file": "/src/applications/survivor-dependent-education-benefit/22-5490/tests/utils/form-submit-transform.unit.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "returns null for undefined or null mailing address",
                  "fullTitle": "form submit transform getAddressType returns null for undefined or null mailing address",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)((0, _formSubmitTransform.getAddressType)(null)).to.eql(null);\n(0, _chai.expect)((0, _formSubmitTransform.getAddressType)(undefined)).to.eql(null);",
                  "err": {},
                  "uuid": "6e18a4ee-5d1a-472c-8336-30aa036343bc",
                  "parentUUID": "721cd1e0-b0dc-41a8-a523-2e473a508afe",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "returns \"MILITARY_OVERSEAS\" when livesOnMilitaryBase is true",
                  "fullTitle": "form submit transform getAddressType returns \"MILITARY_OVERSEAS\" when livesOnMilitaryBase is true",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var mailingAddress = {\n  livesOnMilitaryBase: true\n};\n(0, _chai.expect)((0, _formSubmitTransform.getAddressType)(mailingAddress)).to.eql('MILITARY_OVERSEAS');",
                  "err": {},
                  "uuid": "93edd31b-2dbb-4835-8d1e-4f4eec6ac1cc",
                  "parentUUID": "721cd1e0-b0dc-41a8-a523-2e473a508afe",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "returns \"DOMESTIC\" for a United States address",
                  "fullTitle": "form submit transform getAddressType returns \"DOMESTIC\" for a United States address",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var mailingAddress = {\n  address: {\n    country: 'USA'\n  }\n};\n(0, _chai.expect)((0, _formSubmitTransform.getAddressType)(mailingAddress)).to.eql('DOMESTIC');",
                  "err": {},
                  "uuid": "6dd62b1e-4ed2-49dc-83c9-c4b51bc20c0f",
                  "parentUUID": "721cd1e0-b0dc-41a8-a523-2e473a508afe",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "returns \"FOREIGN\" for an address outside the United States",
                  "fullTitle": "form submit transform getAddressType returns \"FOREIGN\" for an address outside the United States",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var mailingAddress = {\n  address: {\n    country: 'CAN'\n  }\n};\n(0, _chai.expect)((0, _formSubmitTransform.getAddressType)(mailingAddress)).to.eql('FOREIGN');",
                  "err": {},
                  "uuid": "e16b9652-0281-44af-8463-48b1dc3cb8c6",
                  "parentUUID": "721cd1e0-b0dc-41a8-a523-2e473a508afe",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "6e18a4ee-5d1a-472c-8336-30aa036343bc",
                "93edd31b-2dbb-4835-8d1e-4f4eec6ac1cc",
                "6dd62b1e-4ed2-49dc-83c9-c4b51bc20c0f",
                "e16b9652-0281-44af-8463-48b1dc3cb8c6"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "4a1ffdde-baf2-4f3c-90e9-e4196a314f1c",
              "title": "transform5490Form",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/survivor-dependent-education-benefit/22-5490/tests/utils/form-submit-transform.unit.spec.js",
              "file": "/src/applications/survivor-dependent-education-benefit/22-5490/tests/utils/form-submit-transform.unit.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [],
              "suites": [
                {
                  "uuid": "150084d8-ca32-4179-8e2d-d2468d86051b",
                  "title": "creates a type property",
                  "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/survivor-dependent-education-benefit/22-5490/tests/utils/form-submit-transform.unit.spec.js",
                  "file": "/src/applications/survivor-dependent-education-benefit/22-5490/tests/utils/form-submit-transform.unit.spec.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "is set to Chapter35Submission",
                      "fullTitle": "form submit transform transform5490Form creates a type property is set to Chapter35Submission",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "(0, _chai.expect)(submissionObject['@type']).to.eql('Chapter35Submission');",
                      "err": {},
                      "uuid": "24371eb1-8278-4144-a39e-8d6ece0b7d4b",
                      "parentUUID": "150084d8-ca32-4179-8e2d-d2468d86051b",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "24371eb1-8278-4144-a39e-8d6ece0b7d4b"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "5c542acb-0d50-4a7d-896e-a97ff79e4c26",
                  "title": "creates claimant information",
                  "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/survivor-dependent-education-benefit/22-5490/tests/utils/form-submit-transform.unit.spec.js",
                  "file": "/src/applications/survivor-dependent-education-benefit/22-5490/tests/utils/form-submit-transform.unit.spec.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "sets up first name",
                      "fullTitle": "form submit transform transform5490Form creates claimant information sets up first name",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "(0, _chai.expect)(submissionObject.claimant.firstName).to.eql('Hector');",
                      "err": {},
                      "uuid": "72c3e992-0949-4a71-9f95-87838e1b2e6d",
                      "parentUUID": "5c542acb-0d50-4a7d-896e-a97ff79e4c26",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "sets up middle name",
                      "fullTitle": "form submit transform transform5490Form creates claimant information sets up middle name",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "(0, _chai.expect)(submissionObject.claimant.middleName).to.eql('M');",
                      "err": {},
                      "uuid": "d3908c0c-1562-4dd3-a983-62755e306e18",
                      "parentUUID": "5c542acb-0d50-4a7d-896e-a97ff79e4c26",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "sets up last name",
                      "fullTitle": "form submit transform transform5490Form creates claimant information sets up last name",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "(0, _chai.expect)(submissionObject.claimant.lastName).to.eql('Allen');",
                      "err": {},
                      "uuid": "c58e5e4e-903a-4154-b372-bcc932038ce6",
                      "parentUUID": "5c542acb-0d50-4a7d-896e-a97ff79e4c26",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "sets up suffix name",
                      "fullTitle": "form submit transform transform5490Form creates claimant information sets up suffix name",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "(0, _chai.expect)(submissionObject.claimant.suffix).to.eql('Sr.');",
                      "err": {},
                      "uuid": "c152c679-0ae8-4fb2-a106-07fada641a17",
                      "parentUUID": "5c542acb-0d50-4a7d-896e-a97ff79e4c26",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "sets up birth date",
                      "fullTitle": "form submit transform transform5490Form creates claimant information sets up birth date",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "(0, _chai.expect)(submissionObject.claimant.dateOfBirth).to.eql('1932-02-05');",
                      "err": {},
                      "uuid": "0652634a-7817-47d3-b482-633a28f176f0",
                      "parentUUID": "5c542acb-0d50-4a7d-896e-a97ff79e4c26",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "sets up notificationMethod for text",
                      "fullTitle": "form submit transform transform5490Form creates claimant information sets up notificationMethod for text",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "mockSubmissionForm.data.notificationMethod = 'Yes, send me text message notifications';\nsubmissionObject = JSON.parse((0, _formSubmitTransform.transform5490Form)({}, mockSubmissionForm));\n(0, _chai.expect)(submissionObject.claimant.notificationMethod).to.eql('TEXT');",
                      "err": {},
                      "uuid": "94a95381-10fd-4fef-8963-9e8ad2e4e826",
                      "parentUUID": "5c542acb-0d50-4a7d-896e-a97ff79e4c26",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "sets up notificationMethod for email",
                      "fullTitle": "form submit transform transform5490Form creates claimant information sets up notificationMethod for email",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "mockSubmissionForm.data.notificationMethod = 'No, just send me email notifications';\nsubmissionObject = JSON.parse((0, _formSubmitTransform.transform5490Form)({}, mockSubmissionForm));\n(0, _chai.expect)(submissionObject.claimant.notificationMethod).to.eql('EMAIL');",
                      "err": {},
                      "uuid": "e2120a0a-da06-41cf-826a-2fc9970123ef",
                      "parentUUID": "5c542acb-0d50-4a7d-896e-a97ff79e4c26",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "sets up preferredContactMethod",
                      "fullTitle": "form submit transform transform5490Form creates claimant information sets up preferredContactMethod",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "(0, _chai.expect)(submissionObject.claimant.preferredContact).to.eql('Email');",
                      "err": {},
                      "uuid": "642010a6-3afa-4994-a139-40d963c48cc5",
                      "parentUUID": "5c542acb-0d50-4a7d-896e-a97ff79e4c26",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [
                    {
                      "uuid": "1e44f899-395f-40f4-8511-d339e067cc04",
                      "title": "sets up contact info",
                      "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/survivor-dependent-education-benefit/22-5490/tests/utils/form-submit-transform.unit.spec.js",
                      "file": "/src/applications/survivor-dependent-education-benefit/22-5490/tests/utils/form-submit-transform.unit.spec.js",
                      "beforeHooks": [],
                      "afterHooks": [],
                      "tests": [
                        {
                          "title": "sets up address line 1",
                          "fullTitle": "form submit transform transform5490Form creates claimant information sets up contact info sets up address line 1",
                          "timedOut": false,
                          "duration": 0,
                          "state": "passed",
                          "speed": "fast",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "(0, _chai.expect)(submissionObject.claimant.contactInfo.addressLine1).to.eql('4000 Wilson Blvd');",
                          "err": {},
                          "uuid": "74fdf60e-7b63-4d93-81c5-f642d0c2bacc",
                          "parentUUID": "1e44f899-395f-40f4-8511-d339e067cc04",
                          "isHook": false,
                          "skipped": false
                        },
                        {
                          "title": "sets up address line 2",
                          "fullTitle": "form submit transform transform5490Form creates claimant information sets up contact info sets up address line 2",
                          "timedOut": false,
                          "duration": 1,
                          "state": "passed",
                          "speed": "slow",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "(0, _chai.expect)(submissionObject.claimant.contactInfo.addressLine2).to.eql('#1');",
                          "err": {},
                          "uuid": "7e6bd648-63ce-4501-922f-872245648706",
                          "parentUUID": "1e44f899-395f-40f4-8511-d339e067cc04",
                          "isHook": false,
                          "skipped": false
                        },
                        {
                          "title": "sets up city",
                          "fullTitle": "form submit transform transform5490Form creates claimant information sets up contact info sets up city",
                          "timedOut": false,
                          "duration": 0,
                          "state": "passed",
                          "speed": "fast",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "(0, _chai.expect)(submissionObject.claimant.contactInfo.city).to.eql('ARLINGTON');",
                          "err": {},
                          "uuid": "ba6b0458-7338-4a94-a43c-e6ce6426fa87",
                          "parentUUID": "1e44f899-395f-40f4-8511-d339e067cc04",
                          "isHook": false,
                          "skipped": false
                        },
                        {
                          "title": "sets up zipcode",
                          "fullTitle": "form submit transform transform5490Form creates claimant information sets up contact info sets up zipcode",
                          "timedOut": false,
                          "duration": 0,
                          "state": "passed",
                          "speed": "fast",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "(0, _chai.expect)(submissionObject.claimant.contactInfo.zipcode).to.eql('22203');",
                          "err": {},
                          "uuid": "fac09bab-6313-437c-90e0-85009a037625",
                          "parentUUID": "1e44f899-395f-40f4-8511-d339e067cc04",
                          "isHook": false,
                          "skipped": false
                        },
                        {
                          "title": "sets up email address",
                          "fullTitle": "form submit transform transform5490Form creates claimant information sets up contact info sets up email address",
                          "timedOut": false,
                          "duration": 0,
                          "state": "passed",
                          "speed": "fast",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "(0, _chai.expect)(submissionObject.claimant.contactInfo.emailAddress).to.eql('test@test.com');",
                          "err": {},
                          "uuid": "3b1d2171-84bf-4835-aa8b-11c1fbee2bc5",
                          "parentUUID": "1e44f899-395f-40f4-8511-d339e067cc04",
                          "isHook": false,
                          "skipped": false
                        },
                        {
                          "title": "sets up address type to domestic ",
                          "fullTitle": "form submit transform transform5490Form creates claimant information sets up contact info sets up address type to domestic ",
                          "timedOut": false,
                          "duration": 0,
                          "state": "passed",
                          "speed": "fast",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "(0, _chai.expect)(submissionObject.claimant.contactInfo.addressType).to.eql('DOMESTIC');",
                          "err": {},
                          "uuid": "7d43e329-e520-449c-a003-2dc5694a4431",
                          "parentUUID": "1e44f899-395f-40f4-8511-d339e067cc04",
                          "isHook": false,
                          "skipped": false
                        },
                        {
                          "title": "sets up address type to military overseas ",
                          "fullTitle": "form submit transform transform5490Form creates claimant information sets up contact info sets up address type to military overseas ",
                          "timedOut": false,
                          "duration": 0,
                          "state": "passed",
                          "speed": "fast",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "var form = {\n  data: {\n    mailingAddressInput: {\n      livesOnMilitaryBase: 'true'\n    }\n  }\n};\nsubmissionObject = JSON.parse((0, _formSubmitTransform.transform5490Form)({}, form));\n(0, _chai.expect)(submissionObject.claimant.contactInfo.addressType).to.eql('MILITARY_OVERSEAS');",
                          "err": {},
                          "uuid": "28a9f68f-6f31-4c20-b70d-6ab04169fe14",
                          "parentUUID": "1e44f899-395f-40f4-8511-d339e067cc04",
                          "isHook": false,
                          "skipped": false
                        },
                        {
                          "title": "sets up mobile phone number",
                          "fullTitle": "form submit transform transform5490Form creates claimant information sets up contact info sets up mobile phone number",
                          "timedOut": false,
                          "duration": 0,
                          "state": "passed",
                          "speed": "fast",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "(0, _chai.expect)(submissionObject.claimant.contactInfo.mobilePhoneNumber).to.eql('5125554586');",
                          "err": {},
                          "uuid": "d9032e22-5d20-4a62-ab97-1ef2081ba68a",
                          "parentUUID": "1e44f899-395f-40f4-8511-d339e067cc04",
                          "isHook": false,
                          "skipped": false
                        },
                        {
                          "title": "sets up home phone number",
                          "fullTitle": "form submit transform transform5490Form creates claimant information sets up contact info sets up home phone number",
                          "timedOut": false,
                          "duration": 0,
                          "state": "passed",
                          "speed": "fast",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "(0, _chai.expect)(submissionObject.claimant.contactInfo.homePhoneNumber).to.eql('5125554585');",
                          "err": {},
                          "uuid": "811c5f96-8569-4f91-8536-803f5d322bc9",
                          "parentUUID": "1e44f899-395f-40f4-8511-d339e067cc04",
                          "isHook": false,
                          "skipped": false
                        },
                        {
                          "title": "sets up country code",
                          "fullTitle": "form submit transform transform5490Form creates claimant information sets up contact info sets up country code",
                          "timedOut": false,
                          "duration": 0,
                          "state": "passed",
                          "speed": "fast",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "(0, _chai.expect)(submissionObject.claimant.contactInfo.countryCode).to.eql('US');",
                          "err": {},
                          "uuid": "84f61b9c-b9ad-4a63-96f3-c993f3efc398",
                          "parentUUID": "1e44f899-395f-40f4-8511-d339e067cc04",
                          "isHook": false,
                          "skipped": false
                        },
                        {
                          "title": "sets up state code",
                          "fullTitle": "form submit transform transform5490Form creates claimant information sets up contact info sets up state code",
                          "timedOut": false,
                          "duration": 0,
                          "state": "passed",
                          "speed": "fast",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "(0, _chai.expect)(submissionObject.claimant.contactInfo.stateCode).to.eql('VA');",
                          "err": {},
                          "uuid": "da6b51f8-9e11-43c0-bd16-859c4e3ddbcc",
                          "parentUUID": "1e44f899-395f-40f4-8511-d339e067cc04",
                          "isHook": false,
                          "skipped": false
                        }
                      ],
                      "suites": [],
                      "passes": [
                        "74fdf60e-7b63-4d93-81c5-f642d0c2bacc",
                        "7e6bd648-63ce-4501-922f-872245648706",
                        "ba6b0458-7338-4a94-a43c-e6ce6426fa87",
                        "fac09bab-6313-437c-90e0-85009a037625",
                        "3b1d2171-84bf-4835-aa8b-11c1fbee2bc5",
                        "7d43e329-e520-449c-a003-2dc5694a4431",
                        "28a9f68f-6f31-4c20-b70d-6ab04169fe14",
                        "d9032e22-5d20-4a62-ab97-1ef2081ba68a",
                        "811c5f96-8569-4f91-8536-803f5d322bc9",
                        "84f61b9c-b9ad-4a63-96f3-c993f3efc398",
                        "da6b51f8-9e11-43c0-bd16-859c4e3ddbcc"
                      ],
                      "failures": [],
                      "pending": [],
                      "skipped": [],
                      "duration": 1,
                      "root": false,
                      "rootEmpty": false,
                      "_timeout": 10000
                    }
                  ],
                  "passes": [
                    "72c3e992-0949-4a71-9f95-87838e1b2e6d",
                    "d3908c0c-1562-4dd3-a983-62755e306e18",
                    "c58e5e4e-903a-4154-b372-bcc932038ce6",
                    "c152c679-0ae8-4fb2-a106-07fada641a17",
                    "0652634a-7817-47d3-b482-633a28f176f0",
                    "94a95381-10fd-4fef-8963-9e8ad2e4e826",
                    "e2120a0a-da06-41cf-826a-2fc9970123ef",
                    "642010a6-3afa-4994-a139-40d963c48cc5"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "0a90b660-2fb3-4019-825e-e32528a94cac",
                  "title": "Creates highSchoolDiplomaInfo",
                  "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/survivor-dependent-education-benefit/22-5490/tests/utils/form-submit-transform.unit.spec.js",
                  "file": "/src/applications/survivor-dependent-education-benefit/22-5490/tests/utils/form-submit-transform.unit.spec.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "should capture high school diploma info",
                      "fullTitle": "form submit transform transform5490Form Creates highSchoolDiplomaInfo should capture high school diploma info",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "var _submissionObject$hig, _submissionObject$hig2;\n(0, _chai.expect)((_submissionObject$hig = submissionObject.highSchoolDiplomaInfo) === null || _submissionObject$hig === void 0 ? void 0 : _submissionObject$hig.highSchoolDiplomaOrCertificate).to.eql(true);\n(0, _chai.expect)((_submissionObject$hig2 = submissionObject.highSchoolDiplomaInfo) === null || _submissionObject$hig2 === void 0 ? void 0 : _submissionObject$hig2.highSchoolDiplomaOrCertificateDate).to.eql('2010-01-02');",
                      "err": {},
                      "uuid": "8d5ec4c5-5de9-4aa7-8470-e06c51e0274f",
                      "parentUUID": "0a90b660-2fb3-4019-825e-e32528a94cac",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "8d5ec4c5-5de9-4aa7-8470-e06c51e0274f"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "0f96f094-9ccc-47fb-9e81-a29070c4f940",
                  "title": "creates service member information",
                  "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/survivor-dependent-education-benefit/22-5490/tests/utils/form-submit-transform.unit.spec.js",
                  "file": "/src/applications/survivor-dependent-education-benefit/22-5490/tests/utils/form-submit-transform.unit.spec.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "sets up first name",
                      "fullTitle": "form submit transform transform5490Form creates service member information sets up first name",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "(0, _chai.expect)(submissionObject.serviceMember.firstName).to.eql('test');",
                      "err": {},
                      "uuid": "a9fd38f8-e2ce-4db6-bc11-7ea9a27e0dca",
                      "parentUUID": "0f96f094-9ccc-47fb-9e81-a29070c4f940",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "sets up middle name",
                      "fullTitle": "form submit transform transform5490Form creates service member information sets up middle name",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "(0, _chai.expect)(submissionObject.serviceMember.middleName).to.eql('t');",
                      "err": {},
                      "uuid": "47fed94d-1ac5-4959-9a20-033107e6dd01",
                      "parentUUID": "0f96f094-9ccc-47fb-9e81-a29070c4f940",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "sets up last name",
                      "fullTitle": "form submit transform transform5490Form creates service member information sets up last name",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "(0, _chai.expect)(submissionObject.serviceMember.lastName).to.eql('testerson');",
                      "err": {},
                      "uuid": "6ec8d136-d36f-4102-b192-22988cd067b7",
                      "parentUUID": "0f96f094-9ccc-47fb-9e81-a29070c4f940",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "sets up suffix name",
                      "fullTitle": "form submit transform transform5490Form creates service member information sets up suffix name",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "(0, _chai.expect)(submissionObject.serviceMember.relationship).to.eql('spouse');",
                      "err": {},
                      "uuid": "120720b8-a610-4195-bcf4-5eabbae702a1",
                      "parentUUID": "0f96f094-9ccc-47fb-9e81-a29070c4f940",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "sets up birth date",
                      "fullTitle": "form submit transform transform5490Form creates service member information sets up birth date",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "(0, _chai.expect)(submissionObject.serviceMember.dateOfBirth).to.eql('1990-01-01');",
                      "err": {},
                      "uuid": "e7819e02-a9d3-4b4c-adee-21713fac0796",
                      "parentUUID": "0f96f094-9ccc-47fb-9e81-a29070c4f940",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "sets up ssn",
                      "fullTitle": "form submit transform transform5490Form creates service member information sets up ssn",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "(0, _chai.expect)(submissionObject.serviceMember.ssn).to.eql('123123123');",
                      "err": {},
                      "uuid": "62c4c52f-c663-44b3-84fb-04978d6b6fee",
                      "parentUUID": "0f96f094-9ccc-47fb-9e81-a29070c4f940",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "a9fd38f8-e2ce-4db6-bc11-7ea9a27e0dca",
                    "47fed94d-1ac5-4959-9a20-033107e6dd01",
                    "6ec8d136-d36f-4102-b192-22988cd067b7",
                    "120720b8-a610-4195-bcf4-5eabbae702a1",
                    "e7819e02-a9d3-4b4c-adee-21713fac0796",
                    "62c4c52f-c663-44b3-84fb-04978d6b6fee"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "06a0227c-523e-4782-a0c6-668e0949c3b2",
                  "title": "creates Direct Deposit information",
                  "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/survivor-dependent-education-benefit/22-5490/tests/utils/form-submit-transform.unit.spec.js",
                  "file": "/src/applications/survivor-dependent-education-benefit/22-5490/tests/utils/form-submit-transform.unit.spec.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "sets up direct deposit account type",
                      "fullTitle": "form submit transform transform5490Form creates Direct Deposit information sets up direct deposit account type",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "(0, _chai.expect)(submissionObject.directDeposit.directDepositAccountType).to.eql('checking');",
                      "err": {},
                      "uuid": "a7f09d47-9a78-4402-bd7f-b43c7071e43e",
                      "parentUUID": "06a0227c-523e-4782-a0c6-668e0949c3b2",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "sets up direct deposit account number",
                      "fullTitle": "form submit transform transform5490Form creates Direct Deposit information sets up direct deposit account number",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "slow",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "(0, _chai.expect)(submissionObject.directDeposit.directDepositAccountNumber).to.eql('123123123');",
                      "err": {},
                      "uuid": "46b2d96a-f8dc-470b-b4b8-306bf2fbea46",
                      "parentUUID": "06a0227c-523e-4782-a0c6-668e0949c3b2",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "sets up direct deposit routing number",
                      "fullTitle": "form submit transform transform5490Form creates Direct Deposit information sets up direct deposit routing number",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "(0, _chai.expect)(submissionObject.directDeposit.directDepositRoutingNumber).to.eql('123123124');",
                      "err": {},
                      "uuid": "4e8805a5-17fb-4a82-a60d-53de0061ac08",
                      "parentUUID": "06a0227c-523e-4782-a0c6-668e0949c3b2",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "a7f09d47-9a78-4402-bd7f-b43c7071e43e",
                    "46b2d96a-f8dc-470b-b4b8-306bf2fbea46",
                    "4e8805a5-17fb-4a82-a60d-53de0061ac08"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "7a121b96-a01a-4bce-bc3a-75ea50df5370",
                  "title": "Creates additionalConsiderations",
                  "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/survivor-dependent-education-benefit/22-5490/tests/utils/form-submit-transform.unit.spec.js",
                  "file": "/src/applications/survivor-dependent-education-benefit/22-5490/tests/utils/form-submit-transform.unit.spec.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "sets up outstandingFelony",
                      "fullTitle": "form submit transform transform5490Form Creates additionalConsiderations sets up outstandingFelony",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "(0, _chai.expect)(submissionObject.additionalConsiderations.outstandingFelony).to.eql('no');",
                      "err": {},
                      "uuid": "bce856d7-4b60-4297-9767-22ca5f3a0438",
                      "parentUUID": "7a121b96-a01a-4bce-bc3a-75ea50df5370",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "sets up marriageDate",
                      "fullTitle": "form submit transform transform5490Form Creates additionalConsiderations sets up marriageDate",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "(0, _chai.expect)(submissionObject.additionalConsiderations.marriageDate).to.eql('2015-01-01');",
                      "err": {},
                      "uuid": "3bb26637-8878-41ac-b0f2-45ae6747a542",
                      "parentUUID": "7a121b96-a01a-4bce-bc3a-75ea50df5370",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "sets up marriageStatus",
                      "fullTitle": "form submit transform transform5490Form Creates additionalConsiderations sets up marriageStatus",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "(0, _chai.expect)(submissionObject.additionalConsiderations.marriageStatus).to.eql('divorced');",
                      "err": {},
                      "uuid": "3ec4b296-2904-41a4-bb3d-0dcb8ccd0bb7",
                      "parentUUID": "7a121b96-a01a-4bce-bc3a-75ea50df5370",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "sets up remarriageDate",
                      "fullTitle": "form submit transform transform5490Form Creates additionalConsiderations sets up remarriageDate",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "(0, _chai.expect)(submissionObject.additionalConsiderations.remarriageDate).to.eql('2020-01-01');",
                      "err": {},
                      "uuid": "ebc7476a-d4c6-4b50-b804-24adc3c0f68b",
                      "parentUUID": "7a121b96-a01a-4bce-bc3a-75ea50df5370",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "sets up remarriedSinceDivorce",
                      "fullTitle": "form submit transform transform5490Form Creates additionalConsiderations sets up remarriedSinceDivorce",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "(0, _chai.expect)(submissionObject.additionalConsiderations.remarriedSinceDivorce).to.eql('yes');",
                      "err": {},
                      "uuid": "fd6a2000-be27-48fc-9e0d-ef31a21a4b89",
                      "parentUUID": "7a121b96-a01a-4bce-bc3a-75ea50df5370",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "bce856d7-4b60-4297-9767-22ca5f3a0438",
                    "3bb26637-8878-41ac-b0f2-45ae6747a542",
                    "3ec4b296-2904-41a4-bb3d-0dcb8ccd0bb7",
                    "ebc7476a-d4c6-4b50-b804-24adc3c0f68b",
                    "fd6a2000-be27-48fc-9e0d-ef31a21a4b89"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                }
              ],
              "passes": [],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "dcfea607-a74c-4f16-92ef-b3cc16ba0096",
          "title": "Phone validation",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/survivor-dependent-education-benefit/22-5490/tests/utils/validations.unit.spec.js",
          "file": "/src/applications/survivor-dependent-education-benefit/22-5490/tests/utils/validations.unit.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "validateHomePhone should add error",
              "fullTitle": "Phone validation validateHomePhone should add error",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var errors = {\n  addError: _sinon.default.spy()\n};\n(0, _validations.validateHomePhone)(errors, '1234', {\n  homePhone: {\n    isInternational: false\n  }\n});\n(0, _chai.expect)(errors.addError.called).to.be.true;",
              "err": {},
              "uuid": "d02311b5-9d7d-4630-b608-4c102362352e",
              "parentUUID": "dcfea607-a74c-4f16-92ef-b3cc16ba0096",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "validateMobilePhone should add error",
              "fullTitle": "Phone validation validateMobilePhone should add error",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var errors = {\n  addError: _sinon.default.spy()\n};\n(0, _validations.validateMobilePhone)(errors, '1234', {\n  mobilePhone: {\n    isInternational: false\n  }\n});\n(0, _chai.expect)(errors.addError.called).to.be.true;",
              "err": {},
              "uuid": "f6f4c386-5bad-420d-bd4d-67b14a23409f",
              "parentUUID": "dcfea607-a74c-4f16-92ef-b3cc16ba0096",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "validateEmail should add error",
              "fullTitle": "Phone validation validateEmail should add error",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var errors = {\n  addError: _sinon.default.spy()\n};\n(0, _validations.validateEmail)(errors, 'test');\n(0, _chai.expect)(errors.addError.called).to.be.true;",
              "err": {},
              "uuid": "24202879-6ba4-4688-ae20-3c95ebe273aa",
              "parentUUID": "dcfea607-a74c-4f16-92ef-b3cc16ba0096",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "validateEffectiveDate should add error",
              "fullTitle": "Phone validation validateEffectiveDate should add error",
              "timedOut": false,
              "duration": 3,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var errors = {\n  addError: _sinon.default.spy()\n};\n(0, _validations.validateEffectiveDate)(errors, '1990-01-01');\n(0, _chai.expect)(errors.addError.called).to.be.true;",
              "err": {},
              "uuid": "c20b80b1-7a41-4c4b-9c3f-acd232008c44",
              "parentUUID": "dcfea607-a74c-4f16-92ef-b3cc16ba0096",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "d02311b5-9d7d-4630-b608-4c102362352e",
            "f6f4c386-5bad-420d-bd4d-67b14a23409f",
            "24202879-6ba4-4688-ae20-3c95ebe273aa",
            "c20b80b1-7a41-4c4b-9c3f-acd232008c44"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 4,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 10000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.7.3"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "undefined_2025-03-03T222533097Z",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "min",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "id": "default",
        "consoleReporter": "min",
        "reportDir": "mocha/results",
        "reportFilename": "undefined_2025-03-03T222533097Z",
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}