{
  "stats": {
    "suites": 77,
    "tests": 210,
    "passes": 207,
    "pending": 3,
    "failures": 0,
    "start": "2025-03-03T22:15:59.708Z",
    "end": "2025-03-03T22:16:02.850Z",
    "duration": 3142,
    "testsRegistered": 210,
    "passPercent": 100,
    "pendingPercent": 1.4285714285714286,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "610758bf-ec8f-44d0-82c2-1e5fef218bfa",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [
        {
          "title": "\"before each\" hook: beforeEach in \"{root}\"",
          "fullTitle": "\"before each\" hook: beforeEach in \"{root}\"",
          "timedOut": false,
          "duration": 4,
          "state": null,
          "speed": null,
          "pass": false,
          "fail": false,
          "pending": false,
          "context": null,
          "code": "cov_5fzq6lsur().f[20]++;\ncov_5fzq6lsur().s[70]++;\nsetupJSDom();\ncov_5fzq6lsur().s[71]++;\nresetFetch();\ncov_5fzq6lsur().s[72]++;\ncleanupStorage();\ncov_5fzq6lsur().s[73]++;\nif (isStressTest == 'false') {\n  cov_5fzq6lsur().b[12][0]++;\n  cov_5fzq6lsur().s[74]++;\n  checkAllowList(this);\n} else {\n  cov_5fzq6lsur().b[12][1]++;\n}\ncov_5fzq6lsur().s[75]++;\nif ((cov_5fzq6lsur().b[14][0]++, process.env.CI) || (cov_5fzq6lsur().b[14][1]++, ['trace', 'debug'].includes(process.env.LOG_LEVEL))) {\n  cov_5fzq6lsur().b[13][0]++;\n  cov_5fzq6lsur().s[76]++;\n  console.log('running: ', this.currentTest.file.slice(this.currentTest.file.indexOf('src')));\n} else {\n  cov_5fzq6lsur().b[13][1]++;\n}",
          "err": {},
          "uuid": "b549ad3f-f80e-45f2-b6ba-4490abc40bb2",
          "parentUUID": "610758bf-ec8f-44d0-82c2-1e5fef218bfa",
          "isHook": true,
          "skipped": false
        }
      ],
      "afterHooks": [
        {
          "title": "\"after each\" hook: afterEach in \"{root}\"",
          "fullTitle": "\"after each\" hook: afterEach in \"{root}\"",
          "timedOut": false,
          "duration": 0,
          "state": null,
          "speed": null,
          "pass": false,
          "fail": false,
          "pending": false,
          "context": null,
          "code": "cov_5fzq6lsur().f[21]++;\ncov_5fzq6lsur().s[77]++;\ncleanupStorage();\ncov_5fzq6lsur().s[78]++;\nflushPromises();",
          "err": {},
          "uuid": "ff51b34f-0a83-4873-90ae-b099e18faed5",
          "parentUUID": "610758bf-ec8f-44d0-82c2-1e5fef218bfa",
          "isHook": true,
          "skipped": false
        },
        {
          "title": "\"after each\" hook in \"{root}\"",
          "fullTitle": "\"after each\" hook in \"{root}\"",
          "timedOut": false,
          "duration": 0,
          "state": null,
          "speed": null,
          "pass": false,
          "fail": false,
          "pending": false,
          "context": null,
          "code": "(0, _pure.cleanup)();",
          "err": {},
          "uuid": "101b0950-4aa2-4c5f-80bd-3a57cd55d77a",
          "parentUUID": "610758bf-ec8f-44d0-82c2-1e5fef218bfa",
          "isHook": true,
          "skipped": false
        }
      ],
      "tests": [],
      "suites": [
        {
          "uuid": "c0826153-eaed-46f3-b887-b7c194d376ca",
          "title": "AutosuggestField in Pre-need-integration",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/pre-need-integration/tests/components/AutosugggestField.unit.spec.jsx",
          "file": "/src/applications/pre-need-integration/tests/components/AutosugggestField.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should render the component correctly",
              "fullTitle": "AutosuggestField in Pre-need-integration should render the component correctly",
              "timedOut": false,
              "duration": 6,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var mockOnChange = _sinon.default.spy();\nvar mockOnBlur = _sinon.default.spy();\nvar uiSchema = {\n  'ui:options': {\n    labels: {\n      1: 'Label 1'\n    },\n    getOptions: _sinon.default.stub().resolves([]),\n    debounceRate: 300,\n    maxOptions: 5,\n    queryForResults: true\n  }\n};\nvar schema = {\n  enum: ['1', '2', '3'],\n  enumNames: ['Option 1', 'Option 2', 'Option 3']\n};\nvar formData = {\n  1: 'Label 1'\n};\nvar idSchema = {\n  $id: 'test-id'\n};\nvar formContext = {\n  reviewMode: false\n};\nvar wrapper = (0, _enzyme.shallow)(/*#__PURE__*/_react.default.createElement(_AutosugggestField.default, {\n  uiSchema: uiSchema,\n  schema: schema,\n  formData: formData,\n  idSchema: idSchema,\n  formContext: formContext,\n  onChange: mockOnChange,\n  onBlur: mockOnBlur\n}));\n(0, _chai.expect)(wrapper.exists()).to.be.true;\nwrapper.unmount();",
              "err": {},
              "uuid": "f3f6cf0e-4319-4d74-a6b4-3f7a467a2155",
              "parentUUID": "c0826153-eaed-46f3-b887-b7c194d376ca",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should render a read-only view in review mode",
              "fullTitle": "AutosuggestField in Pre-need-integration should render a read-only view in review mode",
              "timedOut": false,
              "duration": 42,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var mockOnChange = _sinon.default.spy();\nvar mockOnBlur = _sinon.default.spy();\nvar uiSchema = {\n  'ui:options': {\n    labels: {\n      1: 'Label 1'\n    },\n    getOptions: _sinon.default.stub().resolves([])\n  }\n};\nvar schema = {\n  enum: ['1', '2', '3'],\n  enumNames: ['Option 1', 'Option 2', 'Option 3']\n};\nvar formData = {\n  1: 'Label 1'\n};\nvar idSchema = {\n  $id: 'test-id'\n};\nvar formContext = {\n  reviewMode: true\n};\nvar wrapper = (0, _enzyme.mount)(/*#__PURE__*/_react.default.createElement(_AutosugggestField.default, {\n  uiSchema: uiSchema,\n  schema: schema,\n  formData: formData,\n  idSchema: idSchema,\n  formContext: formContext,\n  onChange: mockOnChange,\n  onBlur: mockOnBlur\n}));\n(0, _chai.expect)(wrapper.find('.review-row').exists()).to.be.false;\nwrapper.unmount();",
              "err": {},
              "uuid": "b47d6c8d-daf2-4caa-9b4d-af1c6ef4d04e",
              "parentUUID": "c0826153-eaed-46f3-b887-b7c194d376ca",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should use enum and generate suggestions when getOptions is not provided",
              "fullTitle": "AutosuggestField in Pre-need-integration should use enum and generate suggestions when getOptions is not provided",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var mockOnChange = _sinon.default.spy();\nvar mockOnBlur = _sinon.default.spy();\nvar uiSchema = {\n  'ui:options': {\n    labels: {\n      1: 'Label 1',\n      2: 'Label 2',\n      3: 'Label 3'\n    },\n    debounceRate: 300,\n    maxOptions: 5,\n    queryForResults: false\n  }\n};\nvar schema = {\n  enum: ['1', '2', '3'],\n  enumNames: ['Option 1', 'Option 2', 'Option 3']\n};\nvar formData = {\n  widget: 'autosuggest',\n  label: ''\n};\nvar idSchema = {\n  $id: 'test-id'\n};\nvar formContext = {\n  reviewMode: false\n};\nvar wrapper = (0, _enzyme.shallow)(/*#__PURE__*/_react.default.createElement(_AutosugggestField.default, {\n  uiSchema: uiSchema,\n  schema: schema,\n  formData: formData,\n  idSchema: idSchema,\n  formContext: formContext,\n  onChange: mockOnChange,\n  onBlur: mockOnBlur\n}));\n(0, _chai.expect)(wrapper.instance().useEnum).to.be.true;\n(0, _chai.expect)(wrapper.state('suggestions')).to.deep.equal([{\n  id: '1',\n  label: 'Label 1'\n}, {\n  id: '2',\n  label: 'Label 2'\n}, {\n  id: '3',\n  label: 'Label 3'\n}]);\nwrapper.unmount();",
              "err": {},
              "uuid": "ed917b92-057f-4b1f-a870-44dd80aed7f9",
              "parentUUID": "c0826153-eaed-46f3-b887-b7c194d376ca",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return correct form data based on useEnum and freeInput",
              "fullTitle": "AutosuggestField in Pre-need-integration should return correct form data based on useEnum and freeInput",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var mockOnChange = _sinon.default.spy();\nvar mockOnBlur = _sinon.default.spy();\nvar uiSchema = {\n  'ui:options': {\n    labels: {\n      1: 'Label 1'\n    },\n    freeInput: true\n  }\n};\nvar schema = {\n  enum: ['1', '2', '3'],\n  enumNames: ['Option 1', 'Option 2', 'Option 3']\n};\nvar formData = {\n  widget: 'autosuggest',\n  label: ''\n};\nvar idSchema = {\n  $id: 'test-id'\n};\nvar formContext = {\n  reviewMode: false\n};\nvar wrapper = (0, _enzyme.shallow)(/*#__PURE__*/_react.default.createElement(_AutosugggestField.default, {\n  uiSchema: uiSchema,\n  schema: schema,\n  formData: formData,\n  idSchema: idSchema,\n  formContext: formContext,\n  onChange: mockOnChange,\n  onBlur: mockOnBlur\n}));\nwrapper.instance().useEnum = true;\nvar formDataResult = wrapper.instance().getFormData({\n  id: '1',\n  label: 'Option 1'\n});\n(0, _chai.expect)(formDataResult).to.equal('1');\nwrapper.instance().useEnum = false;\nformDataResult = wrapper.instance().getFormData({\n  id: '1',\n  label: 'Option 1'\n});\n(0, _chai.expect)(formDataResult).to.equal('Option 1');\nwrapper.unmount();",
              "err": {},
              "uuid": "55c6ae0b-e01c-4046-bf59-19c5e807e64d",
              "parentUUID": "c0826153-eaed-46f3-b887-b7c194d376ca",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return correct item from input value and suggestions",
              "fullTitle": "AutosuggestField in Pre-need-integration should return correct item from input value and suggestions",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var mockOnChange = _sinon.default.spy();\nvar mockOnBlur = _sinon.default.spy();\nvar uiSchema = {\n  'ui:options': {\n    labels: {\n      1: 'Label 1'\n    }\n  }\n};\nvar schema = {\n  enum: ['1', '2', '3'],\n  enumNames: ['Option 1', 'Option 2', 'Option 3']\n};\nvar formData = {\n  widget: 'autosuggest',\n  label: ''\n};\nvar idSchema = {\n  $id: 'test-id'\n};\nvar formContext = {\n  reviewMode: false\n};\nvar wrapper = (0, _enzyme.shallow)(/*#__PURE__*/_react.default.createElement(_AutosugggestField.default, {\n  uiSchema: uiSchema,\n  schema: schema,\n  formData: formData,\n  idSchema: idSchema,\n  formContext: formContext,\n  onChange: mockOnChange,\n  onBlur: mockOnBlur\n}));\nvar suggestions = [{\n  id: '1',\n  label: 'Option 1'\n}, {\n  id: '2',\n  label: 'Option 2'\n}];\nwrapper.instance().useEnum = true;\nvar item = wrapper.instance().getItemFromInput('Option 1', suggestions, uiSchema['ui:options']);\n(0, _chai.expect)(item).to.equal('Option 1');\nwrapper.unmount();",
              "err": {},
              "uuid": "78f71a3e-1792-42df-a129-6ce43aef3b21",
              "parentUUID": "c0826153-eaed-46f3-b887-b7c194d376ca",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should handle input value change",
              "fullTitle": "AutosuggestField in Pre-need-integration should handle input value change",
              "timedOut": false,
              "duration": 5,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var mockOnChange = _sinon.default.spy();\nvar mockOnBlur = _sinon.default.spy();\nvar uiSchema = {\n  'ui:options': {\n    labels: {\n      1: 'Label 1'\n    },\n    queryForResults: true,\n    getOptions: _sinon.default.stub().resolves([])\n  }\n};\nvar schema = {\n  enum: ['1', '2', '3'],\n  enumNames: ['Option 1', 'Option 2', 'Option 3']\n};\nvar formData = {\n  widget: 'autosuggest',\n  label: ''\n};\nvar idSchema = {\n  $id: 'test-id'\n};\nvar formContext = {\n  reviewMode: false\n};\nvar wrapper = (0, _enzyme.shallow)(/*#__PURE__*/_react.default.createElement(_AutosugggestField.default, {\n  uiSchema: uiSchema,\n  schema: schema,\n  formData: formData,\n  idSchema: idSchema,\n  formContext: formContext,\n  onChange: mockOnChange,\n  onBlur: mockOnBlur\n}));\nvar instance = wrapper.instance();\n_sinon.default.spy(instance, 'debouncedGetOptions');\n_sinon.default.spy(instance, 'getItemFromInput');\n_sinon.default.spy(instance, 'getSuggestions');\ninstance.handleInputValueChange('new value');\n(0, _chai.expect)(instance.debouncedGetOptions.calledWith('new value')).to.be.true;\n(0, _chai.expect)(instance.getItemFromInput.calledWith('new value', instance.state.suggestions, uiSchema['ui:options'])).to.be.true;\n(0, _chai.expect)(mockOnChange.called).to.be.true;\n(0, _chai.expect)(instance.state.input).to.equal('new value');\n(0, _chai.expect)(instance.getSuggestions.calledWith(instance.state.options, 'new value')).to.be.true;\ninstance.handleInputValueChange('');\n(0, _chai.expect)(mockOnChange.calledWith()).to.be.true;\n(0, _chai.expect)(instance.state.input).to.equal('');\nwrapper.unmount();",
              "err": {},
              "uuid": "7522823f-8c7f-4e67-a5db-46c4cec18abb",
              "parentUUID": "c0826153-eaed-46f3-b887-b7c194d376ca",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should handle selection change",
              "fullTitle": "AutosuggestField in Pre-need-integration should handle selection change",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var mockOnChange = _sinon.default.spy();\nvar mockOnBlur = _sinon.default.spy();\nvar uiSchema = {\n  'ui:options': {\n    labels: {\n      1: 'Label 1'\n    }\n  }\n};\nvar schema = {\n  enum: ['1', '2', '3'],\n  enumNames: ['Option 1', 'Option 2', 'Option 3']\n};\nvar formData = {\n  widget: 'autosuggest',\n  label: ''\n};\nvar idSchema = {\n  $id: 'test-id'\n};\nvar formContext = {\n  reviewMode: false\n};\nvar wrapper = (0, _enzyme.shallow)(/*#__PURE__*/_react.default.createElement(_AutosugggestField.default, {\n  uiSchema: uiSchema,\n  schema: schema,\n  formData: formData,\n  idSchema: idSchema,\n  formContext: formContext,\n  onChange: mockOnChange,\n  onBlur: mockOnBlur\n}));\nvar instance = wrapper.instance();\n_sinon.default.spy(instance, 'getFormData');\nvar selectedItem = {\n  id: '1',\n  label: 'Option 1'\n};\ninstance.handleChange(selectedItem);\n(0, _chai.expect)(instance.getFormData.calledWith(selectedItem)).to.be.true;\n(0, _chai.expect)(mockOnChange.calledWith('1')).to.be.true;\n(0, _chai.expect)(instance.state.input).to.equal('Option 1');\nwrapper.unmount();",
              "err": {},
              "uuid": "2fdfd3bc-9529-41db-94a5-3757586fdc8e",
              "parentUUID": "c0826153-eaed-46f3-b887-b7c194d376ca",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f3f6cf0e-4319-4d74-a6b4-3f7a467a2155",
            "b47d6c8d-daf2-4caa-9b4d-af1c6ef4d04e",
            "ed917b92-057f-4b1f-a870-44dd80aed7f9",
            "55c6ae0b-e01c-4046-bf59-19c5e807e64d",
            "78f71a3e-1792-42df-a129-6ce43aef3b21",
            "7522823f-8c7f-4e67-a5db-46c4cec18abb",
            "2fdfd3bc-9529-41db-94a5-3757586fdc8e"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 59,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "9fe3dad1-aad0-4cf3-83c2-4d1254db89d4",
          "title": "CollapsiblePanel in Pre-need Supporting files",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/pre-need-integration/tests/components/CollapsiblePanel.unit.spec.jsx",
          "file": "/src/applications/pre-need-integration/tests/components/CollapsiblePanel.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should render",
              "fullTitle": "CollapsiblePanel in Pre-need Supporting files should render",
              "timedOut": false,
              "duration": 6,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var wrapper = (0, _enzyme.mount)(/*#__PURE__*/_react.default.createElement(_CollapsiblePanel.default, props));\n(0, _chai.expect)(wrapper.find('button').length).to.equal(1);\nwrapper.unmount();",
              "err": {},
              "uuid": "db7cca3b-487b-48ae-9ac8-5118d4e470f2",
              "parentUUID": "9fe3dad1-aad0-4cf3-83c2-4d1254db89d4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should expand collapsable panel when clicked",
              "fullTitle": "CollapsiblePanel in Pre-need Supporting files should expand collapsable panel when clicked",
              "timedOut": false,
              "duration": 10,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var wrapper = (0, _enzyme.mount)(/*#__PURE__*/_react.default.createElement(_CollapsiblePanel.default, props));\nvar expandedContent = wrapper.find(\"#collapsible-\".concat(props.header));\n(0, _chai.expect)(expandedContent.exists()).to.be.false;\nvar button = wrapper.find('#collapsibleButton3');\nbutton.simulate('click');\nexpandedContent = wrapper.find(\"#collapsible-\".concat(props.header));\n(0, _chai.expect)(expandedContent.exists()).to.be.true;\nwrapper.unmount();",
              "err": {},
              "uuid": "16c51058-0db2-45bf-be4b-2d6fe7a796b6",
              "parentUUID": "9fe3dad1-aad0-4cf3-83c2-4d1254db89d4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should have expanded content when clicked",
              "fullTitle": "CollapsiblePanel in Pre-need Supporting files should have expanded content when clicked",
              "timedOut": false,
              "duration": 7,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var wrapper = (0, _enzyme.mount)(/*#__PURE__*/_react.default.createElement(_CollapsiblePanel.default, props));\nvar button = wrapper.find('#collapsibleButton3');\nbutton.simulate('click');\nvar expandedContent = wrapper.find(\"#collapsible-\".concat(props.header));\n(0, _chai.expect)(expandedContent.at(0).text()).to.equal('test content');\nwrapper.unmount();",
              "err": {},
              "uuid": "dadc8d25-f28e-40f2-8657-812f1eb4c3da",
              "parentUUID": "9fe3dad1-aad0-4cf3-83c2-4d1254db89d4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should have default expanded content when clicked",
              "fullTitle": "CollapsiblePanel in Pre-need Supporting files should have default expanded content when clicked",
              "timedOut": false,
              "duration": 7,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var wrapper = (0, _enzyme.mount)(/*#__PURE__*/_react.default.createElement(_CollapsiblePanel.default, null));\nvar button = wrapper.find('#collapsibleButton3');\nbutton.simulate('click');\nvar expandedContent = wrapper.find('#collapsible-3');\n(0, _chai.expect)(expandedContent.at(0).text()).to.equal('');\nwrapper.unmount();",
              "err": {},
              "uuid": "64a64dc8-e72d-4373-8ec3-2782b48c15d4",
              "parentUUID": "9fe3dad1-aad0-4cf3-83c2-4d1254db89d4",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "db7cca3b-487b-48ae-9ac8-5118d4e470f2",
            "16c51058-0db2-45bf-be4b-2d6fe7a796b6",
            "dadc8d25-f28e-40f2-8657-812f1eb4c3da",
            "64a64dc8-e72d-4373-8ec3-2782b48c15d4"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 30,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "d4ae555c-3bcd-4a92-b99b-3c25822ca426",
          "title": "CurrentlyBuriedDescription Component",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/pre-need-integration/tests/components/CurrentlyBuriedDescription.unit.spec.jsx",
          "file": "/src/applications/pre-need-integration/tests/components/CurrentlyBuriedDescription.unit.spec.jsx",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"CurrentlyBuriedDescription Component\"",
              "fullTitle": "CurrentlyBuriedDescription Component \"before each\" hook in \"CurrentlyBuriedDescription Component\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "isVeteranStub = _sinon.default.stub(helpers, 'isVeteran');\nisAuthorizedAgentStub = _sinon.default.stub(helpers, 'isAuthorizedAgent');",
              "err": {},
              "uuid": "cbf6ad38-6b39-4540-a692-048e6c043343",
              "parentUUID": "d4ae555c-3bcd-4a92-b99b-3c25822ca426",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after each\" hook in \"CurrentlyBuriedDescription Component\"",
              "fullTitle": "CurrentlyBuriedDescription Component \"after each\" hook in \"CurrentlyBuriedDescription Component\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "isVeteranStub.restore();\nisAuthorizedAgentStub.restore();",
              "err": {},
              "uuid": "a49e8258-65bb-44fd-8e96-443542cffe18",
              "parentUUID": "d4ae555c-3bcd-4a92-b99b-3c25822ca426",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "should return text for veteran without authorized agent",
              "fullTitle": "CurrentlyBuriedDescription Component should return text for veteran without authorized agent",
              "timedOut": false,
              "duration": 4,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "isVeteranStub.returns(true);\nisAuthorizedAgentStub.returns(false);\nvar wrapper = renderComponent({\n  form: {\n    data: {}\n  }\n});\n(0, _chai.expect)(wrapper.text()).to.equal('Provide the details of the person(s) currently buried in a VA national cemetery under your eligibility.');",
              "err": {},
              "uuid": "45d6af1c-e4b6-4b47-ad91-90ca5caa0935",
              "parentUUID": "d4ae555c-3bcd-4a92-b99b-3c25822ca426",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return text for veteran with authorized agent",
              "fullTitle": "CurrentlyBuriedDescription Component should return text for veteran with authorized agent",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "isVeteranStub.returns(true);\nisAuthorizedAgentStub.returns(true);\nvar wrapper = renderComponent({\n  form: {\n    data: {}\n  }\n});\n(0, _chai.expect)(wrapper.text()).to.equal('Provide the details of the person(s) currently buried in a VA national cemetery under the applicant’s eligibility.');",
              "err": {},
              "uuid": "d27def6f-13cf-48e5-82d1-14343b28a194",
              "parentUUID": "d4ae555c-3bcd-4a92-b99b-3c25822ca426",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return text for non-veteran",
              "fullTitle": "CurrentlyBuriedDescription Component should return text for non-veteran",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "isVeteranStub.returns(false);\nisAuthorizedAgentStub.returns(false);\nvar wrapper = renderComponent({\n  form: {\n    data: {}\n  }\n});\n(0, _chai.expect)(wrapper.text()).to.equal('Provide the details of the person(s) currently buried in a VA national cemetery under the sponsor’s eligibility.');",
              "err": {},
              "uuid": "da3258cf-8728-4b86-8d6c-aa77b3ab359c",
              "parentUUID": "d4ae555c-3bcd-4a92-b99b-3c25822ca426",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "45d6af1c-e4b6-4b47-ad91-90ca5caa0935",
            "d27def6f-13cf-48e5-82d1-14343b28a194",
            "da3258cf-8728-4b86-8d6c-aa77b3ab359c"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 8,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "ea8fe9d0-c784-4ce8-9928-940a2356dd40",
          "title": "DeceasedPersons Component",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/pre-need-integration/tests/components/DeceasedPersons.unit.spec.jsx",
          "file": "/src/applications/pre-need-integration/tests/components/DeceasedPersons.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should render without errors",
              "fullTitle": "DeceasedPersons Component should render without errors",
              "timedOut": false,
              "duration": 8,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var wrapper = (0, _enzyme.mount)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n  store: store\n}, /*#__PURE__*/_react.default.createElement(_DeceasedPersons.default, defaultProps)));\n(0, _chai.expect)(wrapper.find('.va-growable').exists()).to.be.true;\nwrapper.unmount();",
              "err": {},
              "uuid": "742fcdab-2b3d-432a-8da3-6effdd53cb29",
              "parentUUID": "ea8fe9d0-c784-4ce8-9928-940a2356dd40",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should throw an error if no viewField is provided",
              "fullTitle": "DeceasedPersons Component should throw an error if no viewField is provided",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var propsWithoutViewField = _objectSpread(_objectSpread({}, defaultProps), {}, {\n  uiSchema: {\n    'ui:options': {}\n  }\n});\n(0, _chai.expect)(function () {\n  return _skinDeep.default.shallowRender(/*#__PURE__*/_react.default.createElement(_DeceasedPersons.default, propsWithoutViewField));\n}).to.throw('No viewField found in uiSchema for DeceasedPersons root.');",
              "err": {},
              "uuid": "4b775621-871b-4d68-92ee-71335a6d04a7",
              "parentUUID": "ea8fe9d0-c784-4ce8-9928-940a2356dd40",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should handle edit correctly",
              "fullTitle": "DeceasedPersons Component should handle edit correctly",
              "timedOut": false,
              "duration": 24,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var wrapper = (0, _enzyme.mount)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n  store: store\n}, /*#__PURE__*/_react.default.createElement(_DeceasedPersons.default, defaultProps)));\nvar instance = wrapper.find(_DeceasedPersons.default).instance();\ninstance.scrollToRow = _sinon.default.spy();\ninstance.focusOnFirstFocusableElement = _sinon.default.spy();\ninstance.handleEdit(0);\n(0, _chai.expect)(instance.state.editing[0]).to.be.true;\n(0, _chai.expect)(instance.scrollToRow.calledOnce).to.be.true;\n(0, _chai.expect)(instance.focusOnFirstFocusableElement.calledOnce).to.be.true;\nwrapper.unmount();",
              "err": {},
              "uuid": "5ca7bbb5-f3d3-4a42-b60d-bcd7a50dbc0d",
              "parentUUID": "ea8fe9d0-c784-4ce8-9928-940a2356dd40",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should handle update correctly when valid",
              "fullTitle": "DeceasedPersons Component should handle update correctly when valid",
              "timedOut": false,
              "duration": 11,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var wrapper = (0, _enzyme.mount)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n  store: store\n}, /*#__PURE__*/_react.default.createElement(_DeceasedPersons.default, defaultProps)));\nvar instance = wrapper.find(_DeceasedPersons.default).instance();\ninstance.scrollToTop = _sinon.default.spy();\ninstance.focusOnFirstFocusableElement = _sinon.default.spy();\ninstance.handleUpdate(0);\n(0, _chai.expect)(instance.state.editing[0]).to.be.false;\n(0, _chai.expect)(instance.state.showSave[0]).to.be.false;\n(0, _chai.expect)(instance.scrollToTop.calledOnce).to.be.true;\n(0, _chai.expect)(instance.focusOnFirstFocusableElement.calledOnce).to.be.true;\nwrapper.unmount();",
              "err": {},
              "uuid": "fd49efe2-8dda-4622-909b-32b8c343ca49",
              "parentUUID": "ea8fe9d0-c784-4ce8-9928-940a2356dd40",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should handle update correctly when invalid",
              "fullTitle": "DeceasedPersons Component should handle update correctly when invalid",
              "timedOut": false,
              "duration": 52,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var errorProps = _objectSpread(_objectSpread({}, defaultProps), {}, {\n  errorSchema: {\n    0: {\n      __errors: ['Error']\n    }\n  }\n});\nvar wrapper = (0, _enzyme.mount)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n  store: store\n}, /*#__PURE__*/_react.default.createElement(_DeceasedPersons.default, errorProps)));\nvar instance = wrapper.find(_DeceasedPersons.default).instance();\ninstance.scrollToFirstError = _sinon.default.spy();\ninstance.handleUpdate(0);\n(0, _chai.expect)(defaultProps.registry.formContext.setTouched.calledOnce).to.be.true;\n(0, _chai.expect)(instance.scrollToFirstError.calledOnce).to.be.false;\nwrapper.unmount();",
              "err": {},
              "uuid": "2a462e45-1454-4490-b987-63e175c447ed",
              "parentUUID": "ea8fe9d0-c784-4ce8-9928-940a2356dd40",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should handle add correctly",
              "fullTitle": "DeceasedPersons Component should handle add correctly",
              "timedOut": false,
              "duration": 11,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var wrapper = (0, _enzyme.mount)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n  store: store\n}, /*#__PURE__*/_react.default.createElement(_DeceasedPersons.default, defaultProps)));\nvar instance = wrapper.find(_DeceasedPersons.default).instance();\ninstance.scrollToRow = _sinon.default.spy();\ninstance.focusOnFirstFocusableElement = _sinon.default.spy();\ninstance.handleAdd();\n(0, _chai.expect)(defaultProps.onChange.calledOnce).to.be.true;\n(0, _chai.expect)(instance.state.editing.length).to.equal(2);\n(0, _chai.expect)(instance.scrollToRow.calledOnce).to.be.true;\n(0, _chai.expect)(instance.focusOnFirstFocusableElement.calledOnce).to.be.true;\nwrapper.unmount();",
              "err": {},
              "uuid": "a8be3db4-360a-4c07-a526-97b95a1c26a4",
              "parentUUID": "ea8fe9d0-c784-4ce8-9928-940a2356dd40",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should handle remove correctly",
              "fullTitle": "DeceasedPersons Component should handle remove correctly",
              "timedOut": false,
              "duration": 17,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var wrapper = (0, _enzyme.mount)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n  store: store\n}, /*#__PURE__*/_react.default.createElement(_DeceasedPersons.default, defaultProps)));\nvar instance = wrapper.find(_DeceasedPersons.default).instance();\ninstance.scrollToTop = _sinon.default.spy();\ninstance.handleRemove(0, false);\n(0, _chai.expect)(defaultProps.onChange.calledOnce).to.be.false;\n(0, _chai.expect)(instance.state.editing.length).to.equal(0);\n(0, _chai.expect)(instance.scrollToTop.calledOnce).to.be.true;\nwrapper.unmount();",
              "err": {},
              "uuid": "6bc0a5a3-040c-40f1-b7e7-20763e05bf67",
              "parentUUID": "ea8fe9d0-c784-4ce8-9928-940a2356dd40",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should handle remove modal correctly",
              "fullTitle": "DeceasedPersons Component should handle remove modal correctly",
              "timedOut": false,
              "duration": 9,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var wrapper = (0, _enzyme.mount)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n  store: store\n}, /*#__PURE__*/_react.default.createElement(_DeceasedPersons.default, defaultProps)));\nvar instance = wrapper.find(_DeceasedPersons.default).instance();\ninstance.scrollToTop = _sinon.default.spy();\ninstance.handleRemoveModal(0);\n(0, _chai.expect)(defaultProps.onChange.calledOnce).to.be.false;\n(0, _chai.expect)(instance.state.editing.length).to.equal(0);\n(0, _chai.expect)(instance.scrollToTop.calledOnce).to.be.true;\nwrapper.unmount();",
              "err": {},
              "uuid": "451d3582-8094-4749-bf3c-da964983a4b2",
              "parentUUID": "ea8fe9d0-c784-4ce8-9928-940a2356dd40",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should close remove modal correctly",
              "fullTitle": "DeceasedPersons Component should close remove modal correctly",
              "timedOut": false,
              "duration": 8,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var wrapper = (0, _enzyme.mount)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n  store: store\n}, /*#__PURE__*/_react.default.createElement(_DeceasedPersons.default, defaultProps)));\nvar instance = wrapper.find(_DeceasedPersons.default).instance();\ninstance.closeRemoveModal(0);\n(0, _chai.expect)(instance.state.removing.length).to.equal(0);\nwrapper.unmount();",
              "err": {},
              "uuid": "04130ce1-0371-4b03-a2e9-4527bc320ad1",
              "parentUUID": "ea8fe9d0-c784-4ce8-9928-940a2356dd40",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should handle item change correctly",
              "fullTitle": "DeceasedPersons Component should handle item change correctly",
              "timedOut": false,
              "duration": 7,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var wrapper = (0, _enzyme.mount)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n  store: store\n}, /*#__PURE__*/_react.default.createElement(_DeceasedPersons.default, defaultProps)));\nvar instance = wrapper.find(_DeceasedPersons.default).instance();\ninstance.onItemChange(0, {\n  name: {\n    first: 'Jane',\n    last: 'Doe'\n  }\n});\n(0, _chai.expect)(defaultProps.onChange.calledOnce).to.be.false;\nwrapper.unmount();",
              "err": {},
              "uuid": "e3815224-c1f4-4bbf-9111-fe6277093c9a",
              "parentUUID": "ea8fe9d0-c784-4ce8-9928-940a2356dd40",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "742fcdab-2b3d-432a-8da3-6effdd53cb29",
            "4b775621-871b-4d68-92ee-71335a6d04a7",
            "5ca7bbb5-f3d3-4a42-b60d-bcd7a50dbc0d",
            "fd49efe2-8dda-4622-909b-32b8c343ca49",
            "2a462e45-1454-4490-b987-63e175c447ed",
            "a8be3db4-360a-4c07-a526-97b95a1c26a4",
            "6bc0a5a3-040c-40f1-b7e7-20763e05bf67",
            "451d3582-8094-4749-bf3c-da964983a4b2",
            "04130ce1-0371-4b03-a2e9-4527bc320ad1",
            "e3815224-c1f4-4bbf-9111-fe6277093c9a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 148,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "f272374d-6f69-4aec-ba6b-c978f673723f",
          "title": "DownloadLink in Pre-need components",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/pre-need-integration/tests/components/DownloadLink.unit.spec.jsx",
          "file": "/src/applications/pre-need-integration/tests/components/DownloadLink.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should render",
              "fullTitle": "DownloadLink in Pre-need components should render",
              "timedOut": false,
              "duration": 3,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var wrapper = (0, _enzyme.mount)(/*#__PURE__*/_react.default.createElement(_DownloadLink.default, props));\n(0, _chai.expect)(wrapper.find('a').length).to.equal(1);\nwrapper.unmount();",
              "err": {},
              "uuid": "4cebd715-c9d5-4be0-b6e8-06d9950b8fd8",
              "parentUUID": "f272374d-6f69-4aec-ba6b-c978f673723f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should have default text content",
              "fullTitle": "DownloadLink in Pre-need components should have default text content",
              "timedOut": false,
              "duration": 3,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var wrapper = (0, _enzyme.mount)(/*#__PURE__*/_react.default.createElement(_DownloadLink.default, null));\n(0, _chai.expect)(wrapper.find('a').at(0).text()).to.equal(expectedTestContent);\nwrapper.unmount();",
              "err": {},
              "uuid": "e6d7f7ca-46e3-432a-8434-7621a019defb",
              "parentUUID": "f272374d-6f69-4aec-ba6b-c978f673723f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should have input text content",
              "fullTitle": "DownloadLink in Pre-need components should have input text content",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var wrapper = (0, _enzyme.mount)(/*#__PURE__*/_react.default.createElement(_DownloadLink.default, props));\n(0, _chai.expect)(wrapper.find('a').at(0).text()).to.equal(testContent + staticText);\nwrapper.unmount();",
              "err": {},
              "uuid": "56bb6df7-44ee-4f5b-937b-41f9aa893823",
              "parentUUID": "f272374d-6f69-4aec-ba6b-c978f673723f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should have data layer events",
              "fullTitle": "DownloadLink in Pre-need components should have data layer events",
              "timedOut": false,
              "duration": 3,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "props.subTaskEvent = true;\nvar wrapper = (0, _enzyme.mount)(/*#__PURE__*/_react.default.createElement(_DownloadLink.default, props));\nvar expandedContent = wrapper.find('a');\nexpandedContent.simulate('click');\nvar priorEvent = window.dataLayer;\n(0, _chai.expect)(priorEvent.length).to.equal(1);\nexpandedContent.simulate('click');\n(0, _chai.expect)(priorEvent.length).to.equal(2);\nwrapper.unmount();",
              "err": {},
              "uuid": "0f03509a-3186-49df-82e7-7a1e69b60c16",
              "parentUUID": "f272374d-6f69-4aec-ba6b-c978f673723f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should not have data layer events",
              "fullTitle": "DownloadLink in Pre-need components should not have data layer events",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "props.subTaskEvent = false;\nvar wrapper = (0, _enzyme.mount)(/*#__PURE__*/_react.default.createElement(_DownloadLink.default, props));\nvar expandedContent = wrapper.find('a');\nexpandedContent.simulate('click');\nvar priorEvent = window.dataLayer;\n(0, _chai.expect)(priorEvent.length).to.equal(0);\nwrapper.unmount();",
              "err": {},
              "uuid": "d2f812c4-ed9b-4c76-9ec7-4d34a793b363",
              "parentUUID": "f272374d-6f69-4aec-ba6b-c978f673723f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "4cebd715-c9d5-4be0-b6e8-06d9950b8fd8",
            "e6d7f7ca-46e3-432a-8434-7621a019defb",
            "56bb6df7-44ee-4f5b-937b-41f9aa893823",
            "0f03509a-3186-49df-82e7-7a1e69b60c16",
            "d2f812c4-ed9b-4c76-9ec7-4d34a793b363"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 13,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "b445a455-29aa-4c74-9a69-be7994192ce5",
          "title": "Pre-need EligibleBuriedView component",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/pre-need-integration/tests/components/EligibleBuriedView.unit.spec.jsx",
          "file": "/src/applications/pre-need-integration/tests/components/EligibleBuriedView.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "renders and unmounts without crashing",
              "fullTitle": "Pre-need EligibleBuriedView component renders and unmounts without crashing",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var wrapper = (0, _enzyme.mount)(/*#__PURE__*/_react.default.createElement(_EligibleBuriedView.default, {\n  formData: formData\n}));\n(0, _chai.expect)(wrapper.exists()).to.be.true;\nwrapper.unmount();\n(0, _chai.expect)(wrapper.exists()).to.be.false;",
              "err": {},
              "uuid": "90acd32e-6ed4-4e7c-aa0a-524a018fd696",
              "parentUUID": "b445a455-29aa-4c74-9a69-be7994192ce5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "renders bolded test name",
              "fullTitle": "Pre-need EligibleBuriedView component renders bolded test name",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var wrapper = (0, _enzyme.mount)(/*#__PURE__*/_react.default.createElement(_EligibleBuriedView.default, {\n  formData: formData\n}));\n(0, _chai.expect)(wrapper.find('strong').text()).to.eq('test name');\nwrapper.unmount();",
              "err": {},
              "uuid": "6fb674b7-f555-4e24-9e60-20052c8e5788",
              "parentUUID": "b445a455-29aa-4c74-9a69-be7994192ce5",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "90acd32e-6ed4-4e7c-aa0a-524a018fd696",
            "6fb674b7-f555-4e24-9e60-20052c8e5788"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 4,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "8bb21240-8ed3-4578-84cf-ff32010bbb22",
          "title": "Pre-need ErrorText component",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/pre-need-integration/tests/components/ErrorText.unit.spec.jsx",
          "file": "/src/applications/pre-need-integration/tests/components/ErrorText.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "renders and unmounts without crashing",
              "fullTitle": "Pre-need ErrorText component renders and unmounts without crashing",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var wrapper = (0, _enzyme.mount)(/*#__PURE__*/_react.default.createElement(_ErrorText.default, null));\n(0, _chai.expect)(wrapper.exists()).to.be.true;\nwrapper.unmount();\n(0, _chai.expect)(wrapper.exists()).to.be.false;",
              "err": {},
              "uuid": "521bf475-222f-48b6-a813-816eeb816c41",
              "parentUUID": "8bb21240-8ed3-4578-84cf-ff32010bbb22",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should have the CallNCACenter component rendered within it",
              "fullTitle": "Pre-need ErrorText component should have the CallNCACenter component rendered within it",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var wrapper = (0, _enzyme.mount)(/*#__PURE__*/_react.default.createElement(_ErrorText.default, null));\nvar CallNCACenterComponent = wrapper.find('CallNCACenter');\n(0, _chai.expect)(CallNCACenterComponent.exists()).to.be.true;\nwrapper.unmount();",
              "err": {},
              "uuid": "bc2b6211-907a-459f-8f0a-170a615a3e2a",
              "parentUUID": "8bb21240-8ed3-4578-84cf-ff32010bbb22",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "521bf475-222f-48b6-a813-816eeb816c41",
            "bc2b6211-907a-459f-8f0a-170a615a3e2a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 4,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "4efed5a0-c93b-447f-941a-d17247e2ac05",
          "title": "Pre-need Footer component",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/pre-need-integration/tests/components/Footer.unit.spec.jsx",
          "file": "/src/applications/pre-need-integration/tests/components/Footer.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "renders and unmounts without crashing",
              "fullTitle": "Pre-need Footer component renders and unmounts without crashing",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var wrapper = (0, _enzyme.mount)(/*#__PURE__*/_react.default.createElement(_Footer.default, {\n  formConfig: formConfig,\n  currentLocation: currentLocation\n}));\n(0, _chai.expect)(wrapper.exists()).to.be.true;\nwrapper.unmount();\n(0, _chai.expect)(wrapper.exists()).to.be.false;",
              "err": {},
              "uuid": "2efc16eb-ed5b-48a9-a504-59338bf14308",
              "parentUUID": "4efed5a0-c93b-447f-941a-d17247e2ac05",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "2efc16eb-ed5b-48a9-a504-59338bf14308"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "415e60ec-b16d-4208-adf6-a3aaf763e97b",
          "title": "GetFormHelp in Pre-need components",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/pre-need-integration/tests/components/GetFormHelp.unit.spec.jsx",
          "file": "/src/applications/pre-need-integration/tests/components/GetFormHelp.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should render",
              "fullTitle": "GetFormHelp in Pre-need components should render",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var wrapper = (0, _enzyme.mount)(/*#__PURE__*/_react.default.createElement(_GetFormHelp.default, null));\n(0, _chai.expect)(wrapper.find('va-telephone').length).to.equal(4);\nwrapper.unmount();",
              "err": {},
              "uuid": "aa308ee1-85de-4047-a977-405cf91050f1",
              "parentUUID": "415e60ec-b16d-4208-adf6-a3aaf763e97b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "aa308ee1-85de-4047-a977-405cf91050f1"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "589c503f-a8cc-4946-a173-11c6153e775e",
          "title": "IntroductionPage in Pre-need components",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/pre-need-integration/tests/components/IntroductionPage.unit.spec.jsx",
          "file": "/src/applications/pre-need-integration/tests/components/IntroductionPage.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should render",
              "fullTitle": "IntroductionPage in Pre-need components should render",
              "timedOut": false,
              "duration": 19,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getData = getData(),\n  props = _getData.props,\n  mockStore = _getData.mockStore;\nvar _render = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_IntroductionPage.default, props))),\n  container = _render.container;\n(0, _chai.expect)((0, _ui.$)('h2', container)).to.exist;",
              "err": {},
              "uuid": "940ecf44-01cf-4fab-a25a-12a30b0c0350",
              "parentUUID": "589c503f-a8cc-4946-a173-11c6153e775e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "940ecf44-01cf-4fab-a25a-12a30b0c0350"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 19,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "1db21109-8731-46ed-89e4-9369c6dbf6ee",
          "title": "Preneed Schemaform definition phone",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/pre-need-integration/tests/components/Phone.unit.spec.jsx",
          "file": "/src/applications/pre-need-integration/tests/components/Phone.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should render phone",
              "fullTitle": "Preneed Schemaform definition phone should render phone",
              "timedOut": false,
              "duration": 10,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var phoneUiSchema = (0, _Phone.default)();\nvar form = _testUtils.default.renderIntoDocument(/*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  schema: _definitions.default.phone,\n  uiSchema: phoneUiSchema\n}));\nvar formDOM = (0, _reactDom.findDOMNode)(form);\nvar input = formDOM.querySelector('input');\nvar phoneClasses = phoneUiSchema['ui:options'].widgetClassNames.split(' ');\nphoneClasses.forEach(function (className) {\n  (0, _chai.expect)(input.classList.contains(className)).to.be.true;\n});\n(0, _chai.expect)(input.type).to.equal('tel');\n(0, _chai.expect)(input.autocomplete).to.equal('tel');",
              "err": {},
              "uuid": "8a7dc413-750f-45e2-8cd7-bef7d6efb1c6",
              "parentUUID": "1db21109-8731-46ed-89e4-9369c6dbf6ee",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should render phone title",
              "fullTitle": "Preneed Schemaform definition phone should render phone title",
              "timedOut": false,
              "duration": 3,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var form = _testUtils.default.renderIntoDocument(/*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  schema: _definitions.default.phone,\n  uiSchema: (0, _Phone.default)('My phone')\n}));\nvar formDOM = (0, _reactDom.findDOMNode)(form);\n(0, _chai.expect)(formDOM.querySelector('label').textContent).to.equal('My phone');",
              "err": {},
              "uuid": "8a9a0955-32b1-44f8-b69b-177185749e5c",
              "parentUUID": "1db21109-8731-46ed-89e4-9369c6dbf6ee",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should render minLength phone error",
              "fullTitle": "Preneed Schemaform definition phone should render minLength phone error",
              "timedOut": false,
              "duration": 15,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var form = _testUtils.default.renderIntoDocument(/*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  schema: _definitions.default.phone,\n  uiSchema: (0, _Phone.default)()\n}));\nvar formDOM = (0, _reactDom.findDOMNode)(form);\n_testUtils.default.Simulate.change(formDOM.querySelector('input'), {\n  target: {\n    value: '1asdf'\n  }\n});\n_testUtils.default.findRenderedComponentWithType(form, _reactJsonschemaForm.default).onSubmit({\n  preventDefault: function preventDefault(f) {\n    return f;\n  }\n});\n(0, _chai.expect)(formDOM.querySelector('.usa-input-error-message').textContent).to.include('Phone number should be between 10-15 digits long');",
              "err": {},
              "uuid": "5b116a0d-bc0f-499a-906d-c5fcdf71dd74",
              "parentUUID": "1db21109-8731-46ed-89e4-9369c6dbf6ee",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "8a7dc413-750f-45e2-8cd7-bef7d6efb1c6",
            "8a9a0955-32b1-44f8-b69b-177185749e5c",
            "5b116a0d-bc0f-499a-906d-c5fcdf71dd74"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 28,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "40d78319-1396-4f95-bf91-3150e34d1ecf",
          "title": "Pre-need Schemaform <PhoneNumberWidget>",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/pre-need-integration/tests/components/PhoneNumberWidget.unit.spec.jsx",
          "file": "/src/applications/pre-need-integration/tests/components/PhoneNumberWidget.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should render",
              "fullTitle": "Pre-need Schemaform <PhoneNumberWidget> should render",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var tree = _skinDeep.default.shallowRender(/*#__PURE__*/_react.default.createElement(_PhoneNumberWidget.default, {\n  value: \"1234567890\"\n}));\n(0, _chai.expect)(tree.subTree('TextWidget').props.value).to.equal('1234567890');",
              "err": {},
              "uuid": "7404e556-6814-4855-b924-286d76425a2f",
              "parentUUID": "40d78319-1396-4f95-bf91-3150e34d1ecf",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should render a \"tel\" type input",
              "fullTitle": "Pre-need Schemaform <PhoneNumberWidget> should render a \"tel\" type input",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var tree = _skinDeep.default.shallowRender(/*#__PURE__*/_react.default.createElement(_PhoneNumberWidget.default, null));\nvar input = tree.subTree('TextWidget').props;\n(0, _chai.expect)(input.type).to.equal('tel');\n(0, _chai.expect)(input.autocomplete).to.equal('tel');",
              "err": {},
              "uuid": "c42dc637-92b3-4525-8c0d-238e23495561",
              "parentUUID": "40d78319-1396-4f95-bf91-3150e34d1ecf",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should strip anything that is not a number on change",
              "fullTitle": "Pre-need Schemaform <PhoneNumberWidget> should strip anything that is not a number on change",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var onChange = _sinon.default.spy();\nvar tree = _skinDeep.default.shallowRender(/*#__PURE__*/_react.default.createElement(_PhoneNumberWidget.default, {\n  value: \"\",\n  onChange: onChange\n}));\ntree.subTree('TextWidget').props.onChange('+(154) 945-56x77~!@#$%^&*_=');\n(0, _chai.expect)(onChange.calledWith('1549455677')).to.be.true;",
              "err": {},
              "uuid": "5f086e16-a963-41ba-b8d2-55731ee70fc6",
              "parentUUID": "40d78319-1396-4f95-bf91-3150e34d1ecf",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should call onChange with undefined if value is blank",
              "fullTitle": "Pre-need Schemaform <PhoneNumberWidget> should call onChange with undefined if value is blank",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var onChange = _sinon.default.spy();\nvar tree = _skinDeep.default.shallowRender(/*#__PURE__*/_react.default.createElement(_PhoneNumberWidget.default, {\n  value: \"1231231234\",\n  onChange: onChange\n}));\ntree.subTree('TextWidget').props.onChange('');\n(0, _chai.expect)(onChange.calledWith(undefined)).to.be.true;",
              "err": {},
              "uuid": "a22c770a-15d5-460d-a7d8-7001efe46416",
              "parentUUID": "40d78319-1396-4f95-bf91-3150e34d1ecf",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should handle componentDidUpdate correctly",
              "fullTitle": "Pre-need Schemaform <PhoneNumberWidget> should handle componentDidUpdate correctly",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var onChange = _sinon.default.spy();\nvar tree = _skinDeep.default.shallowRender(/*#__PURE__*/_react.default.createElement(_PhoneNumberWidget.default, {\n  value: \"1234567890\",\n  onChange: onChange\n}));\n(0, _chai.expect)(tree.getMountedInstance().state.firstUpdate).to.be.true;\ntree.getMountedInstance().componentDidUpdate({\n  value: '1234567890'\n});\n(0, _chai.expect)(tree.getMountedInstance().state.firstUpdate).to.be.true;\n(0, _chai.expect)(onChange.calledWith('1234567890')).to.be.false;",
              "err": {},
              "uuid": "b2debdf3-2e9b-4c64-8724-35e73fd22c27",
              "parentUUID": "40d78319-1396-4f95-bf91-3150e34d1ecf",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "7404e556-6814-4855-b924-286d76425a2f",
            "c42dc637-92b3-4525-8c0d-238e23495561",
            "5f086e16-a963-41ba-b8d2-55731ee70fc6",
            "a22c770a-15d5-460d-a7d8-7001efe46416",
            "b2debdf3-2e9b-4c64-8724-35e73fd22c27"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "eec7bc02-b60f-41fe-9162-2fcff2677d5a",
          "title": "Pre-need PreparerHelpers components",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/pre-need-integration/tests/components/PreparerHelpers.unit.spec.jsx",
          "file": "/src/applications/pre-need-integration/tests/components/PreparerHelpers.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "renders and unmounts without crashing",
              "fullTitle": "Pre-need PreparerHelpers components renders and unmounts without crashing",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var wrapper = (0, _enzyme.mount)(/*#__PURE__*/_react.default.createElement(_PreparerHelpers.PreparerDetailsTitle, null));\n(0, _chai.expect)(wrapper.exists()).to.be.true;\nwrapper.unmount();\n(0, _chai.expect)(wrapper.exists()).to.be.false;",
              "err": {},
              "uuid": "c7a1baf0-446a-46a9-8cb7-ab65161be397",
              "parentUUID": "eec7bc02-b60f-41fe-9162-2fcff2677d5a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "renders and unmounts without crashing",
              "fullTitle": "Pre-need PreparerHelpers components renders and unmounts without crashing",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var wrapper = (0, _enzyme.mount)(/*#__PURE__*/_react.default.createElement(_PreparerHelpers.ContactDetailsTitle, null));\n(0, _chai.expect)(wrapper.exists()).to.be.true;\nwrapper.unmount();\n(0, _chai.expect)(wrapper.exists()).to.be.false;",
              "err": {},
              "uuid": "a92de5f3-a962-49d6-89cf-199bbd919cb1",
              "parentUUID": "eec7bc02-b60f-41fe-9162-2fcff2677d5a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "renders and unmounts without crashing",
              "fullTitle": "Pre-need PreparerHelpers components renders and unmounts without crashing",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var wrapper = (0, _enzyme.mount)(/*#__PURE__*/_react.default.createElement(_PreparerHelpers.ValidateAddressTitle, null));\n(0, _chai.expect)(wrapper.exists()).to.be.true;\nwrapper.unmount();\n(0, _chai.expect)(wrapper.exists()).to.be.false;",
              "err": {},
              "uuid": "02b33120-6515-498e-b1d0-9ee9f29195c9",
              "parentUUID": "eec7bc02-b60f-41fe-9162-2fcff2677d5a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "renders and unmounts without crashing",
              "fullTitle": "Pre-need PreparerHelpers components renders and unmounts without crashing",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var wrapper = (0, _enzyme.mount)(/*#__PURE__*/_react.default.createElement(_PreparerHelpers.PreparerDescription, null));\n(0, _chai.expect)(wrapper.exists()).to.be.true;\nwrapper.unmount();\n(0, _chai.expect)(wrapper.exists()).to.be.false;",
              "err": {},
              "uuid": "a199ecd1-de8c-45d0-abb3-f54fd796e0ff",
              "parentUUID": "eec7bc02-b60f-41fe-9162-2fcff2677d5a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "c7a1baf0-446a-46a9-8cb7-ab65161be397",
            "a92de5f3-a962-49d6-89cf-199bbd919cb1",
            "02b33120-6515-498e-b1d0-9ee9f29195c9",
            "a199ecd1-de8c-45d0-abb3-f54fd796e0ff"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 7,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "b251a24d-2914-42fe-88f9-5779a510d362",
          "title": "PreparerRadioWidget in Pre-need preparer info",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/pre-need-integration/tests/components/PreparerRadioWidget.unit.spec.jsx",
          "file": "/src/applications/pre-need-integration/tests/components/PreparerRadioWidget.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should render",
              "fullTitle": "PreparerRadioWidget in Pre-need preparer info should render",
              "timedOut": false,
              "duration": 6,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var wrapper = (0, _enzyme.mount)(/*#__PURE__*/_react.default.createElement(_PreparerRadioWidget.default, props));\n(0, _chai.expect)(wrapper.find('va-radio-option').length).to.equal(2);\nwrapper.unmount();",
              "err": {},
              "uuid": "f4b5ac7f-44d1-4663-944f-0f165052e4f8",
              "parentUUID": "b251a24d-2914-42fe-88f9-5779a510d362",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should invoke onChange when a radio button is clicked",
              "fullTitle": "PreparerRadioWidget in Pre-need preparer info should invoke onChange when a radio button is clicked",
              "timedOut": false,
              "duration": 6,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var onChange = _sinon.default.spy();\nvar wrapper = (0, _enzyme.mount)(/*#__PURE__*/_react.default.createElement(_PreparerRadioWidget.default, _extends({}, props, {\n  onChange: onChange\n})));\nvar vaRadio = wrapper.find('VaRadio');\n(0, _chai.expect)(vaRadio.exists()).to.be.true;\nvaRadio.props().onVaValueChange({\n  detail: {\n    value: 'Pinhead',\n    checked: true\n  }\n});\n(0, _chai.expect)(onChange.calledWith('Pinhead')).to.be.true;\nwrapper.unmount();",
              "err": {},
              "uuid": "0a5ad789-4283-484d-9fdc-93fc0fbe328f",
              "parentUUID": "b251a24d-2914-42fe-88f9-5779a510d362",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f4b5ac7f-44d1-4663-944f-0f165052e4f8",
            "0a5ad789-4283-484d-9fdc-93fc0fbe328f"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 12,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "70390e43-a5bc-4828-8fab-d381dd846c11",
          "title": "RaceEthnicityReviewField",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/pre-need-integration/tests/components/RaceEthnicityReviewField.unit.spec.jsx",
          "file": "/src/applications/pre-need-integration/tests/components/RaceEthnicityReviewField.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should render race categories if reviewMode is false",
              "fullTitle": "RaceEthnicityReviewField should render race categories if reviewMode is false",
              "timedOut": false,
              "duration": 4,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var props = {\n  formContext: {\n    reviewMode: false\n  },\n  uiSchema: {},\n  schema: {},\n  formData: {},\n  registry: {\n    fields: {\n      ObjectField: function ObjectField() {\n        return null;\n      }\n    }\n  }\n};\nvar wrapper = (0, _enzyme.shallow)(/*#__PURE__*/_react.default.createElement(_RaceEthnicityReviewField.default, props));\nvar objectField = wrapper.find(props.registry.fields.ObjectField);\n_chai.default.expect(objectField).to.have.lengthOf(1);\nwrapper.unmount();",
              "err": {},
              "uuid": "eb604135-5f59-45b8-a75d-ef6fe4bc455c",
              "parentUUID": "70390e43-a5bc-4828-8fab-d381dd846c11",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should render categories in reviewMode",
              "fullTitle": "RaceEthnicityReviewField should render categories in reviewMode",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var props = {\n  formContext: {\n    reviewMode: true\n  },\n  uiSchema: {\n    'ui:title': 'Which categories best describe you? (You may check more than one)',\n    prop1: {\n      'ui:title': 'Asian'\n    },\n    prop2: {\n      'ui:title': 'White'\n    }\n  },\n  schema: {\n    properties: {\n      prop1: {\n        type: 'string'\n      },\n      prop2: {\n        type: 'string'\n      }\n    }\n  },\n  formData: {\n    prop1: 'value1',\n    prop2: 'value2'\n  },\n  registry: {\n    fields: {\n      ObjectField: function ObjectField() {\n        return null;\n      }\n    }\n  }\n};\nvar wrapper = (0, _enzyme.shallow)(/*#__PURE__*/_react.default.createElement(_RaceEthnicityReviewField.default, props));\nvar reviewRows = wrapper.find('.review-row');\n_chai.default.expect(reviewRows).to.have.lengthOf(3);\n_chai.default.expect(reviewRows.at(0).find('dt').text()).to.equal('Which categories best describe you? (You may check more than one)');\n_chai.default.expect(reviewRows.at(1).find('dd').text()).to.equal('Asian');\n_chai.default.expect(reviewRows.at(2).find('dd').text()).to.equal('White');\nwrapper.unmount();",
              "err": {},
              "uuid": "87522bd0-b7ef-4296-8c62-295d2f962b3a",
              "parentUUID": "70390e43-a5bc-4828-8fab-d381dd846c11",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should not render empty categories in reviewMode",
              "fullTitle": "RaceEthnicityReviewField should not render empty categories in reviewMode",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var props = {\n  formContext: {\n    reviewMode: true\n  },\n  uiSchema: {\n    'ui:title': 'Which categories best describe you? (You may check more than one)',\n    prop1: {\n      'ui:title': 'White'\n    },\n    prop2: {\n      'ui:title': 'Asian'\n    }\n  },\n  schema: {\n    properties: {\n      prop1: {\n        type: 'string'\n      },\n      prop2: {\n        type: 'string'\n      }\n    }\n  },\n  formData: {\n    prop1: 'value1'\n  },\n  registry: {\n    fields: {\n      ObjectField: function ObjectField() {\n        return null;\n      }\n    }\n  }\n};\nvar wrapper = (0, _enzyme.shallow)(/*#__PURE__*/_react.default.createElement(_RaceEthnicityReviewField.default, props));\nvar reviewRows = wrapper.find('.review-row');\n_chai.default.expect(reviewRows).to.have.lengthOf(2);\n_chai.default.expect(reviewRows.at(0).find('dt').text()).to.equal('Which categories best describe you? (You may check more than one)');\n_chai.default.expect(reviewRows.at(1).find('dd').text()).to.equal('White');\nwrapper.unmount();",
              "err": {},
              "uuid": "d96d3eb7-b89f-42d4-9cd2-8272161d1444",
              "parentUUID": "70390e43-a5bc-4828-8fab-d381dd846c11",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "eb604135-5f59-45b8-a75d-ef6fe4bc455c",
            "87522bd0-b7ef-4296-8c62-295d2f962b3a",
            "d96d3eb7-b89f-42d4-9cd2-8272161d1444"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 7,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "92f7a540-2994-485d-8282-21efe732c8c7",
          "title": "Pre-need ServicePeriodView Component",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/pre-need-integration/tests/components/ServicePeriodView.unit.spec.jsx",
          "file": "/src/applications/pre-need-integration/tests/components/ServicePeriodView.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should render",
              "fullTitle": "Pre-need ServicePeriodView Component should render",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var tree = _skinDeep.default.shallowRender(/*#__PURE__*/_react.default.createElement(_ServicePeriodView.default, props));\nvar input = tree.subTree('div');\n(0, _chai.expect)(input.type).to.equal('div');",
              "err": {},
              "uuid": "f9ba302a-4689-44b5-ad2a-3a71f0c6d0ed",
              "parentUUID": "92f7a540-2994-485d-8282-21efe732c8c7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should populate date field",
              "fullTitle": "Pre-need ServicePeriodView Component should populate date field",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var tree = _skinDeep.default.shallowRender(/*#__PURE__*/_react.default.createElement(_ServicePeriodView.default, props));\nvar input = tree.subTree('div');\n(0, _chai.expect)(input.text()).to.equal('01/01/1900 — 01/01/1905');",
              "err": {},
              "uuid": "b340bf95-7078-4233-b35c-7348813913c3",
              "parentUUID": "92f7a540-2994-485d-8282-21efe732c8c7",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f9ba302a-4689-44b5-ad2a-3a71f0c6d0ed",
            "b340bf95-7078-4233-b35c-7348813913c3"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "f9cc84ed-ecdd-4a68-932b-a2d5f954b316",
          "title": "RadioWidget in Pre-need-integration info",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/pre-need-integration/tests/components/SponsorRadioWidget.unit.spec.jsx",
          "file": "/src/applications/pre-need-integration/tests/components/SponsorRadioWidget.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should render",
              "fullTitle": "RadioWidget in Pre-need-integration info should render",
              "timedOut": false,
              "duration": 4,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var wrapper = (0, _enzyme.mount)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n  store: store\n}, /*#__PURE__*/_react.default.createElement(_SponsorRadioWidget.default, props)));\n(0, _chai.expect)(wrapper.find('.form-radio-buttons').length).to.equal(2);\nwrapper.unmount();",
              "err": {},
              "uuid": "50a9b14b-fc12-4f9c-8a8b-346930cdd106",
              "parentUUID": "f9cc84ed-ecdd-4a68-932b-a2d5f954b316",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should invoke onChange when a radio button is clicked",
              "fullTitle": "RadioWidget in Pre-need-integration info should invoke onChange when a radio button is clicked",
              "timedOut": false,
              "duration": 6,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var onChange = _sinon.default.spy();\nvar wrapper = (0, _enzyme.mount)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n  store: store\n}, /*#__PURE__*/_react.default.createElement(_SponsorRadioWidget.default, _extends({}, props, {\n  onChange: onChange\n}))));\nvar vaRadio = wrapper.find('VaRadio');\n(0, _chai.expect)(vaRadio.exists()).to.be.true;\nvaRadio.props().onVaValueChange({\n  detail: {\n    value: 'no'\n  }\n});\n(0, _chai.expect)(onChange.calledWith('no')).to.be.true;\nwrapper.unmount();",
              "err": {},
              "uuid": "83f91071-7333-42bb-8212-eeb0a61c4d59",
              "parentUUID": "f9cc84ed-ecdd-4a68-932b-a2d5f954b316",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "50a9b14b-fc12-4f9c-8a8b-346930cdd106",
            "83f91071-7333-42bb-8212-eeb0a61c4d59"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 10,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "8e327017-80f8-4719-93fa-6d43c4dbfb64",
          "title": "SubmissionError component",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/pre-need-integration/tests/components/SubmissionError.unit.spec.jsx",
          "file": "/src/applications/pre-need-integration/tests/components/SubmissionError.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "renders and unmounts without crashing",
              "fullTitle": "SubmissionError component renders and unmounts without crashing",
              "timedOut": false,
              "duration": 26,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var wrapper = (0, _enzyme.mount)(/*#__PURE__*/_react.default.createElement(_SubmissionError.default, {\n  user: user,\n  saveLink: saveLink\n}));\n(0, _chai.expect)(wrapper.exists()).to.be.true;\nwrapper.unmount();\n(0, _chai.expect)(wrapper.exists()).to.be.false;",
              "err": {},
              "uuid": "a9b4b8d5-9315-437b-8f66-12a2ca31d510",
              "parentUUID": "8e327017-80f8-4719-93fa-6d43c4dbfb64",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a9b4b8d5-9315-437b-8f66-12a2ca31d510"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 26,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "283ad82e-2c61-4b4e-8032-83c42d8bc206",
          "title": "Suggested Address Radio Component",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/pre-need-integration/tests/components/SuggestedAddressRadio.unit.spec.jsx",
          "file": "/src/applications/pre-need-integration/tests/components/SuggestedAddressRadio.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should render",
              "fullTitle": "Suggested Address Radio Component should render",
              "timedOut": false,
              "duration": 4,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var wrapper = (0, _enzyme.mount)(/*#__PURE__*/_react.default.createElement(_SuggestedAddressRadio.default, props));\n(0, _chai.expect)(wrapper.find('va-radio-option').length).to.equal(2);\nwrapper.unmount();",
              "err": {},
              "uuid": "a637d02f-b13f-4ab6-a842-b556eaf7dbc8",
              "parentUUID": "283ad82e-2c61-4b4e-8032-83c42d8bc206",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a637d02f-b13f-4ab6-a842-b556eaf7dbc8"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 4,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "693f429b-8013-4325-b61e-6c219217a956",
          "title": "Pre-need SupportingFilesCollapsibleList component",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/pre-need-integration/tests/components/SupportingFilesCollapsibleList.unit.spec.jsx",
          "file": "/src/applications/pre-need-integration/tests/components/SupportingFilesCollapsibleList.unit.spec.jsx",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"Pre-need SupportingFilesCollapsibleList component\"",
              "fullTitle": "Pre-need SupportingFilesCollapsibleList component \"before each\" hook in \"Pre-need SupportingFilesCollapsibleList component\"",
              "timedOut": false,
              "duration": 3,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "wrapper = (0, _enzyme.mount)(/*#__PURE__*/_react.default.createElement(_SupportingFilesCollapsibleList.default, null));",
              "err": {},
              "uuid": "664df13c-208e-45cb-98e2-60dfcd26de04",
              "parentUUID": "693f429b-8013-4325-b61e-6c219217a956",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": "renders and unmounts without crashing",
              "fullTitle": "Pre-need SupportingFilesCollapsibleList component renders and unmounts without crashing",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, _chai.expect)(wrapper.exists()).to.be.true;\nwrapper.unmount();\n(0, _chai.expect)(wrapper.exists()).to.be.false;",
              "err": {},
              "uuid": "4dcec7c9-2051-4a24-8501-d66872951fda",
              "parentUUID": "693f429b-8013-4325-b61e-6c219217a956",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should render a collapsible list",
              "fullTitle": "Pre-need SupportingFilesCollapsibleList component should render a collapsible list",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var collapsibleList = wrapper.find('CollapsibleList');\n(0, _chai.expect)(collapsibleList.exists()).to.be.true;\nwrapper.unmount();",
              "err": {},
              "uuid": "f1933e84-f3d9-4350-a427-72e43b6b13a5",
              "parentUUID": "693f429b-8013-4325-b61e-6c219217a956",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "the collapsible list renders collapsible panels",
              "fullTitle": "Pre-need SupportingFilesCollapsibleList component the collapsible list renders collapsible panels",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var collapsiblePanels = wrapper.find('CollapsiblePanel');\n(0, _chai.expect)(collapsiblePanels).to.have.length(3);\nwrapper.unmount();",
              "err": {},
              "uuid": "3f95d45b-5dab-49b2-86e6-62f012d68ab9",
              "parentUUID": "693f429b-8013-4325-b61e-6c219217a956",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "each collapsible panel should expand when clicked",
              "fullTitle": "Pre-need SupportingFilesCollapsibleList component each collapsible panel should expand when clicked",
              "timedOut": false,
              "duration": 15,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var panels = wrapper.find('CollapsiblePanel');\n(0, _chai.expect)(wrapper.find('#collapsible-3').exists()).to.be.false;\npanels.forEach(function (panel) {\n  var button = panel.find('#collapsibleButton3');\n  button.simulate('click');\n});\n(0, _chai.expect)(wrapper.find('#collapsible-3').exists()).to.be.true;\n(0, _chai.expect)(wrapper.find('#collapsible-3')).to.have.length(3);\nwrapper.unmount();",
              "err": {},
              "uuid": "d7e0792b-771b-479c-8e63-889603646e82",
              "parentUUID": "693f429b-8013-4325-b61e-6c219217a956",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "4dcec7c9-2051-4a24-8501-d66872951fda",
            "f1933e84-f3d9-4350-a427-72e43b6b13a5",
            "3f95d45b-5dab-49b2-86e6-62f012d68ab9",
            "d7e0792b-771b-479c-8e63-889603646e82"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 18,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "49a722f4-62b5-41eb-b12b-6f8c9abd5d79",
          "title": "Pre-need SupportingFilesCollapsibleList component",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/pre-need-integration/tests/components/SupportingFilesDescription.unit.spec.jsx",
          "file": "/src/applications/pre-need-integration/tests/components/SupportingFilesDescription.unit.spec.jsx",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"Pre-need SupportingFilesCollapsibleList component\"",
              "fullTitle": "Pre-need SupportingFilesCollapsibleList component \"before each\" hook in \"Pre-need SupportingFilesCollapsibleList component\"",
              "timedOut": false,
              "duration": 4,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "wrapper = (0, _enzyme.mount)(/*#__PURE__*/_react.default.createElement(_SupportingFilesDescription.default, null));",
              "err": {},
              "uuid": "e73d5345-0923-4f64-854f-5d367196ef6b",
              "parentUUID": "49a722f4-62b5-41eb-b12b-6f8c9abd5d79",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": "renders and unmounts without crashing",
              "fullTitle": "Pre-need SupportingFilesCollapsibleList component renders and unmounts without crashing",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, _chai.expect)(wrapper.exists()).to.be.true;\nwrapper.unmount();\n(0, _chai.expect)(wrapper.exists()).to.be.false;",
              "err": {},
              "uuid": "0328ad2c-875f-408e-b423-7f460b399c9b",
              "parentUUID": "49a722f4-62b5-41eb-b12b-6f8c9abd5d79",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "renders collapsible list",
              "fullTitle": "Pre-need SupportingFilesCollapsibleList component renders collapsible list",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, _chai.expect)(wrapper.find('CollapsibleList').exists()).to.be.true;\nwrapper.unmount();",
              "err": {},
              "uuid": "b05bc9bc-18b9-4405-a427-1d4cdb1469cd",
              "parentUUID": "49a722f4-62b5-41eb-b12b-6f8c9abd5d79",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "0328ad2c-875f-408e-b423-7f460b399c9b",
            "b05bc9bc-18b9-4405-a427-1d4cdb1469cd"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "63357e75-0c18-45c9-9594-5f043bf1ac18",
          "title": "Pre-need applicant demographics",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/pre-need-integration/tests/config/applicantDemographics.unit.spec.jsx",
          "file": "/src/applications/pre-need-integration/tests/config/applicantDemographics.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should render",
              "fullTitle": "Pre-need applicant demographics should render",
              "timedOut": false,
              "duration": 21,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var form = (0, _enzyme.mount)(/*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  schema: schema,\n  definitions: _form.default.defaultDefinitions,\n  uiSchema: uiSchema\n}));\n(0, _chai.expect)(form.find('input').length).to.equal(9);\nform.unmount();",
              "err": {},
              "uuid": "c7dab730-bb13-4301-bf9d-863f29bfed33",
              "parentUUID": "63357e75-0c18-45c9-9594-5f043bf1ac18",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should not submit empty form",
              "fullTitle": "Pre-need applicant demographics should not submit empty form",
              "timedOut": false,
              "duration": 26,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var onSubmit = _sinon.default.spy();\nvar form = (0, _enzyme.mount)(/*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  schema: schema,\n  definitions: _form.default.defaultDefinitions,\n  onSubmit: onSubmit,\n  uiSchema: uiSchema\n}));\nform.find('form').simulate('submit');\n(0, _chai.expect)(form.find('.usa-input-error').length).to.equal(2);\n(0, _chai.expect)(onSubmit.called).to.be.false;\nform.unmount();",
              "err": {},
              "uuid": "7bc5fde8-bc4c-4aa3-b615-f99467f2977f",
              "parentUUID": "63357e75-0c18-45c9-9594-5f043bf1ac18",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should submit with required information",
              "fullTitle": "Pre-need applicant demographics should submit with required information",
              "timedOut": false,
              "duration": 54,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var onSubmit = _sinon.default.spy();\nvar form = (0, _enzyme.mount)(/*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  schema: schema,\n  definitions: _form.default.defaultDefinitions,\n  onSubmit: onSubmit,\n  uiSchema: uiSchema\n}));\n(0, _schemaformUtils.fillData)(form, 'input#root_application_veteran_gender_0', 'Female');\n(0, _schemaformUtils.selectRadio)(form, 'root_application_veteran_maritalStatus', 'Single');\nform.find('form').simulate('submit');\n(0, _chai.expect)(onSubmit.called).to.be.true;\nform.unmount();",
              "err": {},
              "uuid": "65444678-4899-4cee-a54e-118b2866afdc",
              "parentUUID": "63357e75-0c18-45c9-9594-5f043bf1ac18",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "c7dab730-bb13-4301-bf9d-863f29bfed33",
            "7bc5fde8-bc4c-4aa3-b615-f99467f2977f",
            "65444678-4899-4cee-a54e-118b2866afdc"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 101,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "85ecb11a-2722-4211-8320-21a16d84337b",
          "title": "Pre-need applicant demographics",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/pre-need-integration/tests/config/applicantDemographics2.unit.spec.jsx",
          "file": "/src/applications/pre-need-integration/tests/config/applicantDemographics2.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should render",
              "fullTitle": "Pre-need applicant demographics should render",
              "timedOut": false,
              "duration": 20,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var form = (0, _enzyme.mount)(/*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  schema: schema,\n  definitions: _form.default.defaultDefinitions,\n  uiSchema: uiSchema\n}));\n(0, _chai.expect)(form.find('input').length).to.equal(4);\n(0, _chai.expect)(form.find('va-checkbox').length).to.equal(7);\nform.unmount();",
              "err": {},
              "uuid": "3cc5050d-8114-4a1b-a47b-fe7ee1663e86",
              "parentUUID": "85ecb11a-2722-4211-8320-21a16d84337b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should not submit empty form",
              "fullTitle": "Pre-need applicant demographics should not submit empty form",
              "timedOut": false,
              "duration": 129,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var onSubmit = _sinon.default.spy();\nvar form = (0, _enzyme.mount)(/*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  schema: schema,\n  definitions: _form.default.defaultDefinitions,\n  onSubmit: onSubmit,\n  uiSchema: uiSchema\n}));\nform.find('form').simulate('submit');\n(0, _chai.expect)(form.find('.usa-input-error').length).to.equal(1);\n(0, _chai.expect)(form.find('va-checkbox-group[error]').length).to.equal(1);\n(0, _chai.expect)(onSubmit.called).to.be.false;\nform.unmount();",
              "err": {},
              "uuid": "3c6bdf1a-37e3-456b-abde-4c48062e9f39",
              "parentUUID": "85ecb11a-2722-4211-8320-21a16d84337b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should check required boxes",
              "fullTitle": "Pre-need applicant demographics should check required boxes",
              "timedOut": false,
              "duration": 29,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var onSubmit = _sinon.default.spy();\nvar form = (0, _enzyme.mount)(/*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  schema: schema,\n  definitions: _form.default.defaultDefinitions,\n  onSubmit: onSubmit,\n  uiSchema: uiSchema\n}));\n(0, _schemaformUtils.fillData)(form, 'input#root_application_veteran_ethnicity_2', 'unknown');\nform.find('va-checkbox[name*=\"root_application_veteran_race_isAsian\"]').simulate('change', {\n  target: {\n    checked: true\n  }\n});\n(0, _chai.expect)(form.find('va-checkbox[name*=\"root_application_veteran_race_isAsian\"]').exists()).to.be.true;\nform.unmount();",
              "err": {},
              "uuid": "23ea47b0-386f-4807-9062-b0dd3bd4ab27",
              "parentUUID": "85ecb11a-2722-4211-8320-21a16d84337b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "3cc5050d-8114-4a1b-a47b-fe7ee1663e86",
            "3c6bdf1a-37e3-456b-abde-4c48062e9f39",
            "23ea47b0-386f-4807-9062-b0dd3bd4ab27"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 178,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "06c1bd5c-42df-4d9a-878d-df0eac1d2d69",
          "title": "Pre-need applicant military name",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/pre-need-integration/tests/config/applicantMilitaryName.unit.spec.jsx",
          "file": "/src/applications/pre-need-integration/tests/config/applicantMilitaryName.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should render",
              "fullTitle": "Pre-need applicant military name should render",
              "timedOut": false,
              "duration": 12,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var form = (0, _enzyme.mount)(/*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  schema: schema,\n  definitions: _form.default.defaultDefinitions,\n  uiSchema: uiSchema\n}));\n(0, _chai.expect)(form.find('input').length).to.equal(2);\nform.unmount();",
              "err": {},
              "uuid": "f9e4e082-6b8a-4952-8754-a6134a8567f3",
              "parentUUID": "06c1bd5c-42df-4d9a-878d-df0eac1d2d69",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should not submit empty form",
              "fullTitle": "Pre-need applicant military name should not submit empty form",
              "timedOut": false,
              "duration": 15,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var onSubmit = _sinon.default.spy();\nvar form = (0, _enzyme.mount)(/*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  schema: schema,\n  definitions: _form.default.defaultDefinitions,\n  onSubmit: onSubmit,\n  uiSchema: uiSchema\n}));\nform.find('form').simulate('submit');\n(0, _chai.expect)(form.find('.usa-input-error').length).to.equal(1);\n(0, _chai.expect)(onSubmit.called).to.be.false;\nform.unmount();",
              "err": {},
              "uuid": "651e02ce-c37b-4e64-8b25-7676870d9926",
              "parentUUID": "06c1bd5c-42df-4d9a-878d-df0eac1d2d69",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should submit with required fields filled in",
              "fullTitle": "Pre-need applicant military name should submit with required fields filled in",
              "timedOut": false,
              "duration": 18,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var onSubmit = _sinon.default.spy();\nvar form = (0, _enzyme.mount)(/*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  schema: schema,\n  definitions: _form.default.defaultDefinitions,\n  onSubmit: onSubmit,\n  uiSchema: uiSchema\n}));\n(0, _schemaformUtils.selectRadio)(form, 'root_application_veteran_view:hasServiceName', 'N');\nform.find('form').simulate('submit');\n(0, _chai.expect)(form.find('.usa-input-error').length).to.equal(0);\n(0, _chai.expect)(onSubmit.called).to.be.true;\nform.unmount();",
              "err": {},
              "uuid": "17fd8bdf-6040-4c5d-94f5-41a93c806613",
              "parentUUID": "06c1bd5c-42df-4d9a-878d-df0eac1d2d69",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f9e4e082-6b8a-4952-8754-a6134a8567f3",
            "651e02ce-c37b-4e64-8b25-7676870d9926",
            "17fd8bdf-6040-4c5d-94f5-41a93c806613"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 45,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "51d1b895-0403-4f91-8d50-308b406186e8",
          "title": "Pre-need applicant military name information",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/pre-need-integration/tests/config/applicantMilitaryNameInformation.unit.spec.jsx",
          "file": "/src/applications/pre-need-integration/tests/config/applicantMilitaryNameInformation.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should render",
              "fullTitle": "Pre-need applicant military name information should render",
              "timedOut": false,
              "duration": 19,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var form = (0, _enzyme.mount)(/*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  schema: schema,\n  definitions: _form.default.defaultDefinitions,\n  uiSchema: uiSchema\n}));\n(0, _chai.expect)(form.find('input').length).to.equal(3);\n(0, _chai.expect)(form.find('select').length).to.equal(1);\nform.unmount();",
              "err": {},
              "uuid": "22f46af5-7ed9-4503-a1a6-79ae09f78649",
              "parentUUID": "51d1b895-0403-4f91-8d50-308b406186e8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should submit with required fields filled in",
              "fullTitle": "Pre-need applicant military name information should submit with required fields filled in",
              "timedOut": false,
              "duration": 33,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var onSubmit = _sinon.default.spy();\nvar form = (0, _enzyme.mount)(/*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  schema: schema,\n  definitions: _form.default.defaultDefinitions,\n  onSubmit: onSubmit,\n  uiSchema: uiSchema\n}));\n(0, _schemaformUtils.fillData)(form, 'input#root_application_veteran_serviceName_last', 'Smith');\n(0, _schemaformUtils.fillData)(form, 'input#root_application_veteran_serviceName_first', 'Jane');\nform.find('form').simulate('submit');\n(0, _chai.expect)(form.find('.usa-input-error').length).to.equal(0);\n(0, _chai.expect)(onSubmit.called).to.be.true;\nform.unmount();",
              "err": {},
              "uuid": "c9109c8b-0ee9-4466-b521-1a4d94c1c79a",
              "parentUUID": "51d1b895-0403-4f91-8d50-308b406186e8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should submit with all info filled in",
              "fullTitle": "Pre-need applicant military name information should submit with all info filled in",
              "timedOut": false,
              "duration": 38,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var onSubmit = _sinon.default.spy();\nvar form = (0, _enzyme.mount)(/*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  schema: schema,\n  definitions: _form.default.defaultDefinitions,\n  onSubmit: onSubmit,\n  uiSchema: uiSchema\n}));\n(0, _schemaformUtils.fillData)(form, 'input#root_application_veteran_serviceName_last', 'Smith');\n(0, _schemaformUtils.fillData)(form, 'input#root_application_veteran_serviceName_first', 'Jane');\n(0, _schemaformUtils.fillData)(form, 'input#root_application_veteran_serviceName_middle', 'M');\n(0, _schemaformUtils.fillData)(form, 'select#root_application_veteran_serviceName_suffix', 'Jr.');\nform.find('form').simulate('submit');\n(0, _chai.expect)(form.find('.usa-input-error').length).to.equal(0);\n(0, _chai.expect)(onSubmit.called).to.be.true;\nform.unmount();",
              "err": {},
              "uuid": "cf75d14e-b698-43eb-a131-dd6b4c0291ea",
              "parentUUID": "51d1b895-0403-4f91-8d50-308b406186e8",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "22f46af5-7ed9-4503-a1a6-79ae09f78649",
            "c9109c8b-0ee9-4466-b521-1a4d94c1c79a",
            "cf75d14e-b698-43eb-a131-dd6b4c0291ea"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 90,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "6653ae31-7010-4824-b1c4-5f8722545804",
          "title": "Pre-need Integration Preparer military name information",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/pre-need-integration/tests/config/applicantMilitaryNameInformationPreparer.unit.spec.jsx",
          "file": "/src/applications/pre-need-integration/tests/config/applicantMilitaryNameInformationPreparer.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should render",
              "fullTitle": "Pre-need Integration Preparer military name information should render",
              "timedOut": false,
              "duration": 15,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var form = (0, _enzyme.mount)(/*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  schema: schema,\n  definitions: _form.default.defaultDefinitions,\n  uiSchema: uiSchema\n}));\n(0, _chai.expect)(form.find('input').length).to.equal(3);\n(0, _chai.expect)(form.find('select').length).to.equal(1);\nform.unmount();",
              "err": {},
              "uuid": "10c9751b-a295-4b95-abf5-003e9544eec1",
              "parentUUID": "6653ae31-7010-4824-b1c4-5f8722545804",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should submit with required fields filled in",
              "fullTitle": "Pre-need Integration Preparer military name information should submit with required fields filled in",
              "timedOut": false,
              "duration": 31,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var onSubmit = _sinon.default.spy();\nvar form = (0, _enzyme.mount)(/*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  schema: schema,\n  definitions: _form.default.defaultDefinitions,\n  onSubmit: onSubmit,\n  uiSchema: uiSchema\n}));\n(0, _schemaformUtils.fillData)(form, 'input#root_application_veteran_serviceName_last', 'Smith');\n(0, _schemaformUtils.fillData)(form, 'input#root_application_veteran_serviceName_first', 'Jane');\nform.find('form').simulate('submit');\n(0, _chai.expect)(form.find('.usa-input-error').length).to.equal(0);\n(0, _chai.expect)(onSubmit.called).to.be.true;\nform.unmount();",
              "err": {},
              "uuid": "f0ea58ef-6f09-402c-9bcb-f0d393831cf7",
              "parentUUID": "6653ae31-7010-4824-b1c4-5f8722545804",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should submit with all info filled in",
              "fullTitle": "Pre-need Integration Preparer military name information should submit with all info filled in",
              "timedOut": false,
              "duration": 48,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var onSubmit = _sinon.default.spy();\nvar form = (0, _enzyme.mount)(/*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  schema: schema,\n  definitions: _form.default.defaultDefinitions,\n  onSubmit: onSubmit,\n  uiSchema: uiSchema\n}));\n(0, _schemaformUtils.fillData)(form, 'input#root_application_veteran_serviceName_last', 'Smith');\n(0, _schemaformUtils.fillData)(form, 'input#root_application_veteran_serviceName_first', 'Jane');\n(0, _schemaformUtils.fillData)(form, 'input#root_application_veteran_serviceName_middle', 'M');\n(0, _schemaformUtils.fillData)(form, 'select#root_application_veteran_serviceName_suffix', 'Jr.');\nform.find('form').simulate('submit');\n(0, _chai.expect)(form.find('.usa-input-error').length).to.equal(0);\n(0, _chai.expect)(onSubmit.called).to.be.true;\nform.unmount();",
              "err": {},
              "uuid": "c1090f3b-fd97-4d19-a042-f4c80a05beed",
              "parentUUID": "6653ae31-7010-4824-b1c4-5f8722545804",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "10c9751b-a295-4b95-abf5-003e9544eec1",
            "f0ea58ef-6f09-402c-9bcb-f0d393831cf7",
            "c1090f3b-fd97-4d19-a042-f4c80a05beed"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 94,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "d3ac4522-4506-43d1-aa20-255e638fd9f6",
          "title": "Pre-need applicant relationship to vet",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/pre-need-integration/tests/config/applicantRelationshipToVet.unit.spec.jsx",
          "file": "/src/applications/pre-need-integration/tests/config/applicantRelationshipToVet.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should render",
              "fullTitle": "Pre-need applicant relationship to vet should render",
              "timedOut": false,
              "duration": 14,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var form = (0, _enzyme.mount)(/*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  schema: schema,\n  definitions: _form.default.defaultDefinitions,\n  uiSchema: uiSchema\n}));\n(0, _chai.expect)(form.find('select').length).to.equal(1);\n(0, _chai.expect)(form.find('va-additional-info').length).to.equal(1);\nform.unmount();",
              "err": {},
              "uuid": "de98ea01-342f-4320-81f8-178999112041",
              "parentUUID": "d3ac4522-4506-43d1-aa20-255e638fd9f6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should not submit empty form",
              "fullTitle": "Pre-need applicant relationship to vet should not submit empty form",
              "timedOut": false,
              "duration": 17,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var onSubmit = _sinon.default.spy();\nvar form = (0, _enzyme.mount)(/*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  schema: schema,\n  definitions: _form.default.defaultDefinitions,\n  onSubmit: onSubmit,\n  uiSchema: uiSchema\n}));\nform.find('form').simulate('submit');\n(0, _chai.expect)(form.find('.usa-input-error').length).to.equal(1);\n(0, _chai.expect)(onSubmit.called).to.be.false;\nform.unmount();",
              "err": {},
              "uuid": "77aa9245-084e-480d-8a87-b283e688342a",
              "parentUUID": "d3ac4522-4506-43d1-aa20-255e638fd9f6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should submit with required information",
              "fullTitle": "Pre-need applicant relationship to vet should submit with required information",
              "timedOut": false,
              "duration": 23,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var onSubmit = _sinon.default.spy();\nvar form = (0, _enzyme.mount)(/*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  schema: schema,\n  definitions: _form.default.defaultDefinitions,\n  onSubmit: onSubmit,\n  uiSchema: uiSchema\n}));\n(0, _schemaformUtils.fillData)(form, 'select#root_application_claimant_relationshipToVet', 'veteran');\nform.find('form').simulate('submit');\n(0, _chai.expect)(onSubmit.called).to.be.true;\nform.unmount();",
              "err": {},
              "uuid": "1b0eefc9-ac6a-460a-9b4e-9948c6817bc7",
              "parentUUID": "d3ac4522-4506-43d1-aa20-255e638fd9f6",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "de98ea01-342f-4320-81f8-178999112041",
            "77aa9245-084e-480d-8a87-b283e688342a",
            "1b0eefc9-ac6a-460a-9b4e-9948c6817bc7"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 54,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "b04c2ed3-7184-4b5c-bf63-e880a25f8685",
          "title": "Applicant Suggested Address",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/pre-need-integration/tests/config/applicantSuggestedAddress.unit.spec.jsx",
          "file": "/src/applications/pre-need-integration/tests/config/applicantSuggestedAddress.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should render suggested address radio if given a suggested address",
              "fullTitle": "Applicant Suggested Address should render suggested address radio if given a suggested address",
              "timedOut": false,
              "duration": 30,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
              "err": {},
              "uuid": "9425e81d-984d-4926-8ede-1661c24bbef5",
              "parentUUID": "b04c2ed3-7184-4b5c-bf63-e880a25f8685",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should render confirm address if NOT given a suggested address",
              "fullTitle": "Applicant Suggested Address should render confirm address if NOT given a suggested address",
              "timedOut": false,
              "duration": 13,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
              "err": {},
              "uuid": "946ed4b9-21d3-4310-869e-918b4d6923d4",
              "parentUUID": "b04c2ed3-7184-4b5c-bf63-e880a25f8685",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "9425e81d-984d-4926-8ede-1661c24bbef5",
            "946ed4b9-21d3-4310-869e-918b4d6923d4"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 43,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "ec40d7bb-bf32-43df-845a-212cabf6e7de",
          "title": "Pre-need burial benefits",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/pre-need-integration/tests/config/burialBenefits.unit.spec.jsx",
          "file": "/src/applications/pre-need-integration/tests/config/burialBenefits.unit.spec.jsx",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"Pre-need burial benefits\"",
              "fullTitle": "Pre-need burial benefits \"before each\" hook in \"Pre-need burial benefits\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "return (0, _helpers.mockFetch)(response);",
              "err": {},
              "uuid": "86784951-8bd3-4feb-99f1-2e0fb1bfbefa",
              "parentUUID": "ec40d7bb-bf32-43df-845a-212cabf6e7de",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": "should render",
              "fullTitle": "Pre-need burial benefits should render",
              "timedOut": false,
              "duration": 7,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var form = (0, _enzyme.mount)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n  store: store\n}, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  schema: schema,\n  definitions: _form.default.defaultDefinitions,\n  uiSchema: uiSchema\n})));\n(0, _chai.expect)(form.find('input').length).to.equal(3);\nform.unmount();",
              "err": {},
              "uuid": "57314047-4d2d-4b34-af91-71fdef3784e1",
              "parentUUID": "ec40d7bb-bf32-43df-845a-212cabf6e7de",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should not submit empty form",
              "fullTitle": "Pre-need burial benefits should not submit empty form",
              "timedOut": false,
              "duration": 10,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var onSubmit = _sinon.default.spy();\nvar form = (0, _enzyme.mount)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n  store: store\n}, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  schema: schema,\n  definitions: _form.default.defaultDefinitions,\n  onSubmit: onSubmit,\n  uiSchema: uiSchema\n})));\nform.find('form').simulate('submit');\n(0, _chai.expect)(form.find('.usa-input-error').length).to.equal(1);\n(0, _chai.expect)(onSubmit.called).to.be.false;\nform.unmount();",
              "err": {},
              "uuid": "a6051a57-0872-4f0e-b0c0-f6f78ba64628",
              "parentUUID": "ec40d7bb-bf32-43df-845a-212cabf6e7de",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "57314047-4d2d-4b34-af91-71fdef3784e1",
            "a6051a57-0872-4f0e-b0c0-f6f78ba64628"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 17,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "53a48ff0-383b-44e4-aba8-857ac1b904c5",
          "title": "Pre-need burial benefits",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/pre-need-integration/tests/config/burialCemetery.unit.spec.jsx",
          "file": "/src/applications/pre-need-integration/tests/config/burialCemetery.unit.spec.jsx",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"Pre-need burial benefits\"",
              "fullTitle": "Pre-need burial benefits \"before each\" hook in \"Pre-need burial benefits\"",
              "timedOut": false,
              "duration": 1,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "return (0, _helpers.mockFetch)(response);",
              "err": {},
              "uuid": "0827de60-7728-4ca7-a753-94b87d1cf24b",
              "parentUUID": "53a48ff0-383b-44e4-aba8-857ac1b904c5",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": "should render",
              "fullTitle": "Pre-need burial benefits should render",
              "timedOut": false,
              "duration": 11,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var form = (0, _enzyme.mount)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n  store: store\n}, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  schema: schema,\n  definitions: _form.default.defaultDefinitions,\n  uiSchema: uiSchema\n})));\n(0, _chai.expect)(form.find('input').length).to.equal(1);\nform.unmount();",
              "err": {},
              "uuid": "3c23d8f1-22c4-499c-90e2-5cceb5ac0803",
              "parentUUID": "53a48ff0-383b-44e4-aba8-857ac1b904c5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should fill in desired cemetery",
              "fullTitle": "Pre-need burial benefits should fill in desired cemetery",
              "timedOut": false,
              "duration": 23,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var onSubmit = _sinon.default.spy();\nvar form = (0, _enzyme.mount)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n  store: store\n}, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  schema: schema,\n  definitions: _form.default.defaultDefinitions,\n  onSubmit: onSubmit,\n  uiSchema: uiSchema\n}), ' '));\nvar cemeteryField = form.find('input#root_application_claimant_desiredCemetery');\ncemeteryField.simulate('focus').simulate('change', {\n  target: {\n    value: 'ABRAHAM LINCOLN NATIONAL CEMETERY'\n  }\n});\nsetTimeout(function () {\n  cemeteryField.simulate('keyDown', {\n    key: 'ArrowDown',\n    keyCode: 40\n  }).simulate('keyDown', {\n    key: 'Enter',\n    keyCode: 13\n  }).simulate('blur');\n  // have to pull this again, doesn't work if we use cemeteryField\n  (0, _chai.expect)(form.find('input#root_application_claimant_desiredCemetery').props().value).to.equal('ABRAHAM LINCOLN NATIONAL CEMETERY');\n  form.unmount();\n  done();\n});",
              "err": {},
              "uuid": "c74ed3db-e6ff-4ca0-8f79-427f1ad91774",
              "parentUUID": "53a48ff0-383b-44e4-aba8-857ac1b904c5",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "3c23d8f1-22c4-499c-90e2-5cceb5ac0803",
            "c74ed3db-e6ff-4ca0-8f79-427f1ad91774"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 34,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "f0110753-2dad-4a72-bde0-d7e3c25016dd",
          "title": "Pre-need burial benefits",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/pre-need-integration/tests/config/currentlyBuried.unit.spec.jsx",
          "file": "/src/applications/pre-need-integration/tests/config/currentlyBuried.unit.spec.jsx",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"Pre-need burial benefits\"",
              "fullTitle": "Pre-need burial benefits \"before each\" hook in \"Pre-need burial benefits\"",
              "timedOut": false,
              "duration": 1,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "return (0, _helpers.mockFetch)(response);",
              "err": {},
              "uuid": "5e07401a-0fb7-486d-82d7-8f682cb4c405",
              "parentUUID": "f0110753-2dad-4a72-bde0-d7e3c25016dd",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": "should render",
              "fullTitle": "Pre-need burial benefits should render",
              "timedOut": false,
              "duration": 26,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var form = (0, _enzyme.mount)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n  store: store\n}, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  schema: schema,\n  definitions: _form.default.defaultDefinitions,\n  uiSchema: uiSchema\n})));\n(0, _chai.expect)(form.find('input').length).to.equal(2);\nform.unmount();",
              "err": {},
              "uuid": "9aea0eff-96b9-44e1-8098-9dcbcc2c51cc",
              "parentUUID": "f0110753-2dad-4a72-bde0-d7e3c25016dd",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should not submit empty form",
              "fullTitle": "Pre-need burial benefits should not submit empty form",
              "timedOut": false,
              "duration": 35,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var onSubmit = _sinon.default.spy();\nvar form = (0, _enzyme.mount)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n  store: store\n}, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  schema: schema,\n  definitions: _form.default.defaultDefinitions,\n  onSubmit: onSubmit,\n  uiSchema: uiSchema\n})));\nform.find('form').simulate('submit');\n(0, _chai.expect)(form.find('.usa-input-error').length).to.equal(2);\n(0, _chai.expect)(onSubmit.called).to.be.false;\nform.unmount();",
              "err": {},
              "uuid": "379eb9bc-2239-4d33-8672-7db4f981940f",
              "parentUUID": "f0110753-2dad-4a72-bde0-d7e3c25016dd",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "9aea0eff-96b9-44e1-8098-9dcbcc2c51cc",
            "379eb9bc-2239-4d33-8672-7db4f981940f"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 61,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "3c4a2838-866c-4bb5-a7bb-3ef2ebe051e3",
          "title": "Pre-need attachments",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/pre-need-integration/tests/config/documents.unit.spec.jsx",
          "file": "/src/applications/pre-need-integration/tests/config/documents.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should render",
              "fullTitle": "Pre-need attachments should render",
              "timedOut": false,
              "duration": 14,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var form = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n  store: _helpers.uploadStore\n}, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  schema: schema,\n  definitions: _form.default.defaultDefinitions,\n  uiSchema: uiSchema,\n  data: {}\n})));\nvar formDOM = (0, _schemaformUtils.getFormDOM)(form);\n(0, _chai.expect)(formDOM.querySelectorAll('input,select').length).to.equal(1);",
              "err": {},
              "uuid": "718f2eba-7224-48fc-bfeb-ef4814a8260d",
              "parentUUID": "3c4a2838-866c-4bb5-a7bb-3ef2ebe051e3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should submit empty form",
              "fullTitle": "Pre-need attachments should submit empty form",
              "timedOut": false,
              "duration": 18,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var onSubmit = _sinon.default.spy();\nvar form = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n  store: _helpers.uploadStore\n}, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  schema: schema,\n  definitions: _form.default.defaultDefinitions,\n  onSubmit: onSubmit,\n  uiSchema: uiSchema,\n  data: {}\n})));\nvar formDOM = (0, _schemaformUtils.getFormDOM)(form);\nformDOM.submitForm();\n(0, _chai.expect)(formDOM.querySelectorAll('.usa-input-error')).to.be.empty;\n(0, _chai.expect)(onSubmit.called).to.be.true;",
              "err": {},
              "uuid": "3365aece-95b1-4918-b999-330681ce103b",
              "parentUUID": "3c4a2838-866c-4bb5-a7bb-3ef2ebe051e3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should not submit without attachment id",
              "fullTitle": "Pre-need attachments should not submit without attachment id",
              "timedOut": false,
              "duration": 25,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var onSubmit = _sinon.default.spy();\nvar form = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n  store: _helpers.uploadStore\n}, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  schema: schema,\n  data: {\n    application: {\n      preneedAttachments: [{\n        confirmationCode: 'testing'\n      }]\n    }\n  },\n  definitions: _form.default.defaultDefinitions,\n  onSubmit: onSubmit,\n  uiSchema: uiSchema\n})));\nvar formDOM = (0, _schemaformUtils.getFormDOM)(form);\nformDOM.submitForm();\n(0, _chai.expect)(formDOM.querySelectorAll('.usa-input-error').length).to.equal(1);\n(0, _chai.expect)(onSubmit.called).to.be.false;",
              "err": {},
              "uuid": "d6c51e5c-95c6-4058-bd58-1bcbea8ab998",
              "parentUUID": "3c4a2838-866c-4bb5-a7bb-3ef2ebe051e3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should not submit without required fields",
              "fullTitle": "Pre-need attachments should not submit without required fields",
              "timedOut": false,
              "duration": 24,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var onSubmit = _sinon.default.spy();\nvar form = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n  store: _helpers.uploadStore\n}, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  schema: schema,\n  data: {\n    application: {\n      preneedAttachments: [{\n        confirmationCode: 'testing'\n      }]\n    }\n  },\n  definitions: _form.default.defaultDefinitions,\n  onSubmit: onSubmit,\n  uiSchema: uiSchema\n})));\nvar formDOM = (0, _schemaformUtils.getFormDOM)(form);\nformDOM.submitForm();\n(0, _chai.expect)(formDOM.querySelectorAll('.usa-input-error').length).to.equal(1);\n(0, _chai.expect)(onSubmit.called).to.be.false;",
              "err": {},
              "uuid": "980329f9-302d-416b-bd2a-cd02577999ab",
              "parentUUID": "3c4a2838-866c-4bb5-a7bb-3ef2ebe051e3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should submit with valid data",
              "fullTitle": "Pre-need attachments should submit with valid data",
              "timedOut": false,
              "duration": 26,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var onSubmit = _sinon.default.spy();\nvar form = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n  store: _helpers.uploadStore\n}, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  schema: schema,\n  data: {\n    application: {\n      preneedAttachments: [{\n        attachmentId: '1',\n        confirmationCode: 'testing',\n        name: 'abc'\n      }, {\n        attachmentId: '1',\n        confirmationCode: 'testing2',\n        name: 'abc'\n      }]\n    }\n  },\n  definitions: _form.default.defaultDefinitions,\n  onSubmit: onSubmit,\n  uiSchema: uiSchema\n})));\nvar formDOM = (0, _schemaformUtils.getFormDOM)(form);\nformDOM.submitForm();\n(0, _chai.expect)(onSubmit.called).to.be.true;",
              "err": {},
              "uuid": "62153fc0-b0c0-441b-ab44-0223ee077e3a",
              "parentUUID": "3c4a2838-866c-4bb5-a7bb-3ef2ebe051e3",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "718f2eba-7224-48fc-bfeb-ef4814a8260d",
            "3365aece-95b1-4918-b999-330681ce103b",
            "d6c51e5c-95c6-4058-bd58-1bcbea8ab998",
            "980329f9-302d-416b-bd2a-cd02577999ab",
            "62153fc0-b0c0-441b-ab44-0223ee077e3a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 107,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "832ecff6-b5c2-4f85-ae7c-c2aa05c648e3",
          "title": "isSponsor Pre-Need Integration info",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/pre-need-integration/tests/config/isSponsor.unit.spec.jsx",
          "file": "/src/applications/pre-need-integration/tests/config/isSponsor.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should render without errors",
              "fullTitle": "isSponsor Pre-Need Integration info should render without errors",
              "timedOut": false,
              "duration": 7,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var store = mockStore({\n  form: {\n    data: {}\n  }\n});\nvar form = (0, _enzyme.mount)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n  store: store\n}, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  schema: schema,\n  definitions: _form.default.defaultDefinitions,\n  uiSchema: uiSchema\n})));\n(0, _chai.expect)(form.find('va-radio-option').length).to.equal(2);\nform.unmount();",
              "err": {},
              "uuid": "138e39be-4541-400a-9683-1fa732203512",
              "parentUUID": "832ecff6-b5c2-4f85-ae7c-c2aa05c648e3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should not submit empty form",
              "fullTitle": "isSponsor Pre-Need Integration info should not submit empty form",
              "timedOut": false,
              "duration": 12,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var store = mockStore({\n  form: {\n    data: {}\n  }\n});\nvar onSubmit = _sinon.default.spy();\nvar form = (0, _enzyme.mount)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n  store: store\n}, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  schema: schema,\n  definitions: _form.default.defaultDefinitions,\n  onSubmit: onSubmit,\n  uiSchema: uiSchema\n})));\nform.find('form').simulate('submit');\n(0, _chai.expect)(form.find('.usa-input-error').length).to.equal(1);\n(0, _chai.expect)(onSubmit.called).to.be.false;\nform.unmount();",
              "err": {},
              "uuid": "e2045488-19b9-4b6d-8513-dd7824812689",
              "parentUUID": "832ecff6-b5c2-4f85-ae7c-c2aa05c648e3",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "138e39be-4541-400a-9683-1fa732203512",
            "e2045488-19b9-4b6d-8513-dd7824812689"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 19,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "e1dbfcbb-86d8-447d-973e-cd2bef877ee7",
          "title": "Pre-need applicant non veteran applicant details",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/pre-need-integration/tests/config/nonVeteranApplicantDetails.unit.spec.jsx",
          "file": "/src/applications/pre-need-integration/tests/config/nonVeteranApplicantDetails.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should render",
              "fullTitle": "Pre-need applicant non veteran applicant details should render",
              "timedOut": false,
              "duration": 25,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var form = (0, _enzyme.mount)(/*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  schema: schema,\n  definitions: _form.default.defaultDefinitions,\n  uiSchema: uiSchema\n}));\n(0, _chai.expect)(form.find('input').length).to.equal(6);\n(0, _chai.expect)(form.find('select').length).to.equal(3);\nform.unmount();",
              "err": {},
              "uuid": "c7796a1c-ea09-4023-8787-90ee4d10357b",
              "parentUUID": "e1dbfcbb-86d8-447d-973e-cd2bef877ee7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should not submit empty form",
              "fullTitle": "Pre-need applicant non veteran applicant details should not submit empty form",
              "timedOut": false,
              "duration": 35,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var onSubmit = _sinon.default.spy();\nvar form = (0, _enzyme.mount)(/*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  schema: schema,\n  definitions: _form.default.defaultDefinitions,\n  onSubmit: onSubmit,\n  uiSchema: uiSchema\n}));\nform.find('form').simulate('submit');\n(0, _chai.expect)(form.find('.usa-input-error').length).to.equal(4);\n(0, _chai.expect)(onSubmit.called).to.be.false;\nform.unmount();",
              "err": {},
              "uuid": "03ab81a1-e150-46da-9e4a-659796b6e4ff",
              "parentUUID": "e1dbfcbb-86d8-447d-973e-cd2bef877ee7",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "c7796a1c-ea09-4023-8787-90ee4d10357b",
            "03ab81a1-e150-46da-9e4a-659796b6e4ff"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 60,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "e5cc719e-6403-4703-86d7-b91e2b6e2651",
          "title": "prefillTransformer in Pre-need Integration",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/pre-need-integration/tests/config/prefill-transformer.unit.spec.js",
          "file": "/src/applications/pre-need-integration/tests/config/prefill-transformer.unit.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should transform formData correctly",
              "fullTitle": "prefillTransformer in Pre-need Integration should transform formData correctly",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var pages = ['page1', 'page2'];\nvar formData = {\n  application: {\n    claimant: {\n      name: {\n        first: 'Bruce',\n        last: 'Wayne'\n      },\n      address: '123 BatCave St',\n      ssn: '123-45-6789',\n      dateOfBirth: '1990-01-01'\n    }\n  }\n};\nvar metadata = {\n  some: 'metadata'\n};\nvar result = (0, _prefillTransformer.default)(pages, formData, metadata);\n(0, _chai.expect)(result).to.deep.equal({\n  pages: pages,\n  formData: {\n    application: {\n      applicant: {\n        name: {\n          first: 'Bruce',\n          last: 'Wayne'\n        },\n        'view:applicantInfo': {\n          mailingAddress: '123 BatCave St'\n        }\n      },\n      claimant: {\n        name: {\n          first: 'Bruce',\n          last: 'Wayne'\n        },\n        address: '123 BatCave St',\n        ssn: '123-45-6789',\n        dateOfBirth: '1990-01-01'\n      }\n    }\n  },\n  metadata: metadata\n});",
              "err": {},
              "uuid": "3d23086e-e975-46f7-b3e5-bbe211ca1a43",
              "parentUUID": "e5cc719e-6403-4703-86d7-b91e2b6e2651",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "3d23086e-e975-46f7-b3e5-bbe211ca1a43"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "5b265023-85f7-4047-b73b-934ae6105481",
          "title": "Pre-need preparer info",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/pre-need-integration/tests/config/preparer.unit.spec.jsx",
          "file": "/src/applications/pre-need-integration/tests/config/preparer.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should render",
              "fullTitle": "Pre-need preparer info should render",
              "timedOut": false,
              "duration": 7,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var form = (0, _enzyme.mount)(/*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  schema: schema,\n  definitions: _form.default.defaultDefinitions,\n  uiSchema: uiSchema\n}));\n(0, _chai.expect)(form.find('va-radio-option').length).to.equal(2);\nform.unmount();",
              "err": {},
              "uuid": "4676ec83-6f4a-4e8b-964c-c6a6d304f6a9",
              "parentUUID": "5b265023-85f7-4047-b73b-934ae6105481",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should not submit empty form",
              "fullTitle": "Pre-need preparer info should not submit empty form",
              "timedOut": false,
              "duration": 11,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var onSubmit = _sinon.default.spy();\nvar form = (0, _enzyme.mount)(/*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  schema: schema,\n  definitions: _form.default.defaultDefinitions,\n  onSubmit: onSubmit,\n  uiSchema: uiSchema\n}));\nform.find('form').simulate('submit');\n(0, _chai.expect)(form.find('.usa-input-error').length).to.equal(1);\n(0, _chai.expect)(onSubmit.called).to.be.false;\nform.unmount();",
              "err": {},
              "uuid": "f13350c6-e752-4321-bbd4-3e89293e4031",
              "parentUUID": "5b265023-85f7-4047-b73b-934ae6105481",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "4676ec83-6f4a-4e8b-964c-c6a6d304f6a9",
            "f13350c6-e752-4321-bbd4-3e89293e4031"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 18,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "93106b35-ebad-4380-9ba3-ba3face8df9a",
          "title": "Pre-need preparer info",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/pre-need-integration/tests/config/preparerContactDetails.unit.spec.jsx",
          "file": "/src/applications/pre-need-integration/tests/config/preparerContactDetails.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should render contact details",
              "fullTitle": "Pre-need preparer info should render contact details",
              "timedOut": false,
              "duration": 61,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var form = _testUtils.default.renderIntoDocument(/*#__PURE__*/_react.default.createElement(\"div\", null, /*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n  store: store\n}, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  schema: schema,\n  data: {},\n  definitions: _form.default.defaultDefinitions,\n  uiSchema: uiSchema\n}))));\nvar formDOM = (0, _schemaformUtils.getFormDOM)(form);\nformDOM.fillData('#root_application_applicant_view\\\\:applicantInfo_mailingAddress_country', 'USA');\n(0, _chai.expect)((0, _ui.$$)('input', formDOM).length).to.equal(6);\n(0, _chai.expect)((0, _ui.$$)('select', formDOM).length).to.equal(2);",
              "err": {},
              "uuid": "29c37cbe-67d8-4fc4-9732-ade9168a858d",
              "parentUUID": "93106b35-ebad-4380-9ba3-ba3face8df9a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should render contact details",
              "fullTitle": "Pre-need preparer info should render contact details",
              "timedOut": false,
              "duration": 68,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var form = _testUtils.default.renderIntoDocument(/*#__PURE__*/_react.default.createElement(\"div\", null, /*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n  store: store\n}, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  schema: schema,\n  data: {},\n  definitions: _form.default.defaultDefinitions,\n  uiSchema: uiSchema\n}))));\nvar formDOM = (0, _schemaformUtils.getFormDOM)(form);\nformDOM.fillData('#root_application_applicant_view\\\\:applicantInfo_mailingAddress_country', 'MEX');\n(0, _chai.expect)((0, _ui.$$)('input', formDOM).length).to.equal(6);\n(0, _chai.expect)((0, _ui.$$)('select', formDOM).length).to.equal(1);",
              "err": {},
              "uuid": "4de8b254-087b-4140-92e9-120e98773325",
              "parentUUID": "93106b35-ebad-4380-9ba3-ba3face8df9a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "29c37cbe-67d8-4fc4-9732-ade9168a858d",
            "4de8b254-087b-4140-92e9-120e98773325"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 129,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "4735ebde-a371-4467-b6c2-c7739683bad8",
          "title": "Pre-need preparer Details info",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/pre-need-integration/tests/config/preparerDetails.unit.spec.jsx",
          "file": "/src/applications/pre-need-integration/tests/config/preparerDetails.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should render name input field",
              "fullTitle": "Pre-need preparer Details info should render name input field",
              "timedOut": false,
              "duration": 11,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var form = (0, _enzyme.mount)(/*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  schema: schema,\n  definitions: _form.default.defaultDefinitions,\n  uiSchema: uiSchema\n}));\n(0, _chai.expect)(form.find('input').length).to.equal(2);\nform.unmount();",
              "err": {},
              "uuid": "c9d225d7-cb28-4089-89cc-ccaac7606005",
              "parentUUID": "4735ebde-a371-4467-b6c2-c7739683bad8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should not submit empty form",
              "fullTitle": "Pre-need preparer Details info should not submit empty form",
              "timedOut": false,
              "duration": 17,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var onSubmit = _sinon.default.spy();\nuiSchema.application.applicant.name.first['ui:required'] = function () {\n  return true;\n};\nuiSchema.application.applicant.name.last['ui:required'] = function () {\n  return true;\n};\nvar form = (0, _enzyme.mount)(/*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  schema: schema,\n  definitions: _form.default.defaultDefinitions,\n  onSubmit: onSubmit,\n  uiSchema: uiSchema\n}));\nform.find('form').simulate('submit');\n(0, _chai.expect)(form.find('.usa-input-error').length).to.equal(2);\n(0, _chai.expect)(onSubmit.called).to.be.false;\nform.unmount();",
              "err": {},
              "uuid": "ce2ab2f8-983e-4d75-a002-39aa44579261",
              "parentUUID": "4735ebde-a371-4467-b6c2-c7739683bad8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should submit with required fields filled in",
              "fullTitle": "Pre-need preparer Details info should submit with required fields filled in",
              "timedOut": false,
              "duration": 21,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var onSubmit = _sinon.default.spy();\nvar form = (0, _enzyme.mount)(/*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  schema: schema,\n  definitions: _form.default.defaultDefinitions,\n  onSubmit: onSubmit,\n  uiSchema: uiSchema\n}));\nuiSchema.application.applicant.name.first['ui:required'] = function () {\n  return true;\n};\nuiSchema.application.applicant.name.last['ui:required'] = function () {\n  return true;\n};\n(0, _schemaformUtils.fillData)(form, 'input[name=\"root_application_applicant_name_first\"]', 'Jane');\n(0, _schemaformUtils.fillData)(form, 'input[name=\"root_application_applicant_name_last\"]', 'Smith');\nform.find('form').simulate('submit');\n(0, _chai.expect)(form.find('.usa-input-error').length).to.equal(0);\n(0, _chai.expect)(onSubmit.called).to.be.true;\nform.unmount();",
              "err": {},
              "uuid": "67a514e6-4a29-4aa8-b0d4-42279689c71f",
              "parentUUID": "4735ebde-a371-4467-b6c2-c7739683bad8",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "c9d225d7-cb28-4089-89cc-ccaac7606005",
            "ce2ab2f8-983e-4d75-a002-39aa44579261",
            "67a514e6-4a29-4aa8-b0d4-42279689c71f"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 49,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "3344df72-d883-488a-b891-883923571748",
          "title": "Preparer Suggested Address",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/pre-need-integration/tests/config/preparerSuggestedAddress.unit.spec.jsx",
          "file": "/src/applications/pre-need-integration/tests/config/preparerSuggestedAddress.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should render suggested address radio if given a suggested address",
              "fullTitle": "Preparer Suggested Address should render suggested address radio if given a suggested address",
              "timedOut": false,
              "duration": 19,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
              "err": {},
              "uuid": "0e362753-a422-477a-aca5-75909100cad4",
              "parentUUID": "3344df72-d883-488a-b891-883923571748",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should render confirm address if NOT given a suggested address",
              "fullTitle": "Preparer Suggested Address should render confirm address if NOT given a suggested address",
              "timedOut": false,
              "duration": 10,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
              "err": {},
              "uuid": "6c1964dd-22dc-472a-9d82-c610b868c7c2",
              "parentUUID": "3344df72-d883-488a-b891-883923571748",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "0e362753-a422-477a-aca5-75909100cad4",
            "6c1964dd-22dc-472a-9d82-c610b868c7c2"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 29,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "5305dec5-5e2e-44da-bf72-63c536894891",
          "title": "pension add federal medical centers page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/pre-need-integration/tests/config/servicePeriods.unit.spec.jsx",
          "file": "/src/applications/pre-need-integration/tests/config/servicePeriods.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should render",
              "fullTitle": "pension add federal medical centers page should render",
              "timedOut": false,
              "duration": 27,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var form = (0, _enzyme.mount)(/*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  schema: (0, _servicePeriodsPages.servicePeriodInformationPage)(true, false).schema,\n  definitions: _form.default.defaultDefinitions,\n  uiSchema: (0, _servicePeriodsPages.servicePeriodInformationPage)(true, false).uiSchema\n}));\n(0, _chai.expect)(form.find('select').length).to.equal(5);\n(0, _chai.expect)(form.find('input').length).to.equal(4);\nform.unmount();",
              "err": {},
              "uuid": "227082cc-90ad-4727-9a89-1f59adb56f00",
              "parentUUID": "5305dec5-5e2e-44da-bf72-63c536894891",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should not submit empty form",
              "fullTitle": "pension add federal medical centers page should not submit empty form",
              "timedOut": false,
              "duration": 36,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var onSubmit = _sinon.default.spy();\nvar form = (0, _enzyme.mount)(/*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  schema: (0, _servicePeriodsPages.servicePeriodInformationPage)(true, false).schema,\n  definitions: _form.default.defaultDefinitions,\n  onSubmit: onSubmit,\n  uiSchema: (0, _servicePeriodsPages.servicePeriodInformationPage)(true, false).uiSchema\n}));\nform.find('form').simulate('submit');\n(0, _chai.expect)(form.find('.usa-input-error').length).to.equal(1);\n(0, _chai.expect)(onSubmit.called).to.be.false;\nform.unmount();",
              "err": {},
              "uuid": "648647e8-7936-43a7-9d3a-0ec20822102d",
              "parentUUID": "5305dec5-5e2e-44da-bf72-63c536894891",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should handle page text",
              "fullTitle": "pension add federal medical centers page should handle page text",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, _chai.expect)((0, _servicePeriodsPages.handleGetItemName)({\n  serviceBranch: 'AC'\n})).to.equal('U.S. Army Air Corps');\n(0, _chai.expect)((0, _servicePeriodsPages.handleAlertMaxItems)()).to.equal('You have added the maximum number of allowed service periods for this application. You may edit or delete a service period or choose to continue the application.');\n(0, _chai.expect)((0, _servicePeriodsPages.handleCardDescription)({\n  dateRange: {\n    from: '19500315',\n    to: '20000523'\n  }\n})).to.equal('03/15/1950 - 05/23/2000');\n(0, _chai.expect)((0, _servicePeriodsPages.handleCancelAddTitle)({\n  getItemName: _servicePeriodsPages.handleGetItemName,\n  itemData: {\n    serviceBranch: 'AC'\n  }\n})).to.equal('Cancel adding U.S. Army Air Corps service period');\n(0, _chai.expect)((0, _servicePeriodsPages.handleCancelAddTitle)({\n  getItemName: _servicePeriodsPages.handleGetItemName,\n  itemData: {\n    serviceBranch: null\n  }\n})).to.equal('Cancel adding this service period');\n(0, _chai.expect)((0, _servicePeriodsPages.handleCancelAddNo)()).to.equal('No, keep this');\n(0, _chai.expect)((0, _servicePeriodsPages.handleDeleteTitle)({\n  getItemName: _servicePeriodsPages.handleGetItemName,\n  itemData: {\n    serviceBranch: 'AC'\n  }\n})).to.equal('Are you sure you want to remove this U.S. Army Air Corps service period?');\n(0, _chai.expect)((0, _servicePeriodsPages.handleDeleteDescription)({\n  getItemName: _servicePeriodsPages.handleGetItemName,\n  itemData: {\n    serviceBranch: 'AC'\n  }\n})).to.equal('This will remove U.S. Army Air Corps and all the information from the service period records.');\n(0, _chai.expect)((0, _servicePeriodsPages.handleDeleteNeedAtLeastOneDescription)()).to.equal('If you remove this service period, we’ll take you to a screen where you can add another service period. You’ll need to list at least one service period for us to process this form.');\n(0, _chai.expect)((0, _servicePeriodsPages.handleDeleteYes)()).to.equal('Yes, remove this');\n(0, _chai.expect)((0, _servicePeriodsPages.handleDeleteNo)()).to.equal('No, keep this');\n(0, _chai.expect)((0, _servicePeriodsPages.handleCancelEditTitle)({\n  getItemName: _servicePeriodsPages.handleGetItemName,\n  itemData: {\n    serviceBranch: 'AC'\n  }\n})).to.equal('Cancel editing U.S. Army Air Corps service period?');\n(0, _chai.expect)((0, _servicePeriodsPages.handleCancelEditDescription)()).to.equal('If you cancel, you’ll lose any changes you made on this screen and you will be returned to the service periods review page.');\n(0, _chai.expect)((0, _servicePeriodsPages.handleCancelEditYes)()).to.equal('Yes, cancel');\n(0, _chai.expect)((0, _servicePeriodsPages.handleCancelEditNo)()).to.equal('No, keep this');\n(0, _chai.expect)((0, _servicePeriodsPages.handleSummaryTitle)({})).to.equal('Review service period records');\n(0, _chai.expect)((0, _servicePeriodsPages.handleVeteranDepends)({\n  application: {\n    claimant: {\n      relationshipToVet: 'veteran'\n    },\n    applicant: {\n      applicantRelationshipToClaimant: 'Authorized Agent/Rep'\n    }\n  }\n})).to.equal(false);\n(0, _chai.expect)((0, _servicePeriodsPages.handlePreparerVeteranDepends)({\n  application: {\n    claimant: {\n      relationshipToVet: 'veteran'\n    },\n    applicant: {\n      applicantRelationshipToClaimant: 'Authorized Agent/Rep'\n    }\n  }\n})).to.equal(true);\n(0, _chai.expect)((0, _servicePeriodsPages.handleNonVeteranDepends)({\n  application: {\n    claimant: {\n      relationshipToVet: 'veteran'\n    },\n    applicant: {\n      applicantRelationshipToClaimant: 'Authorized Agent/Rep'\n    }\n  }\n})).to.equal(false);\n(0, _chai.expect)((0, _servicePeriodsPages.handlePreparerNonVeteranDepends)({\n  application: {\n    claimant: {\n      relationshipToVet: 'veteran'\n    },\n    applicant: {\n      applicantRelationshipToClaimant: 'Authorized Agent/Rep'\n    }\n  }\n})).to.equal(false);",
              "err": {},
              "uuid": "687f1724-dcc8-4fcf-9f94-efdbd8d610ed",
              "parentUUID": "5305dec5-5e2e-44da-bf72-63c536894891",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "227082cc-90ad-4727-9a89-1f59adb56f00",
            "648647e8-7936-43a7-9d3a-0ec20822102d",
            "687f1724-dcc8-4fcf-9f94-efdbd8d610ed"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 65,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "7fa73dfb-b970-4830-9466-5c8222abcde1",
          "title": "Pre-need sponsor date of death",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/pre-need-integration/tests/config/sponsorDateOfDeath.unit.spec.jsx",
          "file": "/src/applications/pre-need-integration/tests/config/sponsorDateOfDeath.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should render",
              "fullTitle": "Pre-need sponsor date of death should render",
              "timedOut": false,
              "duration": 10,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var form = (0, _enzyme.mount)(/*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  schema: schema,\n  definitions: _form.default.defaultDefinitions,\n  uiSchema: uiSchema\n}));\n(0, _chai.expect)(form.find('input').length).to.equal(1);\n(0, _chai.expect)(form.find('select').length).to.equal(2);\nform.unmount();",
              "err": {},
              "uuid": "4264a5b4-87a2-4bcb-aef7-513ec2b61079",
              "parentUUID": "7fa73dfb-b970-4830-9466-5c8222abcde1",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "4264a5b4-87a2-4bcb-aef7-513ec2b61079"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 10,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "f87b35a1-cf16-4dac-b78e-d4dc358c3862",
          "title": "Pre-need sponsor is deceased",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/pre-need-integration/tests/config/sponsorDeceased.unit.spec.jsx",
          "file": "/src/applications/pre-need-integration/tests/config/sponsorDeceased.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should render",
              "fullTitle": "Pre-need sponsor is deceased should render",
              "timedOut": false,
              "duration": 9,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var form = (0, _enzyme.mount)(/*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  schema: schema,\n  definitions: _form.default.defaultDefinitions,\n  uiSchema: uiSchema\n}));\n(0, _chai.expect)(form.find('input').length).to.equal(3);\nform.unmount();",
              "err": {},
              "uuid": "c2944cbb-2e49-4375-8088-a00c20f29694",
              "parentUUID": "f87b35a1-cf16-4dac-b78e-d4dc358c3862",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should not submit empty form",
              "fullTitle": "Pre-need sponsor is deceased should not submit empty form",
              "timedOut": false,
              "duration": 14,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var onSubmit = _sinon.default.spy();\nvar form = (0, _enzyme.mount)(/*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  schema: schema,\n  definitions: _form.default.defaultDefinitions,\n  onSubmit: onSubmit,\n  uiSchema: uiSchema\n}));\nform.find('form').simulate('submit');\n(0, _chai.expect)(form.find('.usa-input-error').length).to.equal(1);\n(0, _chai.expect)(onSubmit.called).to.be.false;\nform.unmount();",
              "err": {},
              "uuid": "b90b5ef9-7e8c-4da6-b1c6-3e0df47b2d58",
              "parentUUID": "f87b35a1-cf16-4dac-b78e-d4dc358c3862",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should submit with required information",
              "fullTitle": "Pre-need sponsor is deceased should submit with required information",
              "timedOut": false,
              "duration": 14,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var onSubmit = _sinon.default.spy();\nvar form = (0, _enzyme.mount)(/*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  schema: schema,\n  definitions: _form.default.defaultDefinitions,\n  onSubmit: onSubmit,\n  uiSchema: uiSchema\n}));\n(0, _schemaformUtils.selectRadio)(form, 'root_application_veteran_isDeceased', 'no');\nform.find('form').simulate('submit');\n(0, _chai.expect)(onSubmit.called).to.be.true;\nform.unmount();",
              "err": {},
              "uuid": "6aa4a884-9ba1-4c65-88b8-1dab94d1c3aa",
              "parentUUID": "f87b35a1-cf16-4dac-b78e-d4dc358c3862",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "c2944cbb-2e49-4375-8088-a00c20f29694",
            "b90b5ef9-7e8c-4da6-b1c6-3e0df47b2d58",
            "6aa4a884-9ba1-4c65-88b8-1dab94d1c3aa"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 37,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "7161a79f-07dc-475e-9ecc-d6e1572f87b7",
          "title": "Pre-need sponsor demographics",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/pre-need-integration/tests/config/sponsorDemographics.unit.spec.jsx",
          "file": "/src/applications/pre-need-integration/tests/config/sponsorDemographics.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should render",
              "fullTitle": "Pre-need sponsor demographics should render",
              "timedOut": false,
              "duration": 0,
              "state": "pending",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": true,
              "context": null,
              "code": "",
              "err": {},
              "uuid": "d9e0e072-c382-4fff-8135-eae8569ff10c",
              "parentUUID": "7161a79f-07dc-475e-9ecc-d6e1572f87b7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should not submit empty form",
              "fullTitle": "Pre-need sponsor demographics should not submit empty form",
              "timedOut": false,
              "duration": 0,
              "state": "pending",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": true,
              "context": null,
              "code": "",
              "err": {},
              "uuid": "38310e36-b0e7-4f1e-93a1-6491fa3dae3c",
              "parentUUID": "7161a79f-07dc-475e-9ecc-d6e1572f87b7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should submit with required information",
              "fullTitle": "Pre-need sponsor demographics should submit with required information",
              "timedOut": false,
              "duration": 0,
              "state": "pending",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": true,
              "context": null,
              "code": "",
              "err": {},
              "uuid": "d7fe8faf-aa31-42f1-88b7-9ec8f6f936b0",
              "parentUUID": "7161a79f-07dc-475e-9ecc-d6e1572f87b7",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [],
          "pending": [
            "d9e0e072-c382-4fff-8135-eae8569ff10c",
            "38310e36-b0e7-4f1e-93a1-6491fa3dae3c",
            "d7fe8faf-aa31-42f1-88b7-9ec8f6f936b0"
          ],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "d8a282ad-6e8d-4b3e-b955-7f81fd49cecf",
          "title": "Pre-need sponsor details",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/pre-need-integration/tests/config/sponsorDetails.unit.spec.jsx",
          "file": "/src/applications/pre-need-integration/tests/config/sponsorDetails.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should render",
              "fullTitle": "Pre-need sponsor details should render",
              "timedOut": false,
              "duration": 19,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var form = (0, _enzyme.mount)(/*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  schema: schema,\n  definitions: _form.default.defaultDefinitions,\n  uiSchema: uiSchema\n}));\n(0, _chai.expect)(form.find('input').length).to.equal(8);\n(0, _chai.expect)(form.find('select').length).to.equal(3);\nform.unmount();",
              "err": {},
              "uuid": "0841676a-c8b8-4cca-b70c-a2f9f84022a5",
              "parentUUID": "d8a282ad-6e8d-4b3e-b955-7f81fd49cecf",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "0841676a-c8b8-4cca-b70c-a2f9f84022a5"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 19,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "eb2fadea-92c9-4b73-8243-ddbbdf58f70f",
          "title": "Pre-need sponsor military name information",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/pre-need-integration/tests/config/sponsorMilitaryNameInformation.unit.spec.jsx",
          "file": "/src/applications/pre-need-integration/tests/config/sponsorMilitaryNameInformation.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should render",
              "fullTitle": "Pre-need sponsor military name information should render",
              "timedOut": false,
              "duration": 10,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var form = (0, _enzyme.mount)(/*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  schema: schema,\n  definitions: _form.default.defaultDefinitions,\n  uiSchema: uiSchema\n}));\n(0, _chai.expect)(form.find('input').length).to.equal(3);\n(0, _chai.expect)(form.find('select').length).to.equal(1);\nform.unmount();",
              "err": {},
              "uuid": "4574fe3e-3183-40e5-9673-63d5d3e99d44",
              "parentUUID": "eb2fadea-92c9-4b73-8243-ddbbdf58f70f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should submit with required fields filled in",
              "fullTitle": "Pre-need sponsor military name information should submit with required fields filled in",
              "timedOut": false,
              "duration": 20,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var onSubmit = _sinon.default.spy();\nvar form = (0, _enzyme.mount)(/*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  schema: schema,\n  definitions: _form.default.defaultDefinitions,\n  onSubmit: onSubmit,\n  uiSchema: uiSchema\n}));\n(0, _schemaformUtils.fillData)(form, 'input#root_application_veteran_serviceName_last', 'Smith');\n(0, _schemaformUtils.fillData)(form, 'input#root_application_veteran_serviceName_first', 'Jane');\nform.find('form').simulate('submit');\n(0, _chai.expect)(form.find('.usa-input-error').length).to.equal(0);\n(0, _chai.expect)(onSubmit.called).to.be.true;\nform.unmount();",
              "err": {},
              "uuid": "c8c9097b-6999-48e3-a59a-4a925a55a6d3",
              "parentUUID": "eb2fadea-92c9-4b73-8243-ddbbdf58f70f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should submit with all info filled in",
              "fullTitle": "Pre-need sponsor military name information should submit with all info filled in",
              "timedOut": false,
              "duration": 33,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var onSubmit = _sinon.default.spy();\nvar form = (0, _enzyme.mount)(/*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  schema: schema,\n  definitions: _form.default.defaultDefinitions,\n  onSubmit: onSubmit,\n  uiSchema: uiSchema\n}));\n(0, _schemaformUtils.fillData)(form, 'input#root_application_veteran_serviceName_last', 'Smith');\n(0, _schemaformUtils.fillData)(form, 'input#root_application_veteran_serviceName_first', 'Jane');\n(0, _schemaformUtils.fillData)(form, 'input#root_application_veteran_serviceName_middle', 'M');\n(0, _schemaformUtils.fillData)(form, 'select#root_application_veteran_serviceName_suffix', 'Jr.');\nform.find('form').simulate('submit');\n(0, _chai.expect)(form.find('.usa-input-error').length).to.equal(0);\n(0, _chai.expect)(onSubmit.called).to.be.true;\nform.unmount();",
              "err": {},
              "uuid": "ed78b8b6-44f2-4a77-9164-4bcc18827a54",
              "parentUUID": "eb2fadea-92c9-4b73-8243-ddbbdf58f70f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "4574fe3e-3183-40e5-9673-63d5d3e99d44",
            "c8c9097b-6999-48e3-a59a-4a925a55a6d3",
            "ed78b8b6-44f2-4a77-9164-4bcc18827a54"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 63,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "0839573e-b298-4534-9589-46b992183bfb",
          "title": "Pre-need applicant demographics",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/pre-need-integration/tests/config/sponsorRace.unit.spec.jsx",
          "file": "/src/applications/pre-need-integration/tests/config/sponsorRace.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should render",
              "fullTitle": "Pre-need applicant demographics should render",
              "timedOut": false,
              "duration": 10,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var form = (0, _enzyme.mount)(/*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  schema: schema,\n  definitions: _form.default.defaultDefinitions,\n  uiSchema: uiSchema\n}));\n(0, _chai.expect)(form.find('input').length).to.equal(4);\n(0, _chai.expect)(form.find('va-checkbox').length).to.equal(7);\nform.unmount();",
              "err": {},
              "uuid": "776f35e2-0771-4bea-a057-6306fd92c788",
              "parentUUID": "0839573e-b298-4534-9589-46b992183bfb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should not submit empty form",
              "fullTitle": "Pre-need applicant demographics should not submit empty form",
              "timedOut": false,
              "duration": 16,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var onSubmit = _sinon.default.spy();\nvar form = (0, _enzyme.mount)(/*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  schema: schema,\n  definitions: _form.default.defaultDefinitions,\n  onSubmit: onSubmit,\n  uiSchema: uiSchema\n}));\nform.find('form').simulate('submit');\n(0, _chai.expect)(form.find('.usa-input-error').length).to.equal(1);\n(0, _chai.expect)(form.find('va-checkbox-group[error]').length).to.equal(1);\n(0, _chai.expect)(onSubmit.called).to.be.false;\nform.unmount();",
              "err": {},
              "uuid": "f99f1fb1-f7e8-41e4-833a-4d23b4b40530",
              "parentUUID": "0839573e-b298-4534-9589-46b992183bfb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should check required boxes",
              "fullTitle": "Pre-need applicant demographics should check required boxes",
              "timedOut": false,
              "duration": 15,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var onSubmit = _sinon.default.spy();\nvar form = (0, _enzyme.mount)(/*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  schema: schema,\n  definitions: _form.default.defaultDefinitions,\n  onSubmit: onSubmit,\n  uiSchema: uiSchema\n}));\n(0, _schemaformUtils.fillData)(form, 'input#root_application_veteran_ethnicity_2', 'unknown');\nform.find('va-checkbox[name*=\"root_application_veteran_race_isAsian\"]').simulate('change', {\n  target: {\n    checked: true\n  }\n});\n(0, _chai.expect)(form.find('va-checkbox[name*=\"root_application_veteran_race_isAsian\"]').exists()).to.be.true;\nform.unmount();",
              "err": {},
              "uuid": "efad059b-0a89-4955-a14f-e740aec11368",
              "parentUUID": "0839573e-b298-4534-9589-46b992183bfb",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "776f35e2-0771-4bea-a057-6306fd92c788",
            "f99f1fb1-f7e8-41e4-833a-4d23b4b40530",
            "efad059b-0a89-4955-a14f-e740aec11368"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 41,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "32f5a285-6cfb-44e5-bd4a-cdae8ce6cb5e",
          "title": "Sponsor Suggested Address",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/pre-need-integration/tests/config/sponsorSuggestedAddress.unit.spec.jsx",
          "file": "/src/applications/pre-need-integration/tests/config/sponsorSuggestedAddress.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should render suggested address radio if given a suggested address",
              "fullTitle": "Sponsor Suggested Address should render suggested address radio if given a suggested address",
              "timedOut": false,
              "duration": 14,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
              "err": {},
              "uuid": "dbf4fa0c-71f4-4bed-9c77-6fb7f9408d21",
              "parentUUID": "32f5a285-6cfb-44e5-bd4a-cdae8ce6cb5e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should render confirm address if NOT given a suggested address",
              "fullTitle": "Sponsor Suggested Address should render confirm address if NOT given a suggested address",
              "timedOut": false,
              "duration": 8,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
              "err": {},
              "uuid": "27950f78-7f23-4435-933d-89301ffc3567",
              "parentUUID": "32f5a285-6cfb-44e5-bd4a-cdae8ce6cb5e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "dbf4fa0c-71f4-4bed-9c77-6fb7f9408d21",
            "27950f78-7f23-4435-933d-89301ffc3567"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 22,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "e10bca72-5cb3-4354-8be1-2e1e69d16d35",
          "title": "transformForSubmit in Pre-need Integration",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/pre-need-integration/tests/config/transformForSubmit.unit.spec.js",
          "file": "/src/applications/pre-need-integration/tests/config/transformForSubmit.unit.spec.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"transformForSubmit in Pre-need Integration\"",
              "fullTitle": "transformForSubmit in Pre-need Integration \"before each\" hook in \"transformForSubmit in Pre-need Integration\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "mockFormConfig = {\n  formId: 'test-form-id'\n};\nmockForm = {\n  data: {\n    application: {\n      applicant: {\n        applicantRelationshipToClaimant: 'Self',\n        name: 'Sonic Hedgehog',\n        mailingAddress: '123 GreenHillZone Street'\n      }\n    }\n  }\n};",
              "err": {},
              "uuid": "43cee09a-a264-41ac-ab21-6ce0cabd60d4",
              "parentUUID": "e10bca72-5cb3-4354-8be1-2e1e69d16d35",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": "should run without crashing and produce valid output",
              "fullTitle": "transformForSubmit in Pre-need Integration should run without crashing and produce valid output",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var result = (0, _transformForSubmit.default)(mockFormConfig, mockForm);\n(0, _chai.expect)(result).to.be.a('string');\nvar parsedResult = JSON.parse(result);\n(0, _chai.expect)(parsedResult).to.have.property('formNumber', 'test-form-id');\n(0, _chai.expect)(parsedResult).to.have.property('version', 'int');\n(0, _chai.expect)(parsedResult.application.applicant).to.not.have.property('name');\n(0, _chai.expect)(parsedResult.application.applicant).to.not.have.property('mailingAddress');",
              "err": {},
              "uuid": "3acde32f-d937-4a01-9f84-453ccb15e0f6",
              "parentUUID": "e10bca72-5cb3-4354-8be1-2e1e69d16d35",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "3acde32f-d937-4a01-9f84-453ccb15e0f6"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "d8b30173-db01-4a0c-b124-a7a39c214376",
          "title": "Pre-need applicant veteran applicant details",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/pre-need-integration/tests/config/veteranApplicantDetails.unit.spec.jsx",
          "file": "/src/applications/pre-need-integration/tests/config/veteranApplicantDetails.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should render",
              "fullTitle": "Pre-need applicant veteran applicant details should render",
              "timedOut": false,
              "duration": 21,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var form = (0, _enzyme.mount)(/*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  schema: schema,\n  definitions: _form.default.defaultDefinitions,\n  uiSchema: uiSchema\n}));\n(0, _chai.expect)(form.find('input').length).to.equal(8);\n(0, _chai.expect)(form.find('select').length).to.equal(3);\nform.unmount();",
              "err": {},
              "uuid": "11e4e897-38fa-4cfb-906c-1e40f7300ca4",
              "parentUUID": "d8b30173-db01-4a0c-b124-a7a39c214376",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should not submit empty form",
              "fullTitle": "Pre-need applicant veteran applicant details should not submit empty form",
              "timedOut": false,
              "duration": 32,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var onSubmit = _sinon.default.spy();\nvar form = (0, _enzyme.mount)(/*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  schema: schema,\n  definitions: _form.default.defaultDefinitions,\n  onSubmit: onSubmit,\n  uiSchema: uiSchema\n}));\nform.find('form').simulate('submit');\n(0, _chai.expect)(form.find('.usa-input-error').length).to.equal(6);\n(0, _chai.expect)(onSubmit.called).to.be.false;\nform.unmount();",
              "err": {},
              "uuid": "f01c1ef1-b870-4f1c-a7eb-7dd4d406f714",
              "parentUUID": "d8b30173-db01-4a0c-b124-a7a39c214376",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "11e4e897-38fa-4cfb-906c-1e40f7300ca4",
            "f01c1ef1-b870-4f1c-a7eb-7dd4d406f714"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 53,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "22e69318-568e-4ef8-8c20-6590d3215c35",
          "title": "Pre-need ConfirmationPage component",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/pre-need-integration/tests/containers/ConfirmationPage.unit.spec.jsx",
          "file": "/src/applications/pre-need-integration/tests/containers/ConfirmationPage.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "it should render",
              "fullTitle": "Pre-need ConfirmationPage component it should render",
              "timedOut": false,
              "duration": 15,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var screen = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n  store: mockStore(storeBase1)\n}, /*#__PURE__*/_react.default.createElement(_ConfirmationPage.default, null)));\n(0, _chai.expect)(screen.getByText('You’ve submitted your application')).to.exist;",
              "err": {},
              "uuid": "a7feca29-4df9-4cb3-af74-c6cc27bb5d6b",
              "parentUUID": "22e69318-568e-4ef8-8c20-6590d3215c35",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "it should show response dependent text",
              "fullTitle": "Pre-need ConfirmationPage component it should show response dependent text",
              "timedOut": false,
              "duration": 7,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var screen = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n  store: mockStore(storeBase1)\n}, /*#__PURE__*/_react.default.createElement(_ConfirmationPage.default, null)));\n(0, _chai.expect)(screen.getByText('Oct. 25, 2023')).to.exist;",
              "err": {},
              "uuid": "f731f339-3a2c-48db-ba00-c029bc5b2705",
              "parentUUID": "22e69318-568e-4ef8-8c20-6590d3215c35",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a7feca29-4df9-4cb3-af74-c6cc27bb5d6b",
            "f731f339-3a2c-48db-ba00-c029bc5b2705"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 22,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "ea4f8da6-f9b6-4c73-8d6b-5c5388c267a5",
          "title": "Pre-need definition address",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/pre-need-integration/tests/definitions/address.unit.spec.jsx",
          "file": "/src/applications/pre-need-integration/tests/definitions/address.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should render address",
              "fullTitle": "Pre-need definition address should render address",
              "timedOut": false,
              "duration": 47,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var s = (0, _address.schema)(addressSchema, false);\nvar uis = (0, _address.uiSchema)();\nvar form = (0, _enzyme.mount)(/*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  schema: s,\n  uiSchema: uis\n}));\n// Count the form elements\nvar inputs = form.find('input');\nvar selects = form.find('select');\n(0, _chai.expect)(inputs.length).to.equal(4);\n(0, _chai.expect)(selects.length).to.equal(2);\n// Postal code should be small\n(0, _chai.expect)(inputs.last().is('.usa-input-medium')).to.be.true;\n// country is USA and there is no blank option\n(0, _chai.expect)(selects.first().props().value).to.equal('USA');\n(0, _chai.expect)(selects.first().find('option').everyWhere(function (n) {\n  return !!n.props().value;\n})).to.be.true;\nform.unmount();",
              "err": {},
              "uuid": "02f71781-0401-4e74-9bc7-9497775d45d2",
              "parentUUID": "ea4f8da6-f9b6-4c73-8d6b-5c5388c267a5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should have required inputs if required",
              "fullTitle": "Pre-need definition address should have required inputs if required",
              "timedOut": false,
              "duration": 42,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var s = (0, _address.schema)(addressSchema, true);\nvar uis = (0, _address.uiSchema)();\nvar form = (0, _enzyme.mount)(/*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  schema: s,\n  uiSchema: uis\n}));\n// Ideally, we'd get the required inputs, not the <span>s denoting required\n//  fields but this doesn't work.\n// const requiredInputs = formDOM.querySelectorAll('input[required=true]');\nvar requiredInputs = form.find('label').find('span.schemaform-required-span');\n(0, _chai.expect)(requiredInputs.length).to.not.equal(0);\nform.unmount();",
              "err": {},
              "uuid": "36e141cd-6dfa-4ed2-986f-b9692bffecf2",
              "parentUUID": "ea4f8da6-f9b6-4c73-8d6b-5c5388c267a5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should update labels and state selection conditionally",
              "fullTitle": "Pre-need definition address should update labels and state selection conditionally",
              "timedOut": false,
              "duration": 67,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var s = (0, _address.schema)(addressSchema, false);\nvar uis = (0, _address.uiSchema)();\nvar form = (0, _enzyme.mount)(/*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  schema: s,\n  uiSchema: uis\n}));\nvar labels = form.find('label');\nvar postalCodeLabel = labels.findWhere(function (label) {\n  return label.props().htmlFor === 'root_postalCode';\n});\nvar stateLabel = labels.findWhere(function (label) {\n  return label.props().htmlFor === 'root_state';\n});\nvar stateField = form.find('select#root_state');\n// Check the labels' text\n(0, _chai.expect)(postalCodeLabel.text()).to.equal('Postal code');\n(0, _chai.expect)(stateLabel.text()).to.equal('State');\n// And state input type / options\n(0, _chai.expect)(stateField.find('option').someWhere(function (n) {\n  return n.props().value === 'OR';\n})).to.be.true;\n// Entering a military city should result in different \"state\" options\n(0, _schemaformUtils.fillData)(form, 'input#root_city', 'apo');\n(0, _chai.expect)(stateField.find('option').someWhere(function (n) {\n  return n.props().value === 'AA';\n})).to.be.true;\n// Change the country\n(0, _schemaformUtils.fillData)(form, 'select#root_country', 'CAN');\n// Check to see if the postal code and state updated\n(0, _chai.expect)(stateLabel.text()).to.equal('Province');\n(0, _chai.expect)(postalCodeLabel.text()).to.equal('Postal code');\n(0, _chai.expect)(form.find('select#root_state').find('option').someWhere(function (n) {\n  return n.props().value === 'QC';\n})).to.be.true;\n(0, _schemaformUtils.fillData)(form, 'select#root_country', 'BEL');\n(0, _chai.expect)(form.find('input#root_state').exists()).to.be.true;\nform.unmount();",
              "err": {},
              "uuid": "89719727-3977-433b-b4cc-7693f40d725b",
              "parentUUID": "ea4f8da6-f9b6-4c73-8d6b-5c5388c267a5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should update address field",
              "fullTitle": "Pre-need definition address should update address field",
              "timedOut": false,
              "duration": 35,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var s = (0, _address.schema)(addressSchema, false);\nvar uis = (0, _address.uiSchema)();\nvar form = (0, _enzyme.mount)(/*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  schema: s,\n  uiSchema: uis\n}));\n(0, _schemaformUtils.fillData)(form, 'input#root_street', '123 street');\n(0, _chai.expect)(form.find('input#root_street').props().value).to.equal('123 street');\nform.unmount();",
              "err": {},
              "uuid": "219965d6-4b44-431a-a9e6-b66ba2713975",
              "parentUUID": "ea4f8da6-f9b6-4c73-8d6b-5c5388c267a5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should update country field in empty address",
              "fullTitle": "Pre-need definition address should update country field in empty address",
              "timedOut": false,
              "duration": 42,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var s = (0, _address.schema)(addressSchema, false);\nvar uis = (0, _address.uiSchema)();\nvar form = (0, _enzyme.mount)(/*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  schema: s,\n  uiSchema: uis\n}));\n(0, _schemaformUtils.fillData)(form, 'select#root_country', 'CAN');\n(0, _chai.expect)(form.find('select#root_country').props().value).to.equal('CAN');\nform.unmount();",
              "err": {},
              "uuid": "c70118f1-bf45-4565-adfc-340b92a5cd0e",
              "parentUUID": "ea4f8da6-f9b6-4c73-8d6b-5c5388c267a5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should require state for non-required addresses with other info",
              "fullTitle": "Pre-need definition address should require state for non-required addresses with other info",
              "timedOut": false,
              "duration": 49,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var s = (0, _address.schema)(addressSchema, false);\nvar uis = (0, _address.uiSchema)();\nvar form = (0, _enzyme.mount)(/*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  schema: s,\n  uiSchema: uis\n}));\n(0, _schemaformUtils.fillData)(form, 'input#root_street', '123 st');\n(0, _schemaformUtils.fillData)(form, 'input#root_city', 'Northampton');\n(0, _schemaformUtils.fillData)(form, 'input#root_postalCode', '12345');\nform.find('form').simulate('submit');\n(0, _chai.expect)(form.find('.usa-input-error-message').length).to.equal(1);\nform.unmount();",
              "err": {},
              "uuid": "24f03aea-cccd-4e35-893f-b8f46c6702a2",
              "parentUUID": "ea4f8da6-f9b6-4c73-8d6b-5c5388c267a5",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "02f71781-0401-4e74-9bc7-9497775d45d2",
            "36e141cd-6dfa-4ed2-986f-b9692bffecf2",
            "89719727-3977-433b-b4cc-7693f40d725b",
            "219965d6-4b44-431a-a9e6-b66ba2713975",
            "c70118f1-bf45-4565-adfc-340b92a5cd0e",
            "24f03aea-cccd-4e35-893f-b8f46c6702a2"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 282,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "9e6c07b9-0a54-4bae-a74f-57eae7a500cd",
          "title": "Pre-need Schemaform definition fullName",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/pre-need-integration/tests/definitions/email.unit.spec.jsx",
          "file": "/src/applications/pre-need-integration/tests/definitions/email.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should render fullName",
              "fullTitle": "Pre-need Schemaform definition fullName should render fullName",
              "timedOut": false,
              "duration": 6,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var form = _testUtils.default.renderIntoDocument(/*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  schema: _definitions.default.email,\n  uiSchema: _email.default\n}));\nvar formDOM = (0, _reactDom.findDOMNode)(form);\nvar inputs = formDOM.querySelectorAll('input');\n(0, _chai.expect)(inputs.length).to.equal(1);",
              "err": {},
              "uuid": "51ca6023-6df1-4020-ae4d-6172e7c5c84a",
              "parentUUID": "9e6c07b9-0a54-4bae-a74f-57eae7a500cd",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "51ca6023-6df1-4020-ae4d-6172e7c5c84a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 6,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "4ff4772e-ebcc-4859-b6f6-b8ac039931d8",
          "title": "Pre-need Schemaform definition fullName",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/pre-need-integration/tests/definitions/fullName.unit.spec.jsx",
          "file": "/src/applications/pre-need-integration/tests/definitions/fullName.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should render fullName",
              "fullTitle": "Pre-need Schemaform definition fullName should render fullName",
              "timedOut": false,
              "duration": 5,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var form = _testUtils.default.renderIntoDocument(/*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  schema: _definitions.default.fullName,\n  uiSchema: _fullName.default\n}));\nvar formDOM = (0, _reactDom.findDOMNode)(form);\nvar inputs = formDOM.querySelectorAll('input');\n(0, _chai.expect)(inputs.length).to.equal(2);",
              "err": {},
              "uuid": "5124b083-8540-4ee0-b6c7-aabacda21656",
              "parentUUID": "4ff4772e-ebcc-4859-b6f6-b8ac039931d8",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "5124b083-8540-4ee0-b6c7-aabacda21656"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 5,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "6c1760e3-d237-4ecd-917b-2b7f8126247e",
          "title": "Preneed helpers",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/pre-need-integration/tests/utils/helpers.unit.spec.js",
          "file": "/src/applications/pre-need-integration/tests/utils/helpers.unit.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "5588932f-504e-41bb-a567-147f8fbebb10",
              "title": "transform",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/pre-need-integration/tests/utils/helpers.unit.spec.js",
              "file": "/src/applications/pre-need-integration/tests/utils/helpers.unit.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should remove view fields",
                  "fullTitle": "Preneed helpers transform should remove view fields",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var data = JSON.parse((0, _helpers.transform)({}, {\n  data: {\n    application: {\n      claimant: {},\n      veteran: {},\n      'view:testing': 'asdfadf'\n    }\n  }\n}));\n(0, _chai.expect)(data.application['view:testing']).to.be.undefined;",
                  "err": {},
                  "uuid": "f0d95f6f-eeea-42b9-8e4a-3db8781e20e3",
                  "parentUUID": "5588932f-504e-41bb-a567-147f8fbebb10",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should populate service name",
                  "fullTitle": "Preneed helpers transform should populate service name",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var data = JSON.parse((0, _helpers.transform)({}, {\n  data: {\n    application: {\n      claimant: {},\n      veteran: {\n        currentName: 'testing'\n      },\n      'view:testing': 'asdfadf'\n    }\n  }\n}));\n(0, _chai.expect)(data.application.veteran.serviceName).to.equal(data.application.veteran.currentName);",
                  "err": {},
                  "uuid": "832af88b-9c2a-453a-9f8e-42577a3b7e36",
                  "parentUUID": "5588932f-504e-41bb-a567-147f8fbebb10",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should remove partial addresses",
                  "fullTitle": "Preneed helpers transform should remove partial addresses",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var data = JSON.parse((0, _helpers.transform)({}, {\n  data: {\n    application: {\n      claimant: {\n        address: {\n          country: 'USA',\n          city: 'test'\n        }\n      },\n      veteran: {}\n    }\n  }\n}));\n(0, _chai.expect)(data.application.claimant.address).to.be.undefined;",
                  "err": {},
                  "uuid": "d63a7955-5d2a-471b-a5a5-5afbda4702b3",
                  "parentUUID": "5588932f-504e-41bb-a567-147f8fbebb10",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "f0d95f6f-eeea-42b9-8e4a-3db8781e20e3",
                "832af88b-9c2a-453a-9f8e-42577a3b7e36",
                "d63a7955-5d2a-471b-a5a5-5afbda4702b3"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "98215f4d-6c82-46c2-83f0-61547cad880c",
              "title": "ApplicantDescriptionWrapper",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/pre-need-integration/tests/utils/helpers.unit.spec.js",
              "file": "/src/applications/pre-need-integration/tests/utils/helpers.unit.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should render ApplicantDescription with formContext prop",
                  "fullTitle": "Preneed helpers ApplicantDescriptionWrapper should render ApplicantDescription with formContext prop",
                  "timedOut": false,
                  "duration": 5,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var formContext = {\n  someKey: 'someValue'\n};\nvar wrapper = (0, _enzyme.shallow)(/*#__PURE__*/_react.default.createElement(_helpers.ApplicantDescriptionWrapper, {\n  formContext: formContext\n}));\n(0, _chai.expect)(wrapper.find(_ApplicantDescription.default)).to.have.lengthOf(1);\n(0, _chai.expect)(wrapper.find(_ApplicantDescription.default).prop('formContext')).to.equal(formContext);\nwrapper.unmount();",
                  "err": {},
                  "uuid": "8691c77c-6e09-4ea5-a5e9-c8795296f6a4",
                  "parentUUID": "98215f4d-6c82-46c2-83f0-61547cad880c",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "8691c77c-6e09-4ea5-a5e9-c8795296f6a4"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 5,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "1216d14d-4c7c-4ab1-962c-9016bad72dda",
              "title": "militaryDetailsSubHeader",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/pre-need-integration/tests/utils/helpers.unit.spec.js",
              "file": "/src/applications/pre-need-integration/tests/utils/helpers.unit.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should render \"Applicant’s military details\" when applicantRelationshipToClaimant is \"Authorized Agent/Rep\"",
                  "fullTitle": "Preneed helpers militaryDetailsSubHeader should render \"Applicant’s military details\" when applicantRelationshipToClaimant is \"Authorized Agent/Rep\"",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var formData = {\n  formData: {\n    applicant: {\n      applicantRelationshipToClaimant: 'Authorized Agent/Rep'\n    }\n  }\n};\nvar wrapper = (0, _enzyme.shallow)(/*#__PURE__*/_react.default.createElement(_helpers.militaryDetailsSubHeader, formData));\n(0, _chai.expect)(wrapper.find('h3').text()).to.equal('Applicant’s military details');\nwrapper.unmount();",
                  "err": {},
                  "uuid": "8e095af2-a425-49ec-9c15-8376b5e0764a",
                  "parentUUID": "1216d14d-4c7c-4ab1-962c-9016bad72dda",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should render \"Your military details\" when applicantRelationshipToClaimant is not \"Authorized Agent/Rep\"",
                  "fullTitle": "Preneed helpers militaryDetailsSubHeader should render \"Your military details\" when applicantRelationshipToClaimant is not \"Authorized Agent/Rep\"",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var formData = {\n  formData: {\n    applicant: {\n      applicantRelationshipToClaimant: 'Other'\n    }\n  }\n};\nvar wrapper = (0, _enzyme.shallow)(/*#__PURE__*/_react.default.createElement(_helpers.militaryDetailsSubHeader, formData));\n(0, _chai.expect)(wrapper.find('h3').text()).to.equal('Your military details');\nwrapper.unmount();",
                  "err": {},
                  "uuid": "2783cb44-d397-48a3-9d82-62b0c2ff15ba",
                  "parentUUID": "1216d14d-4c7c-4ab1-962c-9016bad72dda",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "8e095af2-a425-49ec-9c15-8376b5e0764a",
                "2783cb44-d397-48a3-9d82-62b0c2ff15ba"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "2c441794-1aa9-4f10-9e40-949c127e1262",
              "title": "veteranApplicantDetailsSummary",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/pre-need-integration/tests/utils/helpers.unit.spec.js",
              "file": "/src/applications/pre-need-integration/tests/utils/helpers.unit.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should render the summary box when user is logged in and not on review page",
                  "fullTitle": "Preneed helpers veteranApplicantDetailsSummary should render the summary box when user is logged in and not on review page",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var formContext = {\n  isLoggedIn: true,\n  onReviewPage: false\n};\nvar wrapper = (0, _enzyme.shallow)(/*#__PURE__*/_react.default.createElement(_helpers.veteranApplicantDetailsSummary, {\n  formContext: formContext\n}));\n(0, _chai.expect)(wrapper.find('.veteranApplicantDetailsSummaryBox')).to.have.lengthOf(1);\n(0, _chai.expect)(wrapper.find('p.veteranApplicantDetailsSummaryBoxText').text()).to.equal('We’ve prefilled some of your information from your account. If you need to correct anything, you can edit the form fields below.');\nwrapper.unmount();",
                  "err": {},
                  "uuid": "62783c99-826b-4e6d-810d-2f982956f25c",
                  "parentUUID": "2c441794-1aa9-4f10-9e40-949c127e1262",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should not render the summary box when user is not logged in",
                  "fullTitle": "Preneed helpers veteranApplicantDetailsSummary should not render the summary box when user is not logged in",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var formContext = {\n  isLoggedIn: false,\n  onReviewPage: false\n};\nvar wrapper = (0, _enzyme.shallow)(/*#__PURE__*/_react.default.createElement(_helpers.veteranApplicantDetailsSummary, {\n  formContext: formContext\n}));\n(0, _chai.expect)(wrapper.find('.veteranApplicantDetailsSummaryBox')).to.have.lengthOf(0);\nwrapper.unmount();",
                  "err": {},
                  "uuid": "9766ee6d-3992-45d9-9140-49ba7b6a81e0",
                  "parentUUID": "2c441794-1aa9-4f10-9e40-949c127e1262",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should not render the summary box when user is on review page",
                  "fullTitle": "Preneed helpers veteranApplicantDetailsSummary should not render the summary box when user is on review page",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var formContext = {\n  isLoggedIn: true,\n  onReviewPage: true\n};\nvar wrapper = (0, _enzyme.shallow)(/*#__PURE__*/_react.default.createElement(_helpers.veteranApplicantDetailsSummary, {\n  formContext: formContext\n}));\n(0, _chai.expect)(wrapper.find('.veteranApplicantDetailsSummaryBox')).to.have.lengthOf(0);\nwrapper.unmount();",
                  "err": {},
                  "uuid": "7034c779-112b-403a-a79c-ce8676e182be",
                  "parentUUID": "2c441794-1aa9-4f10-9e40-949c127e1262",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "62783c99-826b-4e6d-810d-2f982956f25c",
                "9766ee6d-3992-45d9-9140-49ba7b6a81e0",
                "7034c779-112b-403a-a79c-ce8676e182be"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "90311625-a60d-4868-a262-1d76e41a4f7d",
              "title": "sponsorDetailsSubHeader",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/pre-need-integration/tests/utils/helpers.unit.spec.js",
              "file": "/src/applications/pre-need-integration/tests/utils/helpers.unit.spec.js",
              "beforeHooks": [
                {
                  "title": "\"before each\" hook in \"sponsorDetailsSubHeader\"",
                  "fullTitle": "Preneed helpers sponsorDetailsSubHeader \"before each\" hook in \"sponsorDetailsSubHeader\"",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "isApplicantTheSponsorStub = _sinon.default.stub(utils, 'isApplicantTheSponsor');",
                  "err": {},
                  "uuid": "9717575a-c5d2-4af6-ae54-fd8f06d0e32b",
                  "parentUUID": "90311625-a60d-4868-a262-1d76e41a4f7d",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [
                {
                  "title": "\"after each\" hook in \"sponsorDetailsSubHeader\"",
                  "fullTitle": "Preneed helpers sponsorDetailsSubHeader \"after each\" hook in \"sponsorDetailsSubHeader\"",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "isApplicantTheSponsorStub.restore();",
                  "err": {},
                  "uuid": "c502f3ca-0f28-4345-aa6f-b64607ec61c1",
                  "parentUUID": "90311625-a60d-4868-a262-1d76e41a4f7d",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "tests": [
                {
                  "title": "should not render the summary box when applicant is not the sponsor",
                  "fullTitle": "Preneed helpers sponsorDetailsSubHeader should not render the summary box when applicant is not the sponsor",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var formContext = {\n  onReviewPage: false\n};\nvar formData = {\n  someKey: 'someValue'\n};\nisApplicantTheSponsorStub.returns(false);\nvar wrapper = (0, _enzyme.shallow)(/*#__PURE__*/_react.default.createElement(_helpers.sponsorDetailsSubHeader, {\n  formContext: formContext,\n  formData: formData\n}));\n(0, _chai.expect)(wrapper.find('.sponsorDetailsSummaryBox')).to.have.lengthOf(0);\nwrapper.unmount();",
                  "err": {},
                  "uuid": "02571118-2605-4020-a93d-302e49510508",
                  "parentUUID": "90311625-a60d-4868-a262-1d76e41a4f7d",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should not render the summary box when on review page",
                  "fullTitle": "Preneed helpers sponsorDetailsSubHeader should not render the summary box when on review page",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var formContext = {\n  onReviewPage: true\n};\nvar formData = {\n  someKey: 'someValue'\n};\nisApplicantTheSponsorStub.returns(true);\nvar wrapper = (0, _enzyme.shallow)(/*#__PURE__*/_react.default.createElement(_helpers.sponsorDetailsSubHeader, {\n  formContext: formContext,\n  formData: formData\n}));\n(0, _chai.expect)(wrapper.find('.sponsorDetailsSummaryBox')).to.have.lengthOf(0);\nwrapper.unmount();",
                  "err": {},
                  "uuid": "487482c7-72c3-4763-922b-c56500c4b68f",
                  "parentUUID": "90311625-a60d-4868-a262-1d76e41a4f7d",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should always render the sponsor details subheader",
                  "fullTitle": "Preneed helpers sponsorDetailsSubHeader should always render the sponsor details subheader",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var formContext = {\n  onReviewPage: false\n};\nvar formData = {\n  someKey: 'someValue'\n};\nvar wrapper = (0, _enzyme.shallow)(/*#__PURE__*/_react.default.createElement(_helpers.sponsorDetailsSubHeader, {\n  formContext: formContext,\n  formData: formData\n}));\n(0, _chai.expect)(wrapper.find('.sponsorDetailsSubHeader')).to.have.lengthOf(1);\n(0, _chai.expect)(wrapper.find('h3.vads-u-font-size--h5').text()).to.equal('Sponsor details');\nwrapper.unmount();",
                  "err": {},
                  "uuid": "2c64224a-a940-4f4b-aad1-34c7d1b7d833",
                  "parentUUID": "90311625-a60d-4868-a262-1d76e41a4f7d",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "02571118-2605-4020-a93d-302e49510508",
                "487482c7-72c3-4763-922b-c56500c4b68f",
                "2c64224a-a940-4f4b-aad1-34c7d1b7d833"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 3,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "38fdfc0a-8996-4d0e-914a-a73ee6591569",
              "title": "createPayload",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/pre-need-integration/tests/utils/helpers.unit.spec.js",
              "file": "/src/applications/pre-need-integration/tests/utils/helpers.unit.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should create a FormData payload with form_id and file",
                  "fullTitle": "Preneed helpers createPayload should create a FormData payload with form_id and file",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var file = new Blob(['file content'], {\n  type: 'text/plain'\n});\nvar formId = '12345';\nvar payload = (0, _helpers.createPayload)(file, formId);\n(0, _chai.expect)(payload.get('form_id')).to.equal(formId);\nvar fileFromPayload = payload.get('file');\n(0, _chai.expect)(fileFromPayload.size).to.equal(file.size);\n(0, _chai.expect)(fileFromPayload.type).to.equal(file.type);",
                  "err": {},
                  "uuid": "77641ad3-859f-4426-8c48-fcbd34305505",
                  "parentUUID": "38fdfc0a-8996-4d0e-914a-a73ee6591569",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should include password in the payload if provided",
                  "fullTitle": "Preneed helpers createPayload should include password in the payload if provided",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var file = new Blob(['file content'], {\n  type: 'text/plain'\n});\nvar formId = '12345';\nvar password = 'secret';\nvar payload = (0, _helpers.createPayload)(file, formId, password);\n(0, _chai.expect)(payload.get('password')).to.equal(password);",
                  "err": {},
                  "uuid": "3c2c57b5-1898-4bd8-965b-f480618c1576",
                  "parentUUID": "38fdfc0a-8996-4d0e-914a-a73ee6591569",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should not include password in the payload if not provided",
                  "fullTitle": "Preneed helpers createPayload should not include password in the payload if not provided",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var file = new Blob(['file content'], {\n  type: 'text/plain'\n});\nvar formId = '12345';\nvar payload = (0, _helpers.createPayload)(file, formId);\n(0, _chai.expect)(payload.has('password')).to.be.false;",
                  "err": {},
                  "uuid": "5c181f4d-546a-441b-99a0-5084f7011db2",
                  "parentUUID": "38fdfc0a-8996-4d0e-914a-a73ee6591569",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "77641ad3-859f-4426-8c48-fcbd34305505",
                "3c2c57b5-1898-4bd8-965b-f480618c1576",
                "5c181f4d-546a-441b-99a0-5084f7011db2"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 3,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "09942f1c-c05e-477e-8d2b-1a76f6c0d3bf",
              "title": "parseResponse",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/pre-need-integration/tests/utils/helpers.unit.spec.js",
              "file": "/src/applications/pre-need-integration/tests/utils/helpers.unit.spec.js",
              "beforeHooks": [
                {
                  "title": "\"before each\" hook in \"parseResponse\"",
                  "fullTitle": "Preneed helpers parseResponse \"before each\" hook in \"parseResponse\"",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "focusElementStub = _sinon.default.stub(window, 'focusElement');\n$$Stub = _sinon.default.stub(window, '$$').returns([{\n  textContent: 'file1',\n  focus: _sinon.default.spy()\n}, {\n  textContent: 'file2',\n  focus: _sinon.default.spy()\n}]);",
                  "err": {},
                  "uuid": "c9fd1fb0-a640-48b5-ba3f-b600ba0830fa",
                  "parentUUID": "09942f1c-c05e-477e-8d2b-1a76f6c0d3bf",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [
                {
                  "title": "\"after each\" hook in \"parseResponse\"",
                  "fullTitle": "Preneed helpers parseResponse \"after each\" hook in \"parseResponse\"",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "focusElementStub.restore();\n$$Stub.restore();",
                  "err": {},
                  "uuid": "d49b0d4d-f1a9-4992-8965-79daf9d96a07",
                  "parentUUID": "09942f1c-c05e-477e-8d2b-1a76f6c0d3bf",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "tests": [
                {
                  "title": "should return the correct name and confirmationCode",
                  "fullTitle": "Preneed helpers parseResponse should return the correct name and confirmationCode",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var response = {\n  data: {\n    attributes: {\n      name: 'file1',\n      confirmationCode: 'abc123'\n    }\n  }\n};\nvar result = (0, _helpers.parseResponse)(response);\n(0, _chai.expect)(result.name).to.equal('file1');\n(0, _chai.expect)(result.confirmationCode).to.equal('abc123');",
                  "err": {},
                  "uuid": "100d086a-e301-427f-8d7f-73715bcd4fde",
                  "parentUUID": "09942f1c-c05e-477e-8d2b-1a76f6c0d3bf",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "100d086a-e301-427f-8d7f-73715bcd4fde"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "9cf99d02-8a43-4bbb-86ac-f1ee4f09c461",
              "title": "applicantsMailingAddressHasState",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/pre-need-integration/tests/utils/helpers.unit.spec.js",
              "file": "/src/applications/pre-need-integration/tests/utils/helpers.unit.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return true if country is USA",
                  "fullTitle": "Preneed helpers applicantsMailingAddressHasState should return true if country is USA",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var item = {\n  application: {\n    claimant: {\n      address: {\n        country: 'USA'\n      }\n    }\n  }\n};\n(0, _chai.expect)((0, _helpers.applicantsMailingAddressHasState)(item)).to.be.true;",
                  "err": {},
                  "uuid": "741595ac-8c09-4198-b613-33d98d4797b9",
                  "parentUUID": "9cf99d02-8a43-4bbb-86ac-f1ee4f09c461",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return true if country is CAN",
                  "fullTitle": "Preneed helpers applicantsMailingAddressHasState should return true if country is CAN",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var item = {\n  application: {\n    claimant: {\n      address: {\n        country: 'CAN'\n      }\n    }\n  }\n};\n(0, _chai.expect)((0, _helpers.applicantsMailingAddressHasState)(item)).to.be.true;",
                  "err": {},
                  "uuid": "32d48cfc-0b8f-46ce-bc64-ac34263811d6",
                  "parentUUID": "9cf99d02-8a43-4bbb-86ac-f1ee4f09c461",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return false if country is not USA or CAN",
                  "fullTitle": "Preneed helpers applicantsMailingAddressHasState should return false if country is not USA or CAN",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var item = {\n  application: {\n    claimant: {\n      address: {\n        country: 'MEX'\n      }\n    }\n  }\n};\n(0, _chai.expect)((0, _helpers.applicantsMailingAddressHasState)(item)).to.be.false;",
                  "err": {},
                  "uuid": "dfc4b9aa-4cdd-44d1-8f23-1b321fd4f5b8",
                  "parentUUID": "9cf99d02-8a43-4bbb-86ac-f1ee4f09c461",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "741595ac-8c09-4198-b613-33d98d4797b9",
                "32d48cfc-0b8f-46ce-bc64-ac34263811d6",
                "dfc4b9aa-4cdd-44d1-8f23-1b321fd4f5b8"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "d2227473-4faa-4de9-bb3b-e235f0621e53",
              "title": "sponsorMailingAddressHasState",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/pre-need-integration/tests/utils/helpers.unit.spec.js",
              "file": "/src/applications/pre-need-integration/tests/utils/helpers.unit.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return true if country is USA",
                  "fullTitle": "Preneed helpers sponsorMailingAddressHasState should return true if country is USA",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var item = {\n  application: {\n    veteran: {\n      address: {\n        country: 'USA'\n      }\n    }\n  }\n};\n(0, _chai.expect)((0, _helpers.sponsorMailingAddressHasState)(item)).to.be.true;",
                  "err": {},
                  "uuid": "5deed8b1-984d-43c5-84dc-6506ee82fead",
                  "parentUUID": "d2227473-4faa-4de9-bb3b-e235f0621e53",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return true if country is CAN",
                  "fullTitle": "Preneed helpers sponsorMailingAddressHasState should return true if country is CAN",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var item = {\n  application: {\n    veteran: {\n      address: {\n        country: 'CAN'\n      }\n    }\n  }\n};\n(0, _chai.expect)((0, _helpers.sponsorMailingAddressHasState)(item)).to.be.true;",
                  "err": {},
                  "uuid": "a92a8f0e-707a-4dfb-b582-cd39a45a9713",
                  "parentUUID": "d2227473-4faa-4de9-bb3b-e235f0621e53",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return false if country is not USA or CAN",
                  "fullTitle": "Preneed helpers sponsorMailingAddressHasState should return false if country is not USA or CAN",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var item = {\n  application: {\n    veteran: {\n      address: {\n        country: 'MEX'\n      }\n    }\n  }\n};\n(0, _chai.expect)((0, _helpers.sponsorMailingAddressHasState)(item)).to.be.false;",
                  "err": {},
                  "uuid": "cd586fb8-c7f3-44fb-8983-a07f60c9b363",
                  "parentUUID": "d2227473-4faa-4de9-bb3b-e235f0621e53",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "5deed8b1-984d-43c5-84dc-6506ee82fead",
                "a92a8f0e-707a-4dfb-b582-cd39a45a9713",
                "cd586fb8-c7f3-44fb-8983-a07f60c9b363"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "bf0b7294-166a-4fcb-a79d-6780501ee589",
              "title": "isSponsorDeceased",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/pre-need-integration/tests/utils/helpers.unit.spec.js",
              "file": "/src/applications/pre-need-integration/tests/utils/helpers.unit.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return true if isDeceased is yes",
                  "fullTitle": "Preneed helpers isSponsorDeceased should return true if isDeceased is yes",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var item = {\n  application: {\n    veteran: {\n      isDeceased: 'yes'\n    }\n  }\n};\n(0, _chai.expect)((0, _helpers.isSponsorDeceased)(item)).to.be.true;",
                  "err": {},
                  "uuid": "0c94a12d-63b6-4879-b0be-1b9059653e80",
                  "parentUUID": "bf0b7294-166a-4fcb-a79d-6780501ee589",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return false if isDeceased is not yes",
                  "fullTitle": "Preneed helpers isSponsorDeceased should return false if isDeceased is not yes",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var item = {\n  application: {\n    veteran: {\n      isDeceased: 'no'\n    }\n  }\n};\n(0, _chai.expect)((0, _helpers.isSponsorDeceased)(item)).to.be.false;",
                  "err": {},
                  "uuid": "6f2bbd8d-c4ca-457d-a1da-51f69e103092",
                  "parentUUID": "bf0b7294-166a-4fcb-a79d-6780501ee589",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "0c94a12d-63b6-4879-b0be-1b9059653e80",
                "6f2bbd8d-c4ca-457d-a1da-51f69e103092"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "a2ce6e88-1592-402a-a34d-97fd1bfbb6ab",
              "title": "isSpouse",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/pre-need-integration/tests/utils/helpers.unit.spec.js",
              "file": "/src/applications/pre-need-integration/tests/utils/helpers.unit.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return true if relationshipToVet is husband",
                  "fullTitle": "Preneed helpers isSpouse should return true if relationshipToVet is husband",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var item = {\n  application: {\n    claimant: {\n      relationshipToVet: 'husband'\n    }\n  }\n};\n(0, _chai.expect)((0, _helpers.isSpouse)(item)).to.be.true;",
                  "err": {},
                  "uuid": "9c069c26-dd29-4f23-a7dd-42928498404c",
                  "parentUUID": "a2ce6e88-1592-402a-a34d-97fd1bfbb6ab",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return true if relationshipToVet is wife",
                  "fullTitle": "Preneed helpers isSpouse should return true if relationshipToVet is wife",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var item = {\n  application: {\n    claimant: {\n      relationshipToVet: 'wife'\n    }\n  }\n};\n(0, _chai.expect)((0, _helpers.isSpouse)(item)).to.be.true;",
                  "err": {},
                  "uuid": "474b089f-f2e1-4fe0-847c-47ca18056239",
                  "parentUUID": "a2ce6e88-1592-402a-a34d-97fd1bfbb6ab",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return false if relationshipToVet is not husband or wife",
                  "fullTitle": "Preneed helpers isSpouse should return false if relationshipToVet is not husband or wife",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var item = {\n  application: {\n    claimant: {\n      relationshipToVet: 'daughter'\n    }\n  }\n};\n(0, _chai.expect)((0, _helpers.isSpouse)(item)).to.be.false;",
                  "err": {},
                  "uuid": "5f4862b0-0983-46a7-b39e-14f2d9685650",
                  "parentUUID": "a2ce6e88-1592-402a-a34d-97fd1bfbb6ab",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "9c069c26-dd29-4f23-a7dd-42928498404c",
                "474b089f-f2e1-4fe0-847c-47ca18056239",
                "5f4862b0-0983-46a7-b39e-14f2d9685650"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "ec305a85-5fb0-4d65-8824-0a80302d8d31",
              "title": "isUnmarriedChild",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/pre-need-integration/tests/utils/helpers.unit.spec.js",
              "file": "/src/applications/pre-need-integration/tests/utils/helpers.unit.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return true if relationshipToVet is daughter",
                  "fullTitle": "Preneed helpers isUnmarriedChild should return true if relationshipToVet is daughter",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var item = {\n  application: {\n    claimant: {\n      relationshipToVet: 'daughter'\n    }\n  }\n};\n(0, _chai.expect)((0, _helpers.isUnmarriedChild)(item)).to.be.true;",
                  "err": {},
                  "uuid": "d9878161-df54-44d6-b96b-bb65818691d6",
                  "parentUUID": "ec305a85-5fb0-4d65-8824-0a80302d8d31",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return true if relationshipToVet is son",
                  "fullTitle": "Preneed helpers isUnmarriedChild should return true if relationshipToVet is son",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var item = {\n  application: {\n    claimant: {\n      relationshipToVet: 'son'\n    }\n  }\n};\n(0, _chai.expect)((0, _helpers.isUnmarriedChild)(item)).to.be.true;",
                  "err": {},
                  "uuid": "c5e0766e-6f32-45ac-95f5-ed9076374965",
                  "parentUUID": "ec305a85-5fb0-4d65-8824-0a80302d8d31",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return true if relationshipToVet is stepdaughter",
                  "fullTitle": "Preneed helpers isUnmarriedChild should return true if relationshipToVet is stepdaughter",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var item = {\n  application: {\n    claimant: {\n      relationshipToVet: 'stepdaughter'\n    }\n  }\n};\n(0, _chai.expect)((0, _helpers.isUnmarriedChild)(item)).to.be.true;",
                  "err": {},
                  "uuid": "70f85bf5-2632-43f2-a15f-c8a900cb5435",
                  "parentUUID": "ec305a85-5fb0-4d65-8824-0a80302d8d31",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return true if relationshipToVet is stepson",
                  "fullTitle": "Preneed helpers isUnmarriedChild should return true if relationshipToVet is stepson",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var item = {\n  application: {\n    claimant: {\n      relationshipToVet: 'stepson'\n    }\n  }\n};\n(0, _chai.expect)((0, _helpers.isUnmarriedChild)(item)).to.be.true;",
                  "err": {},
                  "uuid": "2814770f-a45b-4525-82af-9b0249755302",
                  "parentUUID": "ec305a85-5fb0-4d65-8824-0a80302d8d31",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return false if relationshipToVet is not daughter, son, stepdaughter, or stepson",
                  "fullTitle": "Preneed helpers isUnmarriedChild should return false if relationshipToVet is not daughter, son, stepdaughter, or stepson",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var item = {\n  application: {\n    claimant: {\n      relationshipToVet: 'wife'\n    }\n  }\n};\n(0, _chai.expect)((0, _helpers.isUnmarriedChild)(item)).to.be.false;",
                  "err": {},
                  "uuid": "31810d55-4a91-4444-9299-2ed5cd6dd8ad",
                  "parentUUID": "ec305a85-5fb0-4d65-8824-0a80302d8d31",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "d9878161-df54-44d6-b96b-bb65818691d6",
                "c5e0766e-6f32-45ac-95f5-ed9076374965",
                "70f85bf5-2632-43f2-a15f-c8a900cb5435",
                "2814770f-a45b-4525-82af-9b0249755302",
                "31810d55-4a91-4444-9299-2ed5cd6dd8ad"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "f404ab5f-ac5c-4f70-a67c-8e8655c23b16",
              "title": "isVeteranAndHasServiceName",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/pre-need-integration/tests/utils/helpers.unit.spec.js",
              "file": "/src/applications/pre-need-integration/tests/utils/helpers.unit.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return false if isVeteran is false",
                  "fullTitle": "Preneed helpers isVeteranAndHasServiceName should return false if isVeteran is false",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var item = {\n  application: {\n    veteran: {\n      'view:hasServiceName': true\n    }\n  }\n};\n(0, _chai.expect)((0, _helpers.isVeteranAndHasServiceName)(item)).to.be.false;",
                  "err": {},
                  "uuid": "e0921d5d-4d1b-4f04-9ea6-3fa1cef08ad1",
                  "parentUUID": "f404ab5f-ac5c-4f70-a67c-8e8655c23b16",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return false if hasServiceName is false",
                  "fullTitle": "Preneed helpers isVeteranAndHasServiceName should return false if hasServiceName is false",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var item = {\n  application: {\n    veteran: {\n      'view:hasServiceName': false\n    }\n  }\n};\n(0, _chai.expect)((0, _helpers.isVeteranAndHasServiceName)(item)).to.be.false;",
                  "err": {},
                  "uuid": "79b9666d-f78a-4a38-b244-20de666feaa2",
                  "parentUUID": "f404ab5f-ac5c-4f70-a67c-8e8655c23b16",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "e0921d5d-4d1b-4f04-9ea6-3fa1cef08ad1",
                "79b9666d-f78a-4a38-b244-20de666feaa2"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "2ad9eb0a-a8b1-4e51-aed2-79800eb9be64",
              "title": "isNotVeteranAndHasServiceName",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/pre-need-integration/tests/utils/helpers.unit.spec.js",
              "file": "/src/applications/pre-need-integration/tests/utils/helpers.unit.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return true if isVeteran is false and hasServiceName is true",
                  "fullTitle": "Preneed helpers isNotVeteranAndHasServiceName should return true if isVeteran is false and hasServiceName is true",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var item = {\n  application: {\n    veteran: {\n      'view:hasServiceName': true\n    }\n  }\n};\n(0, _chai.expect)((0, _helpers.isNotVeteranAndHasServiceName)(item)).to.be.true;",
                  "err": {},
                  "uuid": "bd5cdbc8-0b5f-4611-a001-30996f02815a",
                  "parentUUID": "2ad9eb0a-a8b1-4e51-aed2-79800eb9be64",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return false if hasServiceName is false",
                  "fullTitle": "Preneed helpers isNotVeteranAndHasServiceName should return false if hasServiceName is false",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var item = {\n  application: {\n    veteran: {\n      'view:hasServiceName': false\n    }\n  }\n};\n(0, _chai.expect)((0, _helpers.isNotVeteranAndHasServiceName)(item)).to.be.false;",
                  "err": {},
                  "uuid": "621723d6-8521-4a0a-a653-ab1dbd3d21b8",
                  "parentUUID": "2ad9eb0a-a8b1-4e51-aed2-79800eb9be64",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "bd5cdbc8-0b5f-4611-a001-30996f02815a",
                "621723d6-8521-4a0a-a653-ab1dbd3d21b8"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "c5e6d866-af06-49a6-b274-42976e5c03c7",
              "title": "buriedWSponsorsEligibility",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/pre-need-integration/tests/utils/helpers.unit.spec.js",
              "file": "/src/applications/pre-need-integration/tests/utils/helpers.unit.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return true if hasCurrentlyBuried is 1",
                  "fullTitle": "Preneed helpers buriedWSponsorsEligibility should return true if hasCurrentlyBuried is 1",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var item = {\n  application: {\n    hasCurrentlyBuried: '1'\n  }\n};\n(0, _chai.expect)((0, _helpers.buriedWSponsorsEligibility)(item)).to.be.true;",
                  "err": {},
                  "uuid": "71bab8de-bff8-4bf0-baec-f0741d7a180b",
                  "parentUUID": "c5e6d866-af06-49a6-b274-42976e5c03c7",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return false if hasCurrentlyBuried is not 1",
                  "fullTitle": "Preneed helpers buriedWSponsorsEligibility should return false if hasCurrentlyBuried is not 1",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var item = {\n  application: {\n    hasCurrentlyBuried: '0'\n  }\n};\n(0, _chai.expect)((0, _helpers.buriedWSponsorsEligibility)(item)).to.be.false;",
                  "err": {},
                  "uuid": "03e8f5b3-1e37-4998-9d0f-13dcf7b50e28",
                  "parentUUID": "c5e6d866-af06-49a6-b274-42976e5c03c7",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "71bab8de-bff8-4bf0-baec-f0741d7a180b",
                "03e8f5b3-1e37-4998-9d0f-13dcf7b50e28"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "1bf25ffa-b1ca-4075-b2fa-6986638e3784",
              "title": "requiresSponsorInfo",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/pre-need-integration/tests/utils/helpers.unit.spec.js",
              "file": "/src/applications/pre-need-integration/tests/utils/helpers.unit.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return true if sponsor is undefined",
                  "fullTitle": "Preneed helpers requiresSponsorInfo should return true if sponsor is undefined",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var item = {\n  'view:sponsor': undefined\n};\n(0, _chai.expect)((0, _helpers.requiresSponsorInfo)(item)).to.be.true;",
                  "err": {},
                  "uuid": "a1de611f-915a-48d0-82c5-3b7c458bd8e5",
                  "parentUUID": "1bf25ffa-b1ca-4075-b2fa-6986638e3784",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return true if sponsor is \"Other\"",
                  "fullTitle": "Preneed helpers requiresSponsorInfo should return true if sponsor is \"Other\"",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var item = {\n  'view:sponsor': 'Other'\n};\n(0, _chai.expect)((0, _helpers.requiresSponsorInfo)(item)).to.be.true;",
                  "err": {},
                  "uuid": "7dbdb555-7e65-4508-bbc0-39948336bbfb",
                  "parentUUID": "1bf25ffa-b1ca-4075-b2fa-6986638e3784",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return false if sponsor is defined and not \"Other\"",
                  "fullTitle": "Preneed helpers requiresSponsorInfo should return false if sponsor is defined and not \"Other\"",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var item = {\n  'view:sponsor': 'SponsorName'\n};\n(0, _chai.expect)((0, _helpers.requiresSponsorInfo)(item)).to.be.false;",
                  "err": {},
                  "uuid": "827f14b9-0ff2-4118-a9ad-94478bfc44cf",
                  "parentUUID": "1bf25ffa-b1ca-4075-b2fa-6986638e3784",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "a1de611f-915a-48d0-82c5-3b7c458bd8e5",
                "7dbdb555-7e65-4508-bbc0-39948336bbfb",
                "827f14b9-0ff2-4118-a9ad-94478bfc44cf"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "300a5e46-a564-41ac-8e94-589921bf19c1",
              "title": "hasServiceRecord",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/pre-need-integration/tests/utils/helpers.unit.spec.js",
              "file": "/src/applications/pre-need-integration/tests/utils/helpers.unit.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return true if serviceRecords is defined and not empty",
                  "fullTitle": "Preneed helpers hasServiceRecord should return true if serviceRecords is defined and not empty",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var item = {\n  serviceRecords: [{\n    record: 'record1'\n  }]\n};\n(0, _chai.expect)((0, _helpers.hasServiceRecord)(item)).to.be.true;",
                  "err": {},
                  "uuid": "a4f0f47b-65db-4bd8-8ced-a131712f3e60",
                  "parentUUID": "300a5e46-a564-41ac-8e94-589921bf19c1",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return true if formData.serviceRecords is defined and not empty",
                  "fullTitle": "Preneed helpers hasServiceRecord should return true if formData.serviceRecords is defined and not empty",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var item = {\n  formData: {\n    serviceRecords: [{\n      record: 'record1'\n    }]\n  }\n};\n(0, _chai.expect)((0, _helpers.hasServiceRecord)(item)).to.be.true;",
                  "err": {},
                  "uuid": "9e1fcc7d-ddce-4fd0-8144-101794bb4544",
                  "parentUUID": "300a5e46-a564-41ac-8e94-589921bf19c1",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return false if serviceRecords and formData.serviceRecords are undefined",
                  "fullTitle": "Preneed helpers hasServiceRecord should return false if serviceRecords and formData.serviceRecords are undefined",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var item = {};\n(0, _chai.expect)((0, _helpers.hasServiceRecord)(item)).to.be.false;",
                  "err": {},
                  "uuid": "1b8cc934-fe5e-4ce0-bb8f-49e1fce71269",
                  "parentUUID": "300a5e46-a564-41ac-8e94-589921bf19c1",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return false if serviceRecords and formData.serviceRecords are empty",
                  "fullTitle": "Preneed helpers hasServiceRecord should return false if serviceRecords and formData.serviceRecords are empty",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var item = {\n  serviceRecords: [],\n  formData: {\n    serviceRecords: []\n  }\n};\n(0, _chai.expect)((0, _helpers.hasServiceRecord)(item)).to.be.false;",
                  "err": {},
                  "uuid": "9ff77a09-bbf4-4a43-b846-b32af1c9371c",
                  "parentUUID": "300a5e46-a564-41ac-8e94-589921bf19c1",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "a4f0f47b-65db-4bd8-8ced-a131712f3e60",
                "9e1fcc7d-ddce-4fd0-8144-101794bb4544",
                "1b8cc934-fe5e-4ce0-bb8f-49e1fce71269",
                "9ff77a09-bbf4-4a43-b846-b32af1c9371c"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "a6d69ace-27a3-47c3-8e53-b1cd5630c9c2",
              "title": "formatName",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/pre-need-integration/tests/utils/helpers.unit.spec.js",
              "file": "/src/applications/pre-need-integration/tests/utils/helpers.unit.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should format the name correctly with first, middle, last, and suffix",
                  "fullTitle": "Preneed helpers formatName should format the name correctly with first, middle, last, and suffix",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var name = {\n  first: 'John',\n  middle: 'A',\n  last: 'Doe',\n  suffix: 'Jr.'\n};\n(0, _chai.expect)((0, _helpers.formatName)(name)).to.equal('John A Doe, Jr.');",
                  "err": {},
                  "uuid": "007ef786-4b3d-4b56-8b06-aa8df3e95cb3",
                  "parentUUID": "a6d69ace-27a3-47c3-8e53-b1cd5630c9c2",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should format the name correctly without middle and suffix",
                  "fullTitle": "Preneed helpers formatName should format the name correctly without middle and suffix",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var name = {\n  first: 'John',\n  last: 'Doe'\n};\n(0, _chai.expect)((0, _helpers.formatName)(name)).to.equal('John Doe');",
                  "err": {},
                  "uuid": "6e1b1c2c-9c8f-4f22-8c60-486047a336f1",
                  "parentUUID": "a6d69ace-27a3-47c3-8e53-b1cd5630c9c2",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should format the name correctly with only first and last",
                  "fullTitle": "Preneed helpers formatName should format the name correctly with only first and last",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var name = {\n  first: 'John',\n  last: 'Doe'\n};\n(0, _chai.expect)((0, _helpers.formatName)(name)).to.equal('John Doe');",
                  "err": {},
                  "uuid": "4a69de75-65d8-4eb7-a7cb-ce0ee1fed87d",
                  "parentUUID": "a6d69ace-27a3-47c3-8e53-b1cd5630c9c2",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return undefined if first and last are not provided",
                  "fullTitle": "Preneed helpers formatName should return undefined if first and last are not provided",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var name = {\n  middle: 'A',\n  suffix: 'Jr.'\n};\n(0, _chai.expect)((0, _helpers.formatName)(name)).to.be.undefined;",
                  "err": {},
                  "uuid": "41421e95-be6d-456c-bd4a-3eea1a47df13",
                  "parentUUID": "a6d69ace-27a3-47c3-8e53-b1cd5630c9c2",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "007ef786-4b3d-4b56-8b06-aa8df3e95cb3",
                "6e1b1c2c-9c8f-4f22-8c60-486047a336f1",
                "4a69de75-65d8-4eb7-a7cb-ce0ee1fed87d",
                "41421e95-be6d-456c-bd4a-3eea1a47df13"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "a0a23ca4-5cde-43a1-8432-4161979b0983",
              "title": "claimantHeader",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/pre-need-integration/tests/utils/helpers.unit.spec.js",
              "file": "/src/applications/pre-need-integration/tests/utils/helpers.unit.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should render the claimant name in an h4 element",
                  "fullTitle": "Preneed helpers claimantHeader should render the claimant name in an h4 element",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var formData = {\n  claimant: {\n    name: {\n      first: 'John',\n      last: 'Doe'\n    }\n  }\n};\nvar header = (0, _helpers.claimantHeader)({\n  formData: formData\n});\n(0, _chai.expect)(header.type).to.equal('h4');\n(0, _chai.expect)(header.props.className).to.equal('highlight');\n(0, _chai.expect)(header.props.children).to.equal('John Doe');",
                  "err": {},
                  "uuid": "98f34ccc-6de9-46e3-9fa4-4892abc80026",
                  "parentUUID": "a0a23ca4-5cde-43a1-8432-4161979b0983",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "98f34ccc-6de9-46e3-9fa4-4892abc80026"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "409328f2-4e3a-413f-9e1d-342add6bdac9",
              "title": "validateMilitaryHistory",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/pre-need-integration/tests/utils/helpers.unit.spec.js",
              "file": "/src/applications/pre-need-integration/tests/utils/helpers.unit.spec.js",
              "beforeHooks": [
                {
                  "title": "\"before each\" hook in \"validateMilitaryHistory\"",
                  "fullTitle": "Preneed helpers validateMilitaryHistory \"before each\" hook in \"validateMilitaryHistory\"",
                  "timedOut": false,
                  "duration": 1,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "isVeteranStub = _sinon.default.stub(utils, 'isVeteran');\nisAuthorizedAgentStub = _sinon.default.stub(utils, 'isAuthorizedAgent');\nerrors = {\n  highestRank: {\n    addError: _sinon.default.spy()\n  },\n  dateRange: {\n    from: {\n      addError: _sinon.default.spy()\n    },\n    to: {\n      addError: _sinon.default.spy()\n    }\n  }\n};",
                  "err": {},
                  "uuid": "2c1aac67-a0ce-40a1-9b04-99603d72ccac",
                  "parentUUID": "409328f2-4e3a-413f-9e1d-342add6bdac9",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [
                {
                  "title": "\"after each\" hook in \"validateMilitaryHistory\"",
                  "fullTitle": "Preneed helpers validateMilitaryHistory \"after each\" hook in \"validateMilitaryHistory\"",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "isVeteranStub.restore();\nisAuthorizedAgentStub.restore();",
                  "err": {},
                  "uuid": "97317ef3-519e-4f59-888a-6ffbed788f93",
                  "parentUUID": "409328f2-4e3a-413f-9e1d-342add6bdac9",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "tests": [
                {
                  "title": "should add error if serviceBranch is undefined and highestRank is defined for self",
                  "fullTitle": "Preneed helpers validateMilitaryHistory should add error if serviceBranch is undefined and highestRank is defined for self",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var serviceRecords = {\n  highestRank: 'rank',\n  dateRange: {\n    from: '',\n    to: ''\n  }\n};\nvar useAllFormData = {\n  application: {\n    claimant: {\n      dateOfBirth: '2000-01-01'\n    }\n  }\n};\nisVeteranStub.returns(true);\nisAuthorizedAgentStub.returns(false);\n(0, _helpers.validateMilitaryHistory)(errors, serviceRecords, useAllFormData);\n(0, _chai.expect)(errors.highestRank.addError.calledOnce).to.be.true;",
                  "err": {},
                  "uuid": "0ebddcd2-fd13-46de-b879-ceb3121ad42b",
                  "parentUUID": "409328f2-4e3a-413f-9e1d-342add6bdac9",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should add error if serviceBranch is undefined and highestRank is defined for applicant",
                  "fullTitle": "Preneed helpers validateMilitaryHistory should add error if serviceBranch is undefined and highestRank is defined for applicant",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var serviceRecords = {\n  highestRank: 'rank',\n  dateRange: {\n    from: '',\n    to: ''\n  }\n};\nvar useAllFormData = {\n  application: {\n    claimant: {\n      dateOfBirth: '2000-01-01'\n    }\n  }\n};\nisVeteranStub.returns(true);\nisAuthorizedAgentStub.returns(true);\n(0, _helpers.validateMilitaryHistory)(errors, serviceRecords, useAllFormData);\n(0, _chai.expect)(errors.highestRank.addError.calledOnce).to.be.true;",
                  "err": {},
                  "uuid": "029f7d08-c11f-4935-a555-a7769eda7644",
                  "parentUUID": "409328f2-4e3a-413f-9e1d-342add6bdac9",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should add error if serviceBranch is undefined and highestRank is defined for sponsor",
                  "fullTitle": "Preneed helpers validateMilitaryHistory should add error if serviceBranch is undefined and highestRank is defined for sponsor",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var serviceRecords = {\n  highestRank: 'rank',\n  dateRange: {\n    from: '',\n    to: ''\n  }\n};\nvar useAllFormData = {\n  application: {\n    veteran: {\n      dateOfBirth: '2000-01-01'\n    }\n  }\n};\nisVeteranStub.returns(false);\n(0, _helpers.validateMilitaryHistory)(errors, serviceRecords, useAllFormData);\n(0, _chai.expect)(errors.highestRank.addError.calledOnce).to.be.true;\n(0, _chai.expect)(errors.highestRank.addError.calledWith(\"Select Sponsor's branch of service before selecting the Sponsor's highest rank attained.\")).to.be.true;",
                  "err": {},
                  "uuid": "61938cf6-7950-49e8-9742-4db7bca756f0",
                  "parentUUID": "409328f2-4e3a-413f-9e1d-342add6bdac9",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should add error if highestRank is not valid for the serviceBranch",
                  "fullTitle": "Preneed helpers validateMilitaryHistory should add error if highestRank is not valid for the serviceBranch",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var serviceRecords = {\n  serviceBranch: 'branch',\n  highestRank: 'invalidRank',\n  dateRange: {\n    from: '',\n    to: ''\n  }\n};\nvar useAllFormData = {};\nvar jsonData = [{\n  'Branch Of Service Code': 'branch',\n  'Rank Code': 'validRank'\n}];\nvar serviceLabels = {\n  branch: 'Branch'\n};\nglobal.jsonData = jsonData;\nglobal.serviceLabels = serviceLabels;\n(0, _helpers.validateMilitaryHistory)(errors, serviceRecords, useAllFormData);\n(0, _chai.expect)(errors.highestRank.addError.calledOnce).to.be.true;\n(0, _chai.expect)(errors.highestRank.addError.calledWith('This is not a valid rank for Branch')).to.be.false;",
                  "err": {},
                  "uuid": "f6ccc544-19f3-40b3-9ae5-e67e3a9d8d63",
                  "parentUUID": "409328f2-4e3a-413f-9e1d-342add6bdac9",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should not add error if service start date is before date of birth",
                  "fullTitle": "Preneed helpers validateMilitaryHistory should not add error if service start date is before date of birth",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var serviceRecords = {\n  dateRange: {\n    from: '1999-01-01',\n    to: '2001-01-01'\n  }\n};\nvar useAllFormData = {\n  application: {\n    claimant: {\n      dateOfBirth: '2000-01-01'\n    }\n  }\n};\nisVeteranStub.returns(true);\nisAuthorizedAgentStub.returns(false);\n(0, _helpers.validateMilitaryHistory)(errors, serviceRecords, useAllFormData);\n(0, _chai.expect)(errors.dateRange.from.addError.calledOnce).to.be.false;",
                  "err": {},
                  "uuid": "f58b52cb-8ac9-4906-81b3-99c776de978e",
                  "parentUUID": "409328f2-4e3a-413f-9e1d-342add6bdac9",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should not add error if service end date is before date of birth",
                  "fullTitle": "Preneed helpers validateMilitaryHistory should not add error if service end date is before date of birth",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var serviceRecords = {\n  dateRange: {\n    from: '2000-01-01',\n    to: '1999-01-01'\n  }\n};\nvar useAllFormData = {\n  application: {\n    claimant: {\n      dateOfBirth: '2000-01-01'\n    }\n  }\n};\nisVeteranStub.returns(true);\nisAuthorizedAgentStub.returns(false);\n(0, _helpers.validateMilitaryHistory)(errors, serviceRecords, useAllFormData);\n(0, _chai.expect)(errors.dateRange.to.addError.calledOnce).to.be.false;",
                  "err": {},
                  "uuid": "20d7cfd0-baea-4c56-9b7c-ffa464c666b0",
                  "parentUUID": "409328f2-4e3a-413f-9e1d-342add6bdac9",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "0ebddcd2-fd13-46de-b879-ceb3121ad42b",
                "029f7d08-c11f-4935-a555-a7769eda7644",
                "61938cf6-7950-49e8-9742-4db7bca756f0",
                "f6ccc544-19f3-40b3-9ae5-e67e3a9d8d63",
                "f58b52cb-8ac9-4906-81b3-99c776de978e",
                "20d7cfd0-baea-4c56-9b7c-ffa464c666b0"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "af6f4a22-d9c1-4296-92e9-2ddf0c85299f",
          "title": "Pre-need validation",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/pre-need-integration/tests/validation.unit.spec.js",
          "file": "/src/applications/pre-need-integration/tests/validation.unit.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "a9f73b27-5ae4-4fe3-8e78-9d42df741e8a",
              "title": "validateSponsorDeathDate",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/pre-need-integration/tests/validation.unit.spec.js",
              "file": "/src/applications/pre-need-integration/tests/validation.unit.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return error if death is before birth",
                  "fullTitle": "Pre-need validation validateSponsorDeathDate should return error if death is before birth",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var errors = {\n  dateOfDeath: {\n    addError: _sinon.default.spy()\n  }\n};\n(0, _validation.validateSponsorDeathDate)(errors, {\n  isDeceased: 'yes',\n  dateOfBirth: '2011-01-01',\n  dateOfDeath: '2010-01-01'\n});\n(0, _chai.expect)(errors.dateOfDeath.addError.called).to.be.true;",
                  "err": {},
                  "uuid": "6d1a946e-81df-4bb2-9b53-0688dba9008e",
                  "parentUUID": "a9f73b27-5ae4-4fe3-8e78-9d42df741e8a",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return error if death is same as birth",
                  "fullTitle": "Pre-need validation validateSponsorDeathDate should return error if death is same as birth",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var errors = {\n  dateOfDeath: {\n    addError: _sinon.default.spy()\n  }\n};\n(0, _validation.validateSponsorDeathDate)(errors, {\n  isDeceased: 'yes',\n  dateOfBirth: '2010-01-01',\n  dateOfDeath: '2010-01-01'\n});\n(0, _chai.expect)(errors.dateOfDeath.addError.called).to.be.true;",
                  "err": {},
                  "uuid": "ec637e04-3839-4363-a8cf-647807a80266",
                  "parentUUID": "a9f73b27-5ae4-4fe3-8e78-9d42df741e8a",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should add error if death is less than 16 years after birth",
                  "fullTitle": "Pre-need validation validateSponsorDeathDate should add error if death is less than 16 years after birth",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var errors = {\n  dateOfDeath: {\n    addError: _sinon.default.spy()\n  }\n};\n(0, _validation.validateSponsorDeathDate)(errors, {\n  isDeceased: 'yes',\n  dateOfBirth: '2010-01-01',\n  dateOfDeath: '2011-01-01'\n});\n(0, _chai.expect)(errors.dateOfDeath.addError.called).to.be.true;",
                  "err": {},
                  "uuid": "3555735b-57c2-4309-b058-4f4eea4d442d",
                  "parentUUID": "a9f73b27-5ae4-4fe3-8e78-9d42df741e8a",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should not add error if death is 16 years or greater after birth",
                  "fullTitle": "Pre-need validation validateSponsorDeathDate should not add error if death is 16 years or greater after birth",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var errors = {\n  dateOfDeath: {\n    addError: _sinon.default.spy()\n  }\n};\n(0, _validation.validateSponsorDeathDate)(errors, {\n  isDeceased: 'yes',\n  dateOfBirth: '2000-01-01',\n  dateOfDeath: '2020-01-01'\n});\n(0, _chai.expect)(errors.dateOfDeath.addError.called).to.be.false;",
                  "err": {},
                  "uuid": "127ded7c-f2a5-4d53-822a-1c6a9b1ffa74",
                  "parentUUID": "a9f73b27-5ae4-4fe3-8e78-9d42df741e8a",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should not add error if not deceased",
                  "fullTitle": "Pre-need validation validateSponsorDeathDate should not add error if not deceased",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var errors = {\n  dateOfDeath: {\n    addError: _sinon.default.spy()\n  }\n};\n(0, _validation.validateSponsorDeathDate)(errors, {\n  isDeceased: 'no',\n  dateOfBirth: '2011-01-01',\n  dateOfDeath: '2010-01-01'\n});\n(0, _chai.expect)(errors.dateOfDeath.addError.called).to.be.false;",
                  "err": {},
                  "uuid": "7b30610a-1c3b-471e-9f70-4c6e503caa83",
                  "parentUUID": "a9f73b27-5ae4-4fe3-8e78-9d42df741e8a",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should not add error if no death date",
                  "fullTitle": "Pre-need validation validateSponsorDeathDate should not add error if no death date",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var errors = {\n  dateOfDeath: {\n    addError: _sinon.default.spy()\n  }\n};\n(0, _validation.validateSponsorDeathDate)(errors, {\n  isDeceased: 'yes',\n  dateOfBirth: '2011-01-01'\n});\n(0, _chai.expect)(errors.dateOfDeath.addError.called).to.be.false;",
                  "err": {},
                  "uuid": "2de985bc-6084-4d30-af84-61a765f8603b",
                  "parentUUID": "a9f73b27-5ae4-4fe3-8e78-9d42df741e8a",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should not add error if no dates",
                  "fullTitle": "Pre-need validation validateSponsorDeathDate should not add error if no dates",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var errors = {\n  dateOfDeath: {\n    addError: _sinon.default.spy()\n  }\n};\n(0, _validation.validateSponsorDeathDate)(errors, {\n  isDeceased: 'yes'\n});\n(0, _chai.expect)(errors.dateOfDeath.addError.called).to.be.false;",
                  "err": {},
                  "uuid": "94a5b6c8-4b80-4d45-a5f4-2611335de32b",
                  "parentUUID": "a9f73b27-5ae4-4fe3-8e78-9d42df741e8a",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "6d1a946e-81df-4bb2-9b53-0688dba9008e",
                "ec637e04-3839-4363-a8cf-647807a80266",
                "3555735b-57c2-4309-b058-4f4eea4d442d",
                "127ded7c-f2a5-4d53-822a-1c6a9b1ffa74",
                "7b30610a-1c3b-471e-9f70-4c6e503caa83",
                "2de985bc-6084-4d30-af84-61a765f8603b",
                "94a5b6c8-4b80-4d45-a5f4-2611335de32b"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "275c1f75-7a19-4254-8afa-2c520b91b659",
              "title": "validateTopLevelDomain",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/pre-need-integration/tests/validation.unit.spec.js",
              "file": "/src/applications/pre-need-integration/tests/validation.unit.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return error if top level domain name contains digit",
                  "fullTitle": "Pre-need validation validateTopLevelDomain should return error if top level domain name contains digit",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var errors = {\n  addError: _sinon.default.spy()\n};\n(0, _validation.validateTopLevelDomain)(errors, 'test@test.c0m');\n(0, _chai.expect)(errors.addError.called).to.be.true;",
                  "err": {},
                  "uuid": "9c37f3ae-9d72-4717-8ae1-eb1471e9a7ab",
                  "parentUUID": "275c1f75-7a19-4254-8afa-2c520b91b659",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should not return error if top level domain is valid",
                  "fullTitle": "Pre-need validation validateTopLevelDomain should not return error if top level domain is valid",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var errors = {\n  addError: _sinon.default.spy()\n};\n(0, _validation.validateTopLevelDomain)(errors, 'test@test.com');\n(0, _chai.expect)(errors.addError.called).to.be.false;",
                  "err": {},
                  "uuid": "1a295a39-031a-4f2f-b879-3fce19b7154a",
                  "parentUUID": "275c1f75-7a19-4254-8afa-2c520b91b659",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return error if top level domain name contains digit",
                  "fullTitle": "Pre-need validation validateTopLevelDomain should return error if top level domain name contains digit",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var errors = {\n  addError: _sinon.default.spy()\n};\n(0, _validation.validateTopLevelDomain)(errors, 'test@test.c0m');\n(0, _chai.expect)(errors.addError.called).to.be.true;",
                  "err": {},
                  "uuid": "08aa9f7a-76aa-49d6-8c05-c552e6807474",
                  "parentUUID": "275c1f75-7a19-4254-8afa-2c520b91b659",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return error if top level domain name contains digit",
                  "fullTitle": "Pre-need validation validateTopLevelDomain should return error if top level domain name contains digit",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var errors = {\n  addError: _sinon.default.spy()\n};\n(0, _validation.validateTopLevelDomain)(errors, '');\n(0, _chai.expect)(errors.addError.called).to.be.false;",
                  "err": {},
                  "uuid": "1f8553a2-5843-4af4-8848-377351d0f211",
                  "parentUUID": "275c1f75-7a19-4254-8afa-2c520b91b659",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return if email is empty",
                  "fullTitle": "Pre-need validation validateTopLevelDomain should return if email is empty",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var errors = {\n  addError: _sinon.default.spy()\n};\n(0, _validation.validateTopLevelDomain)(errors, '');\n(0, _chai.expect)(errors.addError.called).to.be.false;",
                  "err": {},
                  "uuid": "f569843d-7d98-4dcb-a5ea-d18267487712",
                  "parentUUID": "275c1f75-7a19-4254-8afa-2c520b91b659",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "9c37f3ae-9d72-4717-8ae1-eb1471e9a7ab",
                "1a295a39-031a-4f2f-b879-3fce19b7154a",
                "08aa9f7a-76aa-49d6-8c05-c552e6807474",
                "1f8553a2-5843-4af4-8848-377351d0f211",
                "f569843d-7d98-4dcb-a5ea-d18267487712"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 10000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.7.3"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "undefined_2025-03-03T221559637Z",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "min",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "id": "default",
        "consoleReporter": "min",
        "reportDir": "mocha/results",
        "reportFilename": "undefined_2025-03-03T221559637Z",
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}