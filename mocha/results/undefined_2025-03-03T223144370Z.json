{
  "stats": {
    "suites": 124,
    "tests": 248,
    "passes": 248,
    "pending": 0,
    "failures": 0,
    "start": "2025-03-03T22:31:44.431Z",
    "end": "2025-03-03T22:31:45.886Z",
    "duration": 1455,
    "testsRegistered": 248,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "f0b44209-7aa8-49d3-838f-c2e6e21bdb19",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [
        {
          "title": "\"before each\" hook: beforeEach in \"{root}\"",
          "fullTitle": "\"before each\" hook: beforeEach in \"{root}\"",
          "timedOut": false,
          "duration": 2,
          "state": null,
          "speed": null,
          "pass": false,
          "fail": false,
          "pending": false,
          "context": null,
          "code": "cov_5fzq6lsur().f[20]++;\ncov_5fzq6lsur().s[70]++;\nsetupJSDom();\ncov_5fzq6lsur().s[71]++;\nresetFetch();\ncov_5fzq6lsur().s[72]++;\ncleanupStorage();\ncov_5fzq6lsur().s[73]++;\nif (isStressTest == 'false') {\n  cov_5fzq6lsur().b[12][0]++;\n  cov_5fzq6lsur().s[74]++;\n  checkAllowList(this);\n} else {\n  cov_5fzq6lsur().b[12][1]++;\n}\ncov_5fzq6lsur().s[75]++;\nif ((cov_5fzq6lsur().b[14][0]++, process.env.CI) || (cov_5fzq6lsur().b[14][1]++, ['trace', 'debug'].includes(process.env.LOG_LEVEL))) {\n  cov_5fzq6lsur().b[13][0]++;\n  cov_5fzq6lsur().s[76]++;\n  console.log('running: ', this.currentTest.file.slice(this.currentTest.file.indexOf('src')));\n} else {\n  cov_5fzq6lsur().b[13][1]++;\n}",
          "err": {},
          "uuid": "a1ecce58-fa2e-440a-bbd5-bdc92447eb39",
          "parentUUID": "f0b44209-7aa8-49d3-838f-c2e6e21bdb19",
          "isHook": true,
          "skipped": false
        },
        {
          "title": "\"before each\" hook in \"{root}\"",
          "fullTitle": "\"before each\" hook in \"{root}\"",
          "timedOut": false,
          "duration": 0,
          "state": null,
          "speed": null,
          "pass": false,
          "fail": false,
          "pending": false,
          "context": null,
          "code": "restoreConsole = suppressErrorOutput();",
          "err": {},
          "uuid": "0b665dac-6f0d-43b2-b6da-771cbaa73c78",
          "parentUUID": "f0b44209-7aa8-49d3-838f-c2e6e21bdb19",
          "isHook": true,
          "skipped": false
        }
      ],
      "afterHooks": [
        {
          "title": "\"after each\" hook: afterEach in \"{root}\"",
          "fullTitle": "\"after each\" hook: afterEach in \"{root}\"",
          "timedOut": false,
          "duration": 0,
          "state": null,
          "speed": null,
          "pass": false,
          "fail": false,
          "pending": false,
          "context": null,
          "code": "cov_5fzq6lsur().f[21]++;\ncov_5fzq6lsur().s[77]++;\ncleanupStorage();\ncov_5fzq6lsur().s[78]++;\nflushPromises();",
          "err": {},
          "uuid": "d6b70e95-3911-4c2c-87bc-fcb6b5c17bc7",
          "parentUUID": "f0b44209-7aa8-49d3-838f-c2e6e21bdb19",
          "isHook": true,
          "skipped": false
        },
        {
          "title": "\"after each\" hook in \"{root}\"",
          "fullTitle": "\"after each\" hook in \"{root}\"",
          "timedOut": false,
          "duration": 0,
          "state": null,
          "speed": null,
          "pass": false,
          "fail": false,
          "pending": false,
          "context": null,
          "code": "(0, _pure.cleanup)();",
          "err": {},
          "uuid": "17012cb8-6723-44ca-964b-23aef4befca2",
          "parentUUID": "f0b44209-7aa8-49d3-838f-c2e6e21bdb19",
          "isHook": true,
          "skipped": false
        },
        {
          "title": "\"after each\" hook in \"{root}\"",
          "fullTitle": "\"after each\" hook in \"{root}\"",
          "timedOut": false,
          "duration": 0,
          "state": null,
          "speed": null,
          "pass": false,
          "fail": false,
          "pending": false,
          "context": null,
          "code": "await cleanup();",
          "err": {},
          "uuid": "174f8eaf-c173-4d7a-b3ae-bc4f08b8fead",
          "parentUUID": "f0b44209-7aa8-49d3-838f-c2e6e21bdb19",
          "isHook": true,
          "skipped": false
        },
        {
          "title": "\"after each\" hook in \"{root}\"",
          "fullTitle": "\"after each\" hook in \"{root}\"",
          "timedOut": false,
          "duration": 0,
          "state": null,
          "speed": null,
          "pass": false,
          "fail": false,
          "pending": false,
          "context": null,
          "code": "restoreConsole()",
          "err": {},
          "uuid": "ee45af1f-d06c-4800-8ebd-c9c904ac8f85",
          "parentUUID": "f0b44209-7aa8-49d3-838f-c2e6e21bdb19",
          "isHook": true,
          "skipped": false
        }
      ],
      "tests": [],
      "suites": [
        {
          "uuid": "0c10340b-cdf8-4198-831f-0d620ead7db1",
          "title": "App",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/virtual-agent/tests/components/App.unit.spec.jsx",
          "file": "/src/applications/virtual-agent/tests/components/App.unit.spec.jsx",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"App\"",
              "fullTitle": "App \"before each\" hook in \"App\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "sandbox = _sinon.default.sandbox.create();",
              "err": {},
              "uuid": "b8cbf88f-bdec-4ab8-9738-f8bbaf40f85a",
              "parentUUID": "0c10340b-cdf8-4198-831f-0d620ead7db1",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after each\" hook in \"App\"",
              "fullTitle": "App \"after each\" hook in \"App\"",
              "timedOut": false,
              "duration": 1,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "sandbox.restore();",
              "err": {},
              "uuid": "006ffc0c-ec9e-4f7c-a33f-497b2538feb6",
              "parentUUID": "0c10340b-cdf8-4198-831f-0d620ead7db1",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [],
          "suites": [
            {
              "uuid": "60415212-f8cc-4672-af1e-f45ea5ed9e49",
              "title": "App",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/virtual-agent/tests/components/App.unit.spec.jsx",
              "file": "/src/applications/virtual-agent/tests/components/App.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should render the ChatbotError component when loadingStatus is ERROR",
                  "fullTitle": "App App should render the ChatbotError component when loadingStatus is ERROR",
                  "timedOut": false,
                  "duration": 23,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "sandbox.stub(UseWebChatModule, 'default').returns({\n  loadingStatus: _loadingStatus.ERROR\n});\nsandbox.stub(ChatbotErrorModule, 'default').returns(/*#__PURE__*/_react.default.createElement(\"div\", {\n  \"data-testid\": \"chatbot-error\"\n}));\nvar _render = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_App.default, null)),\n  getByTestId = _render.getByTestId;\n(0, _chai.expect)(getByTestId('chatbot-error')).to.exist;",
                  "err": {},
                  "uuid": "0bd7a017-5c7f-4329-b461-20a20dc986f3",
                  "parentUUID": "60415212-f8cc-4672-af1e-f45ea5ed9e49",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should render the va-loading-indicator component when loadingStatus is ERROR",
                  "fullTitle": "App App should render the va-loading-indicator component when loadingStatus is ERROR",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "sandbox.stub(UseWebChatModule, 'default').returns({\n  loadingStatus: _loadingStatus.LOADING\n});\nvar _render2 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_App.default, null)),\n  container = _render2.container;\n(0, _chai.expect)((0, _index.$)('va-loading-indicator', container)).to.exist;",
                  "err": {},
                  "uuid": "14af4193-bf19-4aa2-ad5c-a18c07a63a7e",
                  "parentUUID": "60415212-f8cc-4672-af1e-f45ea5ed9e49",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should render the WebChat component when loadingStatus is ERROR",
                  "fullTitle": "App App should render the WebChat component when loadingStatus is ERROR",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "sandbox.stub(UseWebChatModule, 'default').returns({\n  loadingStatus: _loadingStatus.COMPLETE\n});\nsandbox.stub(WebChatModule, 'default').returns(/*#__PURE__*/_react.default.createElement(\"div\", {\n  \"data-testid\": \"webchat-module\"\n}));\nvar _render3 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_App.default, null)),\n  getByTestId = _render3.getByTestId;\n(0, _chai.expect)(getByTestId('webchat-module')).to.exist;",
                  "err": {},
                  "uuid": "f729d835-df5e-482b-bace-34776bb522c0",
                  "parentUUID": "60415212-f8cc-4672-af1e-f45ea5ed9e49",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should throw an error when loadingStatus is unknown",
                  "fullTitle": "App App should throw an error when loadingStatus is unknown",
                  "timedOut": false,
                  "duration": 16,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
                  "err": {},
                  "uuid": "aec95d46-4457-4864-8424-4b6d1ed974a9",
                  "parentUUID": "60415212-f8cc-4672-af1e-f45ea5ed9e49",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "0bd7a017-5c7f-4329-b461-20a20dc986f3",
                "14af4193-bf19-4aa2-ad5c-a18c07a63a7e",
                "f729d835-df5e-482b-bace-34776bb522c0",
                "aec95d46-4457-4864-8424-4b6d1ed974a9"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 45,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "8e681fd0-9d51-4957-a950-296bc8360fd4",
          "title": "Bot",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/virtual-agent/tests/components/Bot.unit.spec.jsx",
          "file": "/src/applications/virtual-agent/tests/components/Bot.unit.spec.jsx",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"Bot\"",
              "fullTitle": "Bot \"before each\" hook in \"Bot\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "sandbox = _sinon.default.sandbox.create();\n// Even though we don't use clearTimeout, setInterval, and clearInterval,\n// if we don't fake them, the tests will hang after they're complete. -.-\nclock = _sinon.default.useFakeTimers({\n  toFake: ['setTimeout', 'clearTimeout', 'setInterval', 'clearInterval']\n});",
              "err": {},
              "uuid": "4a872443-0974-408a-8684-8402c38434a7",
              "parentUUID": "8e681fd0-9d51-4957-a950-296bc8360fd4",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after each\" hook in \"Bot\"",
              "fullTitle": "Bot \"after each\" hook in \"Bot\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "sandbox.restore();\nclock.restore();",
              "err": {},
              "uuid": "ea7d4d61-b0bb-4fda-9dfc-2d4f4551c422",
              "parentUUID": "8e681fd0-9d51-4957-a950-296bc8360fd4",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [],
          "suites": [
            {
              "uuid": "a5157a83-4e19-48dd-83ea-b543ccc09fe9",
              "title": "Bot",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/virtual-agent/tests/components/Bot.unit.spec.jsx",
              "file": "/src/applications/virtual-agent/tests/components/Bot.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should setup the webAuthActivityEventListener",
                  "fullTitle": "Bot Bot should setup the webAuthActivityEventListener",
                  "timedOut": false,
                  "duration": 11,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "sandbox.stub(ReactReduxModule, 'useSelector');\nvar webAuthActivityEventListenerStub = sandbox.stub(WebAuthActivityEventListenerModule, 'default');\n(0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n  store: mockStore\n}, /*#__PURE__*/_react.default.createElement(_Bot.default, null)));\n(0, _chai.expect)(webAuthActivityEventListenerStub.calledOnce).to.be.true;",
                  "err": {},
                  "uuid": "ba9fa7aa-1fa9-4750-9b6a-f9bc3646804d",
                  "parentUUID": "a5157a83-4e19-48dd-83ea-b543ccc09fe9",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should set inAuthexp to true and loggedInFlow to false if user is logged in",
                  "fullTitle": "Bot Bot should set inAuthexp to true and loggedInFlow to false if user is logged in",
                  "timedOut": false,
                  "duration": 5,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "sandbox.stub(ReactReduxModule, 'useSelector').onCall(0).returns(true);\nsandbox.stub(SessionStorageModule, 'getLoggedInFlow').returns('true');\nvar setInAuthExpStub = sandbox.stub(SessionStorageModule, 'setInAuthExp');\nvar setLoggedInFlowStub = sandbox.stub(SessionStorageModule, 'setLoggedInFlow');\n(0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n  store: mockStore\n}, /*#__PURE__*/_react.default.createElement(_Bot.default, null)));\n(0, _chai.expect)(setInAuthExpStub.calledOnce).to.be.true;\n(0, _chai.expect)(setInAuthExpStub.calledWithExactly('true')).to.be.true;\n(0, _chai.expect)(setLoggedInFlowStub.calledOnce).to.be.true;\n(0, _chai.expect)(setLoggedInFlowStub.calledWithExactly('false')).to.be.true;",
                  "err": {},
                  "uuid": "a03cc57a-bb95-4190-a85e-19932eacbe95",
                  "parentUUID": "a5157a83-4e19-48dd-83ea-b543ccc09fe9",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return ChatboxDisclaimer if disclaimer use has not accepted disclaimer",
                  "fullTitle": "Bot Bot should return ChatboxDisclaimer if disclaimer use has not accepted disclaimer",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "sandbox.stub(ReactReduxModule, 'useSelector').onCall(1).returns(false);\nsandbox.stub(SessionStorageModule, 'getInAuthExp').returns(false);\nsandbox.stub(ChatboxDisclaimerModule, 'default').callsFake(function () {\n  return /*#__PURE__*/_react.default.createElement(\"div\", {\n    \"data-testid\": \"disclaimer\"\n  });\n});\nvar _render = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_Bot.default, null))),\n  getByTestId = _render.getByTestId;\n(0, _chai.expect)(getByTestId('disclaimer')).to.exist;",
                  "err": {},
                  "uuid": "30707723-0931-4871-933e-9d1c4d0aebb3",
                  "parentUUID": "a5157a83-4e19-48dd-83ea-b543ccc09fe9",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return the SignInModal if user is not logged in and is in an auth experience",
                  "fullTitle": "Bot Bot should return the SignInModal if user is not logged in and is in an auth experience",
                  "timedOut": false,
                  "duration": 27,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
                  "err": {},
                  "uuid": "4ae1e39f-652f-4803-8ba1-37d81581177c",
                  "parentUUID": "a5157a83-4e19-48dd-83ea-b543ccc09fe9",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return the App if user accepts disclaimer and does not need to sign in",
                  "fullTitle": "Bot Bot should return the App if user accepts disclaimer and does not need to sign in",
                  "timedOut": false,
                  "duration": 4,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "sandbox.stub(ReactReduxModule, 'useSelector').onCall(0).returns(true).onCall(1).returns(true);\nsandbox.stub(SessionStorageModule, 'getInAuthExp').returns(true);\nsandbox.stub(SessionStorageModule, 'getLoggedInFlow').returns('false');\nsandbox.stub(_react.default, 'useState').returns([true, sandbox.stub()]);\nsandbox.stub(AppModule, 'default').callsFake(function () {\n  return /*#__PURE__*/_react.default.createElement(\"div\", {\n    \"data-testid\": \"app\"\n  });\n});\nvar _render3 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_Bot.default, null))),\n  getByTestId = _render3.getByTestId;\n(0, _chai.expect)(getByTestId('app')).to.exist;",
                  "err": {},
                  "uuid": "ebe0ef67-3a1f-483c-80b8-4703de0d5ac4",
                  "parentUUID": "a5157a83-4e19-48dd-83ea-b543ccc09fe9",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should call setLoggedInFlow when signInModal is closed",
                  "fullTitle": "Bot Bot should call setLoggedInFlow when signInModal is closed",
                  "timedOut": false,
                  "duration": 12,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
                  "err": {},
                  "uuid": "ffb6c46d-6082-4857-a192-c1bb017ce88c",
                  "parentUUID": "a5157a83-4e19-48dd-83ea-b543ccc09fe9",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "ba9fa7aa-1fa9-4750-9b6a-f9bc3646804d",
                "a03cc57a-bb95-4190-a85e-19932eacbe95",
                "30707723-0931-4871-933e-9d1c4d0aebb3",
                "4ae1e39f-652f-4803-8ba1-37d81581177c",
                "ebe0ef67-3a1f-483c-80b8-4703de0d5ac4",
                "ffb6c46d-6082-4857-a192-c1bb017ce88c"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 62,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "194f6b57-8155-4f21-a7ba-ad7c5249ff3e",
          "title": "ChatbotError",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/virtual-agent/tests/components/ChatbotError.unit.spec.jsx",
          "file": "/src/applications/virtual-agent/tests/components/ChatbotError.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "c96a17e9-db39-4162-a8f4-926bfb917a54",
              "title": "ChatbotError",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/virtual-agent/tests/components/ChatbotError.unit.spec.jsx",
              "file": "/src/applications/virtual-agent/tests/components/ChatbotError.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "displays the error message",
                  "fullTitle": "ChatbotError ChatbotError displays the error message",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var _render = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_ChatbotError.default, null)),\n  container = _render.container;\n(0, _chai.expect)((0, _index.$$)('va-alert', container)).to.exist;",
                  "err": {},
                  "uuid": "94877d08-45f1-4356-b44d-1413d2b32eed",
                  "parentUUID": "c96a17e9-db39-4162-a8f4-926bfb917a54",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "94877d08-45f1-4356-b44d-1413d2b32eed"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "77a93190-2d3c-4e6f-8aeb-087c828dc10b",
          "title": "Chatbox",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/virtual-agent/tests/components/Chatbox.unit.spec.jsx",
          "file": "/src/applications/virtual-agent/tests/components/Chatbox.unit.spec.jsx",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"Chatbox\"",
              "fullTitle": "Chatbox \"before each\" hook in \"Chatbox\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "sandbox = _sinon.default.sandbox.create();",
              "err": {},
              "uuid": "1510899e-9095-4208-9bca-2e59092ec4de",
              "parentUUID": "77a93190-2d3c-4e6f-8aeb-087c828dc10b",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after each\" hook in \"Chatbox\"",
              "fullTitle": "Chatbox \"after each\" hook in \"Chatbox\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "sandbox.restore();",
              "err": {},
              "uuid": "adac31a8-d3ab-40bf-bb5d-a1ee73ea1c75",
              "parentUUID": "77a93190-2d3c-4e6f-8aeb-087c828dc10b",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [],
          "suites": [
            {
              "uuid": "ea17088a-2e8e-4f98-a181-32ee82220df6",
              "title": "Chatbox",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/virtual-agent/tests/components/Chatbox.unit.spec.jsx",
              "file": "/src/applications/virtual-agent/tests/components/Chatbox.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should setup the useBotOutgoingActivityEventListener and useWebMessageActivityEventListener",
                  "fullTitle": "Chatbox Chatbox should setup the useBotOutgoingActivityEventListener and useWebMessageActivityEventListener",
                  "timedOut": false,
                  "duration": 6,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var useBotOutgoingActivityEventListenerStub = sandbox.stub(UseBotOutgoingActivityEventListenerModule, 'default');\nvar useWebMessageActivityEventListenerStub = sandbox.stub(UseWebMessageActivityEventListenerModule, 'default');\n(0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n  store: mockStore\n}, /*#__PURE__*/_react.default.createElement(_Chatbox.default, null)));\n(0, _chai.expect)(useBotOutgoingActivityEventListenerStub.calledOnce).to.be.true;\n(0, _chai.expect)(useWebMessageActivityEventListenerStub.calledOnce).to.be.true;",
                  "err": {},
                  "uuid": "2f4f8924-7d6e-446b-bc73-f4e4e31ba70f",
                  "parentUUID": "ea17088a-2e8e-4f98-a181-32ee82220df6",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should render the Bot component",
                  "fullTitle": "Chatbox Chatbox should render the Bot component",
                  "timedOut": false,
                  "duration": 5,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "sandbox.stub(UseBotOutgoingActivityEventListenerModule, 'default');\nsandbox.stub(UseWebMessageActivityEventListenerModule, 'default');\nvar _render = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_Chatbox.default, null))),\n  container = _render.container;\n(0, _chai.expect)((0, _index.$)('h2', container).textContent).to.equal('VA chatbot (beta)');",
                  "err": {},
                  "uuid": "ee7c8c95-29e0-4d53-9df1-7373fa076dfb",
                  "parentUUID": "ea17088a-2e8e-4f98-a181-32ee82220df6",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "2f4f8924-7d6e-446b-bc73-f4e4e31ba70f",
                "ee7c8c95-29e0-4d53-9df1-7373fa076dfb"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 11,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "8a02c83e-6792-491f-916b-577b77924be4",
          "title": "ChatboxDisclaimer",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/virtual-agent/tests/components/ChatboxDisclaimer.unit.spec.jsx",
          "file": "/src/applications/virtual-agent/tests/components/ChatboxDisclaimer.unit.spec.jsx",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"ChatboxDisclaimer\"",
              "fullTitle": "ChatboxDisclaimer \"before each\" hook in \"ChatboxDisclaimer\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "sandbox = _sinon.default.sandbox.create();",
              "err": {},
              "uuid": "aa6bf944-f3c2-4c87-ab3c-380e89374603",
              "parentUUID": "8a02c83e-6792-491f-916b-577b77924be4",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after each\" hook in \"ChatboxDisclaimer\"",
              "fullTitle": "ChatboxDisclaimer \"after each\" hook in \"ChatboxDisclaimer\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "sandbox.restore();",
              "err": {},
              "uuid": "c21966e0-4144-42de-96dc-2b380f90a29b",
              "parentUUID": "8a02c83e-6792-491f-916b-577b77924be4",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [],
          "suites": [
            {
              "uuid": "702f45d4-9c42-4f84-a05e-be9022185889",
              "title": "ChatboxDisclaimer",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/virtual-agent/tests/components/ChatboxDisclaimer.unit.spec.jsx",
              "file": "/src/applications/virtual-agent/tests/components/ChatboxDisclaimer.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should render the disclaimer and start chat button",
                  "fullTitle": "ChatboxDisclaimer ChatboxDisclaimer should render the disclaimer and start chat button",
                  "timedOut": false,
                  "duration": 4,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "sandbox.stub(ReactReduxModule, 'useDispatch');\nvar _render = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_ChatboxDisclaimer.default, null)),\n  getByTestId = _render.getByTestId,\n  container = _render.container;\n(0, _chai.expect)(getByTestId('disclaimer')).to.exist;\n(0, _chai.expect)((0, _index.$)('#btnAcceptDisclaimer', container)).to.exist;",
                  "err": {},
                  "uuid": "f32bc766-067e-40aa-9512-d3921284100e",
                  "parentUUID": "702f45d4-9c42-4f84-a05e-be9022185889",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should clear session storage and dispatch with type: ACCEPTED when the start chat button is clicked",
                  "fullTitle": "ChatboxDisclaimer ChatboxDisclaimer should clear session storage and dispatch with type: ACCEPTED when the start chat button is clicked",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var clearBotSessionStorageStub = sandbox.stub(SessionStorageModule, 'clearBotSessionStorage');\nvar dispatchStub = sandbox.stub();\nsandbox.stub(ReactReduxModule, 'useDispatch').returns(dispatchStub);\nvar _render2 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_ChatboxDisclaimer.default, null)),\n  container = _render2.container;\nvar startChatButton = (0, _index.$)('#btnAcceptDisclaimer', container);\nstartChatButton.click();\n(0, _chai.expect)(clearBotSessionStorageStub.calledOnce).to.be.true;\n(0, _chai.expect)(dispatchStub.calledOnce).to.be.true;\n(0, _chai.expect)(dispatchStub.calledWithExactly({\n  type: _reducers.ACCEPTED\n})).to.be.true;",
                  "err": {},
                  "uuid": "2ec1bb09-727b-4681-97e1-433d2759dc04",
                  "parentUUID": "702f45d4-9c42-4f84-a05e-be9022185889",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "f32bc766-067e-40aa-9512-d3921284100e",
                "2ec1bb09-727b-4681-97e1-433d2759dc04"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 7,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "dda6c797-4395-43dc-a7aa-96dc1fdbf65d",
          "title": "AdditionalInfo",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/virtual-agent/tests/components/Disclaimer/AdditionalInfo.unit.spec.jsx",
          "file": "/src/applications/virtual-agent/tests/components/Disclaimer/AdditionalInfo.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "f5df8c8f-742c-4d53-ad3c-74720eb84336",
              "title": "AdditionalInfo",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/virtual-agent/tests/components/Disclaimer/AdditionalInfo.unit.spec.jsx",
              "file": "/src/applications/virtual-agent/tests/components/Disclaimer/AdditionalInfo.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should have additional info text and va suicide prevention phone number",
                  "fullTitle": "AdditionalInfo AdditionalInfo should have additional info text and va suicide prevention phone number",
                  "timedOut": false,
                  "duration": 11,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var _render = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_AdditionalInfo.default, null)),\n  container = _render.container;\nvar text = (0, _index.$$)('p', container);\nvar number = (0, _index.$$)('va-telephone', container);\n(0, _chai.expect)(text).to.exist;\n(0, _chai.expect)(text[0].textContent).to.equal('If you’re a Veteran in crisis or concerned about one, connect with our caring, qualified Veterans Crisis Line responders for confidential help. Many of them are Veterans themselves. This service is private, free, and available 24/7.');\n(0, _chai.expect)(text[1].textContent).to.equal('To connect with a Veterans Crisis Line responder anytime day or night:Dialing  and press 1.Calling  and press 1.Texting .If you have hearing loss, call .');\n(0, _chai.expect)(number).to.exist;",
                  "err": {},
                  "uuid": "bbc3c0d9-7c9a-4bce-b25d-5eedcfda5656",
                  "parentUUID": "f5df8c8f-742c-4d53-ad3c-74720eb84336",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "bbc3c0d9-7c9a-4bce-b25d-5eedcfda5656"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 11,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "c9e1c00e-a7c5-4430-b601-17af23ab1006",
          "title": "BeforeYouStart",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/virtual-agent/tests/components/Disclaimer/BeforeYouStart.unit.spec.jsx",
          "file": "/src/applications/virtual-agent/tests/components/Disclaimer/BeforeYouStart.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "dd8af11e-6104-4408-94a7-57bbbcff1145",
              "title": "BeforeYouStart",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/virtual-agent/tests/components/Disclaimer/BeforeYouStart.unit.spec.jsx",
              "file": "/src/applications/virtual-agent/tests/components/Disclaimer/BeforeYouStart.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should have header and before you start text",
                  "fullTitle": "BeforeYouStart BeforeYouStart should have header and before you start text",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var _render = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_BeforeYouStart.default, null)),\n  container = _render.container;\nvar header = (0, _index.$)('h2', container);\nvar text = (0, _index.$)('p', container);\n(0, _chai.expect)(header).to.exist;\n(0, _chai.expect)(header.textContent).to.equal('Before you start');\n(0, _chai.expect)(text).to.exist;\n(0, _chai.expect)(text.textContent).to.equal('If you think your life or health is in danger, go to the nearest emergency room or call 911. If you’re not sure if your condition is an emergency, contact your primary care provider. Find your nearest VA health facility Learn more about emergency medical care at VA');",
                  "err": {},
                  "uuid": "e1ef2606-ee95-4dd6-ace0-bd6f0e1563cc",
                  "parentUUID": "dd8af11e-6104-4408-94a7-57bbbcff1145",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "e1ef2606-ee95-4dd6-ace0-bd6f0e1563cc"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 3,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "8a6bf7d5-09de-4c63-ab03-8a9a8a85912e",
          "title": "BetaTesting",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/virtual-agent/tests/components/Disclaimer/BetaTesting.unit.spec.jsx",
          "file": "/src/applications/virtual-agent/tests/components/Disclaimer/BetaTesting.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "00778cda-93ea-45ea-8253-b2e242354357",
              "title": "BetaTesting",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/virtual-agent/tests/components/Disclaimer/BetaTesting.unit.spec.jsx",
              "file": "/src/applications/virtual-agent/tests/components/Disclaimer/BetaTesting.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should have beta testing message",
                  "fullTitle": "BetaTesting BetaTesting should have beta testing message",
                  "timedOut": false,
                  "duration": 4,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var _render = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_BetaTesting.default, null)),\n  container = _render.container;\nvar betaTestingText = (0, _index.$)('h2', container);\nvar questionsText = (0, _index.$$)('p', container);\n(0, _chai.expect)(betaTestingText).to.exist;\n(0, _chai.expect)(betaTestingText.textContent).to.equal('We’re currently in beta testing');\n(0, _chai.expect)(questionsText).to.exist;\n(0, _chai.expect)(questionsText[0].textContent).to.equal(\"Welcome to our chatbot, a new part of VA.gov. We're still building the bot's ability to respond to your questions, so it won't have answers to every question.\");\n(0, _chai.expect)(questionsText[1].textContent).to.equal('If you have questions about VA benefits and services that our chatbot can’t answer right now, you can get the information in any of these ways:Call us at one of our helpful VA phone numbersContact us online through Ask VAExplore our resources and support content');",
                  "err": {},
                  "uuid": "78873813-c8b0-422c-ad8f-226b926b09de",
                  "parentUUID": "00778cda-93ea-45ea-8253-b2e242354357",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "78873813-c8b0-422c-ad8f-226b926b09de"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 4,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "4156f4e4-b313-42fc-91db-3fb58af806b6",
          "title": "Breadcrumbs",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/virtual-agent/tests/components/Disclaimer/Breadcrumbs.unit.spec.jsx",
          "file": "/src/applications/virtual-agent/tests/components/Disclaimer/Breadcrumbs.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should render a va-breadcrumbs component",
              "fullTitle": "Breadcrumbs should render a va-breadcrumbs component",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _render = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_Breadcrumbs.default, null)),\n  container = _render.container;\nvar breadcrumbs = (0, _index.$)('va-breadcrumbs', container);\n(0, _chai.expect)(breadcrumbs).to.not.be.null;",
              "err": {},
              "uuid": "aa1dd8b3-95c1-4e68-9ea2-fbfb9272ee1c",
              "parentUUID": "4156f4e4-b313-42fc-91db-3fb58af806b6",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "aa1dd8b3-95c1-4e68-9ea2-fbfb9272ee1c"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "cbadfe7e-9622-424e-ab0e-054f47f3139a",
          "title": "Disclaimer",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/virtual-agent/tests/components/Disclaimer/Disclaimer.unit.spec.jsx",
          "file": "/src/applications/virtual-agent/tests/components/Disclaimer/Disclaimer.unit.spec.jsx",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"Disclaimer\"",
              "fullTitle": "Disclaimer \"before each\" hook in \"Disclaimer\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "sandbox = _sinon.default.sandbox.create();",
              "err": {},
              "uuid": "d7e0e8e6-3c11-44c3-9765-ded4cebc2f78",
              "parentUUID": "cbadfe7e-9622-424e-ab0e-054f47f3139a",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after each\" hook in \"Disclaimer\"",
              "fullTitle": "Disclaimer \"after each\" hook in \"Disclaimer\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "sandbox.restore();",
              "err": {},
              "uuid": "cc415ef3-1e44-4de0-8216-1956bc531f7c",
              "parentUUID": "cbadfe7e-9622-424e-ab0e-054f47f3139a",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [],
          "suites": [
            {
              "uuid": "324df1fa-5c90-4698-90be-69292df6b00e",
              "title": "Disclaimer",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/virtual-agent/tests/components/Disclaimer/Disclaimer.unit.spec.jsx",
              "file": "/src/applications/virtual-agent/tests/components/Disclaimer/Disclaimer.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should render the Disclaimer components",
                  "fullTitle": "Disclaimer Disclaimer should render the Disclaimer components",
                  "timedOut": false,
                  "duration": 13,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "sandbox.stub(BreadcrumbsModule, 'default').returns(/*#__PURE__*/_react.default.createElement(\"div\", {\n  \"data-testId\": \"breadcrumbs\"\n}));\nsandbox.stub(IntroModule, 'default').returns(/*#__PURE__*/_react.default.createElement(\"div\", {\n  \"data-testId\": \"intro\"\n}));\nsandbox.stub(BetaTestingModule, 'default').returns(/*#__PURE__*/_react.default.createElement(\"div\", {\n  \"data-testId\": \"beta-testing\"\n}));\nsandbox.stub(BeforeYouStartModule, 'default').returns(/*#__PURE__*/_react.default.createElement(\"div\", {\n  \"data-testId\": \"before-you-start\"\n}));\nsandbox.stub(AdditionalInfoModule, 'default').returns(/*#__PURE__*/_react.default.createElement(\"div\", {\n  \"data-testId\": \"additional-info\"\n}));\nvar _render = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_Disclaimer.default, null)),\n  getByTestId = _render.getByTestId;\n(0, _chai.expect)(getByTestId('breadcrumbs')).to.exist;\n(0, _chai.expect)(getByTestId('intro')).to.exist;\n(0, _chai.expect)(getByTestId('beta-testing')).to.exist;\n(0, _chai.expect)(getByTestId('before-you-start')).to.exist;\n(0, _chai.expect)(getByTestId('additional-info')).to.exist;",
                  "err": {},
                  "uuid": "9c0526e3-605f-448c-9b9d-aebe39d6295b",
                  "parentUUID": "324df1fa-5c90-4698-90be-69292df6b00e",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "9c0526e3-605f-448c-9b9d-aebe39d6295b"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 13,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "e8bdf611-045a-4e1b-b093-fd770d5683cf",
          "title": "Intro",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/virtual-agent/tests/components/Disclaimer/Intro.unit.spec.jsx",
          "file": "/src/applications/virtual-agent/tests/components/Disclaimer/Intro.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "29c5c087-e99f-4478-9ad7-76362ed3626b",
              "title": "Intro",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/virtual-agent/tests/components/Disclaimer/Intro.unit.spec.jsx",
              "file": "/src/applications/virtual-agent/tests/components/Disclaimer/Intro.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should have header and welcome text",
                  "fullTitle": "Intro Intro should have header and welcome text",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var _render = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_Intro.default, null)),\n  container = _render.container;\nvar header = (0, _index.$)('h1', container);\nvar text = (0, _index.$)('p', container);\n(0, _chai.expect)(header).to.exist;\n(0, _chai.expect)(header.textContent).to.equal('VA chatbot');\n(0, _chai.expect)(text).to.exist;\n(0, _chai.expect)(text.textContent).to.equal('Use our chatbot to find information on VA.gov.');",
                  "err": {},
                  "uuid": "a41259a6-e843-4e96-bd8d-6171ff0e406b",
                  "parentUUID": "29c5c087-e99f-4478-9ad7-76362ed3626b",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "a41259a6-e843-4e96-bd8d-6171ff0e406b"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "439f351c-bc3e-40e5-b0d8-bb15ca32c6c9",
          "title": "MoreAboutOurChatbot",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/virtual-agent/tests/components/Disclaimer/MoreAboutOurChatbot.unit.spec.jsx",
          "file": "/src/applications/virtual-agent/tests/components/Disclaimer/MoreAboutOurChatbot.unit.spec.jsx",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"MoreAboutOurChatbot\"",
              "fullTitle": "MoreAboutOurChatbot \"before each\" hook in \"MoreAboutOurChatbot\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "sandbox = _sinon.default.sandbox.create();",
              "err": {},
              "uuid": "eb43bf5f-1300-46fa-9bdd-37e32ce2f4dd",
              "parentUUID": "439f351c-bc3e-40e5-b0d8-bb15ca32c6c9",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after each\" hook in \"MoreAboutOurChatbot\"",
              "fullTitle": "MoreAboutOurChatbot \"after each\" hook in \"MoreAboutOurChatbot\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "sandbox.restore();",
              "err": {},
              "uuid": "5587a55b-c68e-4715-9953-da7d6816d795",
              "parentUUID": "439f351c-bc3e-40e5-b0d8-bb15ca32c6c9",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [],
          "suites": [
            {
              "uuid": "db124e4a-75ee-4f11-9e47-27a6b76727f7",
              "title": "MoreAboutOurChatbot",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/virtual-agent/tests/components/Disclaimer/MoreAboutOurChatbot.unit.spec.jsx",
              "file": "/src/applications/virtual-agent/tests/components/Disclaimer/MoreAboutOurChatbot.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should have header and info text",
                  "fullTitle": "MoreAboutOurChatbot MoreAboutOurChatbot should have header and info text",
                  "timedOut": false,
                  "duration": 4,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "sandbox.stub(WhatToExpectModule, 'default').returns(/*#__PURE__*/_react.default.createElement(\"div\", {\n  \"data-testId\": \"what-to-expect\"\n}));\nsandbox.stub(ScreenReaderModule, 'default').returns(/*#__PURE__*/_react.default.createElement(\"div\", {\n  \"data-testId\": \"screen-reader\"\n}));\nsandbox.stub(WhatWeCollectModule, 'default').returns(/*#__PURE__*/_react.default.createElement(\"div\", {\n  \"data-testId\": \"what-we-collect\"\n}));\nvar _render = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_MoreAboutOurChatbot.default, null)),\n  getByTestId = _render.getByTestId,\n  container = _render.container;\nvar header = (0, _index.$)('h3', container);\n(0, _chai.expect)(header).to.exist;\n(0, _chai.expect)(header.textContent).to.equal('More about our chatbot');\n(0, _chai.expect)(getByTestId('what-to-expect')).to.exist;\n(0, _chai.expect)(getByTestId('screen-reader')).to.exist;\n(0, _chai.expect)(getByTestId('what-we-collect')).to.exist;",
                  "err": {},
                  "uuid": "bfcc47d6-8a74-4864-a6cb-c46823c1e5a0",
                  "parentUUID": "db124e4a-75ee-4f11-9e47-27a6b76727f7",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "bfcc47d6-8a74-4864-a6cb-c46823c1e5a0"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 4,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "9149c7df-25a8-4f1f-9bb0-26706022c475",
          "title": "ScreenReader",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/virtual-agent/tests/components/Disclaimer/ScreenReader.unit.spec.jsx",
          "file": "/src/applications/virtual-agent/tests/components/Disclaimer/ScreenReader.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "bee9a9e3-fe09-4d95-b089-e190a6d418c0",
              "title": "ScreenReader",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/virtual-agent/tests/components/Disclaimer/ScreenReader.unit.spec.jsx",
              "file": "/src/applications/virtual-agent/tests/components/Disclaimer/ScreenReader.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should have header and screen reader instructions",
                  "fullTitle": "ScreenReader ScreenReader should have header and screen reader instructions",
                  "timedOut": false,
                  "duration": 4,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var _render = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_ScreenReader.default, null)),\n  container = _render.container;\nvar header = (0, _index.$)('h4', container);\nvar text = (0, _index.$$)('p', container);\n(0, _chai.expect)(header).to.exist;\n(0, _chai.expect)(header.textContent).to.equal('How to use our chatbot with a screen reader');\n(0, _chai.expect)(text).to.exist;\n(0, _chai.expect)(text[0].textContent).to.equal('If you’re blind or have low vision, follow these steps to use our chatbot on a desktop computer with a screen reader:');\n(0, _chai.expect)(text[1].textContent).to.equal('Press Tab until the \"Start chat\" button is in focus and press Enter.Use the arrow keys to listen to the chatbot messages.Press Tab to select the \"Type your message\" section.Ask your question and press Enter.Press Shift+Tab to go back to messages.Use the arrow keys to focus on a specific message.Press Enter to focus on a link.Press Enter to open a link. The link will open on another page.Press Escape to leave the current message.Press Shift+Tab to exit the chatbot window.');\n(0, _chai.expect)(text[2].textContent).to.equal('Note: We’re currently in beta testing. Thank you for your patience as we work to make our chatbot easier to use.');",
                  "err": {},
                  "uuid": "f9f9e27d-11fe-4ec2-9d99-bd08ef22c359",
                  "parentUUID": "bee9a9e3-fe09-4d95-b089-e190a6d418c0",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "f9f9e27d-11fe-4ec2-9d99-bd08ef22c359"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 4,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "f1ba381d-b2e0-4a1e-a25b-77eaf14d3ede",
          "title": "WhatToExpect",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/virtual-agent/tests/components/Disclaimer/WhatToExpect.unit.spec.jsx",
          "file": "/src/applications/virtual-agent/tests/components/Disclaimer/WhatToExpect.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "1c6f4b88-b0ac-4a71-8626-1b7859cb5b0d",
              "title": "WhatToExpect",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/virtual-agent/tests/components/Disclaimer/WhatToExpect.unit.spec.jsx",
              "file": "/src/applications/virtual-agent/tests/components/Disclaimer/WhatToExpect.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should have header, what to expect text and links",
                  "fullTitle": "WhatToExpect WhatToExpect should have header, what to expect text and links",
                  "timedOut": false,
                  "duration": 4,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var _render = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_WhatToExpect.default, null)),\n  container = _render.container;\nvar header = (0, _index.$)('h4', container);\nvar text = (0, _index.$$)('p', container);\nvar list = (0, _index.$$)('li', container);\nvar numberLink = (0, _index.$)('a[href=\"/resources/helpful-va-phone-numbers/\"]', container);\nvar signInLink = (0, _index.$)('a[href=\"/resources/signing-in-to-vagov/\"]', container);\n(0, _chai.expect)(header).to.exist;\n(0, _chai.expect)(header.textContent).to.equal('What to expect when using our chatbot');\n(0, _chai.expect)(text).to.exist;\n(0, _chai.expect)(text[0].textContent).to.equal('Our chatbot is a resource to help you quickly find information about VA benefits and services. You won’t communicate with an actual representative through the chatbot. If you need help with any of the issues listed here, you’ll need to speak with a health care professional or one of our representatives. You can also visit our resources and support section for more information.');\n(0, _chai.expect)(text[1].textContent).to.equal('Our chatbot can’t do any of these things:');\n(0, _chai.expect)(list).to.exist;\n(0, _chai.expect)(list[0].textContent).equal('Determine if you have a medical or mental health condition');\n(0, _chai.expect)(list[1].textContent).equal('Provide medical or mental health advice, treatment, or counseling');\n(0, _chai.expect)(list[2].textContent).equal('Answer questions or take reports about your prescriptions or side effects');\n(0, _chai.expect)(list[3].textContent).equal('Help you with a personal, medical, or mental health emergency');\n(0, _chai.expect)(list[4].textContent).equal('Transfer you directly to one of our call center representatives');\n(0, _chai.expect)(list[5].textContent).equal('Help you sign in to VA.gov');\n(0, _chai.expect)(numberLink).to.exist;\n(0, _chai.expect)(numberLink.textContent).to.equal('Call us at one of our helpful VA phone numbers to speak to a representative');\n(0, _chai.expect)(signInLink).to.exist;\n(0, _chai.expect)(signInLink.textContent).to.equal('Learn how to sign in to VA.gov');",
                  "err": {},
                  "uuid": "cb78d568-2a17-4473-b1bd-925053dbaa80",
                  "parentUUID": "1c6f4b88-b0ac-4a71-8626-1b7859cb5b0d",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "cb78d568-2a17-4473-b1bd-925053dbaa80"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 4,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "a37b275c-23e3-4fcb-80ea-8eb7e564af13",
          "title": "WhatWeCollect",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/virtual-agent/tests/components/Disclaimer/WhatWeCollect.unit.spec.jsx",
          "file": "/src/applications/virtual-agent/tests/components/Disclaimer/WhatWeCollect.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "7b72c0d7-f9b0-451a-b4ed-a89d7d4025eb",
              "title": "WhatWeCollect",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/virtual-agent/tests/components/Disclaimer/WhatWeCollect.unit.spec.jsx",
              "file": "/src/applications/virtual-agent/tests/components/Disclaimer/WhatWeCollect.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should have header, collection information and privacy policy link",
                  "fullTitle": "WhatWeCollect WhatWeCollect should have header, collection information and privacy policy link",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var _render = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_WhatWeCollect.default, null)),\n  container = _render.container;\nvar header = (0, _index.$)('h4', container);\nvar text = (0, _index.$$)('p', container);\nvar privacyPolicyLink = (0, _index.$)('a[href=\"/privacy-policy/\"]', container);\n(0, _chai.expect)(header).to.exist;\n(0, _chai.expect)(header.textContent).to.equal('What information we collect when you use the chatbot');\n(0, _chai.expect)(text).to.exist;\n(0, _chai.expect)(text[0].textContent).to.equal('We use certain information you’ve provided to build better tools for Veterans, service members, and their families.');\n(0, _chai.expect)(text[1].textContent).to.equal('We keep only this information when you use our chatbot:A record of what you typedYour answers to our survey questionsHow long you used our chatbot, the links you clicked on, and other data');\n(0, _chai.expect)(text[2].textContent).to.equal('We protect your privacy in these ways:We don’t collect any information that can be used to identify you.We don’t use your information to contact you.We combine your information with others as a summary to study for ideas to improve our chatbot tool.We don’t share any of the information we collect outside of VA.');\n(0, _chai.expect)(text[3].textContent).to.equal('Note: You can help us protect your privacy and security by not typing any personal information into our chatbot. This includes your name, address, or anything else that someone could use to identify you.');\n(0, _chai.expect)(privacyPolicyLink).to.exist;\n(0, _chai.expect)(privacyPolicyLink.textContent).to.equal('Learn more about how we collect, store, and use your information');",
                  "err": {},
                  "uuid": "4a284a44-04aa-497f-80c2-d6182fda814c",
                  "parentUUID": "7b72c0d7-f9b0-451a-b4ed-a89d7d4025eb",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "4a284a44-04aa-497f-80c2-d6182fda814c"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "dbaf6563-ecf1-4366-9fd6-6f2d89f5d607",
          "title": "FloatingBot",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/virtual-agent/tests/components/FloatingBot.unit.spec.jsx",
          "file": "/src/applications/virtual-agent/tests/components/FloatingBot.unit.spec.jsx",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"FloatingBot\"",
              "fullTitle": "FloatingBot \"before each\" hook in \"FloatingBot\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "sandbox = _sinon.default.sandbox.create();",
              "err": {},
              "uuid": "ead20755-7f5e-4331-8231-c32b766b38ab",
              "parentUUID": "dbaf6563-ecf1-4366-9fd6-6f2d89f5d607",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after each\" hook in \"FloatingBot\"",
              "fullTitle": "FloatingBot \"after each\" hook in \"FloatingBot\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "sandbox.restore();",
              "err": {},
              "uuid": "d5daef98-39f5-4691-8eee-9aeb56ed72c1",
              "parentUUID": "dbaf6563-ecf1-4366-9fd6-6f2d89f5d607",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [],
          "suites": [
            {
              "uuid": "7552e513-651c-409a-937a-bdae619650ce",
              "title": "FloatingBot",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/virtual-agent/tests/components/FloatingBot.unit.spec.jsx",
              "file": "/src/applications/virtual-agent/tests/components/FloatingBot.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should render the chatbot icon, corner bot, close bot button, disclaimer and chatbox components",
                  "fullTitle": "FloatingBot FloatingBot should render the chatbot icon, corner bot, close bot button, disclaimer and chatbox components",
                  "timedOut": false,
                  "duration": 5,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "sandbox.stub(Disclaimer, 'default').callsFake(function () {\n  return /*#__PURE__*/_react.default.createElement(\"div\", {\n    \"data-testid\": \"disclaimer\"\n  });\n});\nsandbox.stub(Chatbox, 'default').callsFake(function () {\n  return /*#__PURE__*/_react.default.createElement(\"div\", {\n    className: \"chatbox\"\n  });\n});\nvar _render = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_FloatingBot.default, null)),\n  getByTestId = _render.getByTestId,\n  container = _render.container;\n(0, _chai.expect)((0, _index.$$)('div.chatbot-icon', container)).to.exist;\n(0, _chai.expect)((0, _index.$$)('div.corner-bot', container)).to.exist;\n(0, _chai.expect)((0, _index.$$)('div.close-chatbot-button', container)).to.exist;\n(0, _chai.expect)((0, _index.$$)('div.chatbox', container).length).to.equal(2);\n(0, _chai.expect)(getByTestId('disclaimer')).to.exist;",
                  "err": {},
                  "uuid": "69c25a00-bacc-408d-bb57-bcf891a2ce93",
                  "parentUUID": "7552e513-651c-409a-937a-bdae619650ce",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should hide the chatbot and show the chatbot icon by default",
                  "fullTitle": "FloatingBot FloatingBot should hide the chatbot and show the chatbot icon by default",
                  "timedOut": false,
                  "duration": 4,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "sandbox.stub(Disclaimer, 'default').callsFake(function () {\n  return /*#__PURE__*/_react.default.createElement(\"div\", {\n    \"data-testid\": \"disclaimer\"\n  });\n});\nsandbox.stub(Chatbox, 'default').callsFake(function () {\n  return /*#__PURE__*/_react.default.createElement(\"div\", {\n    className: \"chatbox\"\n  });\n});\nvar _render2 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_FloatingBot.default, null)),\n  container = _render2.container;\n(0, _chai.expect)((0, _index.$)('#corner-bot', container).classList.contains('hide')).to.be.true;\n(0, _chai.expect)((0, _index.$)('#chatbot-icon', container).classList.contains('unhide')).to.be.true;",
                  "err": {},
                  "uuid": "7af56bfb-32e6-4d15-858c-0060a2966f11",
                  "parentUUID": "7552e513-651c-409a-937a-bdae619650ce",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should show the chatbot and hide the chatbot icon when Go to chatbot link is clicked",
                  "fullTitle": "FloatingBot FloatingBot should show the chatbot and hide the chatbot icon when Go to chatbot link is clicked",
                  "timedOut": false,
                  "duration": 6,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "sandbox.stub(Disclaimer, 'default').callsFake(function () {\n  return /*#__PURE__*/_react.default.createElement(\"div\", {\n    \"data-testid\": \"disclaimer\"\n  });\n});\nsandbox.stub(Chatbox, 'default').callsFake(function () {\n  return /*#__PURE__*/_react.default.createElement(\"div\", {\n    className: \"chatbox\"\n  });\n});\nvar _render3 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_FloatingBot.default, null)),\n  container = _render3.container;\nvar goToChatbotLink = (0, _index.$)('a.show-on-focus', container);\ngoToChatbotLink.click();\n(0, _chai.expect)((0, _index.$)('#corner-bot', container).classList.contains('unhide')).to.be.true;\n(0, _chai.expect)((0, _index.$)('#chatbot-icon', container).classList.contains('hide')).to.be.true;",
                  "err": {},
                  "uuid": "5fcbb27b-7e02-470e-97f5-021915892060",
                  "parentUUID": "7552e513-651c-409a-937a-bdae619650ce",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should show the chatbot and hide the chatbot icon when chatbot icon is clicked",
                  "fullTitle": "FloatingBot FloatingBot should show the chatbot and hide the chatbot icon when chatbot icon is clicked",
                  "timedOut": false,
                  "duration": 5,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "sandbox.stub(Disclaimer, 'default').callsFake(function () {\n  return /*#__PURE__*/_react.default.createElement(\"div\", {\n    \"data-testid\": \"disclaimer\"\n  });\n});\nsandbox.stub(Chatbox, 'default').callsFake(function () {\n  return /*#__PURE__*/_react.default.createElement(\"div\", {\n    className: \"chatbox\"\n  });\n});\nvar _render4 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_FloatingBot.default, null)),\n  container = _render4.container;\nvar showBotButton = (0, _index.$)('#chatbot-icon', container);\nshowBotButton.click();\n(0, _chai.expect)((0, _index.$)('#corner-bot', container).classList.contains('unhide')).to.be.true;\n(0, _chai.expect)((0, _index.$)('#chatbot-icon', container).classList.contains('hide')).to.be.true;",
                  "err": {},
                  "uuid": "84ea72fb-2821-4643-bf7b-60c65cc29d45",
                  "parentUUID": "7552e513-651c-409a-937a-bdae619650ce",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should hide the chatbot and show the chatbot icon when close chatbot button is clicked",
                  "fullTitle": "FloatingBot FloatingBot should hide the chatbot and show the chatbot icon when close chatbot button is clicked",
                  "timedOut": false,
                  "duration": 7,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "sandbox.stub(Disclaimer, 'default').callsFake(function () {\n  return /*#__PURE__*/_react.default.createElement(\"div\", {\n    \"data-testid\": \"disclaimer\"\n  });\n});\nsandbox.stub(Chatbox, 'default').callsFake(function () {\n  return /*#__PURE__*/_react.default.createElement(\"div\", {\n    className: \"chatbox\"\n  });\n});\nvar _render5 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_FloatingBot.default, null)),\n  container = _render5.container;\nvar closeBotButton = (0, _index.$)('div.close-chatbot-button', container);\ncloseBotButton.click();\n(0, _chai.expect)((0, _index.$)('#corner-bot', container).classList.contains('hide')).to.be.true;\n(0, _chai.expect)((0, _index.$)('#chatbot-icon', container).classList.contains('unhide')).to.be.true;",
                  "err": {},
                  "uuid": "68d68015-92a2-4816-a422-a2743609685f",
                  "parentUUID": "7552e513-651c-409a-937a-bdae619650ce",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "69c25a00-bacc-408d-bb57-bcf891a2ce93",
                "7af56bfb-32e6-4d15-858c-0060a2966f11",
                "5fcbb27b-7e02-470e-97f5-021915892060",
                "84ea72fb-2821-4643-bf7b-60c65cc29d45",
                "68d68015-92a2-4816-a422-a2743609685f"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 27,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "7475742e-7df8-465a-b74b-48fd55d34e20",
          "title": "Page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/virtual-agent/tests/components/Page.unit.spec.jsx",
          "file": "/src/applications/virtual-agent/tests/components/Page.unit.spec.jsx",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"Page\"",
              "fullTitle": "Page \"before each\" hook in \"Page\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "sandbox = _sinon.default.sandbox.create();",
              "err": {},
              "uuid": "2e23dec0-1567-4dad-87e9-033e3fdf0394",
              "parentUUID": "7475742e-7df8-465a-b74b-48fd55d34e20",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after each\" hook in \"Page\"",
              "fullTitle": "Page \"after each\" hook in \"Page\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "sandbox.restore();",
              "err": {},
              "uuid": "aa6ffb31-54dc-42df-aa36-f30c16f9c477",
              "parentUUID": "7475742e-7df8-465a-b74b-48fd55d34e20",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [],
          "suites": [
            {
              "uuid": "8cbe58aa-4ebe-4b22-b95e-9d4561507b37",
              "title": "Page",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/virtual-agent/tests/components/Page.unit.spec.jsx",
              "file": "/src/applications/virtual-agent/tests/components/Page.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should set up the chosen bot hook",
                  "fullTitle": "Page Page should set up the chosen bot hook",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var _getData = getData(),\n  props = _getData.props,\n  mockStore = _getData.mockStore;\nvar useChosenBotStub = sandbox.stub(UseChosenBotModule, 'default').returns(/*#__PURE__*/_react.default.createElement(\"div\", null));\nsandbox.stub(StickyBotModule, 'default');\nsandbox.stub(FloatingBotModule, 'default');\n(0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n  store: mockStore\n}, /*#__PURE__*/_react.default.createElement(_Page.default, props)));\n(0, _chai.expect)(useChosenBotStub.calledOnce).to.be.true;",
                  "err": {},
                  "uuid": "1bf48b89-6c94-4d7d-8bb6-38b7e6b1a0d4",
                  "parentUUID": "8cbe58aa-4ebe-4b22-b95e-9d4561507b37",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "1bf48b89-6c94-4d7d-8bb6-38b7e6b1a0d4"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 3,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "e635565b-3f0d-4f01-ae4b-0abac7e2bdb6",
              "title": "renderPageContent",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/virtual-agent/tests/components/Page.unit.spec.jsx",
              "file": "/src/applications/virtual-agent/tests/components/Page.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "renders loading indicator when isLoading is true",
                  "fullTitle": "Page renderPageContent renders loading indicator when isLoading is true",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var result = (0, _Page.renderPageContent)(true, 'sticky');\n(0, _chai.expect)(result).to.deep.equal(/*#__PURE__*/_react.default.createElement(\"va-loading-indicator\", null));",
                  "err": {},
                  "uuid": "3b215bc0-f001-4d32-9c64-cfd1ea52007c",
                  "parentUUID": "e635565b-3f0d-4f01-ae4b-0abac7e2bdb6",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "returns StickyBot when chosenBot is \"sticky\" and isLoading is false",
                  "fullTitle": "Page renderPageContent returns StickyBot when chosenBot is \"sticky\" and isLoading is false",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var result = (0, _Page.renderPageContent)(false, 'sticky');\n(0, _chai.expect)(result).to.deep.equal(/*#__PURE__*/_react.default.createElement(_StickyBot.default, null));",
                  "err": {},
                  "uuid": "29dc6feb-96cc-4981-bfd2-55f481b57a7c",
                  "parentUUID": "e635565b-3f0d-4f01-ae4b-0abac7e2bdb6",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "returns FloatingBot when chosenBot is \"default\" and isLoading is false",
                  "fullTitle": "Page renderPageContent returns FloatingBot when chosenBot is \"default\" and isLoading is false",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var result = (0, _Page.renderPageContent)(false, 'default');\n(0, _chai.expect)(result).to.deep.equal(/*#__PURE__*/_react.default.createElement(_FloatingBot.default, null));",
                  "err": {},
                  "uuid": "6bcfbb1f-4c97-46c4-95a2-712db8792cef",
                  "parentUUID": "e635565b-3f0d-4f01-ae4b-0abac7e2bdb6",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "renders empty string when chosenBot is neither \"sticky\" nor \"default\" and isLoading is false",
                  "fullTitle": "Page renderPageContent renders empty string when chosenBot is neither \"sticky\" nor \"default\" and isLoading is false",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var result = (0, _Page.renderPageContent)(false, 'other');\n(0, _chai.expect)(result).to.equal('');",
                  "err": {},
                  "uuid": "57fd8439-1bf7-492c-aff6-3e129c20f7a9",
                  "parentUUID": "e635565b-3f0d-4f01-ae4b-0abac7e2bdb6",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "3b215bc0-f001-4d32-9c64-cfd1ea52007c",
                "29dc6feb-96cc-4981-bfd2-55f481b57a7c",
                "6bcfbb1f-4c97-46c4-95a2-712db8792cef",
                "57fd8439-1bf7-492c-aff6-3e129c20f7a9"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "ea028015-76f5-4345-b0b1-456571b71f00",
          "title": "StickyBot",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/virtual-agent/tests/components/StickyBot.unit.spec.jsx",
          "file": "/src/applications/virtual-agent/tests/components/StickyBot.unit.spec.jsx",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"StickyBot\"",
              "fullTitle": "StickyBot \"before each\" hook in \"StickyBot\"",
              "timedOut": false,
              "duration": 1,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "sandbox = _sinon.default.sandbox.create();",
              "err": {},
              "uuid": "bbc8196a-8a0e-4c10-8e40-06ec1e552d69",
              "parentUUID": "ea028015-76f5-4345-b0b1-456571b71f00",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after each\" hook in \"StickyBot\"",
              "fullTitle": "StickyBot \"after each\" hook in \"StickyBot\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "sandbox.restore();",
              "err": {},
              "uuid": "827e71a7-53ab-4aa4-b87c-39b8795c50be",
              "parentUUID": "ea028015-76f5-4345-b0b1-456571b71f00",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [],
          "suites": [
            {
              "uuid": "067cfeb4-d397-4346-9632-7bfb635fa810",
              "title": "StickyBot",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/virtual-agent/tests/components/StickyBot.unit.spec.jsx",
              "file": "/src/applications/virtual-agent/tests/components/StickyBot.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should render the disclaimer and chatbox components",
                  "fullTitle": "StickyBot StickyBot should render the disclaimer and chatbox components",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "sandbox.stub(Disclaimer, 'default').callsFake(function () {\n  return /*#__PURE__*/_react.default.createElement(\"div\", {\n    \"data-testid\": \"disclaimer\"\n  });\n});\nsandbox.stub(Chatbox, 'default').callsFake(function () {\n  return /*#__PURE__*/_react.default.createElement(\"div\", {\n    \"data-testid\": \"chatbox\"\n  });\n});\nvar _render = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_StickyBot.default, null)),\n  getByTestId = _render.getByTestId;\n(0, _chai.expect)(getByTestId('disclaimer')).to.exist;\n(0, _chai.expect)(getByTestId('chatbox')).to.exist;",
                  "err": {},
                  "uuid": "2790c179-2cc3-47be-afb7-9260a7d50b22",
                  "parentUUID": "067cfeb4-d397-4346-9632-7bfb635fa810",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "2790c179-2cc3-47be-afb7-9260a7d50b22"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "0fe5bec3-818a-4672-95e7-def533fb7202",
          "title": "WebChat",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/virtual-agent/tests/components/WebChat.unit.spec.jsx",
          "file": "/src/applications/virtual-agent/tests/components/WebChat.unit.spec.jsx",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"WebChat\"",
              "fullTitle": "WebChat \"before each\" hook in \"WebChat\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "sandbox = _sinon.default.sandbox.create();",
              "err": {},
              "uuid": "6a7b226b-807f-40f5-b4be-1259db1b4b1f",
              "parentUUID": "0fe5bec3-818a-4672-95e7-def533fb7202",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after each\" hook in \"WebChat\"",
              "fullTitle": "WebChat \"after each\" hook in \"WebChat\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "sandbox.restore();\nglobal.window = originalWindow;",
              "err": {},
              "uuid": "1fede123-371f-4c83-a5a0-f1f2d07dc743",
              "parentUUID": "0fe5bec3-818a-4672-95e7-def533fb7202",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [],
          "suites": [
            {
              "uuid": "b079eb12-adea-405e-8c3f-47e7a233acd8",
              "title": "renderMarkdown",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/virtual-agent/tests/components/WebChat.unit.spec.jsx",
              "file": "/src/applications/virtual-agent/tests/components/WebChat.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should render markdown",
                  "fullTitle": "WebChat renderMarkdown should render markdown",
                  "timedOut": false,
                  "duration": 7,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var renderSpy = sandbox.spy(_markdownRenderer.default, 'render');\nvar markdown = 'This is a test';\n(0, _WebChat.renderMarkdown)(markdown);\n(0, _chai.expect)(renderSpy.calledOnce).to.be.true;\n(0, _chai.expect)(renderSpy.calledWith(markdown)).to.be.true;",
                  "err": {},
                  "uuid": "38670fec-b4aa-48b3-b126-0ae5b96758e0",
                  "parentUUID": "b079eb12-adea-405e-8c3f-47e7a233acd8",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "38670fec-b4aa-48b3-b126-0ae5b96758e0"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 7,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "43ba3029-ce41-498b-aefa-70f89eda0125",
              "title": "WebChat",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/virtual-agent/tests/components/WebChat.unit.spec.jsx",
              "file": "/src/applications/virtual-agent/tests/components/WebChat.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should validate parameters, setup event listeners, setup useEffects and render",
                  "fullTitle": "WebChat WebChat should validate parameters, setup event listeners, setup useEffects and render",
                  "timedOut": false,
                  "duration": 9,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var webChatFramework = getWebChatFramework();\nvar setParamLoadingStatus = sandbox.spy();\nstubValues();\nvar functionStubs = stubFunctions();\n(0, _react.render)(/*#__PURE__*/_react2.default.createElement(_reactRedux.Provider, {\n  store: mockStore({})\n}, /*#__PURE__*/_react2.default.createElement(_WebChat.default, {\n  token: token,\n  webChatFramework: webChatFramework,\n  apiSession: apiSession,\n  setParamLoadingStatus: setParamLoadingStatus\n})));\n(0, _chai.expect)(functionStubs.validateParametersStub.calledOnce).to.be.true;\n(0, _chai.expect)(functionStubs.useWebChatStoreStub.calledOnce).to.be.true;\n(0, _chai.expect)(functionStubs.clearBotSessionStorageEventListenerStub.calledOnce).to.be.true;\n(0, _chai.expect)(functionStubs.signOutEventListenerStub.calledOnce).to.be.true;\n(0, _chai.expect)(functionStubs.useBotPonyFillStub.calledOnce).to.be.true;\n(0, _chai.expect)(functionStubs.rxSkillEventListenerStub.calledOnce).to.be.true;\n(0, _chai.expect)(functionStubs.useSetSendBoxMessageStub.calledOnce).to.be.true;\n(0, _chai.expect)(functionStubs.useDirectlineStub.calledOnce).to.be.true;",
                  "err": {},
                  "uuid": "5d2b1273-414e-4904-aaa6-d12b979c87f7",
                  "parentUUID": "43ba3029-ce41-498b-aefa-70f89eda0125",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should call rx skill effects a second time when rxSkill event is triggered",
                  "fullTitle": "WebChat WebChat should call rx skill effects a second time when rxSkill event is triggered",
                  "timedOut": false,
                  "duration": 6,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
                  "err": {},
                  "uuid": "c10605d0-72d2-45d7-9c76-c46182f5811e",
                  "parentUUID": "43ba3029-ce41-498b-aefa-70f89eda0125",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should render Composer with args and BasicWebChat",
                  "fullTitle": "WebChat WebChat should render Composer with args and BasicWebChat",
                  "timedOut": false,
                  "duration": 5,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var webChatFramework = {\n  createDirectLine: _sinon.default.spy(),\n  createStore: sandbox.spy(),\n  Components: {\n    BasicWebChat: _sinon.default.stub().callsFake(function (props) {\n      return /*#__PURE__*/_react2.default.createElement(\"div\", _extends({\n        \"data-testid\": \"BasicWebChat\"\n      }, props));\n    }),\n    Composer: _sinon.default.stub().callsFake(function (props) {\n      return /*#__PURE__*/_react2.default.createElement(\"div\", _extends({\n        \"data-testid\": \"Composer\"\n      }, props));\n    })\n  }\n};\nvar setParamLoadingStatus = sandbox.spy();\nstubValues();\nstubFunctions();\nvar cardActionMiddlewareStub = sandbox.stub(CardActionMiddlewareModule, 'cardActionMiddleware');\nvar activityMiddlewareStub = sandbox.stub(ActivityMiddlewareModule, 'activityMiddleware');\nvar handleTelemetryStub = sandbox.stub(TelemetryModule, 'default');\n// const renderMarkdownStub = sandbox.stub(WebChat, 'renderMarkdown');\nvar store = mockStore({});\nvar _render = (0, _react.render)(/*#__PURE__*/_react2.default.createElement(_reactRedux.Provider, {\n    store: store\n  }, /*#__PURE__*/_react2.default.createElement(_WebChat.default, {\n    token: token,\n    webChatFramework: webChatFramework,\n    apiSession: apiSession,\n    setParamLoadingStatus: setParamLoadingStatus\n  }))),\n  getByTestId = _render.getByTestId;\n(0, _chai.expect)(getByTestId('Composer')).to.exist;\n(0, _chai.expect)(getByTestId('BasicWebChat')).to.exist;\n(0, _chai.expect)(webChatFramework.Components.Composer.getCall(0).args[0].cardActionMiddleware).to.equal(cardActionMiddlewareStub);\n(0, _chai.expect)(webChatFramework.Components.Composer.getCall(0).args[0].activityMiddleware).to.equal(activityMiddlewareStub);\n(0, _chai.expect)(webChatFramework.Components.Composer.getCall(0).args[0].styleOptions).to.not.be.undefined;\n(0, _chai.expect)(webChatFramework.Components.Composer.getCall(0).args[0].directLine).to.equal('fake-directline');\n(0, _chai.expect)(webChatFramework.Components.Composer.getCall(0).args[0].store).to.equal('fake-webchat-store');\n(0, _chai.expect)(webChatFramework.Components.Composer.getCall(0).args[0].renderMarkdown).to.equal(_WebChat.renderMarkdown);\n(0, _chai.expect)(webChatFramework.Components.Composer.getCall(0).args[0].onTelemetry).to.equal(handleTelemetryStub);",
                  "err": {},
                  "uuid": "811c9275-d2e2-4040-a931-c324a977a53e",
                  "parentUUID": "43ba3029-ce41-498b-aefa-70f89eda0125",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should render without webSpeechPonyfillFactory when not in rx skill",
                  "fullTitle": "WebChat WebChat should render without webSpeechPonyfillFactory when not in rx skill",
                  "timedOut": false,
                  "duration": 13,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var webChatFramework = getWebChatFramework();\nvar setParamLoadingStatus = sandbox.spy();\nstubValues();\nvar _render2 = (0, _react.render)(/*#__PURE__*/_react2.default.createElement(_reactRedux.Provider, {\n    store: mockStore({})\n  }, /*#__PURE__*/_react2.default.createElement(_WebChat.default, {\n    token: token,\n    webChatFramework: webChatFramework,\n    apiSession: apiSession,\n    setParamLoadingStatus: setParamLoadingStatus\n  }))),\n  getByTestId = _render2.getByTestId;\nvar lastCallIndex = webChatFramework.Components.Composer.args.length - 1;\n(0, _chai.expect)(getByTestId('Composer')).to.exist;\n(0, _chai.expect)(webChatFramework.Components.Composer.getCall(lastCallIndex).args[0].webSpeechPonyfillFactory).to.be.undefined;",
                  "err": {},
                  "uuid": "cb6be534-a35e-4472-aa69-9b29799412fa",
                  "parentUUID": "43ba3029-ce41-498b-aefa-70f89eda0125",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should render with webSpeechPonyfillFactory when in rx skill",
                  "fullTitle": "WebChat WebChat should render with webSpeechPonyfillFactory when in rx skill",
                  "timedOut": false,
                  "duration": 20,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
                  "err": {},
                  "uuid": "031eb271-f533-401e-b3ba-2c580ed31509",
                  "parentUUID": "43ba3029-ce41-498b-aefa-70f89eda0125",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "5d2b1273-414e-4904-aaa6-d12b979c87f7",
                "c10605d0-72d2-45d7-9c76-c46182f5811e",
                "811c9275-d2e2-4040-a931-c324a977a53e",
                "cb6be534-a35e-4472-aa69-9b29799412fa",
                "031eb271-f533-401e-b3ba-2c580ed31509"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 53,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "32910df3-a99a-4e45-a626-edfd809b3170",
          "title": "clearBotSessionStorageEventListener",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/virtual-agent/tests/event-listeners/clearBotSessionStorage.unit.spec.js",
          "file": "/src/applications/virtual-agent/tests/event-listeners/clearBotSessionStorage.unit.spec.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"clearBotSessionStorageEventListener\"",
              "fullTitle": "clearBotSessionStorageEventListener \"before each\" hook in \"clearBotSessionStorageEventListener\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "sandbox = _sinon.default.sandbox.create();",
              "err": {},
              "uuid": "b65fc0b6-6feb-459b-8386-9005070b1303",
              "parentUUID": "32910df3-a99a-4e45-a626-edfd809b3170",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after each\" hook in \"clearBotSessionStorageEventListener\"",
              "fullTitle": "clearBotSessionStorageEventListener \"after each\" hook in \"clearBotSessionStorageEventListener\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "sandbox.restore();",
              "err": {},
              "uuid": "0e967e0e-490b-4be8-bd71-f5bee844ef87",
              "parentUUID": "32910df3-a99a-4e45-a626-edfd809b3170",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "should call clearBotSessionStorage when the before unload event is triggered",
              "fullTitle": "clearBotSessionStorageEventListener should call clearBotSessionStorage when the before unload event is triggered",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var clearBotSessionStorageSpy = sandbox.spy(SessionStorageModule, 'clearBotSessionStorage');\n(0, _clearBotSessionStorageEventListener.default)(false);\nwindow.dispatchEvent(new Event('beforeunload'));\n(0, _chai.expect)(clearBotSessionStorageSpy.calledOnce).to.be.true;\n(0, _chai.expect)(clearBotSessionStorageSpy.calledWith(false, false)).to.be.true;",
              "err": {},
              "uuid": "960a7d2d-c83d-4d1a-8e82-6181f9e4a1aa",
              "parentUUID": "32910df3-a99a-4e45-a626-edfd809b3170",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "960a7d2d-c83d-4d1a-8e82-6181f9e4a1aa"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "33287320-d7f4-4c0c-bf6b-974373cfb70c",
          "title": "signOutEventListener",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/virtual-agent/tests/event-listeners/signOutEventListener.unit.spec.js",
          "file": "/src/applications/virtual-agent/tests/event-listeners/signOutEventListener.unit.spec.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"signOutEventListener\"",
              "fullTitle": "signOutEventListener \"before each\" hook in \"signOutEventListener\"",
              "timedOut": false,
              "duration": 1,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "sandbox = _sinon.default.sandbox.create();",
              "err": {},
              "uuid": "a1866cec-9948-4b7e-a92e-d450b281cb6c",
              "parentUUID": "33287320-d7f4-4c0c-bf6b-974373cfb70c",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after each\" hook in \"signOutEventListener\"",
              "fullTitle": "signOutEventListener \"after each\" hook in \"signOutEventListener\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "sandbox.restore();",
              "err": {},
              "uuid": "869f90bb-df42-448d-aac8-d9f22859bbe8",
              "parentUUID": "33287320-d7f4-4c0c-bf6b-974373cfb70c",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [],
          "suites": [
            {
              "uuid": "96786c09-7212-44e9-ae53-aee8a9f6c5e5",
              "title": "setupsignOutEventListener",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/virtual-agent/tests/event-listeners/signOutEventListener.unit.spec.js",
              "file": "/src/applications/virtual-agent/tests/event-listeners/signOutEventListener.unit.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should add click event listener to sign out link",
                  "fullTitle": "signOutEventListener setupsignOutEventListener should add click event listener to sign out link",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var link = document.createElement('a');\nlink.textContent = 'Sign Out';\nsandbox.stub(document, 'querySelectorAll').returns([link]);\nvar addEventListenerStub = sandbox.stub(link, 'addEventListener');\n(0, _signOutEventListener.default)();\n(0, _chai.expect)(addEventListenerStub.calledOnce).to.be.true;\n(0, _chai.expect)(addEventListenerStub.firstCall.args[0]).to.equal('click');\n(0, _chai.expect)(addEventListenerStub.firstCall.args[1]).to.be.a('function');",
                  "err": {},
                  "uuid": "a7bcf119-9a1c-4f36-aac0-dece83d8b4a1",
                  "parentUUID": "96786c09-7212-44e9-ae53-aee8a9f6c5e5",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should call clearBotSessionStorage when sign out link is clicked",
                  "fullTitle": "signOutEventListener setupsignOutEventListener should call clearBotSessionStorage when sign out link is clicked",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var link = document.createElement('a');\nlink.textContent = 'Sign Out';\nsandbox.stub(document, 'querySelectorAll').returns([link]);\nvar addEventListenerStub = sandbox.stub(link, 'addEventListener');\nvar clearBotSessionStorageStub = sandbox.stub(SessionStorageModule, SessionStorageModule.clearBotSessionStorage.name);\n(0, _signOutEventListener.default)();\nvar clickHandler = addEventListenerStub.firstCall.args[1];\nclickHandler();\n(0, _chai.expect)(clearBotSessionStorageStub.calledOnce).to.be.true;\n(0, _chai.expect)(clearBotSessionStorageStub.firstCall.args[0]).to.be.true;",
                  "err": {},
                  "uuid": "1bcd2f2e-5ec3-480f-a028-a20ea2696203",
                  "parentUUID": "96786c09-7212-44e9-ae53-aee8a9f6c5e5",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should not call clearBotSessionStorage when other link is clicked",
                  "fullTitle": "signOutEventListener setupsignOutEventListener should not call clearBotSessionStorage when other link is clicked",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var link = document.createElement('a');\nlink.textContent = 'Other';\nsandbox.stub(document, 'querySelectorAll').returns([link]);\nvar addEventListenerStub = sandbox.stub(link, 'addEventListener');\n(0, _signOutEventListener.default)();\n(0, _chai.expect)(addEventListenerStub.notCalled).to.be.true;",
                  "err": {},
                  "uuid": "bdd5980c-648f-49e3-bf15-7a1bbe043c00",
                  "parentUUID": "96786c09-7212-44e9-ae53-aee8a9f6c5e5",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should capture exception when sign out link is not found",
                  "fullTitle": "signOutEventListener setupsignOutEventListener should capture exception when sign out link is not found",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var captureExceptionStub = sandbox.stub(Sentry, 'captureException');\nvar logErrorToDatadogStub = sandbox.stub(logging, 'logErrorToDatadog');\nsandbox.stub(document, document.querySelectorAll.name).returns([]);\n(0, _signOutEventListener.default)(true);\n(0, _chai.expect)(captureExceptionStub.calledOnce).to.be.true;\n(0, _chai.expect)(captureExceptionStub.firstCall.args[0]).to.be.an.instanceOf(TypeError);\n(0, _chai.expect)(captureExceptionStub.firstCall.args[0].message).to.equal('Virtual Agent chatbot could not find sign out link in menu');\n(0, _chai.expect)(logErrorToDatadogStub.calledOnce).to.be.true;\n(0, _chai.expect)(logErrorToDatadogStub.firstCall.args[0]).to.be.true;\n(0, _chai.expect)(logErrorToDatadogStub.firstCall.args[1]).to.equal('Virtual Agent chatbot could not find sign out link in menu');\n(0, _chai.expect)(logErrorToDatadogStub.firstCall.args[2]).to.be.an.instanceOf(TypeError);",
                  "err": {},
                  "uuid": "1da0c936-6e08-4ecf-a4aa-2518b7131ef5",
                  "parentUUID": "96786c09-7212-44e9-ae53-aee8a9f6c5e5",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "a7bcf119-9a1c-4f36-aac0-dece83d8b4a1",
                "1bcd2f2e-5ec3-480f-a028-a20ea2696203",
                "bdd5980c-648f-49e3-bf15-7a1bbe043c00",
                "1da0c936-6e08-4ecf-a4aa-2518b7131ef5"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 5,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "b6dc47a8-4462-4ba7-88f6-1a4d005ce813",
          "title": "webAuthActivityEventListener",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/virtual-agent/tests/event-listeners/webAuthActivityEventListener.unit.spec.js",
          "file": "/src/applications/virtual-agent/tests/event-listeners/webAuthActivityEventListener.unit.spec.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"webAuthActivityEventListener\"",
              "fullTitle": "webAuthActivityEventListener \"before each\" hook in \"webAuthActivityEventListener\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "sandbox = _sinon.default.sandbox.create();\nclock = _sinon.default.useFakeTimers({\n  toFake: ['setTimeout', 'clearTimeout']\n});",
              "err": {},
              "uuid": "cab07352-6930-4078-8d07-3f39b3edf88b",
              "parentUUID": "b6dc47a8-4462-4ba7-88f6-1a4d005ce813",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after each\" hook in \"webAuthActivityEventListener\"",
              "fullTitle": "webAuthActivityEventListener \"after each\" hook in \"webAuthActivityEventListener\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "sandbox.restore();\nclock.restore();",
              "err": {},
              "uuid": "087507ce-96cd-405e-aed7-69e0ed40f6e9",
              "parentUUID": "b6dc47a8-4462-4ba7-88f6-1a4d005ce813",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "should call setIsLoggingIn after 2 seconds",
              "fullTitle": "webAuthActivityEventListener should call setIsLoggingIn after 2 seconds",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var setIsAuthTopic = sandbox.stub();\nvar addEventListenerStub = sandbox.stub(window, 'addEventListener');\n(0, _webAuthActivityEventListener.default)(true, setIsAuthTopic);\nclock.tick(2000);\n(0, _chai.expect)(addEventListenerStub.calledOnce).to.be.true;\n(0, _chai.expect)(addEventListenerStub.calledWithExactly('webchat-auth-activity', _sinon.default.match.func)).to.be.true;",
              "err": {},
              "uuid": "99a8e89f-0c1a-4c9e-909a-26dc81850392",
              "parentUUID": "b6dc47a8-4462-4ba7-88f6-1a4d005ce813",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should call setLoggedInFlow and setIsAuthTopic if isLoggedIn is false",
              "fullTitle": "webAuthActivityEventListener should call setLoggedInFlow and setIsAuthTopic if isLoggedIn is false",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
              "err": {},
              "uuid": "6df508b7-1771-4658-98ca-5246cc3722fd",
              "parentUUID": "b6dc47a8-4462-4ba7-88f6-1a4d005ce813",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should call setLoggedInFlow and setIsAuthTopic if isLoggedIn is true",
              "fullTitle": "webAuthActivityEventListener should call setLoggedInFlow and setIsAuthTopic if isLoggedIn is true",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
              "err": {},
              "uuid": "fd3bb305-e443-4707-8542-2daa16797300",
              "parentUUID": "b6dc47a8-4462-4ba7-88f6-1a4d005ce813",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "99a8e89f-0c1a-4c9e-909a-26dc81850392",
            "6df508b7-1771-4658-98ca-5246cc3722fd",
            "fd3bb305-e443-4707-8542-2daa16797300"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 4,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "70b15699-90d9-4975-b7f8-746a8a418f28",
          "title": "useBotOutgoingActivityEventListener",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/virtual-agent/tests/hooks/useBotOutGoingActivityEventListener.unit.spec.js",
          "file": "/src/applications/virtual-agent/tests/hooks/useBotOutGoingActivityEventListener.unit.spec.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"useBotOutgoingActivityEventListener\"",
              "fullTitle": "useBotOutgoingActivityEventListener \"before each\" hook in \"useBotOutgoingActivityEventListener\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "sandbox = _sinon.default.sandbox.create();\nclock = _sinon.default.useFakeTimers({\n  now: now,\n  toFake: ['Date']\n});",
              "err": {},
              "uuid": "99dcbaaf-673e-4a69-9b58-30699f03071b",
              "parentUUID": "70b15699-90d9-4975-b7f8-746a8a418f28",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after each\" hook in \"useBotOutgoingActivityEventListener\"",
              "fullTitle": "useBotOutgoingActivityEventListener \"after each\" hook in \"useBotOutgoingActivityEventListener\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "sandbox.restore();\nclock.restore();\nglobal.window = originalWindow;",
              "err": {},
              "uuid": "41f8b756-7255-4038-96eb-eaf75b655276",
              "parentUUID": "70b15699-90d9-4975-b7f8-746a8a418f28",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "should call addEventListener",
              "fullTitle": "useBotOutgoingActivityEventListener should call addEventListener",
              "timedOut": false,
              "duration": 4,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var addEventListenerStub = sandbox.stub(window, 'addEventListener');\n(0, _reactHooks.renderHook)(function () {\n  return (0, _useBotOutgoingActivityEventListener.default)(now);\n});\n(0, _chai.expect)(addEventListenerStub.calledWithExactly('bot-outgoing-activity', _sinon.default.match.func)).to.be.true;",
              "err": {},
              "uuid": "73499ea4-a3fc-4f5a-9456-c85f4893c508",
              "parentUUID": "70b15699-90d9-4975-b7f8-746a8a418f28",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should reload when last message was more than 30 minutes ago",
              "fullTitle": "useBotOutgoingActivityEventListener should reload when last message was more than 30 minutes ago",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
              "err": {},
              "uuid": "adcab08d-c509-41b1-a8d2-7aac851a339d",
              "parentUUID": "70b15699-90d9-4975-b7f8-746a8a418f28",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should reload when last message was less than 30 minutes ago and chatbotLoadTime was more than 30 minute ago",
              "fullTitle": "useBotOutgoingActivityEventListener should reload when last message was less than 30 minutes ago and chatbotLoadTime was more than 30 minute ago",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
              "err": {},
              "uuid": "c7bddc46-eac8-403b-82d2-5feebd311b83",
              "parentUUID": "70b15699-90d9-4975-b7f8-746a8a418f28",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should call setLastMessageTime when last message was less than 30 minutes ago",
              "fullTitle": "useBotOutgoingActivityEventListener should call setLastMessageTime when last message was less than 30 minutes ago",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
              "err": {},
              "uuid": "e11fa2ed-a9f5-4d93-9f6a-078e9f3ea090",
              "parentUUID": "70b15699-90d9-4975-b7f8-746a8a418f28",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should call setLastMessageTime when last message was less than 30 minutes ago",
              "fullTitle": "useBotOutgoingActivityEventListener should call setLastMessageTime when last message was less than 30 minutes ago",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
              "err": {},
              "uuid": "e1b7d86b-c153-4984-91a3-a8b12fd2de7d",
              "parentUUID": "70b15699-90d9-4975-b7f8-746a8a418f28",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "73499ea4-a3fc-4f5a-9456-c85f4893c508",
            "adcab08d-c509-41b1-a8d2-7aac851a339d",
            "c7bddc46-eac8-403b-82d2-5feebd311b83",
            "e11fa2ed-a9f5-4d93-9f6a-078e9f3ea090",
            "e1b7d86b-c153-4984-91a3-a8b12fd2de7d"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 9,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "d233d9ee-a6cf-4fc3-b166-3b943678b6de",
          "title": "useBotPonyfill",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/virtual-agent/tests/hooks/useBotPonyfill.unit.spec.js",
          "file": "/src/applications/virtual-agent/tests/hooks/useBotPonyfill.unit.spec.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"useBotPonyfill\"",
              "fullTitle": "useBotPonyfill \"before each\" hook in \"useBotPonyfill\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "sandbox = _sinon.default.sandbox.create();",
              "err": {},
              "uuid": "07d9eae5-5733-44ca-b664-b91cf1af15b6",
              "parentUUID": "d233d9ee-a6cf-4fc3-b166-3b943678b6de",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after each\" hook in \"useBotPonyfill\"",
              "fullTitle": "useBotPonyfill \"after each\" hook in \"useBotPonyfill\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "sandbox.restore();\nglobal.window = originalWindow;",
              "err": {},
              "uuid": "76f0fa17-97fa-4585-afbc-c2302dc99f09",
              "parentUUID": "d233d9ee-a6cf-4fc3-b166-3b943678b6de",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [],
          "suites": [
            {
              "uuid": "c96bb7dc-1228-4d04-b10f-18daf29533df",
              "title": "createPonyFill",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/virtual-agent/tests/hooks/useBotPonyfill.unit.spec.js",
              "file": "/src/applications/virtual-agent/tests/hooks/useBotPonyfill.unit.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should create a ponyfill factory with the correct credentials on locahost",
                  "fullTitle": "useBotPonyfill createPonyFill should create a ponyfill factory with the correct credentials on locahost",
                  "timedOut": false,
                  "duration": 5,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
                  "err": {},
                  "uuid": "a7d7c582-7793-4257-8b5e-ffa091b44167",
                  "parentUUID": "c96bb7dc-1228-4d04-b10f-18daf29533df",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should create a ponyfill factory with the correct credentials on dev",
                  "fullTitle": "useBotPonyfill createPonyFill should create a ponyfill factory with the correct credentials on dev",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
                  "err": {},
                  "uuid": "8627b408-ae5a-4029-a2da-fa0900ccc894",
                  "parentUUID": "c96bb7dc-1228-4d04-b10f-18daf29533df",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should create a ponyfill factory with the correct credentials on non-dev/non-staging",
                  "fullTitle": "useBotPonyfill createPonyFill should create a ponyfill factory with the correct credentials on non-dev/non-staging",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
                  "err": {},
                  "uuid": "33631f63-2c71-44ec-a59c-6b774f5736bd",
                  "parentUUID": "c96bb7dc-1228-4d04-b10f-18daf29533df",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "a7d7c582-7793-4257-8b5e-ffa091b44167",
                "8627b408-ae5a-4029-a2da-fa0900ccc894",
                "33631f63-2c71-44ec-a59c-6b774f5736bd"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 7,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "df363fc2-9ab5-4e48-832a-78823649b81b",
          "title": "useChosenBot",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/virtual-agent/tests/hooks/useChosenBot.unit.spec.js",
          "file": "/src/applications/virtual-agent/tests/hooks/useChosenBot.unit.spec.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"useChosenBot\"",
              "fullTitle": "useChosenBot \"before each\" hook in \"useChosenBot\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "sandbox = _sinon.default.sandbox.create();",
              "err": {},
              "uuid": "ee6a8b48-a00a-4e8b-b619-f942201f14ec",
              "parentUUID": "df363fc2-9ab5-4e48-832a-78823649b81b",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after each\" hook in \"useChosenBot\"",
              "fullTitle": "useChosenBot \"after each\" hook in \"useChosenBot\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "sandbox.restore();",
              "err": {},
              "uuid": "0e35a233-efb5-4895-b003-18cb643c1b98",
              "parentUUID": "df363fc2-9ab5-4e48-832a-78823649b81b",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "should set loading to false if virtualAgentShowFloatingChatbot is not null",
              "fullTitle": "useChosenBot should set loading to false if virtualAgentShowFloatingChatbot is not null",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var setIsLoading = sandbox.stub();\nvar setChosenBot = sandbox.stub();\nvar virtualAgentShowFloatingChatbot = true;\n(0, _reactHooks.renderHook)(function () {\n  return (0, _useChosenBot.default)(virtualAgentShowFloatingChatbot, setIsLoading, setChosenBot);\n});\n(0, _chai.expect)(setIsLoading.calledOnce).to.be.true;\n(0, _chai.expect)(setIsLoading.calledWithExactly(false)).to.be.true;",
              "err": {},
              "uuid": "c532e875-82e3-4f91-9dda-3f28806ee7f3",
              "parentUUID": "df363fc2-9ab5-4e48-832a-78823649b81b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should not set loading to false if virtualAgentShowFloatingChatbot is null",
              "fullTitle": "useChosenBot should not set loading to false if virtualAgentShowFloatingChatbot is null",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var setIsLoading = sandbox.stub();\nvar setChosenBot = sandbox.stub();\nvar virtualAgentShowFloatingChatbot = null;\n(0, _reactHooks.renderHook)(function () {\n  return (0, _useChosenBot.default)(virtualAgentShowFloatingChatbot, setIsLoading, setChosenBot);\n});\n(0, _chai.expect)(setIsLoading.notCalled).to.be.true;",
              "err": {},
              "uuid": "7bb143a3-5d2a-4045-90f3-fb851a2e92c4",
              "parentUUID": "df363fc2-9ab5-4e48-832a-78823649b81b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should set chosenBot to \"default\" when virtualAgentShowFloatingChatbot is true",
              "fullTitle": "useChosenBot should set chosenBot to \"default\" when virtualAgentShowFloatingChatbot is true",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var setIsLoading = sandbox.stub();\nvar setChosenBot = sandbox.stub();\nvar virtualAgentShowFloatingChatbot = true;\n(0, _reactHooks.renderHook)(function () {\n  return (0, _useChosenBot.default)(virtualAgentShowFloatingChatbot, setIsLoading, setChosenBot);\n});\n(0, _chai.expect)(setChosenBot.calledOnce).to.be.true;\n(0, _chai.expect)(setChosenBot.calledWithExactly('default')).to.be.true;",
              "err": {},
              "uuid": "bd75b2f9-4830-4c10-a102-13781cd7d265",
              "parentUUID": "df363fc2-9ab5-4e48-832a-78823649b81b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should set chosenBot to \"sticky\" when virtualAgentShowFloatingChatbot is false",
              "fullTitle": "useChosenBot should set chosenBot to \"sticky\" when virtualAgentShowFloatingChatbot is false",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var setIsLoading = sandbox.stub();\nvar setChosenBot = sandbox.stub();\nvar virtualAgentShowFloatingChatbot = false;\n(0, _reactHooks.renderHook)(function () {\n  return (0, _useChosenBot.default)(virtualAgentShowFloatingChatbot, setIsLoading, setChosenBot);\n});\n(0, _chai.expect)(setChosenBot.calledOnce).to.be.true;\n(0, _chai.expect)(setChosenBot.calledWithExactly('sticky')).to.be.true;",
              "err": {},
              "uuid": "0103fce1-f926-470d-9119-757f64072216",
              "parentUUID": "df363fc2-9ab5-4e48-832a-78823649b81b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "c532e875-82e3-4f91-9dda-3f28806ee7f3",
            "7bb143a3-5d2a-4045-90f3-fb851a2e92c4",
            "bd75b2f9-4830-4c10-a102-13781cd7d265",
            "0103fce1-f926-470d-9119-757f64072216"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "99621c5a-1de6-4010-949c-80d617e104af",
          "title": "directline",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/virtual-agent/tests/hooks/useDirectline.unit.spec.js",
          "file": "/src/applications/virtual-agent/tests/hooks/useDirectline.unit.spec.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"directline\"",
              "fullTitle": "directline \"before each\" hook in \"directline\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "sandbox = _sinon.default.sandbox.create();",
              "err": {},
              "uuid": "5951101b-0f45-4153-b717-be4549893b83",
              "parentUUID": "99621c5a-1de6-4010-949c-80d617e104af",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after each\" hook in \"directline\"",
              "fullTitle": "directline \"after each\" hook in \"directline\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "sandbox.restore();",
              "err": {},
              "uuid": "5bebb35d-3ee7-4574-b2b5-aa668a00cc98",
              "parentUUID": "99621c5a-1de6-4010-949c-80d617e104af",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [],
          "suites": [
            {
              "uuid": "19810bd2-0563-4afd-9249-36668d680ecc",
              "title": "useDirectLine",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/virtual-agent/tests/hooks/useDirectline.unit.spec.js",
              "file": "/src/applications/virtual-agent/tests/hooks/useDirectline.unit.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should call local directline when USE_LOCAL_DIRECTLINE is true",
                  "fullTitle": "directline useDirectLine should call local directline when USE_LOCAL_DIRECTLINE is true",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var createDirectLineFn = sandbox.spy();\nstubUseLocalDirectline(true);\n(0, _reactHooks.renderHook)(function () {\n  return (0, _useDirectline.default)(createDirectLineFn, token, false);\n});\n(0, _chai.expect)(createDirectLineFn.calledOnce).to.be.true;\n(0, _chai.expect)(createDirectLineFn.args[0][0].domain).to.equal(localDirectLine);",
                  "err": {},
                  "uuid": "1f72d582-d8d2-4333-a80e-0cbb45c5626f",
                  "parentUUID": "19810bd2-0563-4afd-9249-36668d680ecc",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should call public directline when USE_LOCAL_DIRECTLINE is false",
                  "fullTitle": "directline useDirectLine should call public directline when USE_LOCAL_DIRECTLINE is false",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var createDirectLineFn = sandbox.spy();\nstubUseLocalDirectline(false);\n(0, _reactHooks.renderHook)(function () {\n  return (0, _useDirectline.default)(createDirectLineFn, token, false);\n});\n(0, _chai.expect)(createDirectLineFn.calledOnce).to.be.true;\n(0, _chai.expect)(createDirectLineFn.args[0][0].domain).to.equal(publicDirectLine);",
                  "err": {},
                  "uuid": "43be4c9c-be1f-4242-9e7d-c6febdaaa6f2",
                  "parentUUID": "19810bd2-0563-4afd-9249-36668d680ecc",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should call public directline when USE_LOCAL_DIRECTLINE is not set",
                  "fullTitle": "directline useDirectLine should call public directline when USE_LOCAL_DIRECTLINE is not set",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var createDirectLineFn = sandbox.spy();\nstubUseLocalDirectline('');\n(0, _reactHooks.renderHook)(function () {\n  return (0, _useDirectline.default)(createDirectLineFn, token, false);\n});\n(0, _chai.expect)(createDirectLineFn.calledOnce).to.be.true;\n(0, _chai.expect)(createDirectLineFn.args[0][0].domain).to.equal(publicDirectLine);",
                  "err": {},
                  "uuid": "68e0ba7f-91ee-4c9c-9c3d-d9a285eb0932",
                  "parentUUID": "19810bd2-0563-4afd-9249-36668d680ecc",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should use default values when logged out",
                  "fullTitle": "directline useDirectLine should use default values when logged out",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var createDirectLineFn = sandbox.spy();\nsetSessionStorage('false');\n(0, _reactHooks.renderHook)(function () {\n  return (0, _useDirectline.default)(createDirectLineFn, token, false);\n});\n(0, _chai.expect)(createDirectLineFn.calledOnce).to.be.true;\n(0, _chai.expect)(createDirectLineFn.calledWithExactly({\n  token: token,\n  domain: publicDirectLine,\n  conversationId: '',\n  watermark: ''\n})).to.be.true;",
                  "err": {},
                  "uuid": "579c7f4e-1c53-4fb6-b589-9ae98ed6702e",
                  "parentUUID": "19810bd2-0563-4afd-9249-36668d680ecc",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should use session storage values when logged in",
                  "fullTitle": "directline useDirectLine should use session storage values when logged in",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var createDirectLineFn = sandbox.spy();\nsetSessionStorage('true');\n(0, _reactHooks.renderHook)(function () {\n  return (0, _useDirectline.default)(createDirectLineFn, token, true);\n});\n(0, _chai.expect)(createDirectLineFn.calledOnce).to.be.true;\n(0, _chai.expect)(createDirectLineFn.calledWithExactly({\n  token: sessionToken,\n  domain: publicDirectLine,\n  conversationId: sessionConversationIdKey,\n  watermark: ''\n})).to.be.true;",
                  "err": {},
                  "uuid": "a4955ad3-6fb8-4875-b8f9-9ad021bf9d2e",
                  "parentUUID": "19810bd2-0563-4afd-9249-36668d680ecc",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "1f72d582-d8d2-4333-a80e-0cbb45c5626f",
                "43be4c9c-be1f-4242-9e7d-c6febdaaa6f2",
                "68e0ba7f-91ee-4c9c-9c3d-d9a285eb0932",
                "579c7f4e-1c53-4fb6-b589-9ae98ed6702e",
                "a4955ad3-6fb8-4875-b8f9-9ad021bf9d2e"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 6,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "3f703cf9-c06e-440e-bdfe-55d3c899ed07",
          "title": "useLoadWebChat",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/virtual-agent/tests/hooks/useLoadWebChat.unit.spec.js",
          "file": "/src/applications/virtual-agent/tests/hooks/useLoadWebChat.unit.spec.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"useLoadWebChat\"",
              "fullTitle": "useLoadWebChat \"before each\" hook in \"useLoadWebChat\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "sandbox = _sinon.default.sandbox.create();",
              "err": {},
              "uuid": "31719f13-9e66-4fc6-9c46-cc5e0ba119c3",
              "parentUUID": "3f703cf9-c06e-440e-bdfe-55d3c899ed07",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after each\" hook in \"useLoadWebChat\"",
              "fullTitle": "useLoadWebChat \"after each\" hook in \"useLoadWebChat\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "sandbox.restore();",
              "err": {},
              "uuid": "3269b045-4187-4dcc-b3ff-7a8ec715c527",
              "parentUUID": "3f703cf9-c06e-440e-bdfe-55d3c899ed07",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [],
          "suites": [
            {
              "uuid": "0f8b0cc5-a4b1-4cc8-8c4a-44845cd6f3e3",
              "title": "useLoadWebChat",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/virtual-agent/tests/hooks/useLoadWebChat.unit.spec.js",
              "file": "/src/applications/virtual-agent/tests/hooks/useLoadWebChat.unit.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should load webchat v4.17.0",
                  "fullTitle": "useLoadWebChat useLoadWebChat should load webchat v4.17.0",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _reactHooks.renderHook)(function () {\n  return (0, _useLoadWebChat.default)();\n});\nvar script = document.querySelector('script');\n(0, _chai.expect)(script.src).to.equal('https://cdn.botframework.com/botframework-webchat/4.17.0/webchat.js');",
                  "err": {},
                  "uuid": "f191a7c5-12f8-4c90-b16e-6cab0924ad57",
                  "parentUUID": "0f8b0cc5-a4b1-4cc8-8c4a-44845cd6f3e3",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "f191a7c5-12f8-4c90-b16e-6cab0924ad57"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "46472562-cc51-42a8-9f56-f4969f2ecedc",
          "title": "rsSkillEventListener",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/virtual-agent/tests/hooks/useRxSkillEventListener.unit.spec.js",
          "file": "/src/applications/virtual-agent/tests/hooks/useRxSkillEventListener.unit.spec.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"rsSkillEventListener\"",
              "fullTitle": "rsSkillEventListener \"before each\" hook in \"rsSkillEventListener\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "sandbox = _sinon.default.sandbox.create();",
              "err": {},
              "uuid": "5eb3f04c-c75f-4830-922b-1d435bd44fe8",
              "parentUUID": "46472562-cc51-42a8-9f56-f4969f2ecedc",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after each\" hook in \"rsSkillEventListener\"",
              "fullTitle": "rsSkillEventListener \"after each\" hook in \"rsSkillEventListener\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "sandbox.restore();",
              "err": {},
              "uuid": "e97ea578-6e45-4d34-a965-429079eaab8e",
              "parentUUID": "46472562-cc51-42a8-9f56-f4969f2ecedc",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [],
          "suites": [
            {
              "uuid": "f7bff3f0-1e69-41dd-bcfe-e5af7df1e606",
              "title": "useRxSkillEventListener",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/virtual-agent/tests/hooks/useRxSkillEventListener.unit.spec.js",
              "file": "/src/applications/virtual-agent/tests/hooks/useRxSkillEventListener.unit.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should setup event listener",
                  "fullTitle": "rsSkillEventListener useRxSkillEventListener should setup event listener",
                  "timedOut": false,
                  "duration": 4,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
                  "err": {},
                  "uuid": "48bae003-851e-468a-bb9d-d5e040f447dc",
                  "parentUUID": "f7bff3f0-1e69-41dd-bcfe-e5af7df1e606",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should call passed in function when event triggers",
                  "fullTitle": "rsSkillEventListener useRxSkillEventListener should call passed in function when event triggers",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
                  "err": {},
                  "uuid": "15edee99-4d91-458e-8154-aab873445fb1",
                  "parentUUID": "f7bff3f0-1e69-41dd-bcfe-e5af7df1e606",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "48bae003-851e-468a-bb9d-d5e040f447dc",
                "15edee99-4d91-458e-8154-aab873445fb1"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 5,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "cd6be225-5c13-43e8-898a-e0e4a2bc1a31",
          "title": "useSetSendBoxMessage",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/virtual-agent/tests/hooks/useSetSendBoxMessage.unit.spec.js",
          "file": "/src/applications/virtual-agent/tests/hooks/useSetSendBoxMessage.unit.spec.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"useSetSendBoxMessage\"",
              "fullTitle": "useSetSendBoxMessage \"before each\" hook in \"useSetSendBoxMessage\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "sandbox = _sinon.default.sandbox.create();",
              "err": {},
              "uuid": "88bacf01-4424-4881-82bc-dc5ff0575685",
              "parentUUID": "cd6be225-5c13-43e8-898a-e0e4a2bc1a31",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after each\" hook in \"useSetSendBoxMessage\"",
              "fullTitle": "useSetSendBoxMessage \"after each\" hook in \"useSetSendBoxMessage\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "sandbox.restore();",
              "err": {},
              "uuid": "2e73fd3f-eebe-4866-8f5b-d73bc1a07001",
              "parentUUID": "cd6be225-5c13-43e8-898a-e0e4a2bc1a31",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [],
          "suites": [
            {
              "uuid": "370f82d5-a3dd-4509-b67a-24eb19675a2f",
              "title": "useSetSendBoxMessage",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/virtual-agent/tests/hooks/useSetSendBoxMessage.unit.spec.js",
              "file": "/src/applications/virtual-agent/tests/hooks/useSetSendBoxMessage.unit.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should set the send box message for microphone",
                  "fullTitle": "useSetSendBoxMessage useSetSendBoxMessage should set the send box message for microphone",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var setAttributeSpy = sandbox.spy();\nsandbox.stub(document, 'querySelector').returns({\n  setAttribute: setAttributeSpy\n});\n(0, _reactHooks.renderHook)(function () {\n  return (0, _useSetSendBoxMessage.default)('true');\n});\n(0, _chai.expect)(setAttributeSpy.calledTwice).to.be.true;\n(0, _chai.expect)(setAttributeSpy.calledWith('aria-label', 'Type or enable the microphone to speak')).to.be.true;\n(0, _chai.expect)(setAttributeSpy.calledWith('placeholder', 'Type or enable the microphone to speak')).to.be.true;",
                  "err": {},
                  "uuid": "accb031d-6add-422e-94f8-046c0bff794f",
                  "parentUUID": "370f82d5-a3dd-4509-b67a-24eb19675a2f",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should set the send box message for non-microphone",
                  "fullTitle": "useSetSendBoxMessage useSetSendBoxMessage should set the send box message for non-microphone",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var setAttributeSpy = sandbox.spy();\nsandbox.stub(document, 'querySelector').returns({\n  setAttribute: setAttributeSpy\n});\n(0, _reactHooks.renderHook)(function () {\n  return (0, _useSetSendBoxMessage.default)('false');\n});\n(0, _chai.expect)(setAttributeSpy.calledTwice).to.be.true;\n(0, _chai.expect)(setAttributeSpy.calledWith('aria-label', 'Type your message')).to.be.true;\n(0, _chai.expect)(setAttributeSpy.calledWith('placeholder', 'Type your message')).to.be.true;",
                  "err": {},
                  "uuid": "43380ffb-bfac-4604-a39f-cfd6f4411316",
                  "parentUUID": "370f82d5-a3dd-4509-b67a-24eb19675a2f",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "accb031d-6add-422e-94f8-046c0bff794f",
                "43380ffb-bfac-4604-a39f-cfd6f4411316"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "6b0980d7-1cb4-45d3-a011-4f0783f07080",
          "title": "useVirtualAgentToken",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/virtual-agent/tests/hooks/useVirtualAgentToken.unit.spec.js",
          "file": "/src/applications/virtual-agent/tests/hooks/useVirtualAgentToken.unit.spec.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"useVirtualAgentToken\"",
              "fullTitle": "useVirtualAgentToken \"before each\" hook in \"useVirtualAgentToken\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "sandbox = _sinon.default.sandbox.create();",
              "err": {},
              "uuid": "4a3a322a-c51f-4758-b156-622b0f5505f3",
              "parentUUID": "6b0980d7-1cb4-45d3-a011-4f0783f07080",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after each\" hook in \"useVirtualAgentToken\"",
              "fullTitle": "useVirtualAgentToken \"after each\" hook in \"useVirtualAgentToken\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "sandbox.restore();",
              "err": {},
              "uuid": "4f943b91-271d-4d51-8c28-35d19fbc8397",
              "parentUUID": "6b0980d7-1cb4-45d3-a011-4f0783f07080",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [],
          "suites": [
            {
              "uuid": "7ed4e650-f96e-4f25-af4d-947253440067",
              "title": "callVirtualAgentTokenApi",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/virtual-agent/tests/hooks/useVirtualAgentToken.unit.spec.js",
              "file": "/src/applications/virtual-agent/tests/hooks/useVirtualAgentToken.unit.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return a function that uses MSFT PVA",
                  "fullTitle": "useVirtualAgentToken callVirtualAgentTokenApi should return a function that uses MSFT PVA",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var virtualAgentEnableMsftPvaTesting = true;\nvar virtualAgentEnableNluPvaTesting = false;\nvar apiSpy = sandbox.spy();\n(0, _useVirtualAgentToken.callVirtualAgentTokenApi)(virtualAgentEnableMsftPvaTesting, virtualAgentEnableNluPvaTesting, apiSpy)();\n(0, _chai.expect)(apiSpy.calledOnce).to.be.true;\n(0, _chai.expect)(apiSpy.args[0][0]).to.be.equal('/virtual_agent_token_msft');\n(0, _chai.expect)(apiSpy.args[0][1]).to.be.eql({\n  method: 'POST'\n});",
                  "err": {},
                  "uuid": "0279bad3-27ae-4701-a854-ff6a0a6b8f7b",
                  "parentUUID": "7ed4e650-f96e-4f25-af4d-947253440067",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return a function that uses standard PVA",
                  "fullTitle": "useVirtualAgentToken callVirtualAgentTokenApi should return a function that uses standard PVA",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var virtualAgentEnableMsftPvaTesting = false;\nvar virtualAgentEnableNluPvaTesting = false;\nvar apiSpy = sandbox.spy();\n(0, _useVirtualAgentToken.callVirtualAgentTokenApi)(virtualAgentEnableMsftPvaTesting, virtualAgentEnableNluPvaTesting, apiSpy)();\n(0, _chai.expect)(apiSpy.calledOnce).to.be.true;\n(0, _chai.expect)(apiSpy.args[0][0]).to.be.equal('/virtual_agent_token');\n(0, _chai.expect)(apiSpy.args[0][1]).to.be.eql({\n  method: 'POST'\n});",
                  "err": {},
                  "uuid": "644c568c-58cb-4397-8bde-a1fdc4dd1362",
                  "parentUUID": "7ed4e650-f96e-4f25-af4d-947253440067",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return a function that uses NLU PVA",
                  "fullTitle": "useVirtualAgentToken callVirtualAgentTokenApi should return a function that uses NLU PVA",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var virtualAgentEnableMsftPvaTesting = false;\nvar virtualAgentEnableNluPvaTesting = true;\nvar apiSpy = sandbox.spy();\n(0, _useVirtualAgentToken.callVirtualAgentTokenApi)(virtualAgentEnableMsftPvaTesting, virtualAgentEnableNluPvaTesting, apiSpy)();\n(0, _chai.expect)(apiSpy.calledOnce).to.be.true;\n(0, _chai.expect)(apiSpy.args[0][0]).to.be.equal('/virtual_agent_token_nlu');\n(0, _chai.expect)(apiSpy.args[0][1]).to.be.eql({\n  method: 'POST'\n});",
                  "err": {},
                  "uuid": "15ac70e7-1087-401a-8546-cdc18afb2517",
                  "parentUUID": "7ed4e650-f96e-4f25-af4d-947253440067",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "0279bad3-27ae-4701-a854-ff6a0a6b8f7b",
                "644c568c-58cb-4397-8bde-a1fdc4dd1362",
                "15ac70e7-1087-401a-8546-cdc18afb2517"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "62cdb037-aa5c-423c-b8ab-53bce686d516",
              "title": "useVirtualAgentToken",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/virtual-agent/tests/hooks/useVirtualAgentToken.unit.spec.js",
              "file": "/src/applications/virtual-agent/tests/hooks/useVirtualAgentToken.unit.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return error for loading status when csrf loading fails",
                  "fullTitle": "useVirtualAgentToken useVirtualAgentToken should return error for loading status when csrf loading fails",
                  "timedOut": false,
                  "duration": 6,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
                  "err": {},
                  "uuid": "dfc7f22a-f12e-4e98-9d2f-3918c5ab2108",
                  "parentUUID": "62cdb037-aa5c-423c-b8ab-53bce686d516",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return token, loadingStatus, and apiSession when csrf token loads",
                  "fullTitle": "useVirtualAgentToken useVirtualAgentToken should return token, loadingStatus, and apiSession when csrf token loads",
                  "timedOut": false,
                  "duration": 8,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
                  "err": {},
                  "uuid": "a3380400-593e-462b-ae51-e924c0e953e5",
                  "parentUUID": "62cdb037-aa5c-423c-b8ab-53bce686d516",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should call Sentry and Datadog when an exception is thrown and the Datadog feature flag is enabled",
                  "fullTitle": "useVirtualAgentToken useVirtualAgentToken should call Sentry and Datadog when an exception is thrown and the Datadog feature flag is enabled",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
                  "err": {},
                  "uuid": "e323f7d2-4305-4dab-9ac1-a33391414a9d",
                  "parentUUID": "62cdb037-aa5c-423c-b8ab-53bce686d516",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should call Sentry and not call Datadog when an exception is thrown and the Datadog feature flag is disabled",
                  "fullTitle": "useVirtualAgentToken useVirtualAgentToken should call Sentry and not call Datadog when an exception is thrown and the Datadog feature flag is disabled",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
                  "err": {},
                  "uuid": "fd463777-6f17-4d29-ad73-aa0de68d09e4",
                  "parentUUID": "62cdb037-aa5c-423c-b8ab-53bce686d516",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "dfc7f22a-f12e-4e98-9d2f-3918c5ab2108",
                "a3380400-593e-462b-ae51-e924c0e953e5",
                "e323f7d2-4305-4dab-9ac1-a33391414a9d",
                "fd463777-6f17-4d29-ad73-aa0de68d09e4"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 20,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "75c30c8c-0306-4eac-bec0-dad63792058e",
          "title": "useWaitForCsrfToken",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/virtual-agent/tests/hooks/useWaitForCsrfToken.unit.spec.js",
          "file": "/src/applications/virtual-agent/tests/hooks/useWaitForCsrfToken.unit.spec.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"useWaitForCsrfToken\"",
              "fullTitle": "useWaitForCsrfToken \"before each\" hook in \"useWaitForCsrfToken\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "sandbox = _sinon.default.sandbox.create();\nclock = sandbox.useFakeTimers({\n  toFake: ['setTimeout', 'clearTimeout']\n});",
              "err": {},
              "uuid": "0b684342-0ff3-48da-9fb6-255671e0cd4b",
              "parentUUID": "75c30c8c-0306-4eac-bec0-dad63792058e",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after each\" hook in \"useWaitForCsrfToken\"",
              "fullTitle": "useWaitForCsrfToken \"after each\" hook in \"useWaitForCsrfToken\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "sandbox.restore();\nclock.restore();",
              "err": {},
              "uuid": "efbb928d-91e1-4c8f-83b9-6bb8b0513e7c",
              "parentUUID": "75c30c8c-0306-4eac-bec0-dad63792058e",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "should set error and call sentry when csrf token loading times out and call Datadog if flag is enabled",
              "fullTitle": "useWaitForCsrfToken should set error and call sentry when csrf token loading times out and call Datadog if flag is enabled",
              "timedOut": false,
              "duration": 5,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
              "err": {},
              "uuid": "cc495b06-d65c-43ff-bc52-2eccdce165f0",
              "parentUUID": "75c30c8c-0306-4eac-bec0-dad63792058e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should not call sentry when csrf token loads in time",
              "fullTitle": "useWaitForCsrfToken should not call sentry when csrf token loads in time",
              "timedOut": false,
              "duration": 3,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
              "err": {},
              "uuid": "cc227cb4-c3eb-4554-a01d-3ea0128ecb79",
              "parentUUID": "75c30c8c-0306-4eac-bec0-dad63792058e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "cc495b06-d65c-43ff-bc52-2eccdce165f0",
            "cc227cb4-c3eb-4554-a01d-3ea0128ecb79"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 8,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "6a20fa7b-8e2a-4ad2-aa93-4ae972444637",
          "title": "useWebChat",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/virtual-agent/tests/hooks/useWebChat.unit.spec.js",
          "file": "/src/applications/virtual-agent/tests/hooks/useWebChat.unit.spec.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"useWebChat\"",
              "fullTitle": "useWebChat \"before each\" hook in \"useWebChat\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "sandbox = _sinon.default.sandbox.create();",
              "err": {},
              "uuid": "079e42b0-f103-4102-8eae-4bbe3e6866cf",
              "parentUUID": "6a20fa7b-8e2a-4ad2-aa93-4ae972444637",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after each\" hook in \"useWebChat\"",
              "fullTitle": "useWebChat \"after each\" hook in \"useWebChat\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "sandbox.restore();",
              "err": {},
              "uuid": "b6516617-4db2-481a-8c85-d33093ca793b",
              "parentUUID": "6a20fa7b-8e2a-4ad2-aa93-4ae972444637",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [],
          "suites": [
            {
              "uuid": "14a9e373-e7b5-47b6-a4e6-f5027ae716bb",
              "title": "useWebChat",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/virtual-agent/tests/hooks/useWebChat.unit.spec.js",
              "file": "/src/applications/virtual-agent/tests/hooks/useWebChat.unit.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return the correct token, webChatFramework, loadingStatus, apiSession",
                  "fullTitle": "useWebChat useWebChat should return the correct token, webChatFramework, loadingStatus, apiSession",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var webChatFramework = {\n  webChatFramework: 'framework',\n  loadingStatus: 'frameworkStatus'\n};\nsandbox.stub(UseWebChatFrameworkModule, 'default').returns(webChatFramework);\nvar token = {\n  token: 'token',\n  apiSession: 'apiSession'\n};\nsandbox.stub(UseVirtualAgentTokenModule, 'default').returns(token);\nsandbox.stub(CombingLoadingStatusModule, 'combineLoadingStatus').returns('combinedStatus');\nvar result = (0, _useWebChat.default)({\n  virtualAgentEnableParamErrorDetection: false\n}, 'paramStatus');\n(0, _chai.expect)(result).to.deep.equal(_objectSpread(_objectSpread({}, token), {}, {\n  webChatFramework: 'framework',\n  loadingStatus: 'combinedStatus'\n}));",
                  "err": {},
                  "uuid": "3fd205fb-ce68-4b0a-8e89-ea54390a77cd",
                  "parentUUID": "14a9e373-e7b5-47b6-a4e6-f5027ae716bb",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should call combineLoadingStatus once when virtualAgentEnableParamErrorDetection is false",
                  "fullTitle": "useWebChat useWebChat should call combineLoadingStatus once when virtualAgentEnableParamErrorDetection is false",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var webChatFramework = {\n  webChatFramework: 'framework',\n  loadingStatus: 'frameworkStatus'\n};\nsandbox.stub(UseWebChatFrameworkModule, 'default').returns(webChatFramework);\nvar token = {\n  token: 'token',\n  apiSession: 'apiSession'\n};\nsandbox.stub(UseVirtualAgentTokenModule, 'default').returns(token);\nvar combineLoadingStatusStub = sandbox.stub(CombingLoadingStatusModule, 'combineLoadingStatus').returns('combinedStatus');\n(0, _useWebChat.default)({\n  virtualAgentEnableParamErrorDetection: false\n}, 'paramStatus');\n(0, _chai.expect)(combineLoadingStatusStub.calledOnce).to.be.true;",
                  "err": {},
                  "uuid": "c6668a7f-9ea3-4dd2-99f8-29edcb4d2d8a",
                  "parentUUID": "14a9e373-e7b5-47b6-a4e6-f5027ae716bb",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should call combineLoadingStatus when virtualAgentEnableParamErrorDetection is true",
                  "fullTitle": "useWebChat useWebChat should call combineLoadingStatus when virtualAgentEnableParamErrorDetection is true",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var webChatFramework = {\n  webChatFramework: 'framework',\n  loadingStatus: 'frameworkStatus'\n};\nsandbox.stub(UseWebChatFrameworkModule, 'default').returns(webChatFramework);\nvar token = {\n  token: 'token',\n  apiSession: 'apiSession'\n};\nsandbox.stub(UseVirtualAgentTokenModule, 'default').returns(token);\nvar combineLoadingStatusStub = sandbox.stub(CombingLoadingStatusModule, 'combineLoadingStatus').returns('combinedStatus');\n(0, _useWebChat.default)({\n  virtualAgentEnableParamErrorDetection: true\n}, 'paramStatus');\n(0, _chai.expect)(combineLoadingStatusStub.calledTwice).to.be.true;",
                  "err": {},
                  "uuid": "f2528763-7aec-427a-b98e-00d0dd3dab1e",
                  "parentUUID": "14a9e373-e7b5-47b6-a4e6-f5027ae716bb",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "3fd205fb-ce68-4b0a-8e89-ea54390a77cd",
                "c6668a7f-9ea3-4dd2-99f8-29edcb4d2d8a",
                "f2528763-7aec-427a-b98e-00d0dd3dab1e"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 3,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "8dba6a8d-63a0-4200-b02e-b6cc82afe301",
          "title": "useWebChatFramework",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/virtual-agent/tests/hooks/useWebChatFramework.unit.spec.js",
          "file": "/src/applications/virtual-agent/tests/hooks/useWebChatFramework.unit.spec.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"useWebChatFramework\"",
              "fullTitle": "useWebChatFramework \"before each\" hook in \"useWebChatFramework\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "sandbox = _sinon.default.sandbox.create();\nclock = sandbox.useFakeTimers({\n  toFake: ['setInterval', 'clearInterval']\n});",
              "err": {},
              "uuid": "e4c1c3d5-6f0d-4e52-be87-362d60acc983",
              "parentUUID": "8dba6a8d-63a0-4200-b02e-b6cc82afe301",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after each\" hook in \"useWebChatFramework\"",
              "fullTitle": "useWebChatFramework \"after each\" hook in \"useWebChatFramework\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "sandbox.restore();\nclock.restore();\nglobal.window = originalWindow;",
              "err": {},
              "uuid": "d2013da2-53be-4da0-a876-777038f23d2e",
              "parentUUID": "8dba6a8d-63a0-4200-b02e-b6cc82afe301",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [],
          "suites": [
            {
              "uuid": "222e4adc-83b3-4646-b859-91a9716f23de",
              "title": "useWebChatFramework",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/virtual-agent/tests/hooks/useWebChatFramework.unit.spec.js",
              "file": "/src/applications/virtual-agent/tests/hooks/useWebChatFramework.unit.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should set up the useLoadWebChat hook",
                  "fullTitle": "useWebChatFramework useWebChatFramework should set up the useLoadWebChat hook",
                  "timedOut": false,
                  "duration": 4,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var useLoadWebChatSpy = sandbox.stub(UseLoadWebChatModule, 'default');\n(0, _reactHooks.renderHook)(function () {\n  return (0, _useWebChatFramework.default)({\n    timeout: 1000\n  });\n});\n(0, _chai.expect)(useLoadWebChatSpy.calledOnce).to.be.true;",
                  "err": {},
                  "uuid": "cba0c852-e828-4fd8-b59a-bfbf112051fe",
                  "parentUUID": "222e4adc-83b3-4646-b859-91a9716f23de",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return loadingStatus=LOADING while loading",
                  "fullTitle": "useWebChatFramework useWebChatFramework should return loadingStatus=LOADING while loading",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
                  "err": {},
                  "uuid": "8bcd94e9-b5b5-44ec-9265-79b96e3d32ef",
                  "parentUUID": "222e4adc-83b3-4646-b859-91a9716f23de",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return loadingStatus=COMPLETE and correct webChatFramework when web chat loads",
                  "fullTitle": "useWebChatFramework useWebChatFramework should return loadingStatus=COMPLETE and correct webChatFramework when web chat loads",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
                  "err": {},
                  "uuid": "7842a5c5-593d-4b94-840f-ff1a0b199374",
                  "parentUUID": "222e4adc-83b3-4646-b859-91a9716f23de",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should call Sentry and return loadingStatus=ERROR if webchat fails to load in time",
                  "fullTitle": "useWebChatFramework useWebChatFramework should call Sentry and return loadingStatus=ERROR if webchat fails to load in time",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
                  "err": {},
                  "uuid": "d21f046c-8480-467c-bae3-9b4d15eab78c",
                  "parentUUID": "222e4adc-83b3-4646-b859-91a9716f23de",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "cba0c852-e828-4fd8-b59a-bfbf112051fe",
                "8bcd94e9-b5b5-44ec-9265-79b96e3d32ef",
                "7842a5c5-593d-4b94-840f-ff1a0b199374",
                "d21f046c-8480-467c-bae3-9b4d15eab78c"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 11,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "bd2051f7-fc5f-4af7-aebc-c0f4d467d209",
          "title": "useWebChatStore",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/virtual-agent/tests/hooks/useWebChatStore.unit.spec.js",
          "file": "/src/applications/virtual-agent/tests/hooks/useWebChatStore.unit.spec.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"useWebChatStore\"",
              "fullTitle": "useWebChatStore \"before each\" hook in \"useWebChatStore\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "sandbox = _sinon.default.sandbox.create();",
              "err": {},
              "uuid": "aa32d27f-23c0-4af3-8f2b-b21890abbc2c",
              "parentUUID": "bd2051f7-fc5f-4af7-aebc-c0f4d467d209",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after each\" hook in \"useWebChatStore\"",
              "fullTitle": "useWebChatStore \"after each\" hook in \"useWebChatStore\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "sandbox.restore();",
              "err": {},
              "uuid": "42aa865a-1257-4863-88a0-4d3176b1eb7d",
              "parentUUID": "bd2051f7-fc5f-4af7-aebc-c0f4d467d209",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [],
          "suites": [
            {
              "uuid": "32b76b6d-7bdf-4379-9a85-6e9de285533d",
              "title": "getUserFirstName",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/virtual-agent/tests/hooks/useWebChatStore.unit.spec.js",
              "file": "/src/applications/virtual-agent/tests/hooks/useWebChatStore.unit.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return url from .env when set in .env",
                  "fullTitle": "useWebChatStore getUserFirstName should return url from .env when set in .env",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var processEnv = {\n  VIRTUAL_AGENT_BACKEND_URL: processEnvApiUrl\n};\nsandbox.stub(process, 'env').value(processEnv);\nvar environment = {\n  API_URL: envApiUrl\n};\nvar baseUrl = (0, _useWebChatStore.getApiUrl)(environment);\n(0, _chai.expect)(baseUrl).to.equal(processEnvApiUrl);",
                  "err": {},
                  "uuid": "e571281b-deed-4f09-9529-119d10cc5e9c",
                  "parentUUID": "32b76b6d-7bdf-4379-9a85-6e9de285533d",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return url from environment when not set in .env",
                  "fullTitle": "useWebChatStore getUserFirstName should return url from environment when not set in .env",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var processEnv = {};\nsandbox.stub(process, 'env').value(processEnv);\nvar environment = {\n  API_URL: envApiUrl\n};\nvar baseUrl = (0, _useWebChatStore.getApiUrl)(environment);\n(0, _chai.expect)(baseUrl).to.equal(envApiUrl);",
                  "err": {},
                  "uuid": "b1ade293-3622-4fa7-86e5-ac99427ff5a0",
                  "parentUUID": "32b76b6d-7bdf-4379-9a85-6e9de285533d",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "e571281b-deed-4f09-9529-119d10cc5e9c",
                "b1ade293-3622-4fa7-86e5-ac99427ff5a0"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "ac9afee7-2bc8-4e4b-aeaa-30c00cf7981e",
              "title": "getUserFirstName",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/virtual-agent/tests/hooks/useWebChatStore.unit.spec.js",
              "file": "/src/applications/virtual-agent/tests/hooks/useWebChatStore.unit.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return name when exists",
                  "fullTitle": "useWebChatStore getUserFirstName should return name when exists",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var result = (0, _useWebChatStore.getUserFirstName)(name);\n(0, _chai.expect)(result).to.equal(name);",
                  "err": {},
                  "uuid": "8b80c1fc-906f-41a0-b71f-55fcd5dda828",
                  "parentUUID": "ac9afee7-2bc8-4e4b-aeaa-30c00cf7981e",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return noFirstNameFound when name is empty",
                  "fullTitle": "useWebChatStore getUserFirstName should return noFirstNameFound when name is empty",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var result = (0, _useWebChatStore.getUserFirstName)('');\n(0, _chai.expect)(result).to.equal('noFirstNameFound');",
                  "err": {},
                  "uuid": "36b73f52-1832-48db-a78c-2a2edab92bc7",
                  "parentUUID": "ac9afee7-2bc8-4e4b-aeaa-30c00cf7981e",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "8b80c1fc-906f-41a0-b71f-55fcd5dda828",
                "36b73f52-1832-48db-a78c-2a2edab92bc7"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "e0953d4d-3fb6-48e2-9302-418c0123e9ac",
              "title": "getUserUuid",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/virtual-agent/tests/hooks/useWebChatStore.unit.spec.js",
              "file": "/src/applications/virtual-agent/tests/hooks/useWebChatStore.unit.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return userUuid when exists",
                  "fullTitle": "useWebChatStore getUserUuid should return userUuid when exists",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var result = (0, _useWebChatStore.getUserUuid)(userUuid);\n(0, _chai.expect)(result).to.equal(userUuid);",
                  "err": {},
                  "uuid": "9d352c6c-addd-4bef-a275-d79dc77bf6d9",
                  "parentUUID": "e0953d4d-3fb6-48e2-9302-418c0123e9ac",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return noUserUuid when userUuid is null",
                  "fullTitle": "useWebChatStore getUserUuid should return noUserUuid when userUuid is null",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var result = (0, _useWebChatStore.getUserUuid)(null);\n(0, _chai.expect)(result).to.equal('noUserUuid');",
                  "err": {},
                  "uuid": "67139dfb-b756-4282-930d-be616b5bd83c",
                  "parentUUID": "e0953d4d-3fb6-48e2-9302-418c0123e9ac",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "9d352c6c-addd-4bef-a275-d79dc77bf6d9",
                "67139dfb-b756-4282-930d-be616b5bd83c"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "9a164e2a-5ee5-406a-aa4d-5c95867c59de",
              "title": "useWebChatStore",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/virtual-agent/tests/hooks/useWebChatStore.unit.spec.js",
              "file": "/src/applications/virtual-agent/tests/hooks/useWebChatStore.unit.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should create store with correct parameters",
                  "fullTitle": "useWebChatStore useWebChatStore should create store with correct parameters",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
                  "err": {},
                  "uuid": "da3f512f-604a-4349-a1c1-ffb529d36885",
                  "parentUUID": "9a164e2a-5ee5-406a-aa4d-5c95867c59de",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "da3f512f-604a-4349-a1c1-ffb529d36885"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "3a2ad49d-9628-4866-94e9-8756dcece2b0",
          "title": "useWebMessageActivityEventListener",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/virtual-agent/tests/hooks/useWebMessageActivityEventListener.unit.spec.js",
          "file": "/src/applications/virtual-agent/tests/hooks/useWebMessageActivityEventListener.unit.spec.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"useWebMessageActivityEventListener\"",
              "fullTitle": "useWebMessageActivityEventListener \"before each\" hook in \"useWebMessageActivityEventListener\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "sandbox = _sinon.default.sandbox.create();\nclock = _sinon.default.useFakeTimers({\n  now: now,\n  toFake: ['Date']\n});",
              "err": {},
              "uuid": "2958224a-9279-48d7-9f90-befeb05c8808",
              "parentUUID": "3a2ad49d-9628-4866-94e9-8756dcece2b0",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after each\" hook in \"useWebMessageActivityEventListener\"",
              "fullTitle": "useWebMessageActivityEventListener \"after each\" hook in \"useWebMessageActivityEventListener\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "sandbox.restore();\nclock.restore();",
              "err": {},
              "uuid": "e9cd598c-129a-4343-b7fe-f8956b9c5e8f",
              "parentUUID": "3a2ad49d-9628-4866-94e9-8756dcece2b0",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "should call addEventListener",
              "fullTitle": "useWebMessageActivityEventListener should call addEventListener",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var addEventListenerStub = sandbox.stub(window, 'addEventListener');\n(0, _reactHooks.renderHook)(function () {\n  return (0, _useWebMessageActivityEventListener.default)(now);\n});\n(0, _chai.expect)(addEventListenerStub.calledWithExactly('webchat-message-activity', _sinon.default.match.func)).to.be.true;",
              "err": {},
              "uuid": "40285936-382c-4684-97d6-5ccb9ab6e54d",
              "parentUUID": "3a2ad49d-9628-4866-94e9-8756dcece2b0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should call storeUtterances",
              "fullTitle": "useWebMessageActivityEventListener should call storeUtterances",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
              "err": {},
              "uuid": "7a4de275-c42d-4f6a-8842-36bf9ee278b6",
              "parentUUID": "3a2ad49d-9628-4866-94e9-8756dcece2b0",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "40285936-382c-4684-97d6-5ccb9ab6e54d",
            "7a4de275-c42d-4f6a-8842-36bf9ee278b6"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 4,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "75893518-b722-4163-b62b-7e01a3f962e7",
          "title": "activityMiddleware",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/virtual-agent/tests/middleware/activityMiddleware.unit.spec.js",
          "file": "/src/applications/virtual-agent/tests/middleware/activityMiddleware.unit.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should call recordEvent and next when card is a decision letter",
              "fullTitle": "activityMiddleware should call recordEvent and next when card is a decision letter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var next = _sinon.default.stub();\nvar card = {\n  activity: {\n    type: 'trace'\n  }\n};\nvar result = (0, _activityMiddleware.activityMiddleware)()(next)(card);\n(0, _chai.expect)(result).to.be.false;\n(0, _chai.expect)(next.called).to.be.false;",
              "err": {},
              "uuid": "df910c8a-1e30-4231-af45-15403ed90147",
              "parentUUID": "75893518-b722-4163-b62b-7e01a3f962e7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should call next with card if card activity type is not trace",
              "fullTitle": "activityMiddleware should call next with card if card activity type is not trace",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var next = _sinon.default.stub();\nvar card = {\n  activity: {\n    type: 'not_trace'\n  }\n};\n(0, _activityMiddleware.activityMiddleware)()(next)(card);\n(0, _chai.expect)(next.calledWith(card)).to.be.true;",
              "err": {},
              "uuid": "73c75b0e-29a5-4c22-9960-01451a6886a3",
              "parentUUID": "75893518-b722-4163-b62b-7e01a3f962e7",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "df910c8a-1e30-4231-af45-15403ed90147",
            "73c75b0e-29a5-4c22-9960-01451a6886a3"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "c8de980e-1582-4121-920a-a4f66370594d",
          "title": "cardAction",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/virtual-agent/tests/middleware/cardActionMiddleware.unit.spec.js",
          "file": "/src/applications/virtual-agent/tests/middleware/cardActionMiddleware.unit.spec.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"cardAction\"",
              "fullTitle": "cardAction \"before each\" hook in \"cardAction\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "sandbox = _sinon.default.sandbox.create();\nclock = _sinon.default.useFakeTimers({\n  now: now,\n  toFake: ['Date']\n});",
              "err": {},
              "uuid": "d78dcdc0-61fd-4faf-b443-4bc6b5faaddd",
              "parentUUID": "c8de980e-1582-4121-920a-a4f66370594d",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after each\" hook in \"cardAction\"",
              "fullTitle": "cardAction \"after each\" hook in \"cardAction\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "sandbox.restore();\nclock.restore();",
              "err": {},
              "uuid": "2403381e-45b8-4394-a304-b18f12b6f8a1",
              "parentUUID": "c8de980e-1582-4121-920a-a4f66370594d",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [],
          "suites": [
            {
              "uuid": "e7141541-8c0a-436d-92c7-66870de83dfa",
              "title": "cardActionMiddleware",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/virtual-agent/tests/middleware/cardActionMiddleware.unit.spec.js",
              "file": "/src/applications/virtual-agent/tests/middleware/cardActionMiddleware.unit.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [],
              "suites": [
                {
                  "uuid": "ef6f88e3-5f25-4120-b72e-5e634cf518fc",
                  "title": "cardActionMiddleware",
                  "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/virtual-agent/tests/middleware/cardActionMiddleware.unit.spec.js",
                  "file": "/src/applications/virtual-agent/tests/middleware/cardActionMiddleware.unit.spec.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "should call recordEvent and next when card is a decision letter",
                      "fullTitle": "cardAction cardActionMiddleware cardActionMiddleware should call recordEvent and next when card is a decision letter",
                      "timedOut": false,
                      "duration": 2,
                      "state": "passed",
                      "speed": "slow",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "var card = generateFakeCard('https://www.va.gov/v0/claim_letters/abc');\nvar nextSpy = _sinon.default.spy();\nvar recordEventStub = sandbox.stub(RecordEventModule, 'default');\nvar recordEventData = {\n  event: 'file_download',\n  'button-click-label': 'Decision Letter',\n  time: now\n};\n(0, _cardActionMiddleware.cardActionMiddleware)()(nextSpy)(card);\n(0, _chai.expect)(recordEventStub.calledOnce).to.be.true;\n(0, _chai.expect)(recordEventStub.firstCall.args[0]).to.deep.equal(recordEventData);\n(0, _chai.expect)(nextSpy.calledOnce).to.be.true;\n(0, _chai.expect)(nextSpy.calledWithExactly(card)).to.be.true;",
                      "err": {},
                      "uuid": "e99ed878-73d5-499f-abef-d7c784dee1e7",
                      "parentUUID": "ef6f88e3-5f25-4120-b72e-5e634cf518fc",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "should not call recordEvent when card is not a decision letter",
                      "fullTitle": "cardAction cardActionMiddleware cardActionMiddleware should not call recordEvent when card is not a decision letter",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "slow",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "var card = generateFakeCard('random_thing_we_dont_use');\nvar nextSpy = _sinon.default.spy();\nvar recordEventStub = sandbox.stub(RecordEventModule, 'default');\n(0, _cardActionMiddleware.cardActionMiddleware)()(nextSpy)(card);\n(0, _chai.expect)(recordEventStub.notCalled).to.be.true;\n(0, _chai.expect)(nextSpy.calledOnce).to.be.true;\n(0, _chai.expect)(nextSpy.calledWithExactly(card)).to.be.true;",
                      "err": {},
                      "uuid": "6c5a8276-da8d-4ea7-a401-bc7b88f0de7e",
                      "parentUUID": "ef6f88e3-5f25-4120-b72e-5e634cf518fc",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "should not call recordEvent when cardAction.type is not openUrl",
                      "fullTitle": "cardAction cardActionMiddleware cardActionMiddleware should not call recordEvent when cardAction.type is not openUrl",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "var card = generateFakeCard('https://www.va.gov/v0/claim_letters/abc', 'notOpenUrl');\nvar nextSpy = _sinon.default.spy();\nvar recordEventStub = sandbox.stub(RecordEventModule, 'default');\n(0, _cardActionMiddleware.cardActionMiddleware)()(nextSpy)(card);\n(0, _chai.expect)(recordEventStub.notCalled).to.be.true;\n(0, _chai.expect)(nextSpy.calledOnce).to.be.true;\n(0, _chai.expect)(nextSpy.calledWithExactly(card)).to.be.true;",
                      "err": {},
                      "uuid": "facd9418-3c12-4d31-8236-1b7e6d6a0e3e",
                      "parentUUID": "ef6f88e3-5f25-4120-b72e-5e634cf518fc",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "should call recordEvent with prescriptions when classList has webchat__suggested-action in card and skill is prescriptions",
                      "fullTitle": "cardAction cardActionMiddleware cardActionMiddleware should call recordEvent with prescriptions when classList has webchat__suggested-action in card and skill is prescriptions",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "slow",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "var card = generateFakeCard('https://www.va.gov/v0/claim_letters/abc', 'notOpenUrl');\ncard.target = {\n  classList: ['webchat__suggested-action']\n};\nsandbox.stub(SessionStorageModule, 'getIsRxSkill').returns('true');\nsandbox.stub(SessionStorageModule, 'getEventSkillValue').returns('va_vha_healthassistant_bot');\nvar recordEventStub = sandbox.stub(RecordEventModule, 'default');\n(0, _cardActionMiddleware.cardActionMiddleware)()(sandbox.stub())(card);\n(0, _chai.expect)(recordEventStub.calledOnce).to.be.true;\n(0, _chai.expect)(recordEventStub.firstCall.args[0]).to.deep.equal({\n  event: 'chatbot-button-click',\n  clickText: card.cardAction.value,\n  topic: 'va_vha_healthassistant_bot'\n});",
                      "err": {},
                      "uuid": "d6f21610-1aa7-4cb2-9dce-8f495e4c8ade",
                      "parentUUID": "ef6f88e3-5f25-4120-b72e-5e634cf518fc",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "should call recordEvent when classList has webchat__suggested-action in card",
                      "fullTitle": "cardAction cardActionMiddleware cardActionMiddleware should call recordEvent when classList has webchat__suggested-action in card",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "slow",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "var card = generateFakeCard('https://www.va.gov/v0/claim_letters/abc', 'notOpenUrl');\ncard.target = {\n  classList: ['webchat__suggested-action']\n};\nvar recordEventStub = sandbox.stub(RecordEventModule, 'default');\n(0, _cardActionMiddleware.cardActionMiddleware)()(sandbox.stub())(card);\n(0, _chai.expect)(recordEventStub.calledOnce).to.be.true;",
                      "err": {},
                      "uuid": "a0dff643-19a8-41e8-8669-f3ab2f07a02b",
                      "parentUUID": "ef6f88e3-5f25-4120-b72e-5e634cf518fc",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "should call recordEvent when classList has webchat__suggested-action__text in card",
                      "fullTitle": "cardAction cardActionMiddleware cardActionMiddleware should call recordEvent when classList has webchat__suggested-action__text in card",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "slow",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "var card = generateFakeCard('https://www.va.gov/v0/claim_letters/abc', 'notOpenUrl');\ncard.target = {\n  classList: ['webchat__suggested-action__text']\n};\nvar recordEventStub = sandbox.stub(RecordEventModule, 'default');\n(0, _cardActionMiddleware.cardActionMiddleware)()(sandbox.stub())(card);\n(0, _chai.expect)(recordEventStub.calledOnce).to.be.true;\n(0, _chai.expect)(recordEventStub.firstCall.args[0]).to.deep.equal({\n  event: 'chatbot-button-click',\n  clickText: card.cardAction.value,\n  topic: undefined\n});",
                      "err": {},
                      "uuid": "704d983c-493a-4f87-b7b3-afe5d3bf200b",
                      "parentUUID": "ef6f88e3-5f25-4120-b72e-5e634cf518fc",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "should not call recordEvent when classList is unknown class in card",
                      "fullTitle": "cardAction cardActionMiddleware cardActionMiddleware should not call recordEvent when classList is unknown class in card",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "var card = generateFakeCard('https://www.va.gov/v0/claim_letters/abc', 'notOpenUrl');\ncard.target = {\n  classList: ['other']\n};\nvar recordEventStub = sandbox.stub(RecordEventModule, 'default');\n(0, _cardActionMiddleware.cardActionMiddleware)()(sandbox.stub())(card);\n(0, _chai.expect)(recordEventStub.notCalled).to.be.true;",
                      "err": {},
                      "uuid": "d7671763-541e-4885-97b7-51ae62dddd19",
                      "parentUUID": "ef6f88e3-5f25-4120-b72e-5e634cf518fc",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "should call recordEvent with disability ratings when classList has webchat__suggested-action in card and skill is disability ratings",
                      "fullTitle": "cardAction cardActionMiddleware cardActionMiddleware should call recordEvent with disability ratings when classList has webchat__suggested-action in card and skill is disability ratings",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "slow",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "var card = generateFakeCard('https://www.va.gov/v0/claim_letters/abc', 'notOpenUrl');\ncard.target = {\n  classList: ['webchat__suggested-action']\n};\nsandbox.stub(SessionStorageModule, 'getEventSkillValue').returns('ratings');\nvar recordEventStub = sandbox.stub(RecordEventModule, 'default');\n(0, _cardActionMiddleware.cardActionMiddleware)()(sandbox.stub())(card);\n(0, _chai.expect)(recordEventStub.calledOnce).to.be.true;\n(0, _chai.expect)(recordEventStub.firstCall.args[0]).to.deep.equal({\n  event: 'chatbot-button-click',\n  clickText: card.cardAction.value,\n  topic: 'ratings'\n});",
                      "err": {},
                      "uuid": "8fd6b6d3-2d42-4fca-82a0-3b7b1e0440f3",
                      "parentUUID": "ef6f88e3-5f25-4120-b72e-5e634cf518fc",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [
                    {
                      "uuid": "a295ef8d-552f-4587-a119-533aaf8f83cb",
                      "title": "When there are unexpected values",
                      "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/virtual-agent/tests/middleware/cardActionMiddleware.unit.spec.js",
                      "file": "/src/applications/virtual-agent/tests/middleware/cardActionMiddleware.unit.spec.js",
                      "beforeHooks": [],
                      "afterHooks": [],
                      "tests": [
                        {
                          "title": "should not throw an error when cardAction.value is not a string",
                          "fullTitle": "cardAction cardActionMiddleware cardActionMiddleware When there are unexpected values should not throw an error when cardAction.value is not a string",
                          "timedOut": false,
                          "duration": 0,
                          "state": "passed",
                          "speed": "fast",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "var card = generateFakeCard({}, 'notOpenUrl');\nvar nextSpy = _sinon.default.spy();\nvar recordEventStub = sandbox.stub(RecordEventModule, 'default');\n(0, _cardActionMiddleware.cardActionMiddleware)()(nextSpy)(card);\n(0, _chai.expect)(recordEventStub.notCalled).to.be.true;\n(0, _chai.expect)(nextSpy.calledOnce).to.be.true;\n(0, _chai.expect)(nextSpy.calledWithExactly(card)).to.be.true;",
                          "err": {},
                          "uuid": "372039a9-deaa-48f7-931e-0ee3e15a8c34",
                          "parentUUID": "a295ef8d-552f-4587-a119-533aaf8f83cb",
                          "isHook": false,
                          "skipped": false
                        },
                        {
                          "title": "should not throw an error when cardAction is not present",
                          "fullTitle": "cardAction cardActionMiddleware cardActionMiddleware When there are unexpected values should not throw an error when cardAction is not present",
                          "timedOut": false,
                          "duration": 1,
                          "state": "passed",
                          "speed": "slow",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "var card = {};\nvar nextSpy = _sinon.default.spy();\nvar recordEventStub = sandbox.stub(RecordEventModule, 'default');\n(0, _cardActionMiddleware.cardActionMiddleware)()(nextSpy)(card);\n(0, _chai.expect)(recordEventStub.notCalled).to.be.true;\n(0, _chai.expect)(nextSpy.calledOnce).to.be.true;\n(0, _chai.expect)(nextSpy.calledWithExactly(card)).to.be.true;",
                          "err": {},
                          "uuid": "8569599b-7498-4d33-a672-86008368b334",
                          "parentUUID": "a295ef8d-552f-4587-a119-533aaf8f83cb",
                          "isHook": false,
                          "skipped": false
                        }
                      ],
                      "suites": [],
                      "passes": [
                        "372039a9-deaa-48f7-931e-0ee3e15a8c34",
                        "8569599b-7498-4d33-a672-86008368b334"
                      ],
                      "failures": [],
                      "pending": [],
                      "skipped": [],
                      "duration": 1,
                      "root": false,
                      "rootEmpty": false,
                      "_timeout": 10000
                    }
                  ],
                  "passes": [
                    "e99ed878-73d5-499f-abef-d7c784dee1e7",
                    "6c5a8276-da8d-4ea7-a401-bc7b88f0de7e",
                    "facd9418-3c12-4d31-8236-1b7e6d6a0e3e",
                    "d6f21610-1aa7-4cb2-9dce-8f495e4c8ade",
                    "a0dff643-19a8-41e8-8669-f3ab2f07a02b",
                    "704d983c-493a-4f87-b7b3-afe5d3bf200b",
                    "d7671763-541e-4885-97b7-51ae62dddd19",
                    "8fd6b6d3-2d42-4fca-82a0-3b7b1e0440f3"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 7,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                }
              ],
              "passes": [],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "5f502451-6d02-444b-8f18-4942b12a2b65",
          "title": "index",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/virtual-agent/tests/reducers/index.unit.spec.js",
          "file": "/src/applications/virtual-agent/tests/reducers/index.unit.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "0457e386-659a-462d-a93a-4ad0d4f21a1f",
              "title": "reducer",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/virtual-agent/tests/reducers/index.unit.spec.js",
              "file": "/src/applications/virtual-agent/tests/reducers/index.unit.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return default state when state is not passed in",
                  "fullTitle": "index reducer should return default state when state is not passed in",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var result = _reducers.default.virtualAgentData(undefined, {\n  type: _reducers.ACCEPTED\n});\n(0, _chai.expect)(result).to.deep.equal({\n  termsAccepted: true\n});",
                  "err": {},
                  "uuid": "03fe0995-8e35-454f-a827-66eeb6dbd4cc",
                  "parentUUID": "0457e386-659a-462d-a93a-4ad0d4f21a1f",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return termsAccepted as true when action type is ACCEPTED",
                  "fullTitle": "index reducer should return termsAccepted as true when action type is ACCEPTED",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var result = _reducers.default.virtualAgentData(state, {\n  type: _reducers.ACCEPTED\n});\n(0, _chai.expect)(result).to.deep.equal({\n  termsAccepted: true\n});",
                  "err": {},
                  "uuid": "e00912ee-04b9-476a-8ba7-9b092a6c9771",
                  "parentUUID": "0457e386-659a-462d-a93a-4ad0d4f21a1f",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return the state when the action type is not ACCEPTED",
                  "fullTitle": "index reducer should return the state when the action type is not ACCEPTED",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var result = _reducers.default.virtualAgentData(state, {\n  type: 'OTHER'\n});\n(0, _chai.expect)(result).to.deep.equal({\n  termsAccepted: false\n});",
                  "err": {},
                  "uuid": "032ddbaf-7574-478a-a098-2cca1776ee52",
                  "parentUUID": "0457e386-659a-462d-a93a-4ad0d4f21a1f",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "03fe0995-8e35-454f-a827-66eeb6dbd4cc",
                "e00912ee-04b9-476a-8ba7-9b092a6c9771",
                "032ddbaf-7574-478a-a098-2cca1776ee52"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "18a22d96-41a6-4a27-83a3-23c5ecf907d8",
          "title": "selectAccountUuid",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/virtual-agent/tests/selectors/selectAccountUuid.unit.spec.js",
          "file": "/src/applications/virtual-agent/tests/selectors/selectAccountUuid.unit.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should return first name from state",
              "fullTitle": "selectAccountUuid should return first name from state",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var state = {\n  user: {\n    profile: {\n      accountUuid: 'abc'\n    }\n  }\n};\n(0, _chai.expect)((0, _selectAccountUuid.default)(state)).to.equal('abc');",
              "err": {},
              "uuid": "935f196e-9640-4700-a5fb-4345ccb66f5f",
              "parentUUID": "18a22d96-41a6-4a27-83a3-23c5ecf907d8",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "935f196e-9640-4700-a5fb-4345ccb66f5f"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "83440b06-76ab-47da-be98-dd1f8be11866",
          "title": "selectLoadingFeatureToggle",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/virtual-agent/tests/selectors/selectFeatureToggleLoading.unit.spec.js",
          "file": "/src/applications/virtual-agent/tests/selectors/selectFeatureToggleLoading.unit.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should return true when loading feature toggle is true",
              "fullTitle": "selectLoadingFeatureToggle should return true when loading feature toggle is true",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var state = {\n  featureToggles: {\n    loading: true\n  }\n};\n(0, _chai.expect)((0, _selectFeatureTogglesLoading.default)(state)).to.be.true;",
              "err": {},
              "uuid": "11f5e1c1-7cfa-44d8-8671-28a7f7c67612",
              "parentUUID": "83440b06-76ab-47da-be98-dd1f8be11866",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return false when loading feature toggle is false",
              "fullTitle": "selectLoadingFeatureToggle should return false when loading feature toggle is false",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var state = {\n  featureToggles: {\n    loading: false\n  }\n};\n(0, _chai.expect)((0, _selectFeatureTogglesLoading.default)(state)).to.be.false;",
              "err": {},
              "uuid": "c79158e7-c4d4-4f74-9fc3-0c184c5f3b32",
              "parentUUID": "83440b06-76ab-47da-be98-dd1f8be11866",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "11f5e1c1-7cfa-44d8-8671-28a7f7c67612",
            "c79158e7-c4d4-4f74-9fc3-0c184c5f3b32"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "43bbdcf0-28b6-4339-921e-97af0a1fddcc",
          "title": "selectUserCurrentlyLoggedIn",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/virtual-agent/tests/selectors/selectUserCurrentlyLoggedIn.unit.spec.js",
          "file": "/src/applications/virtual-agent/tests/selectors/selectUserCurrentlyLoggedIn.unit.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should return false when user is logged out",
              "fullTitle": "selectUserCurrentlyLoggedIn should return false when user is logged out",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var state = {\n  user: {\n    login: {\n      currentlyLoggedIn: false\n    }\n  }\n};\n(0, _chai.expect)((0, _selectUserCurrentlyLoggedIn.default)(state)).to.be.false;",
              "err": {},
              "uuid": "9524b85d-50ce-4aa5-be9c-60a82dcdb3f7",
              "parentUUID": "43bbdcf0-28b6-4339-921e-97af0a1fddcc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return true when user is logged in",
              "fullTitle": "selectUserCurrentlyLoggedIn should return true when user is logged in",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var state = {\n  user: {\n    login: {\n      currentlyLoggedIn: true\n    }\n  }\n};\n(0, _chai.expect)((0, _selectUserCurrentlyLoggedIn.default)(state)).to.be.true;",
              "err": {},
              "uuid": "b230bb8c-f7ad-4cf1-8a05-86e82c284cd4",
              "parentUUID": "43bbdcf0-28b6-4339-921e-97af0a1fddcc",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "9524b85d-50ce-4aa5-be9c-60a82dcdb3f7",
            "b230bb8c-f7ad-4cf1-8a05-86e82c284cd4"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "32eeadc5-234f-403d-a1fe-8ea2f267a927",
          "title": "selectUserFirstName",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/virtual-agent/tests/selectors/selectUserFirstName.unit.spec.js",
          "file": "/src/applications/virtual-agent/tests/selectors/selectUserFirstName.unit.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should return first name from state",
              "fullTitle": "selectUserFirstName should return first name from state",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var state = {\n  user: {\n    profile: {\n      userFullName: {\n        first: 'John'\n      }\n    }\n  }\n};\n(0, _chai.expect)((0, _selectUserFirstName.default)(state)).to.equal('John');",
              "err": {},
              "uuid": "9a4ee863-8766-4d57-b80e-d231e81bb19a",
              "parentUUID": "32eeadc5-234f-403d-a1fe-8ea2f267a927",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return first name from state with correct case when name is all uppercase",
              "fullTitle": "selectUserFirstName should return first name from state with correct case when name is all uppercase",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var state = {\n  user: {\n    profile: {\n      userFullName: {\n        first: 'JOHN'\n      }\n    }\n  }\n};\n(0, _chai.expect)((0, _selectUserFirstName.default)(state)).to.equal('John');",
              "err": {},
              "uuid": "6cf70b33-6fb4-466d-b92b-b167f389770c",
              "parentUUID": "32eeadc5-234f-403d-a1fe-8ea2f267a927",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return first name from state with correct case when name is all lowercase",
              "fullTitle": "selectUserFirstName should return first name from state with correct case when name is all lowercase",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var state = {\n  user: {\n    profile: {\n      userFullName: {\n        first: 'john'\n      }\n    }\n  }\n};\n(0, _chai.expect)((0, _selectUserFirstName.default)(state)).to.equal('John');",
              "err": {},
              "uuid": "c2e5ce8c-df44-4b14-bdb4-5812c71ffd03",
              "parentUUID": "32eeadc5-234f-403d-a1fe-8ea2f267a927",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "9a4ee863-8766-4d57-b80e-d231e81bb19a",
            "6cf70b33-6fb4-466d-b92b-b167f389770c",
            "c2e5ce8c-df44-4b14-bdb4-5812c71ffd03"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "d990e6e9-8b08-4fb0-9275-298be90f5fef",
          "title": "selectVirtualAgentDataTermsAccepted",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/virtual-agent/tests/selectors/selectVirtualAgentDataTermsAccepted.unit.spec.js",
          "file": "/src/applications/virtual-agent/tests/selectors/selectVirtualAgentDataTermsAccepted.unit.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should return virtualAgentData termsAccepted from state",
              "fullTitle": "selectVirtualAgentDataTermsAccepted should return virtualAgentData termsAccepted from state",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var state = {\n  virtualAgentData: {\n    termsAccepted: 'true'\n  }\n};\n(0, _chai.expect)((0, _selectVirtualAgentDataTermsAccepted.default)(state)).to.equal('true');",
              "err": {},
              "uuid": "878023cd-a382-4dee-ab53-75e256efe9c8",
              "parentUUID": "d990e6e9-8b08-4fb0-9275-298be90f5fef",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "878023cd-a382-4dee-ab53-75e256efe9c8"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "1d4fdd1e-8b0b-4380-84f1-aca07cf6642d",
          "title": "actions",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/virtual-agent/tests/utils/actions.unit.spec.js",
          "file": "/src/applications/virtual-agent/tests/utils/actions.unit.spec.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"actions\"",
              "fullTitle": "actions \"before each\" hook in \"actions\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "sandbox = _sinon.default.sandbox.create();",
              "err": {},
              "uuid": "cac84752-2ffa-4e13-84d8-c70c29dce20c",
              "parentUUID": "1d4fdd1e-8b0b-4380-84f1-aca07cf6642d",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after each\" hook in \"actions\"",
              "fullTitle": "actions \"after each\" hook in \"actions\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "sandbox.restore();",
              "err": {},
              "uuid": "f7cdca62-d41e-4a99-bcd6-469515d096f1",
              "parentUUID": "1d4fdd1e-8b0b-4380-84f1-aca07cf6642d",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [],
          "suites": [
            {
              "uuid": "f776758a-fe03-4159-ab2d-666b0fb26576",
              "title": "processActionConnectFulfilled",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/virtual-agent/tests/utils/actions.unit.spec.js",
              "file": "/src/applications/virtual-agent/tests/utils/actions.unit.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should call dispatch once when root bot toggle is on",
                  "fullTitle": "actions processActionConnectFulfilled should call dispatch once when root bot toggle is on",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var dispatchSpy = sandbox.spy();\nvar options = {\n  dispatch: dispatchSpy,\n  csrfToken: 'csrfToken',\n  apiSession: 'apiSession',\n  apiURL: 'apiUrl',\n  baseURL: 'baseUrl',\n  userFirstName: 'userFirstName',\n  userUuid: 'userUuid',\n  isMobile: true,\n  isRootBotToggleOn: true\n};\n(0, _actions.processActionConnectFulfilled)(options)();\n(0, _chai.expect)(dispatchSpy.calledOnce).to.be.true;",
                  "err": {},
                  "uuid": "4e536db1-9368-4751-8e8e-d40797cdeb52",
                  "parentUUID": "f776758a-fe03-4159-ab2d-666b0fb26576",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should call dispatch once when root bot toggle is off",
                  "fullTitle": "actions processActionConnectFulfilled should call dispatch once when root bot toggle is off",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var dispatchSpy = sandbox.spy();\nvar options = {\n  dispatch: dispatchSpy,\n  csrfToken: 'csrfToken',\n  apiSession: 'apiSession',\n  apiURL: 'apiUrl',\n  baseURL: 'baseUrl',\n  userFirstName: 'userFirstName',\n  userUuid: 'userUuid',\n  isMobile: true,\n  isRootBotToggleOn: false\n};\n(0, _actions.processActionConnectFulfilled)(options)();\n(0, _chai.expect)(dispatchSpy.calledTwice).to.be.true;",
                  "err": {},
                  "uuid": "e98453e9-0768-44c6-bff9-e434637b3925",
                  "parentUUID": "f776758a-fe03-4159-ab2d-666b0fb26576",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "4e536db1-9368-4751-8e8e-d40797cdeb52",
                "e98453e9-0768-44c6-bff9-e434637b3925"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "1f7c91dc-98eb-4ef1-a6b0-7382b8e6aba2",
              "title": "processSendMessageActivity",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/virtual-agent/tests/utils/actions.unit.spec.js",
              "file": "/src/applications/virtual-agent/tests/utils/actions.unit.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should dispatch the bot-outgoing-activity event",
                  "fullTitle": "actions processSendMessageActivity should dispatch the bot-outgoing-activity event",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var action = {\n  payload: {\n    text: 'text'\n  }\n};\nvar dispatchStub = sandbox.stub(window, 'dispatchEvent');\n(0, _actions.processSendMessageActivity)({\n  action: action\n})();\n(0, _chai.expect)(dispatchStub.calledOnce).to.be.true;",
                  "err": {},
                  "uuid": "9384f65d-f00b-435b-8011-279242208d14",
                  "parentUUID": "1f7c91dc-98eb-4ef1-a6b0-7382b8e6aba2",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "9384f65d-f00b-435b-8011-279242208d14"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 3,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "81b5e78e-059e-4709-b3a2-a74666eef38a",
              "title": "processIncomingActivity",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/virtual-agent/tests/utils/actions.unit.spec.js",
              "file": "/src/applications/virtual-agent/tests/utils/actions.unit.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should set tracking utterances to true if at the beginning of the conversation",
                  "fullTitle": "actions processIncomingActivity should set tracking utterances to true if at the beginning of the conversation",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var action = {\n  payload: {\n    activity: {\n      type: 'message',\n      text: 'text',\n      from: {\n        role: 'bot'\n      }\n    }\n  }\n};\nsandbox.stub(SessionStorageModule, 'getIsTrackingUtterances').returns(false);\nvar setIsTrackingUtterancesStub = sandbox.stub(SessionStorageModule, 'setIsTrackingUtterances');\n(0, _actions.processIncomingActivity)({\n  action: action,\n  dispatch: sandbox.spy()\n})();\n(0, _chai.expect)(setIsTrackingUtterancesStub.calledOnce).to.be.true;\n(0, _chai.expect)(setIsTrackingUtterancesStub.calledWithExactly(true)).to.be.true;",
                  "err": {},
                  "uuid": "ba6d24fe-a2be-4716-89e3-6d302f5dff52",
                  "parentUUID": "81b5e78e-059e-4709-b3a2-a74666eef38a",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should not set tracking utterances if not at the beginning of the conversation",
                  "fullTitle": "actions processIncomingActivity should not set tracking utterances if not at the beginning of the conversation",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var action = {\n  payload: {\n    activity: {\n      type: 'other'\n    }\n  }\n};\nsandbox.stub(SessionStorageModule, 'getIsTrackingUtterances').returns(true);\nvar setIsTrackingUtterancesStub = sandbox.stub(SessionStorageModule, 'setIsTrackingUtterances');\n(0, _actions.processIncomingActivity)({\n  action: action,\n  dispatch: sandbox.spy()\n})();\n(0, _chai.expect)(setIsTrackingUtterancesStub.notCalled).to.be.true;",
                  "err": {},
                  "uuid": "27183e7b-0af8-4ec3-9ba9-b2b574a7411e",
                  "parentUUID": "81b5e78e-059e-4709-b3a2-a74666eef38a",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should set tracking utterances to false if the bot wants to sign in the user",
                  "fullTitle": "actions processIncomingActivity should set tracking utterances to false if the bot wants to sign in the user",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var action = {\n  payload: {\n    activity: {\n      type: 'message',\n      text: 'Alright. Sending you to the sign-in page...',\n      from: {\n        role: 'bot'\n      }\n    }\n  }\n};\nsandbox.stub(SessionStorageModule, 'getIsTrackingUtterances').returns(true);\nvar dispatch = sandbox.stub();\nvar setIsTrackingUtterancesStub = sandbox.stub(SessionStorageModule, 'setIsTrackingUtterances');\n(0, _actions.processIncomingActivity)({\n  action: action,\n  dispatch: dispatch\n})();\n(0, _chai.expect)(setIsTrackingUtterancesStub.calledOnce).to.be.true;\n(0, _chai.expect)(setIsTrackingUtterancesStub.calledWithExactly(false)).to.be.true;",
                  "err": {},
                  "uuid": "ce390181-cf7a-4db0-a574-4a43dc1592a5",
                  "parentUUID": "81b5e78e-059e-4709-b3a2-a74666eef38a",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should reset utterances if it is a newly authed conversation and utterances already exist",
                  "fullTitle": "actions processIncomingActivity should reset utterances if it is a newly authed conversation and utterances already exist",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var action = {\n  payload: {\n    activity: {\n      type: 'message',\n      text: 'To get started',\n      from: {\n        role: 'bot'\n      }\n    }\n  }\n};\nsandbox.stub(SessionStorageModule, 'getIsTrackingUtterances').returns(true);\nsandbox.stub(SessionStorageModule, 'getInAuthExp').returns('true');\nsandbox.stub(SessionStorageModule, 'getRecentUtterances').returns(['utterance1', 'utterance2']);\nvar dispatch = sandbox.stub();\nvar setRecentUtterancesStub = sandbox.stub(SessionStorageModule, 'setRecentUtterances');\n(0, _actions.processIncomingActivity)({\n  action: action,\n  dispatch: dispatch\n})();\n(0, _chai.expect)(setRecentUtterancesStub.calledOnce).to.be.true;\n(0, _chai.expect)(setRecentUtterancesStub.calledWithExactly([])).to.be.true;",
                  "err": {},
                  "uuid": "883b6a9c-0e4d-435f-b052-6b185bf496f2",
                  "parentUUID": "81b5e78e-059e-4709-b3a2-a74666eef38a",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should not reset utterances if it is a newly authed conversation but utterances dont exist",
                  "fullTitle": "actions processIncomingActivity should not reset utterances if it is a newly authed conversation but utterances dont exist",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var action = {\n  payload: {\n    activity: {\n      type: 'message',\n      text: 'To get started',\n      from: {\n        role: 'bot'\n      }\n    }\n  }\n};\nsandbox.stub(SessionStorageModule, 'getIsTrackingUtterances').returns(true);\nsandbox.stub(SessionStorageModule, 'getInAuthExp').returns('true');\nsandbox.stub(SessionStorageModule, 'getRecentUtterances').returns(undefined);\nvar dispatch = sandbox.stub();\nvar setRecentUtterancesStub = sandbox.stub(SessionStorageModule, 'setRecentUtterances');\n(0, _actions.processIncomingActivity)({\n  action: action,\n  dispatch: dispatch\n})();\n(0, _chai.expect)(setRecentUtterancesStub.notCalled).to.be.true;",
                  "err": {},
                  "uuid": "ed3fc9c5-7a7a-4a77-996d-4e73b8a8413d",
                  "parentUUID": "81b5e78e-059e-4709-b3a2-a74666eef38a",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should not change tracking utterances or reset utterances if not signing in or a new authed conversation",
                  "fullTitle": "actions processIncomingActivity should not change tracking utterances or reset utterances if not signing in or a new authed conversation",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var action = {\n  payload: {\n    activity: {\n      type: 'message',\n      text: 'Other',\n      from: {\n        role: 'bot'\n      }\n    }\n  }\n};\nsandbox.stub(SessionStorageModule, 'getIsTrackingUtterances').returns(true);\nsandbox.stub(SessionStorageModule, 'getInAuthExp').returns('false');\nvar dispatch = sandbox.stub();\nvar setIsTrackingUtterancesStub = sandbox.stub(SessionStorageModule, 'setIsTrackingUtterances');\nvar setRecentUtterancesStub = sandbox.stub(SessionStorageModule, 'setRecentUtterances');\n(0, _actions.processIncomingActivity)({\n  action: action,\n  dispatch: dispatch\n})();\n(0, _chai.expect)(setIsTrackingUtterancesStub.notCalled).to.be.true;\n(0, _chai.expect)(setRecentUtterancesStub.notCalled).to.be.true;",
                  "err": {},
                  "uuid": "c019d0f7-b0aa-48f1-8b03-d64d8826572c",
                  "parentUUID": "81b5e78e-059e-4709-b3a2-a74666eef38a",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should not change tracking utterances or reset utterances if not a message from the bot",
                  "fullTitle": "actions processIncomingActivity should not change tracking utterances or reset utterances if not a message from the bot",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var action = {\n  payload: {\n    activity: {\n      type: 'message',\n      text: 'Other',\n      from: {\n        role: 'user'\n      }\n    }\n  }\n};\nsandbox.stub(SessionStorageModule, 'getIsTrackingUtterances').returns(true);\nsandbox.stub(SessionStorageModule, 'getInAuthExp').returns('false');\nvar dispatch = sandbox.stub();\nvar setIsTrackingUtterancesStub = sandbox.stub(SessionStorageModule, 'setIsTrackingUtterances');\nvar setRecentUtterancesStub = sandbox.stub(SessionStorageModule, 'setRecentUtterances');\n(0, _actions.processIncomingActivity)({\n  action: action,\n  dispatch: dispatch\n})();\n(0, _chai.expect)(setIsTrackingUtterancesStub.notCalled).to.be.true;\n(0, _chai.expect)(setRecentUtterancesStub.notCalled).to.be.true;",
                  "err": {},
                  "uuid": "52736df6-1ab7-4459-8f62-1e09b3bf8a02",
                  "parentUUID": "81b5e78e-059e-4709-b3a2-a74666eef38a",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should send a webchat-message-activity event if tracking utterances",
                  "fullTitle": "actions processIncomingActivity should send a webchat-message-activity event if tracking utterances",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var action = {\n  payload: {\n    activity: {\n      type: 'message',\n      text: 'Other',\n      from: {\n        role: 'user'\n      }\n    }\n  }\n};\nsandbox.stub(SessionStorageModule, 'getIsTrackingUtterances').returns(true);\nsandbox.stub(SessionStorageModule, 'getInAuthExp').returns('false');\nvar dispatch = sandbox.stub();\nvar sendWindowEventWithActionPayloadStub = sandbox.stub(EventsModule, 'sendWindowEventWithActionPayload');\n(0, _actions.processIncomingActivity)({\n  action: action,\n  dispatch: dispatch\n})();\n(0, _chai.expect)(sendWindowEventWithActionPayloadStub.calledOnce).to.be.true;\n(0, _chai.expect)(sendWindowEventWithActionPayloadStub.calledWithExactly('webchat-message-activity', action)).to.be.true;",
                  "err": {},
                  "uuid": "802fd647-90e2-449e-9042-fcec38a16099",
                  "parentUUID": "81b5e78e-059e-4709-b3a2-a74666eef38a",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should set is rx skill to true and trigger rxSkill event if entering rx",
                  "fullTitle": "actions processIncomingActivity should set is rx skill to true and trigger rxSkill event if entering rx",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var action = {\n  payload: {\n    activity: {\n      type: 'message',\n      text: 'Other',\n      from: {\n        role: 'user'\n      },\n      name: 'Skill_Entry',\n      value: 'va_vha_healthassistant_bot'\n    }\n  }\n};\nvar dispatch = sandbox.stub();\nvar setIsRxSkillStub = sandbox.stub(SessionStorageModule, 'setIsRxSkill');\nvar sendWindowEventWithActionPayloadStub = sandbox.stub(EventsModule, 'sendWindowEventWithActionPayload');\n(0, _actions.processIncomingActivity)({\n  action: action,\n  dispatch: dispatch\n})();\n(0, _chai.expect)(setIsRxSkillStub.calledOnce).to.be.true;\n(0, _chai.expect)(setIsRxSkillStub.calledWithExactly(true)).to.be.true;\n(0, _chai.expect)(sendWindowEventWithActionPayloadStub.calledWithExactly('rxSkill', action)).to.be.true;",
                  "err": {},
                  "uuid": "9d50ee26-2100-4955-a130-0d68fd54c22f",
                  "parentUUID": "81b5e78e-059e-4709-b3a2-a74666eef38a",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should not set is rx skill if entering non-rx skill",
                  "fullTitle": "actions processIncomingActivity should not set is rx skill if entering non-rx skill",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var action = {\n  payload: {\n    activity: {\n      type: 'message',\n      text: 'Other',\n      from: {\n        role: 'user'\n      },\n      name: 'Skill_Entry',\n      value: 'Other_Skill'\n    }\n  }\n};\nvar dispatch = sandbox.stub();\nvar setIsRxSkillStub = sandbox.stub(SessionStorageModule, 'setIsRxSkill');\n(0, _actions.processIncomingActivity)({\n  action: action,\n  dispatch: dispatch\n})();\n(0, _chai.expect)(setIsRxSkillStub.notCalled).to.be.true;",
                  "err": {},
                  "uuid": "7363985a-c7f4-48be-8eb4-4aa85365f864",
                  "parentUUID": "81b5e78e-059e-4709-b3a2-a74666eef38a",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should set event skill value and call recordEvent for Skill_Entry action when root bot toggle is on",
                  "fullTitle": "actions processIncomingActivity should set event skill value and call recordEvent for Skill_Entry action when root bot toggle is on",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var action = {\n  payload: {\n    activity: {\n      type: 'message',\n      text: 'Other',\n      from: {\n        role: 'user'\n      },\n      name: 'Skill_Entry',\n      value: {\n        value: 'some_skill_value'\n      }\n    }\n  }\n};\nvar dispatch = sandbox.stub();\nvar setEventSkillValueStub = sandbox.stub(SessionStorageModule, 'setEventSkillValue');\nvar recordEventStub = sandbox.stub(RecordEventModule, 'default');\n(0, _actions.processIncomingActivity)({\n  action: action,\n  dispatch: dispatch,\n  isRootBotToggleOn: true\n})();\n(0, _chai.expect)(setEventSkillValueStub.calledOnce).to.be.true;\n(0, _chai.expect)(setEventSkillValueStub.calledWithExactly('some_skill_value')).to.be.true;\n(0, _chai.expect)(recordEventStub.calledOnce).to.be.true;\n(0, _chai.expect)(recordEventStub.calledWithExactly({\n  event: 'api_call',\n  'api-name': 'Chatbot Skill Entry - some_skill_value',\n  topic: 'some_skill_value',\n  'api-status': 'successful'\n})).to.be.true;",
                  "err": {},
                  "uuid": "c06c08f7-da06-417a-8af0-67173f62c9e0",
                  "parentUUID": "81b5e78e-059e-4709-b3a2-a74666eef38a",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should not set event skill value or call recordEvent for non-Skill_Entry action",
                  "fullTitle": "actions processIncomingActivity should not set event skill value or call recordEvent for non-Skill_Entry action",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var action = {\n  payload: {\n    activity: {\n      type: 'message',\n      text: 'Other',\n      from: {\n        role: 'user'\n      },\n      name: 'Other_Action',\n      value: 'some_value'\n    }\n  }\n};\nvar dispatch = sandbox.stub();\nvar setEventSkillValueStub = sandbox.stub(SessionStorageModule, 'setEventSkillValue');\nvar recordEventStub = sandbox.stub(RecordEventModule, 'default');\n(0, _actions.processIncomingActivity)({\n  action: action,\n  dispatch: dispatch\n})();\n(0, _chai.expect)(setEventSkillValueStub.notCalled).to.be.true;\n(0, _chai.expect)(recordEventStub.notCalled).to.be.true;",
                  "err": {},
                  "uuid": "e9a5c639-3dbc-4d01-a664-014d3766d1e0",
                  "parentUUID": "81b5e78e-059e-4709-b3a2-a74666eef38a",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should not set event skill value to null if not a Skill_Exit event",
                  "fullTitle": "actions processIncomingActivity should not set event skill value to null if not a Skill_Exit event",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var action = {\n  payload: {\n    activity: {\n      type: 'event',\n      from: {\n        role: 'bot'\n      },\n      name: 'Other_Action',\n      value: 'some_skill_value'\n    }\n  }\n};\nvar dispatch = sandbox.stub();\nvar setEventSkillValueStub = sandbox.stub(SessionStorageModule, 'setEventSkillValue');\nvar recordEventStub = sandbox.stub(RecordEventModule, 'default');\n(0, _actions.processIncomingActivity)({\n  action: action,\n  dispatch: dispatch\n})();\n(0, _chai.expect)(setEventSkillValueStub.notCalled).to.be.true;\n(0, _chai.expect)(recordEventStub.notCalled).to.be.true;",
                  "err": {},
                  "uuid": "0bb2577a-9959-4afa-a00b-0a5785a5f06c",
                  "parentUUID": "81b5e78e-059e-4709-b3a2-a74666eef38a",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should set is rx skill to false and trigger rxSkill event if exiting rx",
                  "fullTitle": "actions processIncomingActivity should set is rx skill to false and trigger rxSkill event if exiting rx",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var action = {\n  payload: {\n    activity: {\n      type: 'message',\n      text: 'Other',\n      from: {\n        role: 'user'\n      },\n      name: 'Skill_Exit',\n      value: 'va_vha_healthassistant_bot'\n    }\n  }\n};\nvar dispatch = sandbox.stub();\nvar setIsRxSkillStub = sandbox.stub(SessionStorageModule, 'setIsRxSkill');\nvar sendWindowEventWithActionPayloadStub = sandbox.stub(EventsModule, 'sendWindowEventWithActionPayload');\n(0, _actions.processIncomingActivity)({\n  action: action,\n  dispatch: dispatch\n})();\n(0, _chai.expect)(setIsRxSkillStub.calledOnce).to.be.true;\n(0, _chai.expect)(setIsRxSkillStub.calledWithExactly(false)).to.be.true;\n(0, _chai.expect)(sendWindowEventWithActionPayloadStub.calledWithExactly('rxSkill', action)).to.be.true;",
                  "err": {},
                  "uuid": "27b96fb2-1e93-49c3-b4c7-7e3ce26bf127",
                  "parentUUID": "81b5e78e-059e-4709-b3a2-a74666eef38a",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should not set is rx skill if exiting non-rx skill",
                  "fullTitle": "actions processIncomingActivity should not set is rx skill if exiting non-rx skill",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var action = {\n  payload: {\n    activity: {\n      type: 'message',\n      text: 'Other',\n      from: {\n        role: 'user'\n      },\n      name: 'Skill_Exit',\n      value: 'Other_Skill'\n    }\n  }\n};\nvar dispatch = sandbox.stub();\nvar setIsRxSkillStub = sandbox.stub(SessionStorageModule, 'setIsRxSkill');\n(0, _actions.processIncomingActivity)({\n  action: action,\n  dispatch: dispatch\n})();\n(0, _chai.expect)(setIsRxSkillStub.notCalled).to.be.true;",
                  "err": {},
                  "uuid": "04044b71-f2ce-4978-92d9-64bf0faa3587",
                  "parentUUID": "81b5e78e-059e-4709-b3a2-a74666eef38a",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should call submitForm when activity is FormPostButton and component toggle is on",
                  "fullTitle": "actions processIncomingActivity should call submitForm when activity is FormPostButton and component toggle is on",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var url = 'https://test.com/';\nvar body = {\n  field1: 'value1',\n  field2: 'value2'\n};\nvar action = {\n  payload: {\n    activity: {\n      type: 'message',\n      value: {\n        type: 'FormPostButton',\n        url: url,\n        body: body\n      }\n    }\n  }\n};\nvar submitFormStub = sandbox.stub(SubmitFormModule, 'default');\n(0, _actions.processIncomingActivity)({\n  action: action,\n  dispatch: sandbox.spy(),\n  isComponentToggleOn: true\n})();\n(0, _chai.expect)(submitFormStub.calledOnce).to.be.true;\n(0, _chai.expect)(submitFormStub.calledWithExactly(url, body)).to.be.true;",
                  "err": {},
                  "uuid": "f712112d-b5d1-49b0-8b57-047d8e729c9a",
                  "parentUUID": "81b5e78e-059e-4709-b3a2-a74666eef38a",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should not call submitForm when activity is FormPostButton and component toggle is off",
                  "fullTitle": "actions processIncomingActivity should not call submitForm when activity is FormPostButton and component toggle is off",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var action = {\n  payload: {\n    activity: {\n      value: {\n        type: 'FormPostButton'\n      }\n    }\n  }\n};\nvar submitFormStub = sandbox.stub(SubmitFormModule, 'default');\n(0, _actions.processIncomingActivity)({\n  action: action,\n  dispatch: sandbox.spy(),\n  isComponentToggleOn: false\n})();\n(0, _chai.expect)(submitFormStub.notCalled).to.be.true;",
                  "err": {},
                  "uuid": "e92ae6ef-78f2-45a9-a275-cbf2b0a9d77c",
                  "parentUUID": "81b5e78e-059e-4709-b3a2-a74666eef38a",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should not call submitForm when activity is not FormPostButton",
                  "fullTitle": "actions processIncomingActivity should not call submitForm when activity is not FormPostButton",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var action = {\n  payload: {\n    activity: {\n      value: {\n        type: 'other'\n      }\n    }\n  }\n};\nvar submitFormStub = sandbox.stub(SubmitFormModule, 'default');\n(0, _actions.processIncomingActivity)({\n  action: action,\n  dispatch: sandbox.spy()\n})();\n(0, _chai.expect)(submitFormStub.notCalled).to.be.true;",
                  "err": {},
                  "uuid": "13f5a3ed-fe37-4286-a06d-cc29742cedcc",
                  "parentUUID": "81b5e78e-059e-4709-b3a2-a74666eef38a",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should call processCSAT when activity is CSATSurveyResponse and root bot toggle is on",
                  "fullTitle": "actions processIncomingActivity should call processCSAT when activity is CSATSurveyResponse and root bot toggle is on",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var action = {\n  payload: {\n    activity: {\n      valueType: 'CSATSurveyResponse'\n    }\n  }\n};\nvar processCSATStub = sandbox.stub(ProcessCSATModule, 'default');\n(0, _actions.processIncomingActivity)({\n  action: action,\n  dispatch: sandbox.spy(),\n  isRootBotToggleOn: true\n})();\n(0, _chai.expect)(processCSATStub.calledOnce).to.be.true;",
                  "err": {},
                  "uuid": "2a6d8ac6-ef6d-49a1-92bb-38d04b09f0ea",
                  "parentUUID": "81b5e78e-059e-4709-b3a2-a74666eef38a",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should not call processCSAT when root bot toggle is off",
                  "fullTitle": "actions processIncomingActivity should not call processCSAT when root bot toggle is off",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var action = {\n  payload: {\n    activity: {\n      valueType: 'CSATSurveyResponse'\n    }\n  }\n};\nvar processCSATStub = sandbox.stub(ProcessCSATModule, 'default');\n(0, _actions.processIncomingActivity)({\n  action: action,\n  dispatch: sandbox.spy(),\n  isRootBotToggleOn: false\n})();\n(0, _chai.expect)(processCSATStub.notCalled).to.be.true;",
                  "err": {},
                  "uuid": "08305253-06ff-483e-8214-8247fa9ad13b",
                  "parentUUID": "81b5e78e-059e-4709-b3a2-a74666eef38a",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should not call processCSAT when activity is not CSATSurveyResponse",
                  "fullTitle": "actions processIncomingActivity should not call processCSAT when activity is not CSATSurveyResponse",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var action = {\n  payload: {\n    activity: {\n      valueType: 'other'\n    }\n  }\n};\nvar processCSATStub = sandbox.stub(ProcessCSATModule, 'default');\n(0, _actions.processIncomingActivity)({\n  action: action,\n  dispatch: sandbox.spy()\n})();\n(0, _chai.expect)(processCSATStub.notCalled).to.be.true;",
                  "err": {},
                  "uuid": "9ed57487-5821-4ae2-860c-5724ff371486",
                  "parentUUID": "81b5e78e-059e-4709-b3a2-a74666eef38a",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "ba6d24fe-a2be-4716-89e3-6d302f5dff52",
                "27183e7b-0af8-4ec3-9ba9-b2b574a7411e",
                "ce390181-cf7a-4db0-a574-4a43dc1592a5",
                "883b6a9c-0e4d-435f-b052-6b185bf496f2",
                "ed3fc9c5-7a7a-4a77-996d-4e73b8a8413d",
                "c019d0f7-b0aa-48f1-8b03-d64d8826572c",
                "52736df6-1ab7-4459-8f62-1e09b3bf8a02",
                "802fd647-90e2-449e-9042-fcec38a16099",
                "9d50ee26-2100-4955-a130-0d68fd54c22f",
                "7363985a-c7f4-48be-8eb4-4aa85365f864",
                "c06c08f7-da06-417a-8af0-67173f62c9e0",
                "e9a5c639-3dbc-4d01-a664-014d3766d1e0",
                "0bb2577a-9959-4afa-a00b-0a5785a5f06c",
                "27b96fb2-1e93-49c3-b4c7-7e3ce26bf127",
                "04044b71-f2ce-4978-92d9-64bf0faa3587",
                "f712112d-b5d1-49b0-8b57-047d8e729c9a",
                "e92ae6ef-78f2-45a9-a275-cbf2b0a9d77c",
                "13f5a3ed-fe37-4286-a06d-cc29742cedcc",
                "2a6d8ac6-ef6d-49a1-92bb-38d04b09f0ea",
                "08305253-06ff-483e-8214-8247fa9ad13b",
                "9ed57487-5821-4ae2-860c-5724ff371486"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 18,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "dd6d8516-8de8-4d81-b297-ec0d48d5b89b",
              "title": "processMicrophoneActivity",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/virtual-agent/tests/utils/actions.unit.spec.js",
              "file": "/src/applications/virtual-agent/tests/utils/actions.unit.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should call recordEvent when enabling the microphone for prescriptions",
                  "fullTitle": "actions processMicrophoneActivity should call recordEvent when enabling the microphone for prescriptions",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var action = {\n  payload: {\n    dictateState: 3\n  }\n};\nvar recordEventStub = sandbox.stub(RecordEventModule, 'default');\nsandbox.stub(SessionStorageModule, 'getEventSkillValue').returns('prescriptions');\n(0, _actions.processMicrophoneActivity)({\n  action: action\n})();\n(0, _chai.expect)(recordEventStub.calledOnce).to.be.true;\n(0, _chai.expect)(recordEventStub.calledWithExactly({\n  event: 'chatbot-microphone-enable',\n  topic: 'prescriptions'\n})).to.be.true;",
                  "err": {},
                  "uuid": "4b980290-1118-43d3-b665-a0d9e0e47cd5",
                  "parentUUID": "dd6d8516-8de8-4d81-b297-ec0d48d5b89b",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should call recordEvent when enabling the microphone for non-prescriptions",
                  "fullTitle": "actions processMicrophoneActivity should call recordEvent when enabling the microphone for non-prescriptions",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var action = {\n  payload: {\n    dictateState: 3\n  }\n};\nvar recordEventStub = sandbox.stub(RecordEventModule, 'default');\nsandbox.stub(SessionStorageModule, 'getIsRxSkill').returns(false);\n(0, _actions.processMicrophoneActivity)({\n  action: action\n})();\n(0, _chai.expect)(recordEventStub.calledOnce).to.be.true;\n(0, _chai.expect)(recordEventStub.calledWithExactly({\n  event: 'chatbot-microphone-enable',\n  topic: undefined\n})).to.be.true;",
                  "err": {},
                  "uuid": "594c827a-ad0b-48ed-9303-b516821ba7d9",
                  "parentUUID": "dd6d8516-8de8-4d81-b297-ec0d48d5b89b",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should call recordEvent when disabling the microphone for prescriptions",
                  "fullTitle": "actions processMicrophoneActivity should call recordEvent when disabling the microphone for prescriptions",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var action = {\n  payload: {\n    dictateState: 0\n  }\n};\nvar recordEventStub = sandbox.stub(RecordEventModule, 'default');\nsandbox.stub(SessionStorageModule, 'getEventSkillValue').returns('prescriptions');\n(0, _actions.processMicrophoneActivity)({\n  action: action\n})();\n(0, _chai.expect)(recordEventStub.calledOnce).to.be.true;\n(0, _chai.expect)(recordEventStub.calledWithExactly({\n  event: 'chatbot-microphone-disable',\n  topic: 'prescriptions'\n})).to.be.true;",
                  "err": {},
                  "uuid": "9e81a2f4-ab5d-4cc4-9543-7d8ef14b8404",
                  "parentUUID": "dd6d8516-8de8-4d81-b297-ec0d48d5b89b",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should call recordEvent when disabling the microphone for non-prescriptions",
                  "fullTitle": "actions processMicrophoneActivity should call recordEvent when disabling the microphone for non-prescriptions",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var action = {\n  payload: {\n    dictateState: 0\n  }\n};\nvar recordEventStub = sandbox.stub(RecordEventModule, 'default');\nsandbox.stub(SessionStorageModule, 'getIsRxSkill').returns(false);\n(0, _actions.processMicrophoneActivity)({\n  action: action\n})();\n(0, _chai.expect)(recordEventStub.calledOnce).to.be.true;\n(0, _chai.expect)(recordEventStub.calledWithExactly({\n  event: 'chatbot-microphone-disable',\n  topic: undefined\n})).to.be.true;",
                  "err": {},
                  "uuid": "afa76626-7d5e-4060-a0fd-4177546b31a0",
                  "parentUUID": "dd6d8516-8de8-4d81-b297-ec0d48d5b89b",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should not call recordEvent for other microphone events",
                  "fullTitle": "actions processMicrophoneActivity should not call recordEvent for other microphone events",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var action = {\n  payload: {\n    dictateState: 1000\n  }\n};\nvar recordEventStub = sandbox.stub(RecordEventModule, 'default');\n(0, _actions.processMicrophoneActivity)({\n  action: action\n})();\n(0, _chai.expect)(recordEventStub.notCalled).to.be.true;",
                  "err": {},
                  "uuid": "f2914de6-274b-4420-abb8-257060268ec5",
                  "parentUUID": "dd6d8516-8de8-4d81-b297-ec0d48d5b89b",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "4b980290-1118-43d3-b665-a0d9e0e47cd5",
                "594c827a-ad0b-48ed-9303-b516821ba7d9",
                "9e81a2f4-ab5d-4cc4-9543-7d8ef14b8404",
                "afa76626-7d5e-4060-a0fd-4177546b31a0",
                "f2914de6-274b-4420-abb8-257060268ec5"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 4,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "cfbd746f-b44c-4a33-b2db-b577355abb00",
              "title": "addActivityData",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/virtual-agent/tests/utils/actions.unit.spec.js",
              "file": "/src/applications/virtual-agent/tests/utils/actions.unit.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should add values to the activity when value is a string",
                  "fullTitle": "actions addActivityData should add values to the activity when value is a string",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var action = {\n  payload: {\n    activity: {\n      value: 'fake-value'\n    }\n  }\n};\nvar updatedAction = (0, _actions.addActivityData)(action, {\n  apiSession: 'apiSession',\n  csrfToken: 'csrfToken',\n  apiURL: 'apiURL',\n  userFirstName: 'userFirstName',\n  userUuid: 'userUuid',\n  isMobile: 'isMobile'\n});\n(0, _chai.expect)(updatedAction.payload.activity.value).to.deep.equal({\n  value: 'fake-value',\n  apiSession: 'apiSession',\n  csrfToken: 'csrfToken',\n  apiURL: 'apiURL',\n  userFirstName: 'userFirstName',\n  userUuid: 'userUuid',\n  isMobile: 'isMobile'\n});",
                  "err": {},
                  "uuid": "254502d7-2dde-4e16-9b1c-1e21d1fdd908",
                  "parentUUID": "cfbd746f-b44c-4a33-b2db-b577355abb00",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should add values to the activity when value is an object",
                  "fullTitle": "actions addActivityData should add values to the activity when value is an object",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var action = {\n  payload: {\n    activity: {\n      value: {\n        language: 'en-US'\n      }\n    }\n  }\n};\nvar updatedAction = (0, _actions.addActivityData)(action, {\n  apiSession: 'apiSession',\n  csrfToken: 'csrfToken',\n  apiURL: 'apiURL',\n  userFirstName: 'userFirstName',\n  userUuid: 'userUuid',\n  isMobile: 'isMobile'\n});\n(0, _chai.expect)(updatedAction.payload.activity.value).to.deep.equal({\n  language: 'en-US',\n  apiSession: 'apiSession',\n  csrfToken: 'csrfToken',\n  apiURL: 'apiURL',\n  userFirstName: 'userFirstName',\n  userUuid: 'userUuid',\n  isMobile: 'isMobile'\n});",
                  "err": {},
                  "uuid": "5b9245a3-e3fd-4aa0-bd2b-55330a669581",
                  "parentUUID": "cfbd746f-b44c-4a33-b2db-b577355abb00",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "254502d7-2dde-4e16-9b1c-1e21d1fdd908",
                "5b9245a3-e3fd-4aa0-bd2b-55330a669581"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "38c27a7b-7b9f-4a93-81db-361bca960d0c",
          "title": "combineLoadingStatus",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/virtual-agent/tests/utils/loadingStatus.unit.spec.js",
          "file": "/src/applications/virtual-agent/tests/utils/loadingStatus.unit.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should return ERROR if either statusA or statusB is ERROR",
              "fullTitle": "combineLoadingStatus should return ERROR if either statusA or statusB is ERROR",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, _chai.expect)((0, _loadingStatus.combineLoadingStatus)(_loadingStatus.ERROR, _loadingStatus.LOADING)).to.equal(_loadingStatus.ERROR);\n(0, _chai.expect)((0, _loadingStatus.combineLoadingStatus)(_loadingStatus.LOADING, _loadingStatus.ERROR)).to.equal(_loadingStatus.ERROR);\n(0, _chai.expect)((0, _loadingStatus.combineLoadingStatus)(_loadingStatus.ERROR, _loadingStatus.COMPLETE)).to.equal(_loadingStatus.ERROR);",
              "err": {},
              "uuid": "770b205b-76e6-4f44-95ce-9d691d0e1c57",
              "parentUUID": "38c27a7b-7b9f-4a93-81db-361bca960d0c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return LOADING if either statusA or statusB is LOADING",
              "fullTitle": "combineLoadingStatus should return LOADING if either statusA or statusB is LOADING",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, _chai.expect)((0, _loadingStatus.combineLoadingStatus)(_loadingStatus.LOADING, _loadingStatus.COMPLETE)).to.equal(_loadingStatus.LOADING);\n(0, _chai.expect)((0, _loadingStatus.combineLoadingStatus)(_loadingStatus.COMPLETE, _loadingStatus.LOADING)).to.equal(_loadingStatus.LOADING);\n(0, _chai.expect)((0, _loadingStatus.combineLoadingStatus)(_loadingStatus.LOADING, _loadingStatus.LOADING)).to.equal(_loadingStatus.LOADING);",
              "err": {},
              "uuid": "403de8c8-75ab-4b84-9a10-9af6163182a6",
              "parentUUID": "38c27a7b-7b9f-4a93-81db-361bca960d0c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return COMPLETE if both statusA and statusB are COMPLETE",
              "fullTitle": "combineLoadingStatus should return COMPLETE if both statusA and statusB are COMPLETE",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, _chai.expect)((0, _loadingStatus.combineLoadingStatus)(_loadingStatus.COMPLETE, _loadingStatus.COMPLETE)).to.equal(_loadingStatus.COMPLETE);",
              "err": {},
              "uuid": "ea300a92-e405-41c3-8d7e-1d7e183d5d12",
              "parentUUID": "38c27a7b-7b9f-4a93-81db-361bca960d0c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should throw an error for invalid loading status",
              "fullTitle": "combineLoadingStatus should throw an error for invalid loading status",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, _chai.expect)(function () {\n  return (0, _loadingStatus.combineLoadingStatus)('INVALID', _loadingStatus.COMPLETE);\n}).to.throw('Invalid loading status statusA: INVALID statusB: complete');\n(0, _chai.expect)(function () {\n  return (0, _loadingStatus.combineLoadingStatus)(_loadingStatus.COMPLETE, 'INVALID');\n}).to.throw('Invalid loading status statusA: complete statusB: INVALID');\n(0, _chai.expect)(function () {\n  return (0, _loadingStatus.combineLoadingStatus)('INVALID', 'INVALID');\n}).to.throw('Invalid loading status statusA: INVALID statusB: INVALID');",
              "err": {},
              "uuid": "31602114-ddc7-46fe-9da7-ed3136549372",
              "parentUUID": "38c27a7b-7b9f-4a93-81db-361bca960d0c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "770b205b-76e6-4f44-95ce-9d691d0e1c57",
            "403de8c8-75ab-4b84-9a10-9af6163182a6",
            "ea300a92-e405-41c3-8d7e-1d7e183d5d12",
            "31602114-ddc7-46fe-9da7-ed3136549372"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "95d7ad0e-9f86-464a-8bc8-31234f03887a",
          "title": "loggerHelpers",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/virtual-agent/tests/utils/logger/loggerHelpers.unit.spec.js",
          "file": "/src/applications/virtual-agent/tests/utils/logger/loggerHelpers.unit.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "3062d549-608f-4976-beac-eb796587e1bb",
              "title": "buildDefaultLoggerOptions",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/virtual-agent/tests/utils/logger/loggerHelpers.unit.spec.js",
              "file": "/src/applications/virtual-agent/tests/utils/logger/loggerHelpers.unit.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return an object with the correct properties when not localhost",
                  "fullTitle": "loggerHelpers buildDefaultLoggerOptions should return an object with the correct properties when not localhost",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "process.env.LOG_LEVEL = 'debug';\nprocess.env.HOST_NAME = 'dev';\nvar loggerOptionsExpected = {\n  // minimum level of logs to display\n  level: 'debug',\n  exitOnError: false,\n  // format logs as JSON by default\n  format: _sinon.default.match.any\n};\nloggerOptionsExpected.defaultMeta = {\n  ddsource: 'nodejs',\n  ddtags: (0, _loggerHelpers.getDatadogTags)(),\n  hostname: process.env.HOST_NAME,\n  service: process.env.DATADOG_APP_NAME\n};\nvar loggerOptionsActual = (0, _loggerHelpers.buildDefaultLoggerOptions)();\n(0, _chai.expect)(loggerOptionsActual.level).to.equal('debug');\n(0, _chai.expect)(loggerOptionsActual.exitOnError).to.be.false;\n(0, _chai.expect)(loggerOptionsActual.defaultMeta).to.deep.equal({\n  ddsource: 'nodejs',\n  ddtags: (0, _loggerHelpers.getDatadogTags)(),\n  hostname: process.env.HOST_NAME,\n  service: process.env.DATADOG_APP_NAME\n});\n(0, _chai.expect)(loggerOptionsActual).to.have.property('format');",
                  "err": {},
                  "uuid": "686b8846-e521-4112-b2a1-32122d270d25",
                  "parentUUID": "3062d549-608f-4976-beac-eb796587e1bb",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return an object with the correct properties when localhost",
                  "fullTitle": "loggerHelpers buildDefaultLoggerOptions should return an object with the correct properties when localhost",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "process.env.LOG_LEVEL = 'debug';\nprocess.env.HOST_NAME = 'localhost';\nvar loggerOptionsActual = (0, _loggerHelpers.buildDefaultLoggerOptions)();\n(0, _chai.expect)(loggerOptionsActual.level).to.equal('debug');\n(0, _chai.expect)(loggerOptionsActual.exitOnError).to.be.false;\n(0, _chai.expect)(loggerOptionsActual).to.have.property('format');",
                  "err": {},
                  "uuid": "6f9ab7aa-6792-4ce2-8d6e-dd7e90f38adf",
                  "parentUUID": "3062d549-608f-4976-beac-eb796587e1bb",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return an object with the correct properties when log level is not debug",
                  "fullTitle": "loggerHelpers buildDefaultLoggerOptions should return an object with the correct properties when log level is not debug",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "process.env.LOG_LEVEL = 'warn';\nprocess.env.HOST_NAME = 'localhost';\nvar loggerOptionsActual = (0, _loggerHelpers.buildDefaultLoggerOptions)();\n(0, _chai.expect)(loggerOptionsActual.level).to.equal('warn');\n(0, _chai.expect)(loggerOptionsActual.exitOnError).to.be.false;\n(0, _chai.expect)(loggerOptionsActual).to.have.property('format');",
                  "err": {},
                  "uuid": "ff550a51-9297-4d0d-a9ea-25eae6686e92",
                  "parentUUID": "3062d549-608f-4976-beac-eb796587e1bb",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should default to localhost when host name isn't provided",
                  "fullTitle": "loggerHelpers buildDefaultLoggerOptions should default to localhost when host name isn't provided",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "process.env.LOG_LEVEL = 'debug';\nprocess.env.HOST_NAME = '';\nvar loggerOptionsActual = (0, _loggerHelpers.buildDefaultLoggerOptions)();\n(0, _chai.expect)(loggerOptionsActual.level).to.equal('debug');\n(0, _chai.expect)(loggerOptionsActual.exitOnError).to.be.false;\n(0, _chai.expect)(loggerOptionsActual).to.have.property('format');",
                  "err": {},
                  "uuid": "a07a9d37-309e-4661-930c-9347d17097a4",
                  "parentUUID": "3062d549-608f-4976-beac-eb796587e1bb",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "686b8846-e521-4112-b2a1-32122d270d25",
                "6f9ab7aa-6792-4ce2-8d6e-dd7e90f38adf",
                "ff550a51-9297-4d0d-a9ea-25eae6686e92",
                "a07a9d37-309e-4661-930c-9347d17097a4"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "3f917a2d-9fb8-4079-b706-9ee16b25c4d9",
              "title": "getVersionNumber",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/virtual-agent/tests/utils/logger/loggerHelpers.unit.spec.js",
              "file": "/src/applications/virtual-agent/tests/utils/logger/loggerHelpers.unit.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should get the version number",
                  "fullTitle": "loggerHelpers getVersionNumber should get the version number",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var readFileSyncStub = _sinon.default.stub(_fs.default, 'readFileSync');\nreadFileSyncStub.returns('{\"version\":\"1.0.1\"}');\nvar versionNumber = (0, _loggerHelpers.getVersionNumber)();\nvar mockVersionNumber = '1.0.1';\n(0, _chai.expect)(versionNumber).to.deep.equal(mockVersionNumber);\nreadFileSyncStub.restore();",
                  "err": {},
                  "uuid": "4e15060c-642d-4288-979a-601b41f4bf08",
                  "parentUUID": "3f917a2d-9fb8-4079-b706-9ee16b25c4d9",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "4e15060c-642d-4288-979a-601b41f4bf08"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "03835c3b-0161-4768-8f59-177202b47662",
              "title": "getDatadogTags",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/virtual-agent/tests/utils/logger/loggerHelpers.unit.spec.js",
              "file": "/src/applications/virtual-agent/tests/utils/logger/loggerHelpers.unit.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should get the datadog tags when datadog tags are undefined",
                  "fullTitle": "loggerHelpers getDatadogTags should get the datadog tags when datadog tags are undefined",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var datadogTags = (0, _loggerHelpers.getDatadogTags)();\nvar mockDatadogTags = 'version:1.0.1';\n(0, _chai.expect)(datadogTags).to.deep.equal(mockDatadogTags);",
                  "err": {},
                  "uuid": "f6a97aba-056b-4ab7-ab08-23cae232f290",
                  "parentUUID": "03835c3b-0161-4768-8f59-177202b47662",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should get the datadog tags when datadog tags are defined",
                  "fullTitle": "loggerHelpers getDatadogTags should get the datadog tags when datadog tags are defined",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "process.env.DATADOG_TAGS = 'env:localhost,team:virtual-agent-platform';\nvar datadogTags = (0, _loggerHelpers.getDatadogTags)();\nvar mockDatadogTags = 'version:1.0.1,env:localhost,team:virtual-agent-platform';\n(0, _chai.expect)(datadogTags).to.deep.equal(mockDatadogTags);",
                  "err": {},
                  "uuid": "e9a6dcba-20c3-475e-b349-5101947cdf02",
                  "parentUUID": "03835c3b-0161-4768-8f59-177202b47662",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "f6a97aba-056b-4ab7-ab08-23cae232f290",
                "e9a6dcba-20c3-475e-b349-5101947cdf02"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "e5d5aaa1-a222-4dd5-9e01-b7a009f0a0d8",
              "title": "getLogLevel",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/virtual-agent/tests/utils/logger/loggerHelpers.unit.spec.js",
              "file": "/src/applications/virtual-agent/tests/utils/logger/loggerHelpers.unit.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should get the log level when log level is defined",
                  "fullTitle": "loggerHelpers getLogLevel should get the log level when log level is defined",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "process.env.LOG_LEVEL = 'debug';\nvar logLevel = (0, _loggerHelpers.getLogLevel)();\nvar mockLogLevel = 'debug';\n(0, _chai.expect)(logLevel).to.deep.equal(mockLogLevel);",
                  "err": {},
                  "uuid": "1bcf95ce-865d-4ae7-afb6-1447c494cdc9",
                  "parentUUID": "e5d5aaa1-a222-4dd5-9e01-b7a009f0a0d8",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should get the log level when log level is undefined",
                  "fullTitle": "loggerHelpers getLogLevel should get the log level when log level is undefined",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "delete process.env.LOG_LEVEL;\nvar logLevel = (0, _loggerHelpers.getLogLevel)();\nvar mockLogLevel = 'info';\n(0, _chai.expect)(logLevel).to.deep.equal(mockLogLevel);",
                  "err": {},
                  "uuid": "d7818813-a58f-4425-a531-6c24460e4ab7",
                  "parentUUID": "e5d5aaa1-a222-4dd5-9e01-b7a009f0a0d8",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "1bcf95ce-865d-4ae7-afb6-1447c494cdc9",
                "d7818813-a58f-4425-a531-6c24460e4ab7"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "ea366e90-3e0d-4403-adbc-6a72f2a20a06",
              "title": "createLogger",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/virtual-agent/tests/utils/logger/loggerHelpers.unit.spec.js",
              "file": "/src/applications/virtual-agent/tests/utils/logger/loggerHelpers.unit.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should create the logger with correct logger options",
                  "fullTitle": "loggerHelpers createLogger should create the logger with correct logger options",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var createLoggerStub = _sinon.default.stub(_winston.default, 'createLogger');\ncreateLoggerStub.returns('logger');\nvar actual = (0, _loggerHelpers.createLogger)('fake logger options');\n(0, _chai.expect)(actual).to.deep.equal('logger');\n(0, _chai.expect)(createLoggerStub.firstCall.args[0]).to.deep.equal('fake logger options');\ncreateLoggerStub.restore();",
                  "err": {},
                  "uuid": "507d5bb1-6e9d-4070-9dcf-03fefb61313d",
                  "parentUUID": "ea366e90-3e0d-4403-adbc-6a72f2a20a06",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "507d5bb1-6e9d-4070-9dcf-03fefb61313d"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "494d1eb3-6f02-4938-84dc-98fb06ee3718",
              "title": "setLoggerOutput",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/virtual-agent/tests/utils/logger/loggerHelpers.unit.spec.js",
              "file": "/src/applications/virtual-agent/tests/utils/logger/loggerHelpers.unit.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should add http transport to the logger when not localhost",
                  "fullTitle": "loggerHelpers setLoggerOutput should add http transport to the logger when not localhost",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var fakeLogger = {\n  add: _sinon.default.spy()\n};\nprocess.env.HOST_NAME = 'dev';\nprocess.env.DATADOG_API_KEY = 'some_api_key';\nprocess.env.DATADOG_APP_NAME = 'some_app_name';\nvar httpTransportOptions = {\n  host: 'http-intake.logs.ddog-gov.com',\n  path: \"/api/v2/logs?dd-api-key=\".concat(process.env.DATADOG_API_KEY, \"&ddsource=nodejs&service=\").concat(process.env.DATADOG_APP_NAME),\n  ssl: true,\n  handleExceptions: true,\n  handleRejections: true // handle promise rejections\n};\n(0, _loggerHelpers.setLoggerOutput)(fakeLogger);\nvar format = _winston.default.format.combine(_winston.default.format.splat(), _winston.default.format.printf(function (_ref) {\n  var message = _ref.message;\n  return \"\".concat(message);\n}));\n(0, _chai.expect)(JSON.stringify(fakeLogger.add.firstCall.args[0])).to.deep.equal(JSON.stringify(new _winston.default.transports.Console({\n  format: format,\n  handleExceptions: true,\n  handleRejections: true\n})));\n(0, _chai.expect)(JSON.stringify(fakeLogger.add.secondCall.args[0])).to.deep.equal(JSON.stringify(new _winston.default.transports.Http(httpTransportOptions)));",
                  "err": {},
                  "uuid": "58e5543a-262f-4f97-aa75-aa4ca6caa3c4",
                  "parentUUID": "494d1eb3-6f02-4938-84dc-98fb06ee3718",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should add console transport to the logger when localhost",
                  "fullTitle": "loggerHelpers setLoggerOutput should add console transport to the logger when localhost",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var fakeLogger = {\n  add: _sinon.default.spy()\n};\nprocess.env.HOST_NAME = 'localhost';\n(0, _loggerHelpers.setLoggerOutput)(fakeLogger);\nvar format = _winston.default.format.combine(_winston.default.format.splat(), _winston.default.format.printf(function (_ref2) {\n  var message = _ref2.message;\n  return \"\".concat(message);\n}));\n(0, _chai.expect)(JSON.stringify(fakeLogger.add.firstCall.args[0])).to.deep.equal(JSON.stringify(new _winston.default.transports.Console({\n  format: format,\n  handleExceptions: true,\n  handleRejections: true\n})));",
                  "err": {},
                  "uuid": "ba54dbc6-9b46-4133-90d0-6445f03a1239",
                  "parentUUID": "494d1eb3-6f02-4938-84dc-98fb06ee3718",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "58e5543a-262f-4f97-aa75-aa4ca6caa3c4",
                "ba54dbc6-9b46-4133-90d0-6445f03a1239"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "ff6eb41d-174d-406c-88ca-e747456a98ed",
          "title": "logErrorToDatadog",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/virtual-agent/tests/utils/logging.unit.spec.js",
          "file": "/src/applications/virtual-agent/tests/utils/logging.unit.spec.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"logErrorToDatadog\"",
              "fullTitle": "logErrorToDatadog \"before each\" hook in \"logErrorToDatadog\"",
              "timedOut": false,
              "duration": 1,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "datadogSpy = _sinon.default.spy(_logger.default, 'error');",
              "err": {},
              "uuid": "481aafa4-7936-4e73-a9e5-124a9678b6c9",
              "parentUUID": "ff6eb41d-174d-406c-88ca-e747456a98ed",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after each\" hook in \"logErrorToDatadog\"",
              "fullTitle": "logErrorToDatadog \"after each\" hook in \"logErrorToDatadog\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_logger.default.error.restore();",
              "err": {},
              "uuid": "8c8262c3-5475-459b-b01f-cb8feadb9f86",
              "parentUUID": "ff6eb41d-174d-406c-88ca-e747456a98ed",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "should log error to Datadog when logging is enabled",
              "fullTitle": "logErrorToDatadog should log error to Datadog when logging is enabled",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var message = 'Test error message';\nvar context = {\n  key: 'value'\n};\n(0, _logging.logErrorToDatadog)(true, message, context);\n(0, _chai.expect)(datadogSpy.calledOnce).to.be.true;\n(0, _chai.expect)(datadogSpy.calledWith(message, context)).to.be.true;",
              "err": {},
              "uuid": "c50f119b-b215-4e22-8428-493e1faa774d",
              "parentUUID": "ff6eb41d-174d-406c-88ca-e747456a98ed",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should not log error to Datadog when logging is disabled",
              "fullTitle": "logErrorToDatadog should not log error to Datadog when logging is disabled",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var message = 'Test error message';\nvar context = {\n  key: 'value'\n};\n(0, _logging.logErrorToDatadog)(false, message, context);\n(0, _chai.expect)(datadogSpy.notCalled).to.be.true;",
              "err": {},
              "uuid": "3c7c2da0-97b4-4504-abf2-77f98bdcc5f7",
              "parentUUID": "ff6eb41d-174d-406c-88ca-e747456a98ed",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "c50f119b-b215-4e22-8428-493e1faa774d",
            "3c7c2da0-97b4-4504-abf2-77f98bdcc5f7"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "20a81d48-498a-4354-9651-daef0be19a3e",
          "title": "makePhoneNumberAriaLabel",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/virtual-agent/tests/utils/makePhoneNumberAriaLabel.unit.spec.js",
          "file": "/src/applications/virtual-agent/tests/utils/makePhoneNumberAriaLabel.unit.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should break the phone number into chunks and join them with spaces and period at the end",
              "fullTitle": "makePhoneNumberAriaLabel should break the phone number into chunks and join them with spaces and period at the end",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var phoneNumber = '+1 (234) 567-8901';\nvar expected = '1. 2 3 4. 5 6 7. 8 9 0 1.';\nvar result = (0, _makePhoneNumberAriaLabel.default)(phoneNumber);\n(0, _chai.expect)(result).to.be.equal(expected);",
              "err": {},
              "uuid": "e4023abf-d362-46fd-b4ad-a070f43780e0",
              "parentUUID": "20a81d48-498a-4354-9651-daef0be19a3e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should handle phone numbers with different lengths",
              "fullTitle": "makePhoneNumberAriaLabel should handle phone numbers with different lengths",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var phoneNumber = '+11 (234) 567-8901';\nvar expected = '1 1. 2 3 4. 5 6 7. 8 9 0 1.';\nvar result = (0, _makePhoneNumberAriaLabel.default)(phoneNumber);\n(0, _chai.expect)(result).to.be.equal(expected);",
              "err": {},
              "uuid": "6e3f02bb-a4f3-48d7-8ffd-ce2969c1dccd",
              "parentUUID": "20a81d48-498a-4354-9651-daef0be19a3e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should handle phone numbers with different format",
              "fullTitle": "makePhoneNumberAriaLabel should handle phone numbers with different format",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var phoneNumber = '1234567890';\nvar expected = '1 2 3. 4 5 6. 7 8 9 0.';\nvar result = (0, _makePhoneNumberAriaLabel.default)(phoneNumber);\n(0, _chai.expect)(result).to.be.equal(expected);",
              "err": {},
              "uuid": "f0bbf6d5-a0b7-4705-89f5-98a8cf0e60d0",
              "parentUUID": "20a81d48-498a-4354-9651-daef0be19a3e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should handle empty phone numbers",
              "fullTitle": "makePhoneNumberAriaLabel should handle empty phone numbers",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var phoneNumber = '';\nvar expected = '.';\nvar result = (0, _makePhoneNumberAriaLabel.default)(phoneNumber);\n(0, _chai.expect)(result).to.be.equal(expected);",
              "err": {},
              "uuid": "7bf7e156-1958-4208-874c-d8e7482b1b6a",
              "parentUUID": "20a81d48-498a-4354-9651-daef0be19a3e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "e4023abf-d362-46fd-b4ad-a070f43780e0",
            "6e3f02bb-a4f3-48d7-8ffd-ce2969c1dccd",
            "f0bbf6d5-a0b7-4705-89f5-98a8cf0e60d0",
            "7bf7e156-1958-4208-874c-d8e7482b1b6a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "7e343b4b-0711-4586-8a14-e73b0fec3f60",
          "title": "markdownRenderer",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/virtual-agent/tests/utils/markdownRender.unit.spec.js",
          "file": "/src/applications/virtual-agent/tests/utils/markdownRender.unit.spec.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"markdownRenderer\"",
              "fullTitle": "markdownRenderer \"before each\" hook in \"markdownRenderer\"",
              "timedOut": false,
              "duration": 1,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "sandbox = _sinon.default.createSandbox();\nclock = _sinon.default.useFakeTimers({\n  now: now,\n  toFake: ['setTimeout', 'clearTimeout', 'Date']\n});",
              "err": {},
              "uuid": "dfff2d42-76f1-4fad-a300-67f2d396d8c2",
              "parentUUID": "7e343b4b-0711-4586-8a14-e73b0fec3f60",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after each\" hook in \"markdownRenderer\"",
              "fullTitle": "markdownRenderer \"after each\" hook in \"markdownRenderer\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "sandbox.restore();\nclock.restore();",
              "err": {},
              "uuid": "868854ae-1169-48e0-abf3-fb3ad41f7541",
              "parentUUID": "7e343b4b-0711-4586-8a14-e73b0fec3f60",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [],
          "suites": [
            {
              "uuid": "45ae5015-488f-4aaf-8724-93a72e4efeb4",
              "title": "recordChatbotEvents",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/virtual-agent/tests/utils/markdownRender.unit.spec.js",
              "file": "/src/applications/virtual-agent/tests/utils/markdownRender.unit.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should call recordEvent when a chatbot link is clicked",
                  "fullTitle": "markdownRenderer recordChatbotEvents should call recordEvent when a chatbot link is clicked",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var recordEventSpy = sandbox.spy(RecordEventModule, 'default');\nvar element = document.createElement('a');\nelement.setAttribute('href', 'http://example.com/');\nelement.setAttribute('id', 'chatbotLink');\nelement.appendChild(document.createTextNode('Chatbot Link'));\ndocument.body.appendChild(element);\n(0, _sessionStorage.setEventSkillValue)('prescriptions');\n(0, _markdownRenderer.recordChatbotEvents)({\n  target: element\n});\n(0, _chai.expect)(recordEventSpy.calledOnce).to.be.true;\n(0, _chai.expect)(recordEventSpy.getCall(0).args[0]).to.deep.equal({\n  event: 'chatbot-resource-link-click',\n  link: 'http://example.com/',\n  linkText: 'Chatbot Link',\n  time: now,\n  topic: 'prescriptions'\n});",
                  "err": {},
                  "uuid": "42ea4949-ae2c-450a-ae27-e8b57b92557f",
                  "parentUUID": "45ae5015-488f-4aaf-8724-93a72e4efeb4",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should call recordEvent when a non-chatbot link is clicked",
                  "fullTitle": "markdownRenderer recordChatbotEvents should call recordEvent when a non-chatbot link is clicked",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var recordEventSpy = sandbox.spy(RecordEventModule, 'default');\nvar element = document.createElement('a');\nelement.setAttribute('href', 'http://example.com/');\nelement.setAttribute('id', 'other');\nelement.appendChild(document.createTextNode('Other'));\ndocument.body.appendChild(element);\n(0, _markdownRenderer.recordChatbotEvents)({\n  target: element\n});\n(0, _chai.expect)(recordEventSpy.notCalled).to.be.true;",
                  "err": {},
                  "uuid": "6ac90e72-277b-461b-a4f8-1a178d5899c9",
                  "parentUUID": "45ae5015-488f-4aaf-8724-93a72e4efeb4",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should call recordEvent when the Speak with an agent span is clicked",
                  "fullTitle": "markdownRenderer recordChatbotEvents should call recordEvent when the Speak with an agent span is clicked",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var recordEventSpy = sandbox.stub(RecordEventModule, 'default');\nvar element = document.createElement('span');\nelement.innerText = 'Speak with an agent';\ndocument.body.appendChild(element);\n(0, _markdownRenderer.recordChatbotEvents)({\n  target: element\n});\n(0, _chai.expect)(recordEventSpy.calledOnce).to.be.true;\n(0, _chai.expect)(recordEventSpy.getCall(0).args[0]).to.deep.equal({\n  event: 'cta-button-click',\n  'button-type': 'default',\n  'button-click-label': 'Speak with an agent',\n  'button-background-color': 'blue',\n  time: now\n});",
                  "err": {},
                  "uuid": "8ec07ace-a5ad-427b-966d-900e60b213c8",
                  "parentUUID": "45ae5015-488f-4aaf-8724-93a72e4efeb4",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should not call recordEvent when a non Speak with an agent span is clicked",
                  "fullTitle": "markdownRenderer recordChatbotEvents should not call recordEvent when a non Speak with an agent span is clicked",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var recordEventSpy = sandbox.stub(RecordEventModule, 'default');\nvar element = document.createElement('span');\nelement.innerText = 'Other';\ndocument.body.appendChild(element);\n(0, _markdownRenderer.recordChatbotEvents)({\n  target: element\n});\n(0, _chai.expect)(recordEventSpy.notCalled).to.be.true;",
                  "err": {},
                  "uuid": "b76f8b33-4d8f-4a27-b181-e884168d5c7c",
                  "parentUUID": "45ae5015-488f-4aaf-8724-93a72e4efeb4",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should call recordEvent when the Speak with an agent button is clicked",
                  "fullTitle": "markdownRenderer recordChatbotEvents should call recordEvent when the Speak with an agent button is clicked",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var recordEventSpy = sandbox.stub(RecordEventModule, 'default');\nvar element = document.createElement('button');\nelement.innerText = 'Speak with an agent';\ndocument.body.appendChild(element);\n(0, _markdownRenderer.recordChatbotEvents)({\n  target: element\n});\n(0, _chai.expect)(recordEventSpy.calledOnce).to.be.true;\n(0, _chai.expect)(recordEventSpy.getCall(0).args[0]).to.deep.equal({\n  event: 'cta-button-click',\n  'button-type': 'default',\n  'button-click-label': 'Speak with an agent',\n  'button-background-color': 'blue',\n  time: now\n});",
                  "err": {},
                  "uuid": "953a1697-0734-4a97-8d18-ef57dffd70f0",
                  "parentUUID": "45ae5015-488f-4aaf-8724-93a72e4efeb4",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should not call recordEvent when a non Speak with an agent button is clicked",
                  "fullTitle": "markdownRenderer recordChatbotEvents should not call recordEvent when a non Speak with an agent button is clicked",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var recordEventSpy = sandbox.stub(RecordEventModule, 'default');\nvar element = document.createElement('button');\nelement.innerText = 'Other';\ndocument.body.appendChild(element);\n(0, _markdownRenderer.recordChatbotEvents)({\n  target: element\n});\n(0, _chai.expect)(recordEventSpy.notCalled).to.be.true;",
                  "err": {},
                  "uuid": "63a3bbdf-0e04-4cc1-b70c-b356da530163",
                  "parentUUID": "45ae5015-488f-4aaf-8724-93a72e4efeb4",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should not call recordEvent when a different element is clicked",
                  "fullTitle": "markdownRenderer recordChatbotEvents should not call recordEvent when a different element is clicked",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var recordEventSpy = sandbox.stub(RecordEventModule, 'default');\nvar element = document.createElement('div');\ndocument.body.appendChild(element);\n(0, _markdownRenderer.recordChatbotEvents)({\n  target: element\n});\n(0, _chai.expect)(recordEventSpy.notCalled).to.be.true;",
                  "err": {},
                  "uuid": "8040b129-4a7a-4db6-b036-1fbd7847a07f",
                  "parentUUID": "45ae5015-488f-4aaf-8724-93a72e4efeb4",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "42ea4949-ae2c-450a-ae27-e8b57b92557f",
                "6ac90e72-277b-461b-a4f8-1a178d5899c9",
                "8ec07ace-a5ad-427b-966d-900e60b213c8",
                "b76f8b33-4d8f-4a27-b181-e884168d5c7c",
                "953a1697-0734-4a97-8d18-ef57dffd70f0",
                "63a3bbdf-0e04-4cc1-b70c-b356da530163",
                "8040b129-4a7a-4db6-b036-1fbd7847a07f"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 8,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "4ed45f01-e18c-49bf-b34a-fa90a55f5f3c",
              "title": "getRenderToken",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/virtual-agent/tests/utils/markdownRender.unit.spec.js",
              "file": "/src/applications/virtual-agent/tests/utils/markdownRender.unit.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should call the renderToken function",
                  "fullTitle": "markdownRenderer getRenderToken should call the renderToken function",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var renderTokenStub = sandbox.stub();\nvar self = {\n  renderToken: renderTokenStub\n};\nvar tokens = 'fake-tokens';\nvar idx = 'fake-idx';\nvar options = 'fake-options';\n(0, _markdownRenderer.getRenderToken)(tokens, idx, options, null, self);\n(0, _chai.expect)(renderTokenStub.calledOnce).to.be.true;\n(0, _chai.expect)(renderTokenStub.calledWith(tokens, idx, options)).to.be.true;",
                  "err": {},
                  "uuid": "ca2c38f8-757f-414c-b85e-5ad51dc9fb23",
                  "parentUUID": "4ed45f01-e18c-49bf-b34a-fa90a55f5f3c",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "ca2c38f8-757f-414c-b85e-5ad51dc9fb23"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "73b2e882-c5ed-4ea6-b784-e905eec619f0",
              "title": "getDefaultRenderer",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/virtual-agent/tests/utils/markdownRender.unit.spec.js",
              "file": "/src/applications/virtual-agent/tests/utils/markdownRender.unit.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should call the default render function if the renderToken function does not exist",
                  "fullTitle": "markdownRenderer getDefaultRenderer should call the default render function if the renderToken function does not exist",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var markdownRenderer = {\n  renderer: {\n    rules: {\n      // eslint-disable-next-line camelcase\n      link_open: 'test'\n    }\n  }\n};\nvar result = (0, _markdownRenderer.getDefaultRenderer)(markdownRenderer);\n(0, _chai.expect)(result).to.be.equal(markdownRenderer.renderer.rules.link_open);",
                  "err": {},
                  "uuid": "891cf913-95cd-4cc3-bb52-10003af2357d",
                  "parentUUID": "73b2e882-c5ed-4ea6-b784-e905eec619f0",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should call the default render function if the renderToken function does not exist",
                  "fullTitle": "markdownRenderer getDefaultRenderer should call the default render function if the renderToken function does not exist",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var markdownRenderer = {\n  renderer: {\n    rules: {}\n  }\n};\nvar result = (0, _markdownRenderer.getDefaultRenderer)(markdownRenderer);\n(0, _chai.expect)(result).to.be.equal(_markdownRenderer.getRenderToken);",
                  "err": {},
                  "uuid": "8776084c-9c3c-439b-9828-b9e0fbf25d1c",
                  "parentUUID": "73b2e882-c5ed-4ea6-b784-e905eec619f0",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "891cf913-95cd-4cc3-bb52-10003af2357d",
                "8776084c-9c3c-439b-9828-b9e0fbf25d1c"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "5e13415d-c930-41c7-96f4-e60d4a201d56",
              "title": "rendering telephone numbers",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/virtual-agent/tests/utils/markdownRender.unit.spec.js",
              "file": "/src/applications/virtual-agent/tests/utils/markdownRender.unit.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should not add aria-label to non-tel links",
                  "fullTitle": "markdownRenderer rendering telephone numbers should not add aria-label to non-tel links",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)(_markdownRenderer.default.render('[hi](http://example.com)')).to.not.include('aria-label');",
                  "err": {},
                  "uuid": "a8c5ddcd-0162-4a40-a587-dffbbc20d00f",
                  "parentUUID": "5e13415d-c930-41c7-96f4-e60d4a201d56",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should not add aria-label to links with no scheme",
                  "fullTitle": "markdownRenderer rendering telephone numbers should not add aria-label to links with no scheme",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)(_markdownRenderer.default.render('[hi](example.com)')).to.not.include('aria-label');",
                  "err": {},
                  "uuid": "0c3e5ddb-0a2d-43f1-b7d4-68196d180624",
                  "parentUUID": "5e13415d-c930-41c7-96f4-e60d4a201d56",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should handle links inside text blocks",
                  "fullTitle": "markdownRenderer rendering telephone numbers should handle links inside text blocks",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)(_markdownRenderer.default.render('howdy there have you seen [this](tel:922)')).to.include('aria-label=\"9 2 2.\"');",
                  "err": {},
                  "uuid": "9048e5e7-f4c9-44dc-8c24-72385a4fa56c",
                  "parentUUID": "5e13415d-c930-41c7-96f4-e60d4a201d56",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should handle multiple links",
                  "fullTitle": "markdownRenderer rendering telephone numbers should handle multiple links",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)(_markdownRenderer.default.render('have [you](tel:011) seen [this](tel:922)')).to.include('aria-label=\"9 2 2.\"').and.include('aria-label=\"0 1 1.\"');",
                  "err": {},
                  "uuid": "207ceab2-6ea6-44ca-ad47-441d3f0c605c",
                  "parentUUID": "5e13415d-c930-41c7-96f4-e60d4a201d56",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should add aria label for 911",
                  "fullTitle": "markdownRenderer rendering telephone numbers should add aria label for 911",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)(_markdownRenderer.default.render(\"[hi](tel:\".concat(phoneNumberLink, \")\"))).to.include(\"aria-label=\\\"\".concat(expectedLabel, \"\\\"\"));",
                  "err": {},
                  "uuid": "434ceda2-ec21-4ebd-bf02-69a8cef40cd7",
                  "parentUUID": "5e13415d-c930-41c7-96f4-e60d4a201d56",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should add aria label for 1112223333",
                  "fullTitle": "markdownRenderer rendering telephone numbers should add aria label for 1112223333",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)(_markdownRenderer.default.render(\"[hi](tel:\".concat(phoneNumberLink, \")\"))).to.include(\"aria-label=\\\"\".concat(expectedLabel, \"\\\"\"));",
                  "err": {},
                  "uuid": "9e586661-0e40-48ae-9c69-f6ddbc780964",
                  "parentUUID": "5e13415d-c930-41c7-96f4-e60d4a201d56",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should add aria label for 11112223333",
                  "fullTitle": "markdownRenderer rendering telephone numbers should add aria label for 11112223333",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)(_markdownRenderer.default.render(\"[hi](tel:\".concat(phoneNumberLink, \")\"))).to.include(\"aria-label=\\\"\".concat(expectedLabel, \"\\\"\"));",
                  "err": {},
                  "uuid": "856e24ca-9a12-43f0-8971-199a5c3b5dc8",
                  "parentUUID": "5e13415d-c930-41c7-96f4-e60d4a201d56",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should add aria label for 2223333",
                  "fullTitle": "markdownRenderer rendering telephone numbers should add aria label for 2223333",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)(_markdownRenderer.default.render(\"[hi](tel:\".concat(phoneNumberLink, \")\"))).to.include(\"aria-label=\\\"\".concat(expectedLabel, \"\\\"\"));",
                  "err": {},
                  "uuid": "e6fb138b-13c5-46e5-8596-732ab73c87dc",
                  "parentUUID": "5e13415d-c930-41c7-96f4-e60d4a201d56",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should add aria label for 1-800-234-1234",
                  "fullTitle": "markdownRenderer rendering telephone numbers should add aria label for 1-800-234-1234",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)(_markdownRenderer.default.render(\"[hi](tel:\".concat(phoneNumberLink, \")\"))).to.include(\"aria-label=\\\"\".concat(expectedLabel, \"\\\"\"));",
                  "err": {},
                  "uuid": "2461c26c-8434-4915-82d7-afb570438de9",
                  "parentUUID": "5e13415d-c930-41c7-96f4-e60d4a201d56",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should add aria label for +12223334444",
                  "fullTitle": "markdownRenderer rendering telephone numbers should add aria label for +12223334444",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)(_markdownRenderer.default.render(\"[hi](tel:\".concat(phoneNumberLink, \")\"))).to.include(\"aria-label=\\\"\".concat(expectedLabel, \"\\\"\"));",
                  "err": {},
                  "uuid": "d0b84bbf-ed66-4982-80e6-8b138ba20503",
                  "parentUUID": "5e13415d-c930-41c7-96f4-e60d4a201d56",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should add aria label for +1(222)333-4444",
                  "fullTitle": "markdownRenderer rendering telephone numbers should add aria label for +1(222)333-4444",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)(_markdownRenderer.default.render(\"[hi](tel:\".concat(phoneNumberLink, \")\"))).to.include(\"aria-label=\\\"\".concat(expectedLabel, \"\\\"\"));",
                  "err": {},
                  "uuid": "5cca3dc7-73a9-4a65-9123-6639b86e8723",
                  "parentUUID": "5e13415d-c930-41c7-96f4-e60d4a201d56",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "a8c5ddcd-0162-4a40-a587-dffbbc20d00f",
                "0c3e5ddb-0a2d-43f1-b7d4-68196d180624",
                "9048e5e7-f4c9-44dc-8c24-72385a4fa56c",
                "207ceab2-6ea6-44ca-ad47-441d3f0c605c",
                "434ceda2-ec21-4ebd-bf02-69a8cef40cd7",
                "9e586661-0e40-48ae-9c69-f6ddbc780964",
                "856e24ca-9a12-43f0-8971-199a5c3b5dc8",
                "e6fb138b-13c5-46e5-8596-732ab73c87dc",
                "2461c26c-8434-4915-82d7-afb570438de9",
                "d0b84bbf-ed66-4982-80e6-8b138ba20503",
                "5cca3dc7-73a9-4a65-9123-6639b86e8723"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 7,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "3985452d-9c05-4f0d-bf78-2dbd7fb79b87",
          "title": "replacing a message that includes pii with ****",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/virtual-agent/tests/utils/piiReplace.unit.spec.js",
          "file": "/src/applications/virtual-agent/tests/utils/piiReplace.unit.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should replace ssn's with ****",
              "fullTitle": "replacing a message that includes pii with **** should replace ssn's with ****",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var ssns = ['123-45-6789', '856-45-6789'];\nvar replacedMessage = '****';\nfor (var _i = 0, _ssns = ssns; _i < _ssns.length; _i++) {\n  var ssn = _ssns[_i];\n  (0, _chai.expect)((0, _piiReplace.default)(ssn)).to.equal(replacedMessage);\n}",
              "err": {},
              "uuid": "c3ea5f6d-269c-4e3e-a448-8f0260cbed9e",
              "parentUUID": "3985452d-9c05-4f0d-bf78-2dbd7fb79b87",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should replace multiple phone numbers with ****",
              "fullTitle": "replacing a message that includes pii with **** should replace multiple phone numbers with ****",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var phoneNumbers = ['123-456-7890', '(123) 456-7890', '123 456 7890', '123.456.7890'];\nvar replacedMessage = '****';\nfor (var _i2 = 0, _phoneNumbers = phoneNumbers; _i2 < _phoneNumbers.length; _i2++) {\n  var phoneNumber = _phoneNumbers[_i2];\n  (0, _chai.expect)((0, _piiReplace.default)(phoneNumber)).to.equal(replacedMessage);\n}",
              "err": {},
              "uuid": "f6fe5a38-3e64-416d-a436-8c71062adb8c",
              "parentUUID": "3985452d-9c05-4f0d-bf78-2dbd7fb79b87",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should replace multiple emails with ****",
              "fullTitle": "replacing a message that includes pii with **** should replace multiple emails with ****",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var emails = ['firstName@google.com', 'first.name@va.gov', 'fun-email@blahblah.tv', 'fadsfasdfasd@df.sasd'];\nvar replacedMessage = '****';\nfor (var _i3 = 0, _emails = emails; _i3 < _emails.length; _i3++) {\n  var email = _emails[_i3];\n  (0, _chai.expect)((0, _piiReplace.default)(email)).to.equal(replacedMessage);\n}",
              "err": {},
              "uuid": "8c659c55-5adf-48bd-b098-76c185bb0c02",
              "parentUUID": "3985452d-9c05-4f0d-bf78-2dbd7fb79b87",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should replace multiple pii's in a single message",
              "fullTitle": "replacing a message that includes pii with **** should replace multiple pii's in a single message",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var message = 'My email is firstName@google.com, my ssn is 123-45-6789, and my phone number is (123) 456-7890';\nvar replacedMessage = 'My email is ****, my ssn is ****, and my phone number is ****';\n(0, _chai.expect)((0, _piiReplace.default)(message)).to.equal(replacedMessage);",
              "err": {},
              "uuid": "69dcdd72-a8d7-42ee-b776-0e48f3e86924",
              "parentUUID": "3985452d-9c05-4f0d-bf78-2dbd7fb79b87",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "c3ea5f6d-269c-4e3e-a448-8f0260cbed9e",
            "f6fe5a38-3e64-416d-a436-8c71062adb8c",
            "8c659c55-5adf-48bd-b098-76c185bb0c02",
            "69dcdd72-a8d7-42ee-b776-0e48f3e86924"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "c031e9d5-5ec7-45e0-92d5-4908fb2652e6",
          "title": "does not replace invalid pii",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/virtual-agent/tests/utils/piiReplace.unit.spec.js",
          "file": "/src/applications/virtual-agent/tests/utils/piiReplace.unit.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should not replace an invalid ssn",
              "fullTitle": "does not replace invalid pii should not replace an invalid ssn",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var invalidSsns = ['000-45-6789', '8561-45-6789', '856-45-0000'];\nfor (var _i4 = 0, _invalidSsns = invalidSsns; _i4 < _invalidSsns.length; _i4++) {\n  var invalidSsn = _invalidSsns[_i4];\n  (0, _chai.expect)((0, _piiReplace.default)(invalidSsn)).to.equal(invalidSsn);\n}",
              "err": {},
              "uuid": "5da1f753-882f-4841-bad2-5b3e89bdb01b",
              "parentUUID": "c031e9d5-5ec7-45e0-92d5-4908fb2652e6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should not replace an invalid phone",
              "fullTitle": "does not replace invalid pii should not replace an invalid phone",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var invalidPhones = ['1123-456-78901', '1123 456 78901', '1123.456.78901'];\nfor (var _i5 = 0, _invalidPhones = invalidPhones; _i5 < _invalidPhones.length; _i5++) {\n  var invalidPhone = _invalidPhones[_i5];\n  (0, _chai.expect)((0, _piiReplace.default)(invalidPhone)).to.equal(invalidPhone);\n}",
              "err": {},
              "uuid": "6f084e8f-09f1-4aa7-91c1-f2f5f474650a",
              "parentUUID": "c031e9d5-5ec7-45e0-92d5-4908fb2652e6",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "5da1f753-882f-4841-bad2-5b3e89bdb01b",
            "6f084e8f-09f1-4aa7-91c1-f2f5f474650a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "0b836ddc-8e38-4d49-88ce-bb7b18e25033",
          "title": "processCSAT",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/virtual-agent/tests/utils/processCSAT.unit.spec.js",
          "file": "/src/applications/virtual-agent/tests/utils/processCSAT.unit.spec.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"processCSAT\"",
              "fullTitle": "processCSAT \"before each\" hook in \"processCSAT\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "sandbox = _sinon.default.sandbox.create();\ncolumns = [{\n  style: {\n    pointerEvents: 'not-none'\n  }\n}];\nstars = [{\n  src: 'some-url'\n}, {\n  src: 'some-url'\n}, {\n  src: 'some-url'\n}, {\n  src: 'some-url'\n}, {\n  src: 'some-url'\n}];\nsandbox.stub(document, 'querySelectorAll').returns([{\n  querySelectorAll: sandbox.stub().callsFake(function (query) {\n    if (query === '#chatbot-csat-survey-columnset') {\n      return columns;\n    }\n    if (query === 'img') {\n      return stars;\n    }\n    return sandbox.stub();\n  })\n}]);",
              "err": {},
              "uuid": "e1cc0cc4-db2c-4389-a264-4a522db2ec59",
              "parentUUID": "0b836ddc-8e38-4d49-88ce-bb7b18e25033",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after each\" hook in \"processCSAT\"",
              "fullTitle": "processCSAT \"after each\" hook in \"processCSAT\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "sandbox.restore();",
              "err": {},
              "uuid": "32d53b5e-86ad-4ed2-b240-481b2cb76ade",
              "parentUUID": "0b836ddc-8e38-4d49-88ce-bb7b18e25033",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Should disable the survey",
              "fullTitle": "processCSAT Should disable the survey",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, _processCSAT.default)({\n  value: {\n    response: '3'\n  }\n});\n(0, _chai.expect)(columns[0].style.pointerEvents).to.equal('none');",
              "err": {},
              "uuid": "5cbc2365-0ce9-449a-9513-0df55fc07c24",
              "parentUUID": "0b836ddc-8e38-4d49-88ce-bb7b18e25033",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should fill in the stars when a numerical rating is given",
              "fullTitle": "processCSAT Should fill in the stars when a numerical rating is given",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, _processCSAT.default)({\n  value: {\n    response: '3'\n  }\n});\n(0, _chai.expect)(stars[0].src).to.equal(_processCSAT.BLUE_STAR);\n(0, _chai.expect)(stars[1].src).to.equal(_processCSAT.BLUE_STAR);\n(0, _chai.expect)(stars[2].src).to.equal(_processCSAT.BLUE_STAR);\n(0, _chai.expect)(stars[3].src).to.equal('some-url');\n(0, _chai.expect)(stars[4].src).to.equal('some-url');",
              "err": {},
              "uuid": "a0c8c7e1-d5a5-47f3-a9b4-8cef7f369f7d",
              "parentUUID": "0b836ddc-8e38-4d49-88ce-bb7b18e25033",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should not fill in the stars when a non-numerical rating is given",
              "fullTitle": "processCSAT Should not fill in the stars when a non-numerical rating is given",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, _processCSAT.default)({\n  value: {\n    response: 'No response'\n  }\n});\n(0, _chai.expect)(stars[0].src).to.equal('some-url');\n(0, _chai.expect)(stars[1].src).to.equal('some-url');\n(0, _chai.expect)(stars[2].src).to.equal('some-url');\n(0, _chai.expect)(stars[3].src).to.equal('some-url');\n(0, _chai.expect)(stars[4].src).to.equal('some-url');",
              "err": {},
              "uuid": "fee8d4c6-19e9-4449-84f9-559ee15f78e5",
              "parentUUID": "0b836ddc-8e38-4d49-88ce-bb7b18e25033",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "5cbc2365-0ce9-449a-9513-0df55fc07c24",
            "a0c8c7e1-d5a5-47f3-a9b4-8cef7f369f7d",
            "fee8d4c6-19e9-4449-84f9-559ee15f78e5"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "6b8385bd-c0db-4fdc-a654-b05027ad585d",
          "title": "retryOnce",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/virtual-agent/tests/utils/retryOnce.unit.spec.js",
          "file": "/src/applications/virtual-agent/tests/utils/retryOnce.unit.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should return the result of the retryable function if it succeeds",
              "fullTitle": "retryOnce should return the result of the retryable function if it succeeds",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
              "err": {},
              "uuid": "664735bc-b752-4bd3-902e-6de91af77110",
              "parentUUID": "6b8385bd-c0db-4fdc-a654-b05027ad585d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should retry the function once if it fails and return the result",
              "fullTitle": "retryOnce should retry the function once if it fails and return the result",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
              "err": {},
              "uuid": "7c233255-76a9-4697-870e-cc50b7531bd7",
              "parentUUID": "6b8385bd-c0db-4fdc-a654-b05027ad585d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should throw an error if the retryable function fails twice",
              "fullTitle": "retryOnce should throw an error if the retryable function fails twice",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
              "err": {},
              "uuid": "e215464d-df7c-479c-b249-d85378a2f1eb",
              "parentUUID": "6b8385bd-c0db-4fdc-a654-b05027ad585d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "664735bc-b752-4bd3-902e-6de91af77110",
            "7c233255-76a9-4697-870e-cc50b7531bd7",
            "e215464d-df7c-479c-b249-d85378a2f1eb"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "824d815c-1d77-45f1-9515-f50b0959f0db",
          "title": "sessionStorage",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/virtual-agent/tests/utils/sessionStorage.unit.spec.js",
          "file": "/src/applications/virtual-agent/tests/utils/sessionStorage.unit.spec.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"sessionStorage\"",
              "fullTitle": "sessionStorage \"before each\" hook in \"sessionStorage\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "sandbox = _sinon.default.sandbox.create();",
              "err": {},
              "uuid": "4ab3f5bf-addb-4d96-8869-5b60e1d22fd4",
              "parentUUID": "824d815c-1d77-45f1-9515-f50b0959f0db",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after each\" hook in \"sessionStorage\"",
              "fullTitle": "sessionStorage \"after each\" hook in \"sessionStorage\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "sandbox.restore();\nsessionStorage.clear();",
              "err": {},
              "uuid": "6d67e75e-7044-4c48-a926-89f76d9e1a39",
              "parentUUID": "824d815c-1d77-45f1-9515-f50b0959f0db",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [],
          "suites": [
            {
              "uuid": "683d1687-70c9-46c0-a166-4948c5eb565e",
              "title": "loggedInFlow",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/virtual-agent/tests/utils/sessionStorage.unit.spec.js",
              "file": "/src/applications/virtual-agent/tests/utils/sessionStorage.unit.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should get logged in flow",
                  "fullTitle": "sessionStorage loggedInFlow should get logged in flow",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "sessionStorage.setItem('va-bot.loggedInFlow', 'true');\nvar result = (0, _sessionStorage.getLoggedInFlow)();\n(0, _chai.expect)(result).to.equal('true');",
                  "err": {},
                  "uuid": "d37ab4cb-d946-4c14-a966-ae6372e61aff",
                  "parentUUID": "683d1687-70c9-46c0-a166-4948c5eb565e",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should set logged in flow",
                  "fullTitle": "sessionStorage loggedInFlow should set logged in flow",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _sessionStorage.setLoggedInFlow)('true');\nvar result = sessionStorage.getItem('va-bot.loggedInFlow');\n(0, _chai.expect)(result).to.equal('true');",
                  "err": {},
                  "uuid": "373c6e41-86f0-4591-b9fb-97c40033e12c",
                  "parentUUID": "683d1687-70c9-46c0-a166-4948c5eb565e",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "d37ab4cb-d946-4c14-a966-ae6372e61aff",
                "373c6e41-86f0-4591-b9fb-97c40033e12c"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "3323e914-80e8-4d9e-b093-91474269dd39",
              "title": "inAuthExp",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/virtual-agent/tests/utils/sessionStorage.unit.spec.js",
              "file": "/src/applications/virtual-agent/tests/utils/sessionStorage.unit.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should get in auth exp",
                  "fullTitle": "sessionStorage inAuthExp should get in auth exp",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "sessionStorage.setItem('va-bot.inAuthExperience', 'true');\nvar result = (0, _sessionStorage.getInAuthExp)();\n(0, _chai.expect)(result).to.equal('true');",
                  "err": {},
                  "uuid": "925bc8c9-0646-4f6e-b8e8-77ebe6536aa3",
                  "parentUUID": "3323e914-80e8-4d9e-b093-91474269dd39",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should set in auth exp",
                  "fullTitle": "sessionStorage inAuthExp should set in auth exp",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _sessionStorage.setInAuthExp)('true');\nvar result = sessionStorage.getItem('va-bot.inAuthExperience');\n(0, _chai.expect)(result).to.equal('true');",
                  "err": {},
                  "uuid": "470acc3a-797b-493f-8f1e-c230e56b26a1",
                  "parentUUID": "3323e914-80e8-4d9e-b093-91474269dd39",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "925bc8c9-0646-4f6e-b8e8-77ebe6536aa3",
                "470acc3a-797b-493f-8f1e-c230e56b26a1"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "2029f916-3b86-40ad-a225-453e449ce454",
              "title": "recentUtterances",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/virtual-agent/tests/utils/sessionStorage.unit.spec.js",
              "file": "/src/applications/virtual-agent/tests/utils/sessionStorage.unit.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should get recent utterances",
                  "fullTitle": "sessionStorage recentUtterances should get recent utterances",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "sessionStorage.setItem('va-bot.recentUtterances', JSON.stringify(['utterance1', 'utterance2']));\nvar result = (0, _sessionStorage.getRecentUtterances)();\n(0, _chai.expect)(result).to.deep.equal(['utterance1', 'utterance2']);",
                  "err": {},
                  "uuid": "8666ee77-c0e7-457d-a0e8-8da59d6bbe48",
                  "parentUUID": "2029f916-3b86-40ad-a225-453e449ce454",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should set recent utterances",
                  "fullTitle": "sessionStorage recentUtterances should set recent utterances",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _sessionStorage.setRecentUtterances)(['utterance1', 'utterance2']);\nvar result = sessionStorage.getItem('va-bot.recentUtterances');\n(0, _chai.expect)(result).to.equal(JSON.stringify(['utterance1', 'utterance2']));",
                  "err": {},
                  "uuid": "99f4f61a-e17c-480a-8ab6-7bb537d78a43",
                  "parentUUID": "2029f916-3b86-40ad-a225-453e449ce454",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "8666ee77-c0e7-457d-a0e8-8da59d6bbe48",
                "99f4f61a-e17c-480a-8ab6-7bb537d78a43"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "58522cb7-3fdf-4e87-b851-ffe46915b17b",
              "title": "isRxSkill",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/virtual-agent/tests/utils/sessionStorage.unit.spec.js",
              "file": "/src/applications/virtual-agent/tests/utils/sessionStorage.unit.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should get rx skill",
                  "fullTitle": "sessionStorage isRxSkill should get rx skill",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "sessionStorage.setItem('va-bot.isRxSkill', true);\nvar result = (0, _sessionStorage.getIsRxSkill)();\n(0, _chai.expect)(result).to.equal('true');",
                  "err": {},
                  "uuid": "9a670be9-1f24-4237-b502-132bd2f6cb20",
                  "parentUUID": "58522cb7-3fdf-4e87-b851-ffe46915b17b",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should set rx skill",
                  "fullTitle": "sessionStorage isRxSkill should set rx skill",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _sessionStorage.setIsRxSkill)(true);\nvar result = sessionStorage.getItem('va-bot.isRxSkill');\n(0, _chai.expect)(result).to.equal('true');",
                  "err": {},
                  "uuid": "4254d7f9-35af-4931-b438-966026af3416",
                  "parentUUID": "58522cb7-3fdf-4e87-b851-ffe46915b17b",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "9a670be9-1f24-4237-b502-132bd2f6cb20",
                "4254d7f9-35af-4931-b438-966026af3416"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "d51d71f9-1132-42c8-8523-e510c0adf4f8",
              "title": "conversationIdKey",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/virtual-agent/tests/utils/sessionStorage.unit.spec.js",
              "file": "/src/applications/virtual-agent/tests/utils/sessionStorage.unit.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should get conversation id key",
                  "fullTitle": "sessionStorage conversationIdKey should get conversation id key",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "sessionStorage.setItem('va-bot.conversationId', 'abc');\nvar result = (0, _sessionStorage.getConversationIdKey)();\n(0, _chai.expect)(result).to.equal('abc');",
                  "err": {},
                  "uuid": "25e722ab-8aeb-4a19-8ac6-acc8eeb8736b",
                  "parentUUID": "d51d71f9-1132-42c8-8523-e510c0adf4f8",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should set conversation id key",
                  "fullTitle": "sessionStorage conversationIdKey should set conversation id key",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _sessionStorage.setConversationIdKey)('abc');\nvar result = sessionStorage.getItem('va-bot.conversationId');\n(0, _chai.expect)(result).to.equal('abc');",
                  "err": {},
                  "uuid": "2bf145b6-ff03-4bab-a54b-2053b0741983",
                  "parentUUID": "d51d71f9-1132-42c8-8523-e510c0adf4f8",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "25e722ab-8aeb-4a19-8ac6-acc8eeb8736b",
                "2bf145b6-ff03-4bab-a54b-2053b0741983"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "f8d3f2e7-fab3-4e27-914f-039dd274ea00",
              "title": "isTrackingUtterances",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/virtual-agent/tests/utils/sessionStorage.unit.spec.js",
              "file": "/src/applications/virtual-agent/tests/utils/sessionStorage.unit.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should get is tracking utterances",
                  "fullTitle": "sessionStorage isTrackingUtterances should get is tracking utterances",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "sessionStorage.setItem('va-bot.isTrackingUtterances', true);\nvar result = (0, _sessionStorage.getIsTrackingUtterances)();\n(0, _chai.expect)(result).to.equal('true');",
                  "err": {},
                  "uuid": "ff3caf5d-19cb-45b1-96ae-8f99376474d8",
                  "parentUUID": "f8d3f2e7-fab3-4e27-914f-039dd274ea00",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should set is tracking utterances",
                  "fullTitle": "sessionStorage isTrackingUtterances should set is tracking utterances",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _sessionStorage.setIsTrackingUtterances)(true);\nvar result = sessionStorage.getItem('va-bot.isTrackingUtterances');\n(0, _chai.expect)(result).to.equal('true');",
                  "err": {},
                  "uuid": "019e1ca4-380c-48fb-b6eb-a0151f1b8670",
                  "parentUUID": "f8d3f2e7-fab3-4e27-914f-039dd274ea00",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "ff3caf5d-19cb-45b1-96ae-8f99376474d8",
                "019e1ca4-380c-48fb-b6eb-a0151f1b8670"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "80e5a9b8-a0b7-4063-aa99-38d3c7e45b3f",
              "title": "tokenKey",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/virtual-agent/tests/utils/sessionStorage.unit.spec.js",
              "file": "/src/applications/virtual-agent/tests/utils/sessionStorage.unit.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should get token key",
                  "fullTitle": "sessionStorage tokenKey should get token key",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "sessionStorage.setItem('va-bot.token', 'def');\nvar result = (0, _sessionStorage.getTokenKey)();\n(0, _chai.expect)(result).to.equal('def');",
                  "err": {},
                  "uuid": "e7013c4a-7624-4d1d-9590-05831dabaa73",
                  "parentUUID": "80e5a9b8-a0b7-4063-aa99-38d3c7e45b3f",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should set token key",
                  "fullTitle": "sessionStorage tokenKey should set token key",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _sessionStorage.setTokenKey)('def');\nvar result = sessionStorage.getItem('va-bot.token');\n(0, _chai.expect)(result).to.equal('def');",
                  "err": {},
                  "uuid": "beaf3116-9059-4ed1-b2be-d3ca49ddfc75",
                  "parentUUID": "80e5a9b8-a0b7-4063-aa99-38d3c7e45b3f",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "e7013c4a-7624-4d1d-9590-05831dabaa73",
                "beaf3116-9059-4ed1-b2be-d3ca49ddfc75"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "31f49844-61af-4f99-aed2-af4501fd41f1",
              "title": "clearBotSessionStorage",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/virtual-agent/tests/utils/sessionStorage.unit.spec.js",
              "file": "/src/applications/virtual-agent/tests/utils/sessionStorage.unit.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should clear bot session storage items with prefixed keys when forceClear is true",
                  "fullTitle": "sessionStorage clearBotSessionStorage should clear bot session storage items with prefixed keys when forceClear is true",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "// Set up the sessionStorage mock with the desired values\n(0, _sessionStorage.setLoggedInFlow)('true');\n(0, _sessionStorage.setInAuthExp)('true');\nsessionStorage.setItem('itemToNotClear', 'apple');\n(0, _sessionStorage.clearBotSessionStorage)(true);\nvar loggedInFlow = (0, _sessionStorage.getLoggedInFlow)();\nvar inAuthExp = (0, _sessionStorage.getInAuthExp)();\nvar itemToClear = sessionStorage.getItem('itemToNotClear');\n(0, _chai.expect)(loggedInFlow).to.be.null;\n(0, _chai.expect)(inAuthExp).to.be.null;\n(0, _chai.expect)(itemToClear).to.equal('apple');",
                  "err": {},
                  "uuid": "a2c493c3-44be-4a9f-8a65-e6e146092f67",
                  "parentUUID": "31f49844-61af-4f99-aed2-af4501fd41f1",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should exclude specific keys from clearing when loggedInFlow is true and inAuthExp is false",
                  "fullTitle": "sessionStorage clearBotSessionStorage should exclude specific keys from clearing when loggedInFlow is true and inAuthExp is false",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "// Set up the sessionStorage mock with the desired values\n(0, _sessionStorage.setLoggedInFlow)('true');\n(0, _sessionStorage.setInAuthExp)('false');\n(0, _sessionStorage.setRecentUtterances)(['apple']);\n(0, _sessionStorage.setConversationIdKey)('orange');\n(0, _sessionStorage.setTokenKey)('grape');\nsessionStorage.setItem('va-bot.itemToClear', 'banana');\n(0, _sessionStorage.clearBotSessionStorage)(false);\nvar itemToClear = sessionStorage.getItem('va-bot.itemToClear');\nvar loggedInFlow = (0, _sessionStorage.getLoggedInFlow)();\nvar recentUtterances = (0, _sessionStorage.getRecentUtterances)();\nvar conversationIdKey = (0, _sessionStorage.getConversationIdKey)();\nvar tokenKey = (0, _sessionStorage.getTokenKey)();\n(0, _chai.expect)(itemToClear).to.be.null;\n(0, _chai.expect)(loggedInFlow).to.equal('true');\n(0, _chai.expect)(recentUtterances).to.deep.equal(['apple']);\n(0, _chai.expect)(conversationIdKey).to.equal('orange');\n(0, _chai.expect)(tokenKey).to.equal('grape');",
                  "err": {},
                  "uuid": "2623db36-ca4d-443d-b62c-6e8828a97435",
                  "parentUUID": "31f49844-61af-4f99-aed2-af4501fd41f1",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should do nothing when in auth experience but logged out",
                  "fullTitle": "sessionStorage clearBotSessionStorage should do nothing when in auth experience but logged out",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _sessionStorage.setInAuthExp)('true');\n(0, _sessionStorage.setLoggedInFlow)('false');\nsessionStorage.setItem('va-bot.itemToNotClear', 'strawberry');\n(0, _sessionStorage.clearBotSessionStorage)(false);\nvar itemToNotClear = sessionStorage.getItem('va-bot.itemToNotClear');\n(0, _chai.expect)(itemToNotClear).to.be.equal('strawberry');",
                  "err": {},
                  "uuid": "5a7b0f52-cad7-4d0a-8efc-125b277751b0",
                  "parentUUID": "31f49844-61af-4f99-aed2-af4501fd41f1",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "a2c493c3-44be-4a9f-8a65-e6e146092f67",
                "2623db36-ca4d-443d-b62c-6e8828a97435",
                "5a7b0f52-cad7-4d0a-8efc-125b277751b0"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 3,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "f3c27287-907c-4e45-8520-dfa9ce0f2079",
              "title": "storeUtterances",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/virtual-agent/tests/utils/sessionStorage.unit.spec.js",
              "file": "/src/applications/virtual-agent/tests/utils/sessionStorage.unit.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should store the last two user utterances",
                  "fullTitle": "sessionStorage storeUtterances should store the last two user utterances",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var event1 = {\n  data: {\n    type: 'message',\n    text: 'Hello',\n    from: {\n      role: 'user'\n    }\n  }\n};\nvar event2 = {\n  data: {\n    type: 'message',\n    text: 'Hello',\n    from: {\n      role: 'user'\n    }\n  }\n};\n(0, _sessionStorage.storeUtterances)(event1);\n(0, _sessionStorage.storeUtterances)(event2);\nvar storedUtterances = (0, _sessionStorage.getRecentUtterances)();\n(0, _chai.expect)(storedUtterances).to.deep.equal(['Hello', 'Hello']);",
                  "err": {},
                  "uuid": "262be551-cd29-4968-ada2-a361239ddc49",
                  "parentUUID": "f3c27287-907c-4e45-8520-dfa9ce0f2079",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should not store utterances if the event role is not a user",
                  "fullTitle": "sessionStorage storeUtterances should not store utterances if the event role is not a user",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var event = {\n  data: {\n    type: 'message',\n    text: 'Hello',\n    from: {\n      role: 'bot'\n    }\n  }\n};\n(0, _sessionStorage.storeUtterances)(event);\nvar storedUtterances = (0, _sessionStorage.getRecentUtterances)();\n(0, _chai.expect)(storedUtterances).to.be.null;",
                  "err": {},
                  "uuid": "1e93aa08-d300-4556-a5de-bb59965a49fc",
                  "parentUUID": "f3c27287-907c-4e45-8520-dfa9ce0f2079",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should not store utterances if the event text is empty",
                  "fullTitle": "sessionStorage storeUtterances should not store utterances if the event text is empty",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var event = {\n  data: {\n    type: 'message',\n    text: '',\n    from: {\n      role: 'user'\n    }\n  }\n};\n(0, _sessionStorage.storeUtterances)(event);\nvar storedUtterances = (0, _sessionStorage.getRecentUtterances)();\n(0, _chai.expect)(storedUtterances).to.be.null;",
                  "err": {},
                  "uuid": "5e0d6855-8623-4567-b1df-12ef153247e5",
                  "parentUUID": "f3c27287-907c-4e45-8520-dfa9ce0f2079",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should not store utterances if the event text is missing",
                  "fullTitle": "sessionStorage storeUtterances should not store utterances if the event text is missing",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var event = {\n  data: {\n    type: 'message',\n    from: {\n      role: 'user'\n    }\n  }\n};\n(0, _sessionStorage.storeUtterances)(event);\nvar storedUtterances = JSON.parse(sessionStorage.getItem('RECENT_UTTERANCES'));\n(0, _chai.expect)(storedUtterances).to.be.null;",
                  "err": {},
                  "uuid": "fca34f2d-ac9e-4917-9c35-c00aa0e5864d",
                  "parentUUID": "f3c27287-907c-4e45-8520-dfa9ce0f2079",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "262be551-cd29-4968-ada2-a361239ddc49",
                "1e93aa08-d300-4556-a5de-bb59965a49fc",
                "5e0d6855-8623-4567-b1df-12ef153247e5",
                "fca34f2d-ac9e-4917-9c35-c00aa0e5864d"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "3ee418ac-63df-4dd1-bbac-6158ccc4b3df",
          "title": "startConvoAndTrackUtterances",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/virtual-agent/tests/utils/startConvoAndTrackUtterances.unit.spec.js",
          "file": "/src/applications/virtual-agent/tests/utils/startConvoAndTrackUtterances.unit.spec.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"startConvoAndTrackUtterances\"",
              "fullTitle": "startConvoAndTrackUtterances \"before each\" hook in \"startConvoAndTrackUtterances\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "sandbox = _sinon.default.sandbox.create();",
              "err": {},
              "uuid": "adad67e0-0056-42a2-8a08-c50ad4a7d478",
              "parentUUID": "3ee418ac-63df-4dd1-bbac-6158ccc4b3df",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after each\" hook in \"startConvoAndTrackUtterances\"",
              "fullTitle": "startConvoAndTrackUtterances \"after each\" hook in \"startConvoAndTrackUtterances\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "sandbox.restore();",
              "err": {},
              "uuid": "175a6f2b-1667-4a0c-9ce0-c393007bf905",
              "parentUUID": "3ee418ac-63df-4dd1-bbac-6158ccc4b3df",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [],
          "suites": [
            {
              "uuid": "4798ef41-06e4-4c82-9103-38be25263d6c",
              "title": "makeBotStartConvoAndTrackUtterances",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/virtual-agent/tests/utils/startConvoAndTrackUtterances.unit.spec.js",
              "file": "/src/applications/virtual-agent/tests/utils/startConvoAndTrackUtterances.unit.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should call processActionConnectFulfilled when action is DIRECT_LINE/CONNECT_FULFILLED",
                  "fullTitle": "startConvoAndTrackUtterances makeBotStartConvoAndTrackUtterances should call processActionConnectFulfilled when action is DIRECT_LINE/CONNECT_FULFILLED",
                  "timedOut": false,
                  "duration": 4,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
                  "err": {},
                  "uuid": "2932a198-8c96-4397-a7b0-3f1be33644b1",
                  "parentUUID": "4798ef41-06e4-4c82-9103-38be25263d6c",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should call processIncomingActivity when action is DIRECT_LINE/INCOMING_ACTIVITY",
                  "fullTitle": "startConvoAndTrackUtterances makeBotStartConvoAndTrackUtterances should call processIncomingActivity when action is DIRECT_LINE/INCOMING_ACTIVITY",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
                  "err": {},
                  "uuid": "0aad0578-f2c7-4324-aa51-85f44a9ee44b",
                  "parentUUID": "4798ef41-06e4-4c82-9103-38be25263d6c",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should call procesSendMessageActivity when action is WEB_CHAT/SEND_MESSAGE",
                  "fullTitle": "startConvoAndTrackUtterances makeBotStartConvoAndTrackUtterances should call procesSendMessageActivity when action is WEB_CHAT/SEND_MESSAGE",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
                  "err": {},
                  "uuid": "6eece809-0fe7-4e5c-8ba7-e58fe1a167b6",
                  "parentUUID": "4798ef41-06e4-4c82-9103-38be25263d6c",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should call processMicrophoneActivity when action is WEB_CHAT/SET_DICTATE_STATE",
                  "fullTitle": "startConvoAndTrackUtterances makeBotStartConvoAndTrackUtterances should call processMicrophoneActivity when action is WEB_CHAT/SET_DICTATE_STATE",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
                  "err": {},
                  "uuid": "6288281a-e3fb-4819-84ca-5ab4d0137b5b",
                  "parentUUID": "4798ef41-06e4-4c82-9103-38be25263d6c",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should not call addActivityData for an unknown event if root-bot toggle off",
                  "fullTitle": "startConvoAndTrackUtterances makeBotStartConvoAndTrackUtterances should not call addActivityData for an unknown event if root-bot toggle off",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
                  "err": {},
                  "uuid": "e96a3714-3131-4ce8-ae3c-e9f18cc21bb6",
                  "parentUUID": "4798ef41-06e4-4c82-9103-38be25263d6c",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should call addActivityData for an unknown event if root-bot toggle on",
                  "fullTitle": "startConvoAndTrackUtterances makeBotStartConvoAndTrackUtterances should call addActivityData for an unknown event if root-bot toggle on",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
                  "err": {},
                  "uuid": "79fb63f0-8bd0-46f9-a0a9-8a496982a33f",
                  "parentUUID": "4798ef41-06e4-4c82-9103-38be25263d6c",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should call addActivityData for a known event if root-bot toggle on",
                  "fullTitle": "startConvoAndTrackUtterances makeBotStartConvoAndTrackUtterances should call addActivityData for a known event if root-bot toggle on",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
                  "err": {},
                  "uuid": "b16577e6-bf21-4421-b0b9-e15647fc97d4",
                  "parentUUID": "4798ef41-06e4-4c82-9103-38be25263d6c",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should not call addActivityData for a known event if root-bot toggle off",
                  "fullTitle": "startConvoAndTrackUtterances makeBotStartConvoAndTrackUtterances should not call addActivityData for a known event if root-bot toggle off",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
                  "err": {},
                  "uuid": "06ecb0e7-9a14-4400-a9d2-a388ac489799",
                  "parentUUID": "4798ef41-06e4-4c82-9103-38be25263d6c",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should not call any of the process function when action is unknown",
                  "fullTitle": "startConvoAndTrackUtterances makeBotStartConvoAndTrackUtterances should not call any of the process function when action is unknown",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
                  "err": {},
                  "uuid": "b25731f9-44f8-4f06-8949-7d4007d2f1e5",
                  "parentUUID": "4798ef41-06e4-4c82-9103-38be25263d6c",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "2932a198-8c96-4397-a7b0-3f1be33644b1",
                "0aad0578-f2c7-4324-aa51-85f44a9ee44b",
                "6eece809-0fe7-4e5c-8ba7-e58fe1a167b6",
                "6288281a-e3fb-4819-84ca-5ab4d0137b5b",
                "e96a3714-3131-4ce8-ae3c-e9f18cc21bb6",
                "79fb63f0-8bd0-46f9-a0a9-8a496982a33f",
                "b16577e6-bf21-4421-b0b9-e15647fc97d4",
                "06ecb0e7-9a14-4400-a9d2-a388ac489799",
                "b25731f9-44f8-4f06-8949-7d4007d2f1e5"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 9,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "86050080-036e-4dd3-8b5f-3c690dbd2447",
          "title": "createForm",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/virtual-agent/tests/utils/submitForm.unit.spec.js",
          "file": "/src/applications/virtual-agent/tests/utils/submitForm.unit.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should create a form with the correct method, action, and target",
              "fullTitle": "createForm should create a form with the correct method, action, and target",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var form = (0, _submitForm.createForm)(action, {}, method);\n(0, _chai.expect)(form.method).to.equal(method);\n(0, _chai.expect)(form.action).to.equal(action);\n(0, _chai.expect)(form.target).to.equal(target);",
              "err": {},
              "uuid": "f2ac335c-6c2a-4735-8fbd-0dd8bac51318",
              "parentUUID": "86050080-036e-4dd3-8b5f-3c690dbd2447",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should create hidden fields with the correct names and values",
              "fullTitle": "createForm should create hidden fields with the correct names and values",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var form = (0, _submitForm.createForm)(action, params, method);\nvar formHiddenFields = Array.from(form.querySelectorAll('input'));\n(0, _chai.expect)(formHiddenFields.length).to.equal(Object.keys(params).length);\nformHiddenFields.forEach(function (hiddenField) {\n  var fieldName = hiddenField.name;\n  var fieldValue = hiddenField.value;\n  (0, _chai.expect)(fieldName).to.be.oneOf(Object.keys(params));\n  (0, _chai.expect)(fieldValue).to.equal(params[fieldName]);\n  (0, _chai.expect)(hiddenField.type).to.equal('hidden');\n});",
              "err": {},
              "uuid": "5f9d030f-fe49-4040-ba74-707ff1719adc",
              "parentUUID": "86050080-036e-4dd3-8b5f-3c690dbd2447",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f2ac335c-6c2a-4735-8fbd-0dd8bac51318",
            "5f9d030f-fe49-4040-ba74-707ff1719adc"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "6fa62f21-eacb-4b52-8b9f-09b16bdcfd80",
          "title": "submitForm",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/virtual-agent/tests/utils/submitForm.unit.spec.js",
          "file": "/src/applications/virtual-agent/tests/utils/submitForm.unit.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Should submit form with the correct method, action, and target",
              "fullTitle": "submitForm Should submit form with the correct method, action, and target",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var removeSpy = _sinon.default.spy();\nvar submitSpy = _sinon.default.spy();\n_sinon.default.stub(document, 'createElement').returns({\n  remove: removeSpy,\n  submit: submitSpy\n});\nvar appendStub = _sinon.default.stub(document.body, 'appendChild');\n(0, _submitForm.default)(action, {});\n(0, _chai.expect)(appendStub.calledOnce).to.be.true;\n(0, _chai.expect)(submitSpy.calledOnce).to.be.true;\n(0, _chai.expect)(removeSpy.calledOnce).to.be.true;",
              "err": {},
              "uuid": "97e4d021-b2a3-44fe-a8e4-30c6337e37f5",
              "parentUUID": "6fa62f21-eacb-4b52-8b9f-09b16bdcfd80",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "97e4d021-b2a3-44fe-a8e4-30c6337e37f5"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "3fb31016-284c-4c12-9774-d6648fe75e78",
          "title": "tracking",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/virtual-agent/tests/utils/telemetry.unit.spec.js",
          "file": "/src/applications/virtual-agent/tests/utils/telemetry.unit.spec.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"tracking\"",
              "fullTitle": "tracking \"before each\" hook in \"tracking\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "sandbox = _sinon.default.sandbox.create();\nclock = _sinon.default.useFakeTimers({\n  now: now,\n  toFake: ['setTimeout', 'clearTimeout', 'Date']\n});",
              "err": {},
              "uuid": "af8e052b-652b-4ba8-b3d8-9653fe9d4b62",
              "parentUUID": "3fb31016-284c-4c12-9774-d6648fe75e78",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after each\" hook in \"tracking\"",
              "fullTitle": "tracking \"after each\" hook in \"tracking\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "sandbox.restore();\nclock.restore();",
              "err": {},
              "uuid": "9778d8d7-d222-4975-8729-853a6a7c9a6d",
              "parentUUID": "3fb31016-284c-4c12-9774-d6648fe75e78",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [],
          "suites": [
            {
              "uuid": "6a203bfe-b0db-44bf-808f-41b4cff60ff9",
              "title": "handleTelemetry",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/virtual-agent/tests/utils/telemetry.unit.spec.js",
              "file": "/src/applications/virtual-agent/tests/utils/telemetry.unit.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should  call recordEvent when a user submits a message",
                  "fullTitle": "tracking handleTelemetry should  call recordEvent when a user submits a message",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var recordEventStub = sandbox.stub(RecordEventModule, 'default');\nvar event = {\n  name: 'submitSendBox'\n};\nvar recordEventData = {\n  event: 'cta-button-click',\n  'button-type': 'default',\n  'button-click-label': 'submitSendBox',\n  'button-background-color': 'gray',\n  time: now\n};\n(0, _telemetry.default)(event);\n(0, _chai.expect)(recordEventStub.calledOnce).to.be.true;\n(0, _chai.expect)(recordEventStub.firstCall.args[0]).to.deep.equal(recordEventData);",
                  "err": {},
                  "uuid": "d56f7418-fe67-4b41-9711-e9b19b096a42",
                  "parentUUID": "6a203bfe-b0db-44bf-808f-41b4cff60ff9",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should  call recordEvent when a user submits a message",
                  "fullTitle": "tracking handleTelemetry should  call recordEvent when a user submits a message",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var recordEventStub = sandbox.stub(RecordEventModule, 'default');\nvar event = {\n  name: 'other-event'\n};\n(0, _telemetry.default)(event);\n(0, _chai.expect)(recordEventStub.notCalled).to.be.true;",
                  "err": {},
                  "uuid": "90bdde85-1f45-44bf-9dc5-40bea0831056",
                  "parentUUID": "6a203bfe-b0db-44bf-808f-41b4cff60ff9",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "d56f7418-fe67-4b41-9711-e9b19b096a42",
                "90bdde85-1f45-44bf-9dc5-40bea0831056"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "d701d7a3-72a9-460f-b937-759c7f7306bd",
          "title": "validateParameters",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/virtual-agent/tests/utils/validateParameters.unit.spec.js",
          "file": "/src/applications/virtual-agent/tests/utils/validateParameters.unit.spec.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"validateParameters\"",
              "fullTitle": "validateParameters \"before each\" hook in \"validateParameters\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "sandbox = _sinon.default.sandbox.create();",
              "err": {},
              "uuid": "7a3988f5-af16-4601-aaa6-41b3c5512e28",
              "parentUUID": "d701d7a3-72a9-460f-b937-759c7f7306bd",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after each\" hook in \"validateParameters\"",
              "fullTitle": "validateParameters \"after each\" hook in \"validateParameters\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "sandbox.restore();",
              "err": {},
              "uuid": "a82511fa-8b0b-45fa-bbdc-13f524bd44f0",
              "parentUUID": "d701d7a3-72a9-460f-b937-759c7f7306bd",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [],
          "suites": [
            {
              "uuid": "2f7a0431-38bc-4cdf-a593-0f4c30ce7f3f",
              "title": "validateParameters",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/virtual-agent/tests/utils/validateParameters.unit.spec.js",
              "file": "/src/applications/virtual-agent/tests/utils/validateParameters.unit.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should not call setParamLoadingStatusFn if all parameters are valid",
                  "fullTitle": "validateParameters validateParameters should not call setParamLoadingStatusFn if all parameters are valid",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var setParamLoadingStatusFn = sandbox.spy();\n(0, _validateParameters.default)({\n  csrfToken: csrfToken,\n  apiSession: apiSession,\n  userFirstName: userFirstName,\n  userUuid: userUuid,\n  setParamLoadingStatusFn: setParamLoadingStatusFn\n});\n(0, _chai.expect)(setParamLoadingStatusFn.notCalled).to.be.true;",
                  "err": {},
                  "uuid": "bd5e14bf-9445-473e-bd67-24e0950950e7",
                  "parentUUID": "2f7a0431-38bc-4cdf-a593-0f4c30ce7f3f",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should call setParamLoadingStatusFn with ERROR if any parameter is missing",
                  "fullTitle": "validateParameters validateParameters should call setParamLoadingStatusFn with ERROR if any parameter is missing",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var setParamLoadingStatusFn = sandbox.spy();\n(0, _validateParameters.default)({\n  csrfToken: null,\n  apiSession: apiSession,\n  userFirstName: userFirstName,\n  userUuid: userUuid,\n  setParamLoadingStatusFn: setParamLoadingStatusFn\n});\n(0, _chai.expect)(setParamLoadingStatusFn.calledOnce).to.be.true;\n(0, _chai.expect)(setParamLoadingStatusFn.calledWithExactly(_loadingStatus.ERROR));",
                  "err": {},
                  "uuid": "f95c9c34-bd91-4ef5-9460-5e7555ae13ef",
                  "parentUUID": "2f7a0431-38bc-4cdf-a593-0f4c30ce7f3f",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should capture exception when csrfToken is missing",
                  "fullTitle": "validateParameters validateParameters should capture exception when csrfToken is missing",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var setParamLoadingStatusFn = sandbox.spy();\nvar captureExceptionStub = sandbox.stub(Sentry, Sentry.captureException.name);\nvar logErrorToDatadogStub = sandbox.stub(logging, 'logErrorToDatadog');\n(0, _validateParameters.default)({\n  csrfToken: null,\n  apiSession: apiSession,\n  userFirstName: userFirstName,\n  userUuid: userUuid,\n  setParamLoadingStatusFn: setParamLoadingStatusFn\n});\n(0, _chai.expect)(captureExceptionStub.calledOnce).to.be.true;\n(0, _chai.expect)(captureExceptionStub.calledWith(new TypeError('Virtual Agent chatbot bad start - missing required variables: {\"csrfToken\":null}')));\n(0, _chai.expect)(logErrorToDatadogStub.calledOnce).to.be.true;\n(0, _chai.expect)(logErrorToDatadogStub.calledWith(new TypeError('Virtual Agent chatbot bad start - missing required variables: {\"csrfToken\":null}')));",
                  "err": {},
                  "uuid": "1dbcf199-6491-46e7-9f02-3fb04f335fab",
                  "parentUUID": "2f7a0431-38bc-4cdf-a593-0f4c30ce7f3f",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should capture exception when apiSession is missing",
                  "fullTitle": "validateParameters validateParameters should capture exception when apiSession is missing",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var setParamLoadingStatusFn = sandbox.spy();\nvar captureExceptionStub = sandbox.stub(Sentry, Sentry.captureException.name);\nvar logErrorToDatadogStub = sandbox.stub(logging, 'logErrorToDatadog');\n(0, _validateParameters.default)({\n  csrfToken: csrfToken,\n  apiSession: null,\n  userFirstName: userFirstName,\n  userUuid: userUuid,\n  setParamLoadingStatusFn: setParamLoadingStatusFn\n});\n(0, _chai.expect)(captureExceptionStub.calledOnce).to.be.true;\n(0, _chai.expect)(captureExceptionStub.calledWith(new TypeError('Virtual Agent chatbot bad start - missing required variables: {\"apiSession\":null}')));\n(0, _chai.expect)(logErrorToDatadogStub.calledOnce).to.be.true;\n(0, _chai.expect)(logErrorToDatadogStub.calledWith(new TypeError('Virtual Agent chatbot bad start - missing required variables: {\"apiSession\":null}')));",
                  "err": {},
                  "uuid": "b69892ae-e6bd-4412-bcc2-3cc49a4eb56a",
                  "parentUUID": "2f7a0431-38bc-4cdf-a593-0f4c30ce7f3f",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should capture exception when userFirstName is not a string",
                  "fullTitle": "validateParameters validateParameters should capture exception when userFirstName is not a string",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var setParamLoadingStatusFn = sandbox.spy();\nvar captureExceptionStub = sandbox.stub(Sentry, Sentry.captureException.name);\nvar logErrorToDatadogStub = sandbox.stub(logging, 'logErrorToDatadog');\n(0, _validateParameters.default)({\n  csrfToken: csrfToken,\n  apiSession: apiSession,\n  userFirstName: 1,\n  userUuid: userUuid,\n  setParamLoadingStatusFn: setParamLoadingStatusFn\n});\n(0, _chai.expect)(captureExceptionStub.calledOnce).to.be.true;\n(0, _chai.expect)(captureExceptionStub.calledWith(new TypeError('Virtual Agent chatbot bad start - missing required variables: {\"apiSession\":null}')));\n(0, _chai.expect)(logErrorToDatadogStub.calledOnce).to.be.true;\n(0, _chai.expect)(logErrorToDatadogStub.calledWith(new TypeError('Virtual Agent chatbot bad start - missing required variables: {\"apiSession\":null}')));",
                  "err": {},
                  "uuid": "a77a61ed-19fc-498e-8820-97bdb30c5609",
                  "parentUUID": "2f7a0431-38bc-4cdf-a593-0f4c30ce7f3f",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should capture exception when userUuid is not a string",
                  "fullTitle": "validateParameters validateParameters should capture exception when userUuid is not a string",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var setParamLoadingStatusFn = sandbox.spy();\nvar captureExceptionStub = sandbox.stub(Sentry, Sentry.captureException.name);\nvar logErrorToDatadogStub = sandbox.stub(logging, 'logErrorToDatadog');\n(0, _validateParameters.default)({\n  csrfToken: csrfToken,\n  apiSession: apiSession,\n  userFirstName: userFirstName,\n  userUuid: 1,\n  setParamLoadingStatusFn: setParamLoadingStatusFn\n});\n(0, _chai.expect)(captureExceptionStub.calledOnce).to.be.true;\n(0, _chai.expect)(captureExceptionStub.calledWith(new TypeError('Virtual Agent chatbot bad start - missing required variables: {\"apiSession\":null}')));\n(0, _chai.expect)(logErrorToDatadogStub.calledOnce).to.be.true;\n(0, _chai.expect)(logErrorToDatadogStub.calledWith(new TypeError('Virtual Agent chatbot bad start - missing required variables: {\"apiSession\":null}')));",
                  "err": {},
                  "uuid": "91ebde03-0bd2-4e3b-a3d1-39d8e7d915af",
                  "parentUUID": "2f7a0431-38bc-4cdf-a593-0f4c30ce7f3f",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "bd5e14bf-9445-473e-bd67-24e0950950e7",
                "f95c9c34-bd91-4ef5-9460-5e7555ae13ef",
                "1dbcf199-6491-46e7-9f02-3fb04f335fab",
                "b69892ae-e6bd-4412-bcc2-3cc49a4eb56a",
                "a77a61ed-19fc-498e-8820-97bdb30c5609",
                "91ebde03-0bd2-4e3b-a3d1-39d8e7d915af"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 6,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 10000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.7.3"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "undefined_2025-03-03T223144370Z",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "min",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "id": "default",
        "consoleReporter": "min",
        "reportDir": "mocha/results",
        "reportFilename": "undefined_2025-03-03T223144370Z",
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}