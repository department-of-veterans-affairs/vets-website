{
  "stats": {
    "suites": 336,
    "tests": 801,
    "passes": 797,
    "pending": 4,
    "failures": 0,
    "start": "2025-03-03T22:13:49.715Z",
    "end": "2025-03-03T22:14:21.055Z",
    "duration": 31340,
    "testsRegistered": 801,
    "passPercent": 100,
    "pendingPercent": 0.4993757802746567,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "22dd8805-867d-46cb-ba82-b0f76ab7ca2a",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [
        {
          "title": "\"before each\" hook: beforeEach in \"{root}\"",
          "fullTitle": "\"before each\" hook: beforeEach in \"{root}\"",
          "timedOut": false,
          "duration": 2,
          "state": null,
          "speed": null,
          "pass": false,
          "fail": false,
          "pending": false,
          "context": null,
          "code": "cov_5fzq6lsur().f[20]++;\ncov_5fzq6lsur().s[70]++;\nsetupJSDom();\ncov_5fzq6lsur().s[71]++;\nresetFetch();\ncov_5fzq6lsur().s[72]++;\ncleanupStorage();\ncov_5fzq6lsur().s[73]++;\nif (isStressTest == 'false') {\n  cov_5fzq6lsur().b[12][0]++;\n  cov_5fzq6lsur().s[74]++;\n  checkAllowList(this);\n} else {\n  cov_5fzq6lsur().b[12][1]++;\n}\ncov_5fzq6lsur().s[75]++;\nif ((cov_5fzq6lsur().b[14][0]++, process.env.CI) || (cov_5fzq6lsur().b[14][1]++, ['trace', 'debug'].includes(process.env.LOG_LEVEL))) {\n  cov_5fzq6lsur().b[13][0]++;\n  cov_5fzq6lsur().s[76]++;\n  console.log('running: ', this.currentTest.file.slice(this.currentTest.file.indexOf('src')));\n} else {\n  cov_5fzq6lsur().b[13][1]++;\n}",
          "err": {},
          "uuid": "529f0858-1ad4-4c2c-b051-e5ccd98d53e3",
          "parentUUID": "22dd8805-867d-46cb-ba82-b0f76ab7ca2a",
          "isHook": true,
          "skipped": false
        },
        {
          "title": "\"before each\" hook in \"{root}\"",
          "fullTitle": "\"before each\" hook in \"{root}\"",
          "timedOut": false,
          "duration": 0,
          "state": null,
          "speed": null,
          "pass": false,
          "fail": false,
          "pending": false,
          "context": null,
          "code": "restoreConsole = suppressErrorOutput();",
          "err": {},
          "uuid": "c852ab38-5a25-4d40-813e-df9fd5d9e6f2",
          "parentUUID": "22dd8805-867d-46cb-ba82-b0f76ab7ca2a",
          "isHook": true,
          "skipped": false
        }
      ],
      "afterHooks": [
        {
          "title": "\"after each\" hook: afterEach in \"{root}\"",
          "fullTitle": "\"after each\" hook: afterEach in \"{root}\"",
          "timedOut": false,
          "duration": 0,
          "state": null,
          "speed": null,
          "pass": false,
          "fail": false,
          "pending": false,
          "context": null,
          "code": "cov_5fzq6lsur().f[21]++;\ncov_5fzq6lsur().s[77]++;\ncleanupStorage();\ncov_5fzq6lsur().s[78]++;\nflushPromises();",
          "err": {},
          "uuid": "019f12d0-0e59-4a84-b078-59fcf2ef6296",
          "parentUUID": "22dd8805-867d-46cb-ba82-b0f76ab7ca2a",
          "isHook": true,
          "skipped": false
        },
        {
          "title": "\"after each\" hook in \"{root}\"",
          "fullTitle": "\"after each\" hook in \"{root}\"",
          "timedOut": false,
          "duration": 0,
          "state": null,
          "speed": null,
          "pass": false,
          "fail": false,
          "pending": false,
          "context": null,
          "code": "(0, _pure.cleanup)();",
          "err": {},
          "uuid": "7155c5e7-864a-4078-b790-e34c748d3215",
          "parentUUID": "22dd8805-867d-46cb-ba82-b0f76ab7ca2a",
          "isHook": true,
          "skipped": false
        },
        {
          "title": "\"after each\" hook in \"{root}\"",
          "fullTitle": "\"after each\" hook in \"{root}\"",
          "timedOut": false,
          "duration": 0,
          "state": null,
          "speed": null,
          "pass": false,
          "fail": false,
          "pending": false,
          "context": null,
          "code": "await cleanup();",
          "err": {},
          "uuid": "d3068beb-0504-4e68-830b-f64a7caf677f",
          "parentUUID": "22dd8805-867d-46cb-ba82-b0f76ab7ca2a",
          "isHook": true,
          "skipped": false
        },
        {
          "title": "\"after each\" hook in \"{root}\"",
          "fullTitle": "\"after each\" hook in \"{root}\"",
          "timedOut": false,
          "duration": 0,
          "state": null,
          "speed": null,
          "pass": false,
          "fail": false,
          "pending": false,
          "context": null,
          "code": "restoreConsole()",
          "err": {},
          "uuid": "9ee71c90-98b3-44a5-b51c-d9ef71594471",
          "parentUUID": "22dd8805-867d-46cb-ba82-b0f76ab7ca2a",
          "isHook": true,
          "skipped": false
        }
      ],
      "tests": [],
      "suites": [
        {
          "uuid": "d7acdd48-afa1-44f8-86d0-6811c55649ca",
          "title": "fetchConfirmedFutureAppointments",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/appointments/actions/index.unit.spec.js",
          "file": "/src/applications/personalization/appointments/actions/index.unit.spec.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"fetchConfirmedFutureAppointments\"",
              "fullTitle": "fetchConfirmedFutureAppointments \"before all\" hook in \"fetchConfirmedFutureAppointments\"",
              "timedOut": false,
              "duration": 1,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cov_28w73fmy11().f[4]++;\ncov_28w73fmy11().s[11]++;\n// before we can use msw, we need to make sure that global.fetch has been\n// restored and is no longer a sinon stub.\n(0, _helpers.resetFetch)();\ncov_28w73fmy11().s[12]++;\nserver = _node.setupServer.apply(void 0, mocks);\ncov_28w73fmy11().s[13]++;\nserver.listen();",
              "err": {},
              "uuid": "2f81d947-a225-4633-986d-db3e0a4334fd",
              "parentUUID": "d7acdd48-afa1-44f8-86d0-6811c55649ca",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"fetchConfirmedFutureAppointments\"",
              "fullTitle": "fetchConfirmedFutureAppointments \"after all\" hook in \"fetchConfirmedFutureAppointments\"",
              "timedOut": false,
              "duration": 1,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cov_28w73fmy11().f[6]++;\ncov_28w73fmy11().s[17]++;\nserver.close();",
              "err": {},
              "uuid": "1d10bb04-cbfb-49e6-b3f9-2806320aba5d",
              "parentUUID": "d7acdd48-afa1-44f8-86d0-6811c55649ca",
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"after each\" hook in \"fetchConfirmedFutureAppointments\"",
              "fullTitle": "fetchConfirmedFutureAppointments \"after each\" hook in \"fetchConfirmedFutureAppointments\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cov_28w73fmy11().f[5]++;\ncov_28w73fmy11().s[15]++;\nserver.resetHandlers();",
              "err": {},
              "uuid": "8bab747a-efb4-4fe2-a80d-0065e9741064",
              "parentUUID": "d7acdd48-afa1-44f8-86d0-6811c55649ca",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "correctly adds a timezone offset to the start date/time of appointments and filters out past appointments",
              "fullTitle": "fetchConfirmedFutureAppointments correctly adds a timezone offset to the start date/time of appointments and filters out past appointments",
              "timedOut": false,
              "duration": 22,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
              "err": {},
              "uuid": "426cea1d-31d7-4d44-a786-bb0c0b96143b",
              "parentUUID": "d7acdd48-afa1-44f8-86d0-6811c55649ca",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "426cea1d-31d7-4d44-a786-bb0c0b96143b"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 22,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "dcc501ae-a834-4a34-86a4-6161a7643a5f",
          "title": "My VA Dashboard",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/appointments/actions/utils.unit.spec.js",
          "file": "/src/applications/personalization/appointments/actions/utils.unit.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "944e30e4-4542-4758-95a8-33dfc53c80ed",
              "title": "appointment utils",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/appointments/actions/utils.unit.spec.js",
              "file": "/src/applications/personalization/appointments/actions/utils.unit.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [],
              "suites": [
                {
                  "uuid": "9efdd190-712d-4f64-9f82-91ea3d448eec",
                  "title": "transformAppointment",
                  "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/appointments/actions/utils.unit.spec.js",
                  "file": "/src/applications/personalization/appointments/actions/utils.unit.spec.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "should set isVideo for telehealth appointment",
                      "fullTitle": "My VA Dashboard appointment utils transformAppointment should set isVideo for telehealth appointment",
                      "timedOut": false,
                      "duration": 3,
                      "state": "passed",
                      "speed": "slow",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "cov_gcru12pey().f[3]++;\nvar appointment = (cov_gcru12pey().s[4]++, (0, _vaosV.createVaosAppointment)({\n  kind: 'telehealth'\n}));\nvar transformedAppointment = (cov_gcru12pey().s[5]++, _utils.vaosV2Helpers.transformAppointment(appointment));\ncov_gcru12pey().s[6]++;\n(0, _chai.expect)(transformedAppointment.isVideo).to.be.true;",
                      "err": {},
                      "uuid": "3af82ff3-af41-4c4f-9341-a9c877443195",
                      "parentUUID": "9efdd190-712d-4f64-9f82-91ea3d448eec",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "should set timezone for an appointment",
                      "fullTitle": "My VA Dashboard appointment utils transformAppointment should set timezone for an appointment",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "slow",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "cov_gcru12pey().f[4]++;\nvar appointment = (cov_gcru12pey().s[8]++, (0, _vaosV.createVaosAppointment)());\nvar transformedAppointment = (cov_gcru12pey().s[9]++, _utils.vaosV2Helpers.transformAppointment(appointment));\ncov_gcru12pey().s[10]++;\n(0, _chai.expect)(transformedAppointment.timeZone).to.a.string;\ncov_gcru12pey().s[11]++;\n(0, _chai.expect)(transformedAppointment.timeZone).to.equal('MT');",
                      "err": {},
                      "uuid": "2e45c7aa-35c8-4601-8863-a98b85806f27",
                      "parentUUID": "9efdd190-712d-4f64-9f82-91ea3d448eec",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "should set additional information for an appointment",
                      "fullTitle": "My VA Dashboard appointment utils transformAppointment should set additional information for an appointment",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "cov_gcru12pey().f[5]++;",
                      "err": {},
                      "uuid": "cdceaa11-2dd0-4c4d-8fde-e2018a5b61fa",
                      "parentUUID": "9efdd190-712d-4f64-9f82-91ea3d448eec",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "should set facility for an appointment",
                      "fullTitle": "My VA Dashboard appointment utils transformAppointment should set facility for an appointment",
                      "timedOut": false,
                      "duration": 2,
                      "state": "passed",
                      "speed": "slow",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "cov_gcru12pey().f[6]++;\nvar appointment = (cov_gcru12pey().s[14]++, (0, _vaosV.createVaosAppointment)());\nvar transformedAppointment = (cov_gcru12pey().s[15]++, _utils.vaosV2Helpers.transformAppointment(appointment));\ncov_gcru12pey().s[16]++;\n(0, _chai.expect)(transformedAppointment.facility).to.be.an('object');\ncov_gcru12pey().s[17]++;\n(0, _chai.expect)(transformedAppointment.providerName).to.be.an('string');",
                      "err": {},
                      "uuid": "32819538-718c-4888-a20a-c5a5f40ab039",
                      "parentUUID": "9efdd190-712d-4f64-9f82-91ea3d448eec",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "should set start for an appointment, as a date",
                      "fullTitle": "My VA Dashboard appointment utils transformAppointment should set start for an appointment, as a date",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "slow",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "cov_gcru12pey().f[7]++;\nvar appointment = (cov_gcru12pey().s[19]++, (0, _vaosV.createVaosAppointment)());\nvar transformedAppointment = (cov_gcru12pey().s[20]++, _utils.vaosV2Helpers.transformAppointment(appointment));\ncov_gcru12pey().s[21]++;\n(0, _chai.expect)(transformedAppointment.startsAt).to.be.a('string');\ncov_gcru12pey().s[22]++;\n(0, _chai.expect)(new Date(transformedAppointment.startsAt).getDay()).to.equal(new Date(appointment.attributes.start).getDay());",
                      "err": {},
                      "uuid": "db366d91-2412-4992-9ae4-d01288135569",
                      "parentUUID": "9efdd190-712d-4f64-9f82-91ea3d448eec",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "3af82ff3-af41-4c4f-9341-a9c877443195",
                    "2e45c7aa-35c8-4601-8863-a98b85806f27",
                    "cdceaa11-2dd0-4c4d-8fde-e2018a5b61fa",
                    "32819538-718c-4888-a20a-c5a5f40ab039",
                    "db366d91-2412-4992-9ae4-d01288135569"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 7,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "8b692b59-86ff-4c73-a8f6-24261605552a",
                  "title": "sortAppointments",
                  "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/appointments/actions/utils.unit.spec.js",
                  "file": "/src/applications/personalization/appointments/actions/utils.unit.spec.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "sorts appointments by startsAt time, descending order",
                      "fullTitle": "My VA Dashboard appointment utils sortAppointments sorts appointments by startsAt time, descending order",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "slow",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "cov_gcru12pey().f[9]++;\nvar appointments = (cov_gcru12pey().s[25]++, [{\n  id: 1,\n  startsAt: '2020-01-03T00:00:00.000Z'\n}, {\n  id: 2,\n  startsAt: '2020-01-01T00:00:00.000Z'\n}, {\n  id: 3,\n  startsAt: '2020-01-02T00:00:00.000Z'\n}]);\nvar sorted = (cov_gcru12pey().s[26]++, _utils.vaosV2Helpers.sortAppointments(appointments));\ncov_gcru12pey().s[27]++;\n(0, _chai.expect)(sorted[0].id).to.equal(2);\ncov_gcru12pey().s[28]++;\n(0, _chai.expect)(sorted[1].id).to.equal(3);\ncov_gcru12pey().s[29]++;\n(0, _chai.expect)(sorted[2].id).to.equal(1);",
                      "err": {},
                      "uuid": "5b40d6cc-ad4b-4b6e-98a7-2e96e98d3f3d",
                      "parentUUID": "8b692b59-86ff-4c73-a8f6-24261605552a",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "5b40d6cc-ad4b-4b6e-98a7-2e96e98d3f3d"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                }
              ],
              "passes": [],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "74263c49-0f41-4bd8-8862-08206b37ad1c",
          "title": "<DevToolsLoader />",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/common/components/devtools/DevToolsLoader.unit.spec.js",
          "file": "/src/applications/personalization/common/components/devtools/DevToolsLoader.unit.spec.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"<DevToolsLoader />\"",
              "fullTitle": "<DevToolsLoader /> \"before each\" hook in \"<DevToolsLoader />\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cov_2diuet6zuy().f[2]++;\ncov_2diuet6zuy().s[4]++;\nprops = {\n  devToolsData: {\n    key: 'value'\n  },\n  panel: true\n};",
              "err": {},
              "uuid": "a009cf72-43e6-4bad-8b8d-a2670fae9614",
              "parentUUID": "74263c49-0f41-4bd8-8862-08206b37ad1c",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": "toggles the panel visibility with custom events and shows devToolsData",
              "fullTitle": "<DevToolsLoader /> toggles the panel visibility with custom events and shows devToolsData",
              "timedOut": false,
              "duration": 33,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
              "err": {},
              "uuid": "acace631-6d24-4ef6-a600-f64a9ed65875",
              "parentUUID": "74263c49-0f41-4bd8-8862-08206b37ad1c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "toggles the panel visibility with custom events and closes it when uuid does not match in event",
              "fullTitle": "<DevToolsLoader /> toggles the panel visibility with custom events and closes it when uuid does not match in event",
              "timedOut": false,
              "duration": 7,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
              "err": {},
              "uuid": "3c5e736b-2b56-42f6-8741-3fd254dfba8e",
              "parentUUID": "74263c49-0f41-4bd8-8862-08206b37ad1c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "initially renders in a hidden state",
              "fullTitle": "<DevToolsLoader /> initially renders in a hidden state",
              "timedOut": false,
              "duration": 3,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cov_2diuet6zuy().f[5]++;\nvar _ref5 = (cov_2diuet6zuy().s[20]++, (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_DevToolsLoader.default, props))),\n  queryByTestId = _ref5.queryByTestId;\ncov_2diuet6zuy().s[21]++;\n(0, _chai.expect)(queryByTestId('devtools-panel')).to.not.exist;",
              "err": {},
              "uuid": "d77f841f-4d31-4e9b-9b96-e1dfec808d4a",
              "parentUUID": "74263c49-0f41-4bd8-8862-08206b37ad1c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "shows the panel when the button is clicked",
              "fullTitle": "<DevToolsLoader /> shows the panel when the button is clicked",
              "timedOut": false,
              "duration": 23,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
              "err": {},
              "uuid": "4a3c54c2-844c-421f-9507-eb5a221dcdc0",
              "parentUUID": "74263c49-0f41-4bd8-8862-08206b37ad1c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "closes the panel when the close button is clicked",
              "fullTitle": "<DevToolsLoader /> closes the panel when the close button is clicked",
              "timedOut": false,
              "duration": 15,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
              "err": {},
              "uuid": "9b867b13-c3cb-4a69-9d45-76406931e3ea",
              "parentUUID": "74263c49-0f41-4bd8-8862-08206b37ad1c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "displays a string type in the panel",
              "fullTitle": "<DevToolsLoader /> displays a string type in the panel",
              "timedOut": false,
              "duration": 12,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
              "err": {},
              "uuid": "d80391d3-1dba-49af-b9a0-84cf5f1e008b",
              "parentUUID": "74263c49-0f41-4bd8-8862-08206b37ad1c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "displays null in the panel",
              "fullTitle": "<DevToolsLoader /> displays null in the panel",
              "timedOut": false,
              "duration": 7,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
              "err": {},
              "uuid": "cf665be4-4001-46b9-b310-cc055a573ac3",
              "parentUUID": "74263c49-0f41-4bd8-8862-08206b37ad1c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "displays a boolean in the panel",
              "fullTitle": "<DevToolsLoader /> displays a boolean in the panel",
              "timedOut": false,
              "duration": 8,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
              "err": {},
              "uuid": "63d6716c-83af-48b6-a9fc-f90283ff68a8",
              "parentUUID": "74263c49-0f41-4bd8-8862-08206b37ad1c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "acace631-6d24-4ef6-a600-f64a9ed65875",
            "3c5e736b-2b56-42f6-8741-3fd254dfba8e",
            "d77f841f-4d31-4e9b-9b96-e1dfec808d4a",
            "4a3c54c2-844c-421f-9507-eb5a221dcdc0",
            "9b867b13-c3cb-4a69-9d45-76406931e3ea",
            "d80391d3-1dba-49af-b9a0-84cf5f1e008b",
            "cf665be4-4001-46b9-b310-cc055a573ac3",
            "63d6716c-83af-48b6-a9fc-f90283ff68a8"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 108,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "3c1c2d91-4809-4efe-a18b-b1075fff5047",
          "title": "useSessionStorage",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/common/hooks/useSessionStorage.unit.spec.js",
          "file": "/src/applications/personalization/common/hooks/useSessionStorage.unit.spec.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"useSessionStorage\"",
              "fullTitle": "useSessionStorage \"before each\" hook in \"useSessionStorage\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cov_1sn58n9s22().f[3]++;\ncov_1sn58n9s22().s[10]++;\nmockSessionStorage = {\n  getItem: _sinon.default.stub(),\n  setItem: _sinon.default.stub()\n};",
              "err": {},
              "uuid": "4eb5f913-17e3-4e9d-bf02-75a4b1edfe08",
              "parentUUID": "3c1c2d91-4809-4efe-a18b-b1075fff5047",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after each\" hook: cleanup in \"useSessionStorage\"",
              "fullTitle": "useSessionStorage \"after each\" hook: cleanup in \"useSessionStorage\"",
              "timedOut": false,
              "duration": 1,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "mountedContainers.forEach(cleanupAtContainer);",
              "err": {},
              "uuid": "8d854e2c-23af-4bea-923e-36882ebaa037",
              "parentUUID": "3c1c2d91-4809-4efe-a18b-b1075fff5047",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "retrieves an existing value from sessionStorage",
              "fullTitle": "useSessionStorage retrieves an existing value from sessionStorage",
              "timedOut": false,
              "duration": 3,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cov_1sn58n9s22().f[4]++;\ncov_1sn58n9s22().s[12]++;\nmockSessionStorage.getItem.returns('storedValue');\nvar _ref4 = (cov_1sn58n9s22().s[13]++, (0, _react2.render)(/*#__PURE__*/_react.default.createElement(TestComponent, {\n    storageKey: testKey,\n    mockSessionStorage: mockSessionStorage\n  }))),\n  getByTestId = _ref4.getByTestId;\ncov_1sn58n9s22().s[14]++;\n(0, _chai.expect)(getByTestId('value')).to.have.text('storedValue');",
              "err": {},
              "uuid": "665cca42-edbe-4e5f-9a61-ecde2144fd0a",
              "parentUUID": "3c1c2d91-4809-4efe-a18b-b1075fff5047",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "sets a new value in sessionStorage",
              "fullTitle": "useSessionStorage sets a new value in sessionStorage",
              "timedOut": false,
              "duration": 5,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
              "err": {},
              "uuid": "4e27f88e-a78b-4a6f-bfdd-21714ef672c2",
              "parentUUID": "3c1c2d91-4809-4efe-a18b-b1075fff5047",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "throws an error if no key is provided",
              "fullTitle": "useSessionStorage throws an error if no key is provided",
              "timedOut": false,
              "duration": 3,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cov_1sn58n9s22().f[7]++;\nvar renderResult = (cov_1sn58n9s22().s[23]++, (0, _react2.render)(/*#__PURE__*/_react.default.createElement(TestComponent, {\n  storageKey: null,\n  mockSessionStorage: mockSessionStorage\n})));\ncov_1sn58n9s22().s[24]++;\n(0, _chai.expect)(renderResult.getByText('useSessionStorage requires a storageKey parameter as the first argument')).to.exist;",
              "err": {},
              "uuid": "25a7c29f-f2be-44e2-891e-18fa37ab629c",
              "parentUUID": "3c1c2d91-4809-4efe-a18b-b1075fff5047",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "665cca42-edbe-4e5f-9a61-ecde2144fd0a",
            "4e27f88e-a78b-4a6f-bfdd-21714ef672c2",
            "25a7c29f-f2be-44e2-891e-18fa37ab629c"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 11,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "04a11125-d564-4efb-9a95-86a83ad7e96c",
          "title": "<NameTag>",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/components/NameTag.unit.spec.jsx",
          "file": "/src/applications/personalization/components/NameTag.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "ce58ead8-86d2-4f73-98c5-2fdb653d8952",
              "title": "when name is set and there are multiple service history entries",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/components/NameTag.unit.spec.jsx",
              "file": "/src/applications/personalization/components/NameTag.unit.spec.jsx",
              "beforeHooks": [
                {
                  "title": "\"before each\" hook in \"when name is set and there are multiple service history entries\"",
                  "fullTitle": "<NameTag> when name is set and there are multiple service history entries \"before each\" hook in \"when name is set and there are multiple service history entries\"",
                  "timedOut": false,
                  "duration": 7,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cov_1cm4oj9pw4().f[4]++;\ncov_1cm4oj9pw4().s[10]++;\nview = (0, _unitTestHelpers.renderWithProfileReducers)(/*#__PURE__*/_react.default.createElement(_NameTag.default, null), {\n  initialState: getInitialState()\n});",
                  "err": {},
                  "uuid": "f41fefc2-0fbf-4fb5-a571-decf6d116e8b",
                  "parentUUID": "ce58ead8-86d2-4f73-98c5-2fdb653d8952",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should render the Veteran's name",
                  "fullTitle": "<NameTag> when name is set and there are multiple service history entries should render the Veteran's name",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cov_1cm4oj9pw4().f[5]++;\ncov_1cm4oj9pw4().s[12]++;\nview.getByText('Johnnie Leonard Weaver');",
                  "err": {},
                  "uuid": "f1322175-3a08-40ea-9e9d-15cccf22bd5e",
                  "parentUUID": "ce58ead8-86d2-4f73-98c5-2fdb653d8952",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should render the most recent branch of service",
                  "fullTitle": "<NameTag> when name is set and there are multiple service history entries should render the most recent branch of service",
                  "timedOut": false,
                  "duration": 6,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cov_1cm4oj9pw4().f[6]++;\ncov_1cm4oj9pw4().s[14]++;\nview.getByText('United States Coast Guard');\ncov_1cm4oj9pw4().s[15]++;\nview.getByRole('img', {\n  alt: /coast guard seal/\n});",
                  "err": {},
                  "uuid": "5607681f-7286-4385-ba27-34c14daf302f",
                  "parentUUID": "ce58ead8-86d2-4f73-98c5-2fdb653d8952",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "f1322175-3a08-40ea-9e9d-15cccf22bd5e",
                "5607681f-7286-4385-ba27-34c14daf302f"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 7,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "cef9d5c7-9f9c-4002-adc1-8463ef06779c",
              "title": "when `totalDisabilityRating` is set",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/components/NameTag.unit.spec.jsx",
              "file": "/src/applications/personalization/components/NameTag.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should render the disability rating",
                  "fullTitle": "<NameTag> when `totalDisabilityRating` is set should render the disability rating",
                  "timedOut": false,
                  "duration": 52,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cov_1cm4oj9pw4().f[8]++;\nvar initialState = (cov_1cm4oj9pw4().s[18]++, getInitialState());\nvar view = (cov_1cm4oj9pw4().s[19]++, (0, _unitTestHelpers.renderWithProfileReducers)(/*#__PURE__*/_react.default.createElement(_NameTag.default, {\n  totalDisabilityRating: 70\n}), {\n  initialState: initialState\n}));\ncov_1cm4oj9pw4().s[20]++;\nview.getByText(/your disability rating:/i);\ncov_1cm4oj9pw4().s[21]++;\nview.getByRole('link', {\n  name: /View your 70% service connected disability rating/i,\n  text: /70% service connected/i,\n  href: /disability\\/view-disability-rating\\/rating/i\n});",
                  "err": {},
                  "uuid": "d21ef7db-c6f1-446f-a886-73f9d45109e0",
                  "parentUUID": "cef9d5c7-9f9c-4002-adc1-8463ef06779c",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "d21ef7db-c6f1-446f-a886-73f9d45109e0"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 52,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "9b0b62be-a2cd-4749-9c3a-e38822bdc57b",
              "title": "when `totalDisabilityRating` is not set and there isn't a server error",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/components/NameTag.unit.spec.jsx",
              "file": "/src/applications/personalization/components/NameTag.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should not render the disability rating or a fallback link",
                  "fullTitle": "<NameTag> when `totalDisabilityRating` is not set and there isn't a server error should not render the disability rating or a fallback link",
                  "timedOut": false,
                  "duration": 9,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cov_1cm4oj9pw4().f[10]++;\nvar initialState = (cov_1cm4oj9pw4().s[24]++, getInitialState());\nvar view = (cov_1cm4oj9pw4().s[25]++, (0, _unitTestHelpers.renderWithProfileReducers)(/*#__PURE__*/_react.default.createElement(_NameTag.default, {\n  totalDisabilityRating: null\n}), {\n  initialState: initialState\n}));\ncov_1cm4oj9pw4().s[26]++;\n(0, _chai.expect)(view.queryByText(/your disability rating:/i)).to.not.exist;\ncov_1cm4oj9pw4().s[27]++;\n(0, _chai.expect)(view.queryByRole('link', {\n  name: /view your disability rating/i,\n  href: /disability\\/view-disability-rating\\/rating/i\n})).to.not.exist;",
                  "err": {},
                  "uuid": "2915dafd-6167-405a-94aa-200e1ffe9098",
                  "parentUUID": "9b0b62be-a2cd-4749-9c3a-e38822bdc57b",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "2915dafd-6167-405a-94aa-200e1ffe9098"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 9,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "79ac454f-7fe1-494b-ac20-d14aa4ed9879",
              "title": "when `totalDisabilityRating` is not set and there is a server error",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/components/NameTag.unit.spec.jsx",
              "file": "/src/applications/personalization/components/NameTag.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should render a fallback link",
                  "fullTitle": "<NameTag> when `totalDisabilityRating` is not set and there is a server error should render a fallback link",
                  "timedOut": false,
                  "duration": 27,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cov_1cm4oj9pw4().f[12]++;\nvar initialState = (cov_1cm4oj9pw4().s[30]++, getInitialState());\nvar view = (cov_1cm4oj9pw4().s[31]++, (0, _unitTestHelpers.renderWithProfileReducers)(/*#__PURE__*/_react.default.createElement(_NameTag.default, {\n  totalDisabilityRating: null,\n  totalDisabilityRatingServerError: true\n}), {\n  initialState: initialState\n}));\ncov_1cm4oj9pw4().s[32]++;\n(0, _chai.expect)(view.queryByText(/your disability rating:/i)).to.not.exist;\ncov_1cm4oj9pw4().s[33]++;\nview.getByRole('link', {\n  name: /view your disability rating/i,\n  text: /view disability rating/i,\n  href: /disability\\/view-disability-rating\\/rating/i\n});",
                  "err": {},
                  "uuid": "eac62e3a-977c-42f5-961c-e76257ad1eea",
                  "parentUUID": "79ac454f-7fe1-494b-ac20-d14aa4ed9879",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "eac62e3a-977c-42f5-961c-e76257ad1eea"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 27,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "48cad638-2a99-4b14-a0f9-e993e9160b17",
              "title": "when capitalizing middle initials",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/components/NameTag.unit.spec.jsx",
              "file": "/src/applications/personalization/components/NameTag.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should capitalize single letter, middle initials",
                  "fullTitle": "<NameTag> when capitalizing middle initials should capitalize single letter, middle initials",
                  "timedOut": false,
                  "duration": 5,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cov_1cm4oj9pw4().f[14]++;\nvar view = (cov_1cm4oj9pw4().s[36]++, withUserFullName({\n  first: 'Max',\n  middle: 'H g',\n  last: 'Miller'\n}));\ncov_1cm4oj9pw4().s[37]++;\nview.getAllByText('Max H G Miller');",
                  "err": {},
                  "uuid": "1a4d7f4a-3286-4947-82bd-e676a43df4ba",
                  "parentUUID": "48cad638-2a99-4b14-a0f9-e993e9160b17",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should capitalize middle initials with punctuation",
                  "fullTitle": "<NameTag> when capitalizing middle initials should capitalize middle initials with punctuation",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cov_1cm4oj9pw4().f[15]++;\nvar view = (cov_1cm4oj9pw4().s[39]++, withUserFullName({\n  first: 'Max',\n  middle: 'h. G.',\n  last: 'Miller'\n}));\ncov_1cm4oj9pw4().s[40]++;\nview.getAllByText('Max H. G. Miller');",
                  "err": {},
                  "uuid": "c5d10f2e-6d70-473b-b703-f883ca87379f",
                  "parentUUID": "48cad638-2a99-4b14-a0f9-e993e9160b17",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should not capitalize full word, middle names",
                  "fullTitle": "<NameTag> when capitalizing middle initials should not capitalize full word, middle names",
                  "timedOut": false,
                  "duration": 5,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cov_1cm4oj9pw4().f[16]++;\nvar view = (cov_1cm4oj9pw4().s[42]++, withUserFullName({\n  first: 'Max',\n  middle: 'de Rosa',\n  last: 'Miller'\n}));\ncov_1cm4oj9pw4().s[43]++;\nview.getAllByText('Max de Rosa Miller');",
                  "err": {},
                  "uuid": "c1f9166d-293b-47c9-834f-0361a4a970f0",
                  "parentUUID": "48cad638-2a99-4b14-a0f9-e993e9160b17",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "1a4d7f4a-3286-4947-82bd-e676a43df4ba",
                "c5d10f2e-6d70-473b-b703-f883ca87379f",
                "c1f9166d-293b-47c9-834f-0361a4a970f0"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 13,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "ca77181d-6a8e-4c89-bff6-8c85abd5c867",
          "title": "NotInMPI",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/components/NotInMPIError.unit.spec.jsx",
          "file": "/src/applications/personalization/components/NotInMPIError.unit.spec.jsx",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"NotInMPI\"",
              "fullTitle": "NotInMPI \"before each\" hook in \"NotInMPI\"",
              "timedOut": false,
              "duration": 2,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cov_2r6kopy0jd().f[1]++;\ncov_2r6kopy0jd().s[2]++;\nwrapper = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_NotInMPIError.default, null));",
              "err": {},
              "uuid": "4d65f2c0-b3a8-43fe-8d90-bd9567aaffce",
              "parentUUID": "ca77181d-6a8e-4c89-bff6-8c85abd5c867",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": "should render the correct text",
              "fullTitle": "NotInMPI should render the correct text",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
              "err": {},
              "uuid": "005c7b04-0599-40de-a81b-b6a046607276",
              "parentUUID": "ca77181d-6a8e-4c89-bff6-8c85abd5c867",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "005c7b04-0599-40de-a81b-b6a046607276"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "719c1c4d-4122-46f6-be02-7520e563234d",
          "title": "/actions/claims-and-appeals",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/dashboard/tests/actions/claims-and-appeals.unit.spec.jsx",
          "file": "/src/applications/personalization/dashboard/tests/actions/claims-and-appeals.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "751f6d63-bc3d-4a0e-ad1d-5e42b0620152",
              "title": "getAppeals",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/dashboard/tests/actions/claims-and-appeals.unit.spec.jsx",
              "file": "/src/applications/personalization/dashboard/tests/actions/claims-and-appeals.unit.spec.jsx",
              "beforeHooks": [
                {
                  "title": "\"before each\" hook in \"getAppeals\"",
                  "fullTitle": "/actions/claims-and-appeals getAppeals \"before each\" hook in \"getAppeals\"",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _helpers.mockFetch)();\ndispatchSpy = _sinon.default.spy();",
                  "err": {},
                  "uuid": "eea602ad-3b25-4867-b780-e6b12173a918",
                  "parentUUID": "751f6d63-bc3d-4a0e-ad1d-5e42b0620152",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should dispatch FETCH_APPEALS_PENDING action",
                  "fullTitle": "/actions/claims-and-appeals getAppeals should dispatch FETCH_APPEALS_PENDING action",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _appeals2.getAppeals)()(dispatchSpy);\n(0, _chai.expect)(dispatchSpy.firstCall.args[0].type).to.equal(_appeals2.FETCH_APPEALS_PENDING);",
                  "err": {},
                  "uuid": "49c67b9b-f9be-4bb6-9ba2-28df0975e24a",
                  "parentUUID": "751f6d63-bc3d-4a0e-ad1d-5e42b0620152",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should dispatch a FETCH_APPEALS_SUCCESS action",
                  "fullTitle": "/actions/claims-and-appeals getAppeals should dispatch a FETCH_APPEALS_SUCCESS action",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _helpers.setFetchJSONResponse)(global.fetch.onCall(0), (0, _appeals.createAppealsSuccess)());\nvar thunk = (0, _appeals2.getAppeals)();\nvar dispatch = function dispatch(action) {\n  dispatchSpy(action);\n  if (dispatchSpy.callCount === 2) {\n    (0, _chai.expect)(dispatchSpy.secondCall.args[0].type).to.equal(_appeals2.FETCH_APPEALS_SUCCESS);\n  }\n};\nthunk(dispatch);",
                  "err": {},
                  "uuid": "2115f7db-89fa-44da-81e5-06dc696e2b1e",
                  "parentUUID": "751f6d63-bc3d-4a0e-ad1d-5e42b0620152",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Dispatches USER_FORBIDDEN_ERROR when GET fails with 403",
                  "fullTitle": "/actions/claims-and-appeals getAppeals Dispatches USER_FORBIDDEN_ERROR when GET fails with 403",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _helpers.setFetchJSONFailure)(global.fetch.onCall(0), {\n  errors: [{\n    status: \"\".concat(code)\n  }]\n});\nvar thunk = (0, _appeals2.getAppeals)();\nvar dispatch = _sinon.default.spy();\nthunk(dispatch).then(function () {\n  var action = dispatch.secondCall.args[0];\n  (0, _chai.expect)(action.type).to.equal(appealsErrors[code]);\n}).then(done, done);",
                  "err": {},
                  "uuid": "6d93c796-2904-4076-9719-35021889be80",
                  "parentUUID": "751f6d63-bc3d-4a0e-ad1d-5e42b0620152",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Dispatches RECORD_NOT_FOUND_ERROR when GET fails with 404",
                  "fullTitle": "/actions/claims-and-appeals getAppeals Dispatches RECORD_NOT_FOUND_ERROR when GET fails with 404",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _helpers.setFetchJSONFailure)(global.fetch.onCall(0), {\n  errors: [{\n    status: \"\".concat(code)\n  }]\n});\nvar thunk = (0, _appeals2.getAppeals)();\nvar dispatch = _sinon.default.spy();\nthunk(dispatch).then(function () {\n  var action = dispatch.secondCall.args[0];\n  (0, _chai.expect)(action.type).to.equal(appealsErrors[code]);\n}).then(done, done);",
                  "err": {},
                  "uuid": "bb80b445-2716-424d-993c-18e7d04e8cf8",
                  "parentUUID": "751f6d63-bc3d-4a0e-ad1d-5e42b0620152",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Dispatches VALIDATION_ERROR when GET fails with 422",
                  "fullTitle": "/actions/claims-and-appeals getAppeals Dispatches VALIDATION_ERROR when GET fails with 422",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _helpers.setFetchJSONFailure)(global.fetch.onCall(0), {\n  errors: [{\n    status: \"\".concat(code)\n  }]\n});\nvar thunk = (0, _appeals2.getAppeals)();\nvar dispatch = _sinon.default.spy();\nthunk(dispatch).then(function () {\n  var action = dispatch.secondCall.args[0];\n  (0, _chai.expect)(action.type).to.equal(appealsErrors[code]);\n}).then(done, done);",
                  "err": {},
                  "uuid": "b1d60594-86f4-4660-a0d4-92bbd684c556",
                  "parentUUID": "751f6d63-bc3d-4a0e-ad1d-5e42b0620152",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Dispatches BACKEND_SERVICE_ERROR when GET fails with 502",
                  "fullTitle": "/actions/claims-and-appeals getAppeals Dispatches BACKEND_SERVICE_ERROR when GET fails with 502",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _helpers.setFetchJSONFailure)(global.fetch.onCall(0), {\n  errors: [{\n    status: \"\".concat(code)\n  }]\n});\nvar thunk = (0, _appeals2.getAppeals)();\nvar dispatch = _sinon.default.spy();\nthunk(dispatch).then(function () {\n  var action = dispatch.secondCall.args[0];\n  (0, _chai.expect)(action.type).to.equal(appealsErrors[code]);\n}).then(done, done);",
                  "err": {},
                  "uuid": "42665d13-9a67-49df-9879-6ec2fa5f0fbe",
                  "parentUUID": "751f6d63-bc3d-4a0e-ad1d-5e42b0620152",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Dispatches FETCH_APPEALS_ERROR when GET fails with 504",
                  "fullTitle": "/actions/claims-and-appeals getAppeals Dispatches FETCH_APPEALS_ERROR when GET fails with 504",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _helpers.setFetchJSONFailure)(global.fetch.onCall(0), {\n  errors: [{\n    status: \"\".concat(code)\n  }]\n});\nvar thunk = (0, _appeals2.getAppeals)();\nvar dispatch = _sinon.default.spy();\nthunk(dispatch).then(function () {\n  var action = dispatch.secondCall.args[0];\n  (0, _chai.expect)(action.type).to.equal(appealsErrors[code]);\n}).then(done, done);",
                  "err": {},
                  "uuid": "e9673866-5fef-4b39-991a-b073ebcde04a",
                  "parentUUID": "751f6d63-bc3d-4a0e-ad1d-5e42b0620152",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "49c67b9b-f9be-4bb6-9ba2-28df0975e24a",
                "2115f7db-89fa-44da-81e5-06dc696e2b1e",
                "6d93c796-2904-4076-9719-35021889be80",
                "bb80b445-2716-424d-993c-18e7d04e8cf8",
                "b1d60594-86f4-4660-a0d4-92bbd684c556",
                "42665d13-9a67-49df-9879-6ec2fa5f0fbe",
                "e9673866-5fef-4b39-991a-b073ebcde04a"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 10,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "a7f5fd5a-8aa3-47c4-98b9-73c6fe64de93",
              "title": "getClaims",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/dashboard/tests/actions/claims-and-appeals.unit.spec.jsx",
              "file": "/src/applications/personalization/dashboard/tests/actions/claims-and-appeals.unit.spec.jsx",
              "beforeHooks": [
                {
                  "title": "\"before each\" hook in \"getClaims\"",
                  "fullTitle": "/actions/claims-and-appeals getClaims \"before each\" hook in \"getClaims\"",
                  "timedOut": false,
                  "duration": 1,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _helpers.mockFetch)();\noldDataLayer = global.window.dataLayer;\nglobal.window.dataLayer = [];\ndispatchSpy = _sinon.default.spy();",
                  "err": {},
                  "uuid": "abd94c55-fe7a-46b6-939f-c374d2cc9ca6",
                  "parentUUID": "a7f5fd5a-8aa3-47c4-98b9-73c6fe64de93",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [
                {
                  "title": "\"after each\" hook in \"getClaims\"",
                  "fullTitle": "/actions/claims-and-appeals getClaims \"after each\" hook in \"getClaims\"",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "global.window.dataLayer = oldDataLayer;",
                  "err": {},
                  "uuid": "d75a2d35-2695-4961-b4b5-14f5e5016c50",
                  "parentUUID": "a7f5fd5a-8aa3-47c4-98b9-73c6fe64de93",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "tests": [
                {
                  "title": "should dispatch FETCH_CLAIMS_PENDING action",
                  "fullTitle": "/actions/claims-and-appeals getClaims should dispatch FETCH_CLAIMS_PENDING action",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _claims2.getClaims)()(dispatchSpy);\n(0, _chai.expect)(dispatchSpy.firstCall.args[0].type).to.equal(_claims2.FETCH_CLAIMS_PENDING);",
                  "err": {},
                  "uuid": "c19cc684-7d4f-45c2-a636-0a0ab1b368a4",
                  "parentUUID": "a7f5fd5a-8aa3-47c4-98b9-73c6fe64de93",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [
                {
                  "uuid": "63522027-673d-4d7c-ae98-78488cdf8d11",
                  "title": "onSuccess callback",
                  "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/dashboard/tests/actions/claims-and-appeals.unit.spec.jsx",
                  "file": "/src/applications/personalization/dashboard/tests/actions/claims-and-appeals.unit.spec.jsx",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "should dispatch a FETCH_CLAIMS_SUCCESS action and record the correct event to the data layer",
                      "fullTitle": "/actions/claims-and-appeals getClaims onSuccess callback should dispatch a FETCH_CLAIMS_SUCCESS action and record the correct event to the data layer",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "(0, _helpers.setFetchJSONResponse)(global.fetch.onCall(0), (0, _claims.createClaimsSuccess)());\nvar thunk = (0, _claims2.getClaims)();\nvar dispatch = function dispatch(action) {\n  dispatchSpy(action);\n  if (dispatchSpy.callCount === 2) {\n    (0, _chai.expect)(dispatchSpy.secondCall.args[0].type).to.equal(_claims2.FETCH_CLAIMS_SUCCESS);\n    (0, _chai.expect)(global.window.dataLayer[0]).to.eql({\n      event: 'api_call',\n      'api-name': 'GET Lighthouse claims /v0/benefits_claims',\n      'api-status': 'successful',\n      'api-latency-ms': 0\n    });\n  }\n};\nthunk(dispatch);",
                      "err": {},
                      "uuid": "b475d48e-06f0-4de6-a6b1-0748cea43c51",
                      "parentUUID": "63522027-673d-4d7c-ae98-78488cdf8d11",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "b475d48e-06f0-4de6-a6b1-0748cea43c51"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "54d1055e-8ebe-45de-bfb3-5bec43f40a81",
                  "title": "onError callback",
                  "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/dashboard/tests/actions/claims-and-appeals.unit.spec.jsx",
                  "file": "/src/applications/personalization/dashboard/tests/actions/claims-and-appeals.unit.spec.jsx",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "should dispatch a FETCH_CLAIMS_ERROR action and record the correct event to the data layer",
                      "fullTitle": "/actions/claims-and-appeals getClaims onError callback should dispatch a FETCH_CLAIMS_ERROR action and record the correct event to the data layer",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "var response = {\n  errors: [{\n    code: '500',\n    status: 'some status'\n  }]\n};\n(0, _helpers.setFetchJSONFailure)(global.fetch.onCall(0), response);\nvar thunk = (0, _claims2.getClaims)();\nvar dispatch = function dispatch(action) {\n  dispatchSpy(action);\n  if (dispatchSpy.callCount === 2) {\n    (0, _chai.expect)(dispatchSpy.secondCall.args[0].type).to.equal(_claims2.FETCH_CLAIMS_ERROR);\n    (0, _chai.expect)(global.window.dataLayer[1]).to.eql({\n      'error-key': undefined\n    });\n  }\n};\nthunk(dispatch);",
                      "err": {},
                      "uuid": "30a9b922-1ab4-4319-9824-a83b6215e7cc",
                      "parentUUID": "54d1055e-8ebe-45de-bfb3-5bec43f40a81",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "30a9b922-1ab4-4319-9824-a83b6215e7cc"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                }
              ],
              "passes": [
                "c19cc684-7d4f-45c2-a636-0a0ab1b368a4"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "85aafd11-0b09-4b4d-9748-66c3f5d26b8f",
          "title": "fetchFormPdfUrl action creator",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/dashboard/tests/actions/form-pdf-url.unit.spec.js",
          "file": "/src/applications/personalization/dashboard/tests/actions/form-pdf-url.unit.spec.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"fetchFormPdfUrl action creator\"",
              "fullTitle": "fetchFormPdfUrl action creator \"before each\" hook in \"fetchFormPdfUrl action creator\"",
              "timedOut": false,
              "duration": 1,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, _helpers.mockFetch)();\ndownloadStub = (0, _sinon.stub)();\nrecordEventStub = (0, _sinon.stub)();\ndispatchStub = (0, _sinon.stub)();",
              "err": {},
              "uuid": "5d7307db-63c3-418f-b97e-5bdad5d2511a",
              "parentUUID": "85aafd11-0b09-4b4d-9748-66c3f5d26b8f",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after each\" hook in \"fetchFormPdfUrl action creator\"",
              "fullTitle": "fetchFormPdfUrl action creator \"after each\" hook in \"fetchFormPdfUrl action creator\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, _helpers.resetFetch)();",
              "err": {},
              "uuid": "e11da95c-be46-4114-9887-b2c75d9a9fa1",
              "parentUUID": "85aafd11-0b09-4b4d-9748-66c3f5d26b8f",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "dispatches appropriate actions on success response",
              "fullTitle": "fetchFormPdfUrl action creator dispatches appropriate actions on success response",
              "timedOut": false,
              "duration": 3,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
              "err": {},
              "uuid": "40598b0c-d452-4df6-829d-3107edcc9066",
              "parentUUID": "85aafd11-0b09-4b4d-9748-66c3f5d26b8f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "dispatches appropriate actions on failure response",
              "fullTitle": "fetchFormPdfUrl action creator dispatches appropriate actions on failure response",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
              "err": {},
              "uuid": "53c52f79-63a4-45f5-be9f-d19d997aee54",
              "parentUUID": "85aafd11-0b09-4b4d-9748-66c3f5d26b8f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "fails if success response returns empty url",
              "fullTitle": "fetchFormPdfUrl action creator fails if success response returns empty url",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
              "err": {},
              "uuid": "c212aed7-1a1a-4a27-91e7-e64c614c16e8",
              "parentUUID": "85aafd11-0b09-4b4d-9748-66c3f5d26b8f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "attempts to download url on success response",
              "fullTitle": "fetchFormPdfUrl action creator attempts to download url on success response",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
              "err": {},
              "uuid": "327be7cc-9312-4521-bb88-d23674ac8c76",
              "parentUUID": "85aafd11-0b09-4b4d-9748-66c3f5d26b8f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "40598b0c-d452-4df6-829d-3107edcc9066",
            "53c52f79-63a4-45f5-be9f-d19d997aee54",
            "c212aed7-1a1a-4a27-91e7-e64c614c16e8",
            "327be7cc-9312-4521-bb88-d23674ac8c76"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 6,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "a2b78836-4d6b-4787-be7c-5a81744356d2",
          "title": "/actions/messaging",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/dashboard/tests/actions/messaging.unit.spec.jsx",
          "file": "/src/applications/personalization/dashboard/tests/actions/messaging.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "fd7e6127-a13b-4ff8-936d-7631558694e9",
              "title": "fetchUnreadMessagesCount",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/dashboard/tests/actions/messaging.unit.spec.jsx",
              "file": "/src/applications/personalization/dashboard/tests/actions/messaging.unit.spec.jsx",
              "beforeHooks": [
                {
                  "title": "\"before each\" hook in \"fetchUnreadMessagesCount\"",
                  "fullTitle": "/actions/messaging fetchUnreadMessagesCount \"before each\" hook in \"fetchUnreadMessagesCount\"",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _helpers.mockFetch)();\ndispatchSpy = _sinon.default.spy();",
                  "err": {},
                  "uuid": "8e0f7233-8918-4a43-8bfb-6c5d95b51330",
                  "parentUUID": "fd7e6127-a13b-4ff8-936d-7631558694e9",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should dispatch loading and success actions for unread messages count",
                  "fullTitle": "/actions/messaging fetchUnreadMessagesCount should dispatch loading and success actions for unread messages count",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var response = _testMessagingResponse.messagesSuccess;\n(0, _helpers.setFetchJSONResponse)(global.fetch.onCall(0), response);\nvar thunk = (0, _messaging.fetchUnreadMessagesCount)();\nvar dispatch = function dispatch(action) {\n  dispatchSpy(action);\n  if (dispatchSpy.callCount === 2) {\n    (0, _chai.expect)(dispatchSpy.firstCall.args[0].type).to.equal(_messaging.LOADING_UNREAD_MESSAGES_COUNT);\n    (0, _chai.expect)(dispatchSpy.secondCall.args[0].type).to.equal(_messaging.FETCH_UNREAD_MESSAGES_COUNT_SUCCESS);\n  }\n};\nthunk(dispatch);",
                  "err": {},
                  "uuid": "4c50fef3-342e-4852-8180-c7256aa423be",
                  "parentUUID": "fd7e6127-a13b-4ff8-936d-7631558694e9",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [
                {
                  "uuid": "734c0e04-4b0f-440a-b20a-fd7c8f8f73da",
                  "title": "onError callback",
                  "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/dashboard/tests/actions/messaging.unit.spec.jsx",
                  "file": "/src/applications/personalization/dashboard/tests/actions/messaging.unit.spec.jsx",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "should dispatch error action",
                      "fullTitle": "/actions/messaging fetchUnreadMessagesCount onError callback should dispatch error action",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "var response = _testMessagingResponse.messagesError;\n(0, _helpers.setFetchJSONFailure)(global.fetch.onCall(0), response);\nvar thunk = (0, _messaging.fetchUnreadMessagesCount)();\nvar dispatch = function dispatch(action) {\n  dispatchSpy(action);\n  if (dispatchSpy.callCount === 2) {\n    (0, _chai.expect)(dispatchSpy.secondCall.args[0].type).to.equal(_messaging.FETCH_UNREAD_MESSAGES_COUNT_ERROR);\n  }\n};\nthunk(dispatch);",
                      "err": {},
                      "uuid": "e1c952d3-2562-4411-bad5-97a45aba2f39",
                      "parentUUID": "734c0e04-4b0f-440a-b20a-fd7c8f8f73da",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "should dispatch error action, even if there is no error object from response",
                      "fullTitle": "/actions/messaging fetchUnreadMessagesCount onError callback should dispatch error action, even if there is no error object from response",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "slow",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "(0, _helpers.setFetchJSONFailure)(global.fetch.onCall(0), '');\nvar thunk = (0, _messaging.fetchUnreadMessagesCount)();\nvar dispatch = function dispatch(action) {\n  dispatchSpy(action);\n  if (dispatchSpy.callCount === 2) {\n    (0, _chai.expect)(dispatchSpy.secondCall.args[0].type).to.equal(_messaging.FETCH_UNREAD_MESSAGES_COUNT_ERROR);\n  }\n};\nthunk(dispatch);",
                      "err": {},
                      "uuid": "ae897b10-0c5e-4a8b-af93-1d0894965a7d",
                      "parentUUID": "734c0e04-4b0f-440a-b20a-fd7c8f8f73da",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "e1c952d3-2562-4411-bad5-97a45aba2f39",
                    "ae897b10-0c5e-4a8b-af93-1d0894965a7d"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                }
              ],
              "passes": [
                "4c50fef3-342e-4852-8180-c7256aa423be"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "8ab15f10-5897-426b-90d8-35e87dfb390b",
              "title": "fetchFolder",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/dashboard/tests/actions/messaging.unit.spec.jsx",
              "file": "/src/applications/personalization/dashboard/tests/actions/messaging.unit.spec.jsx",
              "beforeHooks": [
                {
                  "title": "\"before each\" hook in \"fetchFolder\"",
                  "fullTitle": "/actions/messaging fetchFolder \"before each\" hook in \"fetchFolder\"",
                  "timedOut": false,
                  "duration": 1,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _helpers.mockFetch)();\ndispatchSpy = _sinon.default.spy();",
                  "err": {},
                  "uuid": "6eb67bc6-bd0b-4876-b195-9aee009b725a",
                  "parentUUID": "8ab15f10-5897-426b-90d8-35e87dfb390b",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should dispatch loading and success actions for fetching folders",
                  "fullTitle": "/actions/messaging fetchFolder should dispatch loading and success actions for fetching folders",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var response = _testMessagingResponse.folderSuccess;\n(0, _helpers.setFetchJSONResponse)(global.fetch.onCall(0), response);\nvar thunk = (0, _messaging.fetchFolder)(0, '?page=1&per_page=999&use_cache=false');\nvar dispatch = function dispatch(action) {\n  dispatchSpy(action);\n  if (dispatchSpy.callCount === 2) {\n    (0, _chai.expect)(dispatchSpy.firstCall.args[0].type).to.equal(_messaging.LOADING_FOLDER);\n    (0, _chai.expect)(dispatchSpy.secondCall.args[0].type).to.equal(_messaging.FETCH_FOLDER_SUCCESS);\n  }\n};\nthunk(dispatch);",
                  "err": {},
                  "uuid": "327ce4a4-1343-4c35-a75c-0f2f8a377644",
                  "parentUUID": "8ab15f10-5897-426b-90d8-35e87dfb390b",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should dispatch error action for fetching folders",
                  "fullTitle": "/actions/messaging fetchFolder should dispatch error action for fetching folders",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var response = _testMessagingResponse.folderError;\n(0, _helpers.setFetchJSONFailure)(global.fetch.onCall(0), response);\nvar thunk = (0, _messaging.fetchFolder)();\nvar dispatch = function dispatch(action) {\n  dispatchSpy(action);\n  if (dispatchSpy.callCount === 2) {\n    (0, _chai.expect)(dispatchSpy.secondCall.args[0].type).to.equal(_messaging.FETCH_FOLDER_FAILURE);\n  }\n};\nthunk(dispatch);",
                  "err": {},
                  "uuid": "2ebfcb00-aec2-45e1-a1dd-df6a5a6b1fa2",
                  "parentUUID": "8ab15f10-5897-426b-90d8-35e87dfb390b",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "327ce4a4-1343-4c35-a75c-0f2f8a377644",
                "2ebfcb00-aec2-45e1-a1dd-df6a5a6b1fa2"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "b07dbb75-dcbd-46d4-b67c-1cd4be457085",
              "title": "fetchRecipients",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/dashboard/tests/actions/messaging.unit.spec.jsx",
              "file": "/src/applications/personalization/dashboard/tests/actions/messaging.unit.spec.jsx",
              "beforeHooks": [
                {
                  "title": "\"before each\" hook in \"fetchRecipients\"",
                  "fullTitle": "/actions/messaging fetchRecipients \"before each\" hook in \"fetchRecipients\"",
                  "timedOut": false,
                  "duration": 1,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _helpers.mockFetch)();\ndispatchSpy = _sinon.default.spy();",
                  "err": {},
                  "uuid": "359e77d4-362b-4611-8130-11f3ab068867",
                  "parentUUID": "b07dbb75-dcbd-46d4-b67c-1cd4be457085",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should dispatch loading and success actions for fetching folders",
                  "fullTitle": "/actions/messaging fetchRecipients should dispatch loading and success actions for fetching folders",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var response = _testMessagingResponse.recipientSuccess;\n(0, _helpers.setFetchJSONResponse)(global.fetch.onCall(0), response);\nvar thunk = (0, _messaging.fetchRecipients)();\nvar dispatch = function dispatch(action) {\n  dispatchSpy(action);\n  if (dispatchSpy.callCount === 2) {\n    (0, _chai.expect)(dispatchSpy.firstCall.args[0].type).to.equal(_messaging.LOADING_RECIPIENTS);\n    (0, _chai.expect)(dispatchSpy.secondCall.args[0].type).to.equal(_messaging.FETCH_RECIPIENTS_SUCCESS);\n  }\n};\nthunk(dispatch);",
                  "err": {},
                  "uuid": "3c43f8ee-d362-489b-938e-0f1b80a93dd1",
                  "parentUUID": "b07dbb75-dcbd-46d4-b67c-1cd4be457085",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should dispatch error action",
                  "fullTitle": "/actions/messaging fetchRecipients should dispatch error action",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var response = _testMessagingResponse.recipientError;\n(0, _helpers.setFetchJSONFailure)(global.fetch.onCall(0), response);\nvar thunk = (0, _messaging.fetchRecipients)();\nvar dispatch = function dispatch(action) {\n  dispatchSpy(action);\n  if (dispatchSpy.callCount === 2) {\n    (0, _chai.expect)(dispatchSpy.secondCall.args[0].type).to.equal(_messaging.FETCH_RECIPIENTS_FAILURE);\n  }\n};\nthunk(dispatch);",
                  "err": {},
                  "uuid": "93946d14-e7c6-46cf-a754-2f9edf14bac1",
                  "parentUUID": "b07dbb75-dcbd-46d4-b67c-1cd4be457085",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "3c43f8ee-d362-489b-938e-0f1b80a93dd1",
                "93946d14-e7c6-46cf-a754-2f9edf14bac1"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "d283f71e-5eb7-4547-b92f-c8fef29b8a13",
          "title": "getAllPayments action",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/dashboard/tests/actions/payments.unit.spec.jsx",
          "file": "/src/applications/personalization/dashboard/tests/actions/payments.unit.spec.jsx",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"getAllPayments action\"",
              "fullTitle": "getAllPayments action \"before each\" hook in \"getAllPayments action\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, _helpers.mockFetch)();\noldDataLayer = global.window.dataLayer;\nglobal.window.dataLayer = [];\ndispatchSpy = _sinon.default.spy();",
              "err": {},
              "uuid": "a6aaf16b-8f46-4d50-9a24-14ce8f6f85db",
              "parentUUID": "d283f71e-5eb7-4547-b92f-c8fef29b8a13",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after each\" hook in \"getAllPayments action\"",
              "fullTitle": "getAllPayments action \"after each\" hook in \"getAllPayments action\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "global.window.dataLayer = oldDataLayer;",
              "err": {},
              "uuid": "ba92ded7-1c08-4c63-a54d-48f4e4bd846c",
              "parentUUID": "d283f71e-5eb7-4547-b92f-c8fef29b8a13",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "should get all payments and dispatches success",
              "fullTitle": "getAllPayments action should get all payments and dispatches success",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var response = (0, _testPaymentsResponse.paymentsSuccess)();\n(0, _helpers.setFetchJSONResponse)(global.fetch.onCall(0), response);\nvar thunk = (0, _payments.getAllPayments)();\nvar dispatch = function dispatch(action) {\n  dispatchSpy(action);\n  if (dispatchSpy.callCount === 2) {\n    (0, _chai.expect)(dispatchSpy.secondCall.args[0].type).to.equal(_payments.PAYMENTS_RECEIVED_SUCCEEDED);\n    (0, _chai.expect)(global.window.dataLayer[0]).to.eql({\n      event: 'api_call',\n      'api-name': 'GET payment history',\n      'api-status': 'successful'\n    });\n  }\n};\nthunk(dispatch);",
              "err": {},
              "uuid": "b5773acc-91db-4d10-8f73-4d7fd7b6812b",
              "parentUUID": "d283f71e-5eb7-4547-b92f-c8fef29b8a13",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [
            {
              "uuid": "26598bdc-aaa9-4a0e-9b1d-a9ca91ea2849",
              "title": "onError callback",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/dashboard/tests/actions/payments.unit.spec.jsx",
              "file": "/src/applications/personalization/dashboard/tests/actions/payments.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "catch error and should dispatch a PAYMENTS_RECEIVED_FAILED action",
                  "fullTitle": "getAllPayments action onError callback catch error and should dispatch a PAYMENTS_RECEIVED_FAILED action",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var response = (0, _testPaymentsResponse.paymentsServerError)();\n(0, _helpers.setFetchJSONFailure)(global.fetch.onCall(0), response);\nvar thunk = (0, _payments.getAllPayments)();\nvar dispatch = function dispatch(action) {\n  dispatchSpy(action);\n  if (dispatchSpy.callCount === 2) {\n    (0, _chai.expect)(dispatchSpy.secondCall.args[0].type).to.equal(_payments.PAYMENTS_RECEIVED_FAILED);\n  }\n};\nthunk(dispatch);",
                  "err": {},
                  "uuid": "a6b1a7f0-dc0d-4434-8df4-c1e61a2bbddd",
                  "parentUUID": "26598bdc-aaa9-4a0e-9b1d-a9ca91ea2849",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should dispatch a PAYMENTS_RECEIVED_FAILED action and record event as server error",
                  "fullTitle": "getAllPayments action onError callback should dispatch a PAYMENTS_RECEIVED_FAILED action and record event as server error",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var response = (0, _testPaymentsResponse.paymentsServerError)();\n(0, _helpers.setFetchJSONResponse)(global.fetch.onCall(0), response);\nvar thunk = (0, _payments.getAllPayments)();\nvar dispatch = function dispatch(action) {\n  dispatchSpy(action);\n  if (dispatchSpy.callCount === 2) {\n    (0, _chai.expect)(dispatchSpy.secondCall.args[0].type).to.equal(_payments.PAYMENTS_RECEIVED_FAILED);\n    (0, _chai.expect)(global.window.dataLayer[0]).to.eql({\n      event: 'api_call',\n      'error-key': '500 server error',\n      'api-name': 'GET payment history',\n      'api-status': 'failed'\n    });\n  }\n};\nthunk(dispatch);",
                  "err": {},
                  "uuid": "18f758f9-2127-4d77-b695-2e47ab1a1736",
                  "parentUUID": "26598bdc-aaa9-4a0e-9b1d-a9ca91ea2849",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should dispatch a PAYMENTS_RECEIVED_FAILED action and record event as client error",
                  "fullTitle": "getAllPayments action onError callback should dispatch a PAYMENTS_RECEIVED_FAILED action and record event as client error",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var response = (0, _testPaymentsResponse.paymentsClientError)();\n(0, _helpers.setFetchJSONResponse)(global.fetch.onCall(0), response);\nvar thunk = (0, _payments.getAllPayments)();\nvar dispatch = function dispatch(action) {\n  dispatchSpy(action);\n  if (dispatchSpy.callCount === 2) {\n    (0, _chai.expect)(dispatchSpy.secondCall.args[0].type).to.equal(_payments.PAYMENTS_RECEIVED_FAILED);\n    (0, _chai.expect)(global.window.dataLayer[0]).to.eql({\n      event: 'api_call',\n      'error-key': '404 client error',\n      'api-name': 'GET payment history',\n      'api-status': 'failed'\n    });\n  }\n};\nthunk(dispatch);",
                  "err": {},
                  "uuid": "b0546904-b01b-4182-a1d1-e495c0240f68",
                  "parentUUID": "26598bdc-aaa9-4a0e-9b1d-a9ca91ea2849",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "a6b1a7f0-dc0d-4434-8df4-c1e61a2bbddd",
                "18f758f9-2127-4d77-b695-2e47ab1a1736",
                "b0546904-b01b-4182-a1d1-e495c0240f68"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            }
          ],
          "passes": [
            "b5773acc-91db-4d10-8f73-4d7fd7b6812b"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "70e1fc05-f78c-4a28-828e-659f6321a010",
          "title": "ApplicationsInProgress component",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/dashboard/tests/components/benefit-applications/ApplicationsInProgress.unit.spec.jsx",
          "file": "/src/applications/personalization/dashboard/tests/components/benefit-applications/ApplicationsInProgress.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "renders Draft forms",
              "fullTitle": "ApplicationsInProgress component renders Draft forms",
              "timedOut": false,
              "duration": 31,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var view = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n  store: store\n}, /*#__PURE__*/_react.default.createElement(_ApplicationsInProgress.default, {\n  hideH3: true,\n  savedForms: true\n})));\n(0, _chai.expect)(view.getByText('Application for disability compensation', {\n  exact: false\n})).to.exist;\n(0, _chai.expect)(view.getByText('Application for health care benefits', {\n  exact: false\n})).to.exist;\nvar applicationsInProgress = view.getAllByTestId('application-in-progress');\n(0, _chai.expect)(applicationsInProgress.length).to.equal(3);\n(0, _chai.expect)(applicationsInProgress[0]).to.contain.text('Draft');\n(0, _chai.expect)(applicationsInProgress[0]).to.contain.text('VA Form 21-526EZ');\n(0, _chai.expect)(applicationsInProgress[0]).to.contain.text('Application expires on: ');\n(0, _chai.expect)(applicationsInProgress[0]).to.contain.text((0, _dateFns.format)((0, _dateFns.fromUnixTime)(dayFromNow / 1000), 'MMMM d, yyyy'));\n(0, _chai.expect)(applicationsInProgress[0]).to.contain.text('Last saved on: ');\n(0, _chai.expect)(applicationsInProgress[0]).to.contain.text((0, _dateFns.format)((0, _dateFns.fromUnixTime)(dayAgo / 1000), 'MMMM d, yyyy'));\n(0, _chai.expect)(applicationsInProgress[1]).to.contain.text('Draft');\n(0, _chai.expect)(applicationsInProgress[1]).to.contain.text('VA Form 686C-674');\n(0, _chai.expect)(applicationsInProgress[1]).to.contain.text('Application expires on: ');\n(0, _chai.expect)(applicationsInProgress[1]).to.contain.text((0, _dateFns.format)((0, _dateFns.fromUnixTime)(weekFromNow / 1000), 'MMMM d, yyyy'));\n(0, _chai.expect)(applicationsInProgress[1]).to.contain.text('Last saved on: ');\n(0, _chai.expect)(applicationsInProgress[1]).to.contain.text((0, _dateFns.format)((0, _dateFns.fromUnixTime)(dayAgo / 1000), 'MMMM d, yyyy'));\n(0, _chai.expect)(applicationsInProgress[2]).to.contain.text('Draft');\n(0, _chai.expect)(applicationsInProgress[2]).to.contain.text('VA Form 10-10EZ');\n(0, _chai.expect)(applicationsInProgress[2]).to.contain.text('Application expires on: ');\n(0, _chai.expect)(applicationsInProgress[2]).to.contain.text((0, _dateFns.format)((0, _dateFns.fromUnixTime)(yearFromNow / 1000), 'MMMM d, yyyy'));\n(0, _chai.expect)(applicationsInProgress[2]).to.contain.text('Last saved on: ');\n(0, _chai.expect)(applicationsInProgress[2]).to.contain.text((0, _dateFns.format)((0, _dateFns.fromUnixTime)(dayAgo / 1000), 'MMMM d, yyyy'));",
              "err": {},
              "uuid": "0188ce03-4d33-4438-b612-e86d7ab11abc",
              "parentUUID": "70e1fc05-f78c-4a28-828e-659f6321a010",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "renders Submission Status forms",
              "fullTitle": "ApplicationsInProgress component renders Submission Status forms",
              "timedOut": false,
              "duration": 18,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var view = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n  store: store\n}, /*#__PURE__*/_react.default.createElement(_ApplicationsInProgress.default, {\n  hideH3: true,\n  submittedForms: formsWithStatus,\n  savedForms: true\n})));\nvar receivedApplications = view.getAllByTestId('submitted-application');\n(0, _chai.expect)(receivedApplications.length).to.equal(2);\n(0, _chai.expect)(receivedApplications[0]).to.contain.text('Submission in Progress');\n(0, _chai.expect)(receivedApplications[0]).to.contain.text('VA Form 21-0845');\n(0, _chai.expect)(receivedApplications[0]).to.contain.text('Submitted on: ');\n(0, _chai.expect)(receivedApplications[0]).to.contain.text('December 15, 2023');\n(0, _chai.expect)(receivedApplications[1]).to.contain.text('Received');\n(0, _chai.expect)(receivedApplications[1]).to.contain.text('VA Form 22-1990');\n(0, _chai.expect)(receivedApplications[1]).to.contain.text('Submitted on: ');\n(0, _chai.expect)(receivedApplications[1]).to.contain.text('December 15, 2023');\n(0, _chai.expect)(receivedApplications[1]).to.contain.text('Received on: ');\n(0, _chai.expect)(receivedApplications[1]).to.contain.text((0, _dateFns.format)(new Date(STATUS_UPDATED_AT), 'MMMM d, yyyy'));",
              "err": {},
              "uuid": "865cfa61-aa5d-4ca9-a357-2318f3a4ef9c",
              "parentUUID": "70e1fc05-f78c-4a28-828e-659f6321a010",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "renders accordion help message",
              "fullTitle": "ApplicationsInProgress component renders accordion help message",
              "timedOut": false,
              "duration": 16,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var view = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n  store: store\n}, /*#__PURE__*/_react.default.createElement(_ApplicationsInProgress.default, {\n  hideH3: true,\n  savedForms: true\n})));\n(0, _chai.expect)(view.getByTestId('missing-application-help')).to.exist;",
              "err": {},
              "uuid": "17c46531-e0ad-41cd-8231-4775d86a06b2",
              "parentUUID": "70e1fc05-f78c-4a28-828e-659f6321a010",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "0188ce03-4d33-4438-b612-e86d7ab11abc",
            "865cfa61-aa5d-4ca9-a357-2318f3a4ef9c",
            "17c46531-e0ad-41cd-8231-4775d86a06b2"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 65,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "0cdb77c2-556f-4b1f-ab38-142998521294",
          "title": "BenefitApplications component",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/dashboard/tests/components/benefit-applications/BenefitApplications.unit.spec.jsx",
          "file": "/src/applications/personalization/dashboard/tests/components/benefit-applications/BenefitApplications.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "renders correctly",
              "fullTitle": "BenefitApplications component renders correctly",
              "timedOut": false,
              "duration": 24,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var initialState = {};\nvar view = (0, _reactTestingLibraryHelpers.renderInReduxProvider)(/*#__PURE__*/_react.default.createElement(_BenefitApplications.default, null), {\n  initialState: initialState,\n  reducers: _reducers.default\n});\n(0, _chai.expect)(view.getByTestId('applications-in-progress')).to.exist;",
              "err": {},
              "uuid": "55a4b9a5-ef24-4a81-bf4c-1a8362cac51f",
              "parentUUID": "0cdb77c2-556f-4b1f-ab38-142998521294",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "55a4b9a5-ef24-4a81-bf4c-1a8362cac51f"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 24,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "8010f78a-8fbf-401e-93c3-c9edff58da7c",
          "title": "<BenefitPayments />",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/dashboard/tests/components/benefit-payments/BenefitPayments.unit.spec.jsx",
          "file": "/src/applications/personalization/dashboard/tests/components/benefit-payments/BenefitPayments.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "14f0cadb-b134-4abc-a65b-e1a3e9c4b269",
              "title": "when there are recent payments",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/dashboard/tests/components/benefit-payments/BenefitPayments.unit.spec.jsx",
              "file": "/src/applications/personalization/dashboard/tests/components/benefit-payments/BenefitPayments.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should render the payment card",
                  "fullTitle": "<BenefitPayments /> when there are recent payments should render the payment card",
                  "timedOut": false,
                  "duration": 9,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var initialState = {\n  user: user,\n  allPayments: {\n    isLoading: false,\n    error: null,\n    payments: [{\n      payCheckAmount: '$3,261.10',\n      payCheckDt: (0, _helpers.oneDayAgo)(),\n      payCheckId: '001',\n      payCheckReturnFiche: 'C',\n      payCheckType: 'Compensation & Pension - Recurring',\n      paymentMethod: ' Direct Deposit',\n      bankName: 'NAVY FEDERAL CREDIT UNION',\n      accountNumber: '****1234'\n    }]\n  }\n};\nvar view = (0, _reactTestingLibraryHelpers.renderInReduxProvider)(/*#__PURE__*/_react.default.createElement(_BenefitPayments.default, null), {\n  initialState: initialState,\n  reducers: _reducers.default\n});\n(0, _chai.expect)(view.getByTestId('dashboard-section-payment')).to.exist;\n(0, _chai.expect)(view.queryByTestId('payment-card')).to.exist;\n(0, _chai.expect)(view.getByTestId('manage-direct-deposit-link')).to.exist;\n(0, _chai.expect)(view.queryByTestId('no-recent-payments-text')).to.not.exist;\n(0, _chai.expect)(view.queryByTestId('view-payment-history-link')).to.not.exist;\n(0, _chai.expect)(view.queryByTestId('payments-error')).to.not.exist;",
                  "err": {},
                  "uuid": "fac7277c-061e-47fb-9f2d-753be90e5bfd",
                  "parentUUID": "14f0cadb-b134-4abc-a65b-e1a3e9c4b269",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "fac7277c-061e-47fb-9f2d-753be90e5bfd"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 9,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "c6324b65-a62d-4a32-945c-fb2ec2a537bf",
              "title": "when there are no recent payments",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/dashboard/tests/components/benefit-payments/BenefitPayments.unit.spec.jsx",
              "file": "/src/applications/personalization/dashboard/tests/components/benefit-payments/BenefitPayments.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should render the no payments text",
                  "fullTitle": "<BenefitPayments /> when there are no recent payments should render the no payments text",
                  "timedOut": false,
                  "duration": 7,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var initialState = {\n  user: user,\n  allPayments: {\n    isLoading: false,\n    error: null,\n    payments: [{\n      payCheckAmount: '$3,261.10',\n      payCheckDt: '04/01/2019',\n      payCheckId: '001',\n      payCheckReturnFiche: 'C',\n      payCheckType: 'Compensation & Pension - Recurring',\n      paymentMethod: ' Direct Deposit',\n      bankName: 'NAVY FEDERAL CREDIT UNION',\n      accountNumber: '****1234'\n    }, {\n      payCheckAmount: '$3,261.10',\n      payCheckDt: '04/01/2019',\n      payCheckId: '001',\n      payCheckReturnFiche: 'C',\n      payCheckType: 'Compensation & Pension - Recurring',\n      paymentMethod: ' Direct Deposit',\n      bankName: 'NAVY FEDERAL CREDIT UNION',\n      accountNumber: '****1234'\n    }]\n  }\n};\nvar view = (0, _reactTestingLibraryHelpers.renderInReduxProvider)(/*#__PURE__*/_react.default.createElement(_BenefitPayments.default, null), {\n  initialState: initialState,\n  reducers: _reducers.default\n});\n(0, _chai.expect)(view.getByTestId('dashboard-section-payment')).to.exist;\n(0, _chai.expect)(view.getByTestId('no-recent-payments-text')).to.exist;\n(0, _chai.expect)(view.getByTestId('manage-direct-deposit-link')).to.exist;\n(0, _chai.expect)(view.getByTestId('view-payment-history-link')).to.exist;\n(0, _chai.expect)(view.queryByTestId('payment-card')).to.not.exist;\n(0, _chai.expect)(view.queryByTestId('payments-error')).to.not.exist;",
                  "err": {},
                  "uuid": "e5640255-d1fc-4ff8-bbde-bf72e78c9c70",
                  "parentUUID": "c6324b65-a62d-4a32-945c-fb2ec2a537bf",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "e5640255-d1fc-4ff8-bbde-bf72e78c9c70"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 7,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "026b4154-e80d-421d-ade7-4afd16b2aa4d",
              "title": "when there is a payment error",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/dashboard/tests/components/benefit-payments/BenefitPayments.unit.spec.jsx",
              "file": "/src/applications/personalization/dashboard/tests/components/benefit-payments/BenefitPayments.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should render the payment error card",
                  "fullTitle": "<BenefitPayments /> when there is a payment error should render the payment error card",
                  "timedOut": false,
                  "duration": 9,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var initialState = {\n  user: user,\n  allPayments: {\n    isLoading: false,\n    error: true,\n    payments: []\n  }\n};\nvar view = (0, _reactTestingLibraryHelpers.renderInReduxProvider)(/*#__PURE__*/_react.default.createElement(_BenefitPayments.default, null), {\n  initialState: initialState,\n  reducers: _reducers.default\n});\n(0, _chai.expect)(view.getByTestId('payments-error')).to.exist;\n(0, _chai.expect)(view.getByTestId('dashboard-section-payment')).to.exist;\n(0, _chai.expect)(view.getByTestId('manage-direct-deposit-link')).to.exist;\n(0, _chai.expect)(view.getByTestId('view-payment-history-link')).to.exist;\n(0, _chai.expect)(view.queryByTestId('no-recent-payments-text')).to.not.exist;\n(0, _chai.expect)(view.queryByTestId('payment-card')).to.not.exist;",
                  "err": {},
                  "uuid": "5a7edd91-053a-4c37-8e3a-460b3bcb6fa5",
                  "parentUUID": "026b4154-e80d-421d-ade7-4afd16b2aa4d",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "5a7edd91-053a-4c37-8e3a-460b3bcb6fa5"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 9,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "b53bd8aa-ea2f-41c3-aead-92892a57217b",
          "title": "<PaymentsCard />",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/dashboard/tests/components/benefit-payments/PaymentsCard.unit.spec.jsx",
          "file": "/src/applications/personalization/dashboard/tests/components/benefit-payments/PaymentsCard.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should render the payment card",
              "fullTitle": "<PaymentsCard /> should render the payment card",
              "timedOut": false,
              "duration": 8,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var view = (0, _reactTestingLibraryHelpers.renderWithStoreAndRouter)(/*#__PURE__*/_react.default.createElement(_PaymentsCard.default, {\n  lastPayment: payment\n}), {\n  initialState: {}\n});\n(0, _chai.expect)(view.getByTestId('payment-card')).to.exist;\nvar depositHeader = view.getByTestId('deposit-header');\n(0, _chai.expect)((0, _dom.within)(depositHeader).getByText(/\\+.*\\$3,261\\.10/)).to.exist;\n(0, _chai.expect)(view.getByText(/Compensation & Pension - Recurring/i)).to.exist;\nvar depositedOn = \"Deposited on \".concat((0, _dateFns.format)(payment.payCheckDt, 'MMMM d, yyyy'));\n(0, _chai.expect)(view.getByText(depositedOn, {\n  exact: false\n})).to.exist;\n(0, _chai.expect)(view.getByTestId('payment-card-view-history-link')).to.exist;",
              "err": {},
              "uuid": "4a10a18a-70c9-4701-8b6c-aa484ea9ae80",
              "parentUUID": "b53bd8aa-ea2f-41c3-aead-92892a57217b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should render the check mailed text",
              "fullTitle": "<PaymentsCard /> should render the check mailed text",
              "timedOut": false,
              "duration": 11,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var pmt = _objectSpread(_objectSpread({}, payment), {}, {\n  paymentMethod: 'Paper Check'\n});\nvar view = (0, _reactTestingLibraryHelpers.renderWithStoreAndRouter)(/*#__PURE__*/_react.default.createElement(_PaymentsCard.default, {\n  lastPayment: pmt\n}), {\n  initialState: {}\n});\nvar mailedOn = \"Check mailed on \".concat((0, _dateFns.format)(payment.payCheckDt, 'MMMM d, yyyy'));\n(0, _chai.expect)(view.getByText(mailedOn, {\n  exact: false\n})).to.exist;",
              "err": {},
              "uuid": "ec6660e8-d18f-4b4f-8770-f5b57de5f812",
              "parentUUID": "b53bd8aa-ea2f-41c3-aead-92892a57217b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "4a10a18a-70c9-4701-8b6c-aa484ea9ae80",
            "ec6660e8-d18f-4b4f-8770-f5b57de5f812"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 19,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "bd66ffbd-41ce-4385-8daa-a16c4cba34a7",
          "title": "General Widget",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/dashboard/tests/components/CernerWidgets.unit.spec.jsx",
          "file": "/src/applications/personalization/dashboard/tests/components/CernerWidgets.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "5c97f6ef-da89-4368-b0e0-fa54a9aa5e03",
              "title": "Cerner V1",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/dashboard/tests/components/CernerWidgets.unit.spec.jsx",
              "file": "/src/applications/personalization/dashboard/tests/components/CernerWidgets.unit.spec.jsx",
              "beforeHooks": [
                {
                  "title": "\"before each\" hook in \"Cerner V1\"",
                  "fullTitle": "General Widget Cerner V1 \"before each\" hook in \"Cerner V1\"",
                  "timedOut": false,
                  "duration": 5,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var initialState = {\n  featureToggles: _defineProperty({}, _featureToggles3.Toggler.TOGGLE_NAMES.vaOnlineSchedulingStaticLandingPage, false)\n};\nview = (0, _reactTestingLibraryHelpers.renderWithStoreAndRouter)(/*#__PURE__*/_react.default.createElement(_CernerWidgets.CernerWidget, {\n  facilityLocations: facilityLocations\n}), {\n  initialState: initialState\n});",
                  "err": {},
                  "uuid": "83525ae3-d0bb-4c3d-b2e3-093c5ff350ed",
                  "parentUUID": "5c97f6ef-da89-4368-b0e0-fa54a9aa5e03",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [],
              "tests": [
                {
                  "title": "renders the correct text, including the facility names",
                  "fullTitle": "General Widget Cerner V1 renders the correct text, including the facility names",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)(view.getByTestId('facilities').textContent).to.contain(\"For \".concat(facilityLocations[0], \":\"));",
                  "err": {},
                  "uuid": "267ab922-c42c-4d98-91e1-71d135cbe65d",
                  "parentUUID": "5c97f6ef-da89-4368-b0e0-fa54a9aa5e03",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "renders the correct primary CTA link",
                  "fullTitle": "General Widget Cerner V1 renders the correct primary CTA link",
                  "timedOut": false,
                  "duration": 29,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var myVAHealthLink = view.getByRole('link', {\n  name: /Use My VA Health/i\n});\nvar cernerURL = (0, _cerner.getCernerURL)('');\n(0, _chai.expect)(myVAHealthLink.getAttribute('href')).to.equal(cernerURL);",
                  "err": {},
                  "uuid": "24317a15-5964-493e-be7b-5a31eb30839a",
                  "parentUUID": "5c97f6ef-da89-4368-b0e0-fa54a9aa5e03",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "renders the correct secondary CTA link",
                  "fullTitle": "General Widget Cerner V1 renders the correct secondary CTA link",
                  "timedOut": false,
                  "duration": 14,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var ctaLink = view.getByRole('link', {\n  name: /Use My HealtheVet/i\n});\n(0, _chai.expect)(ctaLink.getAttribute('href')).to.contain('https://mhv-syst.myhealth.va.gov/mhv-portal-web/home');",
                  "err": {},
                  "uuid": "f8ee825c-6024-40f0-81bb-291daece9059",
                  "parentUUID": "5c97f6ef-da89-4368-b0e0-fa54a9aa5e03",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "267ab922-c42c-4d98-91e1-71d135cbe65d",
                "24317a15-5964-493e-be7b-5a31eb30839a",
                "f8ee825c-6024-40f0-81bb-291daece9059"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 44,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "7e947f48-9aca-4235-aaab-c174224f4ba3",
              "title": "Cerner V2",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/dashboard/tests/components/CernerWidgets.unit.spec.jsx",
              "file": "/src/applications/personalization/dashboard/tests/components/CernerWidgets.unit.spec.jsx",
              "beforeHooks": [
                {
                  "title": "\"before each\" hook in \"Cerner V2\"",
                  "fullTitle": "General Widget Cerner V2 \"before each\" hook in \"Cerner V2\"",
                  "timedOut": false,
                  "duration": 4,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var initialState = {\n  featureToggles: _defineProperty({}, _featureToggles3.Toggler.TOGGLE_NAMES.vaOnlineSchedulingStaticLandingPage, true)\n};\nview = (0, _reactTestingLibraryHelpers.renderWithStoreAndRouter)(/*#__PURE__*/_react.default.createElement(_CernerWidgets.CernerWidget, {\n  facilityLocations: facilityLocations\n}), {\n  initialState: initialState\n});",
                  "err": {},
                  "uuid": "298ba404-ee2e-4dee-9877-e52d0206da65",
                  "parentUUID": "7e947f48-9aca-4235-aaab-c174224f4ba3",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [],
              "tests": [
                {
                  "title": "renders the correct text, including the facility names",
                  "fullTitle": "General Widget Cerner V2 renders the correct text, including the facility names",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)(view.getByTestId('facilities').textContent).to.contain(\"\".concat(facilityLocations[0]));",
                  "err": {},
                  "uuid": "dadcf028-27d6-4c31-a5a4-aa3c6dfb2ff8",
                  "parentUUID": "7e947f48-9aca-4235-aaab-c174224f4ba3",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "renders the correct primary CTA link",
                  "fullTitle": "General Widget Cerner V2 renders the correct primary CTA link",
                  "timedOut": false,
                  "duration": 14,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var myVAHealthLink = view.getByRole('link', {\n  name: /Go to My VA Health/i\n});\nvar cernerURL = (0, _cerner.getCernerURL)('');\n(0, _chai.expect)(myVAHealthLink.getAttribute('href')).to.equal(cernerURL);",
                  "err": {},
                  "uuid": "51568e80-f6be-4222-9d29-9bb31c212884",
                  "parentUUID": "7e947f48-9aca-4235-aaab-c174224f4ba3",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "renders the correct secondary CTA link",
                  "fullTitle": "General Widget Cerner V2 renders the correct secondary CTA link",
                  "timedOut": false,
                  "duration": 13,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var ctaLink = view.getByRole('link', {\n  name: /Go to My HealtheVet/i\n});\n(0, _chai.expect)(ctaLink.getAttribute('href')).to.contain('https://mhv-syst.myhealth.va.gov/mhv-portal-web/home');",
                  "err": {},
                  "uuid": "4d38369f-9998-43bf-9c1c-e77e6d13c16a",
                  "parentUUID": "7e947f48-9aca-4235-aaab-c174224f4ba3",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "dadcf028-27d6-4c31-a5a4-aa3c6dfb2ff8",
                "51568e80-f6be-4222-9d29-9bb31c212884",
                "4d38369f-9998-43bf-9c1c-e77e6d13c16a"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 27,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "a8e7c0a7-4f0f-4c21-be0a-e8059f73549c",
          "title": "<Appeal />",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/dashboard/tests/components/claims-and-appeals/Appeal.unit.spec.jsx",
          "file": "/src/applications/personalization/dashboard/tests/components/claims-and-appeals/Appeal.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should render",
              "fullTitle": "<Appeal /> should render",
              "timedOut": false,
              "duration": 7,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var appeal = makeAppealObject({\n  updateDate: (0, _helpers.daysAgo)(1)\n});\nvar updatedDate = (0, _dateFns.format)(new Date((0, _helpers2.replaceDashesWithSlashes)((0, _helpers.daysAgo)(1))), 'MMMM d, yyyy');\nvar appealTitle = \"Disability compensation appeal updated on \".concat(updatedDate);\nvar tree = (0, _reactTestingLibraryHelpers.renderWithStoreAndRouter)(/*#__PURE__*/_react.default.createElement(_Appeal.default, {\n  appeal: appeal,\n  name: name\n}), {\n  initialState: {}\n});\n(0, _chai.expect)(tree.getByText(appealTitle)).to.exist;\n(0, _chai.expect)(tree.getByText(/Status: Your appeal is waiting to be sent to a judge/)).to.exist;\n(0, _chai.expect)(tree.getByText(/Issue on appeal: Benefits as a result of VA error/)).to.exist;\n(0, _chai.expect)(tree.getByText(/Submitted on: February 3, 2012/, {\n  exact: false\n})).to.exist;\n(0, _chai.expect)(tree.getByText(/Review details/)).to.exist;",
              "err": {},
              "uuid": "80e1ace1-1ebf-40a2-9031-5bfcb2e79672",
              "parentUUID": "a8e7c0a7-4f0f-4c21-be0a-e8059f73549c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [
            {
              "uuid": "725cd5e0-688d-4f44-a3d5-bc8f3d95e1c5",
              "title": "title",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/dashboard/tests/components/claims-and-appeals/Appeal.unit.spec.jsx",
              "file": "/src/applications/personalization/dashboard/tests/components/claims-and-appeals/Appeal.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should render the correct title for supplement claims",
                  "fullTitle": "<Appeal /> title should render the correct title for supplement claims",
                  "timedOut": false,
                  "duration": 5,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var appeal = makeAppealObject({\n  updateDate: (0, _helpers.daysAgo)(1),\n  type: _appealsHelpers.APPEAL_TYPES.supplementalClaim\n});\nvar tree = (0, _reactTestingLibraryHelpers.renderWithStoreAndRouter)(/*#__PURE__*/_react.default.createElement(_Appeal.default, {\n  appeal: appeal,\n  name: name\n}), {\n  initialState: {}\n});\n(0, _chai.expect)(tree.getByText(/Supplemental claim for disability compensation updated on/)).to.exist;",
                  "err": {},
                  "uuid": "722a029e-7378-4203-8ffe-ae1d3ee6572a",
                  "parentUUID": "725cd5e0-688d-4f44-a3d5-bc8f3d95e1c5",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should render the correct title for higher level reviews",
                  "fullTitle": "<Appeal /> title should render the correct title for higher level reviews",
                  "timedOut": false,
                  "duration": 4,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var appeal = makeAppealObject({\n  updateDate: (0, _helpers.daysAgo)(1),\n  type: _appealsHelpers.APPEAL_TYPES.higherLevelReview\n});\nvar tree = (0, _reactTestingLibraryHelpers.renderWithStoreAndRouter)(/*#__PURE__*/_react.default.createElement(_Appeal.default, {\n  appeal: appeal,\n  name: name\n}), {\n  initialState: {}\n});\n(0, _chai.expect)(tree.getByText(/Higher-level review for disability compensation updated on/)).to.exist;",
                  "err": {},
                  "uuid": "5f8db046-d41a-47f1-980b-eac06beca75a",
                  "parentUUID": "725cd5e0-688d-4f44-a3d5-bc8f3d95e1c5",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should render the correct title for the appeal type",
                  "fullTitle": "<Appeal /> title should render the correct title for the appeal type",
                  "timedOut": false,
                  "duration": 4,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var appeal = makeAppealObject({\n  updateDate: (0, _helpers.daysAgo)(1),\n  type: _appealsHelpers.APPEAL_TYPES.appeal\n});\nvar tree = (0, _reactTestingLibraryHelpers.renderWithStoreAndRouter)(/*#__PURE__*/_react.default.createElement(_Appeal.default, {\n  appeal: appeal,\n  name: name\n}), {\n  initialState: {}\n});\n(0, _chai.expect)(tree.getByText(/Disability compensation appeal updated on/)).to.exist;",
                  "err": {},
                  "uuid": "81062e84-b56f-4389-9bd7-2ed9efc5d51c",
                  "parentUUID": "725cd5e0-688d-4f44-a3d5-bc8f3d95e1c5",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "722a029e-7378-4203-8ffe-ae1d3ee6572a",
                "5f8db046-d41a-47f1-980b-eac06beca75a",
                "81062e84-b56f-4389-9bd7-2ed9efc5d51c"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 13,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "80ea3d15-f60c-440c-bba0-f6598b86ddb7",
              "title": "description with multiple issues",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/dashboard/tests/components/claims-and-appeals/Appeal.unit.spec.jsx",
              "file": "/src/applications/personalization/dashboard/tests/components/claims-and-appeals/Appeal.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should render the right description when it is an appeal",
                  "fullTitle": "<Appeal /> description with multiple issues should render the right description when it is an appeal",
                  "timedOut": false,
                  "duration": 6,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var appeal = makeAppealObject({\n  updateDate: (0, _helpers.daysAgo)(1)\n});\nappeal.attributes.issues.push(appeal.attributes.issues.first);\nvar tree = (0, _reactTestingLibraryHelpers.renderWithStoreAndRouter)(/*#__PURE__*/_react.default.createElement(_Appeal.default, {\n  appeal: appeal,\n  name: name\n}), {\n  initialState: {}\n});\n(0, _chai.expect)(tree.getByText(/Issues on appeal: Benefits as a result of VA error/)).to.exist;",
                  "err": {},
                  "uuid": "6dfd00d9-c827-4075-a999-0cc4170fc65c",
                  "parentUUID": "80ea3d15-f60c-440c-bba0-f6598b86ddb7",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should render the right description when it is not an appeal",
                  "fullTitle": "<Appeal /> description with multiple issues should render the right description when it is not an appeal",
                  "timedOut": false,
                  "duration": 5,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var appeal = makeAppealObject({\n  updateDate: (0, _helpers.daysAgo)(1),\n  type: _appealsHelpers.APPEAL_TYPES.supplementalClaim\n});\nappeal.attributes.issues.push(appeal.attributes.issues.first);\nvar tree = (0, _reactTestingLibraryHelpers.renderWithStoreAndRouter)(/*#__PURE__*/_react.default.createElement(_Appeal.default, {\n  appeal: appeal,\n  name: name\n}), {\n  initialState: {}\n});\n(0, _chai.expect)(tree.getByText(/Issues on review: Benefits as a result of VA error/)).to.exist;",
                  "err": {},
                  "uuid": "b382adbf-e393-440a-a541-420448be2554",
                  "parentUUID": "80ea3d15-f60c-440c-bba0-f6598b86ddb7",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "6dfd00d9-c827-4075-a999-0cc4170fc65c",
                "b382adbf-e393-440a-a541-420448be2554"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 11,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            }
          ],
          "passes": [
            "80e1ace1-1ebf-40a2-9031-5bfcb2e79672"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 7,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "1d721924-1212-4a72-a9ee-02dd3540c570",
          "title": "<Claim />",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/dashboard/tests/components/claims-and-appeals/Claim.unit.spec.jsx",
          "file": "/src/applications/personalization/dashboard/tests/components/claims-and-appeals/Claim.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should render",
              "fullTitle": "<Claim /> should render",
              "timedOut": false,
              "duration": 14,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var claim = makeClaimObject({\n  updateDate: (0, _helpers.daysAgo)(15)\n});\nvar tree = (0, _reactTestingLibraryHelpers.renderWithStoreAndRouter)(/*#__PURE__*/_react.default.createElement(_Claim.default, {\n  claim: claim\n}), {\n  initialState: {}\n});\n(0, _chai.expect)(tree.getByRole('heading', {\n  name: /Compensation claim received January 21, 2021/\n})).to.exist;\n(0, _chai.expect)(tree.getByText(/Review details/)).to.exist;",
              "err": {},
              "uuid": "2cebb37c-a13a-48ab-8db1-9b3255698429",
              "parentUUID": "1d721924-1212-4a72-a9ee-02dd3540c570",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should render a notification when a decision letter is sent",
              "fullTitle": "<Claim /> should render a notification when a decision letter is sent",
              "timedOut": false,
              "duration": 4,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var claim = makeClaimObject({\n  updateDate: (0, _helpers.daysAgo)(15),\n  decisionLetterSent: true\n});\nvar tree = (0, _reactTestingLibraryHelpers.renderWithStoreAndRouter)(/*#__PURE__*/_react.default.createElement(_Claim.default, {\n  claim: claim\n}), {\n  initialState: {}\n});\n(0, _chai.expect)(tree.getByText(/We sent you a decision letter/)).to.exist;",
              "err": {},
              "uuid": "c58dcb09-588f-4552-a2dd-cf585a578f4f",
              "parentUUID": "1d721924-1212-4a72-a9ee-02dd3540c570",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should render a notification when a development letter is sent",
              "fullTitle": "<Claim /> should render a notification when a development letter is sent",
              "timedOut": false,
              "duration": 4,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var claim = makeClaimObject({\n  updateDate: (0, _helpers.daysAgo)(15),\n  developmentLetterSent: true\n});\nvar tree = (0, _reactTestingLibraryHelpers.renderWithStoreAndRouter)(/*#__PURE__*/_react.default.createElement(_Claim.default, {\n  claim: claim\n}), {\n  initialState: {}\n});\n(0, _chai.expect)(tree.getByText(/We sent you a development letter/)).to.exist;",
              "err": {},
              "uuid": "8e04092a-06cc-407b-8a95-cb052ab5c463",
              "parentUUID": "1d721924-1212-4a72-a9ee-02dd3540c570",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should render a notification when documents are needed",
              "fullTitle": "<Claim /> should render a notification when documents are needed",
              "timedOut": false,
              "duration": 4,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var claim = makeClaimObject({\n  updateDate: (0, _helpers.daysAgo)(15),\n  documentsNeeded: true\n});\nvar tree = (0, _reactTestingLibraryHelpers.renderWithStoreAndRouter)(/*#__PURE__*/_react.default.createElement(_Claim.default, {\n  claim: claim\n}), {\n  initialState: {}\n});\n(0, _chai.expect)(tree.getByText(/Items need attention/)).to.exist;",
              "err": {},
              "uuid": "76792a6d-23b3-47a4-8cee-b911f1145b16",
              "parentUUID": "1d721924-1212-4a72-a9ee-02dd3540c570",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "2cebb37c-a13a-48ab-8db1-9b3255698429",
            "c58dcb09-588f-4552-a2dd-cf585a578f4f",
            "8e04092a-06cc-407b-8a95-cb052ab5c463",
            "76792a6d-23b3-47a4-8cee-b911f1145b16"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 26,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "6cdb8d2b-6977-4591-a664-4dd9edb29a08",
          "title": "ClaimsAndAppeals component",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/dashboard/tests/components/claims-and-appeals/ClaimsAndAppeals.unit.spec.jsx",
          "file": "/src/applications/personalization/dashboard/tests/components/claims-and-appeals/ClaimsAndAppeals.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "61a1261a-f164-4a08-97c6-b77b91be5970",
              "title": "error states",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/dashboard/tests/components/claims-and-appeals/ClaimsAndAppeals.unit.spec.jsx",
              "file": "/src/applications/personalization/dashboard/tests/components/claims-and-appeals/ClaimsAndAppeals.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [],
              "suites": [
                {
                  "uuid": "a8533d07-b6d6-4c4d-94b6-6c3f86aec129",
                  "title": "when there is an error fetching appeals data",
                  "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/dashboard/tests/components/claims-and-appeals/ClaimsAndAppeals.unit.spec.jsx",
                  "file": "/src/applications/personalization/dashboard/tests/components/claims-and-appeals/ClaimsAndAppeals.unit.spec.jsx",
                  "beforeHooks": [
                    {
                      "title": "\"before each\" hook in \"when there is an error fetching appeals data\"",
                      "fullTitle": "ClaimsAndAppeals component error states when there is an error fetching appeals data \"before each\" hook in \"when there is an error fetching appeals data\"",
                      "timedOut": false,
                      "duration": 4,
                      "state": null,
                      "speed": null,
                      "pass": false,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "initialState = {\n  user: claimsAppealsUser(),\n  claims: {\n    appealsLoading: false,\n    claimsLoading: false,\n    appeals: [],\n    claims: [],\n    appealsAvailability: 'ERROR'\n  }\n};\nview = (0, _reactTestingLibraryHelpers.renderInReduxProvider)(/*#__PURE__*/_react.default.createElement(_ClaimsAndAppeals.default, {\n  dataLoadingDisabled: true\n}), {\n  initialState: initialState,\n  reducers: _reducers.default\n});",
                      "err": {},
                      "uuid": "1b6bede7-b9dd-4f0f-bb75-f08fe0792595",
                      "parentUUID": "a8533d07-b6d6-4c4d-94b6-6c3f86aec129",
                      "isHook": true,
                      "skipped": false
                    }
                  ],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "should render an error alert",
                      "fullTitle": "ClaimsAndAppeals component error states when there is an error fetching appeals data should render an error alert",
                      "timedOut": false,
                      "duration": 20,
                      "state": "passed",
                      "speed": "slow",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "(0, _chai.expect)(view.queryByRole('progressbar')).to.not.exist;\n(0, _chai.expect)(view.queryByRole('heading', {\n  name: /^claims and appeals$/i\n})).to.exist;\nloadingErrorAlertExists(view);",
                      "err": {},
                      "uuid": "3f110db2-6c58-4758-90bc-ddd2c43590ba",
                      "parentUUID": "a8533d07-b6d6-4c4d-94b6-6c3f86aec129",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "should not show a CTA",
                      "fullTitle": "ClaimsAndAppeals component error states when there is an error fetching appeals data should not show a CTA",
                      "timedOut": false,
                      "duration": 6,
                      "state": "passed",
                      "speed": "slow",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "(0, _chai.expect)(view.queryByRole('link', {\n  name: /check your claim or appeal status/i\n})).to.not.exist;",
                      "err": {},
                      "uuid": "f2e6bb44-6c1f-46d6-923b-2690bb247ff8",
                      "parentUUID": "a8533d07-b6d6-4c4d-94b6-6c3f86aec129",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "3f110db2-6c58-4758-90bc-ddd2c43590ba",
                    "f2e6bb44-6c1f-46d6-923b-2690bb247ff8"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 26,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "2653784f-1d4e-4c08-bebe-68afadf3a7ab",
                  "title": "when there is an error fetching claims data",
                  "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/dashboard/tests/components/claims-and-appeals/ClaimsAndAppeals.unit.spec.jsx",
                  "file": "/src/applications/personalization/dashboard/tests/components/claims-and-appeals/ClaimsAndAppeals.unit.spec.jsx",
                  "beforeHooks": [
                    {
                      "title": "\"before each\" hook in \"when there is an error fetching claims data\"",
                      "fullTitle": "ClaimsAndAppeals component error states when there is an error fetching claims data \"before each\" hook in \"when there is an error fetching claims data\"",
                      "timedOut": false,
                      "duration": 4,
                      "state": null,
                      "speed": null,
                      "pass": false,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "initialState = {\n  user: claimsAppealsUser(),\n  claims: {\n    appealsLoading: false,\n    claimsLoading: false,\n    appeals: [],\n    claims: [],\n    claimsAvailability: _claimsHelpers.claimsAvailability.UNAVAILABLE\n  }\n};\nview = (0, _reactTestingLibraryHelpers.renderInReduxProvider)(/*#__PURE__*/_react.default.createElement(_ClaimsAndAppeals.default, {\n  dataLoadingDisabled: true\n}), {\n  initialState: initialState,\n  reducers: _reducers.default\n});",
                      "err": {},
                      "uuid": "3080c476-f08b-46f2-b6fd-38addd84c884",
                      "parentUUID": "2653784f-1d4e-4c08-bebe-68afadf3a7ab",
                      "isHook": true,
                      "skipped": false
                    }
                  ],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "should render an error alert",
                      "fullTitle": "ClaimsAndAppeals component error states when there is an error fetching claims data should render an error alert",
                      "timedOut": false,
                      "duration": 18,
                      "state": "passed",
                      "speed": "slow",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "(0, _chai.expect)(view.queryByRole('progressbar')).to.not.exist;\n(0, _chai.expect)(view.queryByRole('heading', {\n  name: /^claims and appeals$/i\n})).to.exist;\nloadingErrorAlertExists(view);",
                      "err": {},
                      "uuid": "affab22f-8780-4b57-92d5-50be3591479c",
                      "parentUUID": "2653784f-1d4e-4c08-bebe-68afadf3a7ab",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "should not show a CTA",
                      "fullTitle": "ClaimsAndAppeals component error states when there is an error fetching claims data should not show a CTA",
                      "timedOut": false,
                      "duration": 3,
                      "state": "passed",
                      "speed": "slow",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "(0, _chai.expect)(view.queryByRole('link', {\n  name: /check your claim or appeal status/i\n})).to.not.exist;",
                      "err": {},
                      "uuid": "add67888-fa4f-48fa-af58-9df48442cf21",
                      "parentUUID": "2653784f-1d4e-4c08-bebe-68afadf3a7ab",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "affab22f-8780-4b57-92d5-50be3591479c",
                    "add67888-fa4f-48fa-af58-9df48442cf21"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 21,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                }
              ],
              "passes": [],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "a38f03c0-9acd-43f4-809e-d791a3d0275d",
              "title": "happy path render logic",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/dashboard/tests/components/claims-and-appeals/ClaimsAndAppeals.unit.spec.jsx",
              "file": "/src/applications/personalization/dashboard/tests/components/claims-and-appeals/ClaimsAndAppeals.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [],
              "suites": [
                {
                  "uuid": "9559b5d0-f1bc-4faf-89f5-5d7b077cbe13",
                  "title": "when the user has no claims or appeals on file",
                  "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/dashboard/tests/components/claims-and-appeals/ClaimsAndAppeals.unit.spec.jsx",
                  "file": "/src/applications/personalization/dashboard/tests/components/claims-and-appeals/ClaimsAndAppeals.unit.spec.jsx",
                  "beforeHooks": [
                    {
                      "title": "\"before each\" hook in \"when the user has no claims or appeals on file\"",
                      "fullTitle": "ClaimsAndAppeals component happy path render logic when the user has no claims or appeals on file \"before each\" hook in \"when the user has no claims or appeals on file\"",
                      "timedOut": false,
                      "duration": 5,
                      "state": null,
                      "speed": null,
                      "pass": false,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "initialState = {\n  user: claimsAppealsUser(),\n  claims: {\n    appealsLoading: false,\n    claimsLoading: false,\n    appeals: [],\n    claims: []\n  }\n};\nview = (0, _reactTestingLibraryHelpers.renderInReduxProvider)(/*#__PURE__*/_react.default.createElement(_ClaimsAndAppeals.default, {\n  dataLoadingDisabled: true\n}), {\n  initialState: initialState,\n  reducers: _reducers.default\n});",
                      "err": {},
                      "uuid": "26e47787-e70a-414b-92c6-a9602a262320",
                      "parentUUID": "9559b5d0-f1bc-4faf-89f5-5d7b077cbe13",
                      "isHook": true,
                      "skipped": false
                    }
                  ],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "does not render anything except a headline",
                      "fullTitle": "ClaimsAndAppeals component happy path render logic when the user has no claims or appeals on file does not render anything except a headline",
                      "timedOut": false,
                      "duration": 10,
                      "state": "passed",
                      "speed": "slow",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "(0, _chai.expect)(view.queryByRole('progressbar')).to.not.exist;\n(0, _chai.expect)(view.queryByRole('heading', {\n  name: /^claims and appeals$/i\n})).to.exist;",
                      "err": {},
                      "uuid": "23442695-dce8-4dfc-a532-10c2fbadfcb0",
                      "parentUUID": "9559b5d0-f1bc-4faf-89f5-5d7b077cbe13",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "23442695-dce8-4dfc-a532-10c2fbadfcb0"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 10,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "4a7f91f9-5b1e-4f2a-a0a1-a40aabf1b001",
                  "title": "when the user has 3 claims that were all updated in the past 60 days",
                  "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/dashboard/tests/components/claims-and-appeals/ClaimsAndAppeals.unit.spec.jsx",
                  "file": "/src/applications/personalization/dashboard/tests/components/claims-and-appeals/ClaimsAndAppeals.unit.spec.jsx",
                  "beforeHooks": [
                    {
                      "title": "\"before each\" hook in \"when the user has 3 claims that were all updated in the past 60 days\"",
                      "fullTitle": "ClaimsAndAppeals component happy path render logic when the user has 3 claims that were all updated in the past 60 days \"before each\" hook in \"when the user has 3 claims that were all updated in the past 60 days\"",
                      "timedOut": false,
                      "duration": 6,
                      "state": null,
                      "speed": null,
                      "pass": false,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "initialState = {\n  user: claimsAppealsUser(),\n  claims: {\n    appealsLoading: false,\n    claimsLoading: false,\n    appeals: [],\n    claims: [makeClaimObject({\n      updateDate: (0, _helpers.daysAgo)(34),\n      status: 'Evidence gathering, review, and decision'\n    }), makeClaimObject({\n      updateDate: (0, _helpers.daysAgo)(1),\n      status: 'Preparation for notification'\n    }), makeClaimObject({\n      updateDate: (0, _helpers.daysAgo)(15)\n    })]\n  }\n};\nview = (0, _reactTestingLibraryHelpers.renderInReduxProvider)(/*#__PURE__*/_react.default.createElement(_ClaimsAndAppeals.default, {\n  dataLoadingDisabled: true\n}), {\n  initialState: initialState,\n  reducers: _reducers.default\n});",
                      "err": {},
                      "uuid": "a399d56d-23c1-40ba-bc99-07d3bdc2f4dd",
                      "parentUUID": "4a7f91f9-5b1e-4f2a-a0a1-a40aabf1b001",
                      "isHook": true,
                      "skipped": false
                    }
                  ],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "shows the CTA",
                      "fullTitle": "ClaimsAndAppeals component happy path render logic when the user has 3 claims that were all updated in the past 60 days shows the CTA",
                      "timedOut": false,
                      "duration": 63,
                      "state": "passed",
                      "speed": "slow",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "(0, _chai.expect)(view.queryByRole('progressbar')).to.not.exist;\n(0, _chai.expect)(view.getByRole('heading', {\n  name: /^claims and appeals$/i\n})).to.exist;\n(0, _chai.expect)(view.getByRole('link', {\n  name: /^review claim received/i\n})).to.exist;",
                      "err": {},
                      "uuid": "b7a9226e-82f5-4d65-83f9-a3877302d22d",
                      "parentUUID": "4a7f91f9-5b1e-4f2a-a0a1-a40aabf1b001",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "b7a9226e-82f5-4d65-83f9-a3877302d22d"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 63,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "1212ce4a-698b-42d4-8aed-cd09eb0249d2",
                  "title": "when the user has 2 claims (1 closed) and 2 appeals (1 closed) that were all updated in the past 60 days",
                  "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/dashboard/tests/components/claims-and-appeals/ClaimsAndAppeals.unit.spec.jsx",
                  "file": "/src/applications/personalization/dashboard/tests/components/claims-and-appeals/ClaimsAndAppeals.unit.spec.jsx",
                  "beforeHooks": [
                    {
                      "title": "\"before each\" hook in \"when the user has 2 claims (1 closed) and 2 appeals (1 closed) that were all updated in the past 60 days\"",
                      "fullTitle": "ClaimsAndAppeals component happy path render logic when the user has 2 claims (1 closed) and 2 appeals (1 closed) that were all updated in the past 60 days \"before each\" hook in \"when the user has 2 claims (1 closed) and 2 appeals (1 closed) that were all updated in the past 60 days\"",
                      "timedOut": false,
                      "duration": 6,
                      "state": null,
                      "speed": null,
                      "pass": false,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "initialState = {\n  user: claimsAppealsUser(),\n  claims: {\n    appealsLoading: false,\n    claimsLoading: false,\n    appeals: [\n    // closed appeal updated 5 days ago\n    makeAppealObject({\n      updateDate: (0, _helpers.daysAgo)(5),\n      closed: true\n    }),\n    // appeal updated one day ago\n    makeAppealObject({\n      updateDate: (0, _helpers.daysAgo)(1)\n    })],\n    claims: [\n    // closed claim updated 5 days ago\n    makeClaimObject({\n      updateDate: (0, _helpers.daysAgo)(5),\n      status: 'Closed'\n    }),\n    // open claim updated 40 days ago\n    makeClaimObject({\n      updateDate: (0, _helpers.daysAgo)(40),\n      status: 'Preparation for notification'\n    })]\n  }\n};\nview = (0, _reactTestingLibraryHelpers.renderInReduxProvider)(/*#__PURE__*/_react.default.createElement(_ClaimsAndAppeals.default, {\n  dataLoadingDisabled: true\n}), {\n  initialState: initialState,\n  reducers: _reducers.default\n});",
                      "err": {},
                      "uuid": "eeec90fd-7499-4f5e-8d1a-c503ed2be5ad",
                      "parentUUID": "1212ce4a-698b-42d4-8aed-cd09eb0249d2",
                      "isHook": true,
                      "skipped": false
                    }
                  ],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "shows the CTA",
                      "fullTitle": "ClaimsAndAppeals component happy path render logic when the user has 2 claims (1 closed) and 2 appeals (1 closed) that were all updated in the past 60 days shows the CTA",
                      "timedOut": false,
                      "duration": 47,
                      "state": "passed",
                      "speed": "slow",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "(0, _chai.expect)(view.queryByRole('progressbar')).to.not.exist;\n(0, _chai.expect)(view.getByRole('heading', {\n  name: /^claims and appeals$/i\n})).to.exist;\n(0, _chai.expect)(view.getByRole('link', {\n  name: /^review details/i\n})).to.exist;",
                      "err": {},
                      "uuid": "778c4e9a-1180-4771-8c04-76ee9d51dead",
                      "parentUUID": "1212ce4a-698b-42d4-8aed-cd09eb0249d2",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "778c4e9a-1180-4771-8c04-76ee9d51dead"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 47,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "aece1bd3-97f5-41b0-910f-9c8e41c63a3e",
                  "title": "when user has two open claims (one recently updated), one open appeal, and one closed claim",
                  "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/dashboard/tests/components/claims-and-appeals/ClaimsAndAppeals.unit.spec.jsx",
                  "file": "/src/applications/personalization/dashboard/tests/components/claims-and-appeals/ClaimsAndAppeals.unit.spec.jsx",
                  "beforeHooks": [
                    {
                      "title": "\"before each\" hook in \"when user has two open claims (one recently updated), one open appeal, and one closed claim\"",
                      "fullTitle": "ClaimsAndAppeals component happy path render logic when user has two open claims (one recently updated), one open appeal, and one closed claim \"before each\" hook in \"when user has two open claims (one recently updated), one open appeal, and one closed claim\"",
                      "timedOut": false,
                      "duration": 5,
                      "state": null,
                      "speed": null,
                      "pass": false,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "initialState = {\n  user: claimsAppealsUser(),\n  claims: {\n    appealsLoading: false,\n    claimsLoading: false,\n    appeals: [\n    // open appeal that changed 31 days ago\n    makeAppealObject({\n      updateDate: (0, _helpers.daysAgo)(31)\n    })],\n    claims: [\n    // open claim updated 29 days ago\n    makeClaimObject({\n      updateDate: (0, _helpers.daysAgo)(29),\n      status: 'Preparation for notification'\n    }),\n    // closed claim without recent activity\n    makeClaimObject({\n      updateDate: (0, _helpers.daysAgo)(61),\n      status: 'Closed'\n    }),\n    // open claim without recent activity\n    makeClaimObject({\n      updateDate: (0, _helpers.daysAgo)(5),\n      status: 'Claim received'\n    })]\n  }\n};\nview = (0, _reactTestingLibraryHelpers.renderInReduxProvider)(/*#__PURE__*/_react.default.createElement(_ClaimsAndAppeals.default, {\n  dataLoadingDisabled: true\n}), {\n  initialState: initialState,\n  reducers: _reducers.default\n});",
                      "err": {},
                      "uuid": "c959d095-211d-49f6-92f7-5d1d86d778cc",
                      "parentUUID": "aece1bd3-97f5-41b0-910f-9c8e41c63a3e",
                      "isHook": true,
                      "skipped": false
                    }
                  ],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "shows the CTA",
                      "fullTitle": "ClaimsAndAppeals component happy path render logic when user has two open claims (one recently updated), one open appeal, and one closed claim shows the CTA",
                      "timedOut": false,
                      "duration": 42,
                      "state": "passed",
                      "speed": "slow",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "(0, _chai.expect)(view.queryByRole('progressbar')).to.not.exist;\n(0, _chai.expect)(view.getByRole('heading', {\n  name: /^claims and appeals$/i\n})).to.exist;\n(0, _chai.expect)(view.getByRole('link', {\n  name: /review claim/i\n})).to.exist;",
                      "err": {},
                      "uuid": "9b543a69-3671-4444-8b09-4456a3f9e51c",
                      "parentUUID": "aece1bd3-97f5-41b0-910f-9c8e41c63a3e",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "shows details for the most recently updated claim",
                      "fullTitle": "ClaimsAndAppeals component happy path render logic when user has two open claims (one recently updated), one open appeal, and one closed claim shows details for the most recently updated claim",
                      "timedOut": false,
                      "duration": 34,
                      "state": "passed",
                      "speed": "slow",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "(0, _chai.expect)(view.getByRole('link', {\n  name: /^review claim received/i\n})).to.exist;",
                      "err": {},
                      "uuid": "6ea2908a-1254-4e78-8e6f-ed4128b2da77",
                      "parentUUID": "aece1bd3-97f5-41b0-910f-9c8e41c63a3e",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "9b543a69-3671-4444-8b09-4456a3f9e51c",
                    "6ea2908a-1254-4e78-8e6f-ed4128b2da77"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 76,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "94bb9535-269c-480f-b3cf-3e77ce62f32a",
                  "title": "when the user has no open claims or appeals, but does have an appeal that closed within the past 60 days",
                  "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/dashboard/tests/components/claims-and-appeals/ClaimsAndAppeals.unit.spec.jsx",
                  "file": "/src/applications/personalization/dashboard/tests/components/claims-and-appeals/ClaimsAndAppeals.unit.spec.jsx",
                  "beforeHooks": [
                    {
                      "title": "\"before each\" hook in \"when the user has no open claims or appeals, but does have an appeal that closed within the past 60 days\"",
                      "fullTitle": "ClaimsAndAppeals component happy path render logic when the user has no open claims or appeals, but does have an appeal that closed within the past 60 days \"before each\" hook in \"when the user has no open claims or appeals, but does have an appeal that closed within the past 60 days\"",
                      "timedOut": false,
                      "duration": 5,
                      "state": null,
                      "speed": null,
                      "pass": false,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "initialState = {\n  user: claimsAppealsUser(),\n  claims: {\n    appealsLoading: false,\n    claimsLoading: false,\n    appeals: [\n    // closed appeal that was closed 10 days ago\n    makeAppealObject({\n      updateDate: (0, _helpers.daysAgo)(10),\n      closed: true\n    })],\n    claims: [\n    // closed claim with no recent activity\n    makeClaimObject({\n      updateDate: (0, _helpers.daysAgo)(3000),\n      status: 'Closed'\n    }),\n    // closed claim without recent activity\n    makeClaimObject({\n      updateDate: (0, _helpers.daysAgo)(31),\n      status: 'Closed'\n    })]\n  }\n};\nview = (0, _reactTestingLibraryHelpers.renderInReduxProvider)(/*#__PURE__*/_react.default.createElement(_ClaimsAndAppeals.default, {\n  dataLoadingDisabled: true\n}), {\n  initialState: initialState,\n  reducers: _reducers.default\n});",
                      "err": {},
                      "uuid": "5976b4d9-215b-4d85-ba25-a25b5d11f3ff",
                      "parentUUID": "94bb9535-269c-480f-b3cf-3e77ce62f32a",
                      "isHook": true,
                      "skipped": false
                    }
                  ],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "shows the CTA",
                      "fullTitle": "ClaimsAndAppeals component happy path render logic when the user has no open claims or appeals, but does have an appeal that closed within the past 60 days shows the CTA",
                      "timedOut": false,
                      "duration": 35,
                      "state": "passed",
                      "speed": "slow",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "(0, _chai.expect)(view.getByRole('link', {\n  name: /review details/i\n})).to.exist;",
                      "err": {},
                      "uuid": "01d593a1-4a50-49ed-964f-1d975212b7c0",
                      "parentUUID": "94bb9535-269c-480f-b3cf-3e77ce62f32a",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "shows details about the recently closed appeal",
                      "fullTitle": "ClaimsAndAppeals component happy path render logic when the user has no open claims or appeals, but does have an appeal that closed within the past 60 days shows details about the recently closed appeal",
                      "timedOut": false,
                      "duration": 8,
                      "state": "passed",
                      "speed": "slow",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "(0, _chai.expect)(view.getByRole('heading', {\n  name: /updated on/i\n})).to.exist;",
                      "err": {},
                      "uuid": "ac1a22f9-851b-4c3e-8e7d-c1f053b9786f",
                      "parentUUID": "94bb9535-269c-480f-b3cf-3e77ce62f32a",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "01d593a1-4a50-49ed-964f-1d975212b7c0",
                    "ac1a22f9-851b-4c3e-8e7d-c1f053b9786f"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 43,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "e47d7f14-02c9-4a45-86a8-ed0f4ac52f2b",
                  "title": "the user has one open appeal that was updated over 60 days ago",
                  "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/dashboard/tests/components/claims-and-appeals/ClaimsAndAppeals.unit.spec.jsx",
                  "file": "/src/applications/personalization/dashboard/tests/components/claims-and-appeals/ClaimsAndAppeals.unit.spec.jsx",
                  "beforeHooks": [
                    {
                      "title": "\"before each\" hook in \"the user has one open appeal that was updated over 60 days ago\"",
                      "fullTitle": "ClaimsAndAppeals component happy path render logic the user has one open appeal that was updated over 60 days ago \"before each\" hook in \"the user has one open appeal that was updated over 60 days ago\"",
                      "timedOut": false,
                      "duration": 6,
                      "state": null,
                      "speed": null,
                      "pass": false,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "initialState = {\n  user: claimsAppealsUser(),\n  claims: {\n    appealsLoading: false,\n    claimsLoading: false,\n    appeals: [makeAppealObject({\n      updateDate: (0, _helpers.daysAgo)(61)\n    })],\n    claims: []\n  }\n};\nview = (0, _reactTestingLibraryHelpers.renderInReduxProvider)(/*#__PURE__*/_react.default.createElement(_ClaimsAndAppeals.default, {\n  dataLoadingDisabled: true\n}), {\n  initialState: initialState,\n  reducers: _reducers.default\n});",
                      "err": {},
                      "uuid": "d8eedc4c-05e2-436e-ba79-5262bd752125",
                      "parentUUID": "e47d7f14-02c9-4a45-86a8-ed0f4ac52f2b",
                      "isHook": true,
                      "skipped": false
                    }
                  ],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "shows the CTA",
                      "fullTitle": "ClaimsAndAppeals component happy path render logic the user has one open appeal that was updated over 60 days ago shows the CTA",
                      "timedOut": false,
                      "duration": 42,
                      "state": "passed",
                      "speed": "slow",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "(0, _chai.expect)(view.getByRole('heading', {\n  name: /^claims and appeals$/i\n})).to.exist;\n(0, _chai.expect)(view.getByRole('link', {\n  name: /review details/i\n})).to.exist;",
                      "err": {},
                      "uuid": "db86582d-731c-4010-b062-48a82db66055",
                      "parentUUID": "e47d7f14-02c9-4a45-86a8-ed0f4ac52f2b",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "does not show details about the open appeal",
                      "fullTitle": "ClaimsAndAppeals component happy path render logic the user has one open appeal that was updated over 60 days ago does not show details about the open appeal",
                      "timedOut": false,
                      "duration": 41,
                      "state": "passed",
                      "speed": "slow",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "(0, _chai.expect)(view.queryByRole('link', {\n  name: /^view details of/i\n})).to.not.exist;",
                      "err": {},
                      "uuid": "3ec42881-0660-43b9-b6ec-809d91bd2dc5",
                      "parentUUID": "e47d7f14-02c9-4a45-86a8-ed0f4ac52f2b",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "db86582d-731c-4010-b062-48a82db66055",
                    "3ec42881-0660-43b9-b6ec-809d91bd2dc5"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 83,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "4410ba20-5e44-4df7-859a-e7789303c23f",
                  "title": "the user only has claims and appeals that closed over 60 days ago",
                  "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/dashboard/tests/components/claims-and-appeals/ClaimsAndAppeals.unit.spec.jsx",
                  "file": "/src/applications/personalization/dashboard/tests/components/claims-and-appeals/ClaimsAndAppeals.unit.spec.jsx",
                  "beforeHooks": [
                    {
                      "title": "\"before each\" hook",
                      "fullTitle": "ClaimsAndAppeals component happy path render logic the user only has claims and appeals that closed over 60 days ago \"before each\" hook",
                      "timedOut": false,
                      "duration": 0,
                      "state": null,
                      "speed": null,
                      "pass": false,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "initialState = {\n  user: claimsAppealsUser(),\n  claims: {\n    appealsLoading: false,\n    claimsLoading: false,\n    appeals: [makeAppealObject({\n      updateDate: (0, _helpers.daysAgo)(1000),\n      closed: true\n    })],\n    claims: [makeClaimObject({\n      updateDate: (0, _helpers.daysAgo)(100),\n      status: 'Closed'\n    }), makeClaimObject({\n      updateDate: (0, _helpers.daysAgo)(85),\n      status: 'Closed'\n    }), makeClaimObject({\n      updateDate: (0, _helpers.daysAgo)(61),\n      status: 'Closed'\n    })]\n  }\n};\nview = (0, _reactTestingLibraryHelpers.renderInReduxProvider)(/*#__PURE__*/_react.default.createElement(_ClaimsAndAppeals.default, {\n  dataLoadingDisabled: true\n}), {\n  initialState: initialState,\n  reducers: _reducers.default\n});",
                      "err": {},
                      "uuid": "0c76de98-212d-4c51-af46-010e380981e2",
                      "parentUUID": null,
                      "isHook": true,
                      "skipped": false
                    }
                  ],
                  "afterHooks": [],
                  "tests": [],
                  "suites": [],
                  "passes": [],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "745c36f5-bb48-41ce-8887-3af7f3803ff5",
                  "title": "the user has claims that closed over 60 days ago and got a 404 from the appeals endpoint because they have no appeals on file",
                  "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/dashboard/tests/components/claims-and-appeals/ClaimsAndAppeals.unit.spec.jsx",
                  "file": "/src/applications/personalization/dashboard/tests/components/claims-and-appeals/ClaimsAndAppeals.unit.spec.jsx",
                  "beforeHooks": [
                    {
                      "title": "\"before each\" hook in \"the user has claims that closed over 60 days ago and got a 404 from the appeals endpoint because they have no appeals on file\"",
                      "fullTitle": "ClaimsAndAppeals component happy path render logic the user has claims that closed over 60 days ago and got a 404 from the appeals endpoint because they have no appeals on file \"before each\" hook in \"the user has claims that closed over 60 days ago and got a 404 from the appeals endpoint because they have no appeals on file\"",
                      "timedOut": false,
                      "duration": 3,
                      "state": null,
                      "speed": null,
                      "pass": false,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "initialState = {\n  user: claimsAppealsUser(),\n  claims: {\n    appealsLoading: false,\n    claimsLoading: false,\n    appeals: [],\n    claimsAvailability: _claimsHelpers.claimsAvailability.UNAVAILABLE,\n    claims: [makeClaimObject({\n      updateDate: (0, _helpers.daysAgo)(100),\n      status: 'Closed'\n    }), makeClaimObject({\n      updateDate: (0, _helpers.daysAgo)(85),\n      status: 'Closed'\n    }), makeClaimObject({\n      updateDate: (0, _helpers.daysAgo)(61),\n      status: 'Closed'\n    })]\n  }\n};\nview = (0, _reactTestingLibraryHelpers.renderInReduxProvider)(/*#__PURE__*/_react.default.createElement(_ClaimsAndAppeals.default, {\n  dataLoadingDisabled: true\n}), {\n  initialState: initialState,\n  reducers: _reducers.default\n});",
                      "err": {},
                      "uuid": "3159d9ed-9db3-45f0-a5a4-f2d9ee97acbf",
                      "parentUUID": "745c36f5-bb48-41ce-8887-3af7f3803ff5",
                      "isHook": true,
                      "skipped": false
                    }
                  ],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "renders the claims and appeals error",
                      "fullTitle": "ClaimsAndAppeals component happy path render logic the user has claims that closed over 60 days ago and got a 404 from the appeals endpoint because they have no appeals on file renders the claims and appeals error",
                      "timedOut": false,
                      "duration": 3,
                      "state": "passed",
                      "speed": "slow",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "(0, _chai.expect)(view.queryByRole('progressbar')).to.not.exist;\n(0, _chai.expect)(view.getByTestId('dashboard-section-claims-and-appeals-error')).to.exist;",
                      "err": {},
                      "uuid": "b069451d-9329-4f26-ba26-a85c43e83d2f",
                      "parentUUID": "745c36f5-bb48-41ce-8887-3af7f3803ff5",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "b069451d-9329-4f26-ba26-a85c43e83d2f"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 3,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                }
              ],
              "passes": [],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "e8465773-ab53-43fb-a3b6-d910d0ff2242",
          "title": "<Decision />",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/dashboard/tests/components/claims-and-appeals/Decision.unit.spec.jsx",
          "file": "/src/applications/personalization/dashboard/tests/components/claims-and-appeals/Decision.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should render",
              "fullTitle": "<Decision /> should render",
              "timedOut": false,
              "duration": 34,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var tree = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_Decision.default, {\n  issues: issues,\n  aoj: \"vba\"\n}));\nvar allowedItems = tree.getByTestId('allowed-items');\nvar deniedItems = tree.getByTestId('denied-items');\nvar remandItems = tree.getByTestId('remand-items');\n(0, _chai.expect)(tree.getByRole('heading', {\n  name: 'Granted'\n})).to.exist;\n(0, _chai.expect)((0, _dom.within)(allowedItems).getByText(/The reviewer granted the following issues/i)).to.exist;\n(0, _chai.expect)((0, _dom.within)(allowedItems).getByText(/Heel, increased rating/i)).to.exist;\n(0, _chai.expect)((0, _dom.within)(allowedItems).getByText(/Knee, increased rating/i)).to.exist;\n(0, _chai.expect)(tree.getByRole('heading', {\n  name: 'Denied'\n})).to.exist;\n(0, _chai.expect)((0, _dom.within)(deniedItems).getByText(/The reviewer denied the following issues/i)).to.exist;\n(0, _chai.expect)((0, _dom.within)(deniedItems).getByText(/Tinnitus, increased rating/i)).to.exist;\n(0, _chai.expect)((0, _dom.within)(deniedItems).getByText(/Leg, service connection/i)).to.exist;\n(0, _chai.expect)(tree.getByRole('heading', {\n  name: 'Remand'\n})).to.exist;\n(0, _chai.expect)((0, _dom.within)(remandItems).getByText(/The judge is sending these issues back to the Veterans Benefits Administration/i)).to.exist;\n(0, _chai.expect)((0, _dom.within)(remandItems).getByText(/Diabetes, service connection/i)).to.exist;\n(0, _chai.expect)((0, _dom.within)(remandItems).getByText(/Shoulder, service connection/i)).to.exist;",
              "err": {},
              "uuid": "5b43599d-217a-4a3b-8206-8d3c3259b7c1",
              "parentUUID": "e8465773-ab53-43fb-a3b6-d910d0ff2242",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "5b43599d-217a-4a3b-8206-8d3c3259b7c1"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 34,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "024d0a5d-1b0e-46b8-a8be-f12348d6fb84",
          "title": "<CTALink />",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/dashboard/tests/components/CTALink.unit.spec.jsx",
          "file": "/src/applications/personalization/dashboard/tests/components/CTALink.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should render",
              "fullTitle": "<CTALink /> should render",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var linkText = 'Testing link';\nvar tree = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_CTALink.default, {\n  testId: \"12345\",\n  href: \"https://example.com\",\n  text: linkText\n}));\n(0, _chai.expect)(tree.getByTestId('12345')).to.not.be.null;\n(0, _chai.expect)(tree.getByText(linkText)).to.not.be.null;\n(0, _chai.expect)(tree.container.querySelector('va-icon')).to.be.null;\ntree.unmount();",
              "err": {},
              "uuid": "59453b17-0d62-46b4-a08f-feb24ba7700f",
              "parentUUID": "024d0a5d-1b0e-46b8-a8be-f12348d6fb84",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should render the correct href",
              "fullTitle": "<CTALink /> should render the correct href",
              "timedOut": false,
              "duration": 3,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var wrapper = (0, _enzyme.shallow)(/*#__PURE__*/_react.default.createElement(_CTALink.default, {\n  testId: \"12345\",\n  href: \"https://example.com\",\n  text: \"Testing link\"\n}));\n(0, _chai.expect)(wrapper.prop('href')).to.eq('https://example.com');\nwrapper.unmount();",
              "err": {},
              "uuid": "a11da9bc-3526-47ed-bc0a-48ea92d9b5a4",
              "parentUUID": "024d0a5d-1b0e-46b8-a8be-f12348d6fb84",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should show the arrow",
              "fullTitle": "<CTALink /> should show the arrow",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var tree = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_CTALink.default, {\n  testId: \"12345\",\n  href: \"https://example.com\",\n  text: \"Testing link\",\n  showArrow: true\n}));\n(0, _chai.expect)(tree.container.querySelector('va-icon')).to.not.be.null;\ntree.unmount();",
              "err": {},
              "uuid": "084ebeea-ed4b-4082-a70c-459dcd8cafc7",
              "parentUUID": "024d0a5d-1b0e-46b8-a8be-f12348d6fb84",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should open in a new tab",
              "fullTitle": "<CTALink /> should open in a new tab",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var wrapper = (0, _enzyme.shallow)(/*#__PURE__*/_react.default.createElement(_CTALink.default, {\n  testId: \"12345\",\n  href: \"https://example.com\",\n  text: \"Testing link\",\n  newTab: true\n}));\n(0, _chai.expect)(wrapper.prop('target')).to.eq('_blank');\n(0, _chai.expect)(wrapper.prop('rel')).to.eq('noreferrer noopener');\nwrapper.unmount();",
              "err": {},
              "uuid": "b7a62880-c610-4d2b-9bec-d88e5fc3b297",
              "parentUUID": "024d0a5d-1b0e-46b8-a8be-f12348d6fb84",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should render the aria-label",
              "fullTitle": "<CTALink /> should render the aria-label",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var wrapper = (0, _enzyme.shallow)(/*#__PURE__*/_react.default.createElement(_CTALink.default, {\n  testId: \"12345\",\n  href: \"https://example.com\",\n  text: \"Testing link\",\n  ariaLabel: \"test label\"\n}));\n(0, _chai.expect)(wrapper.prop('aria-label')).to.eq('test label');\nwrapper.unmount();",
              "err": {},
              "uuid": "86ea893d-01f2-4555-8d9f-4eda6d2d6e73",
              "parentUUID": "024d0a5d-1b0e-46b8-a8be-f12348d6fb84",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should render with the given class names",
              "fullTitle": "<CTALink /> should render with the given class names",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var wrapper = (0, _enzyme.shallow)(/*#__PURE__*/_react.default.createElement(_CTALink.default, {\n  testId: \"12345\",\n  href: \"https://example.com\",\n  text: \"Testing link\",\n  className: \"testing\"\n}));\n(0, _chai.expect)(wrapper.prop('className')).to.eq('vads-u-display--inline-block testing');\nwrapper.unmount();",
              "err": {},
              "uuid": "86b8fba8-9ceb-428b-a4d5-e0c6c8d62c76",
              "parentUUID": "024d0a5d-1b0e-46b8-a8be-f12348d6fb84",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should handle an onClick prop",
              "fullTitle": "<CTALink /> should handle an onClick prop",
              "timedOut": false,
              "duration": 4,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var onClickSpy = _sinon.default.spy();\nvar tree = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_CTALink.default, {\n  testId: \"12345\",\n  href: \"https://example.com\",\n  text: \"Testing link\",\n  onClick: onClickSpy\n}));\ntree.container.querySelector('a').click();\n(0, _chai.expect)(onClickSpy.called).to.be.true;\ntree.unmount();",
              "err": {},
              "uuid": "dd184d26-86bf-4bcd-a4bf-9ff01de9274c",
              "parentUUID": "024d0a5d-1b0e-46b8-a8be-f12348d6fb84",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "59453b17-0d62-46b4-a08f-feb24ba7700f",
            "a11da9bc-3526-47ed-bc0a-48ea92d9b5a4",
            "084ebeea-ed4b-4082-a70c-459dcd8cafc7",
            "b7a62880-c610-4d2b-9bec-d88e5fc3b297",
            "86ea893d-01f2-4555-8d9f-4eda6d2d6e73",
            "86b8fba8-9ceb-428b-a4d5-e0c6c8d62c76",
            "dd184d26-86bf-4bcd-a4bf-9ff01de9274c"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 12,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "269f540e-7d22-4af5-90fd-3a94e7105634",
          "title": "<Dashboard />",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/dashboard/tests/components/Dashboard.unit.spec.jsx",
          "file": "/src/applications/personalization/dashboard/tests/components/Dashboard.unit.spec.jsx",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"<Dashboard />\"",
              "fullTitle": "<Dashboard /> \"before each\" hook in \"<Dashboard />\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "initialState = {\n  vaProfile: {\n    hero: {\n      userFullName: {\n        first: 'Hector',\n        middle: 'J',\n        last: 'Allen',\n        suffix: null\n      },\n      errors: null\n    }\n  },\n  allPayments: {\n    isLoading: false,\n    payments: [],\n    error: null\n  },\n  allDebts: {\n    isLoading: false,\n    isError: false,\n    copays: [],\n    copaysErrors: [],\n    debts: [],\n    debtsErrors: []\n  },\n  user: {\n    login: {\n      currentlyLoggedIn: true,\n      hasCheckedKeepAlive: false\n    },\n    profile: {\n      loa: {\n        current: 3,\n        highest: 3\n      },\n      loading: false,\n      services: ['appeals-status'],\n      claims: {},\n      signIn: {\n        serviceName: 'logingov'\n      }\n    }\n  },\n  featureToggles: _defineProperty({}, _featureToggles2.Toggler.TOGGLE_NAMES.authExpVbaDowntimeMessage, false)\n};",
              "err": {},
              "uuid": "328d3030-41c6-49c9-8a3d-6611cd08d5ed",
              "parentUUID": "269f540e-7d22-4af5-90fd-3a94e7105634",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": "renders the verify your identity component for an LOA1 user",
              "fullTitle": "<Dashboard /> renders the verify your identity component for an LOA1 user",
              "timedOut": false,
              "duration": 47,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
              "err": {},
              "uuid": "9b9c8079-2b58-41de-a3f9-8cbfb30e23ba",
              "parentUUID": "269f540e-7d22-4af5-90fd-3a94e7105634",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "renders the welcome modal for a recent LOA1 user",
              "fullTitle": "<Dashboard /> renders the welcome modal for a recent LOA1 user",
              "timedOut": false,
              "duration": 30,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
              "err": {},
              "uuid": "abedb650-d2a9-43fd-a908-ebdd7ec3aafe",
              "parentUUID": "269f540e-7d22-4af5-90fd-3a94e7105634",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "does not render the welcome modal for LOA1 user that is not recent",
              "fullTitle": "<Dashboard /> does not render the welcome modal for LOA1 user that is not recent",
              "timedOut": false,
              "duration": 5,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
              "err": {},
              "uuid": "b5e50695-2b85-46dd-95a5-f295ef575944",
              "parentUUID": "269f540e-7d22-4af5-90fd-3a94e7105634",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "renders for an LOA3 user",
              "fullTitle": "<Dashboard /> renders for an LOA3 user",
              "timedOut": false,
              "duration": 64,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
              "err": {},
              "uuid": "42e96585-7845-4d16-b43c-c4ec4978e8e0",
              "parentUUID": "269f540e-7d22-4af5-90fd-3a94e7105634",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "renders MPI Connection Error",
              "fullTitle": "<Dashboard /> renders MPI Connection Error",
              "timedOut": false,
              "duration": 52,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
              "err": {},
              "uuid": "695defb9-80cd-4eb5-aae2-3629d098f90b",
              "parentUUID": "269f540e-7d22-4af5-90fd-3a94e7105634",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "renders the Not In MPI Error",
              "fullTitle": "<Dashboard /> renders the Not In MPI Error",
              "timedOut": false,
              "duration": 55,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
              "err": {},
              "uuid": "b16ba54a-1bb0-4c49-9f0e-4a298d1e728d",
              "parentUUID": "269f540e-7d22-4af5-90fd-3a94e7105634",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "shows the loader if feature toggles aren't loaded",
              "fullTitle": "<Dashboard /> shows the loader if feature toggles aren't loaded",
              "timedOut": false,
              "duration": 9,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
              "err": {},
              "uuid": "c9a1786e-0145-4950-8459-572fdf99c83d",
              "parentUUID": "269f540e-7d22-4af5-90fd-3a94e7105634",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "9b9c8079-2b58-41de-a3f9-8cbfb30e23ba",
            "abedb650-d2a9-43fd-a908-ebdd7ec3aafe",
            "b5e50695-2b85-46dd-95a5-f295ef575944",
            "42e96585-7845-4d16-b43c-c4ec4978e8e0",
            "695defb9-80cd-4eb5-aae2-3629d098f90b",
            "b16ba54a-1bb0-4c49-9f0e-4a298d1e728d",
            "c9a1786e-0145-4950-8459-572fdf99c83d"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 262,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "833e158d-fddd-4f82-94bb-544139ba21f3",
          "title": "<DashboardAlert />",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/dashboard/tests/components/DashboardAlert.unit.spec.jsx",
          "file": "/src/applications/personalization/dashboard/tests/components/DashboardAlert.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should have the expected classnames",
              "fullTitle": "<DashboardAlert /> should have the expected classnames",
              "timedOut": false,
              "duration": 4,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var wrapper = (0, _enzyme.shallow)(/*#__PURE__*/_react.default.createElement(_DashboardAlert.default, {\n  id: \"alert\",\n  content: content,\n  headline: headline,\n  statusHeadline: statusHeadline,\n  status: _DashboardAlert.DASHBOARD_ALERT_TYPES.closed\n}));\n(0, _chai.expect)(wrapper.find('.dashboard-alert').hasClass('dashboard-alert-closed')).to.equal(true);\nwrapper.unmount();",
              "err": {},
              "uuid": "c21aac30-d88e-47c4-ae95-1c117b4c3188",
              "parentUUID": "833e158d-fddd-4f82-94bb-544139ba21f3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should have a valid header and id",
              "fullTitle": "<DashboardAlert /> should have a valid header and id",
              "timedOut": false,
              "duration": 3,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var wrapper = (0, _enzyme.shallow)(/*#__PURE__*/_react.default.createElement(_DashboardAlert.default, {\n  id: \"alert\",\n  content: content,\n  headline: headline,\n  statusHeadline: statusHeadline,\n  status: _DashboardAlert.DASHBOARD_ALERT_TYPES.closed\n}));\n(0, _chai.expect)(wrapper.find('#dashboard-alert-header-alert').exists()).to.equal(true);\n(0, _chai.expect)(wrapper.find('.dashboard-alert').prop('aria-labelledby')).to.equal('dashboard-alert-header-alert');\nwrapper.unmount();",
              "err": {},
              "uuid": "674d1c81-041e-4c14-9839-476977c3a50f",
              "parentUUID": "833e158d-fddd-4f82-94bb-544139ba21f3",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "c21aac30-d88e-47c4-ae95-1c117b4c3188",
            "674d1c81-041e-4c14-9839-476977c3a50f"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 7,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "88c08a93-6cd2-4358-8bf6-d500e3f302ef",
          "title": "<DashboardWidgetWrapper />",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/dashboard/tests/components/DashboardWidgetWrapper.unit.spec.jsx",
          "file": "/src/applications/personalization/dashboard/tests/components/DashboardWidgetWrapper.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should render",
              "fullTitle": "<DashboardWidgetWrapper /> should render",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var view = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_DashboardWidgetWrapper.default, null, /*#__PURE__*/_react.default.createElement(\"div\", {\n  \"data-testid\": \"test-children\"\n})));\nvar wrapper = view.getByTestId('dashboard-widget-wrapper');\n(0, _chai.expect)(wrapper).to.exist;\n(0, _chai.expect)((0, _dom.within)(wrapper).getByTestId('test-children')).to.exist;",
              "err": {},
              "uuid": "f3dd752a-a80d-4174-a5a5-47b058e50979",
              "parentUUID": "88c08a93-6cd2-4358-8bf6-d500e3f302ef",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f3dd752a-a80d-4174-a5a5-47b058e50979"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "782511c7-44c2-4a91-b62b-3b03cf899634",
          "title": "<CopaysCard />",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/dashboard/tests/components/debts/CopaysCard.unit.spec.jsx",
          "file": "/src/applications/personalization/dashboard/tests/components/debts/CopaysCard.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should not display if user has no copay statements or total is 0",
              "fullTitle": "<CopaysCard /> should not display if user has no copay statements or total is 0",
              "timedOut": false,
              "duration": 4,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var tree = (0, _reactTestingLibraryHelpers.renderWithStoreAndRouter)(/*#__PURE__*/_react.default.createElement(_CopaysCard.default, null), {\n  initialState: initialState\n});\n(0, _chai.expect)(tree.getByTestId('zero-debt-paragraph')).to.exist;\n(0, _chai.expect)(tree.getByText('Your total VA copay balance is $0', {\n  exact: false\n})).to.exist;",
              "err": {},
              "uuid": "60340e3c-0669-46a8-a4d2-bf82213eb219",
              "parentUUID": "782511c7-44c2-4a91-b62b-3b03cf899634",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "renders one CopaysCard component correctly",
              "fullTitle": "<CopaysCard /> renders one CopaysCard component correctly",
              "timedOut": false,
              "duration": 5,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var copays = [{\n  id: 'f4385298-08a6-42f8-a86f-50e97033fb85',\n  pSFacilityNum: '534',\n  pSStatementDateOutput: '11/15/2021',\n  pSProcessDateOutput: '11/11/2019',\n  pHAmtDue: 15\n}];\nvar dateUpdated = (0, _dateFns.format)(new Date(copays[0].pSStatementDateOutput), 'MMMM dd, yyyy');\nvar tree = (0, _reactTestingLibraryHelpers.renderWithStoreAndRouter)(/*#__PURE__*/_react.default.createElement(_CopaysCard.default, {\n  copays: copays\n}), {\n  initialState: initialState\n});\n(0, _chai.expect)(tree.getByTestId('copay-due-header')).to.exist;\n(0, _chai.expect)(tree.getByText(/1 copay bill/i)).to.exist;\n(0, _chai.expect)(tree.getByText(/updated on/i)).to.exist;\n(0, _chai.expect)(tree.getByText(dateUpdated, {\n  exact: false\n})).to.exist;",
              "err": {},
              "uuid": "f41a87f5-a4a2-44d9-9b63-e4332089332e",
              "parentUUID": "782511c7-44c2-4a91-b62b-3b03cf899634",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "renders more than one CopaysCard component correctly",
              "fullTitle": "<CopaysCard /> renders more than one CopaysCard component correctly",
              "timedOut": false,
              "duration": 4,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var copays = [{\n  pSFacilityNum: '534',\n  pSStatementDateOutput: '11/15/2021',\n  pSProcessDateOutput: '11/11/2019',\n  pHAmtDue: 15\n}, {\n  pSFacilityNum: '668',\n  pSStatementDateOutput: '04/04/2022',\n  pSProcessDateOutput: '04/02/2022',\n  pHAmtDue: 15\n}, {\n  pSFacilityNum: '757',\n  pSStatementDateOutput: '11/05/2021',\n  pSProcessDateOutput: '06/09/2019',\n  pHAmtDue: 46\n}];\nvar dateUpdated = (0, _dateFns.format)(new Date(copays[1].pSStatementDateOutput), 'MMMM dd, yyyy');\nvar tree = (0, _reactTestingLibraryHelpers.renderWithStoreAndRouter)(/*#__PURE__*/_react.default.createElement(_CopaysCard.default, {\n  copays: copays\n}), {\n  initialState: initialState\n});\n(0, _chai.expect)(tree.getByTestId('copay-due-header')).to.exist;\n(0, _chai.expect)(tree.getByText(/3 copay bills/i)).to.exist;\n(0, _chai.expect)(tree.getByText(/updated on/i)).to.exist;\n(0, _chai.expect)(tree.getByText(dateUpdated, {\n  exact: false\n})).to.exist;",
              "err": {},
              "uuid": "046d6e62-dad0-4a87-be29-105d617a1d1d",
              "parentUUID": "782511c7-44c2-4a91-b62b-3b03cf899634",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "60340e3c-0669-46a8-a4d2-bf82213eb219",
            "f41a87f5-a4a2-44d9-9b63-e4332089332e",
            "046d6e62-dad0-4a87-be29-105d617a1d1d"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 13,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "61218fb3-d5d6-4c01-b8ef-9be675097bd9",
          "title": "<BenefitPaymentsAndDebt />",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/dashboard/tests/components/debts/Debts.unit.spec.jsx",
          "file": "/src/applications/personalization/dashboard/tests/components/debts/Debts.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "displays loading indicator",
              "fullTitle": "<BenefitPaymentsAndDebt /> displays loading indicator",
              "timedOut": false,
              "duration": 6,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var store = mockStore({\n  allDebts: {\n    isLoading: true,\n    debts: [],\n    copays: [],\n    debtsErrors: [],\n    copaysErrors: []\n  }\n});\nvar _render = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: store\n  }, /*#__PURE__*/_react.default.createElement(_Debts.default, null))),\n  getAllByTestId = _render.getAllByTestId;\n(0, _chai.expect)(getAllByTestId('debts-loading-indicator')).to.exist;",
              "err": {},
              "uuid": "9b393628-de0a-4d7b-9c7a-b2bb60085990",
              "parentUUID": "61218fb3-d5d6-4c01-b8ef-9be675097bd9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "displays no outstanding debts text when no debts and copays",
              "fullTitle": "<BenefitPaymentsAndDebt /> displays no outstanding debts text when no debts and copays",
              "timedOut": false,
              "duration": 7,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var store = mockStore({\n  allDebts: {\n    isLoading: false,\n    debts: [],\n    copays: [],\n    debtsErrors: [],\n    copaysErrors: []\n  }\n});\nvar _render2 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: store\n  }, /*#__PURE__*/_react.default.createElement(_Debts.default, null))),\n  getByTestId = _render2.getByTestId;\n(0, _chai.expect)(getByTestId('no-outstanding-debts-text')).to.exist;",
              "err": {},
              "uuid": "02b2891d-dbd9-49e6-a53c-f1a7d804720e",
              "parentUUID": "61218fb3-d5d6-4c01-b8ef-9be675097bd9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "displays debts card when debts are present",
              "fullTitle": "<BenefitPaymentsAndDebt /> displays debts card when debts are present",
              "timedOut": false,
              "duration": 6,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var store = mockStore({\n  allDebts: {\n    isLoading: false,\n    debts: [{\n      id: '8ce19ada-8bc1-4c35-ab5a-0f34c78c10d9',\n      pSSeqNum: 8,\n      pSTotSeqNum: 31,\n      pSFacilityNum: '668',\n      pSFacPhoneNum: '(509)434-7000',\n      pSTotStatement: 40,\n      pSStatementVal: '0000024882{',\n      pSStatementDate: '05042022',\n      pSStatementDateOutput: '05/04/2022',\n      pSProcessDate: '05042022',\n      pSProcessDateOutput: '05/04/2022',\n      pHPatientLstNme: 'BROWN',\n      pHPatientFstNme: 'JANET',\n      pHPatientMidNme: null,\n      pHAddress1: '5150 S LAKIN DR',\n      pHAddress2: null,\n      pHAddress3: null,\n      pHCity: 'SPOKANE VALLEY',\n      pHState: 'WA',\n      pHZipCde: '992160645',\n      pHZipCdeOutput: '99216-0645',\n      pHCtryNme: 'US',\n      pHAmtDue: 110.45,\n      pHAmtDueOutput: '110.45&nbsp;&nbsp;',\n      pHPrevBal: 45,\n      pHPrevBalOutput: '45.00&nbsp;&nbsp;',\n      pHTotCharges: 65.45,\n      pHTotChargesOutput: '65.45&nbsp;&nbsp;',\n      pHTotCredits: 0,\n      pHTotCreditsOutput: '.00&nbsp;&nbsp;',\n      pHNewBalance: 110.45,\n      pHNewBalanceOutput: '110.45&nbsp;&nbsp;',\n      pHSpecialNotes: null,\n      pHroParaCdes: null,\n      pHNumOfLines: 18,\n      pHDfnNumber: 0,\n      pHCernerStatementNumber: 500000000006971,\n      pHCernerPatientId: '1005154223',\n      pHCernerAccountNumber: '6681001005154223',\n      pHIcnNumber: '1003388516V511164',\n      pHAccountNumber: 0,\n      pHLargeFontIndcator: 0,\n      details: [{\n        pDDatePosted: null,\n        pDDatePostedOutput: '',\n        pDTransDesc: '03/08/2022 Interest Fee for Self-Pay Overdue Balan',\n        pDTransDescOutput: '03/08/2022 Interest Fee for Self-Pay Overdue Balan',\n        pDTransAmt: 0.15,\n        pDTransAmtOutput: '0.15&nbsp;&nbsp;',\n        pDRefNo: '24208187'\n      }],\n      station: {\n        facilitYNum: '668',\n        visNNum: '20',\n        facilitYDesc: 'VAMC SPOKANE (668)',\n        cyclENum: '003',\n        remiTToFlag: 'L',\n        maiLInsertFlag: '0',\n        staTAddress1: '4815 N ASSEMBLY ST',\n        city: 'SPOKANE',\n        state: 'WA',\n        ziPCde: '992056185',\n        ziPCdeOutput: '99205-6185',\n        baRCde: '*992056185159*',\n        teLNumFlag: 'P',\n        teLNum: '1-866-290-4618'\n      }\n    }],\n    copays: [],\n    debtsErrors: [],\n    copaysErrors: []\n  }\n});\nvar _render3 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: store\n  }, /*#__PURE__*/_react.default.createElement(_Debts.default, null))),\n  getByTestId = _render3.getByTestId;\n(0, _chai.expect)(getByTestId('dashboard-section-debts')).to.exist;",
              "err": {},
              "uuid": "9d7b9105-1306-4fae-9472-2a55b88e64aa",
              "parentUUID": "61218fb3-d5d6-4c01-b8ef-9be675097bd9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "fetches debts and copays and displays them formatted",
              "fullTitle": "<BenefitPaymentsAndDebt /> fetches debts and copays and displays them formatted",
              "timedOut": false,
              "duration": 17,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
              "err": {},
              "uuid": "09664a78-4a9e-4ef6-82b8-4040b0efc1ea",
              "parentUUID": "61218fb3-d5d6-4c01-b8ef-9be675097bd9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "displays error message when there is a debt API error",
              "fullTitle": "<BenefitPaymentsAndDebt /> displays error message when there is a debt API error",
              "timedOut": false,
              "duration": 8,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var store = mockStore({\n  allDebts: {\n    isLoading: false,\n    debts: [],\n    copays: [],\n    debtsErrors: ['Some error'],\n    copaysErrors: []\n  }\n});\nvar _render4 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: store\n  }, /*#__PURE__*/_react.default.createElement(_Debts.default, null))),\n  getByTestId = _render4.getByTestId;\n(0, _chai.expect)(getByTestId('outstanding-debts-error')).to.exist;",
              "err": {},
              "uuid": "8fba5682-ee6b-4682-9897-077c281aa257",
              "parentUUID": "61218fb3-d5d6-4c01-b8ef-9be675097bd9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "displays error message when there is a copays API error",
              "fullTitle": "<BenefitPaymentsAndDebt /> displays error message when there is a copays API error",
              "timedOut": false,
              "duration": 6,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var store = mockStore({\n  allDebts: {\n    isLoading: false,\n    debts: [],\n    copays: [],\n    debtsErrors: [],\n    copaysErrors: ['Another error']\n  }\n});\nvar _render5 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: store\n  }, /*#__PURE__*/_react.default.createElement(_Debts.default, null))),\n  getByTestId = _render5.getByTestId;\n(0, _chai.expect)(getByTestId('outstanding-debts-error')).to.exist;",
              "err": {},
              "uuid": "5d8cd0d0-c5f6-4984-9564-3b613e875c51",
              "parentUUID": "61218fb3-d5d6-4c01-b8ef-9be675097bd9",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "9b393628-de0a-4d7b-9c7a-b2bb60085990",
            "02b2891d-dbd9-49e6-a53c-f1a7d804720e",
            "9d7b9105-1306-4fae-9472-2a55b88e64aa",
            "09664a78-4a9e-4ef6-82b8-4040b0efc1ea",
            "8fba5682-ee6b-4682-9897-077c281aa257",
            "5d8cd0d0-c5f6-4984-9564-3b613e875c51"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 50,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "501c05bb-bbc2-42e3-b9dd-74e3c76dc28f",
          "title": "<DebtsCard />",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/dashboard/tests/components/debts/DebtsCard.unit.spec.jsx",
          "file": "/src/applications/personalization/dashboard/tests/components/debts/DebtsCard.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "renders the DebtsCard component correctly",
              "fullTitle": "<DebtsCard /> renders the DebtsCard component correctly",
              "timedOut": false,
              "duration": 5,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var defaultProps = {\n  debts: [{\n    fileNumber: '796121200',\n    payeeNumber: '00',\n    personEntitled: 'AJOHNS',\n    deductionCode: '71',\n    benefitType: 'CH33 Books, Supplies/MISC EDU',\n    diaryCode: '100',\n    diaryCodeDescription: 'Pending payment',\n    amountOverpaid: 0,\n    amountWithheld: 0,\n    originalAr: 166.67,\n    currentAr: 120.4,\n    debtHistory: [{\n      date: '09/18/2012',\n      letterCode: '100',\n      description: 'First Demand Letter - Inactive Benefits - Due Process'\n    }]\n  }, {\n    fileNumber: '796121211',\n    payeeNumber: '00',\n    personEntitled: 'AJHONS',\n    deductionCode: '30',\n    benefitType: 'Comp & Pen',\n    diaryCode: '914',\n    diaryCodeDescription: 'Paid in Full',\n    amountOverpaid: 0,\n    amountWithheld: 0,\n    originalAr: 136.24,\n    currentAr: 25,\n    debtHistory: [{\n      date: '02/25/2009',\n      letterCode: '914',\n      description: 'Paid In Full - Account balance cleared via offset, not including TOP.'\n    }, {\n      date: '02/07/2009',\n      letterCode: '905',\n      description: 'Administrative Write Off'\n    }, {\n      date: '12/03/2008',\n      letterCode: '487',\n      description: 'Death Case Pending Action'\n    }]\n  }]\n};\nvar tree = (0, _reactTestingLibraryHelpers.renderWithStoreAndRouter)(/*#__PURE__*/_react.default.createElement(_DebtsCard.default, defaultProps), {\n  initialState: {}\n});\n(0, _chai.expect)(tree.getByText(/2 overpayment debts/)).to.exist;\n(0, _chai.expect)(tree.getByText('updated on', {\n  exact: false\n})).to.exist;\n(0, _chai.expect)(tree.getByText('manage your va debt', {\n  exact: false\n})).to.exist;",
              "err": {},
              "uuid": "bcb0f65d-135f-4841-ab81-0660318dcaff",
              "parentUUID": "501c05bb-bbc2-42e3-b9dd-74e3c76dc28f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "bcb0f65d-135f-4841-ab81-0660318dcaff"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 5,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "c1136e76-30c8-4742-baab-24d716061572",
          "title": "<EducationAndTraining />",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/dashboard/tests/components/education-and-training/EducationAndTraining.unit.spec.jsx",
          "file": "/src/applications/personalization/dashboard/tests/components/education-and-training/EducationAndTraining.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should render",
              "fullTitle": "<EducationAndTraining /> should render",
              "timedOut": false,
              "duration": 4,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var tree = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_EducationAndTraining.default, null));\n(0, _chai.expect)(tree.getByTestId('dashboard-section-education-and-training')).to.exist;\n(0, _chai.expect)(tree.getByTestId('apply-education-benefits-from-cta')).to.exist;\n(0, _chai.expect)(tree.getByTestId('compare-gi-benefits-from-cta')).to.exist;\n(0, _chai.expect)(tree.getByTestId('check-gi-bill-benefits-from-cta')).to.exist;",
              "err": {},
              "uuid": "d131a095-f8bf-4e44-a185-5473a48f7b1d",
              "parentUUID": "c1136e76-30c8-4742-baab-24d716061572",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "renders expected LOA1 content",
              "fullTitle": "<EducationAndTraining /> renders expected LOA1 content",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var tree = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_EducationAndTraining.default, {\n  isLOA1: true\n}));\n(0, _chai.expect)(tree.queryByTestId('compare-gi-benefits-from-cta')).to.not.exist;\n(0, _chai.expect)(tree.queryByTestId('check-gi-bill-benefits-from-cta')).to.not.exist;",
              "err": {},
              "uuid": "efbd3e11-fbf9-47a4-91d5-2ca503ac922c",
              "parentUUID": "c1136e76-30c8-4742-baab-24d716061572",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "fires monitoring events on CTA clicks",
              "fullTitle": "<EducationAndTraining /> fires monitoring events on CTA clicks",
              "timedOut": false,
              "duration": 17,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
              "err": {},
              "uuid": "940e0631-6d55-4876-bb74-41afd3695026",
              "parentUUID": "c1136e76-30c8-4742-baab-24d716061572",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "d131a095-f8bf-4e44-a185-5473a48f7b1d",
            "efbd3e11-fbf9-47a4-91d5-2ca503ac922c",
            "940e0631-6d55-4876-bb74-41afd3695026"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 23,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "d375c76e-b09d-4865-b3dd-dd930871d827",
          "title": "<AppointmentsCard />",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/dashboard/tests/components/health-care/AppointmentsCard.unit.spec.jsx",
          "file": "/src/applications/personalization/dashboard/tests/components/health-care/AppointmentsCard.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should render with appointments",
              "fullTitle": "<AppointmentsCard /> should render with appointments",
              "timedOut": false,
              "duration": 17,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var appointments = [{\n  id: '123',\n  additionalInfo: 'yada yada yada',\n  isVideo: true,\n  providerName: 'test provider',\n  location: {\n    attributes: {\n      id: '668QB',\n      timezone: {\n        timeZoneId: 'America/Denver'\n      }\n    }\n  },\n  localStartTime: '2024-08-11T06:30:00-07:00',\n  type: 'regular'\n}];\nvar startFns = (0, _dateFns.parseISO)(appointments[0].localStartTime);\nvar startFormatted = (0, _dateFns.format)(startFns, 'eeee, MMMM d, yyyy');\nvar tree = (0, _reactTestingLibraryHelpers.renderInReduxProvider)(/*#__PURE__*/_react.default.createElement(_AppointmentsCard.AppointmentsCard, {\n  appointments: appointments\n}), _objectSpread(_objectSpread({}, initialState), {}, {\n  health: {\n    appointments: {\n      appointments: appointments\n    }\n  }\n}));\ntree.getByTestId('health-care-appointments-card');\ntree.getByText('Next appointment');\ntree.getByText('Schedule and manage your appointments');\ntree.getByRole('link', {\n  name: /schedule and manage your appointments/i,\n  value: {\n    text: '/my-health/appointments'\n  }\n});\ntree.getByText('VA Video Connect yada yada yada');\ntree.getByText(startFormatted);\ntree.getByText(\"Time: 7:30 a.m. MT\");",
              "err": {},
              "uuid": "c2ae13f9-a582-4a06-9573-5fe9501255e1",
              "parentUUID": "d375c76e-b09d-4865-b3dd-dd930871d827",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [
            {
              "uuid": "8675e216-65a4-40de-b593-a435661b15b4",
              "title": "renders the location name",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/dashboard/tests/components/health-care/AppointmentsCard.unit.spec.jsx",
              "file": "/src/applications/personalization/dashboard/tests/components/health-care/AppointmentsCard.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "when the appointment is a video appointment",
                  "fullTitle": "<AppointmentsCard /> renders the location name when the appointment is a video appointment",
                  "timedOut": false,
                  "duration": 13,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var appointments = [{\n  localStartTime: '2023-12-04T10:00:00-05:00',\n  isVideo: true,\n  additionalInfo: 'testing'\n}];\nvar tree = (0, _reactTestingLibraryHelpers.renderInReduxProvider)(/*#__PURE__*/_react.default.createElement(_AppointmentsCard.AppointmentsCard, {\n  appointments: appointments\n}), _objectSpread(_objectSpread({}, initialState), {}, {\n  health: {\n    appointments: {\n      appointments: appointments\n    }\n  }\n}));\ntree.getByText('VA Video Connect testing');\n(0, _chai.expect)(tree.getByRole('link', {\n  name: /schedule and manage your appointments/i,\n  value: {\n    text: '/my-health/appointments'\n  }\n})).to.exist;",
                  "err": {},
                  "uuid": "3d03000e-1c7d-4154-b062-96dbbab8f06b",
                  "parentUUID": "8675e216-65a4-40de-b593-a435661b15b4",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "when the appointment isn't a video appointment",
                  "fullTitle": "<AppointmentsCard /> renders the location name when the appointment isn't a video appointment",
                  "timedOut": false,
                  "duration": 12,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var providerName = 'test provider';\nvar appointments = [{\n  localStartTime: '2023-12-04T10:00:00-05:00',\n  isVideo: false,\n  providerName: providerName\n}];\nvar tree = (0, _reactTestingLibraryHelpers.renderInReduxProvider)(/*#__PURE__*/_react.default.createElement(_AppointmentsCard.AppointmentsCard, {\n  appointments: appointments\n}), _objectSpread(_objectSpread({}, initialState), {}, {\n  health: {\n    appointments: {\n      appointments: appointments\n    }\n  }\n}));\ntree.getByText(providerName);\ntree.getByRole('link', {\n  name: /schedule and manage your appointments/i,\n  value: {\n    text: '/my-health/appointments'\n  }\n});",
                  "err": {},
                  "uuid": "a64ff387-1986-48bd-8b62-9331de71817a",
                  "parentUUID": "8675e216-65a4-40de-b593-a435661b15b4",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "3d03000e-1c7d-4154-b062-96dbbab8f06b",
                "a64ff387-1986-48bd-8b62-9331de71817a"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 25,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            }
          ],
          "passes": [
            "c2ae13f9-a582-4a06-9573-5fe9501255e1"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 17,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "84061286-5385-47ed-a6a0-16f6a1e65d8f",
          "title": "<UnconnectedHealthCare />",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/dashboard/tests/components/health-care/HealthCare.unit.spec.jsx",
          "file": "/src/applications/personalization/dashboard/tests/components/health-care/HealthCare.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should render",
              "fullTitle": "<UnconnectedHealthCare /> should render",
              "timedOut": false,
              "duration": 5,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var tree = (0, _reactTestingLibraryHelpers.renderWithStoreAndRouter)(/*#__PURE__*/_react.default.createElement(_HealthCare.UnconnectedHealthCare, null), {});\ntree.getByText('Health care');\ntree.getByTestId('dashboard-section-health-care');",
              "err": {},
              "uuid": "b6030d10-9dcc-47d7-8cc9-c526a5582f5e",
              "parentUUID": "84061286-5385-47ed-a6a0-16f6a1e65d8f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "b6030d10-9dcc-47d7-8cc9-c526a5582f5e"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 5,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "fc477242-a069-4867-bd77-2ac643a1962f",
          "title": "<UnconnectedHealthCareContent />",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/dashboard/tests/components/health-care/HealthCareContent.unit.spec.jsx",
          "file": "/src/applications/personalization/dashboard/tests/components/health-care/HealthCareContent.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should render",
              "fullTitle": "<UnconnectedHealthCareContent /> should render",
              "timedOut": false,
              "duration": 4,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var tree = (0, _reactTestingLibraryHelpers.renderWithStoreAndRouter)(/*#__PURE__*/_react.default.createElement(_HealthCareContent.UnconnectedHealthCareContent, null), {\n  initialState: initialState\n});\ntree.getByTestId('no-healthcare-text');\n(0, _chai.expect)(tree.container.querySelector('va-loading-indicator')).to.not.exist;\n(0, _chai.expect)(tree.queryByTestId('cerner-widget')).to.be.null;",
              "err": {},
              "uuid": "7f7b0a85-7cfd-4c7c-ab06-f6a1eca5552b",
              "parentUUID": "fc477242-a069-4867-bd77-2ac643a1962f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should render the loading indicator",
              "fullTitle": "<UnconnectedHealthCareContent /> should render the loading indicator",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var tree = (0, _reactTestingLibraryHelpers.renderWithStoreAndRouter)(/*#__PURE__*/_react.default.createElement(_HealthCareContent.UnconnectedHealthCareContent, {\n  shouldShowLoadingIndicator: true\n}), {\n  initialState: initialState\n});\n(0, _chai.expect)(tree.container.querySelector('va-loading-indicator')).to.exist;",
              "err": {},
              "uuid": "1575b5af-0681-47c6-9d36-d4f4e2d7cee8",
              "parentUUID": "fc477242-a069-4867-bd77-2ac643a1962f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should render the Cerner widget",
              "fullTitle": "<UnconnectedHealthCareContent /> should render the Cerner widget",
              "timedOut": false,
              "duration": 4,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var tree = (0, _reactTestingLibraryHelpers.renderWithStoreAndRouter)(/*#__PURE__*/_react.default.createElement(_HealthCareContent.UnconnectedHealthCareContent, {\n  isCernerPatient: true,\n  facilityNames: ['do', 're', 'mi']\n}), {\n  initialState: initialState\n});\ntree.getByTestId('cerner-widget');",
              "err": {},
              "uuid": "f1fd449f-1170-4bc3-97db-042b7caa5ae7",
              "parentUUID": "fc477242-a069-4867-bd77-2ac643a1962f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should render the HealthcareError",
              "fullTitle": "<UnconnectedHealthCareContent /> should render the HealthcareError",
              "timedOut": false,
              "duration": 5,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// delete instances of Toggler when errors are launched\nvar initialErrorState = {\n  featureToggles: _defineProperty({}, _featureToggles4.Toggler.TOGGLE_NAMES.myVaUpdateErrorsWarnings, true)\n};\nvar tree = (0, _reactTestingLibraryHelpers.renderWithStoreAndRouter)(/*#__PURE__*/_react.default.createElement(_HealthCareContent.UnconnectedHealthCareContent, {\n  hasAppointmentsError: true\n}), {\n  initialErrorState: initialErrorState\n});\ntree.getByTestId('healthcare-error');",
              "err": {},
              "uuid": "c8a8b16e-af35-46dc-89d2-3fc6976cc2f2",
              "parentUUID": "fc477242-a069-4867-bd77-2ac643a1962f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should render the Next appointments card",
              "fullTitle": "<UnconnectedHealthCareContent /> should render the Next appointments card",
              "timedOut": false,
              "duration": 5,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var appointments = _appointments.v2.createAppointmentSuccess().data;\nvar appts = appointments.map(function (appointment) {\n  return appointment.attributes;\n});\nvar tree = (0, _reactTestingLibraryHelpers.renderWithStoreAndRouter)(/*#__PURE__*/_react.default.createElement(_HealthCareContent.UnconnectedHealthCareContent, {\n  appointments: appts\n}), {\n  initialState: initialState\n});\ntree.getByTestId('health-care-appointments-card');",
              "err": {},
              "uuid": "443992b2-92b9-449a-8aaf-608934c33146",
              "parentUUID": "fc477242-a069-4867-bd77-2ac643a1962f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should render the no upcoming appointments text",
              "fullTitle": "<UnconnectedHealthCareContent /> should render the no upcoming appointments text",
              "timedOut": false,
              "duration": 7,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var tree = (0, _reactTestingLibraryHelpers.renderWithStoreAndRouter)(/*#__PURE__*/_react.default.createElement(_HealthCareContent.UnconnectedHealthCareContent, {\n  dataLoadingDisabled: true,\n  isVAPatient: true\n}), {\n  initialState: initialState\n});\ntree.getByTestId('no-upcoming-appointments-text');",
              "err": {},
              "uuid": "10e6265b-7d25-4d21-beaf-ce4350686c45",
              "parentUUID": "fc477242-a069-4867-bd77-2ac643a1962f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [
            {
              "uuid": "78568a24-5393-49df-a62d-a346f87d0d6a",
              "title": "should render the HealthCareCTA",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/dashboard/tests/components/health-care/HealthCareContent.unit.spec.jsx",
              "file": "/src/applications/personalization/dashboard/tests/components/health-care/HealthCareContent.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "but show only Apply for VA health care and Visit MHV links for a non-patient",
                  "fullTitle": "<UnconnectedHealthCareContent /> should render the HealthCareCTA but show only Apply for VA health care and Visit MHV links for a non-patient",
                  "timedOut": false,
                  "duration": 4,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var tree = (0, _reactTestingLibraryHelpers.renderWithStoreAndRouter)(/*#__PURE__*/_react.default.createElement(_HealthCareContent.UnconnectedHealthCareContent, {\n  isVAPatient: false,\n  isLOA1: false\n}), {\n  initialState: {\n    featureToggles: _defineProperty({}, _featureToggles4.Toggler.TOGGLE_NAMES.myVaEnableMhvLink, true)\n  }\n});\ntree.getByTestId('apply-va-healthcare-link-from-cta');\ntree.getByTestId('visit-mhv-on-va-gov');",
                  "err": {},
                  "uuid": "15dee20c-86e9-4ae9-a099-e0dd379627cd",
                  "parentUUID": "78568a24-5393-49df-a62d-a346f87d0d6a",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "when a patient has appointments and doesn't have an appointment error",
                  "fullTitle": "<UnconnectedHealthCareContent /> should render the HealthCareCTA when a patient has appointments and doesn't have an appointment error",
                  "timedOut": false,
                  "duration": 84,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var appointments = _appointments.v2.createAppointmentSuccess().data;\nvar appts = appointments.map(function (appointment) {\n  return appointment.attributes;\n});\nvar tree = (0, _reactTestingLibraryHelpers.renderWithStoreAndRouter)(/*#__PURE__*/_react.default.createElement(_HealthCareContent.UnconnectedHealthCareContent, {\n  appointments: appts,\n  dataLoadingDisabled: true,\n  isVAPatient: true,\n  shouldFetchUnreadMessages: true,\n  unreadMessagesCount: 2\n}), {\n  initialState: {\n    featureToggles: _defineProperty({}, _featureToggles4.Toggler.TOGGLE_NAMES.myVaEnableMhvLink, true)\n  }\n});\ntree.getByTestId('visit-mhv-on-va-gov');\n(0, _chai.expect)(tree.getByRole('link', {\n  name: /schedule and manage your appointments/i,\n  value: {\n    text: '/my-health/appointments'\n  }\n})).to.exist;",
                  "err": {},
                  "uuid": "9f1911d3-dc8d-48e5-b974-1060b54d49bd",
                  "parentUUID": "78568a24-5393-49df-a62d-a346f87d0d6a",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "15dee20c-86e9-4ae9-a099-e0dd379627cd",
                "9f1911d3-dc8d-48e5-b974-1060b54d49bd"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 88,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            }
          ],
          "passes": [
            "7f7b0a85-7cfd-4c7c-ab06-f6a1eca5552b",
            "1575b5af-0681-47c6-9d36-d4f4e2d7cee8",
            "f1fd449f-1170-4bc3-97db-042b7caa5ae7",
            "c8a8b16e-af35-46dc-89d2-3fc6976cc2f2",
            "443992b2-92b9-449a-8aaf-608934c33146",
            "10e6265b-7d25-4d21-beaf-ce4350686c45"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 27,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "4a09f84d-62e6-45d4-bf2a-9a8a93c78105",
          "title": "<HealthCareCTA />",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/dashboard/tests/components/health-care/HealthCareCTA.unit.spec.jsx",
          "file": "/src/applications/personalization/dashboard/tests/components/health-care/HealthCareCTA.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should render when user isn't a VA patient",
              "fullTitle": "<HealthCareCTA /> should render when user isn't a VA patient",
              "timedOut": false,
              "duration": 4,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var tree = (0, _reactTestingLibraryHelpers.renderWithStoreAndRouter)(/*#__PURE__*/_react.default.createElement(_HealthCareCTA.default, null), {\n  initialState: initialState\n});\ntree.getByTestId('apply-va-healthcare-link-from-cta');",
              "err": {},
              "uuid": "734dd4c6-262e-4b65-8713-039e76c99324",
              "parentUUID": "4a09f84d-62e6-45d4-bf2a-9a8a93c78105",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [
            {
              "uuid": "bb36e19e-a20a-45c7-90fc-c39dc2bee53b",
              "title": "user is a VA patient",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/dashboard/tests/components/health-care/HealthCareCTA.unit.spec.jsx",
              "file": "/src/applications/personalization/dashboard/tests/components/health-care/HealthCareCTA.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should render",
                  "fullTitle": "<HealthCareCTA /> user is a VA patient should render",
                  "timedOut": false,
                  "duration": 76,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var tree = (0, _reactTestingLibraryHelpers.renderWithStoreAndRouter)(/*#__PURE__*/_react.default.createElement(_HealthCareCTA.default, {\n  isVAPatient: true\n}), {\n  initialState: initialState\n});\n(0, _chai.expect)(tree.queryByText('Apply for VA health care')).to.be.null;\n(0, _chai.expect)(tree.queryByTestId('apply-va-healthcare-link-from-cta')).to.be.null;\ntree.getByTestId('view-your-messages-link-from-cta');\ntree.getByTestId('view-manage-appointments-link-from-cta');\n(0, _chai.expect)(tree.getByRole('link', {\n  name: /schedule and manage your appointments/i,\n  value: {\n    text: '/my-health/appointments'\n  }\n})).to.exist;\ntree.getByTestId('refill-prescriptions-link-from-cta');\ntree.getByTestId('request-travel-reimbursement-link-from-cta');\ntree.getByTestId('get-medical-records-link-from-cta');",
                  "err": {},
                  "uuid": "6a414fc8-58a5-4287-a419-51ab43ec984f",
                  "parentUUID": "bb36e19e-a20a-45c7-90fc-c39dc2bee53b",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should render a CTA link to MHV on VA.gov",
                  "fullTitle": "<HealthCareCTA /> user is a VA patient should render a CTA link to MHV on VA.gov",
                  "timedOut": false,
                  "duration": 88,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var tree = (0, _reactTestingLibraryHelpers.renderWithStoreAndRouter)(/*#__PURE__*/_react.default.createElement(_HealthCareCTA.default, {\n  isVAPatient: true,\n  noCerner: true\n}), {\n  initialState: {\n    featureToggles: _defineProperty({}, _featureToggles3.Toggler.TOGGLE_NAMES.myVaEnableMhvLink, true)\n  }\n});\ntree.getByTestId('visit-mhv-on-va-gov');\n(0, _chai.expect)(tree.queryByText('Apply for VA health care')).to.be.null;\n(0, _chai.expect)(tree.queryByTestId('apply-va-healthcare-link-from-cta')).to.be.null;\ntree.getByTestId('view-your-messages-link-from-cta');\ntree.getByTestId('view-manage-appointments-link-from-cta');\n(0, _chai.expect)(tree.getByRole('link', {\n  name: /schedule and manage your appointments/i,\n  value: {\n    text: '/my-health/appointments'\n  }\n})).to.exist;\ntree.getByTestId('refill-prescriptions-link-from-cta');\ntree.getByTestId('request-travel-reimbursement-link-from-cta');\ntree.getByTestId('get-medical-records-link-from-cta');",
                  "err": {},
                  "uuid": "fb33cb8c-83bc-40b2-8108-a8ca083bc925",
                  "parentUUID": "bb36e19e-a20a-45c7-90fc-c39dc2bee53b",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [
                {
                  "uuid": "cb4f0fe1-fec4-49bd-8497-d46115bce912",
                  "title": "renders \"Go to your inbox\" CTA",
                  "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/dashboard/tests/components/health-care/HealthCareCTA.unit.spec.jsx",
                  "file": "/src/applications/personalization/dashboard/tests/components/health-care/HealthCareCTA.unit.spec.jsx",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "when the unread message count is 0",
                      "fullTitle": "<HealthCareCTA /> user is a VA patient renders \"Go to your inbox\" CTA when the unread message count is 0",
                      "timedOut": false,
                      "duration": 70,
                      "state": "passed",
                      "speed": "slow",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "var tree = (0, _reactTestingLibraryHelpers.renderWithStoreAndRouter)(/*#__PURE__*/_react.default.createElement(_HealthCareCTA.default, {\n  isVAPatient: true,\n  unreadMessagesCount: 0\n}), {\n  initialState: initialState\n});\ntree.getByTestId('view-your-messages-link-from-cta');\n(0, _chai.expect)(tree.getByRole('link', {\n  name: /schedule and manage your appointments/i,\n  value: {\n    text: '/my-health/appointments'\n  }\n})).to.exist;",
                      "err": {},
                      "uuid": "7766df10-505f-4086-9aee-bb463cdc31ea",
                      "parentUUID": "cb4f0fe1-fec4-49bd-8497-d46115bce912",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "when user has unread messages",
                      "fullTitle": "<HealthCareCTA /> user is a VA patient renders \"Go to your inbox\" CTA when user has unread messages",
                      "timedOut": false,
                      "duration": 6,
                      "state": "passed",
                      "speed": "slow",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "var tree = (0, _reactTestingLibraryHelpers.renderWithStoreAndRouter)(/*#__PURE__*/_react.default.createElement(_HealthCareCTA.default, {\n  isVAPatient: true,\n  unreadMessagesCount: 3\n}), {\n  initialState: initialState\n});\n(0, _chai.expect)(tree.getByLabelText('You have unread messages. Go to your inbox.', {\n  selector: 'a'\n})).to.exist;",
                      "err": {},
                      "uuid": "f03d2a43-4ee9-4732-a75a-e32b397bf5be",
                      "parentUUID": "cb4f0fe1-fec4-49bd-8497-d46115bce912",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "when there is an inbox error",
                      "fullTitle": "<HealthCareCTA /> user is a VA patient renders \"Go to your inbox\" CTA when there is an inbox error",
                      "timedOut": false,
                      "duration": 56,
                      "state": "passed",
                      "speed": "slow",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "var tree = (0, _reactTestingLibraryHelpers.renderWithStoreAndRouter)(/*#__PURE__*/_react.default.createElement(_HealthCareCTA.default, {\n  isVAPatient: true,\n  hasInboxError: true\n}), {\n  initialState: initialState\n});\ntree.getByTestId('view-your-messages-link-from-cta');\n(0, _chai.expect)(tree.getByRole('link', {\n  name: /schedule and manage your appointments/i,\n  value: {\n    text: '/my-health/appointments'\n  }\n})).to.exist;",
                      "err": {},
                      "uuid": "a77f0604-f4c3-407b-bf26-25fa83a5b7f5",
                      "parentUUID": "cb4f0fe1-fec4-49bd-8497-d46115bce912",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "when there is an inbox error and the unread message count is 0",
                      "fullTitle": "<HealthCareCTA /> user is a VA patient renders \"Go to your inbox\" CTA when there is an inbox error and the unread message count is 0",
                      "timedOut": false,
                      "duration": 61,
                      "state": "passed",
                      "speed": "slow",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "var tree = (0, _reactTestingLibraryHelpers.renderWithStoreAndRouter)(/*#__PURE__*/_react.default.createElement(_HealthCareCTA.default, {\n  isVAPatient: true,\n  hasInboxError: true,\n  unreadMessagesCount: 0\n}), {\n  initialState: initialState\n});\ntree.getByTestId('view-your-messages-link-from-cta');\n(0, _chai.expect)(tree.getByRole('link', {\n  name: /schedule and manage your appointments/i,\n  value: {\n    text: '/my-health/appointments'\n  }\n})).to.exist;",
                      "err": {},
                      "uuid": "1d4f797c-8eab-44cd-bea1-87867026869b",
                      "parentUUID": "cb4f0fe1-fec4-49bd-8497-d46115bce912",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "7766df10-505f-4086-9aee-bb463cdc31ea",
                    "f03d2a43-4ee9-4732-a75a-e32b397bf5be",
                    "a77f0604-f4c3-407b-bf26-25fa83a5b7f5",
                    "1d4f797c-8eab-44cd-bea1-87867026869b"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 193,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                }
              ],
              "passes": [
                "6a414fc8-58a5-4287-a419-51ab43ec984f",
                "fb33cb8c-83bc-40b2-8108-a8ca083bc925"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 164,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            }
          ],
          "passes": [
            "734dd4c6-262e-4b65-8713-039e76c99324"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 4,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "f37c92fd-f046-4621-8ef4-ffd7ffdffcfe",
          "title": "<IconCTALink />",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/dashboard/tests/components/IconCTALink.unit.spec.jsx",
          "file": "/src/applications/personalization/dashboard/tests/components/IconCTALink.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should render",
              "fullTitle": "<IconCTALink /> should render",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var linkText = 'Testing';\nvar tree = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_IconCTALink.default, {\n  testId: \"12345\",\n  href: \"https://example.com\",\n  text: linkText\n}));\n(0, _chai.expect)(tree.getByTestId('12345')).to.exist;\n(0, _chai.expect)(tree.getByText('Testing')).to.exist;",
              "err": {},
              "uuid": "5a92f022-cbed-4db0-b8bc-98c4e650def3",
              "parentUUID": "f37c92fd-f046-4621-8ef4-ffd7ffdffcfe",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should render the correct href",
              "fullTitle": "<IconCTALink /> should render the correct href",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var wrapper = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_IconCTALink.default, {\n  testId: \"12345\",\n  href: \"https://example.com\",\n  text: \"Testing link\"\n}));\nvar href = getAnchorEl(wrapper).getAttribute('href');\n(0, _chai.expect)(href).to.eq('https://example.com');",
              "err": {},
              "uuid": "a71778cd-90ca-490e-bc2f-5d31c39fe48a",
              "parentUUID": "f37c92fd-f046-4621-8ef4-ffd7ffdffcfe",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should open in a new tab",
              "fullTitle": "<IconCTALink /> should open in a new tab",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var wrapper = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_IconCTALink.default, {\n  testId: \"12345\",\n  href: \"https://example.com\",\n  text: \"Testing link\",\n  newTab: true\n}));\nvar anchor = getAnchorEl(wrapper);\nvar target = anchor.getAttribute('target');\nvar rel = anchor.getAttribute('rel');\n(0, _chai.expect)(target).to.eq('_blank');\n(0, _chai.expect)(rel).to.eq('noreferrer noopener');",
              "err": {},
              "uuid": "1a31efcf-9c3c-46cc-a43d-3190fbb1473d",
              "parentUUID": "f37c92fd-f046-4621-8ef4-ffd7ffdffcfe",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should render the aria-label",
              "fullTitle": "<IconCTALink /> should render the aria-label",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var wrapper = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_IconCTALink.default, {\n  testId: \"12345\",\n  href: \"https://example.com\",\n  text: \"Testing link\",\n  ariaLabel: \"test label\"\n}));\nvar ariaLabel = getAnchorEl(wrapper).getAttribute('aria-label');\n(0, _chai.expect)(ariaLabel).to.eq('test label');",
              "err": {},
              "uuid": "4796bd84-df35-412b-a02a-396ee4bd4f55",
              "parentUUID": "f37c92fd-f046-4621-8ef4-ffd7ffdffcfe",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should render the icon",
              "fullTitle": "<IconCTALink /> should render the icon",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var wrapper = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_IconCTALink.default, {\n  testId: \"12345\",\n  href: \"https://example.com\",\n  text: \"Testing link\",\n  icon: \"check\"\n}));\n(0, _chai.expect)(wrapper.container.querySelector('va-icon')).to.exist;",
              "err": {},
              "uuid": "dc2c5fd9-32dd-452f-9f53-9451af1fa8aa",
              "parentUUID": "f37c92fd-f046-4621-8ef4-ffd7ffdffcfe",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should render bold text",
              "fullTitle": "<IconCTALink /> should render bold text",
              "timedOut": false,
              "duration": 3,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var wrapper = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_IconCTALink.default, {\n  testId: \"12345\",\n  href: \"https://example.com\",\n  text: \"Testing link\",\n  boldText: true\n}));\n(0, _chai.expect)(wrapper.container.querySelector('.vads-u-padding-y--2p5.cta-link.vads-u-font-weight--bold')).to.exist;",
              "err": {},
              "uuid": "38f01fa5-74cf-409a-a7d0-c2f638301b79",
              "parentUUID": "f37c92fd-f046-4621-8ef4-ffd7ffdffcfe",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should handle an onClick prop",
              "fullTitle": "<IconCTALink /> should handle an onClick prop",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var onClickSpy = _sinon.default.spy();\nvar tree = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_IconCTALink.default, {\n  testId: \"12345\",\n  href: \"https://example.com\",\n  text: \"Testing link\",\n  onClick: onClickSpy\n}));\ngetAnchorEl(tree).click();\n(0, _chai.expect)(onClickSpy.called).to.be.true;",
              "err": {},
              "uuid": "c149d496-fbcd-4426-80ee-6fe7eb0bcf79",
              "parentUUID": "f37c92fd-f046-4621-8ef4-ffd7ffdffcfe",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should show the dot indicator if the toggle is enabled",
              "fullTitle": "<IconCTALink /> should show the dot indicator if the toggle is enabled",
              "timedOut": false,
              "duration": 4,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var initialState = {\n  featureToggles: _defineProperty({}, _featureToggles2.Toggler.TOGGLE_NAMES.myVaNotificationDotIndicator, true)\n};\nvar tree = (0, _reactTestingLibraryHelpers.renderWithStoreAndRouter)(/*#__PURE__*/_react.default.createElement(_IconCTALink.default, {\n  testId: \"12345\",\n  href: \"https://example.com\",\n  text: \"Testing link\",\n  dotIndicator: true\n}), {\n  initialState: initialState\n});\n(0, _chai.expect)(tree.getByTestId('icon-cta-link-dot-indicator')).to.exist;",
              "err": {},
              "uuid": "2b71855f-17a1-4622-b77d-359a946242c0",
              "parentUUID": "f37c92fd-f046-4621-8ef4-ffd7ffdffcfe",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "5a92f022-cbed-4db0-b8bc-98c4e650def3",
            "a71778cd-90ca-490e-bc2f-5d31c39fe48a",
            "1a31efcf-9c3c-46cc-a43d-3190fbb1473d",
            "4796bd84-df35-412b-a02a-396ee4bd4f55",
            "dc2c5fd9-32dd-452f-9f53-9451af1fa8aa",
            "38f01fa5-74cf-409a-a7d0-c2f638301b79",
            "c149d496-fbcd-4426-80ee-6fe7eb0bcf79",
            "2b71855f-17a1-4622-b77d-359a946242c0"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 16,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "23ca2282-f994-41f4-955b-602ae2eb1af4",
          "title": "<DebtNotificationAlert />",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/dashboard/tests/components/notifications/DebtNotificationAlert.unit.spec.jsx",
          "file": "/src/applications/personalization/dashboard/tests/components/notifications/DebtNotificationAlert.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should render",
              "fullTitle": "<DebtNotificationAlert /> should render",
              "timedOut": false,
              "duration": 3,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var notification = {\n  id: '12345',\n  type: 'abc',\n  attributes: {\n    createdAt: '2023-05-14T12:00:00Z',\n    dismissed: false,\n    templateId: 'abc-xyz',\n    updatedAt: '2023-05-14T12:00:00Z',\n    vaProfileId: '1'\n  }\n};\nvar tree = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_DebtNotificationAlert.DebtNotificationAlert, {\n  notification: notification,\n  dismissNotification: function dismissNotification() {}\n}));\n(0, _chai.expect)(tree.getByTestId('dashboard-notification-alert')).to.exist;\n(0, _chai.expect)(tree.getByText('You have new debt.')).to.exist;\n(0, _chai.expect)(tree.getByText('Manage your VA debt')).to.exist;\n(0, _chai.expect)(tree.getByText('Sunday, May 14, 2023')).to.exist;",
              "err": {},
              "uuid": "8e6bcd0e-c1e5-40a9-912c-4af55a60db14",
              "parentUUID": "23ca2282-f994-41f4-955b-602ae2eb1af4",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "8e6bcd0e-c1e5-40a9-912c-4af55a60db14"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "81dd70a6-0e9a-4c99-bc77-e8a71a4cf1fd",
          "title": "<Notifications />",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/dashboard/tests/components/notifications/Notifications.unit.spec.jsx",
          "file": "/src/applications/personalization/dashboard/tests/components/notifications/Notifications.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should render",
              "fullTitle": "<Notifications /> should render",
              "timedOut": false,
              "duration": 7,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var notifications = [{\n  id: '12345',\n  type: 'abc',\n  attributes: {\n    createdAt: '2023-05-15T19:00:00Z',\n    dismissed: false,\n    templateId: 'f9947b27-df3b-4b09-875c-7f76594d766d',\n    updatedAt: '2023-05-15T19:00:00Z',\n    vaProfileId: '1'\n  }\n}, {\n  id: '67890',\n  type: 'abc',\n  attributes: {\n    createdAt: '2023-05-14T19:00:00Z',\n    dismissed: false,\n    templateId: 'f9947b27-df3b-4b09-875c-7f76594d766d',\n    updatedAt: '2023-05-14T19:00:00Z',\n    vaProfileId: '1'\n  }\n}];\nvar initialState = {\n  featureToggles: _defineProperty({}, _Toggler.Toggler.TOGGLE_NAMES.myVaEnableNotificationComponent, false)\n};\nvar tree = (0, _reactTestingLibraryHelpers.renderWithStoreAndRouter)(/*#__PURE__*/_react.default.createElement(_Notifications.Notifications, {\n  getNotifications: function getNotifications() {},\n  notifications: notifications\n}), {\n  initialState: initialState\n});\n(0, _chai.expect)(tree.getByText('Notifications')).to.exist;\n(0, _chai.expect)(tree.getAllByText('You have new debt.').length).to.eq(2);\n(0, _chai.expect)(tree.getAllByText('Manage your VA debt').length).to.eq(2);\n(0, _chai.expect)(tree.getByText('Monday, May 15, 2023')).to.exist;\n(0, _chai.expect)(tree.getByText('Sunday, May 14, 2023')).to.exist;",
              "err": {},
              "uuid": "f8ba22b3-1ed7-4d24-a7ea-79973a7fb448",
              "parentUUID": "81dd70a6-0e9a-4c99-bc77-e8a71a4cf1fd",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f8ba22b3-1ed7-4d24-a7ea-79973a7fb448"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 7,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "28c97150-50e3-4bdc-a80e-c080185ad14a",
          "title": "<RenderClaimsWidgetDowntimeNotification />",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/dashboard/tests/components/RenderClaimsWidgetDowntimeNotification.unit.spec.jsx",
          "file": "/src/applications/personalization/dashboard/tests/components/RenderClaimsWidgetDowntimeNotification.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should render the downtime message when external service status is down",
              "fullTitle": "<RenderClaimsWidgetDowntimeNotification /> should render the downtime message when external service status is down",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var downtime = {\n  status: _externalServiceStatus.default.down,\n  endTime: {\n    toDate: function toDate() {\n      return (0, _dateFns.addHours)(new Date(), 30);\n    }\n  }\n};\nvar view = (0, _react2.render)((0, _RenderClaimsWidgetDowntimeNotification.default)({\n  status: downtime.status,\n  endTime: downtime.endTime\n}, children));\n(0, _chai.expect)(view.getByTestId('dashboard-section-claims-and-appeals-loader')).to.exist;\n(0, _chai.expect)(view.queryByTestId('test-children')).to.not.exist;\n(0, _chai.expect)(view.getByText((0, _dateFns.format)(downtime.endTime.toDate(), 'PPPp'), {\n  exact: false\n})).to.exist;",
              "err": {},
              "uuid": "7bd3ffc7-9832-4fe3-be99-7ad1adb3cae9",
              "parentUUID": "28c97150-50e3-4bdc-a80e-c080185ad14a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should not render the downtime message when when external service status is ok",
              "fullTitle": "<RenderClaimsWidgetDowntimeNotification /> should not render the downtime message when when external service status is ok",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var view = (0, _react2.render)((0, _RenderClaimsWidgetDowntimeNotification.default)({\n  status: _externalServiceStatus.default.ok\n}, children));\nexpectChildrenToBeRendered(view);",
              "err": {},
              "uuid": "7ffdc6ef-471d-4b84-b599-9a4ad7dbc8a8",
              "parentUUID": "28c97150-50e3-4bdc-a80e-c080185ad14a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should not render the downtime message when when external service status is downtime approaching",
              "fullTitle": "<RenderClaimsWidgetDowntimeNotification /> should not render the downtime message when when external service status is downtime approaching",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var view = (0, _react2.render)((0, _RenderClaimsWidgetDowntimeNotification.default)({\n  status: _externalServiceStatus.default.downtimeApproaching\n}, children));\nexpectChildrenToBeRendered(view);",
              "err": {},
              "uuid": "d2f647bc-7167-413e-a62e-315ead86694d",
              "parentUUID": "28c97150-50e3-4bdc-a80e-c080185ad14a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "7bd3ffc7-9832-4fe3-be99-7ad1adb3cae9",
            "7ffdc6ef-471d-4b84-b599-9a4ad7dbc8a8",
            "d2f647bc-7167-413e-a62e-315ead86694d"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "ee1ee02e-54f2-4b65-8927-d7328c4b5dbf",
          "title": "COVID19Alert component",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/dashboard/tests/covid-19.unit.spec.jsx",
          "file": "/src/applications/personalization/dashboard/tests/covid-19.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "renders",
              "fullTitle": "COVID19Alert component renders",
              "timedOut": false,
              "duration": 4,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var wrapper = (0, _enzyme.shallow)(/*#__PURE__*/_react.default.createElement(_covid.COVID19Alert, null));\n(0, _chai.expect)(wrapper.html()).to.not.be.empty;\nwrapper.unmount();",
              "err": {},
              "uuid": "929bd184-4fcd-493c-b83e-d52195da8ba9",
              "parentUUID": "ee1ee02e-54f2-4b65-8927-d7328c4b5dbf",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "renders an va-alert component",
              "fullTitle": "COVID19Alert component renders an va-alert component",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var wrapper = (0, _enzyme.shallow)(/*#__PURE__*/_react.default.createElement(_covid.COVID19Alert, null));\n(0, _chai.expect)(wrapper.find('va-alert').length).to.equal(1);\nwrapper.unmount();",
              "err": {},
              "uuid": "c2330277-032e-4210-8b45-4896b3f0b363",
              "parentUUID": "ee1ee02e-54f2-4b65-8927-d7328c4b5dbf",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "renders the default chat hours if no props are set",
              "fullTitle": "COVID19Alert component renders the default chat hours if no props are set",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var wrapper = (0, _enzyme.shallow)(/*#__PURE__*/_react.default.createElement(_covid.COVID19Alert, null));\n(0, _chai.expect)(wrapper.html()).to.contain('9:00 a.m. to 5:00 p.m., Monday through Friday');\nwrapper.unmount();",
              "err": {},
              "uuid": "a06cb217-09e6-4322-af21-95e6947299b3",
              "parentUUID": "ee1ee02e-54f2-4b65-8927-d7328c4b5dbf",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "renders the VISN 8 chat hours if passed a VISN 8 facilityId",
              "fullTitle": "COVID19Alert component renders the VISN 8 chat hours if passed a VISN 8 facilityId",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var wrapper = (0, _enzyme.shallow)(/*#__PURE__*/_react.default.createElement(_covid.COVID19Alert, {\n  facilityId: \"672\"\n}));\n(0, _chai.expect)(wrapper.html()).to.contain('8:00 a.m. to 4:00 p.m., Monday through Friday');\nwrapper.unmount();",
              "err": {},
              "uuid": "b64a67ec-087b-4361-bda9-b5e1f1228458",
              "parentUUID": "ee1ee02e-54f2-4b65-8927-d7328c4b5dbf",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "renders the VISN 23 chat hours if passed a VISN 23 facilityId",
              "fullTitle": "COVID19Alert component renders the VISN 23 chat hours if passed a VISN 23 facilityId",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var wrapper = (0, _enzyme.shallow)(/*#__PURE__*/_react.default.createElement(_covid.COVID19Alert, {\n  facilityId: \"656\"\n}));\n(0, _chai.expect)(wrapper.html()).to.contain('7:30 a.m. to 4:30 p.m., Monday through Friday');\nwrapper.unmount();",
              "err": {},
              "uuid": "7083430d-29d3-4d00-824b-8ea9847ef6c7",
              "parentUUID": "ee1ee02e-54f2-4b65-8927-d7328c4b5dbf",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "the anchor tag is configured correctly",
              "fullTitle": "COVID19Alert component the anchor tag is configured correctly",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var wrapper = (0, _enzyme.shallow)(/*#__PURE__*/_react.default.createElement(_covid.COVID19Alert, null));\nvar anchor = wrapper.find('a');\n(0, _chai.expect)(anchor.props().href).to.equal('https://mobile.va.gov/app/va-health-chat');\n(0, _chai.expect)(anchor.props().className.includes('usa-button-primary')).to.be.true;\nwrapper.unmount();",
              "err": {},
              "uuid": "9f6e1ad8-cab7-47cc-98c2-0e3b8d53996e",
              "parentUUID": "ee1ee02e-54f2-4b65-8927-d7328c4b5dbf",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "929bd184-4fcd-493c-b83e-d52195da8ba9",
            "c2330277-032e-4210-8b45-4896b3f0b363",
            "a06cb217-09e6-4322-af21-95e6947299b3",
            "b64a67ec-087b-4361-bda9-b5e1f1228458",
            "7083430d-29d3-4d00-824b-8ea9847ef6c7",
            "9f6e1ad8-cab7-47cc-98c2-0e3b8d53996e"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 8,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "3440b389-c0d2-48b6-91d4-52acd27f98bc",
          "title": "profile helpers:",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/dashboard/tests/helpers.unit.spec.js",
          "file": "/src/applications/personalization/dashboard/tests/helpers.unit.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "381aff33-da10-4372-b14b-b44827eeddd0",
              "title": "FORM_DESCRIPTIONS",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/dashboard/tests/helpers.unit.spec.js",
              "file": "/src/applications/personalization/dashboard/tests/helpers.unit.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should have description information for each verified form",
                  "fullTitle": "profile helpers: FORM_DESCRIPTIONS should have description information for each verified form",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "_constants.MY_VA_SIP_FORMS.forEach(function (form) {\n  (0, _chai.expect)(_constants.FORM_DESCRIPTIONS[form.id]).to.exist;\n});",
                  "err": {},
                  "uuid": "b242ee07-d46a-448a-b332-39782ffec1d7",
                  "parentUUID": "381aff33-da10-4372-b14b-b44827eeddd0",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "b242ee07-d46a-448a-b332-39782ffec1d7"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "ca55c988-0353-4adc-be3c-04f1f1556311",
              "title": "MY_VA_SIP_FORMS",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/dashboard/tests/helpers.unit.spec.js",
              "file": "/src/applications/personalization/dashboard/tests/helpers.unit.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should have description information for each verified form",
                  "fullTitle": "profile helpers: MY_VA_SIP_FORMS should have description information for each verified form",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "_constants.MY_VA_SIP_FORMS.forEach(function (form) {\n  (0, _chai.expect)(form.description).to.exist;\n});",
                  "err": {},
                  "uuid": "6335698a-6291-4bd4-a864-e23e28b63e98",
                  "parentUUID": "ca55c988-0353-4adc-be3c-04f1f1556311",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "6335698a-6291-4bd4-a864-e23e28b63e98"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "40202c07-8669-45a4-8548-db8ed25cbade",
              "title": "normalizeSubmissionStatus",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/dashboard/tests/helpers.unit.spec.js",
              "file": "/src/applications/personalization/dashboard/tests/helpers.unit.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "throws TypeError if no string is provided",
                  "fullTitle": "profile helpers: normalizeSubmissionStatus throws TypeError if no string is provided",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)(_helpers.normalizeSubmissionStatus).to.throw(TypeError);",
                  "err": {},
                  "uuid": "ffee2bd3-88d6-4a8a-82e1-4732cfe68a72",
                  "parentUUID": "40202c07-8669-45a4-8548-db8ed25cbade",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should normalize \"actionNeeded\" from api submission status",
                  "fullTitle": "profile helpers: normalizeSubmissionStatus should normalize \"actionNeeded\" from api submission status",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "['error', 'expired'].forEach(function (value) {\n  (0, _chai.expect)((0, _helpers.normalizeSubmissionStatus)(value)).to.equal('actionNeeded');\n});",
                  "err": {},
                  "uuid": "93e96ecc-64f4-4864-865f-3fbd81d8fb08",
                  "parentUUID": "40202c07-8669-45a4-8548-db8ed25cbade",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should normalize \"received\" from api submission status",
                  "fullTitle": "profile helpers: normalizeSubmissionStatus should normalize \"received\" from api submission status",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "['VBMS'].forEach(function (value) {\n  (0, _chai.expect)((0, _helpers.normalizeSubmissionStatus)(value)).to.equal('received');\n});",
                  "err": {},
                  "uuid": "caebdb5c-fc8b-4444-865a-f2268feaefe6",
                  "parentUUID": "40202c07-8669-45a4-8548-db8ed25cbade",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should normalize \"inProgress\" from api submission status",
                  "fullTitle": "profile helpers: normalizeSubmissionStatus should normalize \"inProgress\" from api submission status",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "['pending', 'uploaded', 'received', 'processing', 'success'].forEach(function (value) {\n  (0, _chai.expect)((0, _helpers.normalizeSubmissionStatus)(value)).to.equal('inProgress');\n});",
                  "err": {},
                  "uuid": "9399e961-a674-4077-b7de-254ca956d24d",
                  "parentUUID": "40202c07-8669-45a4-8548-db8ed25cbade",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "ffee2bd3-88d6-4a8a-82e1-4732cfe68a72",
                "93e96ecc-64f4-4864-865f-3fbd81d8fb08",
                "caebdb5c-fc8b-4444-865a-f2268feaefe6",
                "9399e961-a674-4077-b7de-254ca956d24d"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "7e0707a3-bfd1-4bf0-a614-1a0913a2635d",
              "title": "formatSubmissionDisplayStatus",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/dashboard/tests/helpers.unit.spec.js",
              "file": "/src/applications/personalization/dashboard/tests/helpers.unit.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "returns undefind with unknownn api status",
                  "fullTitle": "profile helpers: formatSubmissionDisplayStatus returns undefind with unknownn api status",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)((0, _helpers.formatSubmissionDisplayStatus)()).to.be.undefined;",
                  "err": {},
                  "uuid": "d5e4e133-ea6c-467e-bbc4-2a3a288ba3c9",
                  "parentUUID": "7e0707a3-bfd1-4bf0-a614-1a0913a2635d",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "returns xpcted strigs from normalized submission status",
                  "fullTitle": "profile helpers: formatSubmissionDisplayStatus returns xpcted strigs from normalized submission status",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)((0, _helpers.formatSubmissionDisplayStatus)('inProgress')).to.equal('Submission in Progress');\n(0, _chai.expect)((0, _helpers.formatSubmissionDisplayStatus)('actionNeeded')).to.equal('Action Needed');\n(0, _chai.expect)((0, _helpers.formatSubmissionDisplayStatus)('received')).to.equal('Received');",
                  "err": {},
                  "uuid": "55327402-7cec-4b7c-821e-5ffccff36486",
                  "parentUUID": "7e0707a3-bfd1-4bf0-a614-1a0913a2635d",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "d5e4e133-ea6c-467e-bbc4-2a3a288ba3c9",
                "55327402-7cec-4b7c-821e-5ffccff36486"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "e26a8b7b-3dab-44ef-97bb-cacf7b1ee305",
          "title": "folders reducer",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/dashboard/tests/reducers/folders.unit.spec.jsx",
          "file": "/src/applications/personalization/dashboard/tests/reducers/folders.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should set a folder fetched from the server",
              "fullTitle": "folders reducer should set a folder fetched from the server",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var folder = {\n  data: _messaging2.allFolders.data[0]\n};\nvar newState = (0, _folders.default)(initialState, {\n  type: _messaging.FETCH_FOLDER_SUCCESS,\n  folder: folder,\n  messages: _messaging2.messages\n});\n(0, _chai.expect)(newState.data.currentItem.attributes).to.eql(folder.data.attributes);\n(0, _chai.expect)(newState.data.currentItem.messages).to.eql(_messaging2.messages.data.map(function (message) {\n  return message.attributes;\n}));\n(0, _chai.expect)(newState.data.currentItem.pagination).to.eql(_messaging2.messages.meta.pagination);\n(0, _chai.expect)(newState.data.items.get('inbox')).to.eql(folder.data.attributes);",
              "err": {},
              "uuid": "22333aa2-44dc-46a2-8ebf-2d0f505ea931",
              "parentUUID": "e26a8b7b-3dab-44ef-97bb-cacf7b1ee305",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "22333aa2-44dc-46a2-8ebf-2d0f505ea931"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "1570a5b2-a89b-4d67-aedc-5b36c62dc8d0",
          "title": "form pdf urls reducer",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/dashboard/tests/reducers/form-pdf-urls.unit.spec.js",
          "file": "/src/applications/personalization/dashboard/tests/reducers/form-pdf-urls.unit.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should toggle loading state",
              "fullTitle": "form pdf urls reducer should toggle loading state",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var results = (0, _unitHelpers.reduceActions)([(0, _formPdfUrl.actionStart)(), (0, _formPdfUrl.actionSuccess)(), (0, _formPdfUrl.actionStart)(), (0, _formPdfUrl.actionFail)()])(_formPdfUrls.default).map(function (s) {\n  return s.loading;\n});\n(0, _chai.expect)(results).to.deep.equal([false, true, false, true, false]);",
              "err": {},
              "uuid": "e4e5c25a-a092-42d4-90ad-9ea6c049d284",
              "parentUUID": "1570a5b2-a89b-4d67-aedc-5b36c62dc8d0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should store a map of submission guids to urls and errors",
              "fullTitle": "form pdf urls reducer should store a map of submission guids to urls and errors",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var error = 'error';\nvar results = (0, _unitHelpers.reduceActions)([(0, _formPdfUrl.actionSuccess)(MOCK_GUID, {\n  url: MOCK_URL\n}), (0, _formPdfUrl.actionFail)(MOCK_GUID2, error)])(_formPdfUrls.default).slice(1).map(function (s) {\n  return s.submissions;\n});\n(0, _chai.expect)(results).to.deep.equal([_defineProperty({}, MOCK_GUID, {\n  url: MOCK_URL\n}), _defineProperty(_defineProperty({}, MOCK_GUID, {\n  url: MOCK_URL\n}), MOCK_GUID2, {\n  error: error\n})]);",
              "err": {},
              "uuid": "2e73d890-5ca0-45b7-aa97-773eafab84f0",
              "parentUUID": "1570a5b2-a89b-4d67-aedc-5b36c62dc8d0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should reset submissions state",
              "fullTitle": "form pdf urls reducer should reset submissions state",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var results = (0, _unitHelpers.reduceActions)([(0, _formPdfUrl.actionStart)(MOCK_GUID), (0, _formPdfUrl.actionSuccess)(MOCK_GUID, {\n  url: MOCK_URL\n}), resetAction()])(_formPdfUrls.default).slice(1).map(function (s) {\n  return s.submissions;\n});\n(0, _chai.expect)(results).to.deep.equal([{}, _defineProperty({}, MOCK_GUID, {\n  url: MOCK_URL\n}), {}]);",
              "err": {},
              "uuid": "874a9e94-8ee3-4e34-beef-bcdd3de96750",
              "parentUUID": "1570a5b2-a89b-4d67-aedc-5b36c62dc8d0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "clears guid submission state when request is started",
              "fullTitle": "form pdf urls reducer clears guid submission state when request is started",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var results = (0, _unitHelpers.reduceActions)([(0, _formPdfUrl.actionStart)(MOCK_GUID), (0, _formPdfUrl.actionSuccess)(MOCK_GUID, {\n  url: MOCK_URL\n}), (0, _formPdfUrl.actionStart)(MOCK_GUID)])(_formPdfUrls.default).slice(1).map(function (s) {\n  return s.submissions;\n});\n(0, _chai.expect)(results).to.deep.equal([{}, _defineProperty({}, MOCK_GUID, {\n  url: MOCK_URL\n}), {}]);",
              "err": {},
              "uuid": "32eed73e-08cd-4b2b-ad9c-dc42f840f5fe",
              "parentUUID": "1570a5b2-a89b-4d67-aedc-5b36c62dc8d0",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "e4e5c25a-a092-42d4-90ad-9ea6c049d284",
            "2e73d890-5ca0-45b7-aa97-773eafab84f0",
            "874a9e94-8ee3-4e34-beef-bcdd3de96750",
            "32eed73e-08cd-4b2b-ad9c-dc42f840f5fe"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "a19d0296-fe4d-4d6b-b942-175894e9d095",
          "title": "prescriptions reducer",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/dashboard/tests/reducers/prescriptions.unit.spec.js",
          "file": "/src/applications/personalization/dashboard/tests/reducers/prescriptions.unit.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should show a loading screen for active",
              "fullTitle": "prescriptions reducer should show a loading screen for active",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var state = (0, _prescriptions.default)({\n  active: {\n    loading: false\n  }\n}, {\n  type: 'LOADING_ACTIVE'\n});\n(0, _chai.expect)(state.active.loading).to.be.true;",
              "err": {},
              "uuid": "0ef09dd2-f030-4876-a21f-e6c1684028e8",
              "parentUUID": "a19d0296-fe4d-4d6b-b942-175894e9d095",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should show a loading screen for history",
              "fullTitle": "prescriptions reducer should show a loading screen for history",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var state = (0, _prescriptions.default)({\n  history: {\n    loading: false\n  }\n}, {\n  type: 'LOADING_HISTORY'\n});\n(0, _chai.expect)(state.history.loading).to.be.true;",
              "err": {},
              "uuid": "017b155d-e105-4ed8-863a-4434a40f0323",
              "parentUUID": "a19d0296-fe4d-4d6b-b942-175894e9d095",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should handle failure to fetch active prescriptions",
              "fullTitle": "prescriptions reducer should handle failure to fetch active prescriptions",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var state = (0, _prescriptions.default)({\n  items: ['123', '456', '789']\n}, {\n  type: 'LOAD_PRESCRIPTIONS_FAILURE',\n  active: true\n});\n(0, _chai.expect)(state.items).to.be.null;\n(0, _chai.expect)(state.active.loading).to.be.false;",
              "err": {},
              "uuid": "e3af76b4-9a56-4b5a-8a01-af6e1b79240e",
              "parentUUID": "a19d0296-fe4d-4d6b-b942-175894e9d095",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should handle failure to fetch prescriptions history",
              "fullTitle": "prescriptions reducer should handle failure to fetch prescriptions history",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var state = (0, _prescriptions.default)({\n  items: ['123', '456', '789']\n}, {\n  type: 'LOAD_PRESCRIPTIONS_FAILURE'\n});\n(0, _chai.expect)(state.items).to.be.null;\n(0, _chai.expect)(state.history.loading).to.be.false;",
              "err": {},
              "uuid": "09109170-8d72-4a87-b5a8-2b7d03b35833",
              "parentUUID": "a19d0296-fe4d-4d6b-b942-175894e9d095",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should handle a successful request for active prescriptions",
              "fullTitle": "prescriptions reducer should handle a successful request for active prescriptions",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var state = (0, _prescriptions.default)({\n  items: null\n}, {\n  type: 'LOAD_PRESCRIPTIONS_SUCCESS',\n  active: true,\n  data: {\n    data: ['item1', 'item2'],\n    meta: {\n      pagination: {\n        currentPage: 1,\n        totalPages: 1\n      },\n      sort: {\n        prescriptionName: 'ASC'\n      }\n    }\n  }\n});\n(0, _chai.expect)(state.items).to.eql(['item1', 'item2']);\n(0, _chai.expect)(state.active.sort.value).to.eql('prescriptionName');\n(0, _chai.expect)(state.active.loading).to.be.false;",
              "err": {},
              "uuid": "ec409d0f-f9c3-40bd-8a5b-f43e6d14456e",
              "parentUUID": "a19d0296-fe4d-4d6b-b942-175894e9d095",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should handle a successful request for prescriptions history",
              "fullTitle": "prescriptions reducer should handle a successful request for prescriptions history",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var state = (0, _prescriptions.default)({\n  items: null\n}, {\n  type: 'LOAD_PRESCRIPTIONS_SUCCESS',\n  data: {\n    data: ['item1', 'item2'],\n    meta: {\n      pagination: {\n        currentPage: 1,\n        totalPages: 1\n      },\n      sort: {\n        prescriptionName: 'ASC'\n      }\n    }\n  }\n});\n(0, _chai.expect)(state.items).to.eql(['item1', 'item2']);\n(0, _chai.expect)(state.history.sort.value).to.eql('prescriptionName');\n(0, _chai.expect)(state.history.sort.order).to.eql('ASC');\n(0, _chai.expect)(state.history.page).to.equal(1);\n(0, _chai.expect)(state.history.pages).to.equal(1);\n(0, _chai.expect)(state.history.loading).to.be.false;",
              "err": {},
              "uuid": "1712a357-44f0-4d25-9270-426028218d15",
              "parentUUID": "a19d0296-fe4d-4d6b-b942-175894e9d095",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "0ef09dd2-f030-4876-a21f-e6c1684028e8",
            "017b155d-e105-4ed8-863a-4434a40f0323",
            "e3af76b4-9a56-4b5a-8a01-af6e1b79240e",
            "09109170-8d72-4a87-b5a8-2b7d03b35833",
            "ec409d0f-f9c3-40bd-8a5b-f43e6d14456e",
            "1712a357-44f0-4d25-9270-426028218d15"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "3d7c5f6d-8f47-473a-ab61-575223bb635c",
          "title": "recipients reducer",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/dashboard/tests/reducers/recipients.unit.spec.js",
          "file": "/src/applications/personalization/dashboard/tests/reducers/recipients.unit.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should have no data when it fails to load recipients",
              "fullTitle": "recipients reducer should have no data when it fails to load recipients",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var state = (0, _recipients.default)(undefined, {\n  type: _messaging.FETCH_RECIPIENTS_FAILURE\n});\n(0, _chai.expect)(state.data).to.be.null;",
              "err": {},
              "uuid": "321ed4b3-2db6-4622-8903-5286b0cb64fb",
              "parentUUID": "3d7c5f6d-8f47-473a-ab61-575223bb635c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should populate the list of possible recipients on success",
              "fullTitle": "recipients reducer should populate the list of possible recipients on success",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var state = (0, _recipients.default)(undefined, {\n  type: _messaging.FETCH_RECIPIENTS_SUCCESS,\n  recipients: _messaging2.recipients\n});\n_messaging2.recipients.data.forEach(function (recipient) {\n  (0, _chai.expect)(state.data).to.deep.contain({\n    label: recipient.attributes.name,\n    value: recipient.attributes.triageTeamId\n  });\n});",
              "err": {},
              "uuid": "21666197-bc39-46b2-adb8-d698d1392c70",
              "parentUUID": "3d7c5f6d-8f47-473a-ab61-575223bb635c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "321ed4b3-2db6-4622-8903-5286b0cb64fb",
            "21666197-bc39-46b2-adb8-d698d1392c70"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "5c4e9328-798b-4849-b022-b9e49ff880ab",
          "title": "formatDate",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/dashboard/tests/utils/appeals-helpers.unit.spec.jsx",
          "file": "/src/applications/personalization/dashboard/tests/utils/appeals-helpers.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should format date",
              "fullTitle": "formatDate should format date",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, _chai.expect)((0, _appealsHelpers.formatDate)('2/6/2024')).to.equal('February 06, 2024');",
              "err": {},
              "uuid": "22cc1921-2149-4608-9aa0-4c7825db616f",
              "parentUUID": "5c4e9328-798b-4849-b022-b9e49ff880ab",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should format date",
              "fullTitle": "formatDate should format date",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, _chai.expect)((0, _appealsHelpers.formatDate)('2/4/2024')).to.not.equal('February 06, 2024');",
              "err": {},
              "uuid": "19c887af-1067-4493-a730-f48d1acead9c",
              "parentUUID": "5c4e9328-798b-4849-b022-b9e49ff880ab",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "22cc1921-2149-4608-9aa0-4c7825db616f",
            "19c887af-1067-4493-a730-f48d1acead9c"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "b27e1d6e-17cc-4500-a1b9-0729305c243a",
          "title": "getHearingType",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/dashboard/tests/utils/appeals-helpers.unit.spec.jsx",
          "file": "/src/applications/personalization/dashboard/tests/utils/appeals-helpers.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should return correct hearing type",
              "fullTitle": "getHearingType should return correct hearing type",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, _chai.expect)((0, _appealsHelpers.getHearingType)('video')).to.equal('videoconference');",
              "err": {},
              "uuid": "8e64daa3-4d38-479e-9b45-675f7e83e347",
              "parentUUID": "b27e1d6e-17cc-4500-a1b9-0729305c243a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "8e64daa3-4d38-479e-9b45-675f7e83e347"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "e81f8c83-6748-4463-b057-54bdbc387c60",
          "title": "getDocketName",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/dashboard/tests/utils/appeals-helpers.unit.spec.jsx",
          "file": "/src/applications/personalization/dashboard/tests/utils/appeals-helpers.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should return correct docket name if it exists",
              "fullTitle": "getDocketName should return correct docket name if it exists",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, _chai.expect)((0, _appealsHelpers.getDocketName)('directReview')).to.equal('Direct Review');\n(0, _chai.expect)((0, _appealsHelpers.getDocketName)('evidenceSubmission')).to.equal('Evidence Submission');\n(0, _chai.expect)((0, _appealsHelpers.getDocketName)('hearingRequest')).to.equal('Hearing Request');",
              "err": {},
              "uuid": "bf570d22-cdc8-418f-9164-d74dfbdbc62c",
              "parentUUID": "e81f8c83-6748-4463-b057-54bdbc387c60",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "returns argument if docket name doesn't exist",
              "fullTitle": "getDocketName returns argument if docket name doesn't exist",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, _chai.expect)((0, _appealsHelpers.getDocketName)('nonExistentDocket')).to.equal('nonExistentDocket');",
              "err": {},
              "uuid": "4022d9be-f7bf-4442-b0f4-808b8f27d42d",
              "parentUUID": "e81f8c83-6748-4463-b057-54bdbc387c60",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "bf570d22-cdc8-418f-9164-d74dfbdbc62c",
            "4022d9be-f7bf-4442-b0f4-808b8f27d42d"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "ef7f0477-85f0-4bf6-9c4d-0f5cc250311e",
          "title": "getAojDescription",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/dashboard/tests/utils/appeals-helpers.unit.spec.jsx",
          "file": "/src/applications/personalization/dashboard/tests/utils/appeals-helpers.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should return correct jurisdiction name if it exists",
              "fullTitle": "getAojDescription should return correct jurisdiction name if it exists",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, _chai.expect)((0, _appealsHelpers.getAojDescription)('vha')).to.equal('Veterans Health Administration');\n(0, _chai.expect)((0, _appealsHelpers.getAojDescription)('nca')).to.equal('National Cemetery Administration');",
              "err": {},
              "uuid": "3f906cc5-bfa7-42f4-ac51-7ca7c8007a3d",
              "parentUUID": "ef7f0477-85f0-4bf6-9c4d-0f5cc250311e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "returns AOJ if juristdiction doesn't exist",
              "fullTitle": "getAojDescription returns AOJ if juristdiction doesn't exist",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, _chai.expect)((0, _appealsHelpers.getAojDescription)('otherAoj')).to.equal('Agency of Original Jurisdiction');",
              "err": {},
              "uuid": "52462e7f-8c9e-49d8-a404-61593435ddef",
              "parentUUID": "ef7f0477-85f0-4bf6-9c4d-0f5cc250311e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "3f906cc5-bfa7-42f4-ac51-7ca7c8007a3d",
            "52462e7f-8c9e-49d8-a404-61593435ddef"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "870386ac-eaf6-42db-bfb7-5533988b3358",
          "title": "replaceDashesWithSlashes function",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/dashboard/tests/utils/date-formatting/helpers.unit.spec.jsx",
          "file": "/src/applications/personalization/dashboard/tests/utils/date-formatting/helpers.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should replace the dashes in a string with slashes",
              "fullTitle": "replaceDashesWithSlashes function should replace the dashes in a string with slashes",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, _chai.expect)((0, _helpers.replaceDashesWithSlashes)('2023-10-23')).to.equal('2023/10/23');",
              "err": {},
              "uuid": "47a81f81-8066-4bb8-a189-838d7a526500",
              "parentUUID": "870386ac-eaf6-42db-bfb7-5533988b3358",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "47a81f81-8066-4bb8-a189-838d7a526500"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "358c298a-3e6c-4978-abb8-19248cd3ec22",
          "title": "stripDST function",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/dashboard/tests/utils/date-formatting/timezone.unit.spec.jsx",
          "file": "/src/applications/personalization/dashboard/tests/utils/date-formatting/timezone.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should remove the middle letter of timezone abbrevations",
              "fullTitle": "stripDST function should remove the middle letter of timezone abbrevations",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, _chai.expect)((0, _timezone.stripDST)('EST')).to.equal('ET');\n(0, _chai.expect)((0, _timezone.stripDST)('PDT')).to.equal('PT');",
              "err": {},
              "uuid": "6695006c-52e5-47c0-b04d-b44a7b4186c9",
              "parentUUID": "358c298a-3e6c-4978-abb8-19248cd3ec22",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return original abbreviation if it is already stripped",
              "fullTitle": "stripDST function should return original abbreviation if it is already stripped",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, _chai.expect)((0, _timezone.stripDST)('ET')).to.equal('ET');\n(0, _chai.expect)((0, _timezone.stripDST)('PT')).to.equal('PT');",
              "err": {},
              "uuid": "e287cd0d-0060-4ef2-8a77-85b62e293b3b",
              "parentUUID": "358c298a-3e6c-4978-abb8-19248cd3ec22",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "6695006c-52e5-47c0-b04d-b44a7b4186c9",
            "e287cd0d-0060-4ef2-8a77-85b62e293b3b"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "8f70952e-444f-4c2e-b4af-bb6d27f37c02",
          "title": "getVATimeZone function",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/dashboard/tests/utils/date-formatting/timezone.unit.spec.jsx",
          "file": "/src/applications/personalization/dashboard/tests/utils/date-formatting/timezone.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should search for facility ID and return the timezone abbreviation",
              "fullTitle": "getVATimeZone function should search for facility ID and return the timezone abbreviation",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, _chai.expect)((0, _timezone.getVATimeZone)('585')).to.equal('CT');",
              "err": {},
              "uuid": "43f313cd-507e-4818-865e-c54d6c297851",
              "parentUUID": "8f70952e-444f-4c2e-b4af-bb6d27f37c02",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should search for a nonexistent facility ID and return null",
              "fullTitle": "getVATimeZone function should search for a nonexistent facility ID and return null",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, _chai.expect)((0, _timezone.getVATimeZone)('11')).to.equal(null);",
              "err": {},
              "uuid": "c30d4dab-190c-4a24-b86d-bb94b74f9635",
              "parentUUID": "8f70952e-444f-4c2e-b4af-bb6d27f37c02",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "43f313cd-507e-4818-865e-c54d6c297851",
            "c30d4dab-190c-4a24-b86d-bb94b74f9635"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "f522fd5e-d72f-4b45-9955-4e9b75b5ebf3",
          "title": "getCCTimeZone function",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/dashboard/tests/utils/date-formatting/timezone.unit.spec.jsx",
          "file": "/src/applications/personalization/dashboard/tests/utils/date-formatting/timezone.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should return the timezone abbreviation of an CC appointment object",
              "fullTitle": "getCCTimeZone function should return the timezone abbreviation of an CC appointment object",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, _chai.expect)((0, _timezone.getCCTimeZone)(appointment)).to.equal('MT');",
              "err": {},
              "uuid": "4ed4655f-e2d6-427e-b9e8-66c4681c80e6",
              "parentUUID": "f522fd5e-d72f-4b45-9955-4e9b75b5ebf3",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "4ed4655f-e2d6-427e-b9e8-66c4681c80e6"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "a94dea33-cbef-4fe0-a921-f2abe8a682f5",
          "title": "getTimezoneByFacilityId function",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/dashboard/tests/utils/date-formatting/timezone.unit.spec.jsx",
          "file": "/src/applications/personalization/dashboard/tests/utils/date-formatting/timezone.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should search for facility ID and return the timezone",
              "fullTitle": "getTimezoneByFacilityId function should search for facility ID and return the timezone",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, _chai.expect)((0, _timezone.getTimezoneByFacilityId)('585')).to.equal('America/Chicago');",
              "err": {},
              "uuid": "3a9580ad-df6e-419d-8704-e5187cc27a8d",
              "parentUUID": "a94dea33-cbef-4fe0-a921-f2abe8a682f5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should search for a nonexistent facility ID and return null",
              "fullTitle": "getTimezoneByFacilityId function should search for a nonexistent facility ID and return null",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, _chai.expect)((0, _timezone.getTimezoneByFacilityId)('')).to.equal(null);",
              "err": {},
              "uuid": "9034c268-dae5-4775-8430-cc1a4ddaef89",
              "parentUUID": "a94dea33-cbef-4fe0-a921-f2abe8a682f5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should search for a facility ID with extra characters at end, trim them, and return matching timezone",
              "fullTitle": "getTimezoneByFacilityId function should search for a facility ID with extra characters at end, trim them, and return matching timezone",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, _chai.expect)((0, _timezone.getTimezoneByFacilityId)('436ZZZZZZ')).to.equal('America/Denver');",
              "err": {},
              "uuid": "313e59b9-6a3a-480f-abfc-d744857ea3ab",
              "parentUUID": "a94dea33-cbef-4fe0-a921-f2abe8a682f5",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "3a9580ad-df6e-419d-8704-e5187cc27a8d",
            "9034c268-dae5-4775-8430-cc1a4ddaef89",
            "313e59b9-6a3a-480f-abfc-d744857ea3ab"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "4e188c22-18e2-473b-8149-e97495833158",
          "title": "getTimezoneAbbrByFacilityId function",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/dashboard/tests/utils/date-formatting/timezone.unit.spec.jsx",
          "file": "/src/applications/personalization/dashboard/tests/utils/date-formatting/timezone.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should search for facility ID and return the timezone abbreviation",
              "fullTitle": "getTimezoneAbbrByFacilityId function should search for facility ID and return the timezone abbreviation",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, _chai.expect)((0, _timezone.getTimezoneAbbrByFacilityId)('585')).to.equal('CT');",
              "err": {},
              "uuid": "18203bff-e5ac-4313-978b-be9d56b6ba9d",
              "parentUUID": "4e188c22-18e2-473b-8149-e97495833158",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should search for a nonexistent facility ID and return null",
              "fullTitle": "getTimezoneAbbrByFacilityId function should search for a nonexistent facility ID and return null",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, _chai.expect)((0, _timezone.getTimezoneAbbrByFacilityId)('')).to.equal(null);",
              "err": {},
              "uuid": "d7f91845-7b9b-471f-9831-3760997c242e",
              "parentUUID": "4e188c22-18e2-473b-8149-e97495833158",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "18203bff-e5ac-4313-978b-be9d56b6ba9d",
            "d7f91845-7b9b-471f-9831-3760997c242e"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "4b66cd92-5131-4478-9a9e-79c4fc522a64",
          "title": "getTimezoneNameFromAbbr function",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/dashboard/tests/utils/date-formatting/timezone.unit.spec.jsx",
          "file": "/src/applications/personalization/dashboard/tests/utils/date-formatting/timezone.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should return full name of a timezone abbreviation",
              "fullTitle": "getTimezoneNameFromAbbr function should return full name of a timezone abbreviation",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, _chai.expect)((0, _timezone.getTimezoneNameFromAbbr)('PT')).to.equal('America/Los_Angeles');",
              "err": {},
              "uuid": "8e264e5e-601c-40f5-bb16-2c2a9665f81a",
              "parentUUID": "4b66cd92-5131-4478-9a9e-79c4fc522a64",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return abbreviation if no match",
              "fullTitle": "getTimezoneNameFromAbbr function should return abbreviation if no match",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, _chai.expect)((0, _timezone.getTimezoneNameFromAbbr)('HKT')).to.equal('HKT');",
              "err": {},
              "uuid": "ee5fb299-a38e-4ffc-990c-2f93e7917dd6",
              "parentUUID": "4b66cd92-5131-4478-9a9e-79c4fc522a64",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "8e264e5e-601c-40f5-bb16-2c2a9665f81a",
            "ee5fb299-a38e-4ffc-990c-2f93e7917dd6"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "e3cd8c8b-1d0c-4923-848a-c33e0e0fdf2c",
          "title": "getUserTimezone function",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/dashboard/tests/utils/date-formatting/timezone.unit.spec.jsx",
          "file": "/src/applications/personalization/dashboard/tests/utils/date-formatting/timezone.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should return user's timezone",
              "fullTitle": "getUserTimezone function should return user's timezone",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, _chai.expect)((0, _timezone.getUserTimezone)()).to.equal(yourTz);",
              "err": {},
              "uuid": "2e4909f0-caee-4d32-a63f-8cc2d60b0f50",
              "parentUUID": "e3cd8c8b-1d0c-4923-848a-c33e0e0fdf2c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "2e4909f0-caee-4d32-a63f-8cc2d60b0f50"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "d319a973-a8c6-4a24-a05a-7e357c8e4191",
          "title": "getUserTimezoneAbbr function",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/dashboard/tests/utils/date-formatting/timezone.unit.spec.jsx",
          "file": "/src/applications/personalization/dashboard/tests/utils/date-formatting/timezone.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should return user's timezone",
              "fullTitle": "getUserTimezoneAbbr function should return user's timezone",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, _chai.expect)((0, _timezone.getUserTimezoneAbbr)()).to.equal(yourTzAbbr);",
              "err": {},
              "uuid": "cc38145e-6de0-4d05-bd02-a12bbcf034b5",
              "parentUUID": "d319a973-a8c6-4a24-a05a-7e357c8e4191",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "cc38145e-6de0-4d05-bd02-a12bbcf034b5"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "67868638-72c1-4983-8b8a-89c9bf7893fa",
          "title": "getStatusContents",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/dashboard/tests/utils/getStatusContents.unit.spec.jsx",
          "file": "/src/applications/personalization/dashboard/tests/utils/getStatusContents.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should return correct title and description for Pending Statement of Case",
              "fullTitle": "getStatusContents should return correct title and description for Pending Statement of Case",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getStatusContents = (0, _getStatusContents34.getStatusContents)(_testAppealsMock.mockAppealData.data[0]),\n  title = _getStatusContents.title,\n  description = _getStatusContents.description;\nvar content = description.props.children[2];\n(0, _chai.expect)(title).to.equal('A Decision Review Officer is reviewing your appeal');\n(0, _chai.expect)(content).to.include('received your Notice of Disagreement. A Decision Review Officer (DRO) will review all of the evidence related to your appeal, including any new evidence you sent.');",
              "err": {},
              "uuid": "53792693-dcc9-40a4-936a-8475bec9f140",
              "parentUUID": "67868638-72c1-4983-8b8a-89c9bf7893fa",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return correct title and description for Pending Form 9",
              "fullTitle": "getStatusContents should return correct title and description for Pending Form 9",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getStatusContents2 = (0, _getStatusContents34.getStatusContents)(_testAppealsMock.mockAppealData.data[6]),\n  title = _getStatusContents2.title,\n  description = _getStatusContents2.description;\nvar content = description.props.children[2].props.children[0].props.children[0];\n(0, _chai.expect)(title).to.equal('Please review your Statement of the Case');\n(0, _chai.expect)(content).to.equal('Submit VA Form 9 to continue your appeal to the Board of Veterans’ Appeals, ');",
              "err": {},
              "uuid": "3bca8a3d-f0a3-4682-9251-00adc0e64824",
              "parentUUID": "67868638-72c1-4983-8b8a-89c9bf7893fa",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return correct title and description for Pending Certification",
              "fullTitle": "getStatusContents should return correct title and description for Pending Certification",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getStatusContents3 = (0, _getStatusContents34.getStatusContents)(_testAppealsMock.mockAppealData.data[7]),\n  title = _getStatusContents3.title,\n  description = _getStatusContents3.description;\nvar content = description.props.children[2];\n(0, _chai.expect)(title).to.equal('The Decision Review Officer is finishing their review of your appeal');\n(0, _chai.expect)(content).to.include('received your VA Form 9 and will send your appeal to the Board of Veterans’ Appeals.');",
              "err": {},
              "uuid": "07c25c9e-f3aa-4ec5-a055-6127bc656a75",
              "parentUUID": "67868638-72c1-4983-8b8a-89c9bf7893fa",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return correct title and description for Pending Certification - Supplemental Statement of Case",
              "fullTitle": "getStatusContents should return correct title and description for Pending Certification - Supplemental Statement of Case",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getStatusContents4 = (0, _getStatusContents34.getStatusContents)(_testAppealsMock.mockAppealData.data[8]),\n  title = _getStatusContents4.title,\n  description = _getStatusContents4.description;\nvar content = description.props.children[0].props.children[2];\n(0, _chai.expect)(title).to.equal('Please review your Supplemental Statement of the Case');\n(0, _chai.expect)(content).to.include('sent you a Supplemental Statement of the Case on');",
              "err": {},
              "uuid": "c5a850da-3182-47dc-acdc-45db4d1ee368",
              "parentUUID": "67868638-72c1-4983-8b8a-89c9bf7893fa",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return correct title and description for Remand - Supplemental Statement of Case ",
              "fullTitle": "getStatusContents should return correct title and description for Remand - Supplemental Statement of Case ",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getStatusContents5 = (0, _getStatusContents34.getStatusContents)(_testAppealsMock.mockAppealData.data[9]),\n  title = _getStatusContents5.title,\n  description = _getStatusContents5.description;\nvar content = description.props.children.join('');\n(0, _chai.expect)(title).to.equal('Please review your Supplemental Statement of the Case');\n(0, _chai.expect)(content).to.include('The Agency of Original Jurisdiction sent you a Supplemental Statement of the Case on September 12, 2015 because, after completing the remand instructions from the Board, they couldn’t fully grant your appeal.');",
              "err": {},
              "uuid": "1fd06f83-d096-44c1-82bb-06f5e6ad65ca",
              "parentUUID": "67868638-72c1-4983-8b8a-89c9bf7893fa",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return correct title and description for Pending - Hearing Schedule",
              "fullTitle": "getStatusContents should return correct title and description for Pending - Hearing Schedule",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getStatusContents6 = (0, _getStatusContents34.getStatusContents)(_testAppealsMock.mockAppealData.data[5]),\n  title = _getStatusContents6.title,\n  description = _getStatusContents6.description;\nvar content = description.props.children[0].props.children.join('');\n(0, _chai.expect)(title).to.equal('You’re waiting for your hearing to be scheduled');\n(0, _chai.expect)(content).to.include(\"You requested a videoconference hearing. We'll schedule your hearing, and, you’ll receive a notice in the mail at least 30 days before the hearing date.\");",
              "err": {},
              "uuid": "5ea92329-b9a3-4837-9b62-7f02e855ec06",
              "parentUUID": "67868638-72c1-4983-8b8a-89c9bf7893fa",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return correct title and description for Scheduled Hearing",
              "fullTitle": "getStatusContents should return correct title and description for Scheduled Hearing",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getStatusContents7 = (0, _getStatusContents34.getStatusContents)(_testAppealsMock.mockAppealData.data[10]),\n  title = _getStatusContents7.title,\n  description = _getStatusContents7.description;\nvar content = description.props.children[0].props.children.join('');\n(0, _chai.expect)(title).to.equal('Your hearing has been scheduled');\n(0, _chai.expect)(content).to.include('Your videoconference hearing is scheduled for September 12, 2015 at bva');",
              "err": {},
              "uuid": "d5aa098b-76cb-4e65-8616-9c76629a3901",
              "parentUUID": "67868638-72c1-4983-8b8a-89c9bf7893fa",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return correct title and description for at VSO",
              "fullTitle": "getStatusContents should return correct title and description for at VSO",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getStatusContents8 = (0, _getStatusContents34.getStatusContents)(_testAppealsMock.mockAppealData.data[11]),\n  title = _getStatusContents8.title,\n  description = _getStatusContents8.description;\nvar content = description.props.children.join('');\n(0, _chai.expect)(title).to.equal('Your appeal is with your Veterans Service Organization');\n(0, _chai.expect)(content).to.include('Disabled American Veterans is reviewing your appeal to make additional arguments in support of your case. For more information, please contact Disabled American Veterans.');",
              "err": {},
              "uuid": "1322111a-97f3-4932-a6a0-16fe23689d95",
              "parentUUID": "67868638-72c1-4983-8b8a-89c9bf7893fa",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return correct title and description for Review in progress",
              "fullTitle": "getStatusContents should return correct title and description for Review in progress",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getStatusContents9 = (0, _getStatusContents34.getStatusContents)(_testAppealsMock.mockAppealData.data[12]),\n  title = _getStatusContents9.title,\n  description = _getStatusContents9.description;\nvar content = description.props.children.join('');\n(0, _chai.expect)(title).to.equal('A judge is reviewing your appeal');\n(0, _chai.expect)(content).to.include('Your appeal is at the Board of Veterans’ Appeals being reviewed by a Veterans Law Judge.');",
              "err": {},
              "uuid": "f643cd97-2903-41d4-b37b-59bcf4099a6d",
              "parentUUID": "67868638-72c1-4983-8b8a-89c9bf7893fa",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return correct title and description for Board of Veterans' - development",
              "fullTitle": "getStatusContents should return correct title and description for Board of Veterans' - development",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getStatusContents10 = (0, _getStatusContents34.getStatusContents)(_testAppealsMock.mockAppealData.data[13]),\n  title = _getStatusContents10.title,\n  description = _getStatusContents10.description;\nvar content = description.props.children;\n(0, _chai.expect)(title).to.equal('The judge is seeking more information before making a decision');\n(0, _chai.expect)(content).to.include('The Board of Veterans’ Appeals is seeking evidence or an outside opinion from a legal, medical, or other professional in order to make a decision about your appeal.');",
              "err": {},
              "uuid": "57cc3ca2-6c70-4284-9f85-95f839e0434a",
              "parentUUID": "67868638-72c1-4983-8b8a-89c9bf7893fa",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return correct title and description for Board of Veterans' - decision made",
              "fullTitle": "getStatusContents should return correct title and description for Board of Veterans' - decision made",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getStatusContents11 = (0, _getStatusContents34.getStatusContents)(_testAppealsMock.mockAppealData.data[2]),\n  title = _getStatusContents11.title,\n  description = _getStatusContents11.description;\nvar content = description.props.children[0].props.children;\n(0, _chai.expect)(title).to.equal('The Board made a decision on your appeal');\n(0, _chai.expect)(content).to.include('The Board of Veterans’ Appeals sent you a decision on your appeal. Here’s an overview:');",
              "err": {},
              "uuid": "5751134f-1771-44ba-a13a-bc1c6b4afbdb",
              "parentUUID": "67868638-72c1-4983-8b8a-89c9bf7893fa",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return correct title and description for Board - waiting",
              "fullTitle": "getStatusContents should return correct title and description for Board - waiting",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getStatusContents12 = (0, _getStatusContents34.getStatusContents)(_testAppealsMock.mockAppealData.data[14]),\n  title = _getStatusContents12.title,\n  description = _getStatusContents12.description;\nvar content = description.props.children;\n(0, _chai.expect)(title).to.equal('The Board is waiting until a higher court makes a decision');\n(0, _chai.expect)(content).to.include('A higher court has asked the Board of Veterans’ Appeals to hold open a group of appeals awaiting review. Yours is one of the appeals held open. The higher court believes that a decision it will make on a different appeal could affect yours.');",
              "err": {},
              "uuid": "0d72578f-90ad-4d9a-b665-c7d97ed53d5c",
              "parentUUID": "67868638-72c1-4983-8b8a-89c9bf7893fa",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return correct title and description for Appeal granted",
              "fullTitle": "getStatusContents should return correct title and description for Appeal granted",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getStatusContents13 = (0, _getStatusContents34.getStatusContents)(_testAppealsMock.mockAppealData.data[15]),\n  title = _getStatusContents13.title,\n  description = _getStatusContents13.description;\nvar content = description.props.children.join('');\n(0, _chai.expect)(title).to.equal('The Agency of Original Jurisdiction granted your appeal');\n(0, _chai.expect)(content).to.include('The Agency of Original Jurisdiction agreed with you and decided to overturn the original decision. If this decision changes your disability rating or eligibility for VA benefits, you should see this change made in 1 to 2 months.');",
              "err": {},
              "uuid": "0dae2e27-649a-4ce0-8a78-d32385d00111",
              "parentUUID": "67868638-72c1-4983-8b8a-89c9bf7893fa",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return correct title and description for Withdrawn",
              "fullTitle": "getStatusContents should return correct title and description for Withdrawn",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getStatusContents14 = (0, _getStatusContents34.getStatusContents)(_testAppealsMock.mockAppealData.data[16]),\n  title = _getStatusContents14.title,\n  description = _getStatusContents14.description;\nvar content = description.props.children;\n(0, _chai.expect)(title).to.equal('You withdrew your appeal');\n(0, _chai.expect)(content).to.include('You chose not to continue your appeal. If this information is incorrect, please contact your Veterans Service Organization or representative for more information.');",
              "err": {},
              "uuid": "62ec6fc1-230f-4a0c-b2d9-56a358f2816e",
              "parentUUID": "67868638-72c1-4983-8b8a-89c9bf7893fa",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return correct title and description for Failure to Respond",
              "fullTitle": "getStatusContents should return correct title and description for Failure to Respond",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getStatusContents15 = (0, _getStatusContents34.getStatusContents)(_testAppealsMock.mockAppealData.data[17]),\n  title = _getStatusContents15.title,\n  description = _getStatusContents15.description;\nvar content = description.props.children;\n(0, _chai.expect)(title).to.equal('Your appeal was closed');\n(0, _chai.expect)(content).to.include('You didn’t take an action VA requested in order to continue your appeal. If this information is incorrect, or if you want to reopen your appeal, please contact your Veterans Service Organization or representative for more information.');",
              "err": {},
              "uuid": "08f72423-91b7-4c6c-ae29-830632253b76",
              "parentUUID": "67868638-72c1-4983-8b8a-89c9bf7893fa",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return correct title and description for Rapid Appeals Modernization Program",
              "fullTitle": "getStatusContents should return correct title and description for Rapid Appeals Modernization Program",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getStatusContents16 = (0, _getStatusContents34.getStatusContents)(_testAppealsMock.mockAppealData.data[18]),\n  title = _getStatusContents16.title,\n  description = _getStatusContents16.description;\nvar content = description.props.children;\n(0, _chai.expect)(title).to.equal('You opted in to the Rapid Appeals Modernization Program (RAMP)');\n(0, _chai.expect)(content).to.include('You chose to participate in the new Supplemental Claim or Higher-Level Review options. This doesn’t mean that your appeal has been closed. If this information is incorrect, please contact your Veterans Service Organization or representative as soon as possible.');",
              "err": {},
              "uuid": "417d7e83-aa2d-46a6-8d16-9ad938012d03",
              "parentUUID": "67868638-72c1-4983-8b8a-89c9bf7893fa",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return correct title and description for Motion for Reconsideration",
              "fullTitle": "getStatusContents should return correct title and description for Motion for Reconsideration",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getStatusContents17 = (0, _getStatusContents34.getStatusContents)(_testAppealsMock.mockAppealData.data[19]),\n  title = _getStatusContents17.title,\n  description = _getStatusContents17.description;\nvar content = description.props.children;\n(0, _chai.expect)(title).to.equal('Your Motion for Reconsideration was denied');\n(0, _chai.expect)(content).to.include('The Board of Veterans’ Appeals declined to reopen your appeal. Please contact your Veterans Service Organization or representative for more information.');",
              "err": {},
              "uuid": "982b1b85-4ba4-4f8f-b76d-7f5dcad95f6d",
              "parentUUID": "67868638-72c1-4983-8b8a-89c9bf7893fa",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return correct title and description for Closed - death",
              "fullTitle": "getStatusContents should return correct title and description for Closed - death",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getStatusContents18 = (0, _getStatusContents34.getStatusContents)(_testAppealsMock.mockAppealData.data[20]),\n  title = _getStatusContents18.title,\n  description = _getStatusContents18.description;\nvar content = description.props.children.join('');\n(0, _chai.expect)(title).to.equal('The appeal was closed');\n(0, _chai.expect)(content).to.include('VA records indicate that  is deceased, so this appeal has been closed. If this information is incorrect, please contact your Veterans Service Organization or representative as soon as possible.');",
              "err": {},
              "uuid": "ff35819c-93c2-4993-95c3-75d987e66815",
              "parentUUID": "67868638-72c1-4983-8b8a-89c9bf7893fa",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return correct title and description for Closed - other",
              "fullTitle": "getStatusContents should return correct title and description for Closed - other",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getStatusContents19 = (0, _getStatusContents34.getStatusContents)(_testAppealsMock.mockAppealData.data[21]),\n  title = _getStatusContents19.title,\n  description = _getStatusContents19.description;\nvar content = description.props.children;\n(0, _chai.expect)(title).to.equal('Your appeal was closed');\n(0, _chai.expect)(content).to.include('Your appeal was dismissed or closed. Please contact your Veterans Service Organization or representative for more information.');",
              "err": {},
              "uuid": "3af71939-3dd9-427a-bdee-9588057481e0",
              "parentUUID": "67868638-72c1-4983-8b8a-89c9bf7893fa",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return correct title and description for Merged",
              "fullTitle": "getStatusContents should return correct title and description for Merged",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getStatusContents20 = (0, _getStatusContents34.getStatusContents)(_testAppealsMock.mockAppealData.data[22]),\n  title = _getStatusContents20.title,\n  description = _getStatusContents20.description;\nvar content = description.props.children[0].props.children;\n(0, _chai.expect)(title).to.equal('Your appeal was merged');\n(0, _chai.expect)(content).to.include('Your appeal was merged with another appeal. The Board of Veterans’ Appeals merges appeals so that you can receive a single decision on as many appealed issues as possible. This appeal was merged with an older appeal that was closest to receiving a Board decision.');",
              "err": {},
              "uuid": "59123ede-d519-441f-9bce-cebf6d276e15",
              "parentUUID": "67868638-72c1-4983-8b8a-89c9bf7893fa",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return correct title and description for Appeals Modernization Act opt-in",
              "fullTitle": "getStatusContents should return correct title and description for Appeals Modernization Act opt-in",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getStatusContents21 = (0, _getStatusContents34.getStatusContents)(_testAppealsMock.mockAppealData.data[23]),\n  title = _getStatusContents21.title,\n  description = _getStatusContents21.description;\nvar content = description.props.children[0].props.children;\n(0, _chai.expect)(title).to.equal('You requested a decision review under the Appeals Modernization Act');\n(0, _chai.expect)(content).to.include('A new law, the Veterans Appeals Improvement and Modernization Act, took effect on February 19, 2019. Although your appeal started before the new law took effect, you asked for it to be converted into one of the new decision review options.');",
              "err": {},
              "uuid": "2a92c28a-ff93-46be-b30d-63f697ee81c1",
              "parentUUID": "67868638-72c1-4983-8b8a-89c9bf7893fa",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return correct title and description for New evidentiary period",
              "fullTitle": "getStatusContents should return correct title and description for New evidentiary period",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getStatusContents22 = (0, _getStatusContents34.getStatusContents)(_testAppealsMock.mockAppealData.data[24]),\n  title = _getStatusContents22.title,\n  description = _getStatusContents22.description;\nvar content = description.props.children[0].props.children.join('');\n(0, _chai.expect)(title).to.equal('Your appeals file is open for new evidence');\n(0, _chai.expect)(content).to.include('Because you requested the  appeal option, the Board of Veterans’ Appeals will hold your case open for new evidence for 90 days.');",
              "err": {},
              "uuid": "49a18b64-2cf0-4817-bd65-65f718ca6c03",
              "parentUUID": "67868638-72c1-4983-8b8a-89c9bf7893fa",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return correct title and description for BVA decision - action needed",
              "fullTitle": "getStatusContents should return correct title and description for BVA decision - action needed",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getStatusContents23 = (0, _getStatusContents34.getStatusContents)(_testAppealsMock.mockAppealData.data[25]),\n  title = _getStatusContents23.title,\n  description = _getStatusContents23.description;\nvar content = description.props.children[0].props.children.join('');\n(0, _chai.expect)(title).to.equal('The Agency of Original Jurisdiction corrected an error');\n(0, _chai.expect)(content).to.include('In the February 3, 2021 decision, a judge at the Board of Veterans’ Appeals identified an error that needed to be corrected. A reviewer at the Agency of Original Jurisdiction completed the judge’s instructions and sent you a new decision on February 3, 2022.');",
              "err": {},
              "uuid": "ff44b938-d75a-4e3c-8c6f-4a2966e638b5",
              "parentUUID": "67868638-72c1-4983-8b8a-89c9bf7893fa",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return correct title and description for BVA decision - change updated",
              "fullTitle": "getStatusContents should return correct title and description for BVA decision - change updated",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getStatusContents24 = (0, _getStatusContents34.getStatusContents)(_testAppealsMock.mockAppealData.data[26]),\n  title = _getStatusContents24.title,\n  description = _getStatusContents24.description;\nvar content = description.props.children[0].props.children.join('');\n(0, _chai.expect)(title).to.equal('The Agency of Original Jurisdiction corrected an error');\n(0, _chai.expect)(content).to.include('On February 3, 2021, a judge at the Board of Veterans’ Appeals made a decision that changes your disability rating or eligibility for benefits. On February 3, 2022, the Agency of Original Jurisdiction sent you a new decision that updates your benefits.');",
              "err": {},
              "uuid": "2e669c49-dc43-4087-8eed-59598ae7761e",
              "parentUUID": "67868638-72c1-4983-8b8a-89c9bf7893fa",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return correct title and description for Supplemental Claim - received",
              "fullTitle": "getStatusContents should return correct title and description for Supplemental Claim - received",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getStatusContents25 = (0, _getStatusContents34.getStatusContents)(_testAppealsMock.mockAppealData.data[27]),\n  title = _getStatusContents25.title,\n  description = _getStatusContents25.description;\nvar content = description.props.children[0].props.children.join('');\n(0, _chai.expect)(title).to.equal('A reviewer is examining your new evidence');\n(0, _chai.expect)(content).to.include('A Supplemental Claim allows you to add new and relevant evidence to your case. When you filed a Supplemental Claim, you included new evidence or identified evidence that the Agency of Original Jurisdiction should obtain.');",
              "err": {},
              "uuid": "73989199-8b0d-4ac0-8b70-9cb8cebb240d",
              "parentUUID": "67868638-72c1-4983-8b8a-89c9bf7893fa",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return correct title and description for Higher-level review",
              "fullTitle": "getStatusContents should return correct title and description for Higher-level review",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getStatusContents26 = (0, _getStatusContents34.getStatusContents)(_testAppealsMock.mockAppealData.data[28]),\n  title = _getStatusContents26.title,\n  description = _getStatusContents26.description;\nvar content = description.props.children[0].props.children.join('');\n(0, _chai.expect)(title).to.equal('A higher-level reviewer is taking a new look at your case');\n(0, _chai.expect)(content).to.include('By requesting a Higher-Level Review, you asked for a higher-level at the Agency of Original Jurisdiction to look at your case and determine whether they can change the decision based on a difference of opinion or because VA made an error.');",
              "err": {},
              "uuid": "3aae0fc6-2654-4d7c-9fe0-dbc3f04596ce",
              "parentUUID": "67868638-72c1-4983-8b8a-89c9bf7893fa",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return correct title and description for Supplemental Claim - decision made",
              "fullTitle": "getStatusContents should return correct title and description for Supplemental Claim - decision made",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getStatusContents27 = (0, _getStatusContents34.getStatusContents)(_testAppealsMock.mockAppealData.data[29]),\n  title = _getStatusContents27.title,\n  description = _getStatusContents27.description;\nvar content = description.props.children[0].props.children.join('');\n(0, _chai.expect)(title).to.equal('The Agency of Original Jurisdiction made a decision');\n(0, _chai.expect)(content).to.include('The Agency of Original Jurisdiction sent you a decision on your Supplemental Claim.');",
              "err": {},
              "uuid": "54bf990e-0e5c-487f-8476-ab26d42a5799",
              "parentUUID": "67868638-72c1-4983-8b8a-89c9bf7893fa",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return correct title and description for Higher-level - decision made",
              "fullTitle": "getStatusContents should return correct title and description for Higher-level - decision made",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getStatusContents28 = (0, _getStatusContents34.getStatusContents)(_testAppealsMock.mockAppealData.data[30]),\n  title = _getStatusContents28.title,\n  description = _getStatusContents28.description;\nvar content = description.props.children[0].props.children.join('');\n(0, _chai.expect)(title).to.equal('The Agency of Original Jurisdiction made a decision');\n(0, _chai.expect)(content).to.include('The Agency of Original Jurisdiction sent you a decision on your Higher-Level Review.');",
              "err": {},
              "uuid": "4f69425b-4ed6-4a6e-8f80-47296b9f9987",
              "parentUUID": "67868638-72c1-4983-8b8a-89c9bf7893fa",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return correct title and description for Higher-level review - error correcting",
              "fullTitle": "getStatusContents should return correct title and description for Higher-level review - error correcting",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getStatusContents29 = (0, _getStatusContents34.getStatusContents)(_testAppealsMock.mockAppealData.data[4]),\n  title = _getStatusContents29.title,\n  description = _getStatusContents29.description;\nvar content = description.props.children;\n(0, _chai.expect)(title).to.equal('The Veterans Benefits Administration is correcting an error');\n(0, _chai.expect)(content).to.include('During their review, the higher-level reviewer identified an error that must be corrected before deciding your case. If needed, VA may contact you to ask for more evidence or to schedule a new medical exam.');",
              "err": {},
              "uuid": "e0a7a324-ca4f-435f-babd-2f5d55540e06",
              "parentUUID": "67868638-72c1-4983-8b8a-89c9bf7893fa",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return correct title and description for Supplemental Claim - closed",
              "fullTitle": "getStatusContents should return correct title and description for Supplemental Claim - closed",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getStatusContents30 = (0, _getStatusContents34.getStatusContents)(_testAppealsMock.mockAppealData.data[31]),\n  title = _getStatusContents30.title,\n  description = _getStatusContents30.description;\nvar content = description.props.children;\n(0, _chai.expect)(title).to.equal('Your Supplemental Claim was closed');\n(0, _chai.expect)(content).to.include('Your Supplemental Claim was closed. Please contact VA or your Veterans Service Organization or representative for more information.');",
              "err": {},
              "uuid": "b761dca3-0b08-43d5-8f7b-9b96a5566bea",
              "parentUUID": "67868638-72c1-4983-8b8a-89c9bf7893fa",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return correct title and description for Higher-level Review - closed",
              "fullTitle": "getStatusContents should return correct title and description for Higher-level Review - closed",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getStatusContents31 = (0, _getStatusContents34.getStatusContents)(_testAppealsMock.mockAppealData.data[32]),\n  title = _getStatusContents31.title,\n  description = _getStatusContents31.description;\nvar content = description.props.children;\n(0, _chai.expect)(title).to.equal('Your Higher-Level Review was closed');\n(0, _chai.expect)(content).to.include('Your Higher-Level Review was closed. Please contact VA or your Veterans Service Organization or representative for more information.');",
              "err": {},
              "uuid": "02ee61cc-e680-4cbf-ba28-d115f11c9675",
              "parentUUID": "67868638-72c1-4983-8b8a-89c9bf7893fa",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return correct title and description for Remand return",
              "fullTitle": "getStatusContents should return correct title and description for Remand return",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getStatusContents32 = (0, _getStatusContents34.getStatusContents)(_testAppealsMock.mockAppealData.data[33]),\n  title = _getStatusContents32.title,\n  description = _getStatusContents32.description;\nvar content = description.props.children;\n(0, _chai.expect)(title).to.equal('Your appeal was returned to the Board of Veterans’ Appeals');\n(0, _chai.expect)(content).to.include('The Veterans Benefits Administration finished their work on the remand and will return your case to the Board of Veterans’ Appeals.');",
              "err": {},
              "uuid": "7b1c49d4-9741-4810-8993-fcee02c166cf",
              "parentUUID": "67868638-72c1-4983-8b8a-89c9bf7893fa",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return correct title and description for Unknown Status",
              "fullTitle": "getStatusContents should return correct title and description for Unknown Status",
              "timedOut": false,
              "duration": 3,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getStatusContents33 = (0, _getStatusContents34.getStatusContents)({\n    id: '',\n    type: 'appeal',\n    attributes: {\n      status: {\n        type: 'unknown'\n      }\n    }\n  }),\n  title = _getStatusContents33.title,\n  description = _getStatusContents33.description;\nvar content = description.props.children;\n(0, _chai.expect)(title).to.equal('We don’t know your status');\n(0, _chai.expect)(content).to.include('We’re sorry, VA.gov will soon be updated to show your status.');",
              "err": {},
              "uuid": "e0f08c2a-c33e-4ffb-81b1-629ed51acd0d",
              "parentUUID": "67868638-72c1-4983-8b8a-89c9bf7893fa",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "53792693-dcc9-40a4-936a-8475bec9f140",
            "3bca8a3d-f0a3-4682-9251-00adc0e64824",
            "07c25c9e-f3aa-4ec5-a055-6127bc656a75",
            "c5a850da-3182-47dc-acdc-45db4d1ee368",
            "1fd06f83-d096-44c1-82bb-06f5e6ad65ca",
            "5ea92329-b9a3-4837-9b62-7f02e855ec06",
            "d5aa098b-76cb-4e65-8616-9c76629a3901",
            "1322111a-97f3-4932-a6a0-16fe23689d95",
            "f643cd97-2903-41d4-b37b-59bcf4099a6d",
            "57cc3ca2-6c70-4284-9f85-95f839e0434a",
            "5751134f-1771-44ba-a13a-bc1c6b4afbdb",
            "0d72578f-90ad-4d9a-b665-c7d97ed53d5c",
            "0dae2e27-649a-4ce0-8a78-d32385d00111",
            "62ec6fc1-230f-4a0c-b2d9-56a358f2816e",
            "08f72423-91b7-4c6c-ae29-830632253b76",
            "417d7e83-aa2d-46a6-8d16-9ad938012d03",
            "982b1b85-4ba4-4f8f-b76d-7f5dcad95f6d",
            "ff35819c-93c2-4993-95c3-75d987e66815",
            "3af71939-3dd9-427a-bdee-9588057481e0",
            "59123ede-d519-441f-9bce-cebf6d276e15",
            "2a92c28a-ff93-46be-b30d-63f697ee81c1",
            "49a18b64-2cf0-4817-bd65-65f718ca6c03",
            "ff44b938-d75a-4e3c-8c6f-4a2966e638b5",
            "2e669c49-dc43-4087-8eed-59598ae7761e",
            "73989199-8b0d-4ac0-8b70-9cb8cebb240d",
            "3aae0fc6-2654-4d7c-9fe0-dbc3f04596ce",
            "54bf990e-0e5c-487f-8476-ab26d42a5799",
            "4f69425b-4ed6-4a6e-8f80-47296b9f9987",
            "e0a7a324-ca4f-435f-babd-2f5d55540e06",
            "b761dca3-0b08-43d5-8f7b-9b96a5566bea",
            "02ee61cc-e680-4cbf-ba28-d115f11c9675",
            "7b1c49d4-9741-4810-8993-fcee02c166cf",
            "e0f08c2a-c33e-4ffb-81b1-629ed51acd0d"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 14,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "a69a2f75-b314-457f-9499-dad370577c16",
          "title": "createUrlWithQuery function",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/dashboard/tests/utils/helpers.unit.spec.jsx",
          "file": "/src/applications/personalization/dashboard/tests/utils/helpers.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should correctly append query parameters",
              "fullTitle": "createUrlWithQuery function should correctly append query parameters",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, _chai.expect)((0, _helpers.createUrlWithQuery)('/my_health/v1/messaging/folders', {\n  page: 1,\n  useCache: false\n})).to.equal('/my_health/v1/messaging/folders?page=1&useCache=false');",
              "err": {},
              "uuid": "b492f640-7752-44cd-b0c3-7a6fc06341f0",
              "parentUUID": "a69a2f75-b314-457f-9499-dad370577c16",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "b492f640-7752-44cd-b0c3-7a6fc06341f0"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "318f41cf-2c2b-44e7-8d5e-8e37e065a59b",
          "title": "currency function",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/dashboard/tests/utils/helpers.unit.spec.jsx",
          "file": "/src/applications/personalization/dashboard/tests/utils/helpers.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should format a number to American dollar",
              "fullTitle": "currency function should format a number to American dollar",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, _chai.expect)((0, _helpers.currency)(44)).to.equal('$44.00');",
              "err": {},
              "uuid": "36e51e86-033b-4a7a-a7f5-488dfe01f12d",
              "parentUUID": "318f41cf-2c2b-44e7-8d5e-8e37e065a59b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should format a number to American dollar",
              "fullTitle": "currency function should format a number to American dollar",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, _chai.expect)((0, _helpers.currency)(23)).to.not.equal('€23');",
              "err": {},
              "uuid": "6dcf8630-a6bc-42b2-ad6e-fe62f51104fb",
              "parentUUID": "318f41cf-2c2b-44e7-8d5e-8e37e065a59b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "36e51e86-033b-4a7a-a7f5-488dfe01f12d",
            "6dcf8630-a6bc-42b2-ad6e-fe62f51104fb"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "b5b87f35-5967-40a2-8452-72a4bdd3031a",
          "title": "countUnreadMessages function",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/dashboard/tests/utils/helpers.unit.spec.jsx",
          "file": "/src/applications/personalization/dashboard/tests/utils/helpers.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should count all unread messages in all folders, except for those in the Sent folder",
              "fullTitle": "countUnreadMessages function should count all unread messages in all folders, except for those in the Sent folder",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, _chai.expect)((0, _helpers.countUnreadMessages)({\n  data: [{\n    attributes: {\n      folderId: 0,\n      name: 'Inbox',\n      unreadCount: 3\n    },\n    id: '0'\n  }, {\n    attributes: {\n      folderId: -1,\n      name: 'Sent',\n      unreadCount: 2\n    },\n    id: '-1'\n  }, {\n    attributes: {\n      folderId: 435,\n      name: 'Favorites',\n      unreadCount: 3\n    },\n    id: '435'\n  }]\n})).to.equal(6);",
              "err": {},
              "uuid": "326e8c16-2c68-4060-b8b8-353fee856ae4",
              "parentUUID": "b5b87f35-5967-40a2-8452-72a4bdd3031a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return unread messages if there only exists one folder",
              "fullTitle": "countUnreadMessages function should return unread messages if there only exists one folder",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, _chai.expect)((0, _helpers.countUnreadMessages)({\n  data: {\n    attributes: {\n      folderId: 0,\n      name: 'Inbox',\n      unreadCount: 3\n    },\n    id: '0'\n  }\n})).to.equal(3);",
              "err": {},
              "uuid": "4e3bd46f-03bb-49bd-8bb4-705cc1ee6551",
              "parentUUID": "b5b87f35-5967-40a2-8452-72a4bdd3031a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return 0 if there are no folders",
              "fullTitle": "countUnreadMessages function should return 0 if there are no folders",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, _chai.expect)((0, _helpers.countUnreadMessages)({\n  data: {}\n})).to.equal(0);",
              "err": {},
              "uuid": "03a22237-0f12-45ea-aae8-15654694c8e7",
              "parentUUID": "b5b87f35-5967-40a2-8452-72a4bdd3031a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "326e8c16-2c68-4060-b8b8-353fee856ae4",
            "4e3bd46f-03bb-49bd-8bb4-705cc1ee6551",
            "03a22237-0f12-45ea-aae8-15654694c8e7"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "ddc34f69-f608-48be-a65c-285f8f990e60",
          "title": "roundToNearest function",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/dashboard/tests/utils/helpers.unit.spec.jsx",
          "file": "/src/applications/personalization/dashboard/tests/utils/helpers.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should return value rounded to the nearest interval",
              "fullTitle": "roundToNearest function should return value rounded to the nearest interval",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, _chai.expect)((0, _helpers.roundToNearest)({\n  interval: 5000,\n  value: 13000\n})).to.equal(15000);\n(0, _chai.expect)((0, _helpers.roundToNearest)({\n  interval: 5000,\n  value: 6500\n})).to.equal(5000);\n(0, _chai.expect)((0, _helpers.roundToNearest)({\n  interval: 5000,\n  value: 7500\n})).to.not.equal(5000);",
              "err": {},
              "uuid": "2d1e3ae4-7a0c-4a16-945c-e243aaa0641c",
              "parentUUID": "ddc34f69-f608-48be-a65c-285f8f990e60",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "2d1e3ae4-7a0c-4a16-945c-e243aaa0641c"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "3cf98fc4-fae3-4924-9f7d-27eac4a3ef9d",
          "title": "Contact Component",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/profile/components/personal-health-care-contacts/Contact.unit.spec.jsx",
          "file": "/src/applications/personalization/profile/components/personal-health-care-contacts/Contact.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "renders",
              "fullTitle": "Contact Component renders",
              "timedOut": false,
              "duration": 5,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cov_19p6upna4n().f[2]++;\nvar _ref = (cov_19p6upna4n().s[5]++, setup()),\n  container = _ref.container;\ncov_19p6upna4n().s[6]++;\n(0, _chai.expect)(container.textContent).to.contain('Primary next of kin');\ncov_19p6upna4n().s[7]++;\n(0, _chai.expect)(container.textContent).to.contain('Mrs. Rachel Walker Revere');\ncov_19p6upna4n().s[8]++;\n(0, _chai.expect)(container.textContent).to.contain('19 N Square');\ncov_19p6upna4n().s[9]++;\n(0, _chai.expect)(container.textContent).to.contain('Boston, MA 02113');\nvar telephone = (cov_19p6upna4n().s[10]++, container.querySelector('va-telephone'));\ncov_19p6upna4n().s[11]++;\n(0, _chai.expect)(telephone).to.have.attr('contact', '617-555-1111');",
              "err": {},
              "uuid": "900091c5-50dc-458b-977d-c80352c9a4ac",
              "parentUUID": "3cf98fc4-fae3-4924-9f7d-27eac4a3ef9d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "renders name and phone number if addressLine1 is not present",
              "fullTitle": "Contact Component renders name and phone number if addressLine1 is not present",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cov_19p6upna4n().f[3]++;\nvar _ref2 = (cov_19p6upna4n().s[13]++, setup({\n    addressLine1: '',\n    index: 1\n  })),\n  container = _ref2.container;\ncov_19p6upna4n().s[14]++;\n(0, _chai.expect)(container.textContent).to.contain('Secondary next of kin');\ncov_19p6upna4n().s[15]++;\n(0, _chai.expect)(container.textContent).to.contain('Mrs. Rachel Walker Revere');\nvar telephone = (cov_19p6upna4n().s[16]++, container.querySelector('va-telephone'));\ncov_19p6upna4n().s[17]++;\n(0, _chai.expect)(telephone).to.have.attr('contact', '617-555-1111');\ncov_19p6upna4n().s[18]++;\n(0, _chai.expect)(container.textContent).not.to.contain('Boston, MA 02113');",
              "err": {},
              "uuid": "d21e1573-6c7c-4337-9cd5-a89348635152",
              "parentUUID": "3cf98fc4-fae3-4924-9f7d-27eac4a3ef9d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "renders name and phone number when contactType is an emergency contact",
              "fullTitle": "Contact Component renders name and phone number when contactType is an emergency contact",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cov_19p6upna4n().f[4]++;\nvar _ref3 = (cov_19p6upna4n().s[20]++, setup({\n    contactType: 'Emergency Contact'\n  })),\n  container = _ref3.container;\ncov_19p6upna4n().s[21]++;\n(0, _chai.expect)(container.textContent).to.contain('Primary emergency contact');\ncov_19p6upna4n().s[22]++;\n(0, _chai.expect)(container.textContent).to.contain('Mrs. Rachel Walker Revere');\nvar telephone = (cov_19p6upna4n().s[23]++, container.querySelector('va-telephone'));\ncov_19p6upna4n().s[24]++;\n(0, _chai.expect)(telephone).to.have.attr('contact', '617-555-1111');\ncov_19p6upna4n().s[25]++;\n(0, _chai.expect)(container.textContent).not.to.contain('Boston, MA 02113');",
              "err": {},
              "uuid": "57c461b4-844a-49e9-a222-26dfcfe0e19d",
              "parentUUID": "3cf98fc4-fae3-4924-9f7d-27eac4a3ef9d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "omits the title if only one contact exists",
              "fullTitle": "Contact Component omits the title if only one contact exists",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cov_19p6upna4n().f[5]++;\nvar _ref4 = (cov_19p6upna4n().s[27]++, setup({\n    contactType: 'Emergency Contact',\n    numberOfContacts: 1\n  })),\n  container = _ref4.container;\ncov_19p6upna4n().s[28]++;\n(0, _chai.expect)(container.textContent).not.to.contain('Emergency contact');\ncov_19p6upna4n().s[29]++;\n(0, _chai.expect)(container.textContent).to.contain('Mrs. Rachel Walker Revere');\nvar telephone = (cov_19p6upna4n().s[30]++, container.querySelector('va-telephone'));\ncov_19p6upna4n().s[31]++;\n(0, _chai.expect)(telephone).to.have.attr('contact', '617-555-1111');\ncov_19p6upna4n().s[32]++;\n(0, _chai.expect)(container.textContent).not.to.contain('Boston, MA 02113');",
              "err": {},
              "uuid": "295c89f7-7f3f-4dda-a961-64bf3e9d2f62",
              "parentUUID": "3cf98fc4-fae3-4924-9f7d-27eac4a3ef9d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "900091c5-50dc-458b-977d-c80352c9a4ac",
            "d21e1573-6c7c-4337-9cd5-a89348635152",
            "57c461b4-844a-49e9-a222-26dfcfe0e19d",
            "295c89f7-7f3f-4dda-a961-64bf3e9d2f62"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 11,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "9ffad657-3d37-427a-86af-bca791c41d55",
          "title": "PersonalHealthCareContacts component",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/profile/components/personal-health-care-contacts/PersonalHealthCareContacts.unit.spec.jsx",
          "file": "/src/applications/personalization/profile/components/personal-health-care-contacts/PersonalHealthCareContacts.unit.spec.jsx",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"PersonalHealthCareContacts component\"",
              "fullTitle": "PersonalHealthCareContacts component \"before each\" hook in \"PersonalHealthCareContacts component\"",
              "timedOut": false,
              "duration": 1,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cov_lvku3rjyo().f[3]++;\ncov_lvku3rjyo().s[6]++;\nuseDispatchStub = _sinon.default.stub(redux, 'useDispatch');\ncov_lvku3rjyo().s[7]++;\ndispatchSpy = _sinon.default.spy();\ncov_lvku3rjyo().s[8]++;\nuseDispatchStub.returns(dispatchSpy);\ncov_lvku3rjyo().s[9]++;\nfetchProfileContactsSpy = _sinon.default.spy();\ncov_lvku3rjyo().s[10]++;\nprops = {\n  fetchProfileContacts: fetchProfileContactsSpy\n};",
              "err": {},
              "uuid": "6e8c6880-6679-4c82-8b45-3c597d1bc2c1",
              "parentUUID": "9ffad657-3d37-427a-86af-bca791c41d55",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after each\" hook in \"PersonalHealthCareContacts component\"",
              "fullTitle": "PersonalHealthCareContacts component \"after each\" hook in \"PersonalHealthCareContacts component\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cov_lvku3rjyo().f[4]++;\ncov_lvku3rjyo().s[12]++;\nuseDispatchStub.restore();",
              "err": {},
              "uuid": "457e5245-cc06-47c6-8978-9166dec166d5",
              "parentUUID": "9ffad657-3d37-427a-86af-bca791c41d55",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "renders",
              "fullTitle": "PersonalHealthCareContacts component renders",
              "timedOut": false,
              "duration": 475,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
              "err": {},
              "uuid": "58ac6339-9d82-4f8e-8c91-a104fc8ee3fa",
              "parentUUID": "9ffad657-3d37-427a-86af-bca791c41d55",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "renders non-VA patient message when user is not a VA patient",
              "fullTitle": "PersonalHealthCareContacts component renders non-VA patient message when user is not a VA patient",
              "timedOut": false,
              "duration": 318,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
              "err": {},
              "uuid": "a76052c2-814b-4571-9b10-c87dad616156",
              "parentUUID": "9ffad657-3d37-427a-86af-bca791c41d55",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "calls dispatch(fetchProfileContacts()) once on render",
              "fullTitle": "PersonalHealthCareContacts component calls dispatch(fetchProfileContacts()) once on render",
              "timedOut": false,
              "duration": 6,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
              "err": {},
              "uuid": "f10120da-f3f9-4c91-9303-df6ffc778743",
              "parentUUID": "9ffad657-3d37-427a-86af-bca791c41d55",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "renders a loading indicator when contacts are loading",
              "fullTitle": "PersonalHealthCareContacts component renders a loading indicator when contacts are loading",
              "timedOut": false,
              "duration": 306,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
              "err": {},
              "uuid": "db48871e-e2f2-4f2b-9dca-f6bad90189c3",
              "parentUUID": "9ffad657-3d37-427a-86af-bca791c41d55",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "renders an alert when loading fails",
              "fullTitle": "PersonalHealthCareContacts component renders an alert when loading fails",
              "timedOut": false,
              "duration": 311,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
              "err": {},
              "uuid": "147d7188-004a-4ed8-80a8-01689a78f1e1",
              "parentUUID": "9ffad657-3d37-427a-86af-bca791c41d55",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "handles an empty array of contacts",
              "fullTitle": "PersonalHealthCareContacts component handles an empty array of contacts",
              "timedOut": false,
              "duration": 315,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
              "err": {},
              "uuid": "fee7bfeb-dd46-41ec-9a4e-4d272cb0aa84",
              "parentUUID": "9ffad657-3d37-427a-86af-bca791c41d55",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "58ac6339-9d82-4f8e-8c91-a104fc8ee3fa",
            "a76052c2-814b-4571-9b10-c87dad616156",
            "f10120da-f3f9-4c91-9303-df6ffc778743",
            "db48871e-e2f2-4f2b-9dca-f6bad90189c3",
            "147d7188-004a-4ed8-80a8-01689a78f1e1",
            "fee7bfeb-dd46-41ec-9a4e-4d272cb0aa84"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1731,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "2936594d-a0a1-4071-88f7-1a749e53ba97",
          "title": "ProofOfVeteranStatus",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/profile/components/proof-of-veteran-status/ProofOfVeteranStatus.unit.spec.jsx",
          "file": "/src/applications/personalization/profile/components/proof-of-veteran-status/ProofOfVeteranStatus.unit.spec.jsx",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"ProofOfVeteranStatus\"",
              "fullTitle": "ProofOfVeteranStatus \"before each\" hook in \"ProofOfVeteranStatus\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cov_tl24lita().f[2]++;\ncov_tl24lita().s[14]++;\napiRequestStub = _sinon.default.stub(api, 'apiRequest');",
              "err": {},
              "uuid": "a82bb9a7-7bf8-4b34-b4bf-bc98d5b1169c",
              "parentUUID": "2936594d-a0a1-4071-88f7-1a749e53ba97",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after each\" hook in \"ProofOfVeteranStatus\"",
              "fullTitle": "ProofOfVeteranStatus \"after each\" hook in \"ProofOfVeteranStatus\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cov_tl24lita().f[3]++;\ncov_tl24lita().s[16]++;\napiRequestStub.restore();",
              "err": {},
              "uuid": "df8ed6c8-9446-49b5-990b-82aa079f9991",
              "parentUUID": "2936594d-a0a1-4071-88f7-1a749e53ba97",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [],
          "suites": [
            {
              "uuid": "79bc1e8d-08b8-454f-b8e4-6a494f3bb240",
              "title": "when it exists",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/profile/components/proof-of-veteran-status/ProofOfVeteranStatus.unit.spec.jsx",
              "file": "/src/applications/personalization/profile/components/proof-of-veteran-status/ProofOfVeteranStatus.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should render heading",
                  "fullTitle": "ProofOfVeteranStatus when it exists should render heading",
                  "timedOut": false,
                  "duration": 5,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cov_tl24lita().f[5]++;\nvar view = (cov_tl24lita().s[20]++, (0, _unitTestHelpers.renderWithProfileReducers)(/*#__PURE__*/_react.default.createElement(_ProofOfVeteranStatus.default, null), {\n  initialState: initialState\n}));\nvar heading = (cov_tl24lita().s[21]++, view.getAllByText(/Proof of Veteran status/i));\ncov_tl24lita().s[22]++;\n(0, _chai.expect)(heading).to.have.lengthOf.above(0);",
                  "err": {},
                  "uuid": "26a66c92-e960-4b91-96cf-19d7d5769571",
                  "parentUUID": "79bc1e8d-08b8-454f-b8e4-6a494f3bb240",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should render description copy",
                  "fullTitle": "ProofOfVeteranStatus when it exists should render description copy",
                  "timedOut": false,
                  "duration": 5,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
                  "err": {},
                  "uuid": "dfaa0947-2dd8-4c2e-bf34-424387e7fde8",
                  "parentUUID": "79bc1e8d-08b8-454f-b8e4-6a494f3bb240",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should render mobile app callout",
                  "fullTitle": "ProofOfVeteranStatus when it exists should render mobile app callout",
                  "timedOut": false,
                  "duration": 11,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
                  "err": {},
                  "uuid": "157de0a3-a5f5-40a3-9f69-a8306af87310",
                  "parentUUID": "79bc1e8d-08b8-454f-b8e4-6a494f3bb240",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "26a66c92-e960-4b91-96cf-19d7d5769571",
                "dfaa0947-2dd8-4c2e-bf34-424387e7fde8",
                "157de0a3-a5f5-40a3-9f69-a8306af87310"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 21,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "3f110555-6574-4e0e-b9fa-805a643a913a",
              "title": "should fetch verification status on render",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/profile/components/proof-of-veteran-status/ProofOfVeteranStatus.unit.spec.jsx",
              "file": "/src/applications/personalization/profile/components/proof-of-veteran-status/ProofOfVeteranStatus.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "displays the card successfully",
                  "fullTitle": "ProofOfVeteranStatus should fetch verification status on render displays the card successfully",
                  "timedOut": false,
                  "duration": 10,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
                  "err": {},
                  "uuid": "1fefe9f0-18ce-4336-b11f-313e26efa8d8",
                  "parentUUID": "3f110555-6574-4e0e-b9fa-805a643a913a",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "displays the returned not confirmed message",
                  "fullTitle": "ProofOfVeteranStatus should fetch verification status on render displays the returned not confirmed message",
                  "timedOut": false,
                  "duration": 9,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
                  "err": {},
                  "uuid": "63fefcfd-b5e5-4a67-b518-45adb4cbec85",
                  "parentUUID": "3f110555-6574-4e0e-b9fa-805a643a913a",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "handles empty API response",
                  "fullTitle": "ProofOfVeteranStatus should fetch verification status on render handles empty API response",
                  "timedOut": false,
                  "duration": 4,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
                  "err": {},
                  "uuid": "80046e40-dcad-47f4-860b-f92b9d6fbf6e",
                  "parentUUID": "3f110555-6574-4e0e-b9fa-805a643a913a",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "handles API error",
                  "fullTitle": "ProofOfVeteranStatus should fetch verification status on render handles API error",
                  "timedOut": false,
                  "duration": 7,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
                  "err": {},
                  "uuid": "0e5fb001-367c-4ab0-bc41-a2531207c2f8",
                  "parentUUID": "3f110555-6574-4e0e-b9fa-805a643a913a",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "handles a 504 API error with service history",
                  "fullTitle": "ProofOfVeteranStatus should fetch verification status on render handles a 504 API error with service history",
                  "timedOut": false,
                  "duration": 5,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
                  "err": {},
                  "uuid": "15cc8040-5191-46f3-a859-0ab6ec1af703",
                  "parentUUID": "3f110555-6574-4e0e-b9fa-805a643a913a",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "handles a 403 API error with service history",
                  "fullTitle": "ProofOfVeteranStatus should fetch verification status on render handles a 403 API error with service history",
                  "timedOut": false,
                  "duration": 5,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
                  "err": {},
                  "uuid": "c2b36c59-675a-465d-b511-79dd4b8d8c2e",
                  "parentUUID": "3f110555-6574-4e0e-b9fa-805a643a913a",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "displays loading indicator if fetch not complete",
                  "fullTitle": "ProofOfVeteranStatus should fetch verification status on render displays loading indicator if fetch not complete",
                  "timedOut": false,
                  "duration": 4,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
                  "err": {},
                  "uuid": "b45ae128-2546-40f4-ab2a-7da5bc4603dd",
                  "parentUUID": "3f110555-6574-4e0e-b9fa-805a643a913a",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "1fefe9f0-18ce-4336-b11f-313e26efa8d8",
                "63fefcfd-b5e5-4a67-b518-45adb4cbec85",
                "80046e40-dcad-47f4-860b-f92b9d6fbf6e",
                "0e5fb001-367c-4ab0-bc41-a2531207c2f8",
                "15cc8040-5191-46f3-a859-0ab6ec1af703",
                "c2b36c59-675a-465d-b511-79dd4b8d8c2e",
                "b45ae128-2546-40f4-ab2a-7da5bc4603dd"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 44,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "c85c991b-fa29-4873-9548-0130c03265c4",
              "title": "when eligible",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/profile/components/proof-of-veteran-status/ProofOfVeteranStatus.unit.spec.jsx",
              "file": "/src/applications/personalization/profile/components/proof-of-veteran-status/ProofOfVeteranStatus.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should render card if service history contains an eligible discharge despite any other discharges",
                  "fullTitle": "ProofOfVeteranStatus when eligible should render card if service history contains an eligible discharge despite any other discharges",
                  "timedOut": false,
                  "duration": 13,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
                  "err": {},
                  "uuid": "47feab21-e2b1-411a-aecb-69c841278c5f",
                  "parentUUID": "c85c991b-fa29-4873-9548-0130c03265c4",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should render the latest service item",
                  "fullTitle": "ProofOfVeteranStatus when eligible should render the latest service item",
                  "timedOut": false,
                  "duration": 9,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
                  "err": {},
                  "uuid": "2b47f7b7-2b73-4c4f-bde3-6787a70e47fe",
                  "parentUUID": "c85c991b-fa29-4873-9548-0130c03265c4",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should render the print button",
                  "fullTitle": "ProofOfVeteranStatus when eligible should render the print button",
                  "timedOut": false,
                  "duration": 6,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
                  "err": {},
                  "uuid": "ae237e8f-a8a6-4f93-917f-efa34f88342a",
                  "parentUUID": "c85c991b-fa29-4873-9548-0130c03265c4",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "47feab21-e2b1-411a-aecb-69c841278c5f",
                "2b47f7b7-2b73-4c4f-bde3-6787a70e47fe",
                "ae237e8f-a8a6-4f93-917f-efa34f88342a"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 28,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "f8796478-9d67-4935-b13e-fcef140633a7",
              "title": "when there is no service history",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/profile/components/proof-of-veteran-status/ProofOfVeteranStatus.unit.spec.jsx",
              "file": "/src/applications/personalization/profile/components/proof-of-veteran-status/ProofOfVeteranStatus.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "displays not confirmed message if confirmed",
                  "fullTitle": "ProofOfVeteranStatus when there is no service history displays not confirmed message if confirmed",
                  "timedOut": false,
                  "duration": 5,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
                  "err": {},
                  "uuid": "d844aa21-1910-4715-88f1-44ee34b301ce",
                  "parentUUID": "f8796478-9d67-4935-b13e-fcef140633a7",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "displays not confirmed message if not confirmed",
                  "fullTitle": "ProofOfVeteranStatus when there is no service history displays not confirmed message if not confirmed",
                  "timedOut": false,
                  "duration": 6,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
                  "err": {},
                  "uuid": "c0afba00-270c-4602-986e-35efbcc8ba9c",
                  "parentUUID": "f8796478-9d67-4935-b13e-fcef140633a7",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "d844aa21-1910-4715-88f1-44ee34b301ce",
                "c0afba00-270c-4602-986e-35efbcc8ba9c"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 11,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "bf5dba39-39ea-4c5f-b7f8-0b8ed5ba9432",
              "title": "when there is no veteran full name",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/profile/components/proof-of-veteran-status/ProofOfVeteranStatus.unit.spec.jsx",
              "file": "/src/applications/personalization/profile/components/proof-of-veteran-status/ProofOfVeteranStatus.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should render an error and not the HTML card",
                  "fullTitle": "ProofOfVeteranStatus when there is no veteran full name should render an error and not the HTML card",
                  "timedOut": false,
                  "duration": 6,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
                  "err": {},
                  "uuid": "faa5142b-326c-4865-a7b5-4077e1748551",
                  "parentUUID": "bf5dba39-39ea-4c5f-b7f8-0b8ed5ba9432",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "faa5142b-326c-4865-a7b5-4077e1748551"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 6,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "f906e501-5501-4dfb-8370-76f0314cf446",
              "title": "ineligibility message",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/profile/components/proof-of-veteran-status/ProofOfVeteranStatus.unit.spec.jsx",
              "file": "/src/applications/personalization/profile/components/proof-of-veteran-status/ProofOfVeteranStatus.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should render if service history does not contain an eligible discharge, but does contain an inelible discharge",
                  "fullTitle": "ProofOfVeteranStatus ineligibility message should render if service history does not contain an eligible discharge, but does contain an inelible discharge",
                  "timedOut": false,
                  "duration": 6,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
                  "err": {},
                  "uuid": "0dc4819c-7e5f-44c5-be08-fdc2ded5ff81",
                  "parentUUID": "f906e501-5501-4dfb-8370-76f0314cf446",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "0dc4819c-7e5f-44c5-be08-fdc2ded5ff81"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 6,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "ba67f345-1f72-47ef-b7a6-7deb9f0b5957",
          "title": "ProofOfVeteranStatusCard",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/profile/components/proof-of-veteran-status/ProofOfVeteranStatusCard/ProofOfVeteranStatusCard.unit.spec.jsx",
          "file": "/src/applications/personalization/profile/components/proof-of-veteran-status/ProofOfVeteranStatusCard/ProofOfVeteranStatusCard.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should render the heading",
              "fullTitle": "ProofOfVeteranStatusCard should render the heading",
              "timedOut": false,
              "duration": 3,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cov_18m9q1vcqi().f[2]++;\nvar view = (cov_18m9q1vcqi().s[5]++, renderWithTestData(testData));\ncov_18m9q1vcqi().s[6]++;\n(0, _chai.expect)(view.queryByText(/Proof of Veteran status/)).to.exist;",
              "err": {},
              "uuid": "b03ec72d-5685-4eb8-9fd0-b0442428be4c",
              "parentUUID": "ba67f345-1f72-47ef-b7a6-7deb9f0b5957",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should render the full name",
              "fullTitle": "ProofOfVeteranStatusCard should render the full name",
              "timedOut": false,
              "duration": 4,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cov_18m9q1vcqi().f[3]++;\nvar view = (cov_18m9q1vcqi().s[8]++, renderWithTestData(testData));\ncov_18m9q1vcqi().s[9]++;\n(0, _chai.expect)(view.queryByText(/Name/)).to.exist;\ncov_18m9q1vcqi().s[10]++;\n(0, _chai.expect)(view.queryByText(/First Last/)).to.exist;",
              "err": {},
              "uuid": "6317e2b6-73e9-47df-9465-894fa2aa409a",
              "parentUUID": "ba67f345-1f72-47ef-b7a6-7deb9f0b5957",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should render the latest service",
              "fullTitle": "ProofOfVeteranStatusCard should render the latest service",
              "timedOut": false,
              "duration": 3,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cov_18m9q1vcqi().f[4]++;\nvar view = (cov_18m9q1vcqi().s[12]++, renderWithTestData(testData));\ncov_18m9q1vcqi().s[13]++;\n(0, _chai.expect)(view.queryByText(/Latest period of service/)).to.exist;\ncov_18m9q1vcqi().s[14]++;\n(0, _chai.expect)(view.queryByText(/United States Army • 2009-2013/)).to.exist;",
              "err": {},
              "uuid": "b58520ef-25fd-4cec-b8dd-3d202cc06a8b",
              "parentUUID": "ba67f345-1f72-47ef-b7a6-7deb9f0b5957",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should render the DoD ID Number",
              "fullTitle": "ProofOfVeteranStatusCard should render the DoD ID Number",
              "timedOut": false,
              "duration": 3,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cov_18m9q1vcqi().f[5]++;\nvar view = (cov_18m9q1vcqi().s[16]++, renderWithTestData(testData));\ncov_18m9q1vcqi().s[17]++;\n(0, _chai.expect)(view.queryByText(/DoD ID Number/)).to.exist;\ncov_18m9q1vcqi().s[18]++;\n(0, _chai.expect)(view.queryByText(/6198661986/)).to.exist;",
              "err": {},
              "uuid": "e95f7c61-60c3-4db0-98d5-8f1b3a4ae525",
              "parentUUID": "ba67f345-1f72-47ef-b7a6-7deb9f0b5957",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should render the VA disability rating when it exists",
              "fullTitle": "ProofOfVeteranStatusCard should render the VA disability rating when it exists",
              "timedOut": false,
              "duration": 3,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cov_18m9q1vcqi().f[6]++;\nvar view = (cov_18m9q1vcqi().s[20]++, renderWithTestData(testData));\ncov_18m9q1vcqi().s[21]++;\n(0, _chai.expect)(view.queryByText(/VA disability rating/)).to.exist;\ncov_18m9q1vcqi().s[22]++;\n(0, _chai.expect)(view.queryByText(/70/)).to.exist;",
              "err": {},
              "uuid": "abd13600-45db-41be-932d-1c510170eba7",
              "parentUUID": "ba67f345-1f72-47ef-b7a6-7deb9f0b5957",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should not render the VA disability rating when it is zero",
              "fullTitle": "ProofOfVeteranStatusCard should not render the VA disability rating when it is zero",
              "timedOut": false,
              "duration": 4,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cov_18m9q1vcqi().f[7]++;\nvar view = (cov_18m9q1vcqi().s[24]++, renderWithTestData(_objectSpread(_objectSpread({}, testData), {}, {\n  totalDisabilityRating: 0\n})));\ncov_18m9q1vcqi().s[25]++;\n(0, _chai.expect)(view.queryByText(/VA disability rating/)).not.to.exist;\ncov_18m9q1vcqi().s[26]++;\n(0, _chai.expect)(view.queryByText(/^0%$/)).not.to.exist;",
              "err": {},
              "uuid": "17f6e367-c73d-4ac2-9e3d-010a5f813a53",
              "parentUUID": "ba67f345-1f72-47ef-b7a6-7deb9f0b5957",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should not render the VA disability rating when it is null",
              "fullTitle": "ProofOfVeteranStatusCard should not render the VA disability rating when it is null",
              "timedOut": false,
              "duration": 3,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cov_18m9q1vcqi().f[8]++;\nvar view = (cov_18m9q1vcqi().s[28]++, renderWithTestData(_objectSpread(_objectSpread({}, testData), {}, {\n  totalDisabilityRating: null\n})));\ncov_18m9q1vcqi().s[29]++;\n(0, _chai.expect)(view.queryByText(/VA disability rating/)).not.to.exist;\ncov_18m9q1vcqi().s[30]++;\n(0, _chai.expect)(view.queryByText(/^null%$/)).not.to.exist;",
              "err": {},
              "uuid": "28de696d-568a-4930-ad87-e1a3b4b673fe",
              "parentUUID": "ba67f345-1f72-47ef-b7a6-7deb9f0b5957",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should render the description",
              "fullTitle": "ProofOfVeteranStatusCard should render the description",
              "timedOut": false,
              "duration": 3,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cov_18m9q1vcqi().f[9]++;\nvar view = (cov_18m9q1vcqi().s[32]++, renderWithTestData(testData));\ncov_18m9q1vcqi().s[33]++;\n(0, _chai.expect)(view.queryByText(/This status doesn’t entitle you to any VA benefits./)).to.exist;",
              "err": {},
              "uuid": "a0bcac47-17da-42ce-adfc-872ec1f29341",
              "parentUUID": "ba67f345-1f72-47ef-b7a6-7deb9f0b5957",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should render the description",
              "fullTitle": "ProofOfVeteranStatusCard should render the description",
              "timedOut": false,
              "duration": 3,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cov_18m9q1vcqi().f[10]++;\nvar view = (cov_18m9q1vcqi().s[35]++, renderWithTestData(testData));\ncov_18m9q1vcqi().s[36]++;\n(0, _chai.expect)(view.queryByText(/This status doesn’t entitle you to any VA benefits./)).to.exist;",
              "err": {},
              "uuid": "8feac554-7c91-4ac1-9d71-c548288a32c9",
              "parentUUID": "ba67f345-1f72-47ef-b7a6-7deb9f0b5957",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should render the description",
              "fullTitle": "ProofOfVeteranStatusCard should render the description",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cov_18m9q1vcqi().f[11]++;\nvar view = (cov_18m9q1vcqi().s[38]++, renderWithTestData(testData));\ncov_18m9q1vcqi().s[39]++;\n(0, _chai.expect)(view.queryByAltText(/Seal of the U.S. Department of Veterans Affairs/)).to.exist;",
              "err": {},
              "uuid": "5953675a-9f1d-436c-b5df-ac4ee6ae919b",
              "parentUUID": "ba67f345-1f72-47ef-b7a6-7deb9f0b5957",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "b03ec72d-5685-4eb8-9fd0-b0442428be4c",
            "6317e2b6-73e9-47df-9465-894fa2aa409a",
            "b58520ef-25fd-4cec-b8dd-3d202cc06a8b",
            "e95f7c61-60c3-4db0-98d5-8f1b3a4ae525",
            "abd13600-45db-41be-932d-1c510170eba7",
            "17f6e367-c73d-4ac2-9e3d-010a5f813a53",
            "28de696d-568a-4930-ad87-e1a3b4b673fe",
            "a0bcac47-17da-42ce-adfc-872ec1f29341",
            "8feac554-7c91-4ac1-9d71-c548288a32c9",
            "5953675a-9f1d-436c-b5df-ac4ee6ae919b"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 31,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "f36f561d-704b-47fe-ab3c-d8dc2cfb41d8",
          "title": "CommunicationChannel model",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/profile/models/CommunicationChannel.unit.spec.js",
          "file": "/src/applications/personalization/profile/models/CommunicationChannel.unit.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "1e5cb941-fa3f-43ae-ae7e-473dee3c4b15",
              "title": "constructor",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/profile/models/CommunicationChannel.unit.spec.js",
              "file": "/src/applications/personalization/profile/models/CommunicationChannel.unit.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "throws an error when `options.type` is not included or not a valid channel type",
                  "fullTitle": "CommunicationChannel model constructor throws an error when `options.type` is not included or not a valid channel type",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cov_fasqpyvx6().f[2]++;\ncov_fasqpyvx6().s[3]++;\n(0, _chai.expect)(function () {\n  cov_fasqpyvx6().f[3]++;\n  cov_fasqpyvx6().s[4]++;\n  // eslint-disable-next-line no-new\n  new _CommunicationChannel.default({\n    parentItemId: 1\n  });\n}).to.throw(Error, /Invalid Argument/i);\ncov_fasqpyvx6().s[5]++;\n(0, _chai.expect)(function () {\n  cov_fasqpyvx6().f[4]++;\n  cov_fasqpyvx6().s[6]++;\n  // eslint-disable-next-line no-new\n  new _CommunicationChannel.default({\n    type: '1'\n  });\n}).to.throw(Error, /Invalid Argument/i);\ncov_fasqpyvx6().s[7]++;\n(0, _chai.expect)(function () {\n  cov_fasqpyvx6().f[5]++;\n  cov_fasqpyvx6().s[8]++;\n  // eslint-disable-next-line no-new\n  new _CommunicationChannel.default({\n    type: 3\n  });\n}).to.throw(Error, /Invalid Argument/i);",
                  "err": {},
                  "uuid": "8821de30-cac0-44f8-b954-60179c1ac3a8",
                  "parentUUID": "1e5cb941-fa3f-43ae-ae7e-473dee3c4b15",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "throws an error when `options.parentItemId` is not included or not a number",
                  "fullTitle": "CommunicationChannel model constructor throws an error when `options.parentItemId` is not included or not a number",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cov_fasqpyvx6().f[6]++;\ncov_fasqpyvx6().s[10]++;\n(0, _chai.expect)(function () {\n  cov_fasqpyvx6().f[7]++;\n  cov_fasqpyvx6().s[11]++;\n  // eslint-disable-next-line no-new\n  new _CommunicationChannel.default({\n    type: 1\n  });\n}).to.throw(Error, /Invalid Argument/i);\ncov_fasqpyvx6().s[12]++;\n(0, _chai.expect)(function () {\n  cov_fasqpyvx6().f[8]++;\n  cov_fasqpyvx6().s[13]++;\n  // eslint-disable-next-line no-new\n  new _CommunicationChannel.default({\n    parentItemId: '1'\n  });\n}).to.throw(Error, /Invalid Argument/i);",
                  "err": {},
                  "uuid": "78f26850-25b6-4cd3-9ac8-d47cfe7e5616",
                  "parentUUID": "1e5cb941-fa3f-43ae-ae7e-473dee3c4b15",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "8821de30-cac0-44f8-b954-60179c1ac3a8",
                "78f26850-25b6-4cd3-9ac8-d47cfe7e5616"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "67de4bd9-35f2-4fcf-9ee5-287ec2a1f6c1",
              "title": "getApiCallObject()",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/profile/models/CommunicationChannel.unit.spec.js",
              "file": "/src/applications/personalization/profile/models/CommunicationChannel.unit.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [],
              "suites": [
                {
                  "uuid": "b73b19d8-3fc8-4742-b1e9-f9cc56d4eac3",
                  "title": "when no permissions have been set yet",
                  "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/profile/models/CommunicationChannel.unit.spec.js",
                  "file": "/src/applications/personalization/profile/models/CommunicationChannel.unit.spec.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "returns an object with the correct shape that we can use with the `saveCommunicationPreferencesGroup` thunk creator",
                      "fullTitle": "CommunicationChannel model getApiCallObject() when no permissions have been set yet returns an object with the correct shape that we can use with the `saveCommunicationPreferencesGroup` thunk creator",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "slow",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "cov_fasqpyvx6().f[11]++;\nvar commChannel = (cov_fasqpyvx6().s[17]++, new _CommunicationChannel.default({\n  type: 1,\n  parentItemId: 1\n}));\ncov_fasqpyvx6().s[18]++;\ncommChannel.setIsAllowed(true);\nvar apiCallObject = (cov_fasqpyvx6().s[19]++, commChannel.getApiCallObject());\ncov_fasqpyvx6().s[20]++;\n(0, _chai.expect)(apiCallObject.method).to.equal('POST');\ncov_fasqpyvx6().s[21]++;\n(0, _chai.expect)(apiCallObject.endpoint).to.equal('/profile/communication_preferences');\ncov_fasqpyvx6().s[22]++;\n(0, _chai.expect)(apiCallObject.isAllowed).to.equal(true);\ncov_fasqpyvx6().s[23]++;\n(0, _chai.expect)(apiCallObject.payload).to.deep.equal({\n  communicationItem: {\n    id: 1,\n    communicationChannel: {\n      id: 1,\n      communicationPermission: {\n        allowed: true\n      }\n    }\n  }\n});",
                      "err": {},
                      "uuid": "07158e7b-ddc2-4f73-8cdf-73172fd6684f",
                      "parentUUID": "b73b19d8-3fc8-4742-b1e9-f9cc56d4eac3",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "07158e7b-ddc2-4f73-8cdf-73172fd6684f"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "3098f232-3d33-4270-b2db-0a875a3c57ee",
                  "title": "when permission is flipped from true to false",
                  "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/profile/models/CommunicationChannel.unit.spec.js",
                  "file": "/src/applications/personalization/profile/models/CommunicationChannel.unit.spec.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "returns an object with the correct shape that we can use with the `saveCommunicationPreferencesGroup` thunk creator",
                      "fullTitle": "CommunicationChannel model getApiCallObject() when permission is flipped from true to false returns an object with the correct shape that we can use with the `saveCommunicationPreferencesGroup` thunk creator",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "cov_fasqpyvx6().f[13]++;\nvar commChannel = (cov_fasqpyvx6().s[26]++, new _CommunicationChannel.default({\n  type: 1,\n  parentItemId: 1,\n  permissionId: 1001,\n  isAllowed: true\n}));\ncov_fasqpyvx6().s[27]++;\ncommChannel.setIsAllowed(false);\nvar apiCallObject = (cov_fasqpyvx6().s[28]++, commChannel.getApiCallObject());\ncov_fasqpyvx6().s[29]++;\n(0, _chai.expect)(apiCallObject.method).to.equal('PATCH');\ncov_fasqpyvx6().s[30]++;\n(0, _chai.expect)(apiCallObject.endpoint).to.equal('/profile/communication_preferences/1001');\ncov_fasqpyvx6().s[31]++;\n(0, _chai.expect)(apiCallObject.isAllowed).to.equal(false);\ncov_fasqpyvx6().s[32]++;\n(0, _chai.expect)(apiCallObject.payload).to.deep.equal({\n  communicationItem: {\n    id: 1,\n    communicationChannel: {\n      id: 1,\n      communicationPermission: {\n        allowed: false\n      }\n    }\n  }\n});",
                      "err": {},
                      "uuid": "a328914d-1b69-424f-b819-88e19e6a75b1",
                      "parentUUID": "3098f232-3d33-4270-b2db-0a875a3c57ee",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "a328914d-1b69-424f-b819-88e19e6a75b1"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                }
              ],
              "passes": [],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "a3504e9a-5ceb-4ccf-90f4-e50ef18286fc",
              "title": "isIdenticalTo()",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/profile/models/CommunicationChannel.unit.spec.js",
              "file": "/src/applications/personalization/profile/models/CommunicationChannel.unit.spec.js",
              "beforeHooks": [
                {
                  "title": "\"before each\" hook in \"isIdenticalTo()\"",
                  "fullTitle": "CommunicationChannel model isIdenticalTo() \"before each\" hook in \"isIdenticalTo()\"",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cov_fasqpyvx6().f[15]++;\ncov_fasqpyvx6().s[35]++;\ncommChannel1 = new _CommunicationChannel.default({\n  type: 1,\n  parentItemId: 1,\n  permissionId: 1000,\n  isAllowed: true\n});\ncov_fasqpyvx6().s[36]++;\ncommChannel2 = new _CommunicationChannel.default({\n  type: 1,\n  parentItemId: 1,\n  permissionId: 1000,\n  isAllowed: true\n});",
                  "err": {},
                  "uuid": "2e19c3ef-bb16-47f2-af5a-892c8ece85dc",
                  "parentUUID": "a3504e9a-5ceb-4ccf-90f4-e50ef18286fc",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [],
              "tests": [],
              "suites": [
                {
                  "uuid": "1917f898-5a34-4331-b46b-6e01bcd98f7b",
                  "title": "when it is not passed-in a communication-channel",
                  "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/profile/models/CommunicationChannel.unit.spec.js",
                  "file": "/src/applications/personalization/profile/models/CommunicationChannel.unit.spec.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "throws an error",
                      "fullTitle": "CommunicationChannel model isIdenticalTo() when it is not passed-in a communication-channel throws an error",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "cov_fasqpyvx6().f[17]++;\ncov_fasqpyvx6().s[39]++;\n(0, _chai.expect)(function () {\n  cov_fasqpyvx6().f[18]++;\n  cov_fasqpyvx6().s[40]++;\n  commChannel1.isIdenticalTo();\n}).to.throw(Error, /Invalid Argument/i);\ncov_fasqpyvx6().s[41]++;\n(0, _chai.expect)(function () {\n  cov_fasqpyvx6().f[19]++;\n  cov_fasqpyvx6().s[42]++;\n  commChannel1.isIdenticalTo({});\n}).to.throw(Error, /Invalid Argument/i);",
                      "err": {},
                      "uuid": "ac054e2f-b793-4439-90f0-82e7219a7dc3",
                      "parentUUID": "1917f898-5a34-4331-b46b-6e01bcd98f7b",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "ac054e2f-b793-4439-90f0-82e7219a7dc3"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "8f16a08e-520e-414b-8dbf-fc5cacdf8658",
                  "title": "when it is identical to the passed-in communication channel",
                  "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/profile/models/CommunicationChannel.unit.spec.js",
                  "file": "/src/applications/personalization/profile/models/CommunicationChannel.unit.spec.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "returns true",
                      "fullTitle": "CommunicationChannel model isIdenticalTo() when it is identical to the passed-in communication channel returns true",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "cov_fasqpyvx6().f[21]++;\ncov_fasqpyvx6().s[45]++;\n(0, _chai.expect)(commChannel1.isIdenticalTo(commChannel2)).to.be.true;",
                      "err": {},
                      "uuid": "d784fafe-0227-49eb-bf2f-a3a6b98d67b6",
                      "parentUUID": "8f16a08e-520e-414b-8dbf-fc5cacdf8658",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "d784fafe-0227-49eb-bf2f-a3a6b98d67b6"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "6211bb56-0084-48c9-a915-3b4b1e6c1a88",
                  "title": "when the passed-in communication channel is different than itself",
                  "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/profile/models/CommunicationChannel.unit.spec.js",
                  "file": "/src/applications/personalization/profile/models/CommunicationChannel.unit.spec.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "returns false",
                      "fullTitle": "CommunicationChannel model isIdenticalTo() when the passed-in communication channel is different than itself returns false",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "cov_fasqpyvx6().f[23]++;\ncov_fasqpyvx6().s[48]++;\n// this serves as a test of the setIsAllowed() method\ncommChannel2.setIsAllowed(false);\ncov_fasqpyvx6().s[49]++;\n(0, _chai.expect)(commChannel1.isIdenticalTo(commChannel2)).to.be.false;",
                      "err": {},
                      "uuid": "aff1cae3-8605-4a17-bcfd-0d61f996ca38",
                      "parentUUID": "6211bb56-0084-48c9-a915-3b4b1e6c1a88",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "aff1cae3-8605-4a17-bcfd-0d61f996ca38"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                }
              ],
              "passes": [],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "aa27f262-6f8c-4d0e-9c7f-a0e3e3d11145",
              "title": "clone",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/profile/models/CommunicationChannel.unit.spec.js",
              "file": "/src/applications/personalization/profile/models/CommunicationChannel.unit.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "returns an identical new instance that can be edited independent of the source instance",
                  "fullTitle": "CommunicationChannel model clone returns an identical new instance that can be edited independent of the source instance",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cov_fasqpyvx6().f[25]++;\nvar baseChannel = (cov_fasqpyvx6().s[52]++, new _CommunicationChannel.default({\n  type: 1,\n  parentItemId: 1\n}));\nvar clone = (cov_fasqpyvx6().s[53]++, baseChannel.clone());\ncov_fasqpyvx6().s[54]++;\n(0, _chai.expect)(baseChannel.isIdenticalTo(clone)).to.be.true;\ncov_fasqpyvx6().s[55]++;\nclone.setIsAllowed(true);\ncov_fasqpyvx6().s[56]++;\n(0, _chai.expect)(baseChannel.isIdenticalTo(clone)).to.be.false;\ncov_fasqpyvx6().s[57]++;\nclone.setIsAllowed(false);\ncov_fasqpyvx6().s[58]++;\n(0, _chai.expect)(baseChannel.isIdenticalTo(clone)).to.be.true;\ncov_fasqpyvx6().s[59]++;\nbaseChannel = new _CommunicationChannel.default({\n  type: 1,\n  parentItemId: 1,\n  isAllowed: true,\n  permissionId: 123\n});\ncov_fasqpyvx6().s[60]++;\nclone = baseChannel.clone();\ncov_fasqpyvx6().s[61]++;\n(0, _chai.expect)(baseChannel.isIdenticalTo(clone)).to.be.true;\ncov_fasqpyvx6().s[62]++;\nclone.setIsAllowed(false);\ncov_fasqpyvx6().s[63]++;\n(0, _chai.expect)(baseChannel.isIdenticalTo(clone)).to.be.false;\ncov_fasqpyvx6().s[64]++;\nclone.setIsAllowed(true);\ncov_fasqpyvx6().s[65]++;\n(0, _chai.expect)(baseChannel.isIdenticalTo(clone)).to.be.true;",
                  "err": {},
                  "uuid": "ea33574e-436d-4c66-a84a-22ca0b44f880",
                  "parentUUID": "aa27f262-6f8c-4d0e-9c7f-a0e3e3d11145",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "ea33574e-436d-4c66-a84a-22ca0b44f880"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "cb581c4d-f0b3-4a69-a3b4-f0661de0f7f8",
          "title": "CommunicationGroup model",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/profile/models/CommunicationGroup.unit.spec.js",
          "file": "/src/applications/personalization/profile/models/CommunicationGroup.unit.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "defb79ce-9a63-4801-b51d-f1afc6fd4558",
              "title": "constructor",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/profile/models/CommunicationGroup.unit.spec.js",
              "file": "/src/applications/personalization/profile/models/CommunicationGroup.unit.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "throws an error if not given an id",
                  "fullTitle": "CommunicationGroup model constructor throws an error if not given an id",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cov_21fsi6l295().f[2]++;\ncov_21fsi6l295().s[3]++;\n(0, _chai.expect)(function () {\n  cov_21fsi6l295().f[3]++;\n  cov_21fsi6l295().s[4]++;\n  // eslint-disable-next-line no-new\n  new _CommunicationGroup.default({\n    notAnId: 1,\n    communicationChannels: []\n  });\n}).to.throw(Error, /id.*number/i);",
                  "err": {},
                  "uuid": "d882da32-0b2b-46bb-b63c-668542282586",
                  "parentUUID": "defb79ce-9a63-4801-b51d-f1afc6fd4558",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "throws an error if not given a communicationChannels array",
                  "fullTitle": "CommunicationGroup model constructor throws an error if not given a communicationChannels array",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cov_21fsi6l295().f[4]++;\ncov_21fsi6l295().s[6]++;\n(0, _chai.expect)(function () {\n  cov_21fsi6l295().f[5]++;\n  cov_21fsi6l295().s[7]++;\n  // eslint-disable-next-line no-new\n  new _CommunicationGroup.default({\n    id: 1\n  });\n}).to.throw(Error, /channels.*array/i);",
                  "err": {},
                  "uuid": "1c9faa6b-de7b-4759-bc41-a7acb9887fdc",
                  "parentUUID": "defb79ce-9a63-4801-b51d-f1afc6fd4558",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "d882da32-0b2b-46bb-b63c-668542282586",
                "1c9faa6b-de7b-4759-bc41-a7acb9887fdc"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "7a34650b-be78-4a24-9b0d-b183384afbcd",
              "title": "getUpdatedChannels()",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/profile/models/CommunicationGroup.unit.spec.js",
              "file": "/src/applications/personalization/profile/models/CommunicationGroup.unit.spec.js",
              "beforeHooks": [
                {
                  "title": "\"before each\" hook in \"getUpdatedChannels()\"",
                  "fullTitle": "CommunicationGroup model getUpdatedChannels() \"before each\" hook in \"getUpdatedChannels()\"",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cov_21fsi6l295().f[7]++;\ncov_21fsi6l295().s[10]++;\nbaseGroup = new _CommunicationGroup.default({\n  id: 1,\n  communicationChannels: [new _CommunicationChannel.default({\n    type: 1,\n    parentItemId: 1\n  }), new _CommunicationChannel.default({\n    type: 2,\n    parentItemId: 1\n  }), new _CommunicationChannel.default({\n    type: 1,\n    parentItemId: 2,\n    isAllowed: true,\n    permissionId: 123\n  })]\n});",
                  "err": {},
                  "uuid": "a76be441-9dc0-4af9-a140-b45919adde21",
                  "parentUUID": "7a34650b-be78-4a24-9b0d-b183384afbcd",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [],
              "tests": [
                {
                  "title": "returns an empty array when the groups are identical",
                  "fullTitle": "CommunicationGroup model getUpdatedChannels() returns an empty array when the groups are identical",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cov_21fsi6l295().f[8]++;\nvar wipGroup = (cov_21fsi6l295().s[12]++, baseGroup.clone());\nvar updatedChannels = (cov_21fsi6l295().s[13]++, baseGroup.getUpdatedChannels(wipGroup));\ncov_21fsi6l295().s[14]++;\n(0, _chai.expect)(updatedChannels).to.deep.equal([]);",
                  "err": {},
                  "uuid": "92c3d479-ff30-4955-8787-99442a9ce627",
                  "parentUUID": "7a34650b-be78-4a24-9b0d-b183384afbcd",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "returns an empty array when the group's ids do not match",
                  "fullTitle": "CommunicationGroup model getUpdatedChannels() returns an empty array when the group's ids do not match",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cov_21fsi6l295().f[9]++;\nvar wipGroup = (cov_21fsi6l295().s[16]++, new _CommunicationGroup.default({\n  id: 2,\n  communicationChannels: [new _CommunicationChannel.default({\n    type: 1,\n    parentItemId: 4\n  }), new _CommunicationChannel.default({\n    type: 2,\n    parentItemId: 4\n  }), new _CommunicationChannel.default({\n    type: 1,\n    parentItemId: 5,\n    isAllowed: true,\n    permissionId: 456\n  })]\n}));\nvar updatedChannels = (cov_21fsi6l295().s[17]++, baseGroup.getUpdatedChannels(wipGroup));\ncov_21fsi6l295().s[18]++;\n(0, _chai.expect)(updatedChannels).to.deep.equal([]);",
                  "err": {},
                  "uuid": "814ae8f1-3834-452a-9666-0b5763acb77a",
                  "parentUUID": "7a34650b-be78-4a24-9b0d-b183384afbcd",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "returns the argument group's CommunicationChannels that are different",
                  "fullTitle": "CommunicationGroup model getUpdatedChannels() returns the argument group's CommunicationChannels that are different",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cov_21fsi6l295().f[10]++;\nvar wipGroup = (cov_21fsi6l295().s[20]++, baseGroup.clone());\ncov_21fsi6l295().s[21]++;\nwipGroup.channels[0].setIsAllowed(true);\ncov_21fsi6l295().s[22]++;\nwipGroup.channels[2].setIsAllowed(false);\nvar updatedChannels = (cov_21fsi6l295().s[23]++, baseGroup.getUpdatedChannels(wipGroup));\ncov_21fsi6l295().s[24]++;\n(0, _chai.expect)(updatedChannels.length).to.equal(2);\ncov_21fsi6l295().s[25]++;\n(0, _chai.expect)(updatedChannels[0].isAllowed).to.be.true;\ncov_21fsi6l295().s[26]++;\n(0, _chai.expect)(updatedChannels[1].isAllowed).to.be.false;",
                  "err": {},
                  "uuid": "8a595061-83ee-4d29-a7cb-0b2366c47a15",
                  "parentUUID": "7a34650b-be78-4a24-9b0d-b183384afbcd",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "92c3d479-ff30-4955-8787-99442a9ce627",
                "814ae8f1-3834-452a-9666-0b5763acb77a",
                "8a595061-83ee-4d29-a7cb-0b2366c47a15"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "106df20e-5c2e-456f-88b7-0931a02f725c",
              "title": "clone",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/profile/models/CommunicationGroup.unit.spec.js",
              "file": "/src/applications/personalization/profile/models/CommunicationGroup.unit.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "returns an identical CommunicationGroup",
                  "fullTitle": "CommunicationGroup model clone returns an identical CommunicationGroup",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cov_21fsi6l295().f[12]++;\nvar baseGroup = (cov_21fsi6l295().s[29]++, new _CommunicationGroup.default({\n  id: 1,\n  communicationChannels: [new _CommunicationChannel.default({\n    type: 1,\n    parentItemId: 1,\n    isAllowed: true,\n    permissionId: 123\n  }), new _CommunicationChannel.default({\n    type: 2,\n    parentItemId: 1\n  }), new _CommunicationChannel.default({\n    type: 1,\n    parentItemId: 2,\n    isAllowed: false,\n    permissionId: 456\n  })]\n}));\nvar clonedGroup = (cov_21fsi6l295().s[30]++, baseGroup.clone());\ncov_21fsi6l295().s[31]++;\n(0, _chai.expect)(baseGroup.getUpdatedChannels(clonedGroup)).to.deep.equal([]);",
                  "err": {},
                  "uuid": "91fcc128-703e-4079-8413-55613bbf6ccb",
                  "parentUUID": "106df20e-5c2e-456f-88b7-0931a02f725c",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "91fcc128-703e-4079-8413-55613bbf6ccb"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "b1a61929-70e0-4636-be37-e66fe8296fb9",
          "title": "profileContactsReducer",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/profile/reducers/contacts.unit.spec.js",
          "file": "/src/applications/personalization/profile/reducers/contacts.unit.spec.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"profileContactsReducer\"",
              "fullTitle": "profileContactsReducer \"before each\" hook in \"profileContactsReducer\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cov_m152f2lek().f[1]++;\ncov_m152f2lek().s[2]++;\nstate = undefined;",
              "err": {},
              "uuid": "ca647671-db43-41d4-8b86-d7a6dd6fd1d2",
              "parentUUID": "b1a61929-70e0-4636-be37-e66fe8296fb9",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "9687dc88-1acb-4d60-ad47-5def349deba9",
              "title": "FETCH_PROFILE_CONTACTS_STARTED",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/profile/reducers/contacts.unit.spec.js",
              "file": "/src/applications/personalization/profile/reducers/contacts.unit.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "sets loading",
                  "fullTitle": "profileContactsReducer FETCH_PROFILE_CONTACTS_STARTED sets loading",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cov_m152f2lek().f[3]++;\ncov_m152f2lek().s[5]++;\naction = {\n  type: _contacts.FETCH_PROFILE_CONTACTS_STARTED\n};\ncov_m152f2lek().s[6]++;\nnextState = (0, _contacts2.profileContactsReducer)(state, action);\ncov_m152f2lek().s[7]++;\n(0, _chai.expect)(nextState.loading).to.be.true;",
                  "err": {},
                  "uuid": "f9226261-28c3-4e35-87ef-fdbc592bbfcf",
                  "parentUUID": "9687dc88-1acb-4d60-ad47-5def349deba9",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "f9226261-28c3-4e35-87ef-fdbc592bbfcf"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "9a939012-8b6d-4b8a-9dc7-e2d003b7e193",
              "title": "FETCH_PROFILE_CONTACTS_SUCCEEDED",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/profile/reducers/contacts.unit.spec.js",
              "file": "/src/applications/personalization/profile/reducers/contacts.unit.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "sets data",
                  "fullTitle": "profileContactsReducer FETCH_PROFILE_CONTACTS_SUCCEEDED sets data",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cov_m152f2lek().f[5]++;\ncov_m152f2lek().s[10]++;\naction = {\n  type: _contacts.FETCH_PROFILE_CONTACTS_SUCCEEDED,\n  payload: _contacts3.default\n};\ncov_m152f2lek().s[11]++;\nnextState = (0, _contacts2.profileContactsReducer)(state, action);\ncov_m152f2lek().s[12]++;\n(0, _chai.expect)(nextState.data).to.equal(_contacts3.default.data);\ncov_m152f2lek().s[13]++;\n(0, _chai.expect)(nextState.loading).to.be.false;\ncov_m152f2lek().s[14]++;\n(0, _chai.expect)(nextState.error).to.be.false;",
                  "err": {},
                  "uuid": "d33ea83b-bce1-4d0b-9d31-d88646c7414b",
                  "parentUUID": "9a939012-8b6d-4b8a-9dc7-e2d003b7e193",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "d33ea83b-bce1-4d0b-9d31-d88646c7414b"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "5f79d271-ca2d-4d65-a9a9-86311af1d9a2",
              "title": "FETCH_PROFILE_CONTACTS_FAILED",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/profile/reducers/contacts.unit.spec.js",
              "file": "/src/applications/personalization/profile/reducers/contacts.unit.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "sets error",
                  "fullTitle": "profileContactsReducer FETCH_PROFILE_CONTACTS_FAILED sets error",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cov_m152f2lek().f[7]++;\ncov_m152f2lek().s[17]++;\naction = {\n  type: _contacts.FETCH_PROFILE_CONTACTS_FAILED,\n  payload: 'err'\n};\ncov_m152f2lek().s[18]++;\nnextState = (0, _contacts2.profileContactsReducer)(state, action);\ncov_m152f2lek().s[19]++;\n(0, _chai.expect)(nextState.error).to.be.true;\ncov_m152f2lek().s[20]++;\n(0, _chai.expect)(nextState.loading).to.be.false;\ncov_m152f2lek().s[21]++;\n(0, _chai.expect)(nextState.data).to.deep.equal([]);",
                  "err": {},
                  "uuid": "c77c5123-d3f3-4025-9a29-9817b82f8cec",
                  "parentUUID": "5f79d271-ca2d-4d65-a9a9-86311af1d9a2",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "c77c5123-d3f3-4025-9a29-9817b82f8cec"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "ffe4c565-02e7-4b05-9d4b-eadb718aa4e3",
          "title": "directDeposit actions",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/profile/tests/actions/directDeposit.unit.spec.js",
          "file": "/src/applications/personalization/profile/tests/actions/directDeposit.unit.spec.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"directDeposit actions\"",
              "fullTitle": "directDeposit actions \"before each\" hook in \"directDeposit actions\"",
              "timedOut": false,
              "duration": 1,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "recordApiEventStub = _sinon.default.stub(_directDeposit.fetchDirectDepositArgs, 'recordApiEvent');\ncaptureErrorStub = _sinon.default.stub(_directDeposit.fetchDirectDepositArgs, 'captureError');",
              "err": {},
              "uuid": "495c8be4-a65c-4eb6-8ab6-3c181d5fe8d9",
              "parentUUID": "ffe4c565-02e7-4b05-9d4b-eadb718aa4e3",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"directDeposit actions\"",
              "fullTitle": "directDeposit actions \"after all\" hook in \"directDeposit actions\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "server.close();",
              "err": {},
              "uuid": "89e576ae-17b3-4523-84df-a9b40e006241",
              "parentUUID": "ffe4c565-02e7-4b05-9d4b-eadb718aa4e3",
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"after each\" hook in \"directDeposit actions\"",
              "fullTitle": "directDeposit actions \"after each\" hook in \"directDeposit actions\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "server.resetHandlers();\nrecordApiEventStub.restore();\ncaptureErrorStub.restore();\nif (getDataStub) {\n  getDataStub.restore();\n}",
              "err": {},
              "uuid": "249e1b4e-6b04-4c86-bc12-f65eb6afbb10",
              "parentUUID": "ffe4c565-02e7-4b05-9d4b-eadb718aa4e3",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "should dispatch DIRECT_DEPOSIT_FETCH_SUCCEEDED with response on success",
              "fullTitle": "directDeposit actions should dispatch DIRECT_DEPOSIT_FETCH_SUCCEEDED with response on success",
              "timedOut": false,
              "duration": 8,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
              "err": {},
              "uuid": "c3085282-6679-48c0-ba00-5f95296d52a9",
              "parentUUID": "ffe4c565-02e7-4b05-9d4b-eadb718aa4e3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should dispatch DIRECT_DEPOSIT_FETCH_FAILED with response on error",
              "fullTitle": "directDeposit actions should dispatch DIRECT_DEPOSIT_FETCH_FAILED with response on error",
              "timedOut": false,
              "duration": 5,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
              "err": {},
              "uuid": "99a6309b-2c5e-4ddd-b41e-41b7de4a1985",
              "parentUUID": "ffe4c565-02e7-4b05-9d4b-eadb718aa4e3",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [
            {
              "uuid": "f4ca97bc-8893-46ce-b48e-5fb9629acac9",
              "title": "toggleDirectDepositInformationEdit",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/profile/tests/actions/directDeposit.unit.spec.js",
              "file": "/src/applications/personalization/profile/tests/actions/directDeposit.unit.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should create an action to toggle edit mode",
                  "fullTitle": "directDeposit actions toggleDirectDepositInformationEdit should create an action to toggle edit mode",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var open = true;\nvar expectedAction = {\n  type: _directDeposit.DIRECT_DEPOSIT_EDIT_TOGGLED,\n  open: open\n};\n(0, _chai.expect)((0, _directDeposit.toggleDirectDepositEdit)(open)).to.eql(expectedAction);",
                  "err": {},
                  "uuid": "e276efa0-cda9-47ef-8f0d-151c8519292d",
                  "parentUUID": "f4ca97bc-8893-46ce-b48e-5fb9629acac9",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "e276efa0-cda9-47ef-8f0d-151c8519292d"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "4ee96c28-3b42-469a-af3d-5ef5954faecb",
              "title": "saveDirect deposit action creator",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/profile/tests/actions/directDeposit.unit.spec.js",
              "file": "/src/applications/personalization/profile/tests/actions/directDeposit.unit.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should dispatch the SUCCESS state",
                  "fullTitle": "directDeposit actions saveDirect deposit action creator should dispatch the SUCCESS state",
                  "timedOut": false,
                  "duration": 5,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
                  "err": {},
                  "uuid": "c78be6a5-e29b-4c72-85d7-366f08153e62",
                  "parentUUID": "4ee96c28-3b42-469a-af3d-5ef5954faecb",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should dispatch the FAILURE state",
                  "fullTitle": "directDeposit actions saveDirect deposit action creator should dispatch the FAILURE state",
                  "timedOut": false,
                  "duration": 4,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
                  "err": {},
                  "uuid": "2bb8925d-cbaf-4c30-a390-0cd7796deb17",
                  "parentUUID": "4ee96c28-3b42-469a-af3d-5ef5954faecb",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should dispatch the FAILURE state when the response is an instance of Error",
                  "fullTitle": "directDeposit actions saveDirect deposit action creator should dispatch the FAILURE state when the response is an instance of Error",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
                  "err": {},
                  "uuid": "218f1f12-d6da-4f62-82a3-5a459fc9ae3c",
                  "parentUUID": "4ee96c28-3b42-469a-af3d-5ef5954faecb",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "c78be6a5-e29b-4c72-85d7-366f08153e62",
                "2bb8925d-cbaf-4c30-a390-0cd7796deb17",
                "218f1f12-d6da-4f62-82a3-5a459fc9ae3c"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 11,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            }
          ],
          "passes": [
            "c3085282-6679-48c0-ba00-5f95296d52a9",
            "99a6309b-2c5e-4ddd-b41e-41b7de4a1985"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 13,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "c26f66a1-79d3-43f6-8282-7bb037b6d23d",
          "title": "actions/personalInformation",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/profile/tests/actions/personalInformation.unit.spec.js",
          "file": "/src/applications/personalization/profile/tests/actions/personalInformation.unit.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "3da2de4e-ca93-42e4-a235-e380a16ecd3b",
              "title": "fetchPersonalInformation SUCCESS",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/profile/tests/actions/personalInformation.unit.spec.js",
              "file": "/src/applications/personalization/profile/tests/actions/personalInformation.unit.spec.js",
              "beforeHooks": [
                {
                  "title": "\"before each\" hook in \"fetchPersonalInformation SUCCESS\"",
                  "fullTitle": "actions/personalInformation fetchPersonalInformation SUCCESS \"before each\" hook in \"fetchPersonalInformation SUCCESS\"",
                  "timedOut": false,
                  "duration": 1,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _helpers.mockFetch)();\nrecordEventSpy = _sinon.default.spy();\n(0, _helpers.setFetchJSONResponse)(global.fetch.onFirstCall(), mockPersonalInfo.basicUserPersonalInfo);\nactionCreator = personalInformationActions.fetchPersonalInformation(false, recordEventSpy);\ndispatch = _sinon.default.spy();",
                  "err": {},
                  "uuid": "2a02cdd4-bc55-49eb-bcda-559330e419aa",
                  "parentUUID": "3da2de4e-ca93-42e4-a235-e380a16ecd3b",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [],
              "tests": [
                {
                  "title": "calls fetch to `GET profile/personal_information`",
                  "fullTitle": "actions/personalInformation fetchPersonalInformation SUCCESS calls fetch to `GET profile/personal_information`",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
                  "err": {},
                  "uuid": "1160c791-655e-4cfd-bacc-aaef83d42295",
                  "parentUUID": "3da2de4e-ca93-42e4-a235-e380a16ecd3b",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "dispatches FETCH_PERSONAL_INFORMATION",
                  "fullTitle": "actions/personalInformation fetchPersonalInformation SUCCESS dispatches FETCH_PERSONAL_INFORMATION",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
                  "err": {},
                  "uuid": "bbf1fb3a-e030-4074-b1bf-1868c4cde943",
                  "parentUUID": "3da2de4e-ca93-42e4-a235-e380a16ecd3b",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "dispatches FETCH_PERSONAL_INFORMATION_SUCCESS and passes along the data from endpoint",
                  "fullTitle": "actions/personalInformation fetchPersonalInformation SUCCESS dispatches FETCH_PERSONAL_INFORMATION_SUCCESS and passes along the data from endpoint",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
                  "err": {},
                  "uuid": "6d64dd57-c479-45f1-a9e9-9d58d1b0c81d",
                  "parentUUID": "3da2de4e-ca93-42e4-a235-e380a16ecd3b",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "reports success to platform/monitoring/recordEvent",
                  "fullTitle": "actions/personalInformation fetchPersonalInformation SUCCESS reports success to platform/monitoring/recordEvent",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
                  "err": {},
                  "uuid": "6c0cc98f-5898-482e-ad0a-c2a669e30665",
                  "parentUUID": "3da2de4e-ca93-42e4-a235-e380a16ecd3b",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "1160c791-655e-4cfd-bacc-aaef83d42295",
                "bbf1fb3a-e030-4074-b1bf-1868c4cde943",
                "6d64dd57-c479-45f1-a9e9-9d58d1b0c81d",
                "6c0cc98f-5898-482e-ad0a-c2a669e30665"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 4,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "54568836-23b4-4283-bd57-add8d5a9aedd",
              "title": "fetchPersonalInformation FAILURE",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/profile/tests/actions/personalInformation.unit.spec.js",
              "file": "/src/applications/personalization/profile/tests/actions/personalInformation.unit.spec.js",
              "beforeHooks": [
                {
                  "title": "\"before each\" hook in \"fetchPersonalInformation FAILURE\"",
                  "fullTitle": "actions/personalInformation fetchPersonalInformation FAILURE \"before each\" hook in \"fetchPersonalInformation FAILURE\"",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _helpers.mockFetch)();\nrecordEventSpy = _sinon.default.spy();\n(0, _helpers.setFetchJSONResponse)(global.fetch.onFirstCall(), mockPersonalInfo.userPersonalInfoFailure);\nactionCreator = personalInformationActions.fetchPersonalInformation(false, recordEventSpy);\ndispatch = _sinon.default.spy();",
                  "err": {},
                  "uuid": "afbab582-1a74-478f-9720-5bf8078e13e9",
                  "parentUUID": "54568836-23b4-4283-bd57-add8d5a9aedd",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [],
              "tests": [
                {
                  "title": "calls fetch to `GET profile/personal_information`",
                  "fullTitle": "actions/personalInformation fetchPersonalInformation FAILURE calls fetch to `GET profile/personal_information`",
                  "timedOut": false,
                  "duration": 5,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
                  "err": {},
                  "uuid": "e609cb91-8fc0-499a-96c4-f480fb7b9f37",
                  "parentUUID": "54568836-23b4-4283-bd57-add8d5a9aedd",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "dispatches FETCH_PERSONAL_INFORMATION",
                  "fullTitle": "actions/personalInformation fetchPersonalInformation FAILURE dispatches FETCH_PERSONAL_INFORMATION",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
                  "err": {},
                  "uuid": "6d575edc-ee6f-4d1e-8bcb-6efbd2bfb70a",
                  "parentUUID": "54568836-23b4-4283-bd57-add8d5a9aedd",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "dispatches FETCH_PERSONAL_INFORMATION_FAILED",
                  "fullTitle": "actions/personalInformation fetchPersonalInformation FAILURE dispatches FETCH_PERSONAL_INFORMATION_FAILED",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
                  "err": {},
                  "uuid": "4af0e094-80ad-4de1-9e7e-335126aadb5c",
                  "parentUUID": "54568836-23b4-4283-bd57-add8d5a9aedd",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "reports success to platform/monitoring/recordEvent",
                  "fullTitle": "actions/personalInformation fetchPersonalInformation FAILURE reports success to platform/monitoring/recordEvent",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
                  "err": {},
                  "uuid": "796dc701-8266-4246-856c-52c60803645c",
                  "parentUUID": "54568836-23b4-4283-bd57-add8d5a9aedd",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "e609cb91-8fc0-499a-96c4-f480fb7b9f37",
                "6d575edc-ee6f-4d1e-8bcb-6efbd2bfb70a",
                "4af0e094-80ad-4de1-9e7e-335126aadb5c",
                "796dc701-8266-4246-856c-52c60803645c"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 7,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "9f9fc50f-c885-43ce-8620-1bce8845c262",
              "title": "createPersonalInfoUpdate action",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/profile/tests/actions/personalInformation.unit.spec.js",
              "file": "/src/applications/personalization/profile/tests/actions/personalInformation.unit.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [],
              "suites": [
                {
                  "uuid": "f6010681-a6c2-4421-919a-536426df267b",
                  "title": "when PUT request is a SUCCESS",
                  "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/profile/tests/actions/personalInformation.unit.spec.js",
                  "file": "/src/applications/personalization/profile/tests/actions/personalInformation.unit.spec.js",
                  "beforeHooks": [
                    {
                      "title": "\"before each\" hook in \"when PUT request is a SUCCESS\"",
                      "fullTitle": "actions/personalInformation createPersonalInfoUpdate action when PUT request is a SUCCESS \"before each\" hook in \"when PUT request is a SUCCESS\"",
                      "timedOut": false,
                      "duration": 0,
                      "state": null,
                      "speed": null,
                      "pass": false,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "(0, _helpers.mockFetch)();\nrecordEventSpy = _sinon.default.spy();\n(0, _helpers.setFetchJSONResponse)(global.fetch.onFirstCall(), mockPersonalInfo.createPutPreferredNameSuccess('George'));\nactionCreator = personalInformationActions.createPersonalInfoUpdate({\n  route: 'v0/profile/preferred_names',\n  method: 'PUT',\n  fieldName: 'preferredName',\n  payload: {\n    text: 'George'\n  },\n  analyticsSectionName: 'personal-information-preferred-name',\n  value: {\n    preferredName: 'George'\n  },\n  recordAnalyticsEvent: recordEventSpy\n});\ndispatch = _sinon.default.spy();",
                      "err": {},
                      "uuid": "ae8749eb-988f-40ed-975c-89ad9608d1cc",
                      "parentUUID": "f6010681-a6c2-4421-919a-536426df267b",
                      "isHook": true,
                      "skipped": false
                    }
                  ],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "calls fetch to `PUT profile/preferred_names`",
                      "fullTitle": "actions/personalInformation createPersonalInfoUpdate action when PUT request is a SUCCESS calls fetch to `PUT profile/preferred_names`",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "slow",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
                      "err": {},
                      "uuid": "f7ba055e-81b9-4a4b-9433-ab2b3f327f48",
                      "parentUUID": "f6010681-a6c2-4421-919a-536426df267b",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "dispatches VAP_SERVICE_TRANSACTION_REQUESTED",
                      "fullTitle": "actions/personalInformation createPersonalInfoUpdate action when PUT request is a SUCCESS dispatches VAP_SERVICE_TRANSACTION_REQUESTED",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
                      "err": {},
                      "uuid": "5f6333ec-bf33-4454-babb-ce9297056227",
                      "parentUUID": "f6010681-a6c2-4421-919a-536426df267b",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "dispatches VAP_SERVICE_TRANSACTION_REQUEST_SUCCEEDED and passes along the data from endpoint and field name",
                      "fullTitle": "actions/personalInformation createPersonalInfoUpdate action when PUT request is a SUCCESS dispatches VAP_SERVICE_TRANSACTION_REQUEST_SUCCEEDED and passes along the data from endpoint and field name",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "slow",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
                      "err": {},
                      "uuid": "8db8cf0f-d63b-4017-8ca3-bc44dac9c43e",
                      "parentUUID": "f6010681-a6c2-4421-919a-536426df267b",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "dispatches UPDATE_PERSONAL_INFORMATION_FIELD and passes fieldName and value",
                      "fullTitle": "actions/personalInformation createPersonalInfoUpdate action when PUT request is a SUCCESS dispatches UPDATE_PERSONAL_INFORMATION_FIELD and passes fieldName and value",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "slow",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
                      "err": {},
                      "uuid": "4dd2c88c-7bbb-45ad-8702-8658c5a8ba87",
                      "parentUUID": "f6010681-a6c2-4421-919a-536426df267b",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "dispatches VAP_SERVICE_TRANSACTION_CLEARED and passes transaction with created transactionId",
                      "fullTitle": "actions/personalInformation createPersonalInfoUpdate action when PUT request is a SUCCESS dispatches VAP_SERVICE_TRANSACTION_CLEARED and passes transaction with created transactionId",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "slow",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
                      "err": {},
                      "uuid": "5410d5c4-8f88-474c-b6c1-ebe006f86b04",
                      "parentUUID": "f6010681-a6c2-4421-919a-536426df267b",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "reports success to platform/monitoring/recordEvent",
                      "fullTitle": "actions/personalInformation createPersonalInfoUpdate action when PUT request is a SUCCESS reports success to platform/monitoring/recordEvent",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "slow",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
                      "err": {},
                      "uuid": "5890bb81-8ce5-45b6-82f0-df5c3edffd78",
                      "parentUUID": "f6010681-a6c2-4421-919a-536426df267b",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "f7ba055e-81b9-4a4b-9433-ab2b3f327f48",
                    "5f6333ec-bf33-4454-babb-ce9297056227",
                    "8db8cf0f-d63b-4017-8ca3-bc44dac9c43e",
                    "4dd2c88c-7bbb-45ad-8702-8658c5a8ba87",
                    "5410d5c4-8f88-474c-b6c1-ebe006f86b04",
                    "5890bb81-8ce5-45b6-82f0-df5c3edffd78"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 5,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "d10af4f9-9e49-49ab-b84a-e05ebd89b9ed",
                  "title": "when PUT request is a FAILURE",
                  "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/profile/tests/actions/personalInformation.unit.spec.js",
                  "file": "/src/applications/personalization/profile/tests/actions/personalInformation.unit.spec.js",
                  "beforeHooks": [
                    {
                      "title": "\"before each\" hook in \"when PUT request is a FAILURE\"",
                      "fullTitle": "actions/personalInformation createPersonalInfoUpdate action when PUT request is a FAILURE \"before each\" hook in \"when PUT request is a FAILURE\"",
                      "timedOut": false,
                      "duration": 0,
                      "state": null,
                      "speed": null,
                      "pass": false,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "(0, _helpers.mockFetch)();\nrecordEventSpy = _sinon.default.spy();\n(0, _helpers.setFetchJSONResponse)(global.fetch.onFirstCall(), mockPersonalInfo.putBadRequestFailure400);\nactionCreator = personalInformationActions.createPersonalInfoUpdate({\n  route: 'v0/profile/preferred_names',\n  method: 'PUT',\n  fieldName: 'preferredName',\n  payload: {\n    text: 'George'\n  },\n  analyticsSectionName: 'personal-information-preferred-name',\n  value: {\n    preferredName: 'George'\n  },\n  recordAnalyticsEvent: recordEventSpy\n});\ndispatch = _sinon.default.spy();",
                      "err": {},
                      "uuid": "843f27d5-6a0b-408b-804d-747a155217fd",
                      "parentUUID": "d10af4f9-9e49-49ab-b84a-e05ebd89b9ed",
                      "isHook": true,
                      "skipped": false
                    }
                  ],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "calls fetch to `PUT profile/preferred_names`",
                      "fullTitle": "actions/personalInformation createPersonalInfoUpdate action when PUT request is a FAILURE calls fetch to `PUT profile/preferred_names`",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "slow",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
                      "err": {},
                      "uuid": "c343f3a4-b3eb-45c2-8ed7-3886f5f7b04d",
                      "parentUUID": "d10af4f9-9e49-49ab-b84a-e05ebd89b9ed",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "dispatches VAP_SERVICE_TRANSACTION_REQUESTED",
                      "fullTitle": "actions/personalInformation createPersonalInfoUpdate action when PUT request is a FAILURE dispatches VAP_SERVICE_TRANSACTION_REQUESTED",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "slow",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
                      "err": {},
                      "uuid": "19ed61b9-2224-4434-97fe-4393b2ceb976",
                      "parentUUID": "d10af4f9-9e49-49ab-b84a-e05ebd89b9ed",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "dispatches VAP_SERVICE_TRANSACTION_REQUEST_FAILED and passes error and field name",
                      "fullTitle": "actions/personalInformation createPersonalInfoUpdate action when PUT request is a FAILURE dispatches VAP_SERVICE_TRANSACTION_REQUEST_FAILED and passes error and field name",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "slow",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
                      "err": {},
                      "uuid": "1ff50e7f-1026-45f6-87ac-3884fa1f8628",
                      "parentUUID": "d10af4f9-9e49-49ab-b84a-e05ebd89b9ed",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "reports failure to platform/monitoring/recordEvent",
                      "fullTitle": "actions/personalInformation createPersonalInfoUpdate action when PUT request is a FAILURE reports failure to platform/monitoring/recordEvent",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "slow",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
                      "err": {},
                      "uuid": "8b4170ff-32b7-48e4-b6ba-82a2404cea50",
                      "parentUUID": "d10af4f9-9e49-49ab-b84a-e05ebd89b9ed",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "c343f3a4-b3eb-45c2-8ed7-3886f5f7b04d",
                    "19ed61b9-2224-4434-97fe-4393b2ceb976",
                    "1ff50e7f-1026-45f6-87ac-3884fa1f8628",
                    "8b4170ff-32b7-48e4-b6ba-82a2404cea50"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 4,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                }
              ],
              "passes": [],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "4aa9b18d-a2d2-4e7f-9368-f740ad0fe7c5",
          "title": "AccountSecurity Page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/profile/tests/components/account-security/AccountSecurity.unit.spec.jsx",
          "file": "/src/applications/personalization/profile/tests/components/account-security/AccountSecurity.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [
            {
              "title": "\"after each\" hook: cleanup in \"AccountSecurity Page\"",
              "fullTitle": "AccountSecurity Page \"after each\" hook: cleanup in \"AccountSecurity Page\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "mountedContainers.forEach(cleanupAtContainer);",
              "err": {},
              "uuid": "1b608af6-146d-41b8-85d2-28167a654184",
              "parentUUID": "4aa9b18d-a2d2-4e7f-9368-f740ad0fe7c5",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "renders without crashing",
              "fullTitle": "AccountSecurity Page renders without crashing",
              "timedOut": false,
              "duration": 7,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _renderWithProfileRed = (0, _unitTestHelpers.renderWithProfileReducersAndRouter)(/*#__PURE__*/_react.default.createElement(_AccountSecurity.default, null), {\n    initialState: (0, _unitTestHelpers.createCustomProfileState)()\n  }),\n  getByText = _renderWithProfileRed.getByText;\n(0, _chai.expect)(getByText('Account security')).to.exist;",
              "err": {},
              "uuid": "95564237-8628-4458-8af1-1d526e5d5800",
              "parentUUID": "4aa9b18d-a2d2-4e7f-9368-f740ad0fe7c5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "sets the document title on mount",
              "fullTitle": "AccountSecurity Page sets the document title on mount",
              "timedOut": false,
              "duration": 5,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, _unitTestHelpers.renderWithProfileReducersAndRouter)(/*#__PURE__*/_react.default.createElement(_AccountSecurity.default, null), {\n  initialState: (0, _unitTestHelpers.createCustomProfileState)()\n});\n(0, _chai.expect)(document.title).to.equal('Account Security | Veterans Affairs');",
              "err": {},
              "uuid": "454cde8e-4f27-406a-a506-fb771d447989",
              "parentUUID": "4aa9b18d-a2d2-4e7f-9368-f740ad0fe7c5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "renders main section headings of account security page",
              "fullTitle": "AccountSecurity Page renders main section headings of account security page",
              "timedOut": false,
              "duration": 6,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _renderWithProfileRed2 = (0, _unitTestHelpers.renderWithProfileReducersAndRouter)(/*#__PURE__*/_react.default.createElement(_AccountSecurity.default, null), {\n    initialState: (0, _unitTestHelpers.createCustomProfileState)()\n  }),\n  getByText = _renderWithProfileRed2.getByText;\n(0, _chai.expect)(getByText('Sign-in information')).to.exist;\n(0, _chai.expect)(getByText('Account setup')).to.exist;",
              "err": {},
              "uuid": "1a8aa7c3-816a-4d9b-8c47-7a9ee55710d8",
              "parentUUID": "4aa9b18d-a2d2-4e7f-9368-f740ad0fe7c5",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "95564237-8628-4458-8af1-1d526e5d5800",
            "454cde8e-4f27-406a-a506-fb771d447989",
            "1a8aa7c3-816a-4d9b-8c47-7a9ee55710d8"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 18,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "37485bc2-8ac9-4da5-b5c2-6970c74109d5",
          "title": "AccountSecurityContent component",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/profile/tests/components/account-security/AccountSecurityContent.unit.spec.jsx",
          "file": "/src/applications/personalization/profile/tests/components/account-security/AccountSecurityContent.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [
            {
              "title": "\"after each\" hook: cleanup in \"AccountSecurityContent component\"",
              "fullTitle": "AccountSecurityContent component \"after each\" hook: cleanup in \"AccountSecurityContent component\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "mountedContainers.forEach(cleanupAtContainer);",
              "err": {},
              "uuid": "c5f45a8e-3f10-4f2b-8179-84bdc24c9a67",
              "parentUUID": "37485bc2-8ac9-4da5-b5c2-6970c74109d5",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "renders without crashing",
              "fullTitle": "AccountSecurityContent component renders without crashing",
              "timedOut": false,
              "duration": 9,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _renderWithProfileRed = (0, _unitTestHelpers.renderWithProfileReducersAndRouter)(/*#__PURE__*/_react.default.createElement(_AccountSecurityContent.default, null), {\n    initialState: _objectSpread(_objectSpread({}, (0, _unitTestHelpers.createCustomProfileState)({\n      user: {\n        profile: {\n          signIn: {\n            serviceName: _constants.CSP_IDS.DS_LOGON\n          },\n          loa: {\n            current: 1\n          }\n        }\n      }\n    })), (0, _unitTestHelpers.createFeatureTogglesState)(_defineProperty({}, _featureToggles.Toggler.TOGGLE_NAMES.profileShowCredentialRetirementMessaging, true)))\n  }),\n  getByText = _renderWithProfileRed.getByText;\n(0, _chai.expect)(getByText('Sign-in information')).to.exist;\n(0, _chai.expect)(getByText('Account setup')).to.exist;",
              "err": {},
              "uuid": "48742f3b-da6e-4563-9edd-e210650abaff",
              "parentUUID": "37485bc2-8ac9-4da5-b5c2-6970c74109d5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "renders credential retirement alert when using DS Logon signIn.serviceName",
              "fullTitle": "AccountSecurityContent component renders credential retirement alert when using DS Logon signIn.serviceName",
              "timedOut": false,
              "duration": 7,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _renderWithProfileRed2 = (0, _unitTestHelpers.renderWithProfileReducersAndRouter)(/*#__PURE__*/_react.default.createElement(_AccountSecurityContent.default, null), {\n    initialState: _objectSpread(_objectSpread({}, (0, _unitTestHelpers.createCustomProfileState)({\n      user: {\n        profile: {\n          signIn: {\n            serviceName: _constants.CSP_IDS.DS_LOGON\n          },\n          loa: {\n            current: 1\n          }\n        }\n      }\n    })), (0, _unitTestHelpers.createFeatureTogglesState)(_defineProperty({}, _featureToggles.Toggler.TOGGLE_NAMES.profileShowCredentialRetirementMessaging, true)))\n  }),\n  getByText = _renderWithProfileRed2.getByText;\n(0, _chai.expect)(getByText('Verify your identity with Login.gov or ID.me to manage your profile information', {\n  exact: false\n}), 'heading for alert exists when DS Logon is used').to.exist;\n(0, _chai.expect)(getByText('Starting September 30, 2025, you’ll no longer be able to sign in with your DS Logon username and password.', {\n  exact: false\n}), 'content for alert exists when DS Logon is used').to.exist;",
              "err": {},
              "uuid": "4cd2ff2d-37ad-46c5-8656-b8b9591f04dd",
              "parentUUID": "37485bc2-8ac9-4da5-b5c2-6970c74109d5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "renders credential retirement alert when using MHV signIn.serviceName",
              "fullTitle": "AccountSecurityContent component renders credential retirement alert when using MHV signIn.serviceName",
              "timedOut": false,
              "duration": 7,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _renderWithProfileRed3 = (0, _unitTestHelpers.renderWithProfileReducersAndRouter)(/*#__PURE__*/_react.default.createElement(_AccountSecurityContent.default, null), {\n    initialState: _objectSpread(_objectSpread({}, (0, _unitTestHelpers.createCustomProfileState)({\n      user: {\n        profile: {\n          signIn: {\n            serviceName: _constants.CSP_IDS.MHV\n          },\n          loa: {\n            current: 1\n          }\n        }\n      }\n    })), (0, _unitTestHelpers.createFeatureTogglesState)(_defineProperty({}, _featureToggles.Toggler.TOGGLE_NAMES.profileShowCredentialRetirementMessaging, true)))\n  }),\n  getByText = _renderWithProfileRed3.getByText;\n(0, _chai.expect)(getByText('Verify your identity with Login.gov or ID.me to manage your profile information', {\n  exact: false\n}), 'heading for alert exists when MHV is used').to.exist;\n(0, _chai.expect)(getByText('Starting January 31, 2025, you’ll no longer be able to sign in with your My HealtheVet username and password.', {\n  exact: false\n}), 'content for alert exists when MHV is used').to.exist;",
              "err": {},
              "uuid": "79a89daa-3a2a-49cb-8f80-3fda8f6819a8",
              "parentUUID": "37485bc2-8ac9-4da5-b5c2-6970c74109d5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "renders regular identity not verified alert when user is not verified and id.me",
              "fullTitle": "AccountSecurityContent component renders regular identity not verified alert when user is not verified and id.me",
              "timedOut": false,
              "duration": 6,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _renderWithProfileRed4 = (0, _unitTestHelpers.renderWithProfileReducersAndRouter)(/*#__PURE__*/_react.default.createElement(_AccountSecurityContent.default, null), {\n    initialState: _objectSpread(_objectSpread({}, (0, _unitTestHelpers.createCustomProfileState)({\n      user: {\n        profile: {\n          signIn: {\n            serviceName: _constants.CSP_IDS.ID_ME\n          },\n          loa: {\n            current: 1\n          }\n        }\n      }\n    })), (0, _unitTestHelpers.createFeatureTogglesState)(_defineProperty({}, _featureToggles.Toggler.TOGGLE_NAMES.profileShowCredentialRetirementMessaging, false)))\n  }),\n  container = _renderWithProfileRed4.container;\nvar alert = container.querySelector('va-alert-sign-in');\n(0, _chai.expect)(alert).to.exist;\n(0, _chai.expect)(alert.getAttribute('variant')).to.eql('verifyIdMe');",
              "err": {},
              "uuid": "bb8f9ec2-71f8-406b-9cf4-89781b806e8f",
              "parentUUID": "37485bc2-8ac9-4da5-b5c2-6970c74109d5",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "48742f3b-da6e-4563-9edd-e210650abaff",
            "4cd2ff2d-37ad-46c5-8656-b8b9591f04dd",
            "79a89daa-3a2a-49cb-8f80-3fda8f6819a8",
            "bb8f9ec2-71f8-406b-9cf4-89781b806e8f"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 29,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "88d04821-43d0-46ef-b82e-cf08ab9841bf",
          "title": "authenticated experience -- profile -- bad address alert",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/profile/tests/components/alerts/bad-address/bad-address-alerts.unit.spec.jsx",
          "file": "/src/applications/personalization/profile/tests/components/alerts/bad-address/bad-address-alerts.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "d01e0881-a0dd-429c-abbd-31aeee579196",
              "title": "ProfileAlert",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/profile/tests/components/alerts/bad-address/bad-address-alerts.unit.spec.jsx",
              "file": "/src/applications/personalization/profile/tests/components/alerts/bad-address/bad-address-alerts.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "passes axeCheck",
                  "fullTitle": "authenticated experience -- profile -- bad address alert ProfileAlert passes axeCheck",
                  "timedOut": false,
                  "duration": 154,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var _renderWithStoreAndRo = (0, _reactTestingLibraryHelpers.renderWithStoreAndRouter)(/*#__PURE__*/_react.default.createElement(_ProfileAlert.default, null), {\n    path: _constants.PROFILE_PATHS.PROFILE_ROOT\n  }),\n  container = _renderWithStoreAndRo.container;\nreturn (0, _helpers.axeCheck)(/*#__PURE__*/_react.default.createElement(\"container\", null));",
                  "err": {},
                  "uuid": "df54b93b-e3a7-4312-bc64-385696c5b03a",
                  "parentUUID": "d01e0881-a0dd-429c-abbd-31aeee579196",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "has accessibility considerations including alert role and aria-live",
                  "fullTitle": "authenticated experience -- profile -- bad address alert ProfileAlert has accessibility considerations including alert role and aria-live",
                  "timedOut": false,
                  "duration": 7,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
                  "err": {},
                  "uuid": "cd215669-d9fe-43fc-a312-72cba7b72952",
                  "parentUUID": "d01e0881-a0dd-429c-abbd-31aeee579196",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "df54b93b-e3a7-4312-bc64-385696c5b03a",
                "cd215669-d9fe-43fc-a312-72cba7b72952"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 161,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "78ede586-3e41-4c04-9c81-217611cd316e",
              "title": "FormAlert",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/profile/tests/components/alerts/bad-address/bad-address-alerts.unit.spec.jsx",
              "file": "/src/applications/personalization/profile/tests/components/alerts/bad-address/bad-address-alerts.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "passes axeCheck",
                  "fullTitle": "authenticated experience -- profile -- bad address alert FormAlert passes axeCheck",
                  "timedOut": false,
                  "duration": 40,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _helpers.axeCheck)(/*#__PURE__*/_react.default.createElement(_FormAlert.default, null));",
                  "err": {},
                  "uuid": "03a56802-5902-4871-bd36-2c0334ba4858",
                  "parentUUID": "78ede586-3e41-4c04-9c81-217611cd316e",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "03a56802-5902-4871-bd36-2c0334ba4858"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 40,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "588233bf-2a5e-4f08-80a0-13c3604a016d",
          "title": "ContactInfoNeeded",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/profile/tests/components/alerts/ContactInfoNeeded.unit.spec.jsx",
          "file": "/src/applications/personalization/profile/tests/components/alerts/ContactInfoNeeded.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [
            {
              "title": "\"after each\" hook: cleanup in \"ContactInfoNeeded\"",
              "fullTitle": "ContactInfoNeeded \"after each\" hook: cleanup in \"ContactInfoNeeded\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "mountedContainers.forEach(cleanupAtContainer);",
              "err": {},
              "uuid": "8c465b6e-a03c-484b-82c5-8f5d97bcb774",
              "parentUUID": "588233bf-2a5e-4f08-80a0-13c3604a016d",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "renders alert when email address is missing",
              "fullTitle": "ContactInfoNeeded renders alert when email address is missing",
              "timedOut": false,
              "duration": 7,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var initialState = _objectSpread(_objectSpread({}, (0, _unitTestHelpers.createCustomProfileState)({\n  user: {\n    profile: {\n      vapContactInfo: _objectSpread(_objectSpread({}, (0, _unitTestHelpers.getBasicContactInfoState)()), {}, {\n        email: {\n          createdAt: '2020-07-30T23:38:04.000+00:00',\n          emailAddress: null,\n          // email address is missing\n          effectiveEndDate: null,\n          effectiveStartDate: '2020-07-30T23:38:03.000+00:00',\n          id: 115097,\n          sourceDate: '2020-07-30T23:38:03.000+00:00',\n          sourceSystemUser: null,\n          transactionId: '604abf55-422b-4f51-b33d-9fb38b4daad1',\n          updatedAt: '2020-07-30T23:38:04.000+00:00',\n          vet360Id: '1273780'\n        }\n      })\n    }\n  }\n})), {}, {\n  featureToggles: _defineProperty({}, _Toggler.Toggler.TOGGLE_NAMES.veteranOnboardingContactInfoFlow, true)\n});\nvar tree = (0, _reactTestingLibraryHelpers.renderWithStoreAndRouter)(/*#__PURE__*/_react.default.createElement(_ContactInfoNeeded.ContactInfoNeeded, null), {\n  initialState: initialState\n});\n(0, _chai.expect)(tree.getByText('We need your contact information')).to.exist;",
              "err": {},
              "uuid": "da53931f-42c8-409e-8a65-708628b51dea",
              "parentUUID": "588233bf-2a5e-4f08-80a0-13c3604a016d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "does not render alert when email address is present",
              "fullTitle": "ContactInfoNeeded does not render alert when email address is present",
              "timedOut": false,
              "duration": 4,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var initialState = _objectSpread(_objectSpread({}, (0, _unitTestHelpers.createCustomProfileState)()), {}, {\n  featureToggles: _defineProperty({}, _Toggler.Toggler.TOGGLE_NAMES.veteranOnboardingContactInfoFlow, true)\n});\nvar tree = (0, _reactTestingLibraryHelpers.renderWithStoreAndRouter)(/*#__PURE__*/_react.default.createElement(_ContactInfoNeeded.ContactInfoNeeded, null), {\n  initialState: initialState\n});\n(0, _chai.expect)(tree.queryByText('Are you the dependent?')).not.to.exist;",
              "err": {},
              "uuid": "86ba0982-4fc2-4cb9-954c-106e73aa04ed",
              "parentUUID": "588233bf-2a5e-4f08-80a0-13c3604a016d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "da53931f-42c8-409e-8a65-708628b51dea",
            "86ba0982-4fc2-4cb9-954c-106e73aa04ed"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 11,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "00ae46e0-cc04-4d9d-a7c7-ee050cc49d06",
          "title": "AccountSecurityLoa1CredAlert",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/profile/tests/components/alerts/CredentialRetirementAlerts.unit.spec.jsx",
          "file": "/src/applications/personalization/profile/tests/components/alerts/CredentialRetirementAlerts.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [
            {
              "title": "\"after each\" hook: cleanup in \"AccountSecurityLoa1CredAlert\"",
              "fullTitle": "AccountSecurityLoa1CredAlert \"after each\" hook: cleanup in \"AccountSecurityLoa1CredAlert\"",
              "timedOut": false,
              "duration": 1,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "mountedContainers.forEach(cleanupAtContainer);",
              "err": {},
              "uuid": "2f67902a-46cf-4b81-bc0e-fd30f14ff724",
              "parentUUID": "00ae46e0-cc04-4d9d-a7c7-ee050cc49d06",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "renders alert with DS_LOGON service provider in text",
              "fullTitle": "AccountSecurityLoa1CredAlert renders alert with DS_LOGON service provider in text",
              "timedOut": false,
              "duration": 7,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _renderWithProfileRed = (0, _unitTestHelpers.renderWithProfileReducersAndRouter)(/*#__PURE__*/_react.default.createElement(_CredentialRetirementAlerts.AccountSecurityLoa1CredAlert, null), {\n    initialState: (0, _unitTestHelpers.createCustomProfileState)({\n      user: {\n        profile: {\n          signIn: {\n            serviceName: _constants.CSP_IDS.DS_LOGON\n          }\n        }\n      }\n    })\n  }),\n  getByText = _renderWithProfileRed.getByText;\n(0, _chai.expect)(getByText('sign in with your DS Logon username and password', {\n  exact: false\n})).to.exist;",
              "err": {},
              "uuid": "08979765-b239-4044-a5a5-ceaab6339b91",
              "parentUUID": "00ae46e0-cc04-4d9d-a7c7-ee050cc49d06",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "renders alert with MHV service provider in text",
              "fullTitle": "AccountSecurityLoa1CredAlert renders alert with MHV service provider in text",
              "timedOut": false,
              "duration": 5,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _renderWithProfileRed2 = (0, _unitTestHelpers.renderWithProfileReducersAndRouter)(/*#__PURE__*/_react.default.createElement(_CredentialRetirementAlerts.AccountSecurityLoa1CredAlert, null), {\n    initialState: (0, _unitTestHelpers.createCustomProfileState)({\n      user: {\n        profile: {\n          signIn: {\n            serviceName: _constants.CSP_IDS.MHV\n          }\n        }\n      }\n    })\n  }),\n  getByText = _renderWithProfileRed2.getByText;\n(0, _chai.expect)(getByText('sign in with your My HealtheVet username and password', {\n  exact: false\n})).to.exist;",
              "err": {},
              "uuid": "d8137d71-92ba-4c6e-a958-3265bf982ff2",
              "parentUUID": "00ae46e0-cc04-4d9d-a7c7-ee050cc49d06",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "08979765-b239-4044-a5a5-ceaab6339b91",
            "d8137d71-92ba-4c6e-a958-3265bf982ff2"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 12,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "8478c9cc-f13e-4283-8e9d-a54e7eccfb0e",
          "title": "SignInEmailAlert",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/profile/tests/components/alerts/CredentialRetirementAlerts.unit.spec.jsx",
          "file": "/src/applications/personalization/profile/tests/components/alerts/CredentialRetirementAlerts.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [
            {
              "title": "\"after each\" hook: cleanup in \"SignInEmailAlert\"",
              "fullTitle": "SignInEmailAlert \"after each\" hook: cleanup in \"SignInEmailAlert\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "mountedContainers.forEach(cleanupAtContainer);",
              "err": {},
              "uuid": "77f1b39e-4262-436d-aa6c-9c366e4ae8d4",
              "parentUUID": "8478c9cc-f13e-4283-8e9d-a54e7eccfb0e",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "renders alert with DS_LOGON service provider in text",
              "fullTitle": "SignInEmailAlert renders alert with DS_LOGON service provider in text",
              "timedOut": false,
              "duration": 5,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _renderWithProfileRed3 = (0, _unitTestHelpers.renderWithProfileReducersAndRouter)(/*#__PURE__*/_react.default.createElement(_CredentialRetirementAlerts.SignInEmailAlert, null), {\n    initialState: (0, _unitTestHelpers.createCustomProfileState)({\n      user: {\n        profile: {\n          signIn: {\n            serviceName: _constants.CSP_IDS.DS_LOGON\n          }\n        }\n      }\n    })\n  }),\n  getByText = _renderWithProfileRed3.getByText;\n(0, _chai.expect)(getByText('sign in with your DS Logon username and password', {\n  exact: false\n})).to.exist;",
              "err": {},
              "uuid": "493b1a6d-73a4-4d25-9d0a-11a449c4fdcb",
              "parentUUID": "8478c9cc-f13e-4283-8e9d-a54e7eccfb0e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "renders alert with MHV service provider in text",
              "fullTitle": "SignInEmailAlert renders alert with MHV service provider in text",
              "timedOut": false,
              "duration": 7,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _renderWithProfileRed4 = (0, _unitTestHelpers.renderWithProfileReducersAndRouter)(/*#__PURE__*/_react.default.createElement(_CredentialRetirementAlerts.SignInEmailAlert, null), {\n    initialState: (0, _unitTestHelpers.createCustomProfileState)({\n      user: {\n        profile: {\n          signIn: {\n            serviceName: _constants.CSP_IDS.MHV\n          }\n        }\n      }\n    })\n  }),\n  getByText = _renderWithProfileRed4.getByText;\n(0, _chai.expect)(getByText('sign in with your My HealtheVet username and password', {\n  exact: false\n})).to.exist;",
              "err": {},
              "uuid": "4b1fba98-53d7-440f-8da5-349bd096f1ca",
              "parentUUID": "8478c9cc-f13e-4283-8e9d-a54e7eccfb0e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "493b1a6d-73a4-4d25-9d0a-11a449c4fdcb",
            "4b1fba98-53d7-440f-8da5-349bd096f1ca"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 12,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "45772561-c7c0-49b9-8595-e30f07438e4a",
          "title": "<FieldHasBeenUpdated />",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/profile/tests/components/alerts/FieldHasBeenUpdated.unit.spec.jsx",
          "file": "/src/applications/personalization/profile/tests/components/alerts/FieldHasBeenUpdated.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [
            {
              "title": "\"after each\" hook in \"<FieldHasBeenUpdated />\"",
              "fullTitle": "<FieldHasBeenUpdated /> \"after each\" hook in \"<FieldHasBeenUpdated />\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "historyMock = null;",
              "err": {},
              "uuid": "6470fd9b-c9d4-4332-88a2-df32f5f17198",
              "parentUUID": "45772561-c7c0-49b9-8595-e30f07438e4a",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "renders the alert with the correct message when fieldInfo is present in location state",
              "fullTitle": "<FieldHasBeenUpdated /> renders the alert with the correct message when fieldInfo is present in location state",
              "timedOut": false,
              "duration": 3,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _renderWithRouter = renderWithRouter({\n    fieldInfo: {\n      title: 'Test Field'\n    }\n  }),\n  getByText = _renderWithRouter.getByText;\n(0, _chai.expect)(getByText('We saved your test field to your profile.')).to.exist;",
              "err": {},
              "uuid": "735f46b8-6b2e-4a4e-9722-0c692834e2e6",
              "parentUUID": "45772561-c7c0-49b9-8595-e30f07438e4a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "renders the alert with the fallback text message when fieldInfo title is not present in location state",
              "fullTitle": "<FieldHasBeenUpdated /> renders the alert with the fallback text message when fieldInfo title is not present in location state",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _renderWithRouter2 = renderWithRouter({\n    fieldInfo: {\n      title: null\n    }\n  }),\n  getByText = _renderWithRouter2.getByText;\n(0, _chai.expect)(getByText('We saved your information to your profile.')).to.exist;",
              "err": {},
              "uuid": "dcb1c0bc-4b46-442a-86fb-cdeb3c094dfe",
              "parentUUID": "45772561-c7c0-49b9-8595-e30f07438e4a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "does not render the alert when fieldInfo is not present in location state",
              "fullTitle": "<FieldHasBeenUpdated /> does not render the alert when fieldInfo is not present in location state",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _renderWithRouter3 = renderWithRouter(),\n  queryByText = _renderWithRouter3.queryByText;\n(0, _chai.expect)(queryByText('We saved your')).to.be.null;",
              "err": {},
              "uuid": "72060e6a-734f-4484-8715-d18b68711508",
              "parentUUID": "45772561-c7c0-49b9-8595-e30f07438e4a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "clears the location state after the alert is shown",
              "fullTitle": "<FieldHasBeenUpdated /> clears the location state after the alert is shown",
              "timedOut": false,
              "duration": 3,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
              "err": {},
              "uuid": "7aedb0e0-6268-4ec0-85b3-da3ab69aa109",
              "parentUUID": "45772561-c7c0-49b9-8595-e30f07438e4a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "735f46b8-6b2e-4a4e-9722-0c692834e2e6",
            "dcb1c0bc-4b46-442a-86fb-cdeb3c094dfe",
            "72060e6a-734f-4484-8715-d18b68711508",
            "7aedb0e0-6268-4ec0-85b3-da3ab69aa109"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 10,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "365fe8ca-0df1-43e3-a525-df535f5eee66",
          "title": "SingleFieldLoadFailAlert",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/profile/tests/components/alerts/LoadFail.SingleFieldLoadFailAlert.unit.spec.js",
          "file": "/src/applications/personalization/profile/tests/components/alerts/LoadFail.SingleFieldLoadFailAlert.unit.spec.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"SingleFieldLoadFailAlert\"",
              "fullTitle": "SingleFieldLoadFailAlert \"before each\" hook in \"SingleFieldLoadFailAlert\"",
              "timedOut": false,
              "duration": 1,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "consoleWarnStub = _sinon.default.spy(console, 'warn');",
              "err": {},
              "uuid": "ae83cc6f-9076-442e-b33d-bb904ce883d3",
              "parentUUID": "365fe8ca-0df1-43e3-a525-df535f5eee66",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after each\" hook in \"SingleFieldLoadFailAlert\"",
              "fullTitle": "SingleFieldLoadFailAlert \"after each\" hook in \"SingleFieldLoadFailAlert\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "consoleWarnStub.restore();",
              "err": {},
              "uuid": "5cecdd02-6349-42a5-98eb-bafa5694d3fc",
              "parentUUID": "365fe8ca-0df1-43e3-a525-df535f5eee66",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "renders default failure message when no props are passed",
              "fullTitle": "SingleFieldLoadFailAlert renders default failure message when no props are passed",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var view = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_LoadFail.SingleFieldLoadFailAlert, null));\n(0, _chai.expect)(view.getByText('We’re sorry. We can’t access this information right now. Please refresh the page or try again.')).to.exist;",
              "err": {},
              "uuid": "901164bc-e142-4656-ba7a-d89da431bdd2",
              "parentUUID": "365fe8ca-0df1-43e3-a525-df535f5eee66",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "renders children when passed",
              "fullTitle": "SingleFieldLoadFailAlert renders children when passed",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var view = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_LoadFail.SingleFieldLoadFailAlert, null, \"Custom message\"));\n(0, _chai.expect)(view.getByText('Custom message')).to.exist;",
              "err": {},
              "uuid": "9ece2536-117d-40b1-9081-f2529b09c90e",
              "parentUUID": "365fe8ca-0df1-43e3-a525-df535f5eee66",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "renders failure message with section name when passed",
              "fullTitle": "SingleFieldLoadFailAlert renders failure message with section name when passed",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var view = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_LoadFail.SingleFieldLoadFailAlert, {\n  sectionName: \"section1\"\n}));\n(0, _chai.expect)(view.getByText('We’re sorry. Something went wrong on our end and we can’t load your section1. Please try again later.')).to.exist;",
              "err": {},
              "uuid": "3231c394-2bf1-4eb8-b8af-70239bcac08d",
              "parentUUID": "365fe8ca-0df1-43e3-a525-df535f5eee66",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "console.warn is called when both sectionName and children are passed",
              "fullTitle": "SingleFieldLoadFailAlert console.warn is called when both sectionName and children are passed",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, _react2.render)(/*#__PURE__*/_react.default.createElement(_LoadFail.SingleFieldLoadFailAlert, {\n  sectionName: \"section1\"\n}, \"Custom message\"));\n(0, _chai.expect)(consoleWarnStub.calledOnce);",
              "err": {},
              "uuid": "e514d663-7107-4494-bd9c-cca72a266331",
              "parentUUID": "365fe8ca-0df1-43e3-a525-df535f5eee66",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "console.warn is called when sectionName is not a string",
              "fullTitle": "SingleFieldLoadFailAlert console.warn is called when sectionName is not a string",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, _react2.render)(/*#__PURE__*/_react.default.createElement(_LoadFail.SingleFieldLoadFailAlert, {\n  sectionName: 1\n}));\n(0, _chai.expect)(consoleWarnStub.calledOnce);",
              "err": {},
              "uuid": "b716d83a-2554-432b-9cd8-bbd5a1b27a53",
              "parentUUID": "365fe8ca-0df1-43e3-a525-df535f5eee66",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "901164bc-e142-4656-ba7a-d89da431bdd2",
            "9ece2536-117d-40b1-9081-f2529b09c90e",
            "3231c394-2bf1-4eb8-b8af-70239bcac08d",
            "e514d663-7107-4494-bd9c-cca72a266331",
            "b716d83a-2554-432b-9cd8-bbd5a1b27a53"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 8,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "47b5f31e-2873-451f-b7b2-8e70ea460a0c",
          "title": "Connected Apps actions",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/profile/tests/components/connected-apps/actions.unit.spec.js",
          "file": "/src/applications/personalization/profile/tests/components/connected-apps/actions.unit.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "8ea62bf3-ea67-4e52-9b06-01049516c965",
              "title": "loadConnectedApps",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/profile/tests/components/connected-apps/actions.unit.spec.js",
              "file": "/src/applications/personalization/profile/tests/components/connected-apps/actions.unit.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "creates the correct action when the call succeeds",
                  "fullTitle": "Connected Apps actions loadConnectedApps creates the correct action when the call succeeds",
                  "timedOut": false,
                  "duration": 7,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
                  "err": {},
                  "uuid": "a1e99ddb-b2eb-455a-bae8-6f504dfef506",
                  "parentUUID": "8ea62bf3-ea67-4e52-9b06-01049516c965",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "creates the correct action when the call fails",
                  "fullTitle": "Connected Apps actions loadConnectedApps creates the correct action when the call fails",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
                  "err": {},
                  "uuid": "ec0fb467-b712-4e58-b289-5d02bcb7b28c",
                  "parentUUID": "8ea62bf3-ea67-4e52-9b06-01049516c965",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "a1e99ddb-b2eb-455a-bae8-6f504dfef506",
                "ec0fb467-b712-4e58-b289-5d02bcb7b28c"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 10,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "e3de90c7-3653-414c-ac93-5cc763a7ea2b",
              "title": "deleteConnectedApp",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/profile/tests/components/connected-apps/actions.unit.spec.js",
              "file": "/src/applications/personalization/profile/tests/components/connected-apps/actions.unit.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "creates the correct action when the call succeeds",
                  "fullTitle": "Connected Apps actions deleteConnectedApp creates the correct action when the call succeeds",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
                  "err": {},
                  "uuid": "1ccaa6bb-f885-4440-b7ee-9b167272e89b",
                  "parentUUID": "e3de90c7-3653-414c-ac93-5cc763a7ea2b",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "creates the correct action when the call fails",
                  "fullTitle": "Connected Apps actions deleteConnectedApp creates the correct action when the call fails",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
                  "err": {},
                  "uuid": "b1ef3c31-1d27-4ec9-b84c-203e65efc885",
                  "parentUUID": "e3de90c7-3653-414c-ac93-5cc763a7ea2b",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "1ccaa6bb-f885-4440-b7ee-9b167272e89b",
                "b1ef3c31-1d27-4ec9-b84c-203e65efc885"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 3,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "4175e373-692b-44ff-bb21-b8a5e7fbb074",
              "title": "dismissDeletedAppAlert",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/profile/tests/components/connected-apps/actions.unit.spec.js",
              "file": "/src/applications/personalization/profile/tests/components/connected-apps/actions.unit.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "creates the correct action",
                  "fullTitle": "Connected Apps actions dismissDeletedAppAlert creates the correct action",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
                  "err": {},
                  "uuid": "ccf4eeb7-f9a4-4c13-94d9-4833419fd1fb",
                  "parentUUID": "4175e373-692b-44ff-bb21-b8a5e7fbb074",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "ccf4eeb7-f9a4-4c13-94d9-4833419fd1fb"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "4881bc78-d0a5-4876-86fc-27ea09ef5169",
          "title": "<AppDeletedAlert>",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/profile/tests/components/connected-apps/AppDeletedAlert.unit.spec.jsx",
          "file": "/src/applications/personalization/profile/tests/components/connected-apps/AppDeletedAlert.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "renders correctly",
              "fullTitle": "<AppDeletedAlert> renders correctly",
              "timedOut": false,
              "duration": 6,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var privacyUrl = 'https://www.apple.com/legal/privacy/';\nvar defaultProps = {\n  id: '',\n  title: 'Apple Health',\n  dismissAlert: function dismissAlert() {},\n  privacyUrl: privacyUrl\n};\nvar view = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_AppDeletedAlert.AppDeletedAlert, defaultProps));\n(0, _chai.expect)(view.getByText(/If you have questions about data the app has already collected/i)).to.exist;\nvar link = view.getByRole('link');\n(0, _chai.expect)(link).to.have.attribute('href', privacyUrl);",
              "err": {},
              "uuid": "fd4610cc-e810-4702-80b8-674807c0cc0c",
              "parentUUID": "4881bc78-d0a5-4876-86fc-27ea09ef5169",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "fd4610cc-e810-4702-80b8-674807c0cc0c"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 6,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "095f0967-3e2e-4c6e-9488-3007cd29b79e",
          "title": "<ConnectedApp>",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/profile/tests/components/connected-apps/ConnectedApp.unit.spec.jsx",
          "file": "/src/applications/personalization/profile/tests/components/connected-apps/ConnectedApp.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "renders correctly",
              "fullTitle": "<ConnectedApp> renders correctly",
              "timedOut": false,
              "duration": 7,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
              "err": {},
              "uuid": "daa60cfc-69e4-493a-befc-551924943513",
              "parentUUID": "095f0967-3e2e-4c6e-9488-3007cd29b79e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "daa60cfc-69e4-493a-befc-551924943513"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 7,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "8058cb8b-ade6-411a-a264-58a6e0beb4da",
          "title": "<ConnectedAppDeleteModal />",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/profile/tests/components/connected-apps/ConnectedAppDeleteModal.unit.spec.jsx",
          "file": "/src/applications/personalization/profile/tests/components/connected-apps/ConnectedAppDeleteModal.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "renders the modal and content",
              "fullTitle": "<ConnectedAppDeleteModal /> renders the modal and content",
              "timedOut": false,
              "duration": 4,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var view = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_ConnectedAppDeleteModal.ConnectedAppDeleteModal, defaultProps));\n(0, _chai.expect)(view.container.querySelector('va-modal')).to.exist;\n(0, _chai.expect)(view.container.querySelector('va-modal[modal-title=\"Disconnect app?\"]')).to.exist;\n(0, _chai.expect)(view.getByText(/This may affect how useful the app is to you./i)).to.exist;",
              "err": {},
              "uuid": "1722fb6a-55a1-47d1-8787-123ea1982ab1",
              "parentUUID": "8058cb8b-ade6-411a-a264-58a6e0beb4da",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "renders the buttons correctly when not deleting",
              "fullTitle": "<ConnectedAppDeleteModal /> renders the buttons correctly when not deleting",
              "timedOut": false,
              "duration": 3,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var view = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_ConnectedAppDeleteModal.ConnectedAppDeleteModal, defaultProps));\n(0, _chai.expect)((0, _unitHelpers.getVaButtonByText)('Disconnect', view)).to.be.ok;\n(0, _chai.expect)((0, _unitHelpers.getVaButtonByText)('No, cancel this change', view)).to.be.ok;",
              "err": {},
              "uuid": "45f3d70b-1fde-483b-ad1f-b9b309f4d8fe",
              "parentUUID": "8058cb8b-ade6-411a-a264-58a6e0beb4da",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "renders a disabled button when deleting",
              "fullTitle": "<ConnectedAppDeleteModal /> renders a disabled button when deleting",
              "timedOut": false,
              "duration": 5,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var view = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_ConnectedAppDeleteModal.ConnectedAppDeleteModal, _extends({}, defaultProps, {\n  deleting: true\n})));\n(0, _chai.expect)((0, _unitHelpers.getVaButtonByText)('Processing update...', view)).to.exist;",
              "err": {},
              "uuid": "22fce869-4f94-45be-9d4c-6031d64a5dfa",
              "parentUUID": "8058cb8b-ade6-411a-a264-58a6e0beb4da",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "1722fb6a-55a1-47d1-8787-123ea1982ab1",
            "45f3d70b-1fde-483b-ad1f-b9b309f4d8fe",
            "22fce869-4f94-45be-9d4c-6031d64a5dfa"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 12,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "b566f5de-6710-4a86-a7e4-2c7b732ed73d",
          "title": "<ConnectedApps>",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/profile/tests/components/connected-apps/ConnectedApps.unit.spec.jsx",
          "file": "/src/applications/personalization/profile/tests/components/connected-apps/ConnectedApps.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "renders correctly with apps",
              "fullTitle": "<ConnectedApps> renders correctly with apps",
              "timedOut": false,
              "duration": 8,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var defaultProps = {\n  apps: [{\n    deleted: true\n  }, {\n    deleted: false\n  }],\n  loading: false,\n  loadConnectedApps: function loadConnectedApps() {},\n  deleteConnectedApp: function deleteConnectedApp() {},\n  dismissDeletedAppAlert: function dismissDeletedAppAlert() {}\n};\nvar wrapper = (0, _enzyme.shallow)(/*#__PURE__*/_react.default.createElement(_ConnectedApps.ConnectedApps, defaultProps));\nvar headline = wrapper.find('ProfileSectionHeadline');\n(0, _chai.expect)(headline.dive().text()).to.equal(title);\nvar text = wrapper.text();\n(0, _chai.expect)(text).to.include('Your VA.gov profile is connected to the third-party (non-VA) apps listed below. If you want to stop sharing information with an app, you can disconnect it from your profile at any time.');\n(0, _chai.expect)(text).to.not.include(appInfoText);\n(0, _chai.expect)(text).to.not.include(loadingAppsText);\n(0, _chai.expect)(text).to.not.include(noAppsConnectedText);\n(0, _chai.expect)(text).to.not.include(goToAppDirectoryText);\n(0, _chai.expect)(text).to.include(moreQuestionsText);\nwrapper.unmount();",
              "err": {},
              "uuid": "5d1141bf-6071-4ebd-b804-f6f37b3879c2",
              "parentUUID": "b566f5de-6710-4a86-a7e4-2c7b732ed73d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "renders correctly with all deleted apps",
              "fullTitle": "<ConnectedApps> renders correctly with all deleted apps",
              "timedOut": false,
              "duration": 9,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var defaultProps = {\n  apps: [{\n    deleted: true\n  }, {\n    deleted: true\n  }],\n  loading: false,\n  loadConnectedApps: function loadConnectedApps() {},\n  deleteConnectedApp: function deleteConnectedApp() {},\n  dismissDeletedAppAlert: function dismissDeletedAppAlert() {}\n};\nvar wrapper = (0, _enzyme.mount)(/*#__PURE__*/_react.default.createElement(_ConnectedApps.ConnectedApps, defaultProps));\nvar text = wrapper.text();\n(0, _chai.expect)(text).to.include(title);\n(0, _chai.expect)(text).to.include(appInfoText);\n(0, _chai.expect)(text).to.not.include(loadingAppsText);\n(0, _chai.expect)(text).to.include(convenienceText);\n(0, _chai.expect)(text).to.include(noAppsConnectedText);\n(0, _chai.expect)(text).to.include(goToAppDirectoryText);\n(0, _chai.expect)(text).not.to.include(otherAppsText);\n(0, _chai.expect)(text).to.include(moreQuestionsText);\nwrapper.unmount();",
              "err": {},
              "uuid": "3916125f-81bb-4fd7-9ebf-29abe57ef2e0",
              "parentUUID": "b566f5de-6710-4a86-a7e4-2c7b732ed73d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "renders correctly when Record not found error is thrown",
              "fullTitle": "<ConnectedApps> renders correctly when Record not found error is thrown",
              "timedOut": false,
              "duration": 4,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var defaultProps = {\n  errors: [{\n    title: 'Some server error',\n    detail: 'Some server error',\n    code: '404',\n    status: '404'\n  }, {\n    title: 'Record not found',\n    detail: 'The record identified by 0000 could not be found',\n    code: '404',\n    status: '404'\n  }],\n  loadConnectedApps: function loadConnectedApps() {},\n  deleteConnectedApp: function deleteConnectedApp() {},\n  dismissDeletedAppAlert: function dismissDeletedAppAlert() {}\n};\nvar wrapper = (0, _enzyme.mount)(/*#__PURE__*/_react.default.createElement(_ConnectedApps.ConnectedApps, defaultProps));\nvar text = wrapper.text();\n(0, _chai.expect)(text).to.include(title);\n(0, _chai.expect)(text).to.include(appInfoText);\n(0, _chai.expect)(text).to.not.include(loadingAppsText);\n(0, _chai.expect)(text).to.include(convenienceText);\n(0, _chai.expect)(text).to.include(noAppsConnectedText);\n(0, _chai.expect)(text).to.include(goToAppDirectoryText);\n(0, _chai.expect)(text).not.to.include(otherAppsText);\n(0, _chai.expect)(text).to.include(moreQuestionsText);\nwrapper.unmount();",
              "err": {},
              "uuid": "ab2095df-c41d-4d2c-9acd-b45cf652f31f",
              "parentUUID": "b566f5de-6710-4a86-a7e4-2c7b732ed73d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "renders correctly when loading",
              "fullTitle": "<ConnectedApps> renders correctly when loading",
              "timedOut": false,
              "duration": 6,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var defaultProps = {\n  apps: [{\n    deleted: true\n  }, {\n    deleted: true\n  }],\n  loading: true,\n  loadConnectedApps: function loadConnectedApps() {},\n  deleteConnectedApp: function deleteConnectedApp() {},\n  dismissDeletedAppAlert: function dismissDeletedAppAlert() {}\n};\nvar wrapper = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_ConnectedApps.ConnectedApps, defaultProps));\n// making sure the loading indicator web component is present\n(0, _chai.expect)(wrapper.getByTestId('connected-apps-loading-indicator')).to.exist;\nwrapper.unmount();",
              "err": {},
              "uuid": "77773f92-75e3-42fe-a30e-67d466ead5ce",
              "parentUUID": "b566f5de-6710-4a86-a7e4-2c7b732ed73d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "5d1141bf-6071-4ebd-b804-f6f37b3879c2",
            "3916125f-81bb-4fd7-9ebf-29abe57ef2e0",
            "ab2095df-c41d-4d2c-9acd-b45cf652f31f",
            "77773f92-75e3-42fe-a30e-67d466ead5ce"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 27,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "162a0114-bd9a-4bc0-8339-3198eb302a60",
          "title": "Connected Apps reducer",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/profile/tests/components/connected-apps/reducer.unit.spec.js",
          "file": "/src/applications/personalization/profile/tests/components/connected-apps/reducer.unit.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "returns the initial state",
              "fullTitle": "Connected Apps reducer returns the initial state",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var action = {};\nvar state = (0, _connectedApps.default)(undefined, action);\n(0, _chai.expect)(state).to.be.deep.equal({\n  apps: [],\n  errors: [],\n  loading: false\n});",
              "err": {},
              "uuid": "c63811ff-0293-4637-b7cf-d666894c14d1",
              "parentUUID": "162a0114-bd9a-4bc0-8339-3198eb302a60",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "handles the action type LOADING_CONNECTED_APPS",
              "fullTitle": "Connected Apps reducer handles the action type LOADING_CONNECTED_APPS",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var action = {\n  type: _actions.LOADING_CONNECTED_APPS\n};\nvar state = (0, _connectedApps.default)(undefined, action);\n(0, _chai.expect)(state).to.be.deep.equal({\n  apps: [],\n  errors: [],\n  loading: true\n});",
              "err": {},
              "uuid": "cfe8e140-5700-4c0f-a7bc-5a022b696770",
              "parentUUID": "162a0114-bd9a-4bc0-8339-3198eb302a60",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "handles the action type FINISHED_LOADING_CONNECTED_APPS",
              "fullTitle": "Connected Apps reducer handles the action type FINISHED_LOADING_CONNECTED_APPS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var action = {\n  data: ['hello'],\n  type: _actions.FINISHED_LOADING_CONNECTED_APPS\n};\nvar state = (0, _connectedApps.default)(undefined, action);\n(0, _chai.expect)(state).to.be.deep.equal({\n  apps: ['hello'],\n  errors: [],\n  loading: false\n});",
              "err": {},
              "uuid": "51101fff-e4b2-4c0f-ad71-9252d377c437",
              "parentUUID": "162a0114-bd9a-4bc0-8339-3198eb302a60",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "handles the action type ERROR_LOADING_CONNECTED_APPS",
              "fullTitle": "Connected Apps reducer handles the action type ERROR_LOADING_CONNECTED_APPS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var action = {\n  errors: ['hello'],\n  type: _actions.ERROR_LOADING_CONNECTED_APPS\n};\nvar state = (0, _connectedApps.default)(undefined, action);\n(0, _chai.expect)(state).to.be.deep.equal({\n  apps: [],\n  errors: ['hello'],\n  loading: false\n});",
              "err": {},
              "uuid": "c37c121e-6bdf-49c9-b94c-362e7d51c160",
              "parentUUID": "162a0114-bd9a-4bc0-8339-3198eb302a60",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "handles the action type DELETING_CONNECTED_APP",
              "fullTitle": "Connected Apps reducer handles the action type DELETING_CONNECTED_APP",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var action = {\n  appId: '1',\n  type: _actions.DELETING_CONNECTED_APP\n};\nvar prevState = {\n  apps: [{\n    id: '1',\n    deleting: false\n  }, {\n    id: '2',\n    deleting: false\n  }],\n  deleting: false,\n  errors: [],\n  loading: false\n};\nvar state = (0, _connectedApps.default)(prevState, action);\n(0, _chai.expect)(state).to.be.deep.equal({\n  apps: [{\n    id: '1',\n    deleting: true\n  }, {\n    id: '2',\n    deleting: false\n  }],\n  deleting: false,\n  errors: [],\n  loading: false\n});",
              "err": {},
              "uuid": "0f80a417-3d82-40a7-93e4-a97253eac594",
              "parentUUID": "162a0114-bd9a-4bc0-8339-3198eb302a60",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "handles the action type ERROR_DELETING_CONNECTED_APP",
              "fullTitle": "Connected Apps reducer handles the action type ERROR_DELETING_CONNECTED_APP",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var action = {\n  appId: '1',\n  errors: ['hello'],\n  type: _actions.ERROR_DELETING_CONNECTED_APP\n};\nvar prevState = {\n  apps: [{\n    id: '1',\n    deleting: true,\n    errors: []\n  }, {\n    id: '2',\n    deleting: false,\n    errors: []\n  }],\n  errors: [],\n  loading: false\n};\nvar state = (0, _connectedApps.default)(prevState, action);\n(0, _chai.expect)(state).to.be.deep.equal({\n  apps: [{\n    id: '1',\n    deleting: false,\n    errors: ['hello']\n  }, {\n    id: '2',\n    deleting: false,\n    errors: []\n  }],\n  errors: [],\n  loading: false\n});",
              "err": {},
              "uuid": "b267a9b6-e3d0-4a25-abec-2423e3267139",
              "parentUUID": "162a0114-bd9a-4bc0-8339-3198eb302a60",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "handles the action type FINISHED_DELETING_CONNECTED_APP",
              "fullTitle": "Connected Apps reducer handles the action type FINISHED_DELETING_CONNECTED_APP",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var action = {\n  appId: '1',\n  type: _actions.FINISHED_DELETING_CONNECTED_APP\n};\nvar prevState = {\n  apps: [{\n    id: '1',\n    deleting: true,\n    deleted: false\n  }, {\n    id: '2',\n    deleting: false,\n    deleted: false\n  }],\n  errors: [],\n  loading: false\n};\nvar state = (0, _connectedApps.default)(prevState, action);\n(0, _chai.expect)(state).to.be.deep.equal({\n  apps: [{\n    id: '1',\n    deleting: false,\n    deleted: true\n  }, {\n    id: '2',\n    deleting: false,\n    deleted: false\n  }],\n  errors: [],\n  loading: false\n});",
              "err": {},
              "uuid": "40d80f34-5893-4aaf-9177-2d80b46a02e1",
              "parentUUID": "162a0114-bd9a-4bc0-8339-3198eb302a60",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "handles the action type DELETED_APP_ALERT_DISMISSED",
              "fullTitle": "Connected Apps reducer handles the action type DELETED_APP_ALERT_DISMISSED",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var action = {\n  appId: '1',\n  type: _actions.DELETED_APP_ALERT_DISMISSED\n};\nvar prevState = {\n  apps: [{\n    id: '1'\n  }, {\n    id: '2'\n  }],\n  errors: [],\n  loading: false\n};\nvar state = (0, _connectedApps.default)(prevState, action);\n(0, _chai.expect)(state).to.be.deep.equal({\n  apps: [{\n    id: '2'\n  }],\n  errors: [],\n  loading: false\n});",
              "err": {},
              "uuid": "bd5108e8-3570-48de-9ed7-e47020e5003a",
              "parentUUID": "162a0114-bd9a-4bc0-8339-3198eb302a60",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "c63811ff-0293-4637-b7cf-d666894c14d1",
            "cfe8e140-5700-4c0f-a7bc-5a022b696770",
            "51101fff-e4b2-4c0f-ad71-9252d377c437",
            "c37c121e-6bdf-49c9-b94c-362e7d51c160",
            "0f80a417-3d82-40a7-93e4-a97253eac594",
            "b267a9b6-e3d0-4a25-abec-2423e3267139",
            "40d80f34-5893-4aaf-9177-2d80b46a02e1",
            "bd5108e8-3570-48de-9ed7-e47020e5003a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "73e8597c-3039-4922-a857-d77e52483bb6",
          "title": "Deleting",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/profile/tests/components/contact-information/ContactInformation.delete-address.unit.spec.jsx",
          "file": "/src/applications/personalization/profile/tests/components/contact-information/ContactInformation.delete-address.unit.spec.jsx",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"Deleting\"",
              "fullTitle": "Deleting \"before all\" hook in \"Deleting\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "server = _node.setupServer.apply(void 0, _toConsumableArray(mocks.deleteResidentialAddressSuccess).concat(_toConsumableArray(mocks.apmTelemetry), _toConsumableArray(mocks.rootTransactionStatus)));\nserver.listen();",
              "err": {},
              "uuid": "f963cda8-f4cb-4d31-af5c-cced8289a2b4",
              "parentUUID": "73e8597c-3039-4922-a857-d77e52483bb6",
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"before each\" hook in \"Deleting\"",
              "fullTitle": "Deleting \"before each\" hook in \"Deleting\"",
              "timedOut": false,
              "duration": 15,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "window.VetsGov = {\n  pollTimeout: 5\n};\nvar initialState = (0, _unitTestHelpers.createBasicInitialState)();\nview = (0, _unitTestHelpers.renderWithProfileReducers)(ui, {\n  initialState: initialState\n});",
              "err": {},
              "uuid": "010403ac-2bf2-495f-9491-4da572d0830f",
              "parentUUID": "73e8597c-3039-4922-a857-d77e52483bb6",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"Deleting\"",
              "fullTitle": "Deleting \"after all\" hook in \"Deleting\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "server.close();",
              "err": {},
              "uuid": "93f9e711-1886-4c31-99d2-0cca162a940a",
              "parentUUID": "73e8597c-3039-4922-a857-d77e52483bb6",
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"after each\" hook in \"Deleting\"",
              "fullTitle": "Deleting \"after each\" hook in \"Deleting\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "server.resetHandlers();",
              "err": {},
              "uuid": "cdd35eb7-7369-494f-847e-9369b1cbba35",
              "parentUUID": "73e8597c-3039-4922-a857-d77e52483bb6",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "should not be supported for mailing address",
              "fullTitle": "Deleting should not be supported for mailing address",
              "timedOut": false,
              "duration": 147,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var addressName = _constants.FIELD_TITLES[_constants.FIELD_NAMES.MAILING_ADDRESS];\ngetEditButton(addressName).click();\n(0, _chai.expect)(view.queryByText(new RegExp(\"remove \".concat(addressName), 'i'), {\n  selector: 'button'\n})).to.not.exist;",
              "err": {},
              "uuid": "bbd61fc4-4463-4f54-be32-a5d7b6c51d5d",
              "parentUUID": "73e8597c-3039-4922-a857-d77e52483bb6",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [
            {
              "uuid": "b7273501-3c73-488f-9872-d204d9afd2d7",
              "title": "Home address",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/profile/tests/components/contact-information/ContactInformation.delete-address.unit.spec.jsx",
              "file": "/src/applications/personalization/profile/tests/components/contact-information/ContactInformation.delete-address.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should handle a transaction that succeeds",
                  "fullTitle": "Deleting Home address should handle a transaction that succeeds",
                  "timedOut": false,
                  "duration": 177,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
                  "err": {},
                  "uuid": "c4d5485b-4221-47f8-bb6e-b2af3f43bfa3",
                  "parentUUID": "b7273501-3c73-488f-9872-d204d9afd2d7",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should show an error if the transaction cannot be created",
                  "fullTitle": "Deleting Home address should show an error if the transaction cannot be created",
                  "timedOut": false,
                  "duration": 87,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
                  "err": {},
                  "uuid": "77fb5604-2895-4ec1-9de4-39e1748bc5d5",
                  "parentUUID": "b7273501-3c73-488f-9872-d204d9afd2d7",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should show an error if the transaction fails after some time",
                  "fullTitle": "Deleting Home address should show an error if the transaction fails after some time",
                  "timedOut": false,
                  "duration": 1582,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
                  "err": {},
                  "uuid": "130f8845-048c-4427-8b19-7d723013542f",
                  "parentUUID": "b7273501-3c73-488f-9872-d204d9afd2d7",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "c4d5485b-4221-47f8-bb6e-b2af3f43bfa3",
                "77fb5604-2895-4ec1-9de4-39e1748bc5d5",
                "130f8845-048c-4427-8b19-7d723013542f"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1846,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            }
          ],
          "passes": [
            "bbd61fc4-4463-4f54-be32-a5d7b6c51d5d"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 147,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "7278c7e6-8bcb-4d5a-b6de-c5e806be14d0",
          "title": "Deleting email address",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/profile/tests/components/contact-information/ContactInformation.delete-email-address.unit.spec.jsx",
          "file": "/src/applications/personalization/profile/tests/components/contact-information/ContactInformation.delete-email-address.unit.spec.jsx",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"Deleting email address\"",
              "fullTitle": "Deleting email address \"before all\" hook in \"Deleting email address\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "window.VetsGov = {\n  pollTimeout: 5\n};\nserver = _node.setupServer.apply(void 0, _toConsumableArray(mocks.deleteEmailAddressSuccess).concat(_toConsumableArray(mocks.apmTelemetry), _toConsumableArray(mocks.rootTransactionStatus)));\nserver.listen();",
              "err": {},
              "uuid": "2838fe35-d2e8-4315-9f4f-d0b98dd96df2",
              "parentUUID": "7278c7e6-8bcb-4d5a-b6de-c5e806be14d0",
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"before each\" hook in \"Deleting email address\"",
              "fullTitle": "Deleting email address \"before each\" hook in \"Deleting email address\"",
              "timedOut": false,
              "duration": 13,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "window.VetsGov = {\n  pollTimeout: 1\n};\nvar initialState = (0, _unitTestHelpers.createBasicInitialState)();\nview = (0, _unitTestHelpers.renderWithProfileReducers)(ui, {\n  initialState: initialState\n});",
              "err": {},
              "uuid": "d0b48a05-0a33-4403-a5ae-fc4414cf6c84",
              "parentUUID": "7278c7e6-8bcb-4d5a-b6de-c5e806be14d0",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"Deleting email address\"",
              "fullTitle": "Deleting email address \"after all\" hook in \"Deleting email address\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "server.close();",
              "err": {},
              "uuid": "8f948552-567c-4ad4-9427-647d23246b9f",
              "parentUUID": "7278c7e6-8bcb-4d5a-b6de-c5e806be14d0",
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"after each\" hook in \"Deleting email address\"",
              "fullTitle": "Deleting email address \"after each\" hook in \"Deleting email address\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "server.resetHandlers();",
              "err": {},
              "uuid": "4e58d15e-8fb0-4093-819d-71d0cfa3a84c",
              "parentUUID": "7278c7e6-8bcb-4d5a-b6de-c5e806be14d0",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "should handle a deletion that succeeds quickly",
              "fullTitle": "Deleting email address should handle a deletion that succeeds quickly",
              "timedOut": false,
              "duration": 190,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
              "err": {},
              "uuid": "66ed0883-83cb-4010-9972-cf9351fe418b",
              "parentUUID": "7278c7e6-8bcb-4d5a-b6de-c5e806be14d0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should handle a deletion succeeds after some time",
              "fullTitle": "Deleting email address should handle a deletion succeeds after some time",
              "timedOut": false,
              "duration": 168,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
              "err": {},
              "uuid": "c9130cb7-9155-4f2f-b7e2-5263eed8a887",
              "parentUUID": "7278c7e6-8bcb-4d5a-b6de-c5e806be14d0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should show an error if the transaction cannot be created",
              "fullTitle": "Deleting email address should show an error if the transaction cannot be created",
              "timedOut": false,
              "duration": 41,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
              "err": {},
              "uuid": "4a43fa3c-f147-422e-8f6e-016f53713b33",
              "parentUUID": "7278c7e6-8bcb-4d5a-b6de-c5e806be14d0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should show an error if the deletion fails quickly",
              "fullTitle": "Deleting email address should show an error if the deletion fails quickly",
              "timedOut": false,
              "duration": 1515,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
              "err": {},
              "uuid": "7f22932e-6b8e-4a93-84c8-62891e5f0355",
              "parentUUID": "7278c7e6-8bcb-4d5a-b6de-c5e806be14d0",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "66ed0883-83cb-4010-9972-cf9351fe418b",
            "c9130cb7-9155-4f2f-b7e2-5263eed8a887",
            "4a43fa3c-f147-422e-8f6e-016f53713b33",
            "7f22932e-6b8e-4a93-84c8-62891e5f0355"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1914,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "c4019f67-6874-438a-8248-a38d06e76113",
          "title": "Deleting",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/profile/tests/components/contact-information/ContactInformation.delete-telephone.unit.spec.jsx",
          "file": "/src/applications/personalization/profile/tests/components/contact-information/ContactInformation.delete-telephone.unit.spec.jsx",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"Deleting\"",
              "fullTitle": "Deleting \"before all\" hook in \"Deleting\"",
              "timedOut": false,
              "duration": 5,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "server = _node.setupServer.apply(void 0, _toConsumableArray(mocks.deletePhoneNumberSuccess()).concat(_toConsumableArray(mocks.apmTelemetry), _toConsumableArray(mocks.rootTransactionStatus)));\nserver.listen();",
              "err": {},
              "uuid": "f8cb98b9-cf19-4edb-ac9b-fb9895a8a787",
              "parentUUID": "c4019f67-6874-438a-8248-a38d06e76113",
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"before each\" hook in \"Deleting\"",
              "fullTitle": "Deleting \"before each\" hook in \"Deleting\"",
              "timedOut": false,
              "duration": 14,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "window.VetsGov = {\n  pollTimeout: 5\n};\nvar initialState = (0, _unitTestHelpers.createBasicInitialState)();\nview = (0, _unitTestHelpers.renderWithProfileReducers)(ui, {\n  initialState: initialState\n});",
              "err": {},
              "uuid": "1f70d982-d9a5-4707-94f4-40ab2de7b89b",
              "parentUUID": "c4019f67-6874-438a-8248-a38d06e76113",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"Deleting\"",
              "fullTitle": "Deleting \"after all\" hook in \"Deleting\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "server.close();",
              "err": {},
              "uuid": "0c1b7a3a-9e1a-4343-98a6-a1ccd7aab305",
              "parentUUID": "c4019f67-6874-438a-8248-a38d06e76113",
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"after each\" hook in \"Deleting\"",
              "fullTitle": "Deleting \"after each\" hook in \"Deleting\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "server.resetHandlers();",
              "err": {},
              "uuid": "ffa772df-5643-4fbc-bcd4-e35db245b7b3",
              "parentUUID": "c4019f67-6874-438a-8248-a38d06e76113",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [],
          "suites": [
            {
              "uuid": "70a236a4-68bd-45a3-bd65-7e5b7c13558d",
              "title": "Home phone number",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/profile/tests/components/contact-information/ContactInformation.delete-telephone.unit.spec.jsx",
              "file": "/src/applications/personalization/profile/tests/components/contact-information/ContactInformation.delete-telephone.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should handle a transaction that succeeds quickly",
                  "fullTitle": "Deleting Home phone number should handle a transaction that succeeds quickly",
                  "timedOut": false,
                  "duration": 1560,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
                  "err": {},
                  "uuid": "90d8ca1d-9d92-4493-a697-dabf15f2270a",
                  "parentUUID": "70a236a4-68bd-45a3-bd65-7e5b7c13558d",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should show an error if the transaction cannot be created",
                  "fullTitle": "Deleting Home phone number should show an error if the transaction cannot be created",
                  "timedOut": false,
                  "duration": 84,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
                  "err": {},
                  "uuid": "1577c9ec-7af9-4a07-8b4e-e39065f8caee",
                  "parentUUID": "70a236a4-68bd-45a3-bd65-7e5b7c13558d",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should show an error if the transaction fails after some time",
                  "fullTitle": "Deleting Home phone number should show an error if the transaction fails after some time",
                  "timedOut": false,
                  "duration": 1570,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
                  "err": {},
                  "uuid": "ea40f6db-e453-4edc-82f2-78813ba349cb",
                  "parentUUID": "70a236a4-68bd-45a3-bd65-7e5b7c13558d",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "90d8ca1d-9d92-4493-a697-dabf15f2270a",
                "1577c9ec-7af9-4a07-8b4e-e39065f8caee",
                "ea40f6db-e453-4edc-82f2-78813ba349cb"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 3214,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "75c608a8-5b9e-46c9-b6c7-00fe2811ec4e",
              "title": "Mobile phone number",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/profile/tests/components/contact-information/ContactInformation.delete-telephone.unit.spec.jsx",
              "file": "/src/applications/personalization/profile/tests/components/contact-information/ContactInformation.delete-telephone.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should handle a transaction that succeeds quickly",
                  "fullTitle": "Deleting Mobile phone number should handle a transaction that succeeds quickly",
                  "timedOut": false,
                  "duration": 1556,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
                  "err": {},
                  "uuid": "59678a41-cec7-4775-b46b-41e6b477fe1f",
                  "parentUUID": "75c608a8-5b9e-46c9-b6c7-00fe2811ec4e",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should show an error if the transaction cannot be created",
                  "fullTitle": "Deleting Mobile phone number should show an error if the transaction cannot be created",
                  "timedOut": false,
                  "duration": 81,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
                  "err": {},
                  "uuid": "0179ecae-1ebc-427c-9e9c-16a904978208",
                  "parentUUID": "75c608a8-5b9e-46c9-b6c7-00fe2811ec4e",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should show an error if the transaction fails after some time",
                  "fullTitle": "Deleting Mobile phone number should show an error if the transaction fails after some time",
                  "timedOut": false,
                  "duration": 1573,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
                  "err": {},
                  "uuid": "7bea3298-b0d2-436b-93df-55cc2ea7617f",
                  "parentUUID": "75c608a8-5b9e-46c9-b6c7-00fe2811ec4e",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "59678a41-cec7-4775-b46b-41e6b477fe1f",
                "0179ecae-1ebc-427c-9e9c-16a904978208",
                "7bea3298-b0d2-436b-93df-55cc2ea7617f"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 3210,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "991b7218-968d-4b97-8c1e-44bd970a0c8d",
              "title": "Work phone number",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/profile/tests/components/contact-information/ContactInformation.delete-telephone.unit.spec.jsx",
              "file": "/src/applications/personalization/profile/tests/components/contact-information/ContactInformation.delete-telephone.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should handle a transaction that succeeds quickly",
                  "fullTitle": "Deleting Work phone number should handle a transaction that succeeds quickly",
                  "timedOut": false,
                  "duration": 1556,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
                  "err": {},
                  "uuid": "48f4c403-840c-452a-bab5-414ad462fc49",
                  "parentUUID": "991b7218-968d-4b97-8c1e-44bd970a0c8d",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should show an error if the transaction cannot be created",
                  "fullTitle": "Deleting Work phone number should show an error if the transaction cannot be created",
                  "timedOut": false,
                  "duration": 77,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
                  "err": {},
                  "uuid": "6afd1eac-a5a3-4b11-aeb9-0efac74915d7",
                  "parentUUID": "991b7218-968d-4b97-8c1e-44bd970a0c8d",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should show an error if the transaction fails after some time",
                  "fullTitle": "Deleting Work phone number should show an error if the transaction fails after some time",
                  "timedOut": false,
                  "duration": 1569,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
                  "err": {},
                  "uuid": "e6a4c84c-f688-45cf-84cc-1eb53ae5a341",
                  "parentUUID": "991b7218-968d-4b97-8c1e-44bd970a0c8d",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "48f4c403-840c-452a-bab5-414ad462fc49",
                "6afd1eac-a5a3-4b11-aeb9-0efac74915d7",
                "e6a4c84c-f688-45cf-84cc-1eb53ae5a341"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 3202,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "c78c66c1-9204-48f7-a320-d8e981fb44f9",
          "title": "Editing email address",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/profile/tests/components/contact-information/ContactInformation.edit-email-address.unit.spec.jsx",
          "file": "/src/applications/personalization/profile/tests/components/contact-information/ContactInformation.edit-email-address.unit.spec.jsx",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"Editing email address\"",
              "fullTitle": "Editing email address \"before all\" hook in \"Editing email address\"",
              "timedOut": false,
              "duration": 5,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "server = _node.setupServer.apply(void 0, _toConsumableArray(mocks.editEmailAddressSuccess()).concat(_toConsumableArray(mocks.apmTelemetry), _toConsumableArray(mocks.rootTransactionStatus)));\nserver.listen();",
              "err": {},
              "uuid": "90bb24bf-ae1f-4d77-9050-2d44eed499bc",
              "parentUUID": "c78c66c1-9204-48f7-a320-d8e981fb44f9",
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"before each\" hook in \"Editing email address\"",
              "fullTitle": "Editing email address \"before each\" hook in \"Editing email address\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "window.VetsGov = {\n  pollTimeout: 1\n};",
              "err": {},
              "uuid": "5a956392-16c2-4e39-a5f5-5d677083da51",
              "parentUUID": "c78c66c1-9204-48f7-a320-d8e981fb44f9",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"Editing email address\"",
              "fullTitle": "Editing email address \"after all\" hook in \"Editing email address\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "server.close();",
              "err": {},
              "uuid": "a446e485-2e38-4a3e-a7b5-80eaf3e91d53",
              "parentUUID": "c78c66c1-9204-48f7-a320-d8e981fb44f9",
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"after each\" hook in \"Editing email address\"",
              "fullTitle": "Editing email address \"after each\" hook in \"Editing email address\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "server.resetHandlers();",
              "err": {},
              "uuid": "6803911a-35dc-40c3-bbb7-5b30676c71d5",
              "parentUUID": "c78c66c1-9204-48f7-a320-d8e981fb44f9",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [],
          "suites": [
            {
              "uuid": "50fee824-b79f-4960-a146-f14bad1be4d3",
              "title": "when an address does not exist yet",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/profile/tests/components/contact-information/ContactInformation.edit-email-address.unit.spec.jsx",
              "file": "/src/applications/personalization/profile/tests/components/contact-information/ContactInformation.edit-email-address.unit.spec.jsx",
              "beforeHooks": [
                {
                  "title": "\"before each\" hook in \"when an address does not exist yet\"",
                  "fullTitle": "Editing email address when an address does not exist yet \"before each\" hook in \"when an address does not exist yet\"",
                  "timedOut": false,
                  "duration": 13,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var initialState = (0, _unitTestHelpers.createBasicInitialState)();\ninitialState.user.profile.vapContactInfo.email = null;\nview = (0, _unitTestHelpers.renderWithProfileReducers)(ui, {\n  initialState: initialState\n});",
                  "err": {},
                  "uuid": "72b454ba-9da7-4392-90ae-9dcd3871dd3b",
                  "parentUUID": "50fee824-b79f-4960-a146-f14bad1be4d3",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should handle a transaction that succeeds quickly",
                  "fullTitle": "Editing email address when an address does not exist yet should handle a transaction that succeeds quickly",
                  "timedOut": false,
                  "duration": 151,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
                  "err": {},
                  "uuid": "de26a7b6-8d38-48dc-bc1b-7cbdf460aa21",
                  "parentUUID": "50fee824-b79f-4960-a146-f14bad1be4d3",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should handle a transaction that does not succeed until after the edit view exits",
                  "fullTitle": "Editing email address when an address does not exist yet should handle a transaction that does not succeed until after the edit view exits",
                  "timedOut": false,
                  "duration": 208,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
                  "err": {},
                  "uuid": "9e6c7b10-3537-40cc-8a23-a71eb58af70f",
                  "parentUUID": "50fee824-b79f-4960-a146-f14bad1be4d3",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should show an error and not auto-exit edit mode if the transaction cannot be created",
                  "fullTitle": "Editing email address when an address does not exist yet should show an error and not auto-exit edit mode if the transaction cannot be created",
                  "timedOut": false,
                  "duration": 208,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
                  "err": {},
                  "uuid": "f1d2ce75-6ba1-486c-aa42-c6798fe46384",
                  "parentUUID": "50fee824-b79f-4960-a146-f14bad1be4d3",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should show an error and not auto-exit edit mode if the transaction fails quickly",
                  "fullTitle": "Editing email address when an address does not exist yet should show an error and not auto-exit edit mode if the transaction fails quickly",
                  "timedOut": false,
                  "duration": 222,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
                  "err": {},
                  "uuid": "45078009-d31d-471b-8f75-e84739100b22",
                  "parentUUID": "50fee824-b79f-4960-a146-f14bad1be4d3",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should show an error if the transaction fails after the edit view exits",
                  "fullTitle": "Editing email address when an address does not exist yet should show an error if the transaction fails after the edit view exits",
                  "timedOut": false,
                  "duration": 194,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
                  "err": {},
                  "uuid": "f19cf674-8c99-4037-b932-abf1ea8031c6",
                  "parentUUID": "50fee824-b79f-4960-a146-f14bad1be4d3",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "de26a7b6-8d38-48dc-bc1b-7cbdf460aa21",
                "9e6c7b10-3537-40cc-8a23-a71eb58af70f",
                "f1d2ce75-6ba1-486c-aa42-c6798fe46384",
                "45078009-d31d-471b-8f75-e84739100b22",
                "f19cf674-8c99-4037-b932-abf1ea8031c6"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 983,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "764d18ed-6416-4cc0-b47b-dd9c57ea59ac",
              "title": "when an address already exists",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/profile/tests/components/contact-information/ContactInformation.edit-email-address.unit.spec.jsx",
              "file": "/src/applications/personalization/profile/tests/components/contact-information/ContactInformation.edit-email-address.unit.spec.jsx",
              "beforeHooks": [
                {
                  "title": "\"before each\" hook in \"when an address already exists\"",
                  "fullTitle": "Editing email address when an address already exists \"before each\" hook in \"when an address already exists\"",
                  "timedOut": false,
                  "duration": 12,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var initialState = (0, _unitTestHelpers.createBasicInitialState)();\nview = (0, _unitTestHelpers.renderWithProfileReducers)(ui, {\n  initialState: initialState\n});",
                  "err": {},
                  "uuid": "64150b7b-73d0-4cac-8c56-321959a35144",
                  "parentUUID": "764d18ed-6416-4cc0-b47b-dd9c57ea59ac",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should handle a transaction that succeeds quickly",
                  "fullTitle": "Editing email address when an address already exists should handle a transaction that succeeds quickly",
                  "timedOut": false,
                  "duration": 134,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
                  "err": {},
                  "uuid": "3220a837-6b0a-4307-bcce-24142c829c37",
                  "parentUUID": "764d18ed-6416-4cc0-b47b-dd9c57ea59ac",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should handle a transaction that does not succeed until after the edit view exits",
                  "fullTitle": "Editing email address when an address already exists should handle a transaction that does not succeed until after the edit view exits",
                  "timedOut": false,
                  "duration": 211,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
                  "err": {},
                  "uuid": "17d2aecb-7fdc-4da7-ad3e-7138be702173",
                  "parentUUID": "764d18ed-6416-4cc0-b47b-dd9c57ea59ac",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should show an error and not auto-exit edit mode if the transaction cannot be created",
                  "fullTitle": "Editing email address when an address already exists should show an error and not auto-exit edit mode if the transaction cannot be created",
                  "timedOut": false,
                  "duration": 214,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
                  "err": {},
                  "uuid": "da680a2b-5b75-47f4-964f-88a12341324a",
                  "parentUUID": "764d18ed-6416-4cc0-b47b-dd9c57ea59ac",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should show an error and not auto-exit edit mode if the transaction fails quickly",
                  "fullTitle": "Editing email address when an address already exists should show an error and not auto-exit edit mode if the transaction fails quickly",
                  "timedOut": false,
                  "duration": 233,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
                  "err": {},
                  "uuid": "66d9a942-9590-4835-9ba5-1ddd93f6c8db",
                  "parentUUID": "764d18ed-6416-4cc0-b47b-dd9c57ea59ac",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should show an error if the transaction fails after the edit view exits",
                  "fullTitle": "Editing email address when an address already exists should show an error if the transaction fails after the edit view exits",
                  "timedOut": false,
                  "duration": 210,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
                  "err": {},
                  "uuid": "afa426d5-3eb3-453d-a8cd-38a1b0546726",
                  "parentUUID": "764d18ed-6416-4cc0-b47b-dd9c57ea59ac",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "3220a837-6b0a-4307-bcce-24142c829c37",
                "17d2aecb-7fdc-4da7-ad3e-7138be702173",
                "da680a2b-5b75-47f4-964f-88a12341324a",
                "66d9a942-9590-4835-9ba5-1ddd93f6c8db",
                "afa426d5-3eb3-453d-a8cd-38a1b0546726"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1002,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "9da5a05c-1746-4ac4-aaf4-e5d774d4f4ff",
          "title": "Editing",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/profile/tests/components/contact-information/ContactInformation.edit-telephone.unit.spec.jsx",
          "file": "/src/applications/personalization/profile/tests/components/contact-information/ContactInformation.edit-telephone.unit.spec.jsx",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"Editing\"",
              "fullTitle": "Editing \"before all\" hook in \"Editing\"",
              "timedOut": false,
              "duration": 5,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "server = _node.setupServer.apply(void 0, _toConsumableArray(mocks.editPhoneNumberSuccess()).concat(_toConsumableArray(mocks.apmTelemetry), _toConsumableArray(mocks.rootTransactionStatus)));\nserver.listen();",
              "err": {},
              "uuid": "533d39d5-24d0-4844-aa62-666454f1dbb1",
              "parentUUID": "9da5a05c-1746-4ac4-aaf4-e5d774d4f4ff",
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"before each\" hook in \"Editing\"",
              "fullTitle": "Editing \"before each\" hook in \"Editing\"",
              "timedOut": false,
              "duration": 11,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "window.VetsGov = {\n  pollTimeout: 1\n};\nvar initialState = (0, _unitTestHelpers.createBasicInitialState)();\nview = (0, _unitTestHelpers.renderWithProfileReducers)(ui, {\n  initialState: initialState\n});",
              "err": {},
              "uuid": "af846eea-8931-46c6-9ba8-aef727bd0cad",
              "parentUUID": "9da5a05c-1746-4ac4-aaf4-e5d774d4f4ff",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"Editing\"",
              "fullTitle": "Editing \"after all\" hook in \"Editing\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "server.close();",
              "err": {},
              "uuid": "297eae9c-6026-47f5-b434-dca05994c21c",
              "parentUUID": "9da5a05c-1746-4ac4-aaf4-e5d774d4f4ff",
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"after each\" hook in \"Editing\"",
              "fullTitle": "Editing \"after each\" hook in \"Editing\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "server.resetHandlers();",
              "err": {},
              "uuid": "4709fe0d-84b6-4ebb-8d0e-3e1e69f1f56b",
              "parentUUID": "9da5a05c-1746-4ac4-aaf4-e5d774d4f4ff",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "validates a phone number that is too short",
              "fullTitle": "Editing validates a phone number that is too short",
              "timedOut": false,
              "duration": 92,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
              "err": {},
              "uuid": "c494115f-be28-429d-a2fb-1a1e09133fc7",
              "parentUUID": "9da5a05c-1746-4ac4-aaf4-e5d774d4f4ff",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "validates a phone number that has letters in the field",
              "fullTitle": "Editing validates a phone number that has letters in the field",
              "timedOut": false,
              "duration": 83,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
              "err": {},
              "uuid": "a2d51d0f-e19a-4f47-8a8a-a94a2bc50422",
              "parentUUID": "9da5a05c-1746-4ac4-aaf4-e5d774d4f4ff",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [
            {
              "uuid": "75cbdc47-4318-450d-9d5c-088274a3bbf4",
              "title": "Home phone number",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/profile/tests/components/contact-information/ContactInformation.edit-telephone.unit.spec.jsx",
              "file": "/src/applications/personalization/profile/tests/components/contact-information/ContactInformation.edit-telephone.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should handle a transaction that succeeds quickly",
                  "fullTitle": "Editing Home phone number should handle a transaction that succeeds quickly",
                  "timedOut": false,
                  "duration": 154,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
                  "err": {},
                  "uuid": "e82d28d5-0646-4868-859b-9b8b0905d385",
                  "parentUUID": "75cbdc47-4318-450d-9d5c-088274a3bbf4",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should handle a transaction that does not succeed until after the edit view exits",
                  "fullTitle": "Editing Home phone number should handle a transaction that does not succeed until after the edit view exits",
                  "timedOut": false,
                  "duration": 214,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
                  "err": {},
                  "uuid": "b8375b33-71a7-44e6-96b7-568259b6aded",
                  "parentUUID": "75cbdc47-4318-450d-9d5c-088274a3bbf4",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should show an error and not auto-exit edit mode if the transaction cannot be created",
                  "fullTitle": "Editing Home phone number should show an error and not auto-exit edit mode if the transaction cannot be created",
                  "timedOut": false,
                  "duration": 211,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
                  "err": {},
                  "uuid": "d4453237-30b1-4db4-b512-4743c1a79024",
                  "parentUUID": "75cbdc47-4318-450d-9d5c-088274a3bbf4",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should show an error and not auto-exit edit mode if the transaction fails quickly",
                  "fullTitle": "Editing Home phone number should show an error and not auto-exit edit mode if the transaction fails quickly",
                  "timedOut": false,
                  "duration": 218,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
                  "err": {},
                  "uuid": "1fc08aae-fdd0-4037-8154-05d82f0e4e95",
                  "parentUUID": "75cbdc47-4318-450d-9d5c-088274a3bbf4",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should show an error if the transaction fails after the edit view exits",
                  "fullTitle": "Editing Home phone number should show an error if the transaction fails after the edit view exits",
                  "timedOut": false,
                  "duration": 197,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
                  "err": {},
                  "uuid": "47be85a9-d6f0-4c5f-aab1-16385c8a5bae",
                  "parentUUID": "75cbdc47-4318-450d-9d5c-088274a3bbf4",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "e82d28d5-0646-4868-859b-9b8b0905d385",
                "b8375b33-71a7-44e6-96b7-568259b6aded",
                "d4453237-30b1-4db4-b512-4743c1a79024",
                "1fc08aae-fdd0-4037-8154-05d82f0e4e95",
                "47be85a9-d6f0-4c5f-aab1-16385c8a5bae"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 994,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "317ee80e-4898-4201-a855-618aa77484ff",
              "title": "Mobile phone number",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/profile/tests/components/contact-information/ContactInformation.edit-telephone.unit.spec.jsx",
              "file": "/src/applications/personalization/profile/tests/components/contact-information/ContactInformation.edit-telephone.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should handle a transaction that succeeds quickly",
                  "fullTitle": "Editing Mobile phone number should handle a transaction that succeeds quickly",
                  "timedOut": false,
                  "duration": 140,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
                  "err": {},
                  "uuid": "168873a5-4447-4f3e-82da-e6451160848e",
                  "parentUUID": "317ee80e-4898-4201-a855-618aa77484ff",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should handle a transaction that does not succeed until after the edit view exits",
                  "fullTitle": "Editing Mobile phone number should handle a transaction that does not succeed until after the edit view exits",
                  "timedOut": false,
                  "duration": 197,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
                  "err": {},
                  "uuid": "0e26fc52-8d8f-4a60-a611-39c4fd903b7b",
                  "parentUUID": "317ee80e-4898-4201-a855-618aa77484ff",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should show an error and not auto-exit edit mode if the transaction cannot be created",
                  "fullTitle": "Editing Mobile phone number should show an error and not auto-exit edit mode if the transaction cannot be created",
                  "timedOut": false,
                  "duration": 204,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
                  "err": {},
                  "uuid": "997e250d-1084-464c-9ce0-de4943f153f2",
                  "parentUUID": "317ee80e-4898-4201-a855-618aa77484ff",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should show an error and not auto-exit edit mode if the transaction fails quickly",
                  "fullTitle": "Editing Mobile phone number should show an error and not auto-exit edit mode if the transaction fails quickly",
                  "timedOut": false,
                  "duration": 207,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
                  "err": {},
                  "uuid": "09a712ce-f521-4724-9a80-cc9c0c4c7a5c",
                  "parentUUID": "317ee80e-4898-4201-a855-618aa77484ff",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should show an error if the transaction fails after the edit view exits",
                  "fullTitle": "Editing Mobile phone number should show an error if the transaction fails after the edit view exits",
                  "timedOut": false,
                  "duration": 190,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
                  "err": {},
                  "uuid": "f43a99fd-b11b-4a27-9e82-36dbdc7962ab",
                  "parentUUID": "317ee80e-4898-4201-a855-618aa77484ff",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "168873a5-4447-4f3e-82da-e6451160848e",
                "0e26fc52-8d8f-4a60-a611-39c4fd903b7b",
                "997e250d-1084-464c-9ce0-de4943f153f2",
                "09a712ce-f521-4724-9a80-cc9c0c4c7a5c",
                "f43a99fd-b11b-4a27-9e82-36dbdc7962ab"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 938,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "7e2df97e-da3e-4777-875e-93bdfc7eec1c",
              "title": "Work phone number",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/profile/tests/components/contact-information/ContactInformation.edit-telephone.unit.spec.jsx",
              "file": "/src/applications/personalization/profile/tests/components/contact-information/ContactInformation.edit-telephone.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should handle a transaction that succeeds quickly",
                  "fullTitle": "Editing Work phone number should handle a transaction that succeeds quickly",
                  "timedOut": false,
                  "duration": 133,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
                  "err": {},
                  "uuid": "d2baea27-3603-4dbf-9013-8a7ea33724b3",
                  "parentUUID": "7e2df97e-da3e-4777-875e-93bdfc7eec1c",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should handle a transaction that does not succeed until after the edit view exits",
                  "fullTitle": "Editing Work phone number should handle a transaction that does not succeed until after the edit view exits",
                  "timedOut": false,
                  "duration": 214,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
                  "err": {},
                  "uuid": "0fa6c679-dc1e-4fda-80a3-53c283011926",
                  "parentUUID": "7e2df97e-da3e-4777-875e-93bdfc7eec1c",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should show an error and not auto-exit edit mode if the transaction cannot be created",
                  "fullTitle": "Editing Work phone number should show an error and not auto-exit edit mode if the transaction cannot be created",
                  "timedOut": false,
                  "duration": 203,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
                  "err": {},
                  "uuid": "34caab38-92a1-4151-a32f-079f71242462",
                  "parentUUID": "7e2df97e-da3e-4777-875e-93bdfc7eec1c",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should show an error and not auto-exit edit mode if the transaction fails quickly",
                  "fullTitle": "Editing Work phone number should show an error and not auto-exit edit mode if the transaction fails quickly",
                  "timedOut": false,
                  "duration": 216,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
                  "err": {},
                  "uuid": "b5a7776d-6c37-4615-920a-d6185d27dd7a",
                  "parentUUID": "7e2df97e-da3e-4777-875e-93bdfc7eec1c",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should show an error if the transaction fails after the edit view exits",
                  "fullTitle": "Editing Work phone number should show an error if the transaction fails after the edit view exits",
                  "timedOut": false,
                  "duration": 191,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
                  "err": {},
                  "uuid": "31608376-1e49-457a-9166-c9317474fc9c",
                  "parentUUID": "7e2df97e-da3e-4777-875e-93bdfc7eec1c",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "d2baea27-3603-4dbf-9013-8a7ea33724b3",
                "0fa6c679-dc1e-4fda-80a3-53c283011926",
                "34caab38-92a1-4151-a32f-079f71242462",
                "b5a7776d-6c37-4615-920a-d6185d27dd7a",
                "31608376-1e49-457a-9166-c9317474fc9c"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 957,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            }
          ],
          "passes": [
            "c494115f-be28-429d-a2fb-1a1e09133fc7",
            "a2d51d0f-e19a-4f47-8a8a-a94a2bc50422"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 175,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "002788c6-6f10-4211-96e7-01dc6dd4b842",
          "title": "ContactInformation",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/profile/tests/components/contact-information/ContactInformation.unit.spec.jsx",
          "file": "/src/applications/personalization/profile/tests/components/contact-information/ContactInformation.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "c349c30f-95b6-4c45-9299-0ee3ac703bfa",
              "title": "correct contact info based on what exists in the Redux state",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/profile/tests/components/contact-information/ContactInformation.unit.spec.jsx",
              "file": "/src/applications/personalization/profile/tests/components/contact-information/ContactInformation.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "renders in ProfileInfoCard",
                  "fullTitle": "ContactInformation correct contact info based on what exists in the Redux state renders in ProfileInfoCard",
                  "timedOut": false,
                  "duration": 21,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "testContactInfo();",
                  "err": {},
                  "uuid": "e3fdf2e1-e008-4221-a1a8-13e9f8d0410d",
                  "parentUUID": "c349c30f-95b6-4c45-9299-0ee3ac703bfa",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "e3fdf2e1-e008-4221-a1a8-13e9f8d0410d"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 21,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "49e32dc0-aa70-4d8e-86fb-130a273193cf",
          "title": "Updating",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/profile/tests/components/contact-information/ContactInformation.update-address.unit.spec.jsx",
          "file": "/src/applications/personalization/profile/tests/components/contact-information/ContactInformation.update-address.unit.spec.jsx",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"Updating\"",
              "fullTitle": "Updating \"before all\" hook in \"Updating\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "server = _node.setupServer.apply(void 0, _toConsumableArray(mocks.editAddressSuccess).concat(_toConsumableArray(mocks.apmTelemetry), _toConsumableArray(mocks.rootTransactionStatus)));\nserver.listen();",
              "err": {},
              "uuid": "655dee71-b15c-44b6-a043-6716caed584e",
              "parentUUID": "49e32dc0-aa70-4d8e-86fb-130a273193cf",
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"before each\" hook in \"Updating\"",
              "fullTitle": "Updating \"before each\" hook in \"Updating\"",
              "timedOut": false,
              "duration": 12,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "window.VetsGov = {\n  pollTimeout: 1\n};\nvar initialState = (0, _unitTestHelpers.createBasicInitialState)();\nview = (0, _unitTestHelpers.renderWithProfileReducers)(ui, {\n  initialState: initialState\n});",
              "err": {},
              "uuid": "c4403f06-2558-4947-88ad-98dd64cbadcd",
              "parentUUID": "49e32dc0-aa70-4d8e-86fb-130a273193cf",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"Updating\"",
              "fullTitle": "Updating \"after all\" hook in \"Updating\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "server.close();",
              "err": {},
              "uuid": "bc357dca-d413-4dab-961a-8728d0fb0935",
              "parentUUID": "49e32dc0-aa70-4d8e-86fb-130a273193cf",
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"after each\" hook in \"Updating\"",
              "fullTitle": "Updating \"after each\" hook in \"Updating\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "server.resetHandlers();",
              "err": {},
              "uuid": "2a2dcbbe-5ad6-46d7-ac42-4bbb9161ee28",
              "parentUUID": "49e32dc0-aa70-4d8e-86fb-130a273193cf",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [],
          "suites": [
            {
              "uuid": "b3d2e007-db47-47d1-9ee9-b8d7b5f6a4ac",
              "title": "Mailing address when the entered address passes address validation",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/profile/tests/components/contact-information/ContactInformation.update-address.unit.spec.jsx",
              "file": "/src/applications/personalization/profile/tests/components/contact-information/ContactInformation.update-address.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should handle a transaction that succeeds quickly",
                  "fullTitle": "Updating Mailing address when the entered address passes address validation should handle a transaction that succeeds quickly",
                  "timedOut": false,
                  "duration": 189,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
                  "err": {},
                  "uuid": "3b7fda77-0a2a-4d8d-8b4e-391379852bfd",
                  "parentUUID": "b3d2e007-db47-47d1-9ee9-b8d7b5f6a4ac",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should handle a transaction that does not succeed until after the edit view exits",
                  "fullTitle": "Updating Mailing address when the entered address passes address validation should handle a transaction that does not succeed until after the edit view exits",
                  "timedOut": false,
                  "duration": 256,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
                  "err": {},
                  "uuid": "02014e9c-111f-4871-a0cd-86bb62ab6093",
                  "parentUUID": "b3d2e007-db47-47d1-9ee9-b8d7b5f6a4ac",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should show an error and not auto-exit edit mode if the address validation API errors",
                  "fullTitle": "Updating Mailing address when the entered address passes address validation should show an error and not auto-exit edit mode if the address validation API errors",
                  "timedOut": false,
                  "duration": 320,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
                  "err": {},
                  "uuid": "6075ea1d-3211-4d4a-8024-3e0b2740ff5a",
                  "parentUUID": "b3d2e007-db47-47d1-9ee9-b8d7b5f6a4ac",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should show an error and not auto-exit edit mode if the transaction cannot be created",
                  "fullTitle": "Updating Mailing address when the entered address passes address validation should show an error and not auto-exit edit mode if the transaction cannot be created",
                  "timedOut": false,
                  "duration": 299,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
                  "err": {},
                  "uuid": "589ebf29-ad1e-4957-822f-c9bc1cd99f74",
                  "parentUUID": "b3d2e007-db47-47d1-9ee9-b8d7b5f6a4ac",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should show an error and not auto-exit edit mode if the transaction fails quickly",
                  "fullTitle": "Updating Mailing address when the entered address passes address validation should show an error and not auto-exit edit mode if the transaction fails quickly",
                  "timedOut": false,
                  "duration": 0,
                  "state": "pending",
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": true,
                  "context": null,
                  "code": "",
                  "err": {},
                  "uuid": "62db61b3-bd6f-439d-99e8-0e7b997968fa",
                  "parentUUID": "b3d2e007-db47-47d1-9ee9-b8d7b5f6a4ac",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should show an error if the transaction fails after the edit view exits",
                  "fullTitle": "Updating Mailing address when the entered address passes address validation should show an error if the transaction fails after the edit view exits",
                  "timedOut": false,
                  "duration": 231,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
                  "err": {},
                  "uuid": "a3bf96c9-79ce-4ec2-9c50-0f90610508a4",
                  "parentUUID": "b3d2e007-db47-47d1-9ee9-b8d7b5f6a4ac",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "3b7fda77-0a2a-4d8d-8b4e-391379852bfd",
                "02014e9c-111f-4871-a0cd-86bb62ab6093",
                "6075ea1d-3211-4d4a-8024-3e0b2740ff5a",
                "589ebf29-ad1e-4957-822f-c9bc1cd99f74",
                "a3bf96c9-79ce-4ec2-9c50-0f90610508a4"
              ],
              "failures": [],
              "pending": [
                "62db61b3-bd6f-439d-99e8-0e7b997968fa"
              ],
              "skipped": [],
              "duration": 1295,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "ac60f232-336b-488f-aa74-d0b0231a73d4",
              "title": "Home address when the entered address passes address validation",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/profile/tests/components/contact-information/ContactInformation.update-address.unit.spec.jsx",
              "file": "/src/applications/personalization/profile/tests/components/contact-information/ContactInformation.update-address.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should handle a transaction that succeeds quickly",
                  "fullTitle": "Updating Home address when the entered address passes address validation should handle a transaction that succeeds quickly",
                  "timedOut": false,
                  "duration": 193,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
                  "err": {},
                  "uuid": "d33e1eda-9800-47e4-b171-70fabd97b34c",
                  "parentUUID": "ac60f232-336b-488f-aa74-d0b0231a73d4",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should handle a transaction that does not succeed until after the edit view exits",
                  "fullTitle": "Updating Home address when the entered address passes address validation should handle a transaction that does not succeed until after the edit view exits",
                  "timedOut": false,
                  "duration": 243,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
                  "err": {},
                  "uuid": "5055da53-68c6-4af9-9db9-1ac63e388aba",
                  "parentUUID": "ac60f232-336b-488f-aa74-d0b0231a73d4",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should show an error and not auto-exit edit mode if the address validation API errors",
                  "fullTitle": "Updating Home address when the entered address passes address validation should show an error and not auto-exit edit mode if the address validation API errors",
                  "timedOut": false,
                  "duration": 314,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
                  "err": {},
                  "uuid": "e927e5f4-354c-43d3-92f3-dc5a0c55a2e5",
                  "parentUUID": "ac60f232-336b-488f-aa74-d0b0231a73d4",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should show an error and not auto-exit edit mode if the transaction cannot be created",
                  "fullTitle": "Updating Home address when the entered address passes address validation should show an error and not auto-exit edit mode if the transaction cannot be created",
                  "timedOut": false,
                  "duration": 300,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
                  "err": {},
                  "uuid": "84c2ec6d-4d23-4bb1-8cfc-a516a0a2dd02",
                  "parentUUID": "ac60f232-336b-488f-aa74-d0b0231a73d4",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should show an error and not auto-exit edit mode if the transaction fails quickly",
                  "fullTitle": "Updating Home address when the entered address passes address validation should show an error and not auto-exit edit mode if the transaction fails quickly",
                  "timedOut": false,
                  "duration": 0,
                  "state": "pending",
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": true,
                  "context": null,
                  "code": "",
                  "err": {},
                  "uuid": "848efeed-7057-4ce1-856c-a5054d571c72",
                  "parentUUID": "ac60f232-336b-488f-aa74-d0b0231a73d4",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should show an error if the transaction fails after the edit view exits",
                  "fullTitle": "Updating Home address when the entered address passes address validation should show an error if the transaction fails after the edit view exits",
                  "timedOut": false,
                  "duration": 250,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
                  "err": {},
                  "uuid": "b20c6a78-8fc3-42a0-97ff-5d72828c238d",
                  "parentUUID": "ac60f232-336b-488f-aa74-d0b0231a73d4",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "d33e1eda-9800-47e4-b171-70fabd97b34c",
                "5055da53-68c6-4af9-9db9-1ac63e388aba",
                "e927e5f4-354c-43d3-92f3-dc5a0c55a2e5",
                "84c2ec6d-4d23-4bb1-8cfc-a516a0a2dd02",
                "b20c6a78-8fc3-42a0-97ff-5d72828c238d"
              ],
              "failures": [],
              "pending": [
                "848efeed-7057-4ce1-856c-a5054d571c72"
              ],
              "skipped": [],
              "duration": 1300,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "9d16bb01-0930-4e04-85d8-9dbe771fdbd9",
          "title": "Copy Address Modal",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/profile/tests/components/contact-information/CopyAddressController.unit.spec.jsx",
          "file": "/src/applications/personalization/profile/tests/components/contact-information/CopyAddressController.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should render the prompt with address information",
              "fullTitle": "Copy Address Modal should render the prompt with address information",
              "timedOut": false,
              "duration": 15,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
              "err": {},
              "uuid": "b3b8eccc-7881-4dee-bbfa-0466fb0e7864",
              "parentUUID": "9d16bb01-0930-4e04-85d8-9dbe771fdbd9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should render the prompt with different content when mailing address is missing",
              "fullTitle": "Copy Address Modal should render the prompt with different content when mailing address is missing",
              "timedOut": false,
              "duration": 5,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
              "err": {},
              "uuid": "986d38cc-a45b-4753-9cb6-b0c2772d620b",
              "parentUUID": "9d16bb01-0930-4e04-85d8-9dbe771fdbd9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should render the prompt with success",
              "fullTitle": "Copy Address Modal should render the prompt with success",
              "timedOut": false,
              "duration": 6,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
              "err": {},
              "uuid": "d745642b-06b7-4d55-83b8-455308e16cdf",
              "parentUUID": "9d16bb01-0930-4e04-85d8-9dbe771fdbd9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should render the prompt with failure alert",
              "fullTitle": "Copy Address Modal should render the prompt with failure alert",
              "timedOut": false,
              "duration": 3,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
              "err": {},
              "uuid": "018923d0-be15-4937-b05b-d452b412d43f",
              "parentUUID": "9d16bb01-0930-4e04-85d8-9dbe771fdbd9",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "b3b8eccc-7881-4dee-bbfa-0466fb0e7864",
            "986d38cc-a45b-4753-9cb6-b0c2772d620b",
            "d745642b-06b7-4d55-83b8-455308e16cdf",
            "018923d0-be15-4937-b05b-d452b412d43f"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 29,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "4a8e43a5-a12e-48b6-a23a-8e726a060858",
          "title": "EmailInformationSection",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/profile/tests/components/contact-information/EmailInformationSection.unit.spec.jsx",
          "file": "/src/applications/personalization/profile/tests/components/contact-information/EmailInformationSection.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should render Contact email section",
              "fullTitle": "EmailInformationSection should render Contact email section",
              "timedOut": false,
              "duration": 4,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var view = (0, _reactTestingLibraryHelpers.renderInReduxProvider)(/*#__PURE__*/_react.default.createElement(_EmailInformationSection.default, null), {\n  initialState: baseState,\n  reducers: {\n    vapService: _reducers.default\n  }\n});\nvar baseEmailUsername = baseState.user.profile.vapContactInfo.email.emailAddress.split('@')[0];\n(0, _chai.expect)(view.getByTestId('email')).to.exist;\n(0, _chai.expect)(view.getByTestId('email')).to.contain.text(baseEmailUsername);",
              "err": {},
              "uuid": "a8541270-42a1-45fc-89a8-b76b448afe36",
              "parentUUID": "4a8e43a5-a12e-48b6-a23a-8e726a060858",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should render Sign In email section for ID.me",
              "fullTitle": "EmailInformationSection should render Sign In email section for ID.me",
              "timedOut": false,
              "duration": 4,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var state = setSignInServiceName(baseState, _constants.CSP_IDS.ID_ME);\nvar view = (0, _reactTestingLibraryHelpers.renderInReduxProvider)(/*#__PURE__*/_react.default.createElement(_EmailInformationSection.default, null), {\n  initialState: state,\n  reducers: {\n    vapService: _reducers.default\n  }\n});\nvar label = _constants.SERVICE_PROVIDERS[_constants.CSP_IDS.ID_ME].label;\n(0, _chai.expect)(view.getByTestId('sign-in-email-link')).to.contain.text(label);",
              "err": {},
              "uuid": "33c077fd-bbe1-4bd8-b96c-234fd71c68bc",
              "parentUUID": "4a8e43a5-a12e-48b6-a23a-8e726a060858",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should render Sign In email section for LOGIN.GOV",
              "fullTitle": "EmailInformationSection should render Sign In email section for LOGIN.GOV",
              "timedOut": false,
              "duration": 4,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var state = setSignInServiceName(baseState, _constants.CSP_IDS.LOGIN_GOV);\nvar view = (0, _reactTestingLibraryHelpers.renderInReduxProvider)(/*#__PURE__*/_react.default.createElement(_EmailInformationSection.default, null), {\n  initialState: state,\n  reducers: {\n    vapService: _reducers.default\n  }\n});\nvar label = _constants.SERVICE_PROVIDERS[_constants.CSP_IDS.LOGIN_GOV].label;\n(0, _chai.expect)(view.getByTestId('sign-in-email-link')).to.contain.text(label);",
              "err": {},
              "uuid": "7b99ba39-8fdb-4660-946e-8640f75c4408",
              "parentUUID": "4a8e43a5-a12e-48b6-a23a-8e726a060858",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should not render Sign In email section for MHV",
              "fullTitle": "EmailInformationSection should not render Sign In email section for MHV",
              "timedOut": false,
              "duration": 3,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var state = setSignInServiceName(baseState, _constants.CSP_IDS.MHV);\nvar view = (0, _reactTestingLibraryHelpers.renderInReduxProvider)(/*#__PURE__*/_react.default.createElement(_EmailInformationSection.default, null), {\n  initialState: state,\n  reducers: {\n    vapService: _reducers.default\n  }\n});\n(0, _chai.expect)(view.queryByTestId('sign-in-email-link')).not.to.exist;",
              "err": {},
              "uuid": "12e9b2ce-f054-4875-ab89-c02c7fba1e8f",
              "parentUUID": "4a8e43a5-a12e-48b6-a23a-8e726a060858",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should not render Sign In email section for DS LOGON",
              "fullTitle": "EmailInformationSection should not render Sign In email section for DS LOGON",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var state = setSignInServiceName(baseState, _constants.CSP_IDS.DS_LOGON);\nvar view = (0, _reactTestingLibraryHelpers.renderInReduxProvider)(/*#__PURE__*/_react.default.createElement(_EmailInformationSection.default, null), {\n  initialState: state,\n  reducers: {\n    vapService: _reducers.default\n  }\n});\n(0, _chai.expect)(view.queryByTestId('sign-in-email-link')).not.to.exist;",
              "err": {},
              "uuid": "fed0aef8-31b7-4ec9-8d7f-73ccfd1da5ab",
              "parentUUID": "4a8e43a5-a12e-48b6-a23a-8e726a060858",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a8541270-42a1-45fc-89a8-b76b448afe36",
            "33c077fd-bbe1-4bd8-b96c-234fd71c68bc",
            "7b99ba39-8fdb-4660-946e-8640f75c4408",
            "12e9b2ce-f054-4875-ab89-c02c7fba1e8f",
            "fed0aef8-31b7-4ec9-8d7f-73ccfd1da5ab"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 17,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "4b91a444-d886-492d-b847-15205d4f8799",
          "title": "when 'signInServiceName' is 'logingov'",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/profile/tests/components/contact-information/SignInServiceUpdateLink.unit.spec.jsx",
          "file": "/src/applications/personalization/profile/tests/components/contact-information/SignInServiceUpdateLink.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should render without crashing",
              "fullTitle": "when 'signInServiceName' is 'logingov' should render without crashing",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _renderInReduxProvide = (0, _reactTestingLibraryHelpers.renderInReduxProvider)(/*#__PURE__*/_react.default.createElement(_SignInServiceUpdateLink.default, null), {\n    initialState: initialState\n  }),\n  container = _renderInReduxProvide.container;\n(0, _chai.expect)(container).to.be.a('HTMLDivElement');",
              "err": {},
              "uuid": "11af911f-af21-4647-afa7-f97925fb7e75",
              "parentUUID": "4b91a444-d886-492d-b847-15205d4f8799",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should render the link with correct href and label",
              "fullTitle": "when 'signInServiceName' is 'logingov' should render the link with correct href and label",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _renderInReduxProvide2 = (0, _reactTestingLibraryHelpers.renderInReduxProvider)(/*#__PURE__*/_react.default.createElement(_SignInServiceUpdateLink.default, null), {\n    initialState: initialState\n  }),\n  getByText = _renderInReduxProvide2.getByText;\nvar linkElement = getByText(\"Update your sign-in information on the \".concat(expectedLabel, \" website\"));\n(0, _chai.expect)(linkElement).to.exist;\n(0, _chai.expect)(linkElement.getAttribute('href')).to.equal(expectedLink);",
              "err": {},
              "uuid": "adbf8439-f5f5-4c75-93cd-8fc1ab3a4cba",
              "parentUUID": "4b91a444-d886-492d-b847-15205d4f8799",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "11af911f-af21-4647-afa7-f97925fb7e75",
            "adbf8439-f5f5-4c75-93cd-8fc1ab3a4cba"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "df5048c3-2fd2-48ac-8280-e6bf63fda11b",
          "title": "when 'signInServiceName' is 'idme'",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/profile/tests/components/contact-information/SignInServiceUpdateLink.unit.spec.jsx",
          "file": "/src/applications/personalization/profile/tests/components/contact-information/SignInServiceUpdateLink.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should render without crashing",
              "fullTitle": "when 'signInServiceName' is 'idme' should render without crashing",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _renderInReduxProvide = (0, _reactTestingLibraryHelpers.renderInReduxProvider)(/*#__PURE__*/_react.default.createElement(_SignInServiceUpdateLink.default, null), {\n    initialState: initialState\n  }),\n  container = _renderInReduxProvide.container;\n(0, _chai.expect)(container).to.be.a('HTMLDivElement');",
              "err": {},
              "uuid": "2f48e0cf-0864-473d-9d84-107e980860f3",
              "parentUUID": "df5048c3-2fd2-48ac-8280-e6bf63fda11b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should render the link with correct href and label",
              "fullTitle": "when 'signInServiceName' is 'idme' should render the link with correct href and label",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _renderInReduxProvide2 = (0, _reactTestingLibraryHelpers.renderInReduxProvider)(/*#__PURE__*/_react.default.createElement(_SignInServiceUpdateLink.default, null), {\n    initialState: initialState\n  }),\n  getByText = _renderInReduxProvide2.getByText;\nvar linkElement = getByText(\"Update your sign-in information on the \".concat(expectedLabel, \" website\"));\n(0, _chai.expect)(linkElement).to.exist;\n(0, _chai.expect)(linkElement.getAttribute('href')).to.equal(expectedLink);",
              "err": {},
              "uuid": "72b7e6bc-725c-49f8-a486-02b2f382771e",
              "parentUUID": "df5048c3-2fd2-48ac-8280-e6bf63fda11b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "2f48e0cf-0864-473d-9d84-107e980860f3",
            "72b7e6bc-725c-49f8-a486-02b2f382771e"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "61dfb9a5-1538-4410-a953-40c5067f208a",
          "title": "when 'signInServiceName' is 'dslogon'",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/profile/tests/components/contact-information/SignInServiceUpdateLink.unit.spec.jsx",
          "file": "/src/applications/personalization/profile/tests/components/contact-information/SignInServiceUpdateLink.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should render without crashing",
              "fullTitle": "when 'signInServiceName' is 'dslogon' should render without crashing",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _renderInReduxProvide = (0, _reactTestingLibraryHelpers.renderInReduxProvider)(/*#__PURE__*/_react.default.createElement(_SignInServiceUpdateLink.default, null), {\n    initialState: initialState\n  }),\n  container = _renderInReduxProvide.container;\n(0, _chai.expect)(container).to.be.a('HTMLDivElement');",
              "err": {},
              "uuid": "f82226af-366a-4960-a726-88da6878e928",
              "parentUUID": "61dfb9a5-1538-4410-a953-40c5067f208a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should render the link with correct href and label",
              "fullTitle": "when 'signInServiceName' is 'dslogon' should render the link with correct href and label",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _renderInReduxProvide2 = (0, _reactTestingLibraryHelpers.renderInReduxProvider)(/*#__PURE__*/_react.default.createElement(_SignInServiceUpdateLink.default, null), {\n    initialState: initialState\n  }),\n  getByText = _renderInReduxProvide2.getByText;\nvar linkElement = getByText(\"Update your sign-in information on the \".concat(expectedLabel, \" website\"));\n(0, _chai.expect)(linkElement).to.exist;\n(0, _chai.expect)(linkElement.getAttribute('href')).to.equal(expectedLink);",
              "err": {},
              "uuid": "d4279b11-c0d0-4f43-b1a4-62a7fda98b91",
              "parentUUID": "61dfb9a5-1538-4410-a953-40c5067f208a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f82226af-366a-4960-a726-88da6878e928",
            "d4279b11-c0d0-4f43-b1a4-62a7fda98b91"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "8468758b-2419-4253-9a7e-2f09b335b21d",
          "title": "when 'signInServiceName' is 'mhv'",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/profile/tests/components/contact-information/SignInServiceUpdateLink.unit.spec.jsx",
          "file": "/src/applications/personalization/profile/tests/components/contact-information/SignInServiceUpdateLink.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should render without crashing",
              "fullTitle": "when 'signInServiceName' is 'mhv' should render without crashing",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _renderInReduxProvide = (0, _reactTestingLibraryHelpers.renderInReduxProvider)(/*#__PURE__*/_react.default.createElement(_SignInServiceUpdateLink.default, null), {\n    initialState: initialState\n  }),\n  container = _renderInReduxProvide.container;\n(0, _chai.expect)(container).to.be.a('HTMLDivElement');",
              "err": {},
              "uuid": "148c291f-8238-474c-a79b-0723c49b64df",
              "parentUUID": "8468758b-2419-4253-9a7e-2f09b335b21d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should render the link with correct href and label",
              "fullTitle": "when 'signInServiceName' is 'mhv' should render the link with correct href and label",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _renderInReduxProvide2 = (0, _reactTestingLibraryHelpers.renderInReduxProvider)(/*#__PURE__*/_react.default.createElement(_SignInServiceUpdateLink.default, null), {\n    initialState: initialState\n  }),\n  getByText = _renderInReduxProvide2.getByText;\nvar linkElement = getByText(\"Update your sign-in information on the \".concat(expectedLabel, \" website\"));\n(0, _chai.expect)(linkElement).to.exist;\n(0, _chai.expect)(linkElement.getAttribute('href')).to.equal(expectedLink);",
              "err": {},
              "uuid": "7ebc4b35-93ac-4cdb-bd98-d0956331f02a",
              "parentUUID": "8468758b-2419-4253-9a7e-2f09b335b21d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "148c291f-8238-474c-a79b-0723c49b64df",
            "7ebc4b35-93ac-4cdb-bd98-d0956331f02a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "cca8935b-4340-458b-9c91-94dbdb983469",
          "title": "<ProfileInformationEditView/> - Email Address",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/profile/tests/components/ContactInformationEditView.unit.spec.jsx",
          "file": "/src/applications/personalization/profile/tests/components/ContactInformationEditView.unit.spec.jsx",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"<ProfileInformationEditView/> - Email Address\"",
              "fullTitle": "<ProfileInformationEditView/> - Email Address \"before each\" hook in \"<ProfileInformationEditView/> - Email Address\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "props = {\n  activeEditView: 'email',\n  analyticsSectionName: 'email',\n  apiRoute: 'string',\n  clearErrors: function clearErrors() {},\n  convertCleanDataToPayload: function convertCleanDataToPayload() {},\n  data: null,\n  editViewData: null,\n  fieldName: 'email',\n  forceEditView: false,\n  formSchema: {},\n  getInitialFormValues: function getInitialFormValues() {},\n  field: {\n    value: {},\n    validations: {},\n    formSchema: formSchema,\n    uiSchema: uiSchema\n  },\n  hasUnsavedEdits: true,\n  isEmpty: function isEmpty() {},\n  onBlur: function onBlur() {},\n  onChangeFormDataAndSchemas: function onChangeFormDataAndSchemas() {},\n  title: 'Edit Some Field',\n  transaction: null,\n  transactionRequest: null,\n  uiSchema: {},\n  // from mapDispatchToProps\n  clearTransactionRequest: function clearTransactionRequest() {},\n  createTransaction: function createTransaction() {},\n  updateFormFieldWithSchema: function updateFormFieldWithSchema() {},\n  validateAddress: function validateAddress() {},\n  refreshTransaction: function refreshTransaction() {},\n  recordEvent: _sinon.default.spy()\n};",
              "err": {},
              "uuid": "96b8f79a-1401-4fdd-bdd2-47f09c72cedb",
              "parentUUID": "cca8935b-4340-458b-9c91-94dbdb983469",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": "renders with the correct props",
              "fullTitle": "<ProfileInformationEditView/> - Email Address renders with the correct props",
              "timedOut": false,
              "duration": 3,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var initialFormValues = {\n  someField: 'someFieldValue'\n};\n_sinon.default.stub(props, 'getInitialFormValues').returns(initialFormValues);\ncomponent = _enzyme.default.shallow(/*#__PURE__*/_react.default.createElement(_ProfileInformationEditView.ProfileInformationEditView, props));\ncomponent.setProps({\n  field: null\n});\ncomponent.unmount();",
              "err": {},
              "uuid": "a789f84e-3615-44bd-99ae-b3a63d0fbadd",
              "parentUUID": "cca8935b-4340-458b-9c91-94dbdb983469",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [
            {
              "uuid": "f616f4a2-010e-491d-b120-a4d74277306e",
              "title": "the `LoadingButton.isLoading`",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/profile/tests/components/ContactInformationEditView.unit.spec.jsx",
              "file": "/src/applications/personalization/profile/tests/components/ContactInformationEditView.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "is `true` if the transactionRequest is pending",
                  "fullTitle": "<ProfileInformationEditView/> - Email Address the `LoadingButton.isLoading` is `true` if the transactionRequest is pending",
                  "timedOut": false,
                  "duration": 11,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "props.transactionRequest = {\n  isPending: true\n};\ncomponent = _enzyme.default.shallow(/*#__PURE__*/_react.default.createElement(_ProfileInformationEditView.ProfileInformationEditView, props));\nvar loadingButton = component.find(_LoadingButton.default);\n(0, _chai.expect)(loadingButton.prop('isLoading')).to.be.true;\ncomponent.unmount();",
                  "err": {},
                  "uuid": "a367529e-4774-4598-a11d-3f22a31a155d",
                  "parentUUID": "f616f4a2-010e-491d-b120-a4d74277306e",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "is `true` if the transaction is pending",
                  "fullTitle": "<ProfileInformationEditView/> - Email Address the `LoadingButton.isLoading` is `true` if the transaction is pending",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "props.transaction = {\n  data: {\n    attributes: {\n      transactionStatus: 'RECEIVED'\n    }\n  }\n};\ncomponent = _enzyme.default.shallow(/*#__PURE__*/_react.default.createElement(_ProfileInformationEditView.ProfileInformationEditView, props));\nvar loadingButton = component.find(_LoadingButton.default);\n(0, _chai.expect)(loadingButton.prop('isLoading')).to.be.true;\ncomponent.unmount();",
                  "err": {},
                  "uuid": "0683b44b-656d-469d-ba0c-90e6eb482d0b",
                  "parentUUID": "f616f4a2-010e-491d-b120-a4d74277306e",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "is `false` if neither the transactionRequest or transaction are pending",
                  "fullTitle": "<ProfileInformationEditView/> - Email Address the `LoadingButton.isLoading` is `false` if neither the transactionRequest or transaction are pending",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "props.transactionRequest = {\n  isPending: false\n};\nprops.transaction = {\n  data: {\n    attributes: {\n      transactionStatus: 'COMPLETED_SUCCESS'\n    }\n  }\n};\ncomponent = _enzyme.default.shallow(/*#__PURE__*/_react.default.createElement(_ProfileInformationEditView.ProfileInformationEditView, props));\nvar loadingButton = component.find(_LoadingButton.default);\n(0, _chai.expect)(loadingButton.prop('isLoading')).to.be.false;\ncomponent.unmount();",
                  "err": {},
                  "uuid": "ee4804be-ecfb-4ddc-9c92-4e5b72245d50",
                  "parentUUID": "f616f4a2-010e-491d-b120-a4d74277306e",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "sets the LoadingButton to isLoading if the transaction is pending",
                  "fullTitle": "<ProfileInformationEditView/> - Email Address the `LoadingButton.isLoading` sets the LoadingButton to isLoading if the transaction is pending",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "",
                  "err": {},
                  "uuid": "1eae185b-2f5c-41f1-a523-06bb7ca6a5d0",
                  "parentUUID": "f616f4a2-010e-491d-b120-a4d74277306e",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "a367529e-4774-4598-a11d-3f22a31a155d",
                "0683b44b-656d-469d-ba0c-90e6eb482d0b",
                "ee4804be-ecfb-4ddc-9c92-4e5b72245d50",
                "1eae185b-2f5c-41f1-a523-06bb7ca6a5d0"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 16,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "4b676341-f503-43c4-923f-528048c65384",
              "title": "the cancel button",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/profile/tests/components/ContactInformationEditView.unit.spec.jsx",
              "file": "/src/applications/personalization/profile/tests/components/ContactInformationEditView.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "is hidden when the transactionRequest is pending",
                  "fullTitle": "<ProfileInformationEditView/> - Email Address the cancel button is hidden when the transactionRequest is pending",
                  "timedOut": false,
                  "duration": 8,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "props.transactionRequest = {\n  isPending: true\n};\ncomponent = _enzyme.default.mount(/*#__PURE__*/_react.default.createElement(_ProfileInformationEditView.ProfileInformationEditView, props));\n(0, _chai.expect)(component.text()).to.not.include('Cancel');\ncomponent.unmount();",
                  "err": {},
                  "uuid": "db421872-2af4-444b-a06d-d13c1f09f0d6",
                  "parentUUID": "4b676341-f503-43c4-923f-528048c65384",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "is visible when the transactionRequest is not pending",
                  "fullTitle": "<ProfileInformationEditView/> - Email Address the cancel button is visible when the transactionRequest is not pending",
                  "timedOut": false,
                  "duration": 5,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "props.transactionRequest = {\n  isPending: false\n};\ncomponent = _enzyme.default.mount(/*#__PURE__*/_react.default.createElement(_ProfileInformationEditView.ProfileInformationEditView, props));\n(0, _chai.expect)(component.html()).to.include('Cancel');\ncomponent.unmount();",
                  "err": {},
                  "uuid": "8b5b6d86-653b-4499-a9e3-d07c45ac6024",
                  "parentUUID": "4b676341-f503-43c4-923f-528048c65384",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "db421872-2af4-444b-a06d-d13c1f09f0d6",
                "8b5b6d86-653b-4499-a9e3-d07c45ac6024"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 13,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "10469b1b-296d-46ae-909b-81f19ec06c57",
              "title": "VAPServiceEditModalErrorMessage",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/profile/tests/components/ContactInformationEditView.unit.spec.jsx",
              "file": "/src/applications/personalization/profile/tests/components/ContactInformationEditView.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "is not shown if there isn't an error",
                  "fullTitle": "<ProfileInformationEditView/> - Email Address VAPServiceEditModalErrorMessage is not shown if there isn't an error",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "component = _enzyme.default.shallow(/*#__PURE__*/_react.default.createElement(_ProfileInformationEditView.ProfileInformationEditView, props));\nvar errorMessage = component.find('VAPServiceEditModalErrorMessage');\n(0, _chai.expect)(errorMessage).to.have.lengthOf(0);\ncomponent.unmount();",
                  "err": {},
                  "uuid": "dd7ad7d8-daec-4945-9f06-14e0c722dc76",
                  "parentUUID": "10469b1b-296d-46ae-909b-81f19ec06c57",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "is shown if there is a transactionRequest error",
                  "fullTitle": "<ProfileInformationEditView/> - Email Address VAPServiceEditModalErrorMessage is shown if there is a transactionRequest error",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "props.transactionRequest = {\n  error: true\n};\ncomponent = _enzyme.default.shallow(/*#__PURE__*/_react.default.createElement(_ProfileInformationEditView.ProfileInformationEditView, props));\nvar errorMessage = component.find('VAPServiceEditModalErrorMessage');\n(0, _chai.expect)(errorMessage).to.have.lengthOf(1);\ncomponent.unmount();",
                  "err": {},
                  "uuid": "13b34e72-4e2a-4127-8700-898a7bc98424",
                  "parentUUID": "10469b1b-296d-46ae-909b-81f19ec06c57",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "is shown if there is a transactionRequest error",
                  "fullTitle": "<ProfileInformationEditView/> - Email Address VAPServiceEditModalErrorMessage is shown if there is a transactionRequest error",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "props.transactionRequest = {\n  error: {}\n};\ncomponent = _enzyme.default.shallow(/*#__PURE__*/_react.default.createElement(_ProfileInformationEditView.ProfileInformationEditView, props));\nvar errorMessage = component.find('VAPServiceEditModalErrorMessage');\n(0, _chai.expect)(errorMessage).to.have.lengthOf(1);\ncomponent.unmount();",
                  "err": {},
                  "uuid": "41fc8c6b-4b40-463b-a58d-b518a194e2e4",
                  "parentUUID": "10469b1b-296d-46ae-909b-81f19ec06c57",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "is shown if there is a transaction error",
                  "fullTitle": "<ProfileInformationEditView/> - Email Address VAPServiceEditModalErrorMessage is shown if there is a transaction error",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "props.transaction = {\n  data: {\n    attributes: {\n      transactionStatus: 'COMPLETED_FAILURE'\n    }\n  }\n};\ncomponent = _enzyme.default.shallow(/*#__PURE__*/_react.default.createElement(_ProfileInformationEditView.ProfileInformationEditView, props));\nvar errorMessage = component.find('VAPServiceEditModalErrorMessage');\n(0, _chai.expect)(errorMessage).to.have.lengthOf(1);\ncomponent.unmount();",
                  "err": {},
                  "uuid": "fb48861c-e450-496a-a66b-920d04d7e8da",
                  "parentUUID": "10469b1b-296d-46ae-909b-81f19ec06c57",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "dd7ad7d8-daec-4945-9f06-14e0c722dc76",
                "13b34e72-4e2a-4127-8700-898a7bc98424",
                "41fc8c6b-4b40-463b-a58d-b518a194e2e4",
                "fb48861c-e450-496a-a66b-920d04d7e8da"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 6,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            }
          ],
          "passes": [
            "a789f84e-3615-44bd-99ae-b3a63d0fbadd"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "1fb3be31-b38b-40c0-b7e8-9b7b728902d1",
          "title": "<AccountInfoView />",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/profile/tests/components/direct-deposit/AccountInfoView.unit.spec.jsx",
          "file": "/src/applications/personalization/profile/tests/components/direct-deposit/AccountInfoView.unit.spec.jsx",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"<AccountInfoView />\"",
              "fullTitle": "<AccountInfoView /> \"before each\" hook in \"<AccountInfoView />\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "store = mockStore({});",
              "err": {},
              "uuid": "b2e9c0bb-9fab-4ab0-bfd1-dbc18c77dbdd",
              "parentUUID": "1fb3be31-b38b-40c0-b7e8-9b7b728902d1",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": "renders the account information correctly",
              "fullTitle": "<AccountInfoView /> renders the account information correctly",
              "timedOut": false,
              "duration": 9,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _render = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: store\n  }, /*#__PURE__*/_react.default.createElement(_AccountInfoView.AccountInfoView, {\n    paymentAccount: paymentAccount,\n    showUpdateSuccess: true\n  }))),\n  getByText = _render.getByText;\n(0, _chai.expect)(getByText('Test Bank')).to.exist;\n(0, _chai.expect)(getByText('1234')).to.exist;\n(0, _chai.expect)(getByText('Checking account')).to.exist;",
              "err": {},
              "uuid": "9f92c958-ffcb-416b-828b-a8493a94025b",
              "parentUUID": "1fb3be31-b38b-40c0-b7e8-9b7b728902d1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "renders the UpdateSuccessAlert when showUpdateSuccess is true",
              "fullTitle": "<AccountInfoView /> renders the UpdateSuccessAlert when showUpdateSuccess is true",
              "timedOut": false,
              "duration": 3,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _render2 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: store\n  }, /*#__PURE__*/_react.default.createElement(_AccountInfoView.AccountInfoView, {\n    paymentAccount: paymentAccount,\n    showUpdateSuccess: true\n  }))),\n  getByTestId = _render2.getByTestId;\n(0, _chai.expect)(getByTestId('bankInfoUpdateSuccessAlert')).to.exist;",
              "err": {},
              "uuid": "3fc635e9-2d77-4483-bcd3-f55c5e13f7ec",
              "parentUUID": "1fb3be31-b38b-40c0-b7e8-9b7b728902d1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "does not render the UpdateSuccessAlert when showUpdateSuccess is false",
              "fullTitle": "<AccountInfoView /> does not render the UpdateSuccessAlert when showUpdateSuccess is false",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _render3 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: store\n  }, /*#__PURE__*/_react.default.createElement(_AccountInfoView.AccountInfoView, {\n    paymentAccount: paymentAccount,\n    showUpdateSuccess: false\n  }))),\n  queryByTestId = _render3.queryByTestId;\n(0, _chai.expect)(queryByTestId('bankInfoUpdateSuccessAlert')).to.not.exist;",
              "err": {},
              "uuid": "c1d9d81d-13f2-4763-86f1-83d53de3ea39",
              "parentUUID": "1fb3be31-b38b-40c0-b7e8-9b7b728902d1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "dispatches the toggleDirectDepositEdit action when the Edit button is clicked",
              "fullTitle": "<AccountInfoView /> dispatches the toggleDirectDepositEdit action when the Edit button is clicked",
              "timedOut": false,
              "duration": 3,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _render4 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: store\n  }, /*#__PURE__*/_react.default.createElement(_AccountInfoView.AccountInfoView, {\n    paymentAccount: paymentAccount,\n    showUpdateSuccess: true\n  }))),\n  container = _render4.container;\nvar button = (0, _unitHelpers.getVaButtonByText)('Edit', {\n  container: container\n});\n_react2.fireEvent.click(button);\nvar actions = store.getActions();\n(0, _chai.expect)(actions).to.deep.equal([(0, _directDeposit.toggleDirectDepositEdit)()]);",
              "err": {},
              "uuid": "590f0074-430e-42e8-88e0-ebe337569c8f",
              "parentUUID": "1fb3be31-b38b-40c0-b7e8-9b7b728902d1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "renders the NoAccountInfo component when paymentAccount is not provided",
              "fullTitle": "<AccountInfoView /> renders the NoAccountInfo component when paymentAccount is not provided",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _render5 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: store\n  }, /*#__PURE__*/_react.default.createElement(_AccountInfoView.AccountInfoView, {\n    showUpdateSuccess: true\n  }))),\n  getByText = _render5.getByText,\n  container = _render5.container;\n// No account information text should be displayed\n(0, _chai.expect)(getByText('Edit your profile to add your bank information.')).to.exist;\n// Edit button should be displayed\n(0, _chai.expect)((0, _unitHelpers.getVaButtonByText)('Edit', {\n  container: container\n})).to.exist;",
              "err": {},
              "uuid": "3ec2dce0-3f1c-48dd-a44e-dbfb7188c58a",
              "parentUUID": "1fb3be31-b38b-40c0-b7e8-9b7b728902d1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "calls recordEvent when the Edit button is clicked and payment account is present",
              "fullTitle": "<AccountInfoView /> calls recordEvent when the Edit button is clicked and payment account is present",
              "timedOut": false,
              "duration": 3,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var recordEventSpy = _sinon.default.spy();\nvar _render6 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: store\n  }, /*#__PURE__*/_react.default.createElement(_AccountInfoView.AccountInfoView, {\n    paymentAccount: paymentAccount,\n    showUpdateSuccess: true,\n    recordEventImpl: recordEventSpy\n  }))),\n  container = _render6.container;\nvar button = (0, _unitHelpers.getVaButtonByText)('Edit', {\n  container: container\n});\n_react2.fireEvent.click(button);\n(0, _chai.expect)(recordEventSpy.calledOnce).to.be.true;\n(0, _chai.expect)(recordEventSpy.args[0][0]).to.deep.equal({\n  event: 'profile-navigation',\n  'profile-action': 'edit-link',\n  'profile-section': 'direct-deposit-information'\n});",
              "err": {},
              "uuid": "112b78f8-3e98-47e4-bd0f-40c454278f15",
              "parentUUID": "1fb3be31-b38b-40c0-b7e8-9b7b728902d1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "calls recordEvent when the Edit button is clicked and payment account is NOT present",
              "fullTitle": "<AccountInfoView /> calls recordEvent when the Edit button is clicked and payment account is NOT present",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var recordEventSpy = _sinon.default.spy();\nvar _render7 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: store\n  }, /*#__PURE__*/_react.default.createElement(_AccountInfoView.AccountInfoView, {\n    showUpdateSuccess: true,\n    recordEventImpl: recordEventSpy\n  }))),\n  container = _render7.container;\nvar button = (0, _unitHelpers.getVaButtonByText)('Edit', {\n  container: container\n});\n_react2.fireEvent.click(button);\n(0, _chai.expect)(recordEventSpy.calledOnce).to.be.true;\n(0, _chai.expect)(recordEventSpy.args[0][0]).to.deep.equal({\n  event: 'profile-navigation',\n  'profile-action': 'add-link',\n  'profile-section': 'direct-deposit-information'\n});",
              "err": {},
              "uuid": "aad41b93-e7af-40eb-88be-300fa81708d4",
              "parentUUID": "1fb3be31-b38b-40c0-b7e8-9b7b728902d1",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "9f92c958-ffcb-416b-828b-a8493a94025b",
            "3fc635e9-2d77-4483-bcd3-f55c5e13f7ec",
            "c1d9d81d-13f2-4763-86f1-83d53de3ea39",
            "590f0074-430e-42e8-88e0-ebe337569c8f",
            "3ec2dce0-3f1c-48dd-a44e-dbfb7188c58a",
            "112b78f8-3e98-47e4-bd0f-40c454278f15",
            "aad41b93-e7af-40eb-88be-300fa81708d4"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 24,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "ce383f5f-d3f8-4ca5-b5fb-58c91f55c772",
          "title": "<AccountUpdateView />",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/profile/tests/components/direct-deposit/AccountUpdateView.unit.spec.jsx",
          "file": "/src/applications/personalization/profile/tests/components/direct-deposit/AccountUpdateView.unit.spec.jsx",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"<AccountUpdateView />\"",
              "fullTitle": "<AccountUpdateView /> \"before each\" hook in \"<AccountUpdateView />\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "store = mockStore(createInitialState());\nprops = {\n  formData: {},\n  formSubmit: _sinon.default.stub(),\n  setFormData: _sinon.default.stub(),\n  isSaving: false,\n  saveError: null,\n  onCancel: _sinon.default.stub(),\n  showCancelModal: false,\n  setShowCancelModal: _sinon.default.stub(),\n  exitUpdateView: _sinon.default.stub()\n};",
              "err": {},
              "uuid": "38a5f416-ce5b-482d-9e39-107323112ed0",
              "parentUUID": "ce383f5f-d3f8-4ca5-b5fb-58c91f55c772",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": "renders the form fields correctly",
              "fullTitle": "<AccountUpdateView /> renders the form fields correctly",
              "timedOut": false,
              "duration": 11,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _renderWithProfileRed = (0, _unitTestHelpers.renderWithProfileReducers)(/*#__PURE__*/_react.default.createElement(_AccountUpdateView.AccountUpdateView, props), {\n    initialState: createInitialState()\n  }),\n  getByText = _renderWithProfileRed.getByText,\n  container = _renderWithProfileRed.container;\n(0, _chai.expect)(getByText('Account')).to.exist;\n// using these query selectors since the web components don't have an accessible name\n// that is easily queryable in unit tests\n(0, _chai.expect)(container.querySelector('va-radio[label=\"Account type\"]')).to.exist;\n(0, _chai.expect)(container.querySelector('va-radio-option[label=\"Checking\"]')).to.exist;\n(0, _chai.expect)(container.querySelector('va-radio-option[label=\"Savings\"]')).to.exist;\n(0, _chai.expect)(container.querySelector('va-text-input[label=\"Routing number\"]')).to.exist;\n(0, _chai.expect)(container.querySelector('va-text-input[label=\"Account number\"]')).to.exist;",
              "err": {},
              "uuid": "a857eac8-f619-40d3-a088-8f2160dd8ad2",
              "parentUUID": "ce383f5f-d3f8-4ca5-b5fb-58c91f55c772",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "renders the UpdateErrorAlert when saveError is provided",
              "fullTitle": "<AccountUpdateView /> renders the UpdateErrorAlert when saveError is provided",
              "timedOut": false,
              "duration": 8,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var errorHeadline = 'We couldn’t update your bank information';\nvar errorMessage = 'We’re sorry. We couldn’t update your payment information. Please try again later.';\nprops.saveError = 'Internal Server Error';\nvar _renderWithProfileRed2 = (0, _unitTestHelpers.renderWithProfileReducers)(/*#__PURE__*/_react.default.createElement(_AccountUpdateView.AccountUpdateView, props), {\n    initialState: createInitialState()\n  }),\n  getByText = _renderWithProfileRed2.getByText;\n(0, _chai.expect)(getByText(errorHeadline)).to.exist;\n(0, _chai.expect)(getByText(errorMessage)).to.exist;",
              "err": {},
              "uuid": "84f25aae-0a4c-4ce7-a0c1-a41a78e7676e",
              "parentUUID": "ce383f5f-d3f8-4ca5-b5fb-58c91f55c772",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "calls formSubmit when the form is submitted",
              "fullTitle": "<AccountUpdateView /> calls formSubmit when the form is submitted",
              "timedOut": false,
              "duration": 8,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _render = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: store\n  }, /*#__PURE__*/_react.default.createElement(_AccountUpdateView.AccountUpdateView, _extends({}, props, {\n    formData: {\n      accountType: 'Checking',\n      accountNumber: '1234567890',\n      routingNumber: '123456789'\n    }\n  })))),\n  getByText = _render.getByText;\n_react2.fireEvent.click(getByText('Save'));\n(0, _chai.expect)(props.formSubmit.calledOnce).to.be.true;",
              "err": {},
              "uuid": "9cabdcd2-b7b4-42bf-a599-aabe572fdc88",
              "parentUUID": "ce383f5f-d3f8-4ca5-b5fb-58c91f55c772",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "calls onCancel when the Cancel button is clicked",
              "fullTitle": "<AccountUpdateView /> calls onCancel when the Cancel button is clicked",
              "timedOut": false,
              "duration": 7,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _render2 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: store\n  }, /*#__PURE__*/_react.default.createElement(_AccountUpdateView.AccountUpdateView, props))),\n  container = _render2.container;\nvar button = (0, _unitHelpers.getVaButtonByText)('Cancel', {\n  container: container\n});\n_react2.fireEvent.click(button);\n(0, _chai.expect)(props.onCancel.calledOnce).to.be.true;",
              "err": {},
              "uuid": "d7ecd30c-d52e-42c7-9c12-9e3ea54c3c20",
              "parentUUID": "ce383f5f-d3f8-4ca5-b5fb-58c91f55c772",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "renders the ConfirmCancelModal when showCancelModal is true",
              "fullTitle": "<AccountUpdateView /> renders the ConfirmCancelModal when showCancelModal is true",
              "timedOut": false,
              "duration": 8,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "props.showCancelModal = true;\nvar _render3 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: store\n  }, /*#__PURE__*/_react.default.createElement(_AccountUpdateView.AccountUpdateView, _extends({}, props, {\n    formData: {\n      accountType: 'Checking',\n      accountNumber: '1234567890',\n      routingNumber: '123456789'\n    }\n  })))),\n  getByText = _render3.getByText,\n  container = _render3.container,\n  getByTestId = _render3.getByTestId;\nvar button = (0, _unitHelpers.getVaButtonByText)('Cancel', {\n  container: container\n});\n_react2.fireEvent.click(button);\nvar modal = getByTestId('confirm-cancel-modal');\n(0, _chai.expect)(modal).to.exist;\n(0, _chai.expect)(modal).to.have.attribute('visible', 'true');\n(0, _chai.expect)(getByText('finished editing and saving the changes to your direct deposit information', {\n  exact: false\n})).to.exist;",
              "err": {},
              "uuid": "5d6585be-76c4-441d-8ba7-3f02b8564d0f",
              "parentUUID": "ce383f5f-d3f8-4ca5-b5fb-58c91f55c772",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a857eac8-f619-40d3-a088-8f2160dd8ad2",
            "84f25aae-0a4c-4ce7-a0c1-a41a78e7676e",
            "9cabdcd2-b7b4-42bf-a599-aabe572fdc88",
            "d7ecd30c-d52e-42c7-9c12-9e3ea54c3c20",
            "5d6585be-76c4-441d-8ba7-3f02b8564d0f"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 42,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "989f2d9a-cb70-411e-9dbe-e8b1db3c09bc",
          "title": "authenticated experience -- profile -- unified direct deposit",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/profile/tests/components/direct-deposit/DirectDeposit.unit.spec.jsx",
          "file": "/src/applications/personalization/profile/tests/components/direct-deposit/DirectDeposit.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "430f8b4d-addb-47e9-8b46-b8114df461da",
              "title": "DirectDeposit",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/profile/tests/components/direct-deposit/DirectDeposit.unit.spec.jsx",
              "file": "/src/applications/personalization/profile/tests/components/direct-deposit/DirectDeposit.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Renders bank account read state - happy path",
                  "fullTitle": "authenticated experience -- profile -- unified direct deposit DirectDeposit Renders bank account read state - happy path",
                  "timedOut": false,
                  "duration": 12,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var _renderWithProfileRed = (0, _unitTestHelpers.renderWithProfileReducersAndRouter)(/*#__PURE__*/_react.default.createElement(_DirectDeposit.DirectDeposit, null), {\n    initialState: createInitialState({\n      serviceType: _constants.CSP_IDS.ID_ME\n    })\n  }),\n  getByText = _renderWithProfileRed.getByText;\n(0, _chai.expect)(getByText(/TEST BANK NAME/i)).to.exist;",
                  "err": {},
                  "uuid": "8ef5a6b8-3454-4800-a6d0-8977803e13f2",
                  "parentUUID": "430f8b4d-addb-47e9-8b46-b8114df461da",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "renders loading indicator when toggles are loading",
                  "fullTitle": "authenticated experience -- profile -- unified direct deposit DirectDeposit renders loading indicator when toggles are loading",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var _renderWithProfileRed2 = (0, _unitTestHelpers.renderWithProfileReducersAndRouter)(/*#__PURE__*/_react.default.createElement(_DirectDeposit.DirectDeposit, null), {\n    initialState: createInitialState({\n      toggles: {\n        loading: true\n      }\n    })\n  }),\n  container = _renderWithProfileRed2.container;\n(0, _chai.expect)(container.querySelector('va-loading-indicator')).to.exist;",
                  "err": {},
                  "uuid": "1c12d501-76ce-47e1-b847-922a3cc384ec",
                  "parentUUID": "430f8b4d-addb-47e9-8b46-b8114df461da",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Renders TemporaryOutage when hideDirectDeposit is true",
                  "fullTitle": "authenticated experience -- profile -- unified direct deposit DirectDeposit Renders TemporaryOutage when hideDirectDeposit is true",
                  "timedOut": false,
                  "duration": 18,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var _renderWithProfileRed3 = (0, _unitTestHelpers.renderWithProfileReducersAndRouter)(/*#__PURE__*/_react.default.createElement(_DirectDeposit.DirectDeposit, null), {\n    initialState: createInitialState({\n      serviceType: _constants.CSP_IDS.ID_ME,\n      toggles: (0, _featureToggles2.generateFeatureTogglesState)({\n        profileHideDirectDeposit: true\n      }).featureToggles\n    }),\n    path: '/profile/direct-deposit'\n  }),\n  getByRole = _renderWithProfileRed3.getByRole;\n(0, _chai.expect)(getByRole('heading', {\n  name: 'You can’t manage your direct deposit information online right now'\n})).to.exist;",
                  "err": {},
                  "uuid": "5953de8a-1daa-491a-b2e3-dd51dbaad37f",
                  "parentUUID": "430f8b4d-addb-47e9-8b46-b8114df461da",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Renders error state when error is present",
                  "fullTitle": "authenticated experience -- profile -- unified direct deposit DirectDeposit Renders error state when error is present",
                  "timedOut": false,
                  "duration": 14,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var _renderWithProfileRed4 = (0, _unitTestHelpers.renderWithProfileReducersAndRouter)(/*#__PURE__*/_react.default.createElement(_DirectDeposit.DirectDeposit, null), {\n    initialState: createInitialState({\n      serviceType: _constants.CSP_IDS.ID_ME,\n      loadError: 'Internal Server Error'\n    }),\n    path: '/profile/direct-deposit'\n  }),\n  getByRole = _renderWithProfileRed4.getByRole;\n(0, _chai.expect)(getByRole('heading', {\n  name: \"This page isn't available right now.\"\n})).to.exist;",
                  "err": {},
                  "uuid": "7ed1e48c-9c09-4c21-b9f3-f3866e7cb780",
                  "parentUUID": "430f8b4d-addb-47e9-8b46-b8114df461da",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Renders blocked state when isBlocked is true / user is deceased",
                  "fullTitle": "authenticated experience -- profile -- unified direct deposit DirectDeposit Renders blocked state when isBlocked is true / user is deceased",
                  "timedOut": false,
                  "duration": 5,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var state = createInitialState();\nstate.directDeposit.controlInformation.isNotDeceased = false;\nvar _renderWithProfileRed5 = (0, _unitTestHelpers.renderWithProfileReducersAndRouter)(/*#__PURE__*/_react.default.createElement(_DirectDeposit.DirectDeposit, null), {\n    initialState: state\n  }),\n  getByTestId = _renderWithProfileRed5.getByTestId;\n(0, _chai.expect)(getByTestId('direct-deposit-blocked')).to.exist;",
                  "err": {},
                  "uuid": "bdb086a6-cb64-49ca-8e0d-262421b2990f",
                  "parentUUID": "430f8b4d-addb-47e9-8b46-b8114df461da",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Renders VerifyIdentity when showBankInformation is false",
                  "fullTitle": "authenticated experience -- profile -- unified direct deposit DirectDeposit Renders VerifyIdentity when showBankInformation is false",
                  "timedOut": false,
                  "duration": 13,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var state = createInitialState({\n  serviceType: _constants.CSP_IDS.ID_ME\n});\nstate.user.profile.multifactor = false;\nvar _renderWithProfileRed6 = (0, _unitTestHelpers.renderWithProfileReducersAndRouter)(/*#__PURE__*/_react.default.createElement(_DirectDeposit.DirectDeposit, null), {\n    initialState: state,\n    path: '/profile/direct-deposit'\n  }),\n  getByTestId = _renderWithProfileRed6.getByTestId;\n(0, _chai.expect)(getByTestId('direct-deposit-mfa-message')).to.exist;",
                  "err": {},
                  "uuid": "452d0716-336d-4568-bca8-855e42138adb",
                  "parentUUID": "430f8b4d-addb-47e9-8b46-b8114df461da",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "renders ineligible state when canUpdateDirectDeposit is false",
                  "fullTitle": "authenticated experience -- profile -- unified direct deposit DirectDeposit renders ineligible state when canUpdateDirectDeposit is false",
                  "timedOut": false,
                  "duration": 5,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var state = createInitialState();\nstate.directDeposit.controlInformation.canUpdateDirectDeposit = false;\nvar _renderWithProfileRed7 = (0, _unitTestHelpers.renderWithProfileReducersAndRouter)(/*#__PURE__*/_react.default.createElement(_DirectDeposit.DirectDeposit, null), {\n    initialState: state\n  }),\n  getByText = _renderWithProfileRed7.getByText;\n(0, _chai.expect)(getByText(/Our records show that you don’t receive benefit payments from VA/i)).to.exist;",
                  "err": {},
                  "uuid": "2c2477c1-5c39-458d-bb4a-b79af170ecb6",
                  "parentUUID": "430f8b4d-addb-47e9-8b46-b8114df461da",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "renders ineligible state when profile services do not include lighthouse",
                  "fullTitle": "authenticated experience -- profile -- unified direct deposit DirectDeposit renders ineligible state when profile services do not include lighthouse",
                  "timedOut": false,
                  "duration": 5,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var state = createInitialState();\nstate.user.profile.services = [];\nvar _renderWithProfileRed8 = (0, _unitTestHelpers.renderWithProfileReducersAndRouter)(/*#__PURE__*/_react.default.createElement(_DirectDeposit.DirectDeposit, null), {\n    initialState: state\n  }),\n  getByText = _renderWithProfileRed8.getByText;\n(0, _chai.expect)(getByText(/Our records show that you don’t receive benefit payments from VA/i)).to.exist;",
                  "err": {},
                  "uuid": "fd280b78-d0b1-46b0-8aa2-705ecd94db6e",
                  "parentUUID": "430f8b4d-addb-47e9-8b46-b8114df461da",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "renders AccountUpdateView when isEditing is true",
                  "fullTitle": "authenticated experience -- profile -- unified direct deposit DirectDeposit renders AccountUpdateView when isEditing is true",
                  "timedOut": false,
                  "duration": 29,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
                  "err": {},
                  "uuid": "d397d02b-0474-429d-8d7a-fe22e6a3b124",
                  "parentUUID": "430f8b4d-addb-47e9-8b46-b8114df461da",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "8ef5a6b8-3454-4800-a6d0-8977803e13f2",
                "1c12d501-76ce-47e1-b847-922a3cc384ec",
                "5953de8a-1daa-491a-b2e3-dd51dbaad37f",
                "7ed1e48c-9c09-4c21-b9f3-f3866e7cb780",
                "bdb086a6-cb64-49ca-8e0d-262421b2990f",
                "452d0716-336d-4568-bca8-855e42138adb",
                "2c2477c1-5c39-458d-bb4a-b79af170ecb6",
                "fd280b78-d0b1-46b0-8aa2-705ecd94db6e",
                "d397d02b-0474-429d-8d7a-fe22e6a3b124"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 104,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "b1be9f85-3ef9-40e7-b79e-89b47fcf7055",
              "title": "Montgomery GI Bill",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/profile/tests/components/direct-deposit/DirectDeposit.unit.spec.jsx",
              "file": "/src/applications/personalization/profile/tests/components/direct-deposit/DirectDeposit.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Renders GI Bill additional information",
                  "fullTitle": "authenticated experience -- profile -- unified direct deposit Montgomery GI Bill Renders GI Bill additional information",
                  "timedOut": false,
                  "duration": 11,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var _renderWithProfileRed10 = (0, _unitTestHelpers.renderWithProfileReducersAndRouter)(/*#__PURE__*/_react.default.createElement(_DirectDeposit.DirectDeposit, null), {\n    initialState: createInitialState()\n  }),\n  getByTestId = _renderWithProfileRed10.getByTestId;\n// Test the va-additional-info element\nvar additionalInfoElement = getByTestId('gi-bill-additional-info');\n(0, _chai.expect)(additionalInfoElement).to.exist;\n(0, _chai.expect)(additionalInfoElement.getAttribute('trigger').trim()).to.equal('How to update your direct deposit information for Montgomery GI Bill');\n// Test the description paragraph\nvar descriptionElement = getByTestId('gi-bill-description');\n(0, _chai.expect)(descriptionElement).to.exist;\n// Test the link\nvar linkElement = getByTestId('gi-bill-update-link');\n(0, _chai.expect)(linkElement).to.exist;\n(0, _chai.expect)(linkElement.getAttribute('href').trim()).to.equal('https://www.va.gov/education/verify-school-enrollment/#for-montgomery-gi-bill-benefit');\n(0, _chai.expect)(linkElement.getAttribute('text').trim()).to.equal('Update direct deposit information for MGIB benefits');",
                  "err": {},
                  "uuid": "805a364b-87eb-4b89-b7f4-6eed142e8335",
                  "parentUUID": "b1be9f85-3ef9-40e7-b79e-89b47fcf7055",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "805a364b-87eb-4b89-b7f4-6eed142e8335"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 11,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "f763457d-345d-4dfb-ad9e-2bb0fead96a0",
          "title": "PaymentHistory",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/profile/tests/components/direct-deposit/PaymentHistory.unit.spec.jsx",
          "file": "/src/applications/personalization/profile/tests/components/direct-deposit/PaymentHistory.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should render the payment history link",
              "fullTitle": "PaymentHistory should render the payment history link",
              "timedOut": false,
              "duration": 7,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
              "err": {},
              "uuid": "caae3b4c-3baa-4eca-8303-dcf67c6b12aa",
              "parentUUID": "f763457d-345d-4dfb-ad9e-2bb0fead96a0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should record an event when the payment history link is clicked",
              "fullTitle": "PaymentHistory should record an event when the payment history link is clicked",
              "timedOut": false,
              "duration": 9,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var recordEventSpy = _sinon.default.spy();\nvar tree = (0, _unitTestHelpers.renderWithProfileReducers)(/*#__PURE__*/_react.default.createElement(_PaymentHistoryCard.PaymentHistoryCard, {\n  recordEventImpl: recordEventSpy\n}), {\n  initialState: {\n    featureToggles: {\n      loading: false\n    }\n  }\n});\nvar link = tree.getByRole('link', {\n  name: /view your payment history/i\n});\n_userEvent.default.click(link);\n(0, _chai.expect)(recordEventSpy.firstCall.args[0]).to.be.deep.equal({\n  event: 'profile-navigation',\n  'profile-action': 'view-link',\n  'profile-section': 'view-payment-history'\n});",
              "err": {},
              "uuid": "7484b8f7-fecf-4543-bb3c-6bef4bdf2ddc",
              "parentUUID": "f763457d-345d-4dfb-ad9e-2bb0fead96a0",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "caae3b4c-3baa-4eca-8303-dcf67c6b12aa",
            "7484b8f7-fecf-4543-bb3c-6bef4bdf2ddc"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 16,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "37d4c94f-171c-452c-970f-9bb562938251",
          "title": "<UpdateErrorAlert />",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/profile/tests/components/direct-deposit/UpdateErrorAlert.unit.spec.jsx",
          "file": "/src/applications/personalization/profile/tests/components/direct-deposit/UpdateErrorAlert.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "renders",
              "fullTitle": "<UpdateErrorAlert /> renders",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _render = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_UpdateErrorAlert.UpdateErrorAlert, {\n    saveError: errors.generic\n  })),\n  container = _render.container;\n(0, _chai.expect)(container.innerHTML).to.not.be.empty;",
              "err": {},
              "uuid": "9e131836-0235-4cac-8668-37e0b60e0f40",
              "parentUUID": "37d4c94f-171c-452c-970f-9bb562938251",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "renders the default error when it gets an unrecognized error message",
              "fullTitle": "<UpdateErrorAlert /> renders the default error when it gets an unrecognized error message",
              "timedOut": false,
              "duration": 3,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
              "err": {},
              "uuid": "7e9a966f-76d1-459b-a926-345fdd464c4a",
              "parentUUID": "37d4c94f-171c-452c-970f-9bb562938251",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "renders the invalid routing number error for checksum error",
              "fullTitle": "<UpdateErrorAlert /> renders the invalid routing number error for checksum error",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
              "err": {},
              "uuid": "87f60b1f-75be-432c-b4be-1c3d0efe5807",
              "parentUUID": "37d4c94f-171c-452c-970f-9bb562938251",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "renders the invalid routing number error for invalid error",
              "fullTitle": "<UpdateErrorAlert /> renders the invalid routing number error for invalid error",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
              "err": {},
              "uuid": "b7c6adc7-daea-4193-a731-7eaef95084da",
              "parentUUID": "37d4c94f-171c-452c-970f-9bb562938251",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "renders the flagged account error",
              "fullTitle": "<UpdateErrorAlert /> renders the flagged account error",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
              "err": {},
              "uuid": "a1269c84-3d9a-4641-bc9c-96fb6f358a53",
              "parentUUID": "37d4c94f-171c-452c-970f-9bb562938251",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "renders the flagged routing number error",
              "fullTitle": "<UpdateErrorAlert /> renders the flagged routing number error",
              "timedOut": false,
              "duration": 3,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
              "err": {},
              "uuid": "08777228-38e5-4061-bc4c-4da0a6830a44",
              "parentUUID": "37d4c94f-171c-452c-970f-9bb562938251",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "renders the mailing address error",
              "fullTitle": "<UpdateErrorAlert /> renders the mailing address error",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
              "err": {},
              "uuid": "8b5c2628-a1c1-4e72-bf9c-5fa4df31b112",
              "parentUUID": "37d4c94f-171c-452c-970f-9bb562938251",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "renders the day phone number error",
              "fullTitle": "<UpdateErrorAlert /> renders the day phone number error",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
              "err": {},
              "uuid": "f2c1c118-1027-4504-bede-15e612cc0b9a",
              "parentUUID": "37d4c94f-171c-452c-970f-9bb562938251",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "renders the night phone number error",
              "fullTitle": "<UpdateErrorAlert /> renders the night phone number error",
              "timedOut": false,
              "duration": 3,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
              "err": {},
              "uuid": "b4c182ce-719a-407c-9769-8dc17821409c",
              "parentUUID": "37d4c94f-171c-452c-970f-9bb562938251",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "9e131836-0235-4cac-8668-37e0b60e0f40",
            "7e9a966f-76d1-459b-a926-345fdd464c4a",
            "87f60b1f-75be-432c-b4be-1c3d0efe5807",
            "b7c6adc7-daea-4193-a731-7eaef95084da",
            "a1269c84-3d9a-4641-bc9c-96fb6f358a53",
            "08777228-38e5-4061-bc4c-4da0a6830a44",
            "8b5c2628-a1c1-4e72-bf9c-5fa4df31b112",
            "f2c1c118-1027-4504-bede-15e612cc0b9a",
            "b4c182ce-719a-407c-9769-8dc17821409c"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 19,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "955865e8-dd91-4608-88b7-f9ea91bd72c0",
          "title": "authenticated experience -- profile -- direct deposit",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/profile/tests/components/direct-deposit/VerifyIdentity.unit.spec.jsx",
          "file": "/src/applications/personalization/profile/tests/components/direct-deposit/VerifyIdentity.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "fe5bfaff-a712-48fc-9bcd-fb6010d4ca07",
              "title": "VerifyIdentity",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/profile/tests/components/direct-deposit/VerifyIdentity.unit.spec.jsx",
              "file": "/src/applications/personalization/profile/tests/components/direct-deposit/VerifyIdentity.unit.spec.jsx",
              "beforeHooks": [
                {
                  "title": "\"before each\" hook in \"VerifyIdentity\"",
                  "fullTitle": "authenticated experience -- profile -- direct deposit VerifyIdentity \"before each\" hook in \"VerifyIdentity\"",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "global.window.crypto = _mockCrypto.mockCrypto;\nwindow.location = new URL('https://dev.va.gov/');",
                  "err": {},
                  "uuid": "47f40484-a1d0-4508-8474-ec32fa6585cc",
                  "parentUUID": "fe5bfaff-a712-48fc-9bcd-fb6010d4ca07",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [
                {
                  "title": "\"after each\" hook in \"VerifyIdentity\"",
                  "fullTitle": "authenticated experience -- profile -- direct deposit VerifyIdentity \"after each\" hook in \"VerifyIdentity\"",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "global.window.crypto = oldCrypto;\n(0, _react2.cleanup)();",
                  "err": {},
                  "uuid": "8921d95f-c5cd-498a-bc49-e46c51432557",
                  "parentUUID": "fe5bfaff-a712-48fc-9bcd-fb6010d4ca07",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "tests": [
                {
                  "title": "renders the proper URLs for VerifyIdentity (SAML)",
                  "fullTitle": "authenticated experience -- profile -- direct deposit VerifyIdentity renders the proper URLs for VerifyIdentity (SAML)",
                  "timedOut": false,
                  "duration": 8,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
                  "err": {},
                  "uuid": "b7896ad8-2dbf-41f4-acfb-4267243f2cc5",
                  "parentUUID": "fe5bfaff-a712-48fc-9bcd-fb6010d4ca07",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "renders the proper URLs for VerifyIdentity (OAuth)",
                  "fullTitle": "authenticated experience -- profile -- direct deposit VerifyIdentity renders the proper URLs for VerifyIdentity (OAuth)",
                  "timedOut": false,
                  "duration": 14,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
                  "err": {},
                  "uuid": "742b5739-5c6f-46aa-91eb-d25f31263235",
                  "parentUUID": "fe5bfaff-a712-48fc-9bcd-fb6010d4ca07",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "b7896ad8-2dbf-41f4-acfb-4267243f2cc5",
                "742b5739-5c6f-46aa-91eb-d25f31263235"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 22,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "bbf4a7ef-686c-4237-8a7b-1211e1a4527f",
          "title": "<Edit>",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/profile/tests/components/edit/Edit.unit.spec.jsx",
          "file": "/src/applications/personalization/profile/tests/components/edit/Edit.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "renders form with valid fieldName query present",
              "fullTitle": "<Edit> renders form with valid fieldName query present",
              "timedOut": false,
              "duration": 24,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
              "err": {},
              "uuid": "1e3ef76f-dcda-47aa-8fe9-50fffdd7f501",
              "parentUUID": "bbf4a7ef-686c-4237-8a7b-1211e1a4527f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "renders fallback when invalid fieldName query present",
              "fullTitle": "<Edit> renders fallback when invalid fieldName query present",
              "timedOut": false,
              "duration": 5,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
              "err": {},
              "uuid": "50eca3b8-777b-4d15-b178-9a5b8b0f04f3",
              "parentUUID": "bbf4a7ef-686c-4237-8a7b-1211e1a4527f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "renders fallback when invalid returnPath in query params",
              "fullTitle": "<Edit> renders fallback when invalid returnPath in query params",
              "timedOut": false,
              "duration": 12,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
              "err": {},
              "uuid": "33bc90fc-ecac-494c-a1e3-03fd143a4f4f",
              "parentUUID": "bbf4a7ef-686c-4237-8a7b-1211e1a4527f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "renders the \"Update\" heading when there is field data",
              "fullTitle": "<Edit> renders the \"Update\" heading when there is field data",
              "timedOut": false,
              "duration": 8,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
              "err": {},
              "uuid": "2e91013f-1d09-44e0-8f7e-57dbcfcb60d1",
              "parentUUID": "bbf4a7ef-686c-4237-8a7b-1211e1a4527f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "1e3ef76f-dcda-47aa-8fe9-50fffdd7f501",
            "50eca3b8-777b-4d15-b178-9a5b8b0f04f3",
            "33bc90fc-ecac-494c-a1e3-03fd143a4f4f",
            "2e91013f-1d09-44e0-8f7e-57dbcfcb60d1"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 49,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "2f4c756d-48fd-4f44-9178-c94fd2bcd341",
          "title": "<EditBreadcrumb />",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/profile/tests/components/edit/EditBreadcrumb.unit.spec.jsx",
          "file": "/src/applications/personalization/profile/tests/components/edit/EditBreadcrumb.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "renders the children and responds to click events",
              "fullTitle": "<EditBreadcrumb /> renders the children and responds to click events",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var onClickHandler = _sinon.default.spy();\nvar _render = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_EditBreadcrumb.EditBreadcrumb, {\n    href: \"#\",\n    onClickHandler: onClickHandler\n  }, \"Test Breadcrumb\")),\n  getByText = _render.getByText;\nvar linkElement = getByText(/Test Breadcrumb/i);\n(0, _chai.expect)(linkElement).to.be.ok;\n_react2.fireEvent.click(linkElement);\n_sinon.default.assert.calledOnce(onClickHandler);",
              "err": {},
              "uuid": "5b9008ee-a595-40da-a05f-c19dcafc024c",
              "parentUUID": "2f4c756d-48fd-4f44-9178-c94fd2bcd341",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "applies the correct class name",
              "fullTitle": "<EditBreadcrumb /> applies the correct class name",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _render2 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_EditBreadcrumb.EditBreadcrumb, {\n    href: \"#\",\n    className: \"custom-class\"\n  }, \"Test Breadcrumb\")),\n  container = _render2.container;\n(0, _chai.expect)(container.firstChild).to.have.class('custom-class');",
              "err": {},
              "uuid": "e617f28f-b0a9-4f0f-bced-21befff16b02",
              "parentUUID": "2f4c756d-48fd-4f44-9178-c94fd2bcd341",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "5b9008ee-a595-40da-a05f-c19dcafc024c",
            "e617f28f-b0a9-4f0f-bced-21befff16b02"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "9452da7f-1302-4009-8cfc-9a9d6f915039",
          "title": "<Hub />",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/profile/tests/components/hub/Hub.unit.spec.jsx",
          "file": "/src/applications/personalization/profile/tests/components/hub/Hub.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should render without crashing",
              "fullTitle": "<Hub /> should render without crashing",
              "timedOut": false,
              "duration": 10,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _setup = setup(),\n  getByText = _setup.getByText;\n(0, _chai.expect)(getByText('Profile', {\n  selector: 'h1'\n})).to.exist;",
              "err": {},
              "uuid": "42aac238-4650-4b52-825e-8211f7ab7a10",
              "parentUUID": "9452da7f-1302-4009-8cfc-9a9d6f915039",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should render BadAddressAlert when hasBadAddress is true",
              "fullTitle": "<Hub /> should render BadAddressAlert when hasBadAddress is true",
              "timedOut": false,
              "duration": 7,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _setup2 = setup({\n    badAddress: true\n  }),\n  getByTestId = _setup2.getByTestId;\n(0, _chai.expect)(getByTestId('bad-address-profile-alert')).to.exist;",
              "err": {},
              "uuid": "827b9a1e-7e9d-4283-aeee-11913c0e61c5",
              "parentUUID": "9452da7f-1302-4009-8cfc-9a9d6f915039",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should not render BadAddressAlert when hasBadAddress is false",
              "fullTitle": "<Hub /> should not render BadAddressAlert when hasBadAddress is false",
              "timedOut": false,
              "duration": 8,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _setup3 = setup({\n    badAddress: false\n  }),\n  queryByTestId = _setup3.queryByTestId;\n(0, _chai.expect)(queryByTestId('bad-address-profile-alert')).to.not.exist;",
              "err": {},
              "uuid": "16792a11-4a62-43a7-bdd6-e2338fcc3018",
              "parentUUID": "9452da7f-1302-4009-8cfc-9a9d6f915039",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should render with the correct service name and link",
              "fullTitle": "<Hub /> should render with the correct service name and link",
              "timedOut": false,
              "duration": 8,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _setup4 = setup({\n    signInServiceName: service.policy\n  }),\n  container = _setup4.container,\n  getByText = _setup4.getByText;\n(0, _chai.expect)(getByText(\"Update your sign-in info on the \".concat(service.label, \" website\"))).to.exist;\n(0, _chai.expect)(container.querySelector(\"[href=\\\"\".concat(service.link, \"\\\"]\"))).to.exist;",
              "err": {},
              "uuid": "d4ab0d72-8f08-421b-adec-f4020263dfe4",
              "parentUUID": "9452da7f-1302-4009-8cfc-9a9d6f915039",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should render with the correct service name and link",
              "fullTitle": "<Hub /> should render with the correct service name and link",
              "timedOut": false,
              "duration": 9,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _setup4 = setup({\n    signInServiceName: service.policy\n  }),\n  container = _setup4.container,\n  getByText = _setup4.getByText;\n(0, _chai.expect)(getByText(\"Update your sign-in info on the \".concat(service.label, \" website\"))).to.exist;\n(0, _chai.expect)(container.querySelector(\"[href=\\\"\".concat(service.link, \"\\\"]\"))).to.exist;",
              "err": {},
              "uuid": "fdb1a3c3-bdfc-4fea-b2ea-c5c7dd08476b",
              "parentUUID": "9452da7f-1302-4009-8cfc-9a9d6f915039",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should render with the correct service name and link",
              "fullTitle": "<Hub /> should render with the correct service name and link",
              "timedOut": false,
              "duration": 8,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _setup4 = setup({\n    signInServiceName: service.policy\n  }),\n  container = _setup4.container,\n  getByText = _setup4.getByText;\n(0, _chai.expect)(getByText(\"Update your sign-in info on the \".concat(service.label, \" website\"))).to.exist;\n(0, _chai.expect)(container.querySelector(\"[href=\\\"\".concat(service.link, \"\\\"]\"))).to.exist;",
              "err": {},
              "uuid": "d412db93-2db1-4160-8733-1f6fa39da7c7",
              "parentUUID": "9452da7f-1302-4009-8cfc-9a9d6f915039",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should render with the correct service name and link",
              "fullTitle": "<Hub /> should render with the correct service name and link",
              "timedOut": false,
              "duration": 7,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _setup4 = setup({\n    signInServiceName: service.policy\n  }),\n  container = _setup4.container,\n  getByText = _setup4.getByText;\n(0, _chai.expect)(getByText(\"Update your sign-in info on the \".concat(service.label, \" website\"))).to.exist;\n(0, _chai.expect)(container.querySelector(\"[href=\\\"\".concat(service.link, \"\\\"]\"))).to.exist;",
              "err": {},
              "uuid": "e68a3873-b202-4836-a649-d220d1ce46a1",
              "parentUUID": "9452da7f-1302-4009-8cfc-9a9d6f915039",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "42aac238-4650-4b52-825e-8211f7ab7a10",
            "827b9a1e-7e9d-4283-aeee-11913c0e61c5",
            "16792a11-4a62-43a7-bdd6-e2338fcc3018",
            "d4ab0d72-8f08-421b-adec-f4020263dfe4",
            "fdb1a3c3-bdfc-4fea-b2ea-c5c7dd08476b",
            "d412db93-2db1-4160-8733-1f6fa39da7c7",
            "e68a3873-b202-4836-a649-d220d1ce46a1"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 57,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "627e10db-4259-46bc-8535-f229bb171d40",
          "title": "<HubCard />",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/profile/tests/components/hub/HubCard.unit.spec.jsx",
          "file": "/src/applications/personalization/profile/tests/components/hub/HubCard.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should render the correct heading",
              "fullTitle": "<HubCard /> should render the correct heading",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _render = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_HubCard.HubCard, {\n    heading: \"Test Heading\",\n    content: \"Test Content\"\n  })),\n  getByText = _render.getByText;\n(0, _chai.expect)(getByText('Test Heading')).to.exist;",
              "err": {},
              "uuid": "3aeed5e9-1668-44d6-b693-1127826ec8cf",
              "parentUUID": "627e10db-4259-46bc-8535-f229bb171d40",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should render the correct content",
              "fullTitle": "<HubCard /> should render the correct content",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _render2 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_HubCard.HubCard, {\n    heading: \"Test Heading\",\n    content: \"Test Content\"\n  })),\n  getByText = _render2.getByText;\n(0, _chai.expect)(getByText('Test Content')).to.exist;",
              "err": {},
              "uuid": "58cadd0a-ab14-4f7e-abb5-d822a38c0bcf",
              "parentUUID": "627e10db-4259-46bc-8535-f229bb171d40",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should render children when passed in",
              "fullTitle": "<HubCard /> should render children when passed in",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _render3 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_HubCard.HubCard, {\n    heading: \"Test Heading\",\n    content: \"Test Content\"\n  }, /*#__PURE__*/_react.default.createElement(\"div\", null, \"Child Component\"))),\n  getByText = _render3.getByText;\n(0, _chai.expect)(getByText('Child Component')).to.exist;",
              "err": {},
              "uuid": "7cf8a086-1130-4d15-bc73-84d0844d9f84",
              "parentUUID": "627e10db-4259-46bc-8535-f229bb171d40",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "3aeed5e9-1668-44d6-b693-1127826ec8cf",
            "58cadd0a-ab14-4f7e-abb5-d822a38c0bcf",
            "7cf8a086-1130-4d15-bc73-84d0844d9f84"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "2aaa7b9b-62d0-4277-a18b-a5ddfa9c3acc",
          "title": "MilitaryInformation",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/profile/tests/components/military-information/MilitaryInformation.unit.spec.jsx",
          "file": "/src/applications/personalization/profile/tests/components/military-information/MilitaryInformation.unit.spec.jsx",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"MilitaryInformation\"",
              "fullTitle": "MilitaryInformation \"before each\" hook in \"MilitaryInformation\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "apiRequestStub = _sinon.default.stub(api, 'apiRequest');",
              "err": {},
              "uuid": "f534de85-611f-445b-a662-7df964ca72d2",
              "parentUUID": "2aaa7b9b-62d0-4277-a18b-a5ddfa9c3acc",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after each\" hook in \"MilitaryInformation\"",
              "fullTitle": "MilitaryInformation \"after each\" hook in \"MilitaryInformation\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "apiRequestStub.restore();",
              "err": {},
              "uuid": "2bca24f7-c330-4a17-b95d-21bbd2cc00b3",
              "parentUUID": "2aaa7b9b-62d0-4277-a18b-a5ddfa9c3acc",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [],
          "suites": [
            {
              "uuid": "7166b0d5-a5f5-47f7-a62d-938c7506c244",
              "title": "when military history exists",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/profile/tests/components/military-information/MilitaryInformation.unit.spec.jsx",
              "file": "/src/applications/personalization/profile/tests/components/military-information/MilitaryInformation.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should render data for each entry of military history",
                  "fullTitle": "MilitaryInformation when military history exists should render data for each entry of military history",
                  "timedOut": false,
                  "duration": 13,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "initialState = createBasicInitialState();\n// Using queries on RTL `screen` does not work for some reason. So I'm just\n// storing the entire response from `render` as `view` so I can treat `view`\n// like I would `screen`\nview = (0, _unitTestHelpers.renderWithProfileReducers)(/*#__PURE__*/_react.default.createElement(_MilitaryInformation.default, null), {\n  initialState: initialState\n});\nvar entries = view.queryAllByRole('listitem');\n(0, _chai.expect)(entries.length).to.equal(2);\n(0, _chai.expect)(entries[0]).to.contain.text('Service branch: United States Air Force');\n(0, _chai.expect)(entries[0]).to.contain.text('Dates of service: April 12, 2009');\n(0, _chai.expect)(entries[0]).to.contain.text('April 11, 2013');\n(0, _chai.expect)(entries[1]).to.contain.text('Service branch: United States Air Force');\n(0, _chai.expect)(entries[1]).to.contain.text('Dates of service: April 12, 2005');\n(0, _chai.expect)(entries[1]).to.contain.text('April 11, 2009');",
                  "err": {},
                  "uuid": "df9a3ba2-6ce1-484f-b2ff-fe4f6d196e00",
                  "parentUUID": "7166b0d5-a5f5-47f7-a62d-938c7506c244",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "df9a3ba2-6ce1-484f-b2ff-fe4f6d196e00"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 13,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "97ae39ea-8c7a-4912-b05c-986f8193b5ae",
              "title": "when military branch is not set",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/profile/tests/components/military-information/MilitaryInformation.unit.spec.jsx",
              "file": "/src/applications/personalization/profile/tests/components/military-information/MilitaryInformation.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should show \"Unknown\" for the service branch if it is missing",
                  "fullTitle": "MilitaryInformation when military branch is not set should show \"Unknown\" for the service branch if it is missing",
                  "timedOut": false,
                  "duration": 11,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "initialState = createBasicInitialState();\ninitialState.vaProfile.militaryInformation.serviceHistory.serviceHistory[0].branchOfService = null;\ninitialState.vaProfile.militaryInformation.serviceHistory.serviceHistory[1].branchOfService = undefined;\nvar mockData = {\n  data: {\n    id: '',\n    type: 'veteran_status_confirmations',\n    attributes: {\n      veteranStatus: 'confirmed'\n    }\n  }\n};\napiRequestStub.resolves(mockData);\nview = (0, _unitTestHelpers.renderWithProfileReducers)(/*#__PURE__*/_react.default.createElement(_MilitaryInformation.default, null), {\n  initialState: initialState\n});\nvar entries = view.queryAllByRole('listitem');\n(0, _chai.expect)(entries.length).to.equal(2);\n(0, _chai.expect)(entries[0]).to.contain.text('Unknown branch of service');\n(0, _chai.expect)(entries[0]).to.contain.text('Dates of service: April 12, 2009');\n(0, _chai.expect)(entries[0]).to.contain.text('April 11, 2013');\n(0, _chai.expect)(entries[1]).to.contain.text('Unknown branch of service');\n(0, _chai.expect)(entries[1]).to.contain.text('Dates of service: April 12, 2005');\n(0, _chai.expect)(entries[1]).to.contain.text('April 11, 2009');",
                  "err": {},
                  "uuid": "ad171492-5229-4379-ac6d-f195daa4caa8",
                  "parentUUID": "97ae39ea-8c7a-4912-b05c-986f8193b5ae",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "ad171492-5229-4379-ac6d-f195daa4caa8"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 11,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "8fd0ff79-2a59-4668-879f-9031e0847b6d",
              "title": "when a service history date cannot be parsed",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/profile/tests/components/military-information/MilitaryInformation.unit.spec.jsx",
              "file": "/src/applications/personalization/profile/tests/components/military-information/MilitaryInformation.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should report that the date is invalid",
                  "fullTitle": "MilitaryInformation when a service history date cannot be parsed should report that the date is invalid",
                  "timedOut": false,
                  "duration": 18,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "initialState = createBasicInitialState();\ninitialState.vaProfile.militaryInformation.serviceHistory.serviceHistory[0].endDate = 'not a valid date';\nview = (0, _unitTestHelpers.renderWithProfileReducers)(/*#__PURE__*/_react.default.createElement(_MilitaryInformation.default, null), {\n  initialState: initialState\n});\nvar entries = view.queryAllByRole('listitem');\n(0, _chai.expect)(entries.length).to.equal(2);\n(0, _chai.expect)(entries[0]).to.contain.text('Service branch: United States Air Force');\n(0, _chai.expect)(entries[0]).to.contain.text('Dates of service: April 12, 2009 – Invalid date');\n(0, _chai.expect)(entries[1]).to.contain.text('Service branch: United States Air Force');\n(0, _chai.expect)(entries[1]).to.contain.text('Dates of service: April 12, 2005');\n(0, _chai.expect)(entries[1]).to.contain.text('April 11, 2009');",
                  "err": {},
                  "uuid": "8e032475-9c83-4cd9-8226-146fc608b1da",
                  "parentUUID": "8fd0ff79-2a59-4668-879f-9031e0847b6d",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "8e032475-9c83-4cd9-8226-146fc608b1da"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 18,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "6eb61574-0bb0-4585-802b-5c18f0d1b4a8",
              "title": "when military history is missing a date",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/profile/tests/components/military-information/MilitaryInformation.unit.spec.jsx",
              "file": "/src/applications/personalization/profile/tests/components/military-information/MilitaryInformation.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should not parse a date that is an empty string",
                  "fullTitle": "MilitaryInformation when military history is missing a date should not parse a date that is an empty string",
                  "timedOut": false,
                  "duration": 10,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "initialState = createBasicInitialState();\ninitialState.vaProfile.militaryInformation.serviceHistory.serviceHistory[0].endDate = '';\nview = (0, _unitTestHelpers.renderWithProfileReducers)(/*#__PURE__*/_react.default.createElement(_MilitaryInformation.default, null), {\n  initialState: initialState\n});\nvar entries = view.queryAllByRole('listitem');\n(0, _chai.expect)(entries.length).to.equal(2);\n(0, _chai.expect)(entries[0]).to.contain.text('Service branch: United States Air Force');\n(0, _chai.expect)(entries[0]).to.contain.text('Dates of service: April 12, 2009 – ');\n(0, _chai.expect)(entries[1]).to.contain.text('Service branch: United States Air Force');\n(0, _chai.expect)(entries[1]).to.contain.text('Dates of service: April 12, 2005');\n(0, _chai.expect)(entries[1]).to.contain.text('April 11, 2009');",
                  "err": {},
                  "uuid": "0baa5ffa-3a29-4327-85e4-06f529a610eb",
                  "parentUUID": "6eb61574-0bb0-4585-802b-5c18f0d1b4a8",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should not parse a null date",
                  "fullTitle": "MilitaryInformation when military history is missing a date should not parse a null date",
                  "timedOut": false,
                  "duration": 12,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "initialState = createBasicInitialState();\ninitialState.vaProfile.militaryInformation.serviceHistory.serviceHistory[0].endDate = null;\nview = (0, _unitTestHelpers.renderWithProfileReducers)(/*#__PURE__*/_react.default.createElement(_MilitaryInformation.default, null), {\n  initialState: initialState\n});\nvar entries = view.queryAllByRole('listitem');\n(0, _chai.expect)(entries.length).to.equal(2);\n(0, _chai.expect)(entries[0]).to.contain.text('Service branch: United States Air Force');\n(0, _chai.expect)(entries[0]).to.contain.text('Dates of service: April 12, 2009 – ');\n(0, _chai.expect)(entries[1]).to.contain.text('Service branch: United States Air Force');\n(0, _chai.expect)(entries[1]).to.contain.text('Dates of service: April 12, 2005');\n(0, _chai.expect)(entries[1]).to.contain.text('April 11, 2009');",
                  "err": {},
                  "uuid": "b281dc38-9127-4bbe-a1cb-cd578395e3d5",
                  "parentUUID": "6eb61574-0bb0-4585-802b-5c18f0d1b4a8",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should not parse an undefined date",
                  "fullTitle": "MilitaryInformation when military history is missing a date should not parse an undefined date",
                  "timedOut": false,
                  "duration": 10,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "initialState = createBasicInitialState();\ninitialState.vaProfile.militaryInformation.serviceHistory.serviceHistory[0].beginDate = undefined;\nview = (0, _unitTestHelpers.renderWithProfileReducers)(/*#__PURE__*/_react.default.createElement(_MilitaryInformation.default, null), {\n  initialState: initialState\n});\nvar entries = view.queryAllByRole('listitem');\n(0, _chai.expect)(entries.length).to.equal(2);\n(0, _chai.expect)(entries[0]).to.contain.text('Service branch: United States Air Force');\n(0, _chai.expect)(entries[0]).to.contain.text('Dates of service:  – April 11, 2013');\n(0, _chai.expect)(entries[1]).to.contain.text('Service branch: United States Air Force');\n(0, _chai.expect)(entries[1]).to.contain.text('Dates of service: April 12, 2005');\n(0, _chai.expect)(entries[1]).to.contain.text('April 11, 2009');",
                  "err": {},
                  "uuid": "ab0eaaef-01e7-48ed-9693-128d44da3d00",
                  "parentUUID": "6eb61574-0bb0-4585-802b-5c18f0d1b4a8",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should not parse a date if it does not exist on the service history entry",
                  "fullTitle": "MilitaryInformation when military history is missing a date should not parse a date if it does not exist on the service history entry",
                  "timedOut": false,
                  "duration": 9,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "initialState = createBasicInitialState();\ndelete initialState.vaProfile.militaryInformation.serviceHistory.serviceHistory[0].beginDate;\ndelete initialState.vaProfile.militaryInformation.serviceHistory.serviceHistory[0].endDate;\nview = (0, _unitTestHelpers.renderWithProfileReducers)(/*#__PURE__*/_react.default.createElement(_MilitaryInformation.default, null), {\n  initialState: initialState\n});\nvar entries = view.queryAllByRole('listitem');\n(0, _chai.expect)(entries.length).to.equal(2);\n(0, _chai.expect)(entries[0]).to.contain.text('Service branch: United States Air Force');\n(0, _chai.expect)(entries[0]).to.contain.text('Dates of service:');\n(0, _chai.expect)(entries[0]).to.not.contain.text('Invalid date');\n(0, _chai.expect)(entries[1]).to.contain.text('Service branch: United States Air Force');\n(0, _chai.expect)(entries[1]).to.contain.text('Dates of service: April 12, 2005');\n(0, _chai.expect)(entries[1]).to.contain.text('April 11, 2009');",
                  "err": {},
                  "uuid": "250fdb41-400e-47e2-a941-36c4df2d2158",
                  "parentUUID": "6eb61574-0bb0-4585-802b-5c18f0d1b4a8",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "0baa5ffa-3a29-4327-85e4-06f529a610eb",
                "b281dc38-9127-4bbe-a1cb-cd578395e3d5",
                "ab0eaaef-01e7-48ed-9693-128d44da3d00",
                "250fdb41-400e-47e2-a941-36c4df2d2158"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 41,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "1ae85048-3ae5-4f4c-982b-bcfc9ff6224e",
              "title": "when proof of veteran status exists",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/profile/tests/components/military-information/MilitaryInformation.unit.spec.jsx",
              "file": "/src/applications/personalization/profile/tests/components/military-information/MilitaryInformation.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should show proof of veteran status component",
                  "fullTitle": "MilitaryInformation when proof of veteran status exists should show proof of veteran status component",
                  "timedOut": false,
                  "duration": 7,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "view = (0, _unitTestHelpers.renderWithProfileReducers)(/*#__PURE__*/_react.default.createElement(_MilitaryInformation.default, null), {\n  initialState: initialState\n});\n(0, _chai.expect)(view.getByText(/Proof of Veteran status/)).to.exist;",
                  "err": {},
                  "uuid": "e26d70b4-9929-48e5-be5e-ebfea1d8c56f",
                  "parentUUID": "1ae85048-3ae5-4f4c-982b-bcfc9ff6224e",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "e26d70b4-9929-48e5-be5e-ebfea1d8c56f"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 7,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "54bc0b3b-e4a2-4f60-b47c-7068fd5fcfec",
              "title": "when the veteranStatus is null and militaryInformation is empty",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/profile/tests/components/military-information/MilitaryInformation.unit.spec.jsx",
              "file": "/src/applications/personalization/profile/tests/components/military-information/MilitaryInformation.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should show the correct error",
                  "fullTitle": "MilitaryInformation when the veteranStatus is null and militaryInformation is empty should show the correct error",
                  "timedOut": false,
                  "duration": 4,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "initialState = createBasicInitialState();\ninitialState.user.profile.veteranStatus.status = null;\ninitialState.vaProfile.militaryInformation = null;\nview = (0, _unitTestHelpers.renderWithProfileReducers)(/*#__PURE__*/_react.default.createElement(_MilitaryInformation.default, null), {\n  initialState: initialState\n});\n(0, _chai.expect)(view.getByTestId('not-a-veteran-alert')).to.exist;\n(0, _chai.expect)(view.getByText(/If you think this is an error, call us at/i)).to.exist;",
                  "err": {},
                  "uuid": "77f36013-ec6d-4f2f-a74e-f903cd90908f",
                  "parentUUID": "54bc0b3b-e4a2-4f60-b47c-7068fd5fcfec",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "77f36013-ec6d-4f2f-a74e-f903cd90908f"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 4,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "cd22545d-e9c0-4cf9-b68b-73180f9a4f70",
              "title": "when the military service history is empty",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/profile/tests/components/military-information/MilitaryInformation.unit.spec.jsx",
              "file": "/src/applications/personalization/profile/tests/components/military-information/MilitaryInformation.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should show the correct error",
                  "fullTitle": "MilitaryInformation when the military service history is empty should show the correct error",
                  "timedOut": false,
                  "duration": 5,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "initialState = createBasicInitialState();\ninitialState.vaProfile.militaryInformation.serviceHistory.serviceHistory = [];\nview = (0, _unitTestHelpers.renderWithProfileReducers)(/*#__PURE__*/_react.default.createElement(_MilitaryInformation.default, null), {\n  initialState: initialState\n});\n(0, _chai.expect)(view.getByText(/We can’t match your information to any military service records/i)).to.exist;\n(0, _chai.expect)(view.getByText(/We’re sorry for this issue./i)).to.exist;",
                  "err": {},
                  "uuid": "a3fc2624-160d-4951-b933-bd8561e6d76d",
                  "parentUUID": "cd22545d-e9c0-4cf9-b68b-73180f9a4f70",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "a3fc2624-160d-4951-b933-bd8561e6d76d"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 5,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "478665d1-6c2c-47b4-bf0a-5515cec9f694",
              "title": "when a 403 error occurs",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/profile/tests/components/military-information/MilitaryInformation.unit.spec.jsx",
              "file": "/src/applications/personalization/profile/tests/components/military-information/MilitaryInformation.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should show the correct error",
                  "fullTitle": "MilitaryInformation when a 403 error occurs should show the correct error",
                  "timedOut": false,
                  "duration": 5,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "initialState = createBasicInitialState();\ninitialState.vaProfile.militaryInformation.serviceHistory = {\n  error: {\n    errors: [{\n      code: '403'\n    }]\n  }\n};\nview = (0, _unitTestHelpers.renderWithProfileReducers)(/*#__PURE__*/_react.default.createElement(_MilitaryInformation.default, null), {\n  initialState: initialState\n});\nview.getByText(/We can’t match your information to any military service records/i);\nview.getByText(/We’re sorry for this issue/i);\nview.getByText(/If you want to learn what military service records may be on file for you/i);\n// should render contact telephone link for DMDC\n(0, _chai.expect)(view.container.querySelector('va-telephone').getAttribute('contact')).to.equal('8005389552');\n// should render link to National Archives website to correct service records\n(0, _chai.expect)(view.container.querySelector('va-link').getAttribute('text')).to.equal('Learn how to correct your military service records on the National Archives website');\n(0, _chai.expect)(view.container.querySelector('va-link').getAttribute('href')).to.equal('https://www.archives.gov/veterans/military-service-records/correct-service-records.html');",
                  "err": {},
                  "uuid": "82232c15-1043-49d5-899d-32214f9c3c1a",
                  "parentUUID": "478665d1-6c2c-47b4-bf0a-5515cec9f694",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "82232c15-1043-49d5-899d-32214f9c3c1a"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 5,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "5fee63cf-66ff-4439-b64f-5f8311027992",
              "title": "when another error occurs",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/profile/tests/components/military-information/MilitaryInformation.unit.spec.jsx",
              "file": "/src/applications/personalization/profile/tests/components/military-information/MilitaryInformation.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should show the correct error",
                  "fullTitle": "MilitaryInformation when another error occurs should show the correct error",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "initialState = createBasicInitialState();\ninitialState.vaProfile.militaryInformation.serviceHistory = {\n  error: {}\n};\nview = (0, _unitTestHelpers.renderWithProfileReducers)(/*#__PURE__*/_react.default.createElement(_MilitaryInformation.default, null), {\n  initialState: initialState\n});\n(0, _chai.expect)(view.getByTestId('service-is-down-banner')).to.exist;",
                  "err": {},
                  "uuid": "56158250-ad3e-4be9-b681-039eddb4ed23",
                  "parentUUID": "5fee63cf-66ff-4439-b64f-5f8311027992",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "56158250-ad3e-4be9-b681-039eddb4ed23"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 3,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "36760789-aa1d-4d77-8dfb-edd27056d201",
          "title": "MilitaryInformation - Period of Service Type Text",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/profile/tests/components/military-information/PeriodOfServiceTypeText.unit.spec.jsx",
          "file": "/src/applications/personalization/profile/tests/components/military-information/PeriodOfServiceTypeText.unit.spec.jsx",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"MilitaryInformation - Period of Service Type Text\"",
              "fullTitle": "MilitaryInformation - Period of Service Type Text \"before each\" hook in \"MilitaryInformation - Period of Service Type Text\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "apiRequestStub = _sinon.default.stub(api, 'apiRequest');",
              "err": {},
              "uuid": "15c16d66-0189-47fc-8fac-6ddd8017bca6",
              "parentUUID": "36760789-aa1d-4d77-8dfb-edd27056d201",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after each\" hook in \"MilitaryInformation - Period of Service Type Text\"",
              "fullTitle": "MilitaryInformation - Period of Service Type Text \"after each\" hook in \"MilitaryInformation - Period of Service Type Text\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "apiRequestStub.restore();",
              "err": {},
              "uuid": "a096b50f-c1bb-4994-872f-75dbfe962441",
              "parentUUID": "36760789-aa1d-4d77-8dfb-edd27056d201",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [],
          "suites": [
            {
              "uuid": "09ec6d1b-e6a0-4be4-9666-cd64c7fa782a",
              "title": "when military history exists",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/profile/tests/components/military-information/PeriodOfServiceTypeText.unit.spec.jsx",
              "file": "/src/applications/personalization/profile/tests/components/military-information/PeriodOfServiceTypeText.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should render periodOfServiceTypeText when present and when periodOfServiceTypeCode is A or V",
                  "fullTitle": "MilitaryInformation - Period of Service Type Text when military history exists should render periodOfServiceTypeText when present and when periodOfServiceTypeCode is A or V",
                  "timedOut": false,
                  "duration": 6,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var initialState = createBasicInitialState();\nvar view = (0, _unitTestHelpers.renderWithProfileReducers)(/*#__PURE__*/_react.default.createElement(_MilitaryInformation.default, null), {\n  initialState: initialState\n});\n(0, _chai.expect)(view.queryByText('Active duty member')).to.exist;\n(0, _chai.expect)(view.queryByText('Reserve member')).to.exist;",
                  "err": {},
                  "uuid": "c08eee9e-fa64-4eb2-a88a-c5b5d14cfa06",
                  "parentUUID": "09ec6d1b-e6a0-4be4-9666-cd64c7fa782a",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "c08eee9e-fa64-4eb2-a88a-c5b5d14cfa06"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 6,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "3dae6c8b-127a-4544-b9b4-3c931bda7c5d",
              "title": "when military history does not exist",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/profile/tests/components/military-information/PeriodOfServiceTypeText.unit.spec.jsx",
              "file": "/src/applications/personalization/profile/tests/components/military-information/PeriodOfServiceTypeText.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should not render periodOfServiceTypeText",
                  "fullTitle": "MilitaryInformation - Period of Service Type Text when military history does not exist should not render periodOfServiceTypeText",
                  "timedOut": false,
                  "duration": 5,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var initialState = createBasicInitialState();\ninitialState.vaProfile.militaryInformation.serviceHistory.serviceHistory = [];\nvar view = (0, _unitTestHelpers.renderWithProfileReducers)(/*#__PURE__*/_react.default.createElement(_MilitaryInformation.default, null), {\n  initialState: initialState\n});\n(0, _chai.expect)(view.queryByText('Active duty member')).to.not.exist;\n(0, _chai.expect)(view.queryByText('Reserve member')).to.not.exist;",
                  "err": {},
                  "uuid": "053eb0c1-1c49-45a1-802a-829b357db8a5",
                  "parentUUID": "3dae6c8b-127a-4544-b9b4-3c931bda7c5d",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "053eb0c1-1c49-45a1-802a-829b357db8a5"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 5,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "e9942258-3bc4-4403-b494-b1a81ea3eacb",
              "title": "when military history includes periodOfServiceCodes that are not supported",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/profile/tests/components/military-information/PeriodOfServiceTypeText.unit.spec.jsx",
              "file": "/src/applications/personalization/profile/tests/components/military-information/PeriodOfServiceTypeText.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should not render periodOfServiceTypeText of unsupported code",
                  "fullTitle": "MilitaryInformation - Period of Service Type Text when military history includes periodOfServiceCodes that are not supported should not render periodOfServiceTypeText of unsupported code",
                  "timedOut": false,
                  "duration": 7,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var initialState = createBasicInitialState();\ninitialState.vaProfile.militaryInformation.serviceHistory.serviceHistory.push({\n  branchOfService: 'Army',\n  beginDate: '2008-04-12',\n  endDate: '2010-06-27',\n  periodOfServiceTypeCode: 'X',\n  periodOfServiceTypeText: 'Unsupported member'\n});\nvar view = (0, _unitTestHelpers.renderWithProfileReducers)(/*#__PURE__*/_react.default.createElement(_MilitaryInformation.default, null), {\n  initialState: initialState\n});\n(0, _chai.expect)(view.queryByText('Active duty member')).to.exist;\n(0, _chai.expect)(view.queryByText('Reserve member')).to.exist;\n(0, _chai.expect)(view.queryByText('Unsupported member')).to.not.exist;",
                  "err": {},
                  "uuid": "11f8de56-09d2-43b8-be55-3fe10e1ba368",
                  "parentUUID": "e9942258-3bc4-4403-b494-b1a81ea3eacb",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "11f8de56-09d2-43b8-be55-3fe10e1ba368"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 7,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "ae3bd906-4fac-4fef-92e0-bf32ec76dd2d",
              "title": "when military history episode does not include a periodOfServiceCode",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/profile/tests/components/military-information/PeriodOfServiceTypeText.unit.spec.jsx",
              "file": "/src/applications/personalization/profile/tests/components/military-information/PeriodOfServiceTypeText.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should not render periodOfServiceTypeText, but still render history entry info",
                  "fullTitle": "MilitaryInformation - Period of Service Type Text when military history episode does not include a periodOfServiceCode should not render periodOfServiceTypeText, but still render history entry info",
                  "timedOut": false,
                  "duration": 6,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var initialState = createBasicInitialState();\ninitialState.vaProfile.militaryInformation.serviceHistory.serviceHistory.push({\n  branchOfService: 'Space Force',\n  beginDate: '2008-04-12',\n  endDate: '2010-06-27'\n});\nvar view = (0, _unitTestHelpers.renderWithProfileReducers)(/*#__PURE__*/_react.default.createElement(_MilitaryInformation.default, null), {\n  initialState: initialState\n});\n(0, _chai.expect)(view.queryByText('Active duty member')).to.exist;\n(0, _chai.expect)(view.queryByText('Reserve member')).to.exist;\n(0, _chai.expect)(view.queryByText('Space Force')).to.not.exist;",
                  "err": {},
                  "uuid": "115db0a2-b00c-4a5c-bcd8-0b1107341919",
                  "parentUUID": "ae3bd906-4fac-4fef-92e0-bf32ec76dd2d",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "115db0a2-b00c-4a5c-bcd8-0b1107341919"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 6,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "5458554d-e465-49e6-85de-6caea2c478e0",
          "title": "AddContactInfoLink",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/profile/tests/components/notification-settings/AddContactInfoLink.unit.spec.jsx",
          "file": "/src/applications/personalization/profile/tests/components/notification-settings/AddContactInfoLink.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "renders link for Email",
              "fullTitle": "AddContactInfoLink renders link for Email",
              "timedOut": false,
              "duration": 5,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
              "err": {},
              "uuid": "7d597030-0039-4b29-8e82-769f2c4a29af",
              "parentUUID": "5458554d-e465-49e6-85de-6caea2c478e0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "renders link for Mobile Phone",
              "fullTitle": "AddContactInfoLink renders link for Mobile Phone",
              "timedOut": false,
              "duration": 3,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
              "err": {},
              "uuid": "a1c68f14-72f3-4631-9ddb-e24ee86b6ff1",
              "parentUUID": "5458554d-e465-49e6-85de-6caea2c478e0",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "7d597030-0039-4b29-8e82-769f2c4a29af",
            "a1c68f14-72f3-4631-9ddb-e24ee86b6ff1"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 8,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "2998d7ab-f256-4338-b935-089b8acf5818",
          "title": "ContactInfoOnFile",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/profile/tests/components/notification-settings/ContactInfoOnFile.unit.spec.jsx",
          "file": "/src/applications/personalization/profile/tests/components/notification-settings/ContactInfoOnFile.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "renders Email and Mobile phone info",
              "fullTitle": "ContactInfoOnFile renders Email and Mobile phone info",
              "timedOut": false,
              "duration": 6,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
              "err": {},
              "uuid": "4105f6be-a794-4412-a0fa-8e6562af744d",
              "parentUUID": "2998d7ab-f256-4338-b935-089b8acf5818",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "does not render info when it is not available",
              "fullTitle": "ContactInfoOnFile does not render info when it is not available",
              "timedOut": false,
              "duration": 3,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var view = (0, _reactTestingLibraryHelpers.renderWithStoreAndRouter)(/*#__PURE__*/_react.default.createElement(_ContactInfoOnFile.default, null), {\n  initialState: initialState\n});\n(0, _chai.expect)(view.queryByText(/update/i)).to.not.exist;\n(0, _chai.expect)(view.queryByText(/update email/i)).to.not.exist;",
              "err": {},
              "uuid": "8922cca3-08b4-4b07-832b-b7e17d16bd17",
              "parentUUID": "2998d7ab-f256-4338-b935-089b8acf5818",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "4105f6be-a794-4412-a0fa-8e6562af744d",
            "8922cca3-08b4-4b07-832b-b7e17d16bd17"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 9,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "7e2081bf-3c1d-4d68-93d1-3b983582bbcc",
          "title": "MissingContactInfoAlert",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/profile/tests/components/notification-settings/MissingContactInfoAlert.unit.spec.jsx",
          "file": "/src/applications/personalization/profile/tests/components/notification-settings/MissingContactInfoAlert.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "does not render when Mobile and Email are present",
              "fullTitle": "MissingContactInfoAlert does not render when Mobile and Email are present",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var view = (0, _reactTestingLibraryHelpers.renderWithStoreAndRouter)(/*#__PURE__*/_react.default.createElement(_MissingContactInfoAlert.default, {\n  missingEmailAddress: false,\n  missingMobilePhone: false\n}), {\n  initialState: initialState\n});\n(0, _chai.expect)(view.queryByTestId('missing-contact-info-alert')).to.not.exist;",
              "err": {},
              "uuid": "eee94c1a-aebb-4886-9d3b-e2da916073b1",
              "parentUUID": "7e2081bf-3c1d-4d68-93d1-3b983582bbcc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "renders when Mobile is missing",
              "fullTitle": "MissingContactInfoAlert renders when Mobile is missing",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var view = (0, _reactTestingLibraryHelpers.renderWithStoreAndRouter)(/*#__PURE__*/_react.default.createElement(_MissingContactInfoAlert.default, {\n  missingEmailAddress: false,\n  missingMobilePhone: true\n}), {\n  initialState: initialState\n});\n(0, _chai.expect)(view.queryByTestId('missing-contact-info-alert')).to.exist;\n(0, _chai.expect)(view.getByText(/We don’t have your mobile phone number/i)).to.exist;",
              "err": {},
              "uuid": "70c5378f-c88a-4b9c-80b4-d56f89f4a3d3",
              "parentUUID": "7e2081bf-3c1d-4d68-93d1-3b983582bbcc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "renders when Mobile and Email are missing, and showEmailNotificationSettings is true",
              "fullTitle": "MissingContactInfoAlert renders when Mobile and Email are missing, and showEmailNotificationSettings is true",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var view = (0, _reactTestingLibraryHelpers.renderWithStoreAndRouter)(/*#__PURE__*/_react.default.createElement(_MissingContactInfoAlert.default, {\n  missingEmailAddress: true,\n  missingMobilePhone: true,\n  showEmailNotificationSettings: true\n}), {\n  initialState: initialState\n});\n(0, _chai.expect)(view.queryByTestId('missing-contact-info-alert')).to.exist;\n(0, _chai.expect)(view.getByText(/We don’t have your contact information/i)).to.exist;",
              "err": {},
              "uuid": "cde0091c-e42c-46bf-b0cf-68cc35df64ec",
              "parentUUID": "7e2081bf-3c1d-4d68-93d1-3b983582bbcc",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "eee94c1a-aebb-4886-9d3b-e2da916073b1",
            "70c5378f-c88a-4b9c-80b4-d56f89f4a3d3",
            "cde0091c-e42c-46bf-b0cf-68cc35df64ec"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 6,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "5ec6b7e0-b0e2-47be-a2e5-0785c1bb3126",
          "title": "<NotificationChannel />",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/profile/tests/components/notification-settings/NotificationChannel.unit.spec.jsx",
          "file": "/src/applications/personalization/profile/tests/components/notification-settings/NotificationChannel.unit.spec.jsx",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"<NotificationChannel />\"",
              "fullTitle": "<NotificationChannel /> \"before each\" hook in \"<NotificationChannel />\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "store = mockStore(baseStore);",
              "err": {},
              "uuid": "9315ee6e-20a0-4a64-8e56-d0c719165997",
              "parentUUID": "5ec6b7e0-b0e2-47be-a2e5-0785c1bb3126",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": "renders the NotificationCheckbox component",
              "fullTitle": "<NotificationChannel /> renders the NotificationCheckbox component",
              "timedOut": false,
              "duration": 6,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var props = {\n  channelId: 'channel3-1',\n  disabledForCheckbox: false,\n  saveSetting: _sinon.default.stub()\n};\nvar view = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n  store: store\n}, /*#__PURE__*/_react.default.createElement(_NotificationChannel.default, props)));\n(0, _chai.expect)(view.getByTestId(\"checkbox-\".concat(props.channelId))).to.be.visible;",
              "err": {},
              "uuid": "4625555f-cf3a-4345-a989-2f00e7b7626e",
              "parentUUID": "5ec6b7e0-b0e2-47be-a2e5-0785c1bb3126",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "4625555f-cf3a-4345-a989-2f00e7b7626e"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 6,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "666301db-6680-4072-bd97-7f560b5c1dd7",
          "title": "<NotificationChannelCheckboxesFieldset />",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/profile/tests/components/notification-settings/NotificationChannelCheckboxesFieldset.unit.spec.jsx",
          "file": "/src/applications/personalization/profile/tests/components/notification-settings/NotificationChannelCheckboxesFieldset.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "renders the component with given children",
              "fullTitle": "<NotificationChannelCheckboxesFieldset /> renders the component with given children",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _render = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_NotificationChannelCheckboxesFieldset.NotificationChannelCheckboxesFieldset, defaultProps)),\n  getByText = _render.getByText;\nvar children = getByText('Test Children');\n(0, _chai.expect)(children).to.exist;",
              "err": {},
              "uuid": "e80f2874-816c-4226-8088-d0c88a19c0be",
              "parentUUID": "666301db-6680-4072-bd97-7f560b5c1dd7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "displays the correct item name",
              "fullTitle": "<NotificationChannelCheckboxesFieldset /> displays the correct item name",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _render2 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_NotificationChannelCheckboxesFieldset.NotificationChannelCheckboxesFieldset, defaultProps)),\n  getByText = _render2.getByText;\nvar itemName = getByText(defaultProps.itemName);\n(0, _chai.expect)(itemName).to.exist;",
              "err": {},
              "uuid": "f3c05ffc-6e11-4157-a2e4-3cb276db69ee",
              "parentUUID": "666301db-6680-4072-bd97-7f560b5c1dd7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "displays the description when provided",
              "fullTitle": "<NotificationChannelCheckboxesFieldset /> displays the description when provided",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var description = 'Test Description';\nvar _render3 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_NotificationChannelCheckboxesFieldset.NotificationChannelCheckboxesFieldset, _extends({}, defaultProps, {\n    description: description\n  }))),\n  getByText = _render3.getByText;\nvar descriptionText = getByText(description);\n(0, _chai.expect)(descriptionText).to.exist;",
              "err": {},
              "uuid": "a833d590-5e18-4a25-8b3b-cd0afc3f6662",
              "parentUUID": "666301db-6680-4072-bd97-7f560b5c1dd7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "sets the fieldset to disabled when hasSomePendingUpdates is true",
              "fullTitle": "<NotificationChannelCheckboxesFieldset /> sets the fieldset to disabled when hasSomePendingUpdates is true",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _render4 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_NotificationChannelCheckboxesFieldset.NotificationChannelCheckboxesFieldset, _extends({}, defaultProps, {\n    hasSomePendingUpdates: true\n  }))),\n  container = _render4.container;\nvar fieldset = container.querySelector('fieldset');\n(0, _chai.expect)(fieldset.disabled).to.be.true;",
              "err": {},
              "uuid": "56ff620b-1919-4641-adcd-cb0dad9402ec",
              "parentUUID": "666301db-6680-4072-bd97-7f560b5c1dd7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "applies the correct border color classes for success",
              "fullTitle": "<NotificationChannelCheckboxesFieldset /> applies the correct border color classes for success",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var successView = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_NotificationChannelCheckboxesFieldset.NotificationChannelCheckboxesFieldset, _extends({}, defaultProps, {\n  hasSomeSuccessUpdates: true\n})));\n(0, _chai.expect)(successView.getByTestId('fieldset-wrapper').className).to.include('vads-u-border-color--green');",
              "err": {},
              "uuid": "28e1ff91-a276-49ce-a8b7-c7e59e0bc681",
              "parentUUID": "666301db-6680-4072-bd97-7f560b5c1dd7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "applies the correct border color classes for error",
              "fullTitle": "<NotificationChannelCheckboxesFieldset /> applies the correct border color classes for error",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var errorView = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_NotificationChannelCheckboxesFieldset.NotificationChannelCheckboxesFieldset, _extends({}, defaultProps, {\n  hasSomeErrorUpdates: true\n})));\n(0, _chai.expect)(errorView.getByTestId('fieldset-wrapper').className).to.include('vads-u-border-color--secondary');",
              "err": {},
              "uuid": "40846269-5836-4b79-9870-14d6a10e22a2",
              "parentUUID": "666301db-6680-4072-bd97-7f560b5c1dd7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "applies the correct border color classes for default state",
              "fullTitle": "<NotificationChannelCheckboxesFieldset /> applies the correct border color classes for default state",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var defaultView = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_NotificationChannelCheckboxesFieldset.NotificationChannelCheckboxesFieldset, defaultProps));\n(0, _chai.expect)(defaultView.getByTestId('fieldset-wrapper').className).to.include('vads-u-border-color--white');",
              "err": {},
              "uuid": "1f1f47b2-dd2f-493c-98cd-cce493459516",
              "parentUUID": "666301db-6680-4072-bd97-7f560b5c1dd7",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "e80f2874-816c-4226-8088-d0c88a19c0be",
            "f3c05ffc-6e11-4157-a2e4-3cb276db69ee",
            "a833d590-5e18-4a25-8b3b-cd0afc3f6662",
            "56ff620b-1919-4641-adcd-cb0dad9402ec",
            "28e1ff91-a276-49ce-a8b7-c7e59e0bc681",
            "40846269-5836-4b79-9870-14d6a10e22a2",
            "1f1f47b2-dd2f-493c-98cd-cce493459516"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 10,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "b6afb13b-e642-4827-adde-706fe061900e",
          "title": "<NotificationCheckbox />",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/profile/tests/components/notification-settings/NotificationCheckbox.unit.spec.jsx",
          "file": "/src/applications/personalization/profile/tests/components/notification-settings/NotificationCheckbox.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "renders the component with a checkbox",
              "fullTitle": "<NotificationCheckbox /> renders the component with a checkbox",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var view = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_NotificationCheckbox.NotificationCheckbox, defaultProps));\nvar checkbox = view.getByTestId(\"checkbox-\".concat(defaultProps.channelId));\n(0, _chai.expect)(checkbox).to.exist;",
              "err": {},
              "uuid": "237a2dfb-d617-436e-af7d-0b7c13dd3a9f",
              "parentUUID": "b6afb13b-e642-4827-adde-706fe061900e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "renders error message when provided",
              "fullTitle": "<NotificationCheckbox /> renders error message when provided",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var errorMessage = 'An error occurred';\nvar view = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_NotificationCheckbox.NotificationCheckbox, _extends({}, defaultProps, {\n  errorMessage: errorMessage\n})));\nvar errorSpan = view.getByText('Error');\n(0, _chai.expect)(errorSpan).to.exist;\nvar errorText = view.getByText(errorMessage);\n(0, _chai.expect)(errorText).to.exist;",
              "err": {},
              "uuid": "f7b1565e-109b-499e-bc77-13571392b070",
              "parentUUID": "b6afb13b-e642-4827-adde-706fe061900e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "renders loading message when provided",
              "fullTitle": "<NotificationCheckbox /> renders loading message when provided",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var loadingMessage = 'Loading...';\nvar view = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_NotificationCheckbox.NotificationCheckbox, _extends({}, defaultProps, {\n  loadingMessage: loadingMessage\n})));\nvar loadingSpan = view.getByText(loadingMessage);\n(0, _chai.expect)(loadingSpan).to.exist;",
              "err": {},
              "uuid": "3c99ff73-e184-464d-b4d3-0266277a0c92",
              "parentUUID": "b6afb13b-e642-4827-adde-706fe061900e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "renders success message when provided",
              "fullTitle": "<NotificationCheckbox /> renders success message when provided",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var successMessage = 'Operation was successful';\nvar view = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_NotificationCheckbox.NotificationCheckbox, _extends({}, defaultProps, {\n  successMessage: successMessage\n})));\nvar successSpan = view.getByText('Success');\n(0, _chai.expect)(successSpan).to.exist;\nvar successText = view.getByText(successMessage);\n(0, _chai.expect)(successText).to.exist;",
              "err": {},
              "uuid": "f6950c10-9e80-4056-9a84-4caabfee18fd",
              "parentUUID": "b6afb13b-e642-4827-adde-706fe061900e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "237a2dfb-d617-436e-af7d-0b7c13dd3a9f",
            "f7b1565e-109b-499e-bc77-13571392b070",
            "3c99ff73-e184-464d-b4d3-0266277a0c92",
            "f6950c10-9e80-4056-9a84-4caabfee18fd"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 8,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "1081b6dc-5901-4611-ba2a-934f7c2eba31",
          "title": "NotificationGroup component",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/profile/tests/components/notification-settings/NotificationGroup.unit.spec.jsx",
          "file": "/src/applications/personalization/profile/tests/components/notification-settings/NotificationGroup.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should render checkbox with label",
              "fullTitle": "NotificationGroup component should render checkbox with label",
              "timedOut": false,
              "duration": 13,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
              "err": {},
              "uuid": "89656d47-c4b8-4e90-a318-d76f63b2f914",
              "parentUUID": "1081b6dc-5901-4611-ba2a-934f7c2eba31",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should only see Appointment reminders and Prescription shipment and tracking updates items when all the notification toggles are turned off",
              "fullTitle": "NotificationGroup component should only see Appointment reminders and Prescription shipment and tracking updates items when all the notification toggles are turned off",
              "timedOut": false,
              "duration": 8,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var initialState = (0, _cloneDeep2.default)(baseState);\n(0, _set2.default)(initialState, \"featureToggles[\".concat(_featureFlagNames.default.profileShowMhvNotificationSettingsNewSecureMessaging, \"]\"), false);\n(0, _set2.default)(initialState, \"featureToggles[\".concat(_featureFlagNames.default.profileShowMhvNotificationSettingsEmailRxShipment, \"]\"), false);\n(0, _set2.default)(initialState, \"featureToggles[\".concat(_featureFlagNames.default.profileShowMhvNotificationSettingsMedicalImages, \"]\"), false);\nvar view = (0, _unitTestHelpers.renderWithProfileReducersAndRouter)(/*#__PURE__*/_react.default.createElement(_NotificationGroup.default, {\n  groupId: \"group3\"\n}), {\n  initialState: initialState\n});\n(0, _chai.expect)(view.queryByText('Appointment reminders')).to.exist;\n(0, _chai.expect)(view.queryByText('Prescription shipment and tracking updates')).to.exist;\n(0, _chai.expect)(view.queryByText('Secure messaging alert')).to.not.exist;\n(0, _chai.expect)(view.queryByText('Medical images and reports available')).to.not.exist;",
              "err": {},
              "uuid": "86603e17-e0e4-4e93-bdc9-06dbd063b7c3",
              "parentUUID": "1081b6dc-5901-4611-ba2a-934f7c2eba31",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should display Medical images and reports available group when profileShowMhvNotificationSettingsMedicalImages is true",
              "fullTitle": "NotificationGroup component should display Medical images and reports available group when profileShowMhvNotificationSettingsMedicalImages is true",
              "timedOut": false,
              "duration": 11,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var initialState = (0, _cloneDeep2.default)(baseState);\n(0, _set2.default)(initialState, \"featureToggles[\".concat(_featureFlagNames.default.profileShowMhvNotificationSettingsMedicalImages, \"]\"), true);\nvar view = (0, _unitTestHelpers.renderWithProfileReducersAndRouter)(/*#__PURE__*/_react.default.createElement(_NotificationGroup.default, {\n  groupId: \"group3\"\n}), {\n  initialState: initialState\n});\n(0, _chai.expect)(view.queryByText('Appointment reminders')).to.exist;\n(0, _chai.expect)(view.queryByText('Prescription shipment and tracking updates')).to.exist;\n(0, _chai.expect)(view.queryByText('Medical images and reports available')).to.exist;\n(0, _chai.expect)(view.queryByText('Secure messaging alert')).to.not.exist;",
              "err": {},
              "uuid": "84ae59c6-f0fd-405a-8bbd-2d3a8ba63e6f",
              "parentUUID": "1081b6dc-5901-4611-ba2a-934f7c2eba31",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should display Securing messaging alert group when profileShowMhvNotificationSettingsNewSecureMessaging is true",
              "fullTitle": "NotificationGroup component should display Securing messaging alert group when profileShowMhvNotificationSettingsNewSecureMessaging is true",
              "timedOut": false,
              "duration": 11,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var initialState = (0, _cloneDeep2.default)(baseState);\n(0, _set2.default)(initialState, \"featureToggles[\".concat(_featureFlagNames.default.profileShowMhvNotificationSettingsNewSecureMessaging, \"]\"), true);\nvar view = (0, _unitTestHelpers.renderWithProfileReducersAndRouter)(/*#__PURE__*/_react.default.createElement(_NotificationGroup.default, {\n  groupId: \"group3\"\n}), {\n  initialState: initialState\n});\n(0, _chai.expect)(view.queryByText('Appointment reminders')).to.exist;\n(0, _chai.expect)(view.queryByText('Prescription shipment and tracking updates')).to.exist;\n(0, _chai.expect)(view.queryByText('Secure messaging alert')).to.exist;\n(0, _chai.expect)(view.queryByText('Medical images and reports available')).to.not.exist;",
              "err": {},
              "uuid": "5ddf4eed-f21f-4d5a-a9c3-7230b817a436",
              "parentUUID": "1081b6dc-5901-4611-ba2a-934f7c2eba31",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should display Prescription shipment and tracking updates group when profileShowMhvNotificationSettingsEmailRxShipment is true",
              "fullTitle": "NotificationGroup component should display Prescription shipment and tracking updates group when profileShowMhvNotificationSettingsEmailRxShipment is true",
              "timedOut": false,
              "duration": 8,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var initialState = (0, _cloneDeep2.default)(baseState);\n(0, _set2.default)(initialState, \"featureToggles[\".concat(_featureFlagNames.default.profileShowMhvNotificationSettingsEmailRxShipment, \"]\"), true);\nvar view = (0, _unitTestHelpers.renderWithProfileReducersAndRouter)(/*#__PURE__*/_react.default.createElement(_NotificationGroup.default, {\n  groupId: \"group3\"\n}), {\n  initialState: initialState\n});\n(0, _chai.expect)(view.queryByText('Appointment reminders')).to.exist;\n(0, _chai.expect)(view.queryByText('Prescription shipment and tracking updates')).to.exist;\n(0, _chai.expect)(view.queryByText('Secure messaging alert')).to.not.exist;\n(0, _chai.expect)(view.queryByText('Medical images and reports available')).to.not.exist;",
              "err": {},
              "uuid": "fab1157c-e360-47d3-b6d7-db4f28ab62f7",
              "parentUUID": "1081b6dc-5901-4611-ba2a-934f7c2eba31",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should never display Rx refill shipment and Biweekly MHV newsletter even when all the notification toggles are on",
              "fullTitle": "NotificationGroup component should never display Rx refill shipment and Biweekly MHV newsletter even when all the notification toggles are on",
              "timedOut": false,
              "duration": 15,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var initialState = (0, _cloneDeep2.default)(baseState);\n(0, _set2.default)(initialState, \"featureToggles[\".concat(_featureFlagNames.default.profileShowMhvNotificationSettingsMedicalImages, \"]\"), true);\n(0, _set2.default)(initialState, \"featureToggles[\".concat(_featureFlagNames.default.profileShowMhvNotificationSettingsNewSecureMessaging, \"]\"), true);\n(0, _set2.default)(initialState, \"featureToggles[\".concat(_featureFlagNames.default.profileShowMhvNotificationSettingsEmailRxShipment, \"]\"), true);\n(0, _set2.default)(initialState, \"featureToggles[\".concat(_featureFlagNames.default.profileShowMhvNotificationSettingsEmailAppointmentReminders, \"]\"), true);\nvar view = (0, _unitTestHelpers.renderWithProfileReducersAndRouter)(/*#__PURE__*/_react.default.createElement(_NotificationGroup.default, {\n  groupId: \"group3\"\n}), {\n  initialState: initialState\n});\n(0, _chai.expect)(view.queryByText('Appointment reminders')).to.exist;\n(0, _chai.expect)(view.queryByText('Secure messaging alert')).to.exist;\n(0, _chai.expect)(view.queryByText('Prescription shipment and tracking updates')).to.exist;\n(0, _chai.expect)(view.queryByText('Medical images and reports available')).to.exist;\n(0, _chai.expect)(view.queryByText('Rx refill shipment')).to.not.exist;\n(0, _chai.expect)(view.queryByText('Biweekly MHV newsletter')).to.not.exist;",
              "err": {},
              "uuid": "6287b4db-78c9-4214-a449-18ee969c72f1",
              "parentUUID": "1081b6dc-5901-4611-ba2a-934f7c2eba31",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should display New benefit overpayment debt notification when profileShowNewBenefitOverpaymentDebtNotificationSetting is true",
              "fullTitle": "NotificationGroup component should display New benefit overpayment debt notification when profileShowNewBenefitOverpaymentDebtNotificationSetting is true",
              "timedOut": false,
              "duration": 8,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var initialState = (0, _cloneDeep2.default)(baseState);\n(0, _set2.default)(initialState, \"featureToggles[\".concat(_featureFlagNames.default.profileShowPaymentsNotificationSetting, \"]\"), true);\n(0, _set2.default)(initialState, \"featureToggles[\".concat(_featureFlagNames.default.profileShowNewBenefitOverpaymentDebtNotificationSetting, \"]\"), true);\nvar view = (0, _unitTestHelpers.renderWithProfileReducersAndRouter)(/*#__PURE__*/_react.default.createElement(_NotificationGroup.default, {\n  groupId: \"group4\"\n}), {\n  initialState: initialState\n});\n(0, _chai.expect)(view.queryByText('New benefit overpayment debt notification')).to.exist;\n(0, _chai.expect)(view.queryByText('Disability and pension deposit notifications')).to.exist;\n(0, _chai.expect)(view.queryByText('New health care copay bill')).to.not.exist;",
              "err": {},
              "uuid": "9ab8e50d-6c9e-4a7f-a8c2-51e94eecde2f",
              "parentUUID": "1081b6dc-5901-4611-ba2a-934f7c2eba31",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should display New benefit overpayment debt notification when profileShowNewHealthCareCopayBillNotificationSetting is true",
              "fullTitle": "NotificationGroup component should display New benefit overpayment debt notification when profileShowNewHealthCareCopayBillNotificationSetting is true",
              "timedOut": false,
              "duration": 8,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var initialState = (0, _cloneDeep2.default)(baseState);\n(0, _set2.default)(initialState, \"featureToggles[\".concat(_featureFlagNames.default.profileShowPaymentsNotificationSetting, \"]\"), true);\n(0, _set2.default)(initialState, \"featureToggles[\".concat(_featureFlagNames.default.profileShowNewHealthCareCopayBillNotificationSetting, \"]\"), true);\nvar view = (0, _unitTestHelpers.renderWithProfileReducersAndRouter)(/*#__PURE__*/_react.default.createElement(_NotificationGroup.default, {\n  groupId: \"group4\"\n}), {\n  initialState: initialState\n});\n(0, _chai.expect)(view.queryByText('New health care copay bill')).to.exist;\n(0, _chai.expect)(view.queryByText('Disability and pension deposit notifications')).to.exist;\n(0, _chai.expect)(view.queryByText('New benefit overpayment debt notification')).to.not.exist;",
              "err": {},
              "uuid": "748a40e2-8abe-4c71-a596-6629dd667b12",
              "parentUUID": "1081b6dc-5901-4611-ba2a-934f7c2eba31",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "89656d47-c4b8-4e90-a318-d76f63b2f914",
            "86603e17-e0e4-4e93-bdc9-06dbd063b7c3",
            "84ae59c6-f0fd-405a-8bbd-2d3a8ba63e6f",
            "5ddf4eed-f21f-4d5a-a9c3-7230b817a436",
            "fab1157c-e360-47d3-b6d7-db4f28ab62f7",
            "6287b4db-78c9-4214-a449-18ee969c72f1",
            "9ab8e50d-6c9e-4a7f-a8c2-51e94eecde2f",
            "748a40e2-8abe-4c71-a596-6629dd667b12"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 82,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "2788bbe4-7a61-430b-b9e1-e55f969a6800",
          "title": "<NotificationSettings />",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/profile/tests/components/notification-settings/NotificationSettings.unit.spec.jsx",
          "file": "/src/applications/personalization/profile/tests/components/notification-settings/NotificationSettings.unit.spec.jsx",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"<NotificationSettings />\"",
              "fullTitle": "<NotificationSettings /> \"before each\" hook in \"<NotificationSettings />\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, _helpers.mockFetch)();\n(0, _helpers.setFetchJSONResponse)(global.fetch.onFirstCall(), _communicationPreferences.maximalSetOfPreferences);",
              "err": {},
              "uuid": "41bf9d97-71a1-44a8-9bda-1cc08b04df95",
              "parentUUID": "2788bbe4-7a61-430b-b9e1-e55f969a6800",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": "renders happy path with all sections showing",
              "fullTitle": "<NotificationSettings /> renders happy path with all sections showing",
              "timedOut": false,
              "duration": 35,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
              "err": {},
              "uuid": "fc690ffc-0b70-49e9-811e-e0f38d87d8db",
              "parentUUID": "2788bbe4-7a61-430b-b9e1-e55f969a6800",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "renders loading indicator and hides main section of content",
              "fullTitle": "<NotificationSettings /> renders loading indicator and hides main section of content",
              "timedOut": false,
              "duration": 32,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
              "err": {},
              "uuid": "be7abb1c-ddb7-40d9-95fe-b27df67943fd",
              "parentUUID": "2788bbe4-7a61-430b-b9e1-e55f969a6800",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "show alert to add mobile phone info",
              "fullTitle": "<NotificationSettings /> show alert to add mobile phone info",
              "timedOut": false,
              "duration": 5,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
              "err": {},
              "uuid": "2c3b7e4d-b514-4dff-9258-b579cf50aa6e",
              "parentUUID": "2788bbe4-7a61-430b-b9e1-e55f969a6800",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "when profileShowEmailNotificationSettings toggle is true, show alert to add email and mobile phone info",
              "fullTitle": "<NotificationSettings /> when profileShowEmailNotificationSettings toggle is true, show alert to add email and mobile phone info",
              "timedOut": false,
              "duration": 5,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
              "err": {},
              "uuid": "fa179d3e-0598-4b2b-834d-522be0e61907",
              "parentUUID": "2788bbe4-7a61-430b-b9e1-e55f969a6800",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "fc690ffc-0b70-49e9-811e-e0f38d87d8db",
            "be7abb1c-ddb7-40d9-95fe-b27df67943fd",
            "2c3b7e4d-b514-4dff-9258-b579cf50aa6e",
            "fa179d3e-0598-4b2b-834d-522be0e61907"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 77,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "30b03b26-a8b1-4d93-a151-b72c87ae990e",
          "title": "PersonalInformation",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/profile/tests/components/personal-information/DeselectableObjectField.unit.spec.jsx",
          "file": "/src/applications/personalization/profile/tests/components/personal-information/DeselectableObjectField.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should set all other options to false when preferNotToAnswer is true",
              "fullTitle": "PersonalInformation should set all other options to false when preferNotToAnswer is true",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var initial = {\n  woman: true,\n  man: true,\n  transgenderWoman: true,\n  transgenderMan: true,\n  nonBinary: true,\n  preferNotToAnswer: false,\n  genderNotListed: true\n};\nvar expected = {\n  woman: false,\n  man: false,\n  transgenderWoman: false,\n  transgenderMan: false,\n  nonBinary: false,\n  preferNotToAnswer: true,\n  genderNotListed: false\n};\n(0, _chai.expect)(_DeselectableObjectField.default.deselectBasedOnValue('preferNotToAnswer', true, initial, _personalInformationUtils.personalInformationFormSchemas.genderIdentity.properties)).to.deep.equal(expected);",
              "err": {},
              "uuid": "9421746c-774f-4b10-8b07-91507ff15c56",
              "parentUUID": "30b03b26-a8b1-4d93-a151-b72c87ae990e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should set preferNotToAnswer to false if any other option is set to true",
              "fullTitle": "PersonalInformation should set preferNotToAnswer to false if any other option is set to true",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var initial = {\n  woman: false,\n  preferNotToAnswer: true\n};\nvar expected = {\n  woman: true,\n  preferNotToAnswer: false\n};\n(0, _chai.expect)(_DeselectableObjectField.default.deselectBasedOnValue('woman', true, initial, _personalInformationUtils.personalInformationFormSchemas.genderIdentity.properties)).to.deep.equal(expected);",
              "err": {},
              "uuid": "478e00ff-149a-4163-a708-01b43c72e98f",
              "parentUUID": "30b03b26-a8b1-4d93-a151-b72c87ae990e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should set *NotListedText field to blank string when preferNotToAnswer is true",
              "fullTitle": "PersonalInformation should set *NotListedText field to blank string when preferNotToAnswer is true",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var initial = {\n  preferNotToAnswer: false,\n  sexualOrientationNotListedText: 'test text'\n};\nvar expected = {\n  preferNotToAnswer: true,\n  sexualOrientationNotListedText: ''\n};\n(0, _chai.expect)(_DeselectableObjectField.default.deselectBasedOnValue('preferNotToAnswer', true, initial, _personalInformationUtils.personalInformationFormSchemas.sexualOrientation.properties)).to.deep.equal(expected);",
              "err": {},
              "uuid": "2d20a82a-79fd-4d78-aacc-eea3cdd07b32",
              "parentUUID": "30b03b26-a8b1-4d93-a151-b72c87ae990e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should treat a normal selection (man) without preferNotToAnswer involved in a default manner and not unset anything special",
              "fullTitle": "PersonalInformation should treat a normal selection (man) without preferNotToAnswer involved in a default manner and not unset anything special",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var initial = {\n  woman: false,\n  man: false,\n  transgenderWoman: false,\n  transgenderMan: true,\n  nonBinary: false,\n  preferNotToAnswer: false,\n  genderNotListed: false\n};\nvar expected = {\n  woman: false,\n  man: true,\n  transgenderWoman: false,\n  transgenderMan: true,\n  nonBinary: false,\n  preferNotToAnswer: false,\n  genderNotListed: false\n};\n(0, _chai.expect)(_DeselectableObjectField.default.deselectBasedOnValue('man', true, initial, _personalInformationUtils.personalInformationFormSchemas.genderIdentity.properties)).to.deep.equal(expected);",
              "err": {},
              "uuid": "21f93f52-2924-462e-be68-d1d83c469616",
              "parentUUID": "30b03b26-a8b1-4d93-a151-b72c87ae990e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "9421746c-774f-4b10-8b07-91507ff15c56",
            "478e00ff-149a-4163-a708-01b43c72e98f",
            "2d20a82a-79fd-4d78-aacc-eea3cdd07b32",
            "21f93f52-2924-462e-be68-d1d83c469616"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "155f9238-de59-4f2c-989d-3cb949538905",
          "title": "Personal Info - Disability Rating",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/profile/tests/components/personal-information/DisabilityRating.unit.spec.jsx",
          "file": "/src/applications/personalization/profile/tests/components/personal-information/DisabilityRating.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should render a Disability Rating if provided through Redux state",
              "fullTitle": "Personal Info - Disability Rating should render a Disability Rating if provided through Redux state",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var tree = (0, _unitTestHelpers.renderWithProfileReducers)(/*#__PURE__*/_react.default.createElement(_DisabilityRating.default, null), {\n  initialState: createHappyState()\n});\n(0, _chai.expect)(tree.getByText(/40% service connected/i)).to.exist;",
              "err": {},
              "uuid": "9c60337c-e9cd-4d18-ba22-f4fc1b13dbe7",
              "parentUUID": "155f9238-de59-4f2c-989d-3cb949538905",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should render an error alert if totalRating has error state",
              "fullTitle": "Personal Info - Disability Rating should render an error alert if totalRating has error state",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var happyState = createHappyState();\nvar tree = (0, _unitTestHelpers.renderWithProfileReducers)(/*#__PURE__*/_react.default.createElement(_DisabilityRating.default, null), {\n  initialState: (0, _set2.default)(happyState, 'totalRating.error', {\n    code: '403',\n    detail: 'User not permitted to access this resource'\n  })\n});\n(0, _chai.expect)(tree.getByText(/We’re sorry. Something went wrong on our end and we can’t load your disability rating information/i)).to.exist;",
              "err": {},
              "uuid": "3da74b23-f589-4cdd-ade5-589e4787b55e",
              "parentUUID": "155f9238-de59-4f2c-989d-3cb949538905",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should render no rating content if user doesnt have claim in state",
              "fullTitle": "Personal Info - Disability Rating should render no rating content if user doesnt have claim in state",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var initialState = (0, _assign2.default)(createHappyState(), {\n  totalRating: {\n    error: {\n      code: '403',\n      detail: 'User not permitted to access this resource'\n    }\n  }\n}, {\n  user: {\n    profile: {\n      claims: {\n        ratingInfo: false\n      }\n    }\n  }\n});\nvar tree = (0, _unitTestHelpers.renderWithProfileReducers)(/*#__PURE__*/_react.default.createElement(_DisabilityRating.default, null), {\n  initialState: initialState\n});\n(0, _chai.expect)(tree.getByText(/Our records show that you don’t have a disability rating./i)).to.exist;",
              "err": {},
              "uuid": "c8dd6fb9-2582-4a94-a430-248a221f056f",
              "parentUUID": "155f9238-de59-4f2c-989d-3cb949538905",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "9c60337c-e9cd-4d18-ba22-f4fc1b13dbe7",
            "3da74b23-f589-4cdd-ade5-589e4787b55e",
            "c8dd6fb9-2582-4a94-a430-248a221f056f"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 6,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "e3d22d6c-bb2a-49ed-b8d1-22b100082c6e",
          "title": "Personal Info - Legal Name",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/profile/tests/components/personal-information/LegalName.unit.spec.jsx",
          "file": "/src/applications/personalization/profile/tests/components/personal-information/LegalName.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should render the error alert if no names are present",
              "fullTitle": "Personal Info - Legal Name should render the error alert if no names are present",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var initialState = createInitialState();\nvar tree = (0, _unitTestHelpers.renderWithProfileReducers)(/*#__PURE__*/_react.default.createElement(_LegalName.default, null), {\n  initialState: initialState\n});\n(0, _chai.expect)(tree.getByText(/something went wrong on our end and we can’t load your legal name/i)).to.exist;",
              "err": {},
              "uuid": "58c84c8c-13a8-41c8-a917-a9a8c256d806",
              "parentUUID": "e3d22d6c-bb2a-49ed-b8d1-22b100082c6e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should render a name if provided through state",
              "fullTitle": "Personal Info - Legal Name should render a name if provided through state",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var state = createInitialState();\nvar tree = (0, _unitTestHelpers.renderWithProfileReducers)(/*#__PURE__*/_react.default.createElement(_LegalName.default, null), {\n  initialState: (0, _set2.default)(state, 'vaProfile.hero.userFullName', {\n    first: 'John',\n    middle: 'middlename',\n    last: 'Doe',\n    suffix: 'Jr'\n  })\n});\n(0, _chai.expect)(tree.getByText(/john middlename doe jr/i)).to.exist;",
              "err": {},
              "uuid": "7c0e6a95-333a-48c1-ab7b-158475e4796f",
              "parentUUID": "e3d22d6c-bb2a-49ed-b8d1-22b100082c6e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "58c84c8c-13a8-41c8-a917-a9a8c256d806",
            "7c0e6a95-333a-48c1-ab7b-158475e4796f"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 4,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "b68b08f9-5622-465f-912f-6c37a7400bc1",
          "title": "<PersonalInformation />",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/profile/tests/components/personal-information/PersonalInformation.unit.spec.jsx",
          "file": "/src/applications/personalization/profile/tests/components/personal-information/PersonalInformation.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should render without crashing on root path",
              "fullTitle": "<PersonalInformation /> should render without crashing on root path",
              "timedOut": false,
              "duration": 17,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
              "err": {},
              "uuid": "749a7ae8-1f9a-4d74-87f4-7a7572b3558d",
              "parentUUID": "b68b08f9-5622-465f-912f-6c37a7400bc1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should render without crashing on edit hashed path",
              "fullTitle": "<PersonalInformation /> should render without crashing on edit hashed path",
              "timedOut": false,
              "duration": 8,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
              "err": {},
              "uuid": "e9ba17b9-f5fc-4ba4-aa7d-1af286e60c15",
              "parentUUID": "b68b08f9-5622-465f-912f-6c37a7400bc1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "renders Messaging signature section if messagingSignature is not null",
              "fullTitle": "<PersonalInformation /> renders Messaging signature section if messagingSignature is not null",
              "timedOut": false,
              "duration": 10,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
              "err": {},
              "uuid": "924a4258-e2e0-4cff-b6ab-31baad980b8a",
              "parentUUID": "b68b08f9-5622-465f-912f-6c37a7400bc1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "does not render Messaging signature section if messaging service is not enabled",
              "fullTitle": "<PersonalInformation /> does not render Messaging signature section if messaging service is not enabled",
              "timedOut": false,
              "duration": 9,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
              "err": {},
              "uuid": "c94ad5f1-1017-44bf-96ce-f8925bd66a50",
              "parentUUID": "b68b08f9-5622-465f-912f-6c37a7400bc1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "retrieves the messaging signatue from SM API if messaging is enabled but messagingSignature is not populated",
              "fullTitle": "<PersonalInformation /> retrieves the messaging signatue from SM API if messaging is enabled but messagingSignature is not populated",
              "timedOut": false,
              "duration": 17,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
              "err": {},
              "uuid": "e86dd70d-68bf-42de-ad44-14bb38a9d548",
              "parentUUID": "b68b08f9-5622-465f-912f-6c37a7400bc1",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "749a7ae8-1f9a-4d74-87f4-7a7572b3558d",
            "e9ba17b9-f5fc-4ba4-aa7d-1af286e60c15",
            "924a4258-e2e0-4cff-b6ab-31baad980b8a",
            "c94ad5f1-1017-44bf-96ce-f8925bd66a50",
            "e86dd70d-68bf-42de-ad44-14bb38a9d548"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 61,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "925bbd50-9f2d-4eb7-9959-2a98a542bf26",
          "title": "Profile",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/profile/tests/components/Profile.unit.spec.js",
          "file": "/src/applications/personalization/profile/tests/components/Profile.unit.spec.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"Profile\"",
              "fullTitle": "Profile \"before each\" hook in \"Profile\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "fetchFullNameSpy = _sinon.default.spy();\nfetchMilitaryInfoSpy = _sinon.default.spy();\nfetchCNPPaymentInfoSpy = _sinon.default.spy();\nfetchPersonalInfoSpy = _sinon.default.spy();\nfetchTotalDisabilityRatingSpy = _sinon.default.spy();\nconnectDrupalSourceOfTruthCernerSpy = _sinon.default.spy();\ndefaultProps = {\n  connectDrupalSourceOfTruthCerner: connectDrupalSourceOfTruthCernerSpy,\n  fetchFullName: fetchFullNameSpy,\n  fetchMilitaryInformation: fetchMilitaryInfoSpy,\n  fetchCNPPaymentInformation: fetchCNPPaymentInfoSpy,\n  fetchPersonalInformation: fetchPersonalInfoSpy,\n  fetchTotalDisabilityRating: fetchTotalDisabilityRatingSpy,\n  shouldFetchCNPDirectDepositInformation: true,\n  shouldFetchTotalDisabilityRating: true,\n  showLoader: false,\n  isLOA3: true,\n  isInMVI: true,\n  user: {},\n  location: {\n    pathname: '/profile/personal-information'\n  },\n  togglesLoaded: true,\n  profileToggles: {}\n};",
              "err": {},
              "uuid": "34c8a93b-ab13-4597-bfba-b0e8d2ed53c7",
              "parentUUID": "925bbd50-9f2d-4eb7-9959-2a98a542bf26",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": "renders a RequiredLoginView component that requires the USER_PROFILE",
              "fullTitle": "Profile renders a RequiredLoginView component that requires the USER_PROFILE",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var wrapper = (0, _enzyme.shallow)(/*#__PURE__*/_react.default.createElement(_Profile.ProfileUnconnected, defaultProps));\n(0, _chai.expect)(wrapper.type()).to.equal(_RequiredLoginView.RequiredLoginView);\n(0, _chai.expect)(wrapper.prop('serviceRequired')).to.equal(_backendServices.default.USER_PROFILE);\nwrapper.unmount();",
              "err": {},
              "uuid": "1f660328-6c6b-4e19-8150-47cbf2740f3c",
              "parentUUID": "925bbd50-9f2d-4eb7-9959-2a98a542bf26",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should render a spinner if it is loading data",
              "fullTitle": "Profile should render a spinner if it is loading data",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "defaultProps.showLoader = true;\nvar wrapper = (0, _enzyme.shallow)(/*#__PURE__*/_react.default.createElement(_Profile.ProfileUnconnected, defaultProps));\nwrapper.setProps({\n  showLoader: true\n});\nvar loader = wrapper.find('RequiredLoginLoader');\n(0, _chai.expect)(loader.length).to.equal(1);\nwrapper.unmount();",
              "err": {},
              "uuid": "cd3e1b45-6584-4a47-947f-2664ae2babd5",
              "parentUUID": "925bbd50-9f2d-4eb7-9959-2a98a542bf26",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [
            {
              "uuid": "a414cc44-c738-4fc1-8164-a56a0917597f",
              "title": "when the component mounts",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/profile/tests/components/Profile.unit.spec.js",
              "file": "/src/applications/personalization/profile/tests/components/Profile.unit.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [],
              "suites": [
                {
                  "uuid": "d9875791-946e-4fc2-8709-2d4ac98d127f",
                  "title": "when user is LOA3",
                  "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/profile/tests/components/Profile.unit.spec.js",
                  "file": "/src/applications/personalization/profile/tests/components/Profile.unit.spec.js",
                  "beforeHooks": [
                    {
                      "title": "\"before each\" hook in \"when user is LOA3\"",
                      "fullTitle": "Profile when the component mounts when user is LOA3 \"before each\" hook in \"when user is LOA3\"",
                      "timedOut": false,
                      "duration": 0,
                      "state": null,
                      "speed": null,
                      "pass": false,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "defaultProps.user.profile = {\n  status: 'OK'\n};",
                      "err": {},
                      "uuid": "154b65e7-10c1-4c2e-adf6-56498b51a5db",
                      "parentUUID": "d9875791-946e-4fc2-8709-2d4ac98d127f",
                      "isHook": true,
                      "skipped": false
                    }
                  ],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "should fetch the military information data",
                      "fullTitle": "Profile when the component mounts when user is LOA3 should fetch the military information data",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "slow",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "var wrapper = (0, _enzyme.shallow)(/*#__PURE__*/_react.default.createElement(_Profile.ProfileUnconnected, defaultProps));\n(0, _chai.expect)(fetchMilitaryInfoSpy.called).to.be.true;\nwrapper.unmount();",
                      "err": {},
                      "uuid": "b055c9eb-bb07-4459-99fa-92bbab9fd0af",
                      "parentUUID": "d9875791-946e-4fc2-8709-2d4ac98d127f",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "should fetch the full name data",
                      "fullTitle": "Profile when the component mounts when user is LOA3 should fetch the full name data",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "slow",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "var wrapper = (0, _enzyme.shallow)(/*#__PURE__*/_react.default.createElement(_Profile.ProfileUnconnected, defaultProps));\n(0, _chai.expect)(fetchFullNameSpy.called).to.be.true;\nwrapper.unmount();",
                      "err": {},
                      "uuid": "103d3142-62f0-4850-afa5-1d600ee2746a",
                      "parentUUID": "d9875791-946e-4fc2-8709-2d4ac98d127f",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "should fetch the personal information data",
                      "fullTitle": "Profile when the component mounts when user is LOA3 should fetch the personal information data",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "slow",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "var wrapper = (0, _enzyme.shallow)(/*#__PURE__*/_react.default.createElement(_Profile.ProfileUnconnected, defaultProps));\n(0, _chai.expect)(fetchPersonalInfoSpy.called).to.be.true;\nwrapper.unmount();",
                      "err": {},
                      "uuid": "abf129fd-f6e0-40f8-b5d8-d95130e74374",
                      "parentUUID": "d9875791-946e-4fc2-8709-2d4ac98d127f",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "b055c9eb-bb07-4459-99fa-92bbab9fd0af",
                    "103d3142-62f0-4850-afa5-1d600ee2746a",
                    "abf129fd-f6e0-40f8-b5d8-d95130e74374"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 3,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "8e6a10a3-2266-4364-9412-d3705745b25c",
                  "title": "when user is not LOA1",
                  "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/profile/tests/components/Profile.unit.spec.js",
                  "file": "/src/applications/personalization/profile/tests/components/Profile.unit.spec.js",
                  "beforeHooks": [
                    {
                      "title": "\"before each\" hook in \"when user is not LOA1\"",
                      "fullTitle": "Profile when the component mounts when user is not LOA1 \"before each\" hook in \"when user is not LOA1\"",
                      "timedOut": false,
                      "duration": 0,
                      "state": null,
                      "speed": null,
                      "pass": false,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "defaultProps.isLOA3 = false;",
                      "err": {},
                      "uuid": "9c5c2073-b230-4c91-b66f-2bc99eb56774",
                      "parentUUID": "8e6a10a3-2266-4364-9412-d3705745b25c",
                      "isHook": true,
                      "skipped": false
                    }
                  ],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "should not fetch the military information data",
                      "fullTitle": "Profile when the component mounts when user is not LOA1 should not fetch the military information data",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "slow",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "var wrapper = (0, _enzyme.shallow)(/*#__PURE__*/_react.default.createElement(_Profile.ProfileUnconnected, defaultProps));\n(0, _chai.expect)(fetchMilitaryInfoSpy.called).to.be.false;\nwrapper.unmount();",
                      "err": {},
                      "uuid": "b2467d12-e53d-407c-9a23-1fac239c0a19",
                      "parentUUID": "8e6a10a3-2266-4364-9412-d3705745b25c",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "should not fetch the full name data",
                      "fullTitle": "Profile when the component mounts when user is not LOA1 should not fetch the full name data",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "var wrapper = (0, _enzyme.shallow)(/*#__PURE__*/_react.default.createElement(_Profile.ProfileUnconnected, defaultProps));\n(0, _chai.expect)(fetchFullNameSpy.called).to.be.false;\nwrapper.unmount();",
                      "err": {},
                      "uuid": "d1161564-dd18-4d4a-a3f9-fd3c2a4aec31",
                      "parentUUID": "8e6a10a3-2266-4364-9412-d3705745b25c",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "should not fetch the personal information data",
                      "fullTitle": "Profile when the component mounts when user is not LOA1 should not fetch the personal information data",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "var wrapper = (0, _enzyme.shallow)(/*#__PURE__*/_react.default.createElement(_Profile.ProfileUnconnected, defaultProps));\n(0, _chai.expect)(fetchPersonalInfoSpy.called).to.be.false;\nwrapper.unmount();",
                      "err": {},
                      "uuid": "702b7262-28bd-49b2-8afb-7b76700ec302",
                      "parentUUID": "8e6a10a3-2266-4364-9412-d3705745b25c",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "b2467d12-e53d-407c-9a23-1fac239c0a19",
                    "d1161564-dd18-4d4a-a3f9-fd3c2a4aec31",
                    "702b7262-28bd-49b2-8afb-7b76700ec302"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "5c816ae6-06ad-48ae-9e37-6fdc4c956192",
                  "title": "when `shouldFetchTotalDisabilityRating` is `true`",
                  "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/profile/tests/components/Profile.unit.spec.js",
                  "file": "/src/applications/personalization/profile/tests/components/Profile.unit.spec.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "should fetch the total disability rating",
                      "fullTitle": "Profile when the component mounts when `shouldFetchTotalDisabilityRating` is `true` should fetch the total disability rating",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "defaultProps.shouldFetchTotalDisabilityRating = true;\nvar wrapper = (0, _enzyme.shallow)(/*#__PURE__*/_react.default.createElement(_Profile.ProfileUnconnected, defaultProps));\n(0, _chai.expect)(fetchTotalDisabilityRatingSpy.called).to.be.true;\nwrapper.unmount();",
                      "err": {},
                      "uuid": "6bd43ce2-3a7e-4b08-b21e-18e937409f57",
                      "parentUUID": "5c816ae6-06ad-48ae-9e37-6fdc4c956192",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "6bd43ce2-3a7e-4b08-b21e-18e937409f57"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "0ff0530f-973e-4f86-926f-5fb7af3083c1",
                  "title": "when `shouldFetchTotalDisabilityRating` is `false`",
                  "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/profile/tests/components/Profile.unit.spec.js",
                  "file": "/src/applications/personalization/profile/tests/components/Profile.unit.spec.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "should not fetch the total disability rating",
                      "fullTitle": "Profile when the component mounts when `shouldFetchTotalDisabilityRating` is `false` should not fetch the total disability rating",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "defaultProps.shouldFetchTotalDisabilityRating = false;\nvar wrapper = (0, _enzyme.shallow)(/*#__PURE__*/_react.default.createElement(_Profile.ProfileUnconnected, defaultProps));\n(0, _chai.expect)(fetchTotalDisabilityRatingSpy.called).to.be.false;\nwrapper.unmount();",
                      "err": {},
                      "uuid": "22a33c4b-b545-4ef3-b906-1c2b96fc9956",
                      "parentUUID": "0ff0530f-973e-4f86-926f-5fb7af3083c1",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "22a33c4b-b545-4ef3-b906-1c2b96fc9956"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                }
              ],
              "passes": [],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            }
          ],
          "passes": [
            "1f660328-6c6b-4e19-8150-47cbf2740f3c",
            "cd3e1b45-6584-4a47-947f-2664ae2babd5"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "6f9f8fce-9957-4d89-99b3-1149e950aac1",
          "title": "mapStateToProps",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/profile/tests/components/Profile.unit.spec.js",
          "file": "/src/applications/personalization/profile/tests/components/Profile.unit.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "returns an object with the correct keys",
              "fullTitle": "mapStateToProps returns an object with the correct keys",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var state = makeDefaultState();\nvar props = (0, _Profile.mapStateToProps)(state);\nvar expectedKeys = ['user', 'showLoader', 'isInMVI', 'isLOA3', 'shouldFetchDirectDeposit', 'shouldFetchTotalDisabilityRating', 'isDowntimeWarningDismissed', 'isBlocked', 'togglesLoaded', 'profileToggles'];\n(0, _chai.expect)(Object.keys(props)).to.deep.equal(expectedKeys);",
              "err": {},
              "uuid": "853512b0-17bb-4e13-bd5b-e659e0f158ea",
              "parentUUID": "6f9f8fce-9957-4d89-99b3-1149e950aac1",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [
            {
              "uuid": "183747f0-371f-4e87-9bc9-42207d244cfd",
              "title": "#user",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/profile/tests/components/Profile.unit.spec.js",
              "file": "/src/applications/personalization/profile/tests/components/Profile.unit.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "is pulled from state.user",
                  "fullTitle": "mapStateToProps #user is pulled from state.user",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var state = makeDefaultState();\nvar props = (0, _Profile.mapStateToProps)(state);\n(0, _chai.expect)(props.user).to.deep.equal(state.user);",
                  "err": {},
                  "uuid": "f9ae22f1-422a-4e3a-8653-9d3814c3dce0",
                  "parentUUID": "183747f0-371f-4e87-9bc9-42207d244cfd",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "f9ae22f1-422a-4e3a-8653-9d3814c3dce0"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "6f3722df-9037-4fdc-a60a-4486931a759a",
              "title": "#shouldFetchTotalDisabilityRating",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/profile/tests/components/Profile.unit.spec.js",
              "file": "/src/applications/personalization/profile/tests/components/Profile.unit.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "is falsey when the user is LOA3 and has no claim in user object",
                  "fullTitle": "mapStateToProps #shouldFetchTotalDisabilityRating is falsey when the user is LOA3 and has no claim in user object",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var state = makeDefaultState();\nvar props = (0, _Profile.mapStateToProps)(state);\n(0, _chai.expect)(props.shouldFetchTotalDisabilityRating).to.not.be.true;",
                  "err": {},
                  "uuid": "d2eeaee4-045a-41e7-b6f8-1b7d05f9b8a7",
                  "parentUUID": "6f3722df-9037-4fdc-a60a-4486931a759a",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "is falsey when the user is LOA3 and profile.claims.ratingInfo is explicitly false",
                  "fullTitle": "mapStateToProps #shouldFetchTotalDisabilityRating is falsey when the user is LOA3 and profile.claims.ratingInfo is explicitly false",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var state = makeDefaultState();\nstate.user.profile.claims = {\n  ratingInfo: false\n};\nvar props = (0, _Profile.mapStateToProps)(state);\n(0, _chai.expect)(props.shouldFetchTotalDisabilityRating).to.not.be.true;",
                  "err": {},
                  "uuid": "7e07fcbf-3667-4b7b-81ae-dfac143305fd",
                  "parentUUID": "6f3722df-9037-4fdc-a60a-4486931a759a",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "is truthy when the user is LOA3 and profile.claims.ratingInfo is explicitly true",
                  "fullTitle": "mapStateToProps #shouldFetchTotalDisabilityRating is truthy when the user is LOA3 and profile.claims.ratingInfo is explicitly true",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var state = makeDefaultState();\nstate.user.profile.claims = {\n  ratingInfo: true\n};\nvar props = (0, _Profile.mapStateToProps)(state);\n(0, _chai.expect)(props.shouldFetchTotalDisabilityRating).to.be.true;",
                  "err": {},
                  "uuid": "5a614a23-190d-41c9-8fba-7c9e94555f6d",
                  "parentUUID": "6f3722df-9037-4fdc-a60a-4486931a759a",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "d2eeaee4-045a-41e7-b6f8-1b7d05f9b8a7",
                "7e07fcbf-3667-4b7b-81ae-dfac143305fd",
                "5a614a23-190d-41c9-8fba-7c9e94555f6d"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "5546c023-3525-49c6-95b9-b0955f5791e3",
              "title": "#shouldFetchDirectDeposit",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/profile/tests/components/Profile.unit.spec.js",
              "file": "/src/applications/personalization/profile/tests/components/Profile.unit.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "is `true` when ID.me user has 2FA set and has access to Lighthouse",
                  "fullTitle": "mapStateToProps #shouldFetchDirectDeposit is `true` when ID.me user has 2FA set and has access to Lighthouse",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var state = makeDefaultState();\nvar props = (0, _Profile.mapStateToProps)(state);\n(0, _chai.expect)(props.shouldFetchDirectDeposit).to.be.true;",
                  "err": {},
                  "uuid": "71ebb28a-3d36-4d6f-b447-a23469bade9e",
                  "parentUUID": "5546c023-3525-49c6-95b9-b0955f5791e3",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "is `false` when ID.me user has 2FA set but does not have access to Lighthouse",
                  "fullTitle": "mapStateToProps #shouldFetchDirectDeposit is `false` when ID.me user has 2FA set but does not have access to Lighthouse",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var state = makeDefaultState();\nstate.user.profile.services = [];\nvar props = (0, _Profile.mapStateToProps)(state);\n(0, _chai.expect)(props.shouldFetchDirectDeposit).to.be.false;",
                  "err": {},
                  "uuid": "abb31c66-6802-40b3-8ef5-6635ed70be90",
                  "parentUUID": "5546c023-3525-49c6-95b9-b0955f5791e3",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "is `false` when the ID.me user has access to Lighthouse but does not have 2FA set",
                  "fullTitle": "mapStateToProps #shouldFetchDirectDeposit is `false` when the ID.me user has access to Lighthouse but does not have 2FA set",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var state = makeDefaultState();\nstate.user.profile.multifactor = false;\nvar props = (0, _Profile.mapStateToProps)(state);\n(0, _chai.expect)(props.shouldFetchDirectDeposit).to.be.false;",
                  "err": {},
                  "uuid": "8dc5498e-8d3b-4e59-80c5-2c30e012a7a7",
                  "parentUUID": "5546c023-3525-49c6-95b9-b0955f5791e3",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "is `false` when the ID.me user does not have 2FA set and does not have access to Lighthouse",
                  "fullTitle": "mapStateToProps #shouldFetchDirectDeposit is `false` when the ID.me user does not have 2FA set and does not have access to Lighthouse",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var state = makeDefaultState();\nstate.user.profile.multifactor = false;\nstate.user.profile.services = [];\nvar props = (0, _Profile.mapStateToProps)(state);\n(0, _chai.expect)(props.shouldFetchDirectDeposit).to.be.false;",
                  "err": {},
                  "uuid": "0178db66-5178-41e8-b804-47ec8a7c050a",
                  "parentUUID": "5546c023-3525-49c6-95b9-b0955f5791e3",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "71ebb28a-3d36-4d6f-b447-a23469bade9e",
                "abb31c66-6802-40b3-8ef5-6635ed70be90",
                "8dc5498e-8d3b-4e59-80c5-2c30e012a7a7",
                "0178db66-5178-41e8-b804-47ec8a7c050a"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "e725b7a4-bf03-455d-8056-2d20f530896f",
              "title": "#showLoader",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/profile/tests/components/Profile.unit.spec.js",
              "file": "/src/applications/personalization/profile/tests/components/Profile.unit.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [],
              "suites": [
                {
                  "uuid": "5061017c-ea7d-4cdc-a89f-7f483a216765",
                  "title": "when direct deposit info should be fetched",
                  "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/profile/tests/components/Profile.unit.spec.js",
                  "file": "/src/applications/personalization/profile/tests/components/Profile.unit.spec.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "is `true` when the call to fetch direct deposit info has not resolved but all others have",
                      "fullTitle": "mapStateToProps #showLoader when direct deposit info should be fetched is `true` when the call to fetch direct deposit info has not resolved but all others have",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "var state = makeDefaultState();\nvar props = (0, _Profile.mapStateToProps)(state);\n(0, _chai.expect)(props.showLoader).to.be.true;",
                      "err": {},
                      "uuid": "5c224ee0-96eb-43a1-804d-5a99207d5448",
                      "parentUUID": "5061017c-ea7d-4cdc-a89f-7f483a216765",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "is `true` when the call to fetch personal info has not resolved but all others have",
                      "fullTitle": "mapStateToProps #showLoader when direct deposit info should be fetched is `true` when the call to fetch personal info has not resolved but all others have",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "var state = makeDefaultState();\ndelete state.vaProfile.personalInformation;\nvar props = (0, _Profile.mapStateToProps)(state);\n(0, _chai.expect)(props.showLoader).to.be.true;",
                      "err": {},
                      "uuid": "d3a5c12d-dc28-4e79-bd27-9b2fbfd64896",
                      "parentUUID": "5061017c-ea7d-4cdc-a89f-7f483a216765",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "is `true` when the call to fetch military info has not resolved but all others have",
                      "fullTitle": "mapStateToProps #showLoader when direct deposit info should be fetched is `true` when the call to fetch military info has not resolved but all others have",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "var state = makeDefaultState();\ndelete state.vaProfile.militaryInformation;\nvar props = (0, _Profile.mapStateToProps)(state);\n(0, _chai.expect)(props.showLoader).to.be.true;",
                      "err": {},
                      "uuid": "2b2ddb8a-096b-4779-8cb4-0d97a02815f2",
                      "parentUUID": "5061017c-ea7d-4cdc-a89f-7f483a216765",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "is `true` when the call to fetch the full name has not resolved but all others have",
                      "fullTitle": "mapStateToProps #showLoader when direct deposit info should be fetched is `true` when the call to fetch the full name has not resolved but all others have",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "var state = makeDefaultState();\ndelete state.vaProfile.hero;\nvar props = (0, _Profile.mapStateToProps)(state);\n(0, _chai.expect)(props.showLoader).to.be.true;",
                      "err": {},
                      "uuid": "b6d4f054-0843-4655-bc20-cd5e0db2c9ae",
                      "parentUUID": "5061017c-ea7d-4cdc-a89f-7f483a216765",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "5c224ee0-96eb-43a1-804d-5a99207d5448",
                    "d3a5c12d-dc28-4e79-bd27-9b2fbfd64896",
                    "2b2ddb8a-096b-4779-8cb4-0d97a02815f2",
                    "b6d4f054-0843-4655-bc20-cd5e0db2c9ae"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "8a61539a-d92a-4955-abde-72a7a9be9f8c",
                  "title": "when direct deposit info should not be fetched because the user has not set up 2FA",
                  "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/profile/tests/components/Profile.unit.spec.js",
                  "file": "/src/applications/personalization/profile/tests/components/Profile.unit.spec.js",
                  "beforeHooks": [
                    {
                      "title": "\"before each\" hook in \"when direct deposit info should not be fetched because the user has not set up 2FA\"",
                      "fullTitle": "mapStateToProps #showLoader when direct deposit info should not be fetched because the user has not set up 2FA \"before each\" hook in \"when direct deposit info should not be fetched because the user has not set up 2FA\"",
                      "timedOut": false,
                      "duration": 0,
                      "state": null,
                      "speed": null,
                      "pass": false,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "state = makeDefaultState();\nstate.user.profile.multifactor = false;",
                      "err": {},
                      "uuid": "ba44fc6b-55d6-4353-bfae-76be7f54c760",
                      "parentUUID": "8a61539a-d92a-4955-abde-72a7a9be9f8c",
                      "isHook": true,
                      "skipped": false
                    }
                  ],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "is `false` when all required data calls have resolved successfully",
                      "fullTitle": "mapStateToProps #showLoader when direct deposit info should not be fetched because the user has not set up 2FA is `false` when all required data calls have resolved successfully",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "slow",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "var props = (0, _Profile.mapStateToProps)(state);\n(0, _chai.expect)(props.showLoader).to.be.false;",
                      "err": {},
                      "uuid": "11794038-1d25-4343-8bf7-2018bef787bb",
                      "parentUUID": "8a61539a-d92a-4955-abde-72a7a9be9f8c",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "is `false` when all required data calls have either resolved successfully or errored",
                      "fullTitle": "mapStateToProps #showLoader when direct deposit info should not be fetched because the user has not set up 2FA is `false` when all required data calls have either resolved successfully or errored",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "slow",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "state.vaProfile.personalInformation.error = {};\nvar props = (0, _Profile.mapStateToProps)(state);\n(0, _chai.expect)(props.showLoader).to.be.false;",
                      "err": {},
                      "uuid": "888fddd3-0c37-4bb5-afce-9b6bbe886150",
                      "parentUUID": "8a61539a-d92a-4955-abde-72a7a9be9f8c",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "is `false` when the call to fetch payment info has not resolved",
                      "fullTitle": "mapStateToProps #showLoader when direct deposit info should not be fetched because the user has not set up 2FA is `false` when the call to fetch payment info has not resolved",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "var props = (0, _Profile.mapStateToProps)(state);\n(0, _chai.expect)(props.showLoader).to.be.false;",
                      "err": {},
                      "uuid": "6dee441d-b5c7-4ce2-87e7-af0e24209ba2",
                      "parentUUID": "8a61539a-d92a-4955-abde-72a7a9be9f8c",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "is `true` when the call to fetch personal info has not resolved",
                      "fullTitle": "mapStateToProps #showLoader when direct deposit info should not be fetched because the user has not set up 2FA is `true` when the call to fetch personal info has not resolved",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "delete state.vaProfile.personalInformation;\nvar props = (0, _Profile.mapStateToProps)(state);\n(0, _chai.expect)(props.showLoader).to.be.true;",
                      "err": {},
                      "uuid": "e90a07a8-6c19-4b6a-956d-bffb65c6ae4c",
                      "parentUUID": "8a61539a-d92a-4955-abde-72a7a9be9f8c",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "is `true` when the call to fetch military info has not resolved",
                      "fullTitle": "mapStateToProps #showLoader when direct deposit info should not be fetched because the user has not set up 2FA is `true` when the call to fetch military info has not resolved",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "delete state.vaProfile.militaryInformation;\nvar props = (0, _Profile.mapStateToProps)(state);\n(0, _chai.expect)(props.showLoader).to.be.true;",
                      "err": {},
                      "uuid": "ee9220af-1c1f-41e6-a07e-3608c48c3d56",
                      "parentUUID": "8a61539a-d92a-4955-abde-72a7a9be9f8c",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "is `true` when the call to fetch the full name has not resolved",
                      "fullTitle": "mapStateToProps #showLoader when direct deposit info should not be fetched because the user has not set up 2FA is `true` when the call to fetch the full name has not resolved",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "delete state.vaProfile.hero;\nvar props = (0, _Profile.mapStateToProps)(state);\n(0, _chai.expect)(props.showLoader).to.be.true;",
                      "err": {},
                      "uuid": "4a365f06-e814-4d85-a58d-3c00664218a1",
                      "parentUUID": "8a61539a-d92a-4955-abde-72a7a9be9f8c",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "11794038-1d25-4343-8bf7-2018bef787bb",
                    "888fddd3-0c37-4bb5-afce-9b6bbe886150",
                    "6dee441d-b5c7-4ce2-87e7-af0e24209ba2",
                    "e90a07a8-6c19-4b6a-956d-bffb65c6ae4c",
                    "ee9220af-1c1f-41e6-a07e-3608c48c3d56",
                    "4a365f06-e814-4d85-a58d-3c00664218a1"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 2,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "162366ab-762e-4938-a773-a9403de48a1d",
                  "title": "when the user is not LOA1 or LOA3 and is logged in",
                  "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/profile/tests/components/Profile.unit.spec.js",
                  "file": "/src/applications/personalization/profile/tests/components/Profile.unit.spec.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "is `true`",
                      "fullTitle": "mapStateToProps #showLoader when the user is not LOA1 or LOA3 and is logged in is `true`",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "var state = makeDefaultState();\nstate.user.login.currentlyLoggedIn = true;\nstate.user.profile.loa.current = undefined;\nvar props = (0, _Profile.mapStateToProps)(state);\n(0, _chai.expect)(props.showLoader).to.be.true;",
                      "err": {},
                      "uuid": "b376f853-1976-48ec-b83d-b2d823b51c4b",
                      "parentUUID": "162366ab-762e-4938-a773-a9403de48a1d",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "b376f853-1976-48ec-b83d-b2d823b51c4b"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                }
              ],
              "passes": [],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            }
          ],
          "passes": [
            "853512b0-17bb-4e13-bd5b-e659e0f158ea"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "b1b285d9-adf8-4e86-b7dc-384257fb576b",
          "title": "<ProfileBreadcrumbs />",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/profile/tests/components/ProfileBreadcrumbs.unit.spec.jsx",
          "file": "/src/applications/personalization/profile/tests/components/ProfileBreadcrumbs.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should render \"Home\" and \"Profile\" as base breadcrumbs",
              "fullTitle": "<ProfileBreadcrumbs /> should render \"Home\" and \"Profile\" as base breadcrumbs",
              "timedOut": false,
              "duration": 3,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _setup = setup(_constants.PROFILE_PATHS.PROFILE_ROOT),\n  breadcrumbList = _setup.breadcrumbList;\n(0, _chai.expect)(breadcrumbList[0].label).to.equal('Home');\n(0, _chai.expect)(breadcrumbList[1].label).to.equal('Profile');",
              "err": {},
              "uuid": "5e71b87c-560b-4511-9d88-c7241b88775e",
              "parentUUID": "b1b285d9-adf8-4e86-b7dc-384257fb576b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [
            {
              "uuid": "620cc9d8-c8f3-44fe-a319-434c134c32f2",
              "title": "should render additional breadcrumb based on route",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/profile/tests/components/ProfileBreadcrumbs.unit.spec.jsx",
              "file": "/src/applications/personalization/profile/tests/components/ProfileBreadcrumbs.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "renders personal information breadcrumb",
                  "fullTitle": "<ProfileBreadcrumbs /> should render additional breadcrumb based on route renders personal information breadcrumb",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var _setup2 = setup(_constants.PROFILE_PATHS.PERSONAL_INFORMATION),\n  breadcrumbList = _setup2.breadcrumbList;\n(0, _chai.expect)(breadcrumbList[0].label).to.equal('Home');\n(0, _chai.expect)(breadcrumbList[1].label).to.equal('Profile');\n(0, _chai.expect)(breadcrumbList[2].label).to.equal('Personal information');",
                  "err": {},
                  "uuid": "a88cfbe1-dafb-4501-961d-cc02b5a49a98",
                  "parentUUID": "620cc9d8-c8f3-44fe-a319-434c134c32f2",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "renders contact information breadcrumb",
                  "fullTitle": "<ProfileBreadcrumbs /> should render additional breadcrumb based on route renders contact information breadcrumb",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var _setup3 = setup(_constants.PROFILE_PATHS.CONTACT_INFORMATION),\n  breadcrumbList = _setup3.breadcrumbList;\n(0, _chai.expect)(breadcrumbList[0].label).to.equal('Home');\n(0, _chai.expect)(breadcrumbList[1].label).to.equal('Profile');\n(0, _chai.expect)(breadcrumbList[2].label).to.equal('Contact information');",
                  "err": {},
                  "uuid": "5744d30f-0c44-4216-aaa4-c7ce58493620",
                  "parentUUID": "620cc9d8-c8f3-44fe-a319-434c134c32f2",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "renders military information breadcrumb",
                  "fullTitle": "<ProfileBreadcrumbs /> should render additional breadcrumb based on route renders military information breadcrumb",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var _setup4 = setup(_constants.PROFILE_PATHS.MILITARY_INFORMATION),\n  breadcrumbList = _setup4.breadcrumbList;\n(0, _chai.expect)(breadcrumbList[0].label).to.equal('Home');\n(0, _chai.expect)(breadcrumbList[1].label).to.equal('Profile');\n(0, _chai.expect)(breadcrumbList[2].label).to.equal('Military information');",
                  "err": {},
                  "uuid": "61a52497-b551-4d07-a45d-beb2a312ef6d",
                  "parentUUID": "620cc9d8-c8f3-44fe-a319-434c134c32f2",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "renders direct deposit breadcrumb",
                  "fullTitle": "<ProfileBreadcrumbs /> should render additional breadcrumb based on route renders direct deposit breadcrumb",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var _setup5 = setup(_constants.PROFILE_PATHS.DIRECT_DEPOSIT),\n  breadcrumbList = _setup5.breadcrumbList;\n(0, _chai.expect)(breadcrumbList[0].label).to.equal('Home');\n(0, _chai.expect)(breadcrumbList[1].label).to.equal('Profile');\n(0, _chai.expect)(breadcrumbList[2].label).to.equal('Direct deposit information');",
                  "err": {},
                  "uuid": "9787320e-41f2-4b6f-9e10-70f17f0027d2",
                  "parentUUID": "620cc9d8-c8f3-44fe-a319-434c134c32f2",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "renders notification settings breadcrumb",
                  "fullTitle": "<ProfileBreadcrumbs /> should render additional breadcrumb based on route renders notification settings breadcrumb",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var _setup6 = setup(_constants.PROFILE_PATHS.NOTIFICATION_SETTINGS),\n  breadcrumbList = _setup6.breadcrumbList;\n(0, _chai.expect)(breadcrumbList[0].label).to.equal('Home');\n(0, _chai.expect)(breadcrumbList[1].label).to.equal('Profile');\n(0, _chai.expect)(breadcrumbList[2].label).to.equal('Notification settings');",
                  "err": {},
                  "uuid": "92d90434-a3ea-4578-b29b-0520347849c7",
                  "parentUUID": "620cc9d8-c8f3-44fe-a319-434c134c32f2",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "renders connected apps breadcrumb",
                  "fullTitle": "<ProfileBreadcrumbs /> should render additional breadcrumb based on route renders connected apps breadcrumb",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var _setup7 = setup(_constants.PROFILE_PATHS.CONNECTED_APPLICATIONS),\n  breadcrumbList = _setup7.breadcrumbList;\n(0, _chai.expect)(breadcrumbList[0].label).to.equal('Home');\n(0, _chai.expect)(breadcrumbList[1].label).to.equal('Profile');\n(0, _chai.expect)(breadcrumbList[2].label).to.equal('Connected apps');",
                  "err": {},
                  "uuid": "2bf6df43-cc32-472e-8eb7-2c87642826cb",
                  "parentUUID": "620cc9d8-c8f3-44fe-a319-434c134c32f2",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "renders root breadcrumb when path is invalid",
                  "fullTitle": "<ProfileBreadcrumbs /> should render additional breadcrumb based on route renders root breadcrumb when path is invalid",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var _setup8 = setup('/profile/invalid-path'),\n  breadcrumbList = _setup8.breadcrumbList;\n(0, _chai.expect)(breadcrumbList[0].label).to.equal('Home');\n(0, _chai.expect)(breadcrumbList[1].label).to.equal('Profile');",
                  "err": {},
                  "uuid": "368cb3ed-0b22-4615-80eb-c485ed620658",
                  "parentUUID": "620cc9d8-c8f3-44fe-a319-434c134c32f2",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "a88cfbe1-dafb-4501-961d-cc02b5a49a98",
                "5744d30f-0c44-4216-aaa4-c7ce58493620",
                "61a52497-b551-4d07-a45d-beb2a312ef6d",
                "9787320e-41f2-4b6f-9e10-70f17f0027d2",
                "92d90434-a3ea-4578-b29b-0520347849c7",
                "2bf6df43-cc32-472e-8eb7-2c87642826cb",
                "368cb3ed-0b22-4615-80eb-c485ed620658"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 14,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            }
          ],
          "passes": [
            "5e71b87c-560b-4511-9d88-c7241b88775e"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "599ebe33-c34e-4dff-bd6a-70fb89effb71",
          "title": "ProfileInfoCard",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/profile/tests/components/ProfileInfoCard.unit.spec.jsx",
          "file": "/src/applications/personalization/profile/tests/components/ProfileInfoCard.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "3a920251-b820-43a4-b02c-a479c38a7044",
              "title": "as `sections` layout",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/profile/tests/components/ProfileInfoCard.unit.spec.jsx",
              "file": "/src/applications/personalization/profile/tests/components/ProfileInfoCard.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should render the card title as an h3 by default, and render row titles as h4",
                  "fullTitle": "ProfileInfoCard as `sections` layout should render the card title as an h3 by default, and render row titles as h4",
                  "timedOut": false,
                  "duration": 6,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
                  "err": {},
                  "uuid": "6122c480-9880-4449-9ce4-3f08f4fca3f2",
                  "parentUUID": "3a920251-b820-43a4-b02c-a479c38a7044",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should render the card title using `level` prop, and render row titles as `level + 1`",
                  "fullTitle": "ProfileInfoCard as `sections` layout should render the card title using `level` prop, and render row titles as `level + 1`",
                  "timedOut": false,
                  "duration": 6,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
                  "err": {},
                  "uuid": "c07a7ca3-7315-4f8f-8f79-488ef5f87676",
                  "parentUUID": "3a920251-b820-43a4-b02c-a479c38a7044",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "6122c480-9880-4449-9ce4-3f08f4fca3f2",
                "c07a7ca3-7315-4f8f-8f79-488ef5f87676"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 12,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "ed63e84b-bc08-4f94-895b-280b8cb4302a",
              "title": "as `list` layout",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/profile/tests/components/ProfileInfoCard.unit.spec.jsx",
              "file": "/src/applications/personalization/profile/tests/components/ProfileInfoCard.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should render the card title as an h3 by default, and render row titles as dfn",
                  "fullTitle": "ProfileInfoCard as `list` layout should render the card title as an h3 by default, and render row titles as dfn",
                  "timedOut": false,
                  "duration": 6,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
                  "err": {},
                  "uuid": "c59e2f77-d6a5-455c-8a05-db74f781aa22",
                  "parentUUID": "ed63e84b-bc08-4f94-895b-280b8cb4302a",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "c59e2f77-d6a5-455c-8a05-db74f781aa22"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 6,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "2e1eb476-8a84-4154-aa78-18a3c984937b",
              "title": "as `raw` content instead of array",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/profile/tests/components/ProfileInfoCard.unit.spec.jsx",
              "file": "/src/applications/personalization/profile/tests/components/ProfileInfoCard.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should render the card and show raw content as is",
                  "fullTitle": "ProfileInfoCard as `raw` content instead of array should render the card and show raw content as is",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var defaultHeadingLevel = 3;\nvar tree = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_ProfileInfoCard.ProfileInfoCard, {\n  title: \"Card Title\",\n  fieldName: \"profileField\",\n  data: /*#__PURE__*/_react.default.createElement(Content, null),\n  namedAnchor: \"card-anchor\"\n}));\n// first heading is the card title\n(0, _chai.expect)(tree.getByRole('heading', {\n  level: defaultHeadingLevel\n})).to.have.text('Card Title');\n(0, _chai.expect)(tree.getByText('Raw Content')).to.exist;",
                  "err": {},
                  "uuid": "cd2c88cc-9fac-4350-8d16-0e9a75ffb4b0",
                  "parentUUID": "2e1eb476-8a84-4154-aa78-18a3c984937b",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "cd2c88cc-9fac-4350-8d16-0e9a75ffb4b0"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 3,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "f3d4114e-4c46-44c9-8e1a-cf956b9cee79",
          "title": "<ProfilePrivacyPolicy />",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/profile/tests/components/ProfilePrivacyPolicy.unit.spec.jsx",
          "file": "/src/applications/personalization/profile/tests/components/ProfilePrivacyPolicy.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should render when profileShowPrivacyPolicy feature toggle is true",
              "fullTitle": "<ProfilePrivacyPolicy /> should render when profileShowPrivacyPolicy feature toggle is true",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var view = (0, _reactTestingLibraryHelpers.renderInReduxProvider)(/*#__PURE__*/_react.default.createElement(_ProfilePrivacyPolicy.ProfilePrivacyPolicy, null), {\n  initialState: {\n    featureToggles: _defineProperty({\n      loading: false\n    }, _featureFlagNames.default.profileShowPrivacyPolicy, true)\n  }\n});\n// renders heading\n(0, _chai.expect)(view.queryByText('Privacy policy')).to.exist;\n// renders link\n(0, _chai.expect)(view.container.querySelector('va-link').getAttribute('href') === '/privacy-policy').to.be.true;",
              "err": {},
              "uuid": "62515e16-00d9-44bf-bef8-f60c760d43ba",
              "parentUUID": "f3d4114e-4c46-44c9-8e1a-cf956b9cee79",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should not render when profileShowPrivacyPolicy feature toggle is false",
              "fullTitle": "<ProfilePrivacyPolicy /> should not render when profileShowPrivacyPolicy feature toggle is false",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
              "err": {},
              "uuid": "30089533-2caa-4675-a234-4db98e359118",
              "parentUUID": "f3d4114e-4c46-44c9-8e1a-cf956b9cee79",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "62515e16-00d9-44bf-bef8-f60c760d43ba",
            "30089533-2caa-4675-a234-4db98e359118"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 4,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "a1b7e100-caa4-4233-8226-f76d7bbcd70c",
          "title": "ProfileWrapper",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/profile/tests/components/ProfileWrapper.unit.spec.js",
          "file": "/src/applications/personalization/profile/tests/components/ProfileWrapper.unit.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should render NameTag when the full name of the user was fetched)",
              "fullTitle": "ProfileWrapper should render NameTag when the full name of the user was fetched)",
              "timedOut": false,
              "duration": 8,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var initialState = {\n  vaProfile: {\n    hero: {\n      userFullName: {\n        first: 'Test',\n        last: 'Test'\n      }\n    }\n  }\n};\nvar _render = (0, _unitTestHelpers.renderWithProfileReducers)(uiLOA3, {\n    initialState: initialState\n  }),\n  getByTestId = _render.getByTestId;\nvar NameTag = getByTestId('name-tag');\n(0, _chai.expect)(NameTag.textContent.match(/Test Test/i)).not.to.be.null;",
              "err": {},
              "uuid": "b8cd3ecc-b52c-442f-a153-36aac1dd7b90",
              "parentUUID": "a1b7e100-caa4-4233-8226-f76d7bbcd70c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should not render NameTag when the full name of the user could not be fetched)",
              "fullTitle": "ProfileWrapper should not render NameTag when the full name of the user could not be fetched)",
              "timedOut": false,
              "duration": 4,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var initialState = {\n  vaProfile: {\n    hero: {\n      errors: ['This is an error']\n    }\n  }\n};\nvar _render2 = (0, _unitTestHelpers.renderWithProfileReducers)(uiLOA3, {\n    initialState: initialState\n  }),\n  queryByTestId = _render2.queryByTestId;\nvar NameTag = queryByTestId('name-tag');\n(0, _chai.expect)(NameTag).to.be.null;",
              "err": {},
              "uuid": "d917c56b-1e1e-4db3-9f00-cd683bb365c1",
              "parentUUID": "a1b7e100-caa4-4233-8226-f76d7bbcd70c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should not render NameTag when the user is LOA1)",
              "fullTitle": "ProfileWrapper should not render NameTag when the user is LOA1)",
              "timedOut": false,
              "duration": 3,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var uiLOA1 = /*#__PURE__*/_react.default.createElement(_reactRouterDom.MemoryRouter, {\n  initialEntries: [_constants.PROFILE_PATHS.PERSONAL_INFORMATION]\n}, /*#__PURE__*/_react.default.createElement(_ProfileWrapper.default, {\n  routes: (0, _routes.default)(config)\n}));\nvar initialState = {\n  vaProfile: {\n    hero: {\n      errors: ['This is an error']\n    }\n  }\n};\nvar _render3 = (0, _unitTestHelpers.renderWithProfileReducers)(uiLOA1, {\n    initialState: initialState\n  }),\n  queryByTestId = _render3.queryByTestId;\nvar NameTag = queryByTestId('name-tag');\n(0, _chai.expect)(NameTag).to.not.exist;",
              "err": {},
              "uuid": "056f29bc-4643-470e-a50d-49deb26ec01a",
              "parentUUID": "a1b7e100-caa4-4233-8226-f76d7bbcd70c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "b8cd3ecc-b52c-442f-a153-36aac1dd7b90",
            "d917c56b-1e1e-4db3-9f00-cd683bb365c1",
            "056f29bc-4643-470e-a50d-49deb26ec01a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 15,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "11f466d5-3bbf-4610-848b-0a3b12f05f04",
          "title": "fetching communication preferences",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/profile/tests/ducks/communicationPreferences.unit.spec.js",
          "file": "/src/applications/personalization/profile/tests/ducks/communicationPreferences.unit.spec.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"fetching communication preferences\"",
              "fullTitle": "fetching communication preferences \"before all\" hook in \"fetching communication preferences\"",
              "timedOut": false,
              "duration": 6,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "server = (0, _node.setupServer)(_msw.rest.get(apiURL, function (req, res, ctx) {\n  return res(ctx.status(200), ctx.json(_get200Maximal.default));\n}));\nserver.listen();",
              "err": {},
              "uuid": "11cee63a-7a07-4241-bd3e-d178a4462031",
              "parentUUID": "11f466d5-3bbf-4610-848b-0a3b12f05f04",
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"before each\" hook in \"fetching communication preferences\"",
              "fullTitle": "fetching communication preferences \"before each\" hook in \"fetching communication preferences\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "store = mockStore(createState({}));",
              "err": {},
              "uuid": "770da7aa-ab68-4513-a149-149412fd70ee",
              "parentUUID": "11f466d5-3bbf-4610-848b-0a3b12f05f04",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"fetching communication preferences\"",
              "fullTitle": "fetching communication preferences \"after all\" hook in \"fetching communication preferences\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "server.close();",
              "err": {},
              "uuid": "aaf04f64-8e77-4bd8-80ed-fc44129b5d26",
              "parentUUID": "11f466d5-3bbf-4610-848b-0a3b12f05f04",
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"after each\" hook in \"fetching communication preferences\"",
              "fullTitle": "fetching communication preferences \"after each\" hook in \"fetching communication preferences\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "server.resetHandlers();",
              "err": {},
              "uuid": "3acb9702-09b6-48a2-b815-302849c68df2",
              "parentUUID": "11f466d5-3bbf-4610-848b-0a3b12f05f04",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [],
          "suites": [
            {
              "uuid": "93c72af2-9207-4b44-8dcf-9d5e3c5b5923",
              "title": "when a user's only facility is one that supports Rx tracking",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/profile/tests/ducks/communicationPreferences.unit.spec.js",
              "file": "/src/applications/personalization/profile/tests/ducks/communicationPreferences.unit.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "sets the state properly",
                  "fullTitle": "fetching communication preferences when a user's only facility is one that supports Rx tracking sets the state properly",
                  "timedOut": false,
                  "duration": 4,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var promise = store.dispatch((0, _communicationPreferences.fetchCommunicationPreferenceGroups)({\n  facilities: [{\n    facilityId: '983',\n    isCerner: false\n  }]\n}));\nreturn promise.then(function () {\n  var state = store.getState();\n  (0, _chai.expect)(state.loadingStatus).to.equal(_constants.LOADING_STATES.loaded);\n  (0, _chai.expect)(state.loadingErrors).to.be.null;\n  var communicationGroups = (0, _communicationPreferences.selectGroups)(state);\n  (0, _chai.expect)(communicationGroups.ids.length).to.equal(5);\n  // The first group is the Health Care group\n  (0, _chai.expect)(communicationGroups.ids[0]).to.equal('group3');\n  var rxTrackingItem = (0, _communicationPreferences.selectItemById)(state, 'item4');\n  // The Rx-tracking item exists\n  (0, _chai.expect)(rxTrackingItem).to.exist;\n});",
                  "err": {},
                  "uuid": "49814bf9-a65a-433b-995b-34bfb40e692b",
                  "parentUUID": "93c72af2-9207-4b44-8dcf-9d5e3c5b5923",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "49814bf9-a65a-433b-995b-34bfb40e692b"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 4,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "aa2d856b-c650-4b23-a591-4b61a21c71cf",
              "title": "when user has a facility that supports Rx tracking and another that does not",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/profile/tests/ducks/communicationPreferences.unit.spec.js",
              "file": "/src/applications/personalization/profile/tests/ducks/communicationPreferences.unit.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "sets the state properly",
                  "fullTitle": "fetching communication preferences when user has a facility that supports Rx tracking and another that does not sets the state properly",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var promise = store.dispatch((0, _communicationPreferences.fetchCommunicationPreferenceGroups)({\n  facilities: [{\n    facilityId: '983',\n    isCerner: true\n  }, {\n    facilityId: '111',\n    isCerner: false\n  }]\n}));\nreturn promise.then(function () {\n  var state = store.getState();\n  (0, _chai.expect)(state.loadingStatus).to.equal(_constants.LOADING_STATES.loaded);\n  (0, _chai.expect)(state.loadingErrors).to.be.null;\n  var communicationGroups = (0, _communicationPreferences.selectGroups)(state);\n  (0, _chai.expect)(communicationGroups.ids.length).to.equal(5);\n  // The first group is the Health Care group\n  (0, _chai.expect)(communicationGroups.ids[0]).to.equal('group3');\n  // The Rx-tracking item exists\n  (0, _chai.expect)((0, _communicationPreferences.selectItemById)(state, 'item4')).to.exist;\n});",
                  "err": {},
                  "uuid": "25695d5f-2afa-4575-8c8c-c09c4046f772",
                  "parentUUID": "aa2d856b-c650-4b23-a591-4b61a21c71cf",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "25695d5f-2afa-4575-8c8c-c09c4046f772"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 3,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "75b499f1-6289-4309-9b76-5dc2c249f219",
              "title": "when user does not have a facility that supports Rx tracking",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/profile/tests/ducks/communicationPreferences.unit.spec.js",
              "file": "/src/applications/personalization/profile/tests/ducks/communicationPreferences.unit.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "sets the state properly",
                  "fullTitle": "fetching communication preferences when user does not have a facility that supports Rx tracking sets the state properly",
                  "timedOut": false,
                  "duration": 4,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var promise = store.dispatch((0, _communicationPreferences.fetchCommunicationPreferenceGroups)({\n  facilities: [{\n    facilityId: '111',\n    isCerner: false\n  }]\n}));\nreturn promise.then(function () {\n  var state = store.getState();\n  (0, _chai.expect)(state.loadingStatus).to.equal(_constants.LOADING_STATES.loaded);\n  (0, _chai.expect)(state.loadingErrors).to.be.null;\n  var communicationGroups = (0, _communicationPreferences.selectGroups)(state);\n  (0, _chai.expect)(communicationGroups.ids.length).to.equal(5);\n  // The first group is the Health Care group\n  (0, _chai.expect)(communicationGroups.ids[0]).to.equal('group3');\n  // The Rx-tracking item does not exist\n  (0, _chai.expect)((0, _communicationPreferences.selectItemById)(state, 'item4')).not.to.exist;\n  // The Rx-tracking item channel does not exist\n  (0, _chai.expect)((0, _communicationPreferences.selectChannelById)(state, 'channel4-1')).not.to.exist;\n});",
                  "err": {},
                  "uuid": "b9dfbecb-0f7a-4c67-b1f6-9626f370aaf3",
                  "parentUUID": "75b499f1-6289-4309-9b76-5dc2c249f219",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "b9dfbecb-0f7a-4c67-b1f6-9626f370aaf3"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 4,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "955d9d6b-7fc1-467b-9385-f1b4e4005f66",
              "title": "when user does not have any facilities",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/profile/tests/ducks/communicationPreferences.unit.spec.js",
              "file": "/src/applications/personalization/profile/tests/ducks/communicationPreferences.unit.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "sets the state properly",
                  "fullTitle": "fetching communication preferences when user does not have any facilities sets the state properly",
                  "timedOut": false,
                  "duration": 4,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var promise = store.dispatch((0, _communicationPreferences.fetchCommunicationPreferenceGroups)({\n  facilities: null\n}));\nreturn promise.then(function () {\n  var state = store.getState();\n  (0, _chai.expect)(state.loadingStatus).to.equal(_constants.LOADING_STATES.loaded);\n  (0, _chai.expect)(state.loadingErrors).to.be.null;\n  var communicationGroups = (0, _communicationPreferences.selectGroups)(state);\n  // The Health Care group is not in the state\n  (0, _chai.expect)(communicationGroups.ids.length).to.equal(4);\n  (0, _chai.expect)((0, _communicationPreferences.selectGroupById)(state, 'group3')).to.not.exist;\n  // The first group is the Applications, claims, etc group\n  (0, _chai.expect)(communicationGroups.ids[0]).to.equal('group1');\n  // The Appointment reminder item does not exist\n  (0, _chai.expect)((0, _communicationPreferences.selectItemById)(state, 'item3')).not.to.exist;\n  // The Rx-tracking item does not exist\n  (0, _chai.expect)((0, _communicationPreferences.selectItemById)(state, 'item4')).not.to.exist;\n});",
                  "err": {},
                  "uuid": "2b2093db-5e9b-40a4-84aa-0f6e8396c90b",
                  "parentUUID": "955d9d6b-7fc1-467b-9385-f1b4e4005f66",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "2b2093db-5e9b-40a4-84aa-0f6e8396c90b"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 4,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "f3275ece-b295-44c1-bddc-9c08e537463f",
              "title": "errors",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/profile/tests/ducks/communicationPreferences.unit.spec.js",
              "file": "/src/applications/personalization/profile/tests/ducks/communicationPreferences.unit.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [],
              "suites": [
                {
                  "uuid": "00e6c6b2-d841-4e46-8a81-8413f96f4a19",
                  "title": "401 error",
                  "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/profile/tests/ducks/communicationPreferences.unit.spec.js",
                  "file": "/src/applications/personalization/profile/tests/ducks/communicationPreferences.unit.spec.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "sets the state properly",
                      "fullTitle": "fetching communication preferences errors 401 error sets the state properly",
                      "timedOut": false,
                      "duration": 4,
                      "state": "passed",
                      "speed": "slow",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "server.use(_msw.rest.get(apiURL, function (req, res, ctx) {\n  return res(ctx.status(401), ctx.json(_.default));\n}));\nvar promise = store.dispatch((0, _communicationPreferences.fetchCommunicationPreferenceGroups)());\n// check the state before the API call has resolved...\n(0, _chai.expect)(store.getState().loadingStatus).to.equal(_constants.LOADING_STATES.pending);\n// ...and check the state after the API call has failed\nreturn promise.then(function () {\n  var state = store.getState();\n  (0, _chai.expect)(state.loadingStatus).to.equal(_constants.LOADING_STATES.error);\n  (0, _chai.expect)(state.loadingErrors).to.deep.equal(_.default.errors);\n});",
                      "err": {},
                      "uuid": "77678b5b-cf8d-4cfc-b6a8-e2cd713fc258",
                      "parentUUID": "00e6c6b2-d841-4e46-8a81-8413f96f4a19",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "77678b5b-cf8d-4cfc-b6a8-e2cd713fc258"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 4,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "fd6e441a-3032-4c6d-a78e-725e0273f07b",
                  "title": "500 error",
                  "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/profile/tests/ducks/communicationPreferences.unit.spec.js",
                  "file": "/src/applications/personalization/profile/tests/ducks/communicationPreferences.unit.spec.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "sets the state properly",
                      "fullTitle": "fetching communication preferences errors 500 error sets the state properly",
                      "timedOut": false,
                      "duration": 4,
                      "state": "passed",
                      "speed": "slow",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "server.use(_msw.rest.get(apiURL, function (req, res, ctx) {\n  return res(ctx.status(500), ctx.json(_2.default));\n}));\nvar promise = store.dispatch((0, _communicationPreferences.fetchCommunicationPreferenceGroups)());\n// check the state before the API call has resolved...\n(0, _chai.expect)(store.getState().loadingStatus).to.equal(_constants.LOADING_STATES.pending);\n// ...and check the state after the API call has failed\nreturn promise.then(function () {\n  var state = store.getState();\n  (0, _chai.expect)(state.loadingStatus).to.equal(_constants.LOADING_STATES.error);\n  (0, _chai.expect)(state.loadingErrors).to.deep.equal([_2.default]);\n});",
                      "err": {},
                      "uuid": "cad69932-b56b-424d-b6fb-e1a140910b02",
                      "parentUUID": "fd6e441a-3032-4c6d-a78e-725e0273f07b",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "cad69932-b56b-424d-b6fb-e1a140910b02"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 4,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "c0f843f7-ee6e-43f0-8e47-29db05e999b6",
                  "title": "response is missing `data.attributes`",
                  "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/profile/tests/ducks/communicationPreferences.unit.spec.js",
                  "file": "/src/applications/personalization/profile/tests/ducks/communicationPreferences.unit.spec.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "sets the state properly",
                      "fullTitle": "fetching communication preferences errors response is missing `data.attributes` sets the state properly",
                      "timedOut": false,
                      "duration": 3,
                      "state": "passed",
                      "speed": "slow",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "server.use(_msw.rest.get(apiURL, function (req, res, ctx) {\n  return res(ctx.json({\n    data: {}\n  }));\n}));\nvar promise = store.dispatch((0, _communicationPreferences.fetchCommunicationPreferenceGroups)());\n(0, _chai.expect)(store.getState().loadingStatus).to.equal(_constants.LOADING_STATES.pending);\nreturn promise.then(function () {\n  var state = store.getState();\n  (0, _chai.expect)(state.loadingStatus).to.equal(_constants.LOADING_STATES.error);\n  (0, _chai.expect)(state.loadingErrors.length).to.equal(1);\n});",
                      "err": {},
                      "uuid": "4cca0067-cc47-475f-acfa-febac9caa2ed",
                      "parentUUID": "c0f843f7-ee6e-43f0-8e47-29db05e999b6",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "4cca0067-cc47-475f-acfa-febac9caa2ed"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 3,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "8845242c-cd71-4a9c-ad55-9fdc34e85a6a",
                  "title": "response is missing the `data.attributes.communicationGroups` prop",
                  "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/profile/tests/ducks/communicationPreferences.unit.spec.js",
                  "file": "/src/applications/personalization/profile/tests/ducks/communicationPreferences.unit.spec.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "sets the state properly",
                      "fullTitle": "fetching communication preferences errors response is missing the `data.attributes.communicationGroups` prop sets the state properly",
                      "timedOut": false,
                      "duration": 3,
                      "state": "passed",
                      "speed": "slow",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "server.use(_msw.rest.get(apiURL, function (req, res, ctx) {\n  return res(ctx.json({\n    data: {\n      attributes: {}\n    }\n  }));\n}));\nvar promise = store.dispatch((0, _communicationPreferences.fetchCommunicationPreferenceGroups)());\n// check the state before the API call has resolved...\n(0, _chai.expect)(store.getState().loadingStatus).to.equal(_constants.LOADING_STATES.pending);\n// ...and check the state after the API call has succeeded but the\n// response object is missing the communicationGroups property\nreturn promise.then(function () {\n  var state = store.getState();\n  (0, _chai.expect)(state.loadingStatus).to.equal(_constants.LOADING_STATES.error);\n  (0, _chai.expect)(state.loadingErrors.length).to.equal(1);\n});",
                      "err": {},
                      "uuid": "5627a04d-29d5-44ae-96a0-4993de17692f",
                      "parentUUID": "8845242c-cd71-4a9c-ad55-9fdc34e85a6a",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "5627a04d-29d5-44ae-96a0-4993de17692f"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 3,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                }
              ],
              "passes": [],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "b8c1dfcb-d2e2-42f3-bf35-dea7f8c4737f",
          "title": "saveCommunicationPreferenceChannel",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/profile/tests/ducks/communicationPreferences.unit.spec.js",
          "file": "/src/applications/personalization/profile/tests/ducks/communicationPreferences.unit.spec.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"saveCommunicationPreferenceChannel\"",
              "fullTitle": "saveCommunicationPreferenceChannel \"before all\" hook in \"saveCommunicationPreferenceChannel\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "server = (0, _node.setupServer)(_msw.rest.post(apiURL, function (req, res, ctx) {\n  return res(ctx.json(_post200Success.default));\n}), _msw.rest.patch(\"\".concat(apiURL, \"/*\"), function (req, res, ctx) {\n  return res(ctx.json(_patch200Success.default));\n}));\nserver.listen();",
              "err": {},
              "uuid": "fb9fb2a1-4ae1-4604-8b16-8c63f7c52e09",
              "parentUUID": "b8c1dfcb-d2e2-42f3-bf35-dea7f8c4737f",
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"before each\" hook in \"saveCommunicationPreferenceChannel\"",
              "fullTitle": "saveCommunicationPreferenceChannel \"before each\" hook in \"saveCommunicationPreferenceChannel\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "store = mockStore(createState({\n  loadingStatus: 'loaded',\n  loadingErrors: null,\n  groups: {\n    ids: ['group1'],\n    entities: {\n      group1: {\n        name: 'Health Care',\n        description: 'Healthcare Appointment Reminders',\n        ui: {\n          isEditing: true,\n          updateStatus: 'idle',\n          errors: null\n        },\n        items: ['item1', 'item2', 'item3']\n      }\n    }\n  },\n  items: {\n    ids: ['item1', 'item2', 'item3'],\n    entities: {\n      item1: {\n        name: 'Health Appointment Reminder',\n        channels: ['channel1-1', 'channel1-2']\n      },\n      item2: {\n        name: 'RX Prescription Refill Reminder',\n        channels: ['channel2-1']\n      },\n      item3: {\n        name: 'Scheduled Appointment Confirmation',\n        channels: ['channel3-1']\n      }\n    }\n  },\n  channels: {\n    ids: ['channel1-1', 'channel1-2', 'channel2-1', 'channel3-1'],\n    entities: {\n      'channel1-1': {\n        channelType: 1,\n        parentItem: 'item1',\n        isAllowed: true,\n        permissionId: 1728,\n        ui: {\n          updateStatus: _constants.LOADING_STATES.idle,\n          errors: null\n        }\n      },\n      'channel1-2': {\n        channelType: 2,\n        parentItem: 'item1',\n        isAllowed: null,\n        permissionId: null,\n        ui: {\n          updateStatus: _constants.LOADING_STATES.idle,\n          errors: null\n        }\n      },\n      'channel2-1': {\n        channelType: 1,\n        parentItem: 'item2',\n        isAllowed: true,\n        permissionId: 341,\n        ui: {\n          updateStatus: _constants.LOADING_STATES.idle,\n          errors: null\n        }\n      },\n      'channel3-1': {\n        channelType: 1,\n        parentItem: 'item3',\n        isAllowed: false,\n        permissionId: 342,\n        ui: {\n          updateStatus: _constants.LOADING_STATES.idle,\n          errors: null\n        }\n      }\n    }\n  }\n}));",
              "err": {},
              "uuid": "f5da3545-3891-46fa-95fe-216ed956ee19",
              "parentUUID": "b8c1dfcb-d2e2-42f3-bf35-dea7f8c4737f",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"saveCommunicationPreferenceChannel\"",
              "fullTitle": "saveCommunicationPreferenceChannel \"after all\" hook in \"saveCommunicationPreferenceChannel\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "server.close();",
              "err": {},
              "uuid": "8facb5bd-3f9f-4614-8517-369d02821402",
              "parentUUID": "b8c1dfcb-d2e2-42f3-bf35-dea7f8c4737f",
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"after each\" hook in \"saveCommunicationPreferenceChannel\"",
              "fullTitle": "saveCommunicationPreferenceChannel \"after each\" hook in \"saveCommunicationPreferenceChannel\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "server.resetHandlers();",
              "err": {},
              "uuid": "78d47c53-4a86-4dec-be5d-3277f5fb4551",
              "parentUUID": "b8c1dfcb-d2e2-42f3-bf35-dea7f8c4737f",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [],
          "suites": [
            {
              "uuid": "f036f4e1-b30f-4319-b908-d36622bc58f8",
              "title": "it first fails to save a permission via POST due to a 401 error and then succeeds on the second attempt",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/profile/tests/ducks/communicationPreferences.unit.spec.js",
              "file": "/src/applications/personalization/profile/tests/ducks/communicationPreferences.unit.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "updates the redux state correctly",
                  "fullTitle": "saveCommunicationPreferenceChannel it first fails to save a permission via POST due to a 401 error and then succeeds on the second attempt updates the redux state correctly",
                  "timedOut": false,
                  "duration": 9,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
                  "err": {},
                  "uuid": "31a3ce40-291d-4162-9903-eb135fd32eb8",
                  "parentUUID": "f036f4e1-b30f-4319-b908-d36622bc58f8",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "31a3ce40-291d-4162-9903-eb135fd32eb8"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 9,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "1c848ed8-8041-420b-ba17-79804c24c7d5",
              "title": "it first fails to save a permission via PATCH due to a 500 error and then succeeds on the second attempt",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/profile/tests/ducks/communicationPreferences.unit.spec.js",
              "file": "/src/applications/personalization/profile/tests/ducks/communicationPreferences.unit.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "updates the redux state correctly",
                  "fullTitle": "saveCommunicationPreferenceChannel it first fails to save a permission via PATCH due to a 500 error and then succeeds on the second attempt updates the redux state correctly",
                  "timedOut": false,
                  "duration": 6,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
                  "err": {},
                  "uuid": "825096de-6797-450f-bc8d-d6f3d8ba8429",
                  "parentUUID": "1c848ed8-8041-420b-ba17-79804c24c7d5",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "825096de-6797-450f-bc8d-d6f3d8ba8429"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 6,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "25fc91dc-c5a4-473b-96ff-13243e3d2c5f",
          "title": "getServiceBranchDisplayName",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/profile/tests/helpers.unit.spec.js",
          "file": "/src/applications/personalization/profile/tests/helpers.unit.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "da249d44-6996-4472-afbd-8e0161ca31f3",
              "title": "when passed a valid USA military branches",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/profile/tests/helpers.unit.spec.js",
              "file": "/src/applications/personalization/profile/tests/helpers.unit.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should prefix the branch name with `United States`",
                  "fullTitle": "getServiceBranchDisplayName when passed a valid USA military branches should prefix the branch name with `United States`",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)((0, _helpers.getServiceBranchDisplayName)(branch)).to.equal(\"United States \".concat(branch));",
                  "err": {},
                  "uuid": "8fd76a12-c82f-414e-8675-2da5e1305085",
                  "parentUUID": "da249d44-6996-4472-afbd-8e0161ca31f3",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should prefix the branch name with `United States`",
                  "fullTitle": "getServiceBranchDisplayName when passed a valid USA military branches should prefix the branch name with `United States`",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)((0, _helpers.getServiceBranchDisplayName)(branch)).to.equal(\"United States \".concat(branch));",
                  "err": {},
                  "uuid": "fd49fc16-bcd2-4fa8-a7b4-aef2225f13b2",
                  "parentUUID": "da249d44-6996-4472-afbd-8e0161ca31f3",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should prefix the branch name with `United States`",
                  "fullTitle": "getServiceBranchDisplayName when passed a valid USA military branches should prefix the branch name with `United States`",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)((0, _helpers.getServiceBranchDisplayName)(branch)).to.equal(\"United States \".concat(branch));",
                  "err": {},
                  "uuid": "b4400706-c260-4b2f-a331-eae25a50c0b3",
                  "parentUUID": "da249d44-6996-4472-afbd-8e0161ca31f3",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should prefix the branch name with `United States`",
                  "fullTitle": "getServiceBranchDisplayName when passed a valid USA military branches should prefix the branch name with `United States`",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)((0, _helpers.getServiceBranchDisplayName)(branch)).to.equal(\"United States \".concat(branch));",
                  "err": {},
                  "uuid": "b06fbf2c-f3cd-4136-bf9d-49f03c3231d5",
                  "parentUUID": "da249d44-6996-4472-afbd-8e0161ca31f3",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should prefix the branch name with `United States`",
                  "fullTitle": "getServiceBranchDisplayName when passed a valid USA military branches should prefix the branch name with `United States`",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)((0, _helpers.getServiceBranchDisplayName)(branch)).to.equal(\"United States \".concat(branch));",
                  "err": {},
                  "uuid": "f8763d7a-7d52-4604-b571-73f8cdadf41f",
                  "parentUUID": "da249d44-6996-4472-afbd-8e0161ca31f3",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should prefix the branch name with `United States`",
                  "fullTitle": "getServiceBranchDisplayName when passed a valid USA military branches should prefix the branch name with `United States`",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)((0, _helpers.getServiceBranchDisplayName)(branch)).to.equal(\"United States \".concat(branch));",
                  "err": {},
                  "uuid": "2facc34c-d179-4288-ab75-89d0395cfcb9",
                  "parentUUID": "da249d44-6996-4472-afbd-8e0161ca31f3",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "8fd76a12-c82f-414e-8675-2da5e1305085",
                "fd49fc16-bcd2-4fa8-a7b4-aef2225f13b2",
                "b4400706-c260-4b2f-a331-eae25a50c0b3",
                "b06fbf2c-f3cd-4136-bf9d-49f03c3231d5",
                "f8763d7a-7d52-4604-b571-73f8cdadf41f",
                "2facc34c-d179-4288-ab75-89d0395cfcb9"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "5efb2818-7206-4200-9662-bfc778d8776f",
              "title": "when not passed one of the five USA military branches",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/profile/tests/helpers.unit.spec.js",
              "file": "/src/applications/personalization/profile/tests/helpers.unit.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should simply return what it was passed",
                  "fullTitle": "getServiceBranchDisplayName when not passed one of the five USA military branches should simply return what it was passed",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)((0, _helpers.getServiceBranchDisplayName)('Other')).to.equal('Other');",
                  "err": {},
                  "uuid": "7d753d43-cc42-46b4-acde-3dd72eb3052d",
                  "parentUUID": "5efb2818-7206-4200-9662-bfc778d8776f",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "7d753d43-cc42-46b4-acde-3dd72eb3052d"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "fda091ee-e061-4ef0-b99f-9ef926e50b2b",
          "title": "transformServiceHistoryEntryIntoTableRow",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/profile/tests/helpers.unit.spec.js",
          "file": "/src/applications/personalization/profile/tests/helpers.unit.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should convert military service history into the format the ProfileInfoCard expects",
              "fullTitle": "transformServiceHistoryEntryIntoTableRow should convert military service history into the format the ProfileInfoCard expects",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "transformedData = (0, _helpers.transformServiceHistoryEntryIntoTableRow)(serviceHistory);\n(0, _chai.expect)(transformedData.title).not.to.be.undefined;\n(0, _chai.expect)(transformedData.value).not.to.be.undefined;",
              "err": {},
              "uuid": "2c42143c-b959-4027-9a7f-c36c2489e6e6",
              "parentUUID": "fda091ee-e061-4ef0-b99f-9ef926e50b2b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [
            {
              "uuid": "3a9252e3-755c-4526-802d-35ff56017649",
              "title": "title prop",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/profile/tests/helpers.unit.spec.js",
              "file": "/src/applications/personalization/profile/tests/helpers.unit.spec.js",
              "beforeHooks": [
                {
                  "title": "\"before each\" hook in \"title prop\"",
                  "fullTitle": "transformServiceHistoryEntryIntoTableRow title prop \"before each\" hook in \"title prop\"",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "transformedData = (0, _helpers.transformServiceHistoryEntryIntoTableRow)(serviceHistory);\ntitle = (0, _enzyme.shallow)(/*#__PURE__*/_react.default.createElement(FragmentWrapper, null, transformedData.title));",
                  "err": {},
                  "uuid": "20a4f652-4e59-4718-8682-d55b2d4a816a",
                  "parentUUID": "3a9252e3-755c-4526-802d-35ff56017649",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [
                {
                  "title": "\"after each\" hook in \"title prop\"",
                  "fullTitle": "transformServiceHistoryEntryIntoTableRow title prop \"after each\" hook in \"title prop\"",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "title.unmount();",
                  "err": {},
                  "uuid": "28e69480-ae04-4ecf-90de-859e88607aee",
                  "parentUUID": "3a9252e3-755c-4526-802d-35ff56017649",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "tests": [
                {
                  "title": "should have a hidden `dfn` element",
                  "fullTitle": "transformServiceHistoryEntryIntoTableRow title prop should have a hidden `dfn` element",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var titleDfn = title.find('dfn');\n(0, _chai.expect)(titleDfn.text()).to.equal('Service branch: ');\n(0, _chai.expect)(titleDfn.props().className).to.equal('sr-only');",
                  "err": {},
                  "uuid": "1291667a-e16c-49a3-b9a5-314eba80b49e",
                  "parentUUID": "3a9252e3-755c-4526-802d-35ff56017649",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should have the correct text",
                  "fullTitle": "transformServiceHistoryEntryIntoTableRow title prop should have the correct text",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)(title.text().includes(\"United States \".concat(serviceHistory.branchOfService))).to.be.true;",
                  "err": {},
                  "uuid": "ccdb51c2-43f3-42dd-a488-bee559528a94",
                  "parentUUID": "3a9252e3-755c-4526-802d-35ff56017649",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "1291667a-e16c-49a3-b9a5-314eba80b49e",
                "ccdb51c2-43f3-42dd-a488-bee559528a94"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "cc142469-472a-49ac-8e08-36471a257c6b",
              "title": "value prop",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/profile/tests/helpers.unit.spec.js",
              "file": "/src/applications/personalization/profile/tests/helpers.unit.spec.js",
              "beforeHooks": [
                {
                  "title": "\"before each\" hook in \"value prop\"",
                  "fullTitle": "transformServiceHistoryEntryIntoTableRow value prop \"before each\" hook in \"value prop\"",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "transformedData = (0, _helpers.transformServiceHistoryEntryIntoTableRow)(serviceHistory);\nvalue = (0, _enzyme.shallow)(/*#__PURE__*/_react.default.createElement(FragmentWrapper, null, transformedData.value));",
                  "err": {},
                  "uuid": "ff2f1bba-b2e6-4525-b179-8dea5e7f17f4",
                  "parentUUID": "cc142469-472a-49ac-8e08-36471a257c6b",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [
                {
                  "title": "\"after each\" hook in \"value prop\"",
                  "fullTitle": "transformServiceHistoryEntryIntoTableRow value prop \"after each\" hook in \"value prop\"",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "value.unmount();",
                  "err": {},
                  "uuid": "7ba964e8-3060-4430-a06c-3705b18e8ed8",
                  "parentUUID": "cc142469-472a-49ac-8e08-36471a257c6b",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "tests": [
                {
                  "title": "should have a hidden `dfn` element",
                  "fullTitle": "transformServiceHistoryEntryIntoTableRow value prop should have a hidden `dfn` element",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var titleDfn = value.find('dfn');\n(0, _chai.expect)(titleDfn.text()).to.equal('Dates of service: ');\n(0, _chai.expect)(titleDfn.props().className).to.equal('sr-only');",
                  "err": {},
                  "uuid": "794f7a05-d7ae-4bfe-bafd-70c5c053d80a",
                  "parentUUID": "cc142469-472a-49ac-8e08-36471a257c6b",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should have the correct text",
                  "fullTitle": "transformServiceHistoryEntryIntoTableRow value prop should have the correct text",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)(value.text()).to.contain('January 31, 2000 – December 25, 2010');",
                  "err": {},
                  "uuid": "9a45a606-5aa5-4850-9806-c2130d7ac94c",
                  "parentUUID": "cc142469-472a-49ac-8e08-36471a257c6b",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "794f7a05-d7ae-4bfe-bafd-70c5c053d80a",
                "9a45a606-5aa5-4850-9806-c2130d7ac94c"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            }
          ],
          "passes": [
            "2c42143c-b959-4027-9a7f-c36c2489e6e6"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "1a535701-2648-4a8e-9f87-d55296bf6ab6",
          "title": "useDirectDeposit hook",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/profile/tests/hooks/useDirectDeposit/useDirectDeposit.unit.spec.jsx",
          "file": "/src/applications/personalization/profile/tests/hooks/useDirectDeposit/useDirectDeposit.unit.spec.jsx",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"useDirectDeposit hook\"",
              "fullTitle": "useDirectDeposit hook \"before all\" hook in \"useDirectDeposit hook\"",
              "timedOut": false,
              "duration": 4,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "server = (0, _node.setupServer)(_msw.rest.put(endpointUrl, function (req, res, ctx) {\n  return res(ctx.status(200), ctx.json(_directDeposits.default.updates.success));\n}));\nserver.listen();",
              "err": {},
              "uuid": "2cc82bce-1caf-4be0-96dd-1368f8d7d634",
              "parentUUID": "1a535701-2648-4a8e-9f87-d55296bf6ab6",
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"before each\" hook in \"useDirectDeposit hook\"",
              "fullTitle": "useDirectDeposit hook \"before each\" hook in \"useDirectDeposit hook\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "store = mockStore(baseState);",
              "err": {},
              "uuid": "22d48825-c8e6-4f8f-b8d8-de6d106be363",
              "parentUUID": "1a535701-2648-4a8e-9f87-d55296bf6ab6",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"useDirectDeposit hook\"",
              "fullTitle": "useDirectDeposit hook \"after all\" hook in \"useDirectDeposit hook\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "return server.close();",
              "err": {},
              "uuid": "30ecd002-d414-4961-9a29-d3b85f27462b",
              "parentUUID": "1a535701-2648-4a8e-9f87-d55296bf6ab6",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "returns direct deposit information for account and ui state",
              "fullTitle": "useDirectDeposit hook returns direct deposit information for account and ui state",
              "timedOut": false,
              "duration": 12,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _renderHook = (0, _reactHooks.renderHook)(function () {\n    return (0, _hooks.useDirectDeposit)();\n  }, {\n    wrapper: function wrapper(_ref) {\n      var children = _ref.children;\n      return /*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n        store: store\n      }, children);\n    }\n  }),\n  result = _renderHook.result;\n// direct deposit paymentAccount is passed through\n(0, _chai.expect)(result.current.paymentAccount.name).to.equal('BASE TEST - DIRECT DEPOSIT');\n(0, _chai.expect)(result.current.paymentAccount.accountType).to.equal('CHECKING');\n(0, _chai.expect)(result.current.paymentAccount.accountNumber).to.equal('*******5487');\n(0, _chai.expect)(result.current.paymentAccount.routingNumber).to.equal('*****1533');\n// main controlInformation is passed through\n(0, _chai.expect)(result.current.controlInformation.canUpdateDirectDeposit).to.be.true;\n(0, _chai.expect)(result.current.controlInformation.isCorpAvailable).to.be.true;\n(0, _chai.expect)(result.current.controlInformation.isEduClaimAvailable).to.be.true;\n// isBlocked and useOauth selectors are returned correctly\n(0, _chai.expect)(result.current.isBlocked).to.be.false;\n(0, _chai.expect)(result.current.useOAuth).to.be.false;\n// isIdentityVerified is returned correctly\n(0, _chai.expect)(result.current.isIdentityVerified).to.be.true;\n// showUpdateSuccess and formIsDirty are returned correctly\n(0, _chai.expect)(result.current.showUpdateSuccess).to.be.false;",
              "err": {},
              "uuid": "8c1d0e86-0700-4337-b3cd-063a0392ce35",
              "parentUUID": "1a535701-2648-4a8e-9f87-d55296bf6ab6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "returns isIdentityVerified as false when not all conditions are met",
              "fullTitle": "useDirectDeposit hook returns isIdentityVerified as false when not all conditions are met",
              "timedOut": false,
              "duration": 3,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "store = mockStore(_objectSpread(_objectSpread({}, baseState), {}, {\n  user: _objectSpread(_objectSpread({}, baseState.user), {}, {\n    profile: _objectSpread(_objectSpread({}, baseState.user.profile), {}, {\n      loa: {\n        current: 1\n      }\n    })\n  })\n}));\nvar _renderHook2 = (0, _reactHooks.renderHook)(function () {\n    return (0, _hooks.useDirectDeposit)();\n  }, {\n    wrapper: function wrapper(_ref2) {\n      var children = _ref2.children;\n      return /*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n        store: store\n      }, children);\n    }\n  }),\n  result = _renderHook2.result;\n(0, _chai.expect)(result.current.isIdentityVerified).to.be.false;",
              "err": {},
              "uuid": "be9bcbb4-f0fc-405a-987f-bbbe74f70317",
              "parentUUID": "1a535701-2648-4a8e-9f87-d55296bf6ab6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "returns isBlocked as false when controlInformation is not provided",
              "fullTitle": "useDirectDeposit hook returns isBlocked as false when controlInformation is not provided",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "store = mockStore(_objectSpread(_objectSpread({}, baseState), {}, {\n  directDeposit: _objectSpread(_objectSpread({}, baseState.directDeposit), {}, {\n    controlInformation: null\n  })\n}));\nvar _renderHook3 = (0, _reactHooks.renderHook)(function () {\n    return (0, _hooks.useDirectDeposit)();\n  }, {\n    wrapper: function wrapper(_ref3) {\n      var children = _ref3.children;\n      return /*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n        store: store\n      }, children);\n    }\n  }),\n  result = _renderHook3.result;\n(0, _chai.expect)(result.current.isBlocked).to.be.false;",
              "err": {},
              "uuid": "b630c168-e8c4-4ae4-8120-c91131cc6be8",
              "parentUUID": "1a535701-2648-4a8e-9f87-d55296bf6ab6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should handle exitUpdateView correctly",
              "fullTitle": "useDirectDeposit hook should handle exitUpdateView correctly",
              "timedOut": false,
              "duration": 4,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _renderHook4 = (0, _reactHooks.renderHook)(function () {\n    return (0, _hooks.useDirectDeposit)();\n  }, {\n    wrapper: function wrapper(_ref4) {\n      var children = _ref4.children;\n      return /*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n        store: store\n      }, children);\n    }\n  }),\n  result = _renderHook4.result;\n(0, _reactHooks.act)(function () {\n  result.current.setFormData({\n    accountType: 'Checking'\n  });\n});\n(0, _chai.expect)(result.current.formData).to.deep.equal({\n  accountType: 'Checking'\n});\n(0, _reactHooks.act)(function () {\n  result.current.exitUpdateView();\n});\n(0, _chai.expect)(result.current.formData).to.deep.equal({});\n(0, _chai.expect)(store.getActions()).to.deep.equal([(0, _directDeposit.toggleDirectDepositEdit)(false)]);",
              "err": {},
              "uuid": "a6607463-987c-496c-9299-3621d839d112",
              "parentUUID": "1a535701-2648-4a8e-9f87-d55296bf6ab6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should handle onCancel correctly when there are unsaved form edits",
              "fullTitle": "useDirectDeposit hook should handle onCancel correctly when there are unsaved form edits",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _renderHook5 = (0, _reactHooks.renderHook)(function () {\n    return (0, _hooks.useDirectDeposit)();\n  }, {\n    wrapper: function wrapper(_ref5) {\n      var children = _ref5.children;\n      return /*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n        store: store\n      }, children);\n    }\n  }),\n  result = _renderHook5.result;\n(0, _reactHooks.act)(function () {\n  result.current.setFormData({\n    accountType: 'Checking'\n  });\n});\n(0, _reactHooks.act)(function () {\n  result.current.onCancel();\n});\n(0, _chai.expect)(result.current.showCancelModal).to.be.true;",
              "err": {},
              "uuid": "49be7518-3be6-4206-8337-01ef88013d3e",
              "parentUUID": "1a535701-2648-4a8e-9f87-d55296bf6ab6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should handle onCancel correctly when there are no unsaved form edits",
              "fullTitle": "useDirectDeposit hook should handle onCancel correctly when there are no unsaved form edits",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _renderHook6 = (0, _reactHooks.renderHook)(function () {\n    return (0, _hooks.useDirectDeposit)();\n  }, {\n    wrapper: function wrapper(_ref6) {\n      var children = _ref6.children;\n      return /*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n        store: store\n      }, children);\n    }\n  }),\n  result = _renderHook6.result;\n(0, _reactHooks.act)(function () {\n  result.current.onCancel();\n});\n(0, _chai.expect)(result.current.showCancelModal).to.be.false;\n(0, _chai.expect)(store.getActions()).to.deep.equal([(0, _directDeposit.toggleDirectDepositEdit)(false)]);",
              "err": {},
              "uuid": "05568a32-64a0-4316-ab68-18da47c9fc3a",
              "parentUUID": "1a535701-2648-4a8e-9f87-d55296bf6ab6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should handle onFormSubmit correctly",
              "fullTitle": "useDirectDeposit hook should handle onFormSubmit correctly",
              "timedOut": false,
              "duration": 25,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
              "err": {},
              "uuid": "ab212d25-c9d6-41c2-8fad-2f9fedbb2479",
              "parentUUID": "1a535701-2648-4a8e-9f87-d55296bf6ab6",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "8c1d0e86-0700-4337-b3cd-063a0392ce35",
            "be9bcbb4-f0fc-405a-987f-bbbe74f70317",
            "b630c168-e8c4-4ae4-8120-c91131cc6be8",
            "a6607463-987c-496c-9299-3621d839d112",
            "49be7518-3be6-4206-8337-01ef88013d3e",
            "05568a32-64a0-4316-ab68-18da47c9fc3a",
            "ab212d25-c9d6-41c2-8fad-2f9fedbb2479"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 50,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "2ed747e9-57d6-4dc9-b7de-7b967dd9ff21",
          "title": "useNotificationSettingsUtils hook -> missingChannels",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/profile/tests/hooks/useNotificationSettingsUtils/missingChannels.unit.spec.jsx",
          "file": "/src/applications/personalization/profile/tests/hooks/useNotificationSettingsUtils/missingChannels.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "returns empty array when not missing any communication channels in contact info",
              "fullTitle": "useNotificationSettingsUtils hook -> missingChannels returns empty array when not missing any communication channels in contact info",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var store = mockStore({\n  communicationPreferences: _mockedCommunicationPreferences.communicationPreferences,\n  featureToggles: _defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty({\n    loading: false\n  }, _featureFlagNames.default.profileShowPaymentsNotificationSetting, false), _featureFlagNames.default.profileShowMhvNotificationSettingsEmailAppointmentReminders, false), _featureFlagNames.default.profileShowMhvNotificationSettingsNewSecureMessaging, false), _featureFlagNames.default.profileShowMhvNotificationSettingsEmailRxShipment, false), _featureFlagNames.default.profileShowMhvNotificationSettingsMedicalImages, false), _featureFlagNames.default.profileShowQuickSubmitNotificationSetting, false),\n  user: {\n    profile: {\n      vapContactInfo: {\n        email: {\n          emailAddress: 'test@test.com'\n        },\n        mobilePhone: {\n          areaCode: '555',\n          phoneNumber: '5551234'\n        }\n      }\n    }\n  }\n});\nvar _render = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: store\n  }, /*#__PURE__*/_react.default.createElement(TestingComponent, null))),\n  getByTestId = _render.getByTestId;\nvar hookResults = JSON.parse(getByTestId('hookResults').textContent);\n(0, _chai.expect)(hookResults.length).to.equal(0);",
              "err": {},
              "uuid": "beca1516-904a-447f-91b1-0cf269109aa9",
              "parentUUID": "2ed747e9-57d6-4dc9-b7de-7b967dd9ff21",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "returns array with correct channel id when missing mobile phone",
              "fullTitle": "useNotificationSettingsUtils hook -> missingChannels returns array with correct channel id when missing mobile phone",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var store = mockStore({\n  communicationPreferences: _mockedCommunicationPreferences.communicationPreferences,\n  featureToggles: _defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty({\n    loading: false\n  }, _featureFlagNames.default.profileShowPaymentsNotificationSetting, false), _featureFlagNames.default.profileShowMhvNotificationSettingsEmailAppointmentReminders, false), _featureFlagNames.default.profileShowMhvNotificationSettingsNewSecureMessaging, false), _featureFlagNames.default.profileShowMhvNotificationSettingsEmailRxShipment, false), _featureFlagNames.default.profileShowMhvNotificationSettingsMedicalImages, false), _featureFlagNames.default.profileShowQuickSubmitNotificationSetting, false),\n  user: {\n    profile: {\n      vapContactInfo: {\n        email: {\n          emailAddress: 'test@test.com'\n        },\n        mobilePhone: null\n      }\n    }\n  }\n});\nvar _render2 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: store\n  }, /*#__PURE__*/_react.default.createElement(TestingComponent, null))),\n  getByTestId = _render2.getByTestId;\nvar hookResults = JSON.parse(getByTestId('hookResults').textContent);\n(0, _chai.expect)(hookResults.length).to.equal(1);\n(0, _chai.expect)(hookResults).to.deep.equal([{\n  name: 'text',\n  id: parseInt(_constants.NOTIFICATION_CHANNEL_IDS.TEXT, 10)\n}]);",
              "err": {},
              "uuid": "509ff8df-8d0d-4852-80e3-cdfdd565d415",
              "parentUUID": "2ed747e9-57d6-4dc9-b7de-7b967dd9ff21",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "returns array with correct channel id when missing email",
              "fullTitle": "useNotificationSettingsUtils hook -> missingChannels returns array with correct channel id when missing email",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var store = mockStore({\n  communicationPreferences: _mockedCommunicationPreferences.communicationPreferences,\n  featureToggles: _defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty({\n    loading: false\n  }, _featureFlagNames.default.profileShowPaymentsNotificationSetting, false), _featureFlagNames.default.profileShowMhvNotificationSettingsEmailAppointmentReminders, false), _featureFlagNames.default.profileShowMhvNotificationSettingsNewSecureMessaging, false), _featureFlagNames.default.profileShowMhvNotificationSettingsEmailRxShipment, false), _featureFlagNames.default.profileShowMhvNotificationSettingsMedicalImages, false), _featureFlagNames.default.profileShowQuickSubmitNotificationSetting, false),\n  user: {\n    profile: {\n      vapContactInfo: {\n        email: null,\n        mobilePhone: {\n          areaCode: '555',\n          phoneNumber: '5551234'\n        }\n      }\n    }\n  }\n});\nvar _render3 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: store\n  }, /*#__PURE__*/_react.default.createElement(TestingComponent, null))),\n  getByTestId = _render3.getByTestId;\nvar hookResults = JSON.parse(getByTestId('hookResults').textContent);\n(0, _chai.expect)(hookResults.length).to.equal(1);\n(0, _chai.expect)(hookResults).to.deep.equal([{\n  name: 'email',\n  id: parseInt(_constants.NOTIFICATION_CHANNEL_IDS.EMAIL, 10)\n}]);",
              "err": {},
              "uuid": "3f6345c3-1622-431b-8b17-9fdfdd28e8bd",
              "parentUUID": "2ed747e9-57d6-4dc9-b7de-7b967dd9ff21",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "returns array with both channels when missing email and mobile phone",
              "fullTitle": "useNotificationSettingsUtils hook -> missingChannels returns array with both channels when missing email and mobile phone",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var store = mockStore({\n  communicationPreferences: _mockedCommunicationPreferences.communicationPreferences,\n  featureToggles: _defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty({\n    loading: false\n  }, _featureFlagNames.default.profileShowPaymentsNotificationSetting, false), _featureFlagNames.default.profileShowMhvNotificationSettingsEmailAppointmentReminders, false), _featureFlagNames.default.profileShowMhvNotificationSettingsNewSecureMessaging, false), _featureFlagNames.default.profileShowMhvNotificationSettingsEmailRxShipment, false), _featureFlagNames.default.profileShowMhvNotificationSettingsMedicalImages, false), _featureFlagNames.default.profileShowQuickSubmitNotificationSetting, false),\n  user: {\n    profile: {\n      vapContactInfo: {\n        email: null,\n        mobilePhone: null\n      }\n    }\n  }\n});\nvar _render4 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: store\n  }, /*#__PURE__*/_react.default.createElement(TestingComponent, null))),\n  getByTestId = _render4.getByTestId;\nvar hookResults = JSON.parse(getByTestId('hookResults').textContent);\n(0, _chai.expect)(hookResults.length).to.equal(2);\n(0, _chai.expect)(hookResults).to.deep.equal([{\n  name: 'email',\n  id: parseInt(_constants.NOTIFICATION_CHANNEL_IDS.EMAIL, 10)\n}, {\n  name: 'text',\n  id: parseInt(_constants.NOTIFICATION_CHANNEL_IDS.TEXT, 10)\n}]);",
              "err": {},
              "uuid": "04effb3c-e74a-40b6-a92b-658b871137b1",
              "parentUUID": "2ed747e9-57d6-4dc9-b7de-7b967dd9ff21",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "beca1516-904a-447f-91b1-0cf269109aa9",
            "509ff8df-8d0d-4852-80e3-cdfdd565d415",
            "3f6345c3-1622-431b-8b17-9fdfdd28e8bd",
            "04effb3c-e74a-40b6-a92b-658b871137b1"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 8,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "f8acb4d3-8c57-4d25-be5b-b49ae2c92f8c",
          "title": "useNotificationSettingsUtils hook -> useAvailableGroups",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/profile/tests/hooks/useNotificationSettingsUtils/useAvailableGroups.unit.spec.jsx",
          "file": "/src/applications/personalization/profile/tests/hooks/useNotificationSettingsUtils/useAvailableGroups.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "returns all groups when flags are all true and email and mobile phone are present",
              "fullTitle": "useNotificationSettingsUtils hook -> useAvailableGroups returns all groups when flags are all true and email and mobile phone are present",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var store = mockStore({\n  communicationPreferences: _mockedCommunicationPreferences.communicationPreferences,\n  featureToggles: _defineProperty(_defineProperty(_defineProperty({\n    loading: false\n  }, _featureFlagNames.default.profileShowMhvNotificationSettingsEmailAppointmentReminders, true), _featureFlagNames.default.profileShowPaymentsNotificationSetting, true), _featureFlagNames.default.profileShowQuickSubmitNotificationSetting, true),\n  user: {\n    profile: {\n      vapContactInfo: {\n        email: {\n          emailAddress: 'test@test.com'\n        },\n        mobilePhone: {\n          areaCode: '555',\n          phoneNumber: '5551234'\n        }\n      }\n    }\n  }\n});\nvar _render = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: store\n  }, /*#__PURE__*/_react.default.createElement(TestingComponent, null))),\n  getByTestId = _render.getByTestId;\nvar hookResults = JSON.parse(getByTestId('hookResults').textContent);\n(0, _chai.expect)(hookResults.length).to.equal(3);\nvar expectedGroupNames = ['Your health care', 'Applications, claims, decision reviews, and appeals', 'Payments'\n//  ticket: 89524: hiding the below group\n// 'General VA Updates and Information',\n// 'QuickSubmit',\n];\nexpectedGroupNames.forEach(function (groupName) {\n  (0, _chai.expect)(hookResults.some(function (_ref) {\n    var name = _ref.name;\n    return name === groupName;\n  })).to.be.true;\n});",
              "err": {},
              "uuid": "6428fff8-30bd-4954-8636-e0e24695f100",
              "parentUUID": "f8acb4d3-8c57-4d25-be5b-b49ae2c92f8c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "returns filtered groups when flags are all false and email and mobile phone is present",
              "fullTitle": "useNotificationSettingsUtils hook -> useAvailableGroups returns filtered groups when flags are all false and email and mobile phone is present",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var store = mockStore({\n  communicationPreferences: _mockedCommunicationPreferences.communicationPreferences,\n  featureToggles: _defineProperty(_defineProperty(_defineProperty({\n    loading: false\n  }, _featureFlagNames.default.profileShowMhvNotificationSettingsEmailAppointmentReminders, false), _featureFlagNames.default.profileShowPaymentsNotificationSetting, false), _featureFlagNames.default.profileShowQuickSubmitNotificationSetting, false),\n  user: {\n    profile: {\n      vapContactInfo: {\n        email: {\n          emailAddress: 'test@test.com'\n        },\n        mobilePhone: {\n          areaCode: '555',\n          phoneNumber: '5551234'\n        }\n      }\n    }\n  }\n});\nvar _render2 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: store\n  }, /*#__PURE__*/_react.default.createElement(TestingComponent, null))),\n  getByTestId = _render2.getByTestId;\nvar hookResults = JSON.parse(getByTestId('hookResults').textContent);\n(0, _chai.expect)(hookResults.length).to.equal(2);\n(0, _chai.expect)(hookResults.some(function (_ref2) {\n  var name = _ref2.name;\n  return name === 'QuickSubmit';\n})).to.be.false;\n(0, _chai.expect)(hookResults.some(function (_ref3) {\n  var name = _ref3.name;\n  return name === 'Payments';\n})).to.be.false;\n(0, _chai.expect)(hookResults.some(function (_ref4) {\n  var name = _ref4.name;\n  return name === 'General VA Updates and Information';\n})).to.be.false;",
              "err": {},
              "uuid": "f046be48-ba33-4f40-9cdd-224e68bd2fb1",
              "parentUUID": "f8acb4d3-8c57-4d25-be5b-b49ae2c92f8c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "6428fff8-30bd-4954-8636-e0e24695f100",
            "f046be48-ba33-4f40-9cdd-224e68bd2fb1"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 4,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "64bd9f6d-1b9b-4095-8d55-b853c7558efb",
          "title": "useNotificationSettingsUtils hook -> useUnavailableItems",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/profile/tests/hooks/useNotificationSettingsUtils/useUnavailableItems.unit.spec.jsx",
          "file": "/src/applications/personalization/profile/tests/hooks/useNotificationSettingsUtils/useUnavailableItems.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "returns items with email notifications when email is missing from contact info",
              "fullTitle": "useNotificationSettingsUtils hook -> useUnavailableItems returns items with email notifications when email is missing from contact info",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var store = mockStore({\n  communicationPreferences: _mockedCommunicationPreferences.communicationPreferences,\n  featureToggles: _defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty({\n    loading: false\n  }, _featureFlagNames.default.profileShowPaymentsNotificationSetting, true), _featureFlagNames.default.profileShowNewBenefitOverpaymentDebtNotificationSetting, true), _featureFlagNames.default.profileShowNewHealthCareCopayBillNotificationSetting, true), _featureFlagNames.default.profileShowMhvNotificationSettingsEmailAppointmentReminders, true), _featureFlagNames.default.profileShowMhvNotificationSettingsNewSecureMessaging, true), _featureFlagNames.default.profileShowMhvNotificationSettingsEmailRxShipment, true), _featureFlagNames.default.profileShowMhvNotificationSettingsMedicalImages, true), _featureFlagNames.default.profileShowQuickSubmitNotificationSetting, true),\n  user: {\n    profile: {\n      vapContactInfo: {\n        email: null,\n        mobilePhone: {\n          areaCode: '555',\n          phoneNumber: '5551234'\n        }\n      }\n    }\n  }\n});\nvar _render = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: store\n  }, /*#__PURE__*/_react.default.createElement(TestingComponent, null))),\n  getByTestId = _render.getByTestId;\nvar hookResults = JSON.parse(getByTestId('hookResults').textContent);\nvar includedNames = hookResults.map(function (_ref) {\n  var name = _ref.name;\n  return emailNotificationNames.includes(name);\n});\n(0, _chai.expect)(includedNames.every(function (result) {\n  return result === true;\n})).to.be.true;\n(0, _chai.expect)(hookResults.length).to.equal(6);",
              "err": {},
              "uuid": "bf5cda8c-a264-4be3-8e07-c9e08038a3b2",
              "parentUUID": "64bd9f6d-1b9b-4095-8d55-b853c7558efb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "returns items with text notifications when mobile phone is missing from contact info",
              "fullTitle": "useNotificationSettingsUtils hook -> useUnavailableItems returns items with text notifications when mobile phone is missing from contact info",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var store = mockStore({\n  communicationPreferences: _mockedCommunicationPreferences.communicationPreferences,\n  featureToggles: _defineProperty(_defineProperty(_defineProperty({\n    loading: false\n  }, _featureFlagNames.default.profileShowPaymentsNotificationSetting, true), _featureFlagNames.default.profileShowMhvNotificationSettingsEmailAppointmentReminders, true), _featureFlagNames.default.profileShowQuickSubmitNotificationSetting, true),\n  user: {\n    profile: {\n      vapContactInfo: {\n        email: {\n          emailAddress: 'test@test.com'\n        },\n        mobilePhone: null\n      }\n    }\n  }\n});\nvar _render2 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: store\n  }, /*#__PURE__*/_react.default.createElement(TestingComponent, null))),\n  getByTestId = _render2.getByTestId;\nvar hookResults = JSON.parse(getByTestId('hookResults').textContent);\nvar includedNames = hookResults.map(function (_ref2) {\n  var name = _ref2.name;\n  return textNotificationNames.includes(name);\n});\n(0, _chai.expect)(includedNames.every(function (result) {\n  return result === true;\n})).to.be.true;\n(0, _chai.expect)(hookResults.length).to.equal(5);",
              "err": {},
              "uuid": "b478ee6e-e2ad-4975-80c1-8fc209034306",
              "parentUUID": "64bd9f6d-1b9b-4095-8d55-b853c7558efb",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "bf5cda8c-a264-4be3-8e07-c9e08038a3b2",
            "b478ee6e-e2ad-4975-80c1-8fc209034306"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "24dbab8f-5b74-410d-a97b-2ff9cb1b045a",
          "title": "directDeposit reducer",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/profile/tests/reducers/directDeposit.unit.spec.js",
          "file": "/src/applications/personalization/profile/tests/reducers/directDeposit.unit.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should return the initial state",
              "fullTitle": "directDeposit reducer should return the initial state",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, _chai.expect)((0, _directDeposit2.default)(undefined, {})).deep.equal(initialState);",
              "err": {},
              "uuid": "b8549754-4610-4699-98d3-79d4555e7b1c",
              "parentUUID": "24dbab8f-5b74-410d-a97b-2ff9cb1b045a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should handle DIRECT_DEPOSIT_FETCH_SUCCEEDED",
              "fullTitle": "directDeposit reducer should handle DIRECT_DEPOSIT_FETCH_SUCCEEDED",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var response = {\n  controlInformation: {\n    canUpdateDirectDeposit: true,\n    isCorpAvailable: true,\n    isEduClaimAvailable: true,\n    isCorpRecFound: true,\n    hasNoBdnPayments: true,\n    hasIdentity: true,\n    hasIndex: true,\n    isCompetent: true,\n    hasMailingAddress: true,\n    hasNoFiduciaryAssigned: true,\n    isNotDeceased: true,\n    hasPaymentAddress: true\n  },\n  paymentAccount: {\n    name: 'SUCCESS TEST - DIRECT DEPOSIT',\n    accountType: 'CHECKING',\n    accountNumber: '*******5487',\n    routingNumber: '*****1533'\n  }\n};\nvar action = {\n  type: _directDeposit.DIRECT_DEPOSIT_FETCH_SUCCEEDED,\n  response: response\n};\nvar expectedState = {\n  controlInformation: response.controlInformation,\n  paymentAccount: response.paymentAccount,\n  loadError: null,\n  saveError: null,\n  ui: {\n    isEditing: false,\n    isSaving: false\n  }\n};\n(0, _chai.expect)((0, _directDeposit2.default)(initialState, action)).deep.equal(expectedState);",
              "err": {},
              "uuid": "9656a80b-0b9e-4dea-84a1-9bea68132908",
              "parentUUID": "24dbab8f-5b74-410d-a97b-2ff9cb1b045a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should handle DIRECT_DEPOSIT_FETCH_FAILED",
              "fullTitle": "directDeposit reducer should handle DIRECT_DEPOSIT_FETCH_FAILED",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var action = {\n  type: _directDeposit.DIRECT_DEPOSIT_FETCH_FAILED,\n  response: {\n    error: 'error'\n  }\n};\nvar expectedState = _objectSpread(_objectSpread({}, initialState), {}, {\n  loadError: action.response.error\n});\n(0, _chai.expect)((0, _directDeposit2.default)(initialState, action)).deep.equal(expectedState);",
              "err": {},
              "uuid": "4949943a-900d-442f-a30a-273920d5e551",
              "parentUUID": "24dbab8f-5b74-410d-a97b-2ff9cb1b045a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should handle DIRECT_DEPOSIT_FETCH_FAILED and fall back to true",
              "fullTitle": "directDeposit reducer should handle DIRECT_DEPOSIT_FETCH_FAILED and fall back to true",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var action = {\n  type: _directDeposit.DIRECT_DEPOSIT_FETCH_FAILED,\n  response: {}\n};\nvar expectedState = _objectSpread(_objectSpread({}, initialState), {}, {\n  loadError: true\n});\n(0, _chai.expect)((0, _directDeposit2.default)(initialState, action)).deep.equal(expectedState);",
              "err": {},
              "uuid": "1775ac1a-5d6d-491e-a222-981707b263d0",
              "parentUUID": "24dbab8f-5b74-410d-a97b-2ff9cb1b045a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should handle DIRECT_DEPOSIT_SAVE_STARTED",
              "fullTitle": "directDeposit reducer should handle DIRECT_DEPOSIT_SAVE_STARTED",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var action = {\n  type: _directDeposit.DIRECT_DEPOSIT_SAVE_STARTED\n};\nvar expectedState = _objectSpread(_objectSpread({}, initialState), {}, {\n  ui: _objectSpread(_objectSpread({}, initialState.ui), {}, {\n    isSaving: true\n  })\n});\n(0, _chai.expect)((0, _directDeposit2.default)(initialState, action)).deep.equal(expectedState);",
              "err": {},
              "uuid": "5d074382-2eb5-4ec5-b0de-a18cf2ab5c58",
              "parentUUID": "24dbab8f-5b74-410d-a97b-2ff9cb1b045a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should handle DIRECT_DEPOSIT_SAVE_SUCCEEDED",
              "fullTitle": "directDeposit reducer should handle DIRECT_DEPOSIT_SAVE_SUCCEEDED",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var response = {\n  controlInformation: {\n    canUpdateDirectDeposit: true,\n    isCorpAvailable: true,\n    isEduClaimAvailable: true,\n    isCorpRecFound: true,\n    hasNoBdnPayments: true,\n    hasIdentity: true,\n    hasIndex: true,\n    isCompetent: true,\n    hasMailingAddress: true,\n    hasNoFiduciaryAssigned: true,\n    isNotDeceased: true,\n    hasPaymentAddress: true\n  },\n  paymentAccount: {\n    name: 'SUCCESS TEST - DIRECT DEPOSIT',\n    accountType: 'CHECKING',\n    accountNumber: '*******5487',\n    routingNumber: '*****1533'\n  }\n};\nvar action = {\n  type: _directDeposit.DIRECT_DEPOSIT_SAVE_SUCCEEDED,\n  response: response\n};\nvar expectedState = {\n  controlInformation: response.controlInformation,\n  paymentAccount: response.paymentAccount,\n  loadError: null,\n  saveError: null,\n  ui: {\n    isEditing: false,\n    isSaving: false\n  }\n};\n(0, _chai.expect)((0, _directDeposit2.default)(initialState, action)).deep.equal(expectedState);",
              "err": {},
              "uuid": "f47d51b3-56eb-4a21-bd92-8646e12667e2",
              "parentUUID": "24dbab8f-5b74-410d-a97b-2ff9cb1b045a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should handle DIRECT_DEPOSIT_SAVE_FAILED",
              "fullTitle": "directDeposit reducer should handle DIRECT_DEPOSIT_SAVE_FAILED",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var action = {\n  type: _directDeposit.DIRECT_DEPOSIT_SAVE_FAILED,\n  response: {\n    error: 'error'\n  }\n};\nvar expectedState = _objectSpread(_objectSpread({}, initialState), {}, {\n  saveError: action.response.error,\n  ui: _objectSpread(_objectSpread({}, initialState.ui), {}, {\n    isSaving: false\n  })\n});\n(0, _chai.expect)((0, _directDeposit2.default)(initialState, action)).deep.equal(expectedState);",
              "err": {},
              "uuid": "20e46004-442d-4054-a463-16a62be97a40",
              "parentUUID": "24dbab8f-5b74-410d-a97b-2ff9cb1b045a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should handle DIRECT_DEPOSIT_EDIT_TOGGLED",
              "fullTitle": "directDeposit reducer should handle DIRECT_DEPOSIT_EDIT_TOGGLED",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var action = {\n  type: _directDeposit.DIRECT_DEPOSIT_EDIT_TOGGLED,\n  open: true\n};\nvar expectedState = _objectSpread(_objectSpread({}, initialState), {}, {\n  ui: _objectSpread(_objectSpread({}, initialState.ui), {}, {\n    isEditing: true\n  })\n});\n(0, _chai.expect)((0, _directDeposit2.default)(initialState, action)).deep.equal(expectedState);",
              "err": {},
              "uuid": "847ddc3a-b457-4361-972b-6af53e8554b7",
              "parentUUID": "24dbab8f-5b74-410d-a97b-2ff9cb1b045a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "b8549754-4610-4699-98d3-79d4555e7b1c",
            "9656a80b-0b9e-4dea-84a1-9bea68132908",
            "4949943a-900d-442f-a30a-273920d5e551",
            "1775ac1a-5d6d-491e-a222-981707b263d0",
            "5d074382-2eb5-4ec5-b0de-a18cf2ab5c58",
            "f47d51b3-56eb-4a21-bd92-8646e12667e2",
            "20e46004-442d-4054-a463-16a62be97a40",
            "847ddc3a-b457-4361-972b-6af53e8554b7"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "3f15df9f-4d98-46dd-9d15-d3b8cdb04a30",
          "title": "index reducer",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/profile/tests/reducers/index.unit.spec.js",
          "file": "/src/applications/personalization/profile/tests/reducers/index.unit.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should fetch hero info",
              "fullTitle": "index reducer should fetch hero info",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var state = vaProfile(undefined, {\n  type: 'FETCH_HERO_SUCCESS',\n  hero: 'heroContent'\n});\n(0, _chai.expect)(state.hero).to.eql('heroContent');",
              "err": {},
              "uuid": "394f6f81-13b3-4c29-896a-6ad162022d44",
              "parentUUID": "3f15df9f-4d98-46dd-9d15-d3b8cdb04a30",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should populate hero with errors when errors are present",
              "fullTitle": "index reducer should populate hero with errors when errors are present",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var state = vaProfile(undefined, {\n  type: 'FETCH_HERO_FAILED',\n  hero: {\n    errors: ['This is an error']\n  }\n});\n(0, _chai.expect)(state.hero).to.eql({\n  errors: ['This is an error']\n});",
              "err": {},
              "uuid": "e299f233-e7dc-418d-9383-bc5ebabe2557",
              "parentUUID": "3f15df9f-4d98-46dd-9d15-d3b8cdb04a30",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should fetch personalInformation",
              "fullTitle": "index reducer should fetch personalInformation",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var state = vaProfile(undefined, {\n  type: 'FETCH_PERSONAL_INFORMATION_SUCCESS',\n  personalInformation: 'personalInformation'\n});\n(0, _chai.expect)(state.personalInformation).to.eql('personalInformation');",
              "err": {},
              "uuid": "90437f7e-18d5-4099-9872-df609b5fe86c",
              "parentUUID": "3f15df9f-4d98-46dd-9d15-d3b8cdb04a30",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should populate personalInformation with errors when errors are present",
              "fullTitle": "index reducer should populate personalInformation with errors when errors are present",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var state = vaProfile(undefined, {\n  type: 'FETCH_PERSONAL_INFORMATION_FAILED',\n  personalInformation: {\n    errors: ['error']\n  }\n});\n(0, _chai.expect)(state.personalInformation.errors).to.eql(['error']);",
              "err": {},
              "uuid": "d9495c9b-9282-45fc-a4c1-52bb91c6ba0d",
              "parentUUID": "3f15df9f-4d98-46dd-9d15-d3b8cdb04a30",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should fetch militaryInformation",
              "fullTitle": "index reducer should fetch militaryInformation",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var state = vaProfile(undefined, {\n  type: 'FETCH_MILITARY_INFORMATION_SUCCESS',\n  militaryInformation: 'military info'\n});\n(0, _chai.expect)(state.militaryInformation).to.eql('military info');",
              "err": {},
              "uuid": "5c1652c2-3ac5-419a-a020-c9acc4e26815",
              "parentUUID": "3f15df9f-4d98-46dd-9d15-d3b8cdb04a30",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should populate militaryInformation with errors when errors are present",
              "fullTitle": "index reducer should populate militaryInformation with errors when errors are present",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var state = vaProfile(undefined, {\n  type: 'FETCH_MILITARY_INFORMATION_FAILED',\n  militaryInformation: {\n    errors: ['error']\n  }\n});\n(0, _chai.expect)(state.militaryInformation.errors).to.eql(['error']);",
              "err": {},
              "uuid": "5f12e0ce-ef0d-43ad-9447-299d00dc8e46",
              "parentUUID": "3f15df9f-4d98-46dd-9d15-d3b8cdb04a30",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "394f6f81-13b3-4c29-896a-6ad162022d44",
            "e299f233-e7dc-418d-9383-bc5ebabe2557",
            "90437f7e-18d5-4099-9872-df609b5fe86c",
            "d9495c9b-9282-45fc-a4c1-52bb91c6ba0d",
            "5c1652c2-3ac5-419a-a020-c9acc4e26815",
            "5f12e0ce-ef0d-43ad-9447-299d00dc8e46"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "ac273930-1209-42bc-a495-940de597c6c3",
          "title": "vaProfile reducer",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/profile/tests/reducers/vaProfile.unit.spec.js",
          "file": "/src/applications/personalization/profile/tests/reducers/vaProfile.unit.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should return the initial state",
              "fullTitle": "vaProfile reducer should return the initial state",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, _chai.expect)((0, _vaProfile.default)(undefined, {})).to.deep.equal(initialState);",
              "err": {},
              "uuid": "ec0a64d9-5f3d-42c8-9519-c8d10c754583",
              "parentUUID": "ac273930-1209-42bc-a495-940de597c6c3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should handle FETCH_HERO_SUCCESS",
              "fullTitle": "vaProfile reducer should handle FETCH_HERO_SUCCESS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var hero = {\n  name: 'John Doe'\n};\nvar action = {\n  type: _actions.FETCH_HERO_SUCCESS,\n  hero: hero\n};\n(0, _chai.expect)((0, _vaProfile.default)(initialState, action)).to.deep.equal(_objectSpread(_objectSpread({}, initialState), {}, {\n  hero: hero\n}));",
              "err": {},
              "uuid": "74852d80-a486-480b-84d0-fde9604f357b",
              "parentUUID": "ac273930-1209-42bc-a495-940de597c6c3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should handle FETCH_HERO_FAILED",
              "fullTitle": "vaProfile reducer should handle FETCH_HERO_FAILED",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var hero = {\n  error: 'Failed to fetch hero'\n};\nvar action = {\n  type: _actions.FETCH_HERO_FAILED,\n  hero: hero\n};\n(0, _chai.expect)((0, _vaProfile.default)(initialState, action)).to.deep.equal(_objectSpread(_objectSpread({}, initialState), {}, {\n  hero: hero\n}));",
              "err": {},
              "uuid": "4bd98394-5a33-48dc-92fe-b74c6a5140a9",
              "parentUUID": "ac273930-1209-42bc-a495-940de597c6c3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should handle FETCH_PERSONAL_INFORMATION_SUCCESS",
              "fullTitle": "vaProfile reducer should handle FETCH_PERSONAL_INFORMATION_SUCCESS",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var personalInformation = {\n  name: 'John Doe'\n};\nvar action = {\n  type: _personalInformation2.FETCH_PERSONAL_INFORMATION_SUCCESS,\n  personalInformation: personalInformation\n};\n(0, _chai.expect)((0, _vaProfile.default)(initialState, action)).to.deep.equal(_objectSpread(_objectSpread({}, initialState), {}, {\n  personalInformation: personalInformation\n}));",
              "err": {},
              "uuid": "76f013b7-f980-4e82-bba6-2cc3490a65c1",
              "parentUUID": "ac273930-1209-42bc-a495-940de597c6c3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should handle FETCH_PERSONAL_INFORMATION_FAILED",
              "fullTitle": "vaProfile reducer should handle FETCH_PERSONAL_INFORMATION_FAILED",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var personalInformation = {\n  error: 'Failed to fetch personal information'\n};\nvar action = {\n  type: _personalInformation2.FETCH_PERSONAL_INFORMATION_FAILED,\n  personalInformation: personalInformation\n};\n(0, _chai.expect)((0, _vaProfile.default)(initialState, action)).to.deep.equal(_objectSpread(_objectSpread({}, initialState), {}, {\n  personalInformation: personalInformation\n}));",
              "err": {},
              "uuid": "56baa8a2-726d-4bc3-b388-3a247db5d2d4",
              "parentUUID": "ac273930-1209-42bc-a495-940de597c6c3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should handle UPDATE_PERSONAL_INFORMATION_FIELD for free text field",
              "fullTitle": "vaProfile reducer should handle UPDATE_PERSONAL_INFORMATION_FIELD for free text field",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var action = {\n  type: _personalInformation2.UPDATE_PERSONAL_INFORMATION_FIELD,\n  fieldName: _constants.PERSONAL_INFO_FIELD_NAMES.SEXUAL_ORIENTATION,\n  value: _defineProperty({}, _constants.PERSONAL_INFO_FIELD_NAMES.SEXUAL_ORIENTATION, 'test text')\n};\nvar expectedState = _objectSpread(_objectSpread({}, initialState), {}, {\n  personalInformation: _defineProperty({}, _constants.PERSONAL_INFO_FIELD_NAMES.SEXUAL_ORIENTATION, 'test text')\n});\n(0, _chai.expect)((0, _vaProfile.default)(initialState, action)).to.deep.equal(expectedState);",
              "err": {},
              "uuid": "4741844a-fc8c-4968-9377-2ff8238d8625",
              "parentUUID": "ac273930-1209-42bc-a495-940de597c6c3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should handle UPDATE_PERSONAL_INFORMATION_FIELD for PREFERRED_NAME",
              "fullTitle": "vaProfile reducer should handle UPDATE_PERSONAL_INFORMATION_FIELD for PREFERRED_NAME",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var action = {\n  type: _personalInformation2.UPDATE_PERSONAL_INFORMATION_FIELD,\n  fieldName: _constants.PERSONAL_INFO_FIELD_NAMES.PREFERRED_NAME,\n  value: _defineProperty({}, _constants.PERSONAL_INFO_FIELD_NAMES.PREFERRED_NAME, 'john')\n};\nvar expectedState = _objectSpread(_objectSpread({}, initialState), {}, {\n  personalInformation: {\n    preferredName: 'John'\n  }\n});\n(0, _chai.expect)((0, _vaProfile.default)(initialState, action)).to.deep.equal(expectedState);",
              "err": {},
              "uuid": "f2985734-2b3b-4df8-9b58-822001165ec4",
              "parentUUID": "ac273930-1209-42bc-a495-940de597c6c3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should handle UPDATE_PERSONAL_INFORMATION_FIELD for GENDER_IDENTITY",
              "fullTitle": "vaProfile reducer should handle UPDATE_PERSONAL_INFORMATION_FIELD for GENDER_IDENTITY",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var action = {\n  type: _personalInformation2.UPDATE_PERSONAL_INFORMATION_FIELD,\n  fieldName: _constants.PERSONAL_INFO_FIELD_NAMES.GENDER_IDENTITY,\n  value: _defineProperty({}, _constants.PERSONAL_INFO_FIELD_NAMES.GENDER_IDENTITY, 'M')\n};\nvar expectedState = _objectSpread(_objectSpread({}, initialState), {}, {\n  personalInformation: {\n    genderIdentity: {\n      code: 'M'\n    }\n  }\n});\n(0, _chai.expect)((0, _vaProfile.default)(initialState, action)).to.deep.equal(expectedState);",
              "err": {},
              "uuid": "bcd7fa99-6074-4da3-9a56-27a1c553ca67",
              "parentUUID": "ac273930-1209-42bc-a495-940de597c6c3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should handle unknown action type",
              "fullTitle": "vaProfile reducer should handle unknown action type",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var action = {\n  type: 'UNKNOWN_ACTION'\n};\n(0, _chai.expect)((0, _vaProfile.default)(initialState, action)).to.deep.equal(initialState);",
              "err": {},
              "uuid": "26e87f98-8ead-4fe1-bf88-19662ae4994a",
              "parentUUID": "ac273930-1209-42bc-a495-940de597c6c3",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "ec0a64d9-5f3d-42c8-9519-c8d10c754583",
            "74852d80-a486-480b-84d0-fde9604f357b",
            "4bd98394-5a33-48dc-92fe-b74c6a5140a9",
            "76f013b7-f980-4e82-bba6-2cc3490a65c1",
            "56baa8a2-726d-4bc3-b388-3a247db5d2d4",
            "4741844a-fc8c-4968-9377-2ff8238d8625",
            "f2985734-2b3b-4df8-9b58-822001165ec4",
            "bcd7fa99-6074-4da3-9a56-27a1c553ca67",
            "26e87f98-8ead-4fe1-bf88-19662ae4994a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "653a82e1-db58-42c3-89c8-84c58215e3a1",
          "title": "getRoutes",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/profile/tests/routes.unit.spec.js",
          "file": "/src/applications/personalization/profile/tests/routes.unit.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "a88dd8da-47a8-4f4c-b797-5ce1c57cc0cf",
              "title": "when called should always include direct deposit path",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/profile/tests/routes.unit.spec.js",
              "file": "/src/applications/personalization/profile/tests/routes.unit.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return the direct deposit path`",
                  "fullTitle": "getRoutes when called should always include direct deposit path should return the direct deposit path`",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var allRoutes = (0, _routes.default)();\nvar hasDirectDepositRoute = allRoutes.some(function (route) {\n  return route.name === _constants.PROFILE_PATH_NAMES.DIRECT_DEPOSIT;\n});\n(0, _chai.expect)(hasDirectDepositRoute).to.be.true;",
                  "err": {},
                  "uuid": "3b5a39d7-db0e-474c-9bcf-1f89f7192986",
                  "parentUUID": "a88dd8da-47a8-4f4c-b797-5ce1c57cc0cf",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "3b5a39d7-db0e-474c-9bcf-1f89f7192986"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "8c950086-20c1-4d2d-a74b-004130e5ad43",
          "title": "profile selectors",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/profile/tests/selectors.unit.spec.js",
          "file": "/src/applications/personalization/profile/tests/selectors.unit.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "52f20014-dcfb-4d08-91fb-c428107750bb",
              "title": "cnpDirectDepositIsSetUp selector",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/profile/tests/selectors.unit.spec.js",
              "file": "/src/applications/personalization/profile/tests/selectors.unit.spec.js",
              "beforeHooks": [
                {
                  "title": "\"before each\" hook in \"cnpDirectDepositIsSetUp selector\"",
                  "fullTitle": "profile selectors cnpDirectDepositIsSetUp selector \"before each\" hook in \"cnpDirectDepositIsSetUp selector\"",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "state = {\n  vaProfile: {\n    cnpPaymentInformation: {\n      paymentAccount: {\n        accountType: '',\n        financialInstitutionName: null,\n        accountNumber: '123123123',\n        financialInstitutionRoutingNumber: ''\n      }\n    }\n  }\n};",
                  "err": {},
                  "uuid": "9db99c80-ce20-4df2-b5b0-36e8afcbc461",
                  "parentUUID": "52f20014-dcfb-4d08-91fb-c428107750bb",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [],
              "tests": [
                {
                  "title": "returns `true` if there is an account number set in state",
                  "fullTitle": "profile selectors cnpDirectDepositIsSetUp selector returns `true` if there is an account number set in state",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)(selectors.cnpDirectDepositIsSetUp(state)).to.be.true;",
                  "err": {},
                  "uuid": "790a977f-d333-4ac8-bbb8-143fe3eaa1ae",
                  "parentUUID": "52f20014-dcfb-4d08-91fb-c428107750bb",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "returns `false` when vaProfile does not exist on state",
                  "fullTitle": "profile selectors cnpDirectDepositIsSetUp selector returns `false` when vaProfile does not exist on state",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "delete state.vaProfile;\n(0, _chai.expect)(selectors.cnpDirectDepositIsSetUp(state)).to.be.false;",
                  "err": {},
                  "uuid": "bff639f4-c6be-4a3f-ac20-30664bb4843b",
                  "parentUUID": "52f20014-dcfb-4d08-91fb-c428107750bb",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "returns `false` when vaProfile.cnpPaymentInformation is not set on state",
                  "fullTitle": "profile selectors cnpDirectDepositIsSetUp selector returns `false` when vaProfile.cnpPaymentInformation is not set on state",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "delete state.vaProfile.cnpPaymentInformation;\n(0, _chai.expect)(selectors.cnpDirectDepositIsSetUp(state)).to.be.false;",
                  "err": {},
                  "uuid": "51ff9ddb-0f4d-4bb0-9503-91df7f933147",
                  "parentUUID": "52f20014-dcfb-4d08-91fb-c428107750bb",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "returns `false` when the account number is not set",
                  "fullTitle": "profile selectors cnpDirectDepositIsSetUp selector returns `false` when the account number is not set",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "state.vaProfile.cnpPaymentInformation.paymentAccount.accountNumber = '';\n(0, _chai.expect)(selectors.cnpDirectDepositIsSetUp(state)).to.be.false;",
                  "err": {},
                  "uuid": "b3bb3626-a5ab-4d1a-aaf2-3de3721cd068",
                  "parentUUID": "52f20014-dcfb-4d08-91fb-c428107750bb",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "returns `false` when the payment info endpoint failed to get data",
                  "fullTitle": "profile selectors cnpDirectDepositIsSetUp selector returns `false` when the payment info endpoint failed to get data",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "state = {\n  vaProfile: {\n    cnpPaymentInformation: {\n      error: getDirectDepositInfoError\n    }\n  }\n};\n(0, _chai.expect)(selectors.cnpDirectDepositIsSetUp(state)).to.be.false;",
                  "err": {},
                  "uuid": "66d429be-d6c4-43f2-ba6c-44d9c2c6f381",
                  "parentUUID": "52f20014-dcfb-4d08-91fb-c428107750bb",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "790a977f-d333-4ac8-bbb8-143fe3eaa1ae",
                "bff639f4-c6be-4a3f-ac20-30664bb4843b",
                "51ff9ddb-0f4d-4bb0-9503-91df7f933147",
                "b3bb3626-a5ab-4d1a-aaf2-3de3721cd068",
                "66d429be-d6c4-43f2-ba6c-44d9c2c6f381"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "30ac3d89-477b-4cfb-ac20-f0c8d2b43569",
              "title": "cnpDirectDepositLoadError",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/profile/tests/selectors.unit.spec.js",
              "file": "/src/applications/personalization/profile/tests/selectors.unit.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "returns the error if there is one",
                  "fullTitle": "profile selectors cnpDirectDepositLoadError returns the error if there is one",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var state = {\n  vaProfile: {\n    cnpPaymentInformation: {\n      error: getDirectDepositInfoError\n    }\n  }\n};\n(0, _chai.expect)(selectors.cnpDirectDepositLoadError(state)).to.deep.equal(getDirectDepositInfoError);",
                  "err": {},
                  "uuid": "1c60f9e4-dd5f-406a-96c8-18c3713ce784",
                  "parentUUID": "30ac3d89-477b-4cfb-ac20-f0c8d2b43569",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "returns undefined if there are no errors",
                  "fullTitle": "profile selectors cnpDirectDepositLoadError returns undefined if there are no errors",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var state = {\n  vaProfile: {\n    cnpPaymentInformation: {\n      paymentAccount: {\n        accountType: '',\n        financialInstitutionName: null,\n        accountNumber: '123123123',\n        financialInstitutionRoutingNumber: ''\n      }\n    }\n  }\n};\n(0, _chai.expect)(selectors.cnpDirectDepositLoadError(state)).to.be.undefined;",
                  "err": {},
                  "uuid": "3cec245e-a3e8-4311-bd74-eb364e0d774a",
                  "parentUUID": "30ac3d89-477b-4cfb-ac20-f0c8d2b43569",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "returns undefined if payment info does not exist on the state",
                  "fullTitle": "profile selectors cnpDirectDepositLoadError returns undefined if payment info does not exist on the state",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var state = {};\n(0, _chai.expect)(selectors.cnpDirectDepositLoadError(state)).to.be.undefined;\nstate = {\n  vaProfile: {}\n};\n(0, _chai.expect)(selectors.cnpDirectDepositLoadError(state)).to.be.undefined;",
                  "err": {},
                  "uuid": "1bca94f4-8048-4d1a-9d5d-a540b9efe5a3",
                  "parentUUID": "30ac3d89-477b-4cfb-ac20-f0c8d2b43569",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "1c60f9e4-dd5f-406a-96c8-18c3713ce784",
                "3cec245e-a3e8-4311-bd74-eb364e0d774a",
                "1bca94f4-8048-4d1a-9d5d-a540b9efe5a3"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "c39a605a-9177-4c2e-bc4c-c13fa94c035b",
              "title": "cnpDirectDepositIsEligible selector",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/profile/tests/selectors.unit.spec.js",
              "file": "/src/applications/personalization/profile/tests/selectors.unit.spec.js",
              "beforeHooks": [
                {
                  "title": "\"before each\" hook in \"cnpDirectDepositIsEligible selector\"",
                  "fullTitle": "profile selectors cnpDirectDepositIsEligible selector \"before each\" hook in \"cnpDirectDepositIsEligible selector\"",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "state = {\n  vaProfile: {\n    cnpPaymentInformation: {\n      controlInformation: {\n        canUpdateDirectDeposit: true\n      }\n    }\n  }\n};",
                  "err": {},
                  "uuid": "91d87ead-c180-4f56-b10a-2e48320215bb",
                  "parentUUID": "c39a605a-9177-4c2e-bc4c-c13fa94c035b",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [],
              "tests": [
                {
                  "title": "returns `true` if control info canUpdateDirectDeposit is true",
                  "fullTitle": "profile selectors cnpDirectDepositIsEligible selector returns `true` if control info canUpdateDirectDeposit is true",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)(selectors.cnpDirectDepositIsEligible(state)).to.be.true;",
                  "err": {},
                  "uuid": "21464695-c4b6-496a-a3f5-dd5690795588",
                  "parentUUID": "c39a605a-9177-4c2e-bc4c-c13fa94c035b",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "returns `false` if control info canUpdateDirectDeposit is false",
                  "fullTitle": "profile selectors cnpDirectDepositIsEligible selector returns `false` if control info canUpdateDirectDeposit is false",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "state.vaProfile.cnpPaymentInformation.controlInformation.canUpdateDirectDeposit = false;\n(0, _chai.expect)(selectors.cnpDirectDepositIsEligible(state)).to.be.false;",
                  "err": {},
                  "uuid": "956296ae-21d3-4346-ab0a-2db9e535f259",
                  "parentUUID": "c39a605a-9177-4c2e-bc4c-c13fa94c035b",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "returns `false` when the payment info endpoint failed to get data",
                  "fullTitle": "profile selectors cnpDirectDepositIsEligible selector returns `false` when the payment info endpoint failed to get data",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "state = {\n  vaProfile: {\n    cnpPaymentInformation: {\n      error: getDirectDepositInfoError\n    }\n  }\n};\n(0, _chai.expect)(selectors.cnpDirectDepositIsEligible(state)).to.be.false;",
                  "err": {},
                  "uuid": "31e0346c-19ba-4b0d-ba66-90097fdd331b",
                  "parentUUID": "c39a605a-9177-4c2e-bc4c-c13fa94c035b",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "21464695-c4b6-496a-a3f5-dd5690795588",
                "956296ae-21d3-4346-ab0a-2db9e535f259",
                "31e0346c-19ba-4b0d-ba66-90097fdd331b"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "5297c898-2d73-4c89-816d-178095bbb066",
              "title": "selectIsBlocked",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/profile/tests/selectors.unit.spec.js",
              "file": "/src/applications/personalization/profile/tests/selectors.unit.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "returns `false` if the isCompetentIndicator, noFiduciaryAssignedIndicator, and notDeceasedIndicator flags are all `true`",
                  "fullTitle": "profile selectors selectIsBlocked returns `false` if the isCompetentIndicator, noFiduciaryAssignedIndicator, and notDeceasedIndicator flags are all `true`",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var state = {\n  vaProfile: {\n    cnpPaymentInformation: {\n      controlInformation: {\n        isCompetentIndicator: true,\n        noFiduciaryAssignedIndicator: true,\n        notDeceasedIndicator: true\n      }\n    }\n  },\n  directDeposit: {\n    controlInformation: {}\n  }\n};\n(0, _chai.expect)(selectors.selectIsBlocked(state)).to.be.false;",
                  "err": {},
                  "uuid": "70f46fa8-ca9b-466b-a2e0-903e41c05942",
                  "parentUUID": "5297c898-2d73-4c89-816d-178095bbb066",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "returns `false` if the control information is not set",
                  "fullTitle": "profile selectors selectIsBlocked returns `false` if the control information is not set",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var state = {\n  vaProfile: {\n    cnpPaymentInformation: {}\n  },\n  directDeposit: {\n    controlInformation: {}\n  }\n};\n(0, _chai.expect)(selectors.selectIsBlocked(state)).to.be.false;",
                  "err": {},
                  "uuid": "e17e1d66-12f9-42fb-bb66-edbfa1f524ae",
                  "parentUUID": "5297c898-2d73-4c89-816d-178095bbb066",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "returns `true` if the `isCompetent` is not true",
                  "fullTitle": "profile selectors selectIsBlocked returns `true` if the `isCompetent` is not true",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var state = {\n  vaProfile: {\n    cnpPaymentInformation: {\n      controlInformation: {\n        isCompetent: false\n      }\n    }\n  },\n  directDeposit: {\n    controlInformation: {\n      isCompetent: false\n    }\n  }\n};\n(0, _chai.expect)(selectors.selectIsBlocked(state)).to.be.true;",
                  "err": {},
                  "uuid": "ba1f4fce-053b-45d3-9bf8-d504fae897b2",
                  "parentUUID": "5297c898-2d73-4c89-816d-178095bbb066",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "returns `true` if the `hasNoFiduciaryAssigned` is not true",
                  "fullTitle": "profile selectors selectIsBlocked returns `true` if the `hasNoFiduciaryAssigned` is not true",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var state = {\n  vaProfile: {\n    cnpPaymentInformation: {\n      controlInformation: {\n        hasNoFiduciaryAssigned: false\n      }\n    }\n  },\n  directDeposit: {\n    controlInformation: {\n      hasNoFiduciaryAssigned: false\n    }\n  }\n};\n(0, _chai.expect)(selectors.selectIsBlocked(state)).to.be.true;",
                  "err": {},
                  "uuid": "20386ddc-0d18-43c7-8cf0-89b7827b2ca7",
                  "parentUUID": "5297c898-2d73-4c89-816d-178095bbb066",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "returns `true` if the `isNotDeceased` is not true",
                  "fullTitle": "profile selectors selectIsBlocked returns `true` if the `isNotDeceased` is not true",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var state = {\n  vaProfile: {\n    cnpPaymentInformation: {\n      controlInformation: {\n        isNotDeceased: false\n      }\n    }\n  },\n  directDeposit: {\n    controlInformation: {\n      isNotDeceased: false\n    }\n  }\n};\n(0, _chai.expect)(selectors.selectIsBlocked(state)).to.be.true;",
                  "err": {},
                  "uuid": "0a49504e-a244-44c9-8a90-72ab55c9a132",
                  "parentUUID": "5297c898-2d73-4c89-816d-178095bbb066",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "70f46fa8-ca9b-466b-a2e0-903e41c05942",
                "e17e1d66-12f9-42fb-bb66-edbfa1f524ae",
                "ba1f4fce-053b-45d3-9bf8-d504fae897b2",
                "20386ddc-0d18-43c7-8cf0-89b7827b2ca7",
                "0a49504e-a244-44c9-8a90-72ab55c9a132"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "f4dda688-be9e-4041-8915-1e1f252a9e65",
              "title": "cnpDirectDepositUiState",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/profile/tests/selectors.unit.spec.js",
              "file": "/src/applications/personalization/profile/tests/selectors.unit.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return the correct part of the state`",
                  "fullTitle": "profile selectors cnpDirectDepositUiState should return the correct part of the state`",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var state = {\n  vaProfile: {\n    cnpPaymentInformationUiState: {}\n  }\n};\n(0, _chai.expect)(selectors.cnpDirectDepositUiState(state)).to.deep.equal(state.vaProfile.cnpPaymentInformationUiState);",
                  "err": {},
                  "uuid": "efb82843-b540-4f0b-b768-c8d030d63a50",
                  "parentUUID": "f4dda688-be9e-4041-8915-1e1f252a9e65",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return undefined if vaProfile is not set on the state",
                  "fullTitle": "profile selectors cnpDirectDepositUiState should return undefined if vaProfile is not set on the state",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var state = {};\n(0, _chai.expect)(selectors.cnpDirectDepositUiState(state)).to.equal(undefined);",
                  "err": {},
                  "uuid": "d56ff6b4-bc19-469c-b2f3-966b8c71a91b",
                  "parentUUID": "f4dda688-be9e-4041-8915-1e1f252a9e65",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "efb82843-b540-4f0b-b768-c8d030d63a50",
                "d56ff6b4-bc19-469c-b2f3-966b8c71a91b"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "055ebf5d-4e45-456e-870a-78a61d7ff747",
              "title": "eduDirectDepositInformation",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/profile/tests/selectors.unit.spec.js",
              "file": "/src/applications/personalization/profile/tests/selectors.unit.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return the correct part of the state",
                  "fullTitle": "profile selectors eduDirectDepositInformation should return the correct part of the state",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var paymentInformation = {\n  accountNumber: null,\n  routingNumber: null\n};\nvar state = {\n  vaProfile: {\n    eduPaymentInformation: paymentInformation\n  }\n};\n(0, _chai.expect)(selectors.eduDirectDepositInformation(state)).to.deep.equal(paymentInformation);",
                  "err": {},
                  "uuid": "6dff1de8-49fc-419b-ae0b-f48b8eeaf7fa",
                  "parentUUID": "055ebf5d-4e45-456e-870a-78a61d7ff747",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "6dff1de8-49fc-419b-ae0b-f48b8eeaf7fa"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "ecde174f-4cb1-4545-9ecb-0d56fa25adc7",
              "title": "eduDirectDepositUiState",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/profile/tests/selectors.unit.spec.js",
              "file": "/src/applications/personalization/profile/tests/selectors.unit.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return the correct part of the state",
                  "fullTitle": "profile selectors eduDirectDepositUiState should return the correct part of the state",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var uiState = {\n  foo: 'bar'\n};\nvar state = {\n  vaProfile: {\n    eduPaymentInformationUiState: uiState\n  }\n};\n(0, _chai.expect)(selectors.eduDirectDepositUiState(state)).to.deep.equal(uiState);",
                  "err": {},
                  "uuid": "1cca6932-05b6-4bca-81fc-da28b31ff31c",
                  "parentUUID": "ecde174f-4cb1-4545-9ecb-0d56fa25adc7",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "1cca6932-05b6-4bca-81fc-da28b31ff31c"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "63358650-5498-4453-81fa-7ad14400265d",
              "title": "eduDirectDepositAccountInformation",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/profile/tests/selectors.unit.spec.js",
              "file": "/src/applications/personalization/profile/tests/selectors.unit.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return the correct part of the state",
                  "fullTitle": "profile selectors eduDirectDepositAccountInformation should return the correct part of the state",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var accountInfo = {\n  accountNumber: null,\n  routingNumber: null\n};\nvar state = {\n  vaProfile: {\n    eduPaymentInformation: {\n      paymentAccount: accountInfo\n    }\n  }\n};\n(0, _chai.expect)(selectors.eduDirectDepositAccountInformation(state)).to.deep.equal(accountInfo);",
                  "err": {},
                  "uuid": "7ff981fa-93af-4615-af6b-4e33bdfa244a",
                  "parentUUID": "63358650-5498-4453-81fa-7ad14400265d",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "7ff981fa-93af-4615-af6b-4e33bdfa244a"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "08e5c2b0-c4e5-4876-abe4-173a553a0abb",
              "title": "eduDirectDepositIsSetUp",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/profile/tests/selectors.unit.spec.js",
              "file": "/src/applications/personalization/profile/tests/selectors.unit.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "returns `true` when an account number is set",
                  "fullTitle": "profile selectors eduDirectDepositIsSetUp returns `true` when an account number is set",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var accountInfo = {\n  accountNumber: '123',\n  routingNumber: '456'\n};\nvar state = {\n  vaProfile: {\n    eduPaymentInformation: {\n      paymentAccount: accountInfo\n    }\n  }\n};\n(0, _chai.expect)(selectors.eduDirectDepositIsSetUp(state)).to.be.true;",
                  "err": {},
                  "uuid": "252d39ac-2e6f-462a-accc-e3817f862023",
                  "parentUUID": "08e5c2b0-c4e5-4876-abe4-173a553a0abb",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "returns `false` when an account number is not set",
                  "fullTitle": "profile selectors eduDirectDepositIsSetUp returns `false` when an account number is not set",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var accountInfo = {\n  accountNumber: null,\n  routingNumber: null\n};\nvar state = {\n  vaProfile: {\n    eduPaymentInformation: {\n      paymentAccount: accountInfo\n    }\n  }\n};\n(0, _chai.expect)(selectors.eduDirectDepositIsSetUp(state)).to.be.false;",
                  "err": {},
                  "uuid": "d1c1b07f-a785-4db7-8329-ee65095fafbe",
                  "parentUUID": "08e5c2b0-c4e5-4876-abe4-173a553a0abb",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "252d39ac-2e6f-462a-accc-e3817f862023",
                "d1c1b07f-a785-4db7-8329-ee65095fafbe"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "7a3abf2c-e1fc-48e1-b875-22b7981d3e52",
              "title": "eduDirectDepositLoadError",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/profile/tests/selectors.unit.spec.js",
              "file": "/src/applications/personalization/profile/tests/selectors.unit.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "returns any non-403 errors that exist",
                  "fullTitle": "profile selectors eduDirectDepositLoadError returns any non-403 errors that exist",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var error = {\n  errors: [{\n    code: '401'\n  }]\n};\nvar state = {\n  vaProfile: {\n    eduPaymentInformation: {\n      error: error\n    }\n  }\n};\n(0, _chai.expect)(selectors.eduDirectDepositLoadError(state)).to.deep.equal(error);\nstate.vaProfile.eduPaymentInformation.error.errors.push({\n  code: '403'\n});\n(0, _chai.expect)(selectors.eduDirectDepositLoadError(state)).to.deep.equal(error);",
                  "err": {},
                  "uuid": "57b296b8-0f2c-45e5-bfde-0561cf762d10",
                  "parentUUID": "7a3abf2c-e1fc-48e1-b875-22b7981d3e52",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "returns the error if it is not an object with an errors array",
                  "fullTitle": "profile selectors eduDirectDepositLoadError returns the error if it is not an object with an errors array",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var error = {\n  code: '500'\n};\nvar state = {\n  vaProfile: {\n    eduPaymentInformation: {\n      error: error\n    }\n  }\n};\n(0, _chai.expect)(selectors.eduDirectDepositLoadError(state)).to.deep.equal(error);",
                  "err": {},
                  "uuid": "a4937784-d12c-4952-8aff-2a309b0b5821",
                  "parentUUID": "7a3abf2c-e1fc-48e1-b875-22b7981d3e52",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "returns undefined if the error data only contains 403 errors",
                  "fullTitle": "profile selectors eduDirectDepositLoadError returns undefined if the error data only contains 403 errors",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var error = {\n  errors: [{\n    code: '403'\n  }]\n};\nvar state = {\n  vaProfile: {\n    eduPaymentInformation: {\n      error: error\n    }\n  }\n};\n(0, _chai.expect)(selectors.eduDirectDepositLoadError(state)).to.be.undefined;\nstate.vaProfile.eduPaymentInformation.error.errors.push({\n  code: '403'\n});\n(0, _chai.expect)(selectors.eduDirectDepositLoadError(state)).to.be.undefined;",
                  "err": {},
                  "uuid": "d23c4632-5aee-4940-9644-cd3792a49731",
                  "parentUUID": "7a3abf2c-e1fc-48e1-b875-22b7981d3e52",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "returns `undefined` when there is no error",
                  "fullTitle": "profile selectors eduDirectDepositLoadError returns `undefined` when there is no error",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var accountInfo = {\n  accountNumber: null,\n  routingNumber: null\n};\nvar state = {\n  vaProfile: {\n    eduPaymentInformation: {\n      paymentAccount: accountInfo\n    }\n  }\n};\n(0, _chai.expect)(selectors.eduDirectDepositLoadError(state)).to.be.undefined;",
                  "err": {},
                  "uuid": "8cd20938-2dee-4916-b7fd-60a79403c5c3",
                  "parentUUID": "7a3abf2c-e1fc-48e1-b875-22b7981d3e52",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "57b296b8-0f2c-45e5-bfde-0561cf762d10",
                "a4937784-d12c-4952-8aff-2a309b0b5821",
                "d23c4632-5aee-4940-9644-cd3792a49731",
                "8cd20938-2dee-4916-b7fd-60a79403c5c3"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "63b5347e-7bfa-426b-8401-97936abc71fc",
              "title": "personalInformationLoadError",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/profile/tests/selectors.unit.spec.js",
              "file": "/src/applications/personalization/profile/tests/selectors.unit.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return the error data if it exists",
                  "fullTitle": "profile selectors personalInformationLoadError should return the error data if it exists",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var state = {\n  vaProfile: {\n    personalInformation: {\n      errors: errors\n    }\n  }\n};\n(0, _chai.expect)(selectors.personalInformationLoadError(state)).to.deep.equal(errors);",
                  "err": {},
                  "uuid": "d9449b56-f3b1-4101-98b8-e3d8ea348434",
                  "parentUUID": "63b5347e-7bfa-426b-8401-97936abc71fc",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return undefined if there are no errors",
                  "fullTitle": "profile selectors personalInformationLoadError should return undefined if there are no errors",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var state = {\n  vaProfile: {\n    personalInformation: {}\n  }\n};\n(0, _chai.expect)(selectors.personalInformationLoadError(state)).to.be.undefined;",
                  "err": {},
                  "uuid": "6fed8a1d-60fb-44de-a3dc-2f49b1cac0ee",
                  "parentUUID": "63b5347e-7bfa-426b-8401-97936abc71fc",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return undefined if personalInformation info does not exist on the state",
                  "fullTitle": "profile selectors personalInformationLoadError should return undefined if personalInformation info does not exist on the state",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var state = {};\n(0, _chai.expect)(selectors.personalInformationLoadError(state)).to.be.undefined;\nstate = {\n  vaProfile: {}\n};\n(0, _chai.expect)(selectors.personalInformationLoadError(state)).to.be.undefined;",
                  "err": {},
                  "uuid": "ef1a42ef-1e86-49f8-985c-beeb3716c43b",
                  "parentUUID": "63b5347e-7bfa-426b-8401-97936abc71fc",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "d9449b56-f3b1-4101-98b8-e3d8ea348434",
                "6fed8a1d-60fb-44de-a3dc-2f49b1cac0ee",
                "ef1a42ef-1e86-49f8-985c-beeb3716c43b"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "90f01bfa-fe78-4609-b52a-03d5e2ecf028",
              "title": "militaryInformationLoadError",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/profile/tests/selectors.unit.spec.js",
              "file": "/src/applications/personalization/profile/tests/selectors.unit.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return the error data if it exists",
                  "fullTitle": "profile selectors militaryInformationLoadError should return the error data if it exists",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var state = {\n  vaProfile: {\n    militaryInformation: {\n      serviceHistory: {\n        error: errors\n      }\n    }\n  }\n};\n(0, _chai.expect)(selectors.militaryInformationLoadError(state)).to.deep.equal(errors);",
                  "err": {},
                  "uuid": "a1059f1a-aa64-418b-b18e-8b45046f2b9c",
                  "parentUUID": "90f01bfa-fe78-4609-b52a-03d5e2ecf028",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return undefined if there are no errors",
                  "fullTitle": "profile selectors militaryInformationLoadError should return undefined if there are no errors",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var state = {\n  vaProfile: {\n    militaryInformation: {\n      serviceHistory: {}\n    }\n  }\n};\n(0, _chai.expect)(selectors.militaryInformationLoadError(state)).to.be.undefined;",
                  "err": {},
                  "uuid": "c0ab5774-9036-4d6a-9bf7-cb67bd21d7a2",
                  "parentUUID": "90f01bfa-fe78-4609-b52a-03d5e2ecf028",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return undefined if militaryInformation info does not exist on the state",
                  "fullTitle": "profile selectors militaryInformationLoadError should return undefined if militaryInformation info does not exist on the state",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var state = {};\n(0, _chai.expect)(selectors.militaryInformationLoadError(state)).to.be.undefined;\nstate = {\n  vaProfile: {}\n};\n(0, _chai.expect)(selectors.militaryInformationLoadError(state)).to.be.undefined;",
                  "err": {},
                  "uuid": "4162dd0d-9d46-41ab-93e1-02ee1ea5bdc4",
                  "parentUUID": "90f01bfa-fe78-4609-b52a-03d5e2ecf028",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "a1059f1a-aa64-418b-b18e-8b45046f2b9c",
                "c0ab5774-9036-4d6a-9bf7-cb67bd21d7a2",
                "4162dd0d-9d46-41ab-93e1-02ee1ea5bdc4"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "94f8badd-253c-476e-b3ed-b07b0436a90e",
          "title": "Profile",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/profile/tests/util/analytics.unit.spec.js",
          "file": "/src/applications/personalization/profile/tests/util/analytics.unit.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "0e039f8e-3b69-475e-9504-e83e087541ea",
              "title": "analytics utils",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/profile/tests/util/analytics.unit.spec.js",
              "file": "/src/applications/personalization/profile/tests/util/analytics.unit.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [],
              "suites": [
                {
                  "uuid": "a6def88f-5da8-4337-9bfd-e286164752d0",
                  "title": "createApiEvent",
                  "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/profile/tests/util/analytics.unit.spec.js",
                  "file": "/src/applications/personalization/profile/tests/util/analytics.unit.spec.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "no parameters are provided and default values are used",
                      "fullTitle": "Profile analytics utils createApiEvent no parameters are provided and default values are used",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "slow",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "var result = (0, _analytics.createApiEvent)();\n(0, _chai.expect)(result).to.deep.equal({\n  'api-status': 'unknown',\n  event: 'api_call',\n  'api-name': 'unknown'\n});",
                      "err": {},
                      "uuid": "23621e96-ec57-4ba8-9b19-0c19644c73ed",
                      "parentUUID": "a6def88f-5da8-4337-9bfd-e286164752d0",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "name and status are provided",
                      "fullTitle": "Profile analytics utils createApiEvent name and status are provided",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "var name = 'hello-there';\nvar status = 'success';\nvar result = (0, _analytics.createApiEvent)({\n  name: name,\n  status: status\n});\n(0, _chai.expect)(result).to.deep.equal({\n  'api-status': status,\n  event: 'api_call',\n  'api-name': name\n});",
                      "err": {},
                      "uuid": "05c004c3-cd92-4c52-84e7-28d7998701e7",
                      "parentUUID": "a6def88f-5da8-4337-9bfd-e286164752d0",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "time is added",
                      "fullTitle": "Profile analytics utils createApiEvent time is added",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "var name = 'hello-there';\nvar status = 'success';\nvar time = 1234;\nvar result = (0, _analytics.createApiEvent)({\n  name: name,\n  status: status,\n  time: time\n});\n(0, _chai.expect)(result).to.deep.equal({\n  'api-status': status,\n  event: 'api_call',\n  'api-name': name,\n  'api-latency-ms': time\n});",
                      "err": {},
                      "uuid": "adad1c9f-8ab1-4553-86aa-6453d662ae5a",
                      "parentUUID": "a6def88f-5da8-4337-9bfd-e286164752d0",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "has an errorKey",
                      "fullTitle": "Profile analytics utils createApiEvent has an errorKey",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "slow",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "var name = 'hello-there';\nvar status = 'success';\nvar time = 1234;\nvar errorKey = 'something went wrong';\nvar result = (0, _analytics.createApiEvent)({\n  name: name,\n  status: status,\n  time: time,\n  errorKey: errorKey\n});\n(0, _chai.expect)(result).to.deep.equal({\n  'api-status': status,\n  event: 'api_call',\n  'api-name': name,\n  'api-latency-ms': time,\n  'error-key': errorKey\n});",
                      "err": {},
                      "uuid": "d48d9197-b908-48df-8df1-e69092638dbf",
                      "parentUUID": "a6def88f-5da8-4337-9bfd-e286164752d0",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "23621e96-ec57-4ba8-9b19-0c19644c73ed",
                    "05c004c3-cd92-4c52-84e7-28d7998701e7",
                    "adad1c9f-8ab1-4553-86aa-6453d662ae5a",
                    "d48d9197-b908-48df-8df1-e69092638dbf"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 2,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                }
              ],
              "passes": [],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "f6e5d916-2929-4c84-af4c-7b0fe756ab03",
          "title": "Profile utils",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/profile/tests/util/contact-information/addressUtils.unit.spec.js",
          "file": "/src/applications/personalization/profile/tests/util/contact-information/addressUtils.unit.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "7579b45b-113c-4800-b697-098cf3ce0f4f",
              "title": "contact-information utils",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/profile/tests/util/contact-information/addressUtils.unit.spec.js",
              "file": "/src/applications/personalization/profile/tests/util/contact-information/addressUtils.unit.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [],
              "suites": [
                {
                  "uuid": "6bbd7187-72fe-4454-859d-6edea4cb0827",
                  "title": "formatAddressTitle",
                  "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/profile/tests/util/contact-information/addressUtils.unit.spec.js",
                  "file": "/src/applications/personalization/profile/tests/util/contact-information/addressUtils.unit.spec.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "should format string to not include the word \"address\"",
                      "fullTitle": "Profile utils contact-information utils formatAddressTitle should format string to not include the word \"address\"",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "var initial = 'Mailing address';\nvar expected = 'Mailing';\n(0, _chai.expect)(addressUtils.formatAddressTitle(initial)).to.equal(expected);",
                      "err": {},
                      "uuid": "8ca29608-0a70-4f54-a02a-fb043bb3da68",
                      "parentUUID": "6bbd7187-72fe-4454-859d-6edea4cb0827",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "8ca29608-0a70-4f54-a02a-fb043bb3da68"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "bbd8948b-55a5-4ec5-965c-908d7c6ebf2e",
                  "title": "handleUpdateButtonClick",
                  "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/profile/tests/util/contact-information/addressUtils.unit.spec.js",
                  "file": "/src/applications/personalization/profile/tests/util/contact-information/addressUtils.unit.spec.js",
                  "beforeHooks": [
                    {
                      "title": "\"before each\" hook in \"handleUpdateButtonClick\"",
                      "fullTitle": "Profile utils contact-information utils handleUpdateButtonClick \"before each\" hook in \"handleUpdateButtonClick\"",
                      "timedOut": false,
                      "duration": 0,
                      "state": null,
                      "speed": null,
                      "pass": false,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "queryForErrorsStub = _sinon.default.stub(addressUtils, 'getErrorsFromDom');\nrecordCustomProfileEventSpy = _sinon.default.spy();",
                      "err": {},
                      "uuid": "161c6c98-2e7c-4eea-a005-41de64af93a4",
                      "parentUUID": "bbd8948b-55a5-4ec5-965c-908d7c6ebf2e",
                      "isHook": true,
                      "skipped": false
                    }
                  ],
                  "afterHooks": [
                    {
                      "title": "\"after each\" hook in \"handleUpdateButtonClick\"",
                      "fullTitle": "Profile utils contact-information utils handleUpdateButtonClick \"after each\" hook in \"handleUpdateButtonClick\"",
                      "timedOut": false,
                      "duration": 0,
                      "state": null,
                      "speed": null,
                      "pass": false,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "queryForErrorsStub.restore();",
                      "err": {},
                      "uuid": "7911d8d6-a32e-428a-8bfd-7effa3c010ec",
                      "parentUUID": "bbd8948b-55a5-4ec5-965c-908d7c6ebf2e",
                      "isHook": true,
                      "skipped": false
                    }
                  ],
                  "tests": [
                    {
                      "title": "should call recordCustomProfileEvent with the correct parameters for mailing address",
                      "fullTitle": "Profile utils contact-information utils handleUpdateButtonClick should call recordCustomProfileEvent with the correct parameters for mailing address",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "slow",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "var fieldName = _exportsFile.FIELD_NAMES.MAILING_ADDRESS;\nvar errors = [1, 2, 3];\nqueryForErrorsStub.returns(errors);\nvar clickHandler = function clickHandler() {\n  addressUtils.handleUpdateButtonClick(queryForErrorsStub, fieldName, recordCustomProfileEventSpy);\n};\nvar component = (0, _enzyme.shallow)(/*#__PURE__*/_react.default.createElement(TestComponent, {\n  onClick: clickHandler\n}));\ncomponent.find('button').simulate('click');\n(0, _chai.expect)(queryForErrorsStub.calledOnce).to.be.true;\n(0, _chai.expect)(recordCustomProfileEventSpy.calledOnce).to.be.true;\n(0, _chai.expect)(recordCustomProfileEventSpy.firstCall.args[0]).to.deep.equal({\n  title: generateExpectedTitle(_exportsFile.FIELD_TITLES[fieldName]),\n  status: generateExpectedStatus(errors.length)\n});\ncomponent.unmount();",
                      "err": {},
                      "uuid": "1d041c9b-5429-422c-ad68-dfe73b831924",
                      "parentUUID": "bbd8948b-55a5-4ec5-965c-908d7c6ebf2e",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "should call recordCustomProfileEvent with the correct parameters for residential address",
                      "fullTitle": "Profile utils contact-information utils handleUpdateButtonClick should call recordCustomProfileEvent with the correct parameters for residential address",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "slow",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "var fieldName = _exportsFile.FIELD_NAMES.RESIDENTIAL_ADDRESS;\nvar errors = [1, 2];\nqueryForErrorsStub.returns(errors);\nvar clickHandler = function clickHandler() {\n  addressUtils.handleUpdateButtonClick(queryForErrorsStub, fieldName, recordCustomProfileEventSpy);\n};\nvar component = (0, _enzyme.shallow)(/*#__PURE__*/_react.default.createElement(TestComponent, {\n  onClick: clickHandler\n}));\ncomponent.find('button').simulate('click');\n(0, _chai.expect)(queryForErrorsStub.calledOnce).to.be.true;\n(0, _chai.expect)(recordCustomProfileEventSpy.calledOnce).to.be.true;\n(0, _chai.expect)(recordCustomProfileEventSpy.firstCall.args[0]).to.deep.equal({\n  title: generateExpectedTitle(_exportsFile.FIELD_TITLES[fieldName]),\n  status: generateExpectedStatus(errors.length)\n});\ncomponent.unmount();",
                      "err": {},
                      "uuid": "08a18546-f1d7-4e8f-8487-9a933e92156c",
                      "parentUUID": "bbd8948b-55a5-4ec5-965c-908d7c6ebf2e",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "should not call recordCustomProfileEvent when field is not an address",
                      "fullTitle": "Profile utils contact-information utils handleUpdateButtonClick should not call recordCustomProfileEvent when field is not an address",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "var fieldName = _exportsFile.FIELD_NAMES.EMAIL;\nvar errors = [1, 2];\nqueryForErrorsStub.returns(errors);\nvar clickHandler = function clickHandler() {\n  addressUtils.handleUpdateButtonClick(queryForErrorsStub, fieldName, recordCustomProfileEventSpy);\n};\nvar component = (0, _enzyme.shallow)(/*#__PURE__*/_react.default.createElement(TestComponent, {\n  onClick: clickHandler\n}));\ncomponent.find('button').simulate('click');\n(0, _chai.expect)(queryForErrorsStub.calledOnce).to.be.true;\n(0, _chai.expect)(recordCustomProfileEventSpy.called).to.be.false;\ncomponent.unmount();",
                      "err": {},
                      "uuid": "2b072894-4fb3-41f9-9f10-05dd1b70fc1c",
                      "parentUUID": "bbd8948b-55a5-4ec5-965c-908d7c6ebf2e",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "should not call recordCustomProfileEvent when there are no errors",
                      "fullTitle": "Profile utils contact-information utils handleUpdateButtonClick should not call recordCustomProfileEvent when there are no errors",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "slow",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "var fieldName = _exportsFile.FIELD_NAMES.MAILING_ADDRESS;\nvar errors = [];\nqueryForErrorsStub.returns(errors);\nvar clickHandler = function clickHandler() {\n  addressUtils.handleUpdateButtonClick(queryForErrorsStub, fieldName, recordCustomProfileEventSpy);\n};\nvar component = (0, _enzyme.shallow)(/*#__PURE__*/_react.default.createElement(TestComponent, {\n  onClick: clickHandler\n}));\ncomponent.find('button').simulate('click');\n(0, _chai.expect)(queryForErrorsStub.calledOnce).to.be.true;\n(0, _chai.expect)(recordCustomProfileEventSpy.called).to.be.false;\ncomponent.unmount();",
                      "err": {},
                      "uuid": "996b2fc3-f035-4831-be04-f617a28d2022",
                      "parentUUID": "bbd8948b-55a5-4ec5-965c-908d7c6ebf2e",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "1d041c9b-5429-422c-ad68-dfe73b831924",
                    "08a18546-f1d7-4e8f-8487-9a933e92156c",
                    "2b072894-4fb3-41f9-9f10-05dd1b70fc1c",
                    "996b2fc3-f035-4831-be04-f617a28d2022"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 3,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                }
              ],
              "passes": [],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "0dfd1a29-8c8e-4ba3-aab0-41fcd688d33f",
          "title": "DirectDepositClient",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/profile/tests/util/direct-deposit.unit.spec.js",
          "file": "/src/applications/personalization/profile/tests/util/direct-deposit.unit.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "aed3267e-85fb-4810-8113-6f0ec807a7b5",
              "title": "client",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/profile/tests/util/direct-deposit.unit.spec.js",
              "file": "/src/applications/personalization/profile/tests/util/direct-deposit.unit.spec.js",
              "beforeHooks": [
                {
                  "title": "\"before each\" hook in \"client\"",
                  "fullTitle": "DirectDepositClient client \"before each\" hook in \"client\"",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "recordEventSpy = _sinon.default.spy();\nclient = new _directDeposit.DirectDepositClient({\n  recordEvent: recordEventSpy\n});",
                  "err": {},
                  "uuid": "c254b442-58de-41d6-a691-d40e41a23aa2",
                  "parentUUID": "aed3267e-85fb-4810-8113-6f0ec807a7b5",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [],
              "tests": [
                {
                  "title": "returns the correct endpoint",
                  "fullTitle": "DirectDepositClient client returns the correct endpoint",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)(client.endpoint).to.equal('/profile/direct_deposits/disability_compensations');",
                  "err": {},
                  "uuid": "dfd65b7e-7fa7-4a5c-8581-e00286d1a5a2",
                  "parentUUID": "aed3267e-85fb-4810-8113-6f0ec807a7b5",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "generates the correct request options",
                  "fullTitle": "DirectDepositClient client generates the correct request options",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var options = client.generateApiRequestOptions(fields);\n(0, _chai.expect)(options.body).to.equal(JSON.stringify({\n  accountType: fields.accountType,\n  accountNumber: fields.accountNumber,\n  routingNumber: fields.financialInstitutionRoutingNumber\n}));",
                  "err": {},
                  "uuid": "512e6977-4442-44d6-8712-2bea02e662d3",
                  "parentUUID": "aed3267e-85fb-4810-8113-6f0ec807a7b5",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "formats the response from lighthouse",
                  "fullTitle": "DirectDepositClient client formats the response from lighthouse",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var response = {\n  paymentAccount: {\n    accountType: 'CHECKING',\n    accountNumber: '123456789',\n    routingNumber: '987654321',\n    name: 'Bank of America'\n  }\n};\nvar formattedResponse = client.formatDirectDepositResponseFromLighthouse(response);\n(0, _chai.expect)(formattedResponse).to.deep.equal({\n  paymentAccount: {\n    accountType: 'Checking',\n    accountNumber: '123456789',\n    financialInstitutionRoutingNumber: '987654321',\n    financialInstitutionName: 'Bank of America'\n  }\n});",
                  "err": {},
                  "uuid": "1124d99a-c0ba-4ca1-b73d-80ffd3c60e92",
                  "parentUUID": "aed3267e-85fb-4810-8113-6f0ec807a7b5",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "passes response back with undefined values if not present",
                  "fullTitle": "DirectDepositClient client passes response back with undefined values if not present",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var response = {\n  paymentAccount: {\n    financialInstitutionName: undefined,\n    financialInstitutionRoutingNumber: undefined,\n    accountNumber: undefined,\n    accountType: undefined\n  }\n};\nvar formattedResponse = client.formatDirectDepositResponseFromLighthouse({});\n(0, _chai.expect)(formattedResponse).to.deep.equal(response);",
                  "err": {},
                  "uuid": "598aa5ce-fa51-479d-80ad-1be2c3424de4",
                  "parentUUID": "aed3267e-85fb-4810-8113-6f0ec807a7b5",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "records lighthouse analytics event",
                  "fullTitle": "DirectDepositClient client records lighthouse analytics event",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var errorMessage = 'test-error-message';\nclient.recordDirectDepositEvent({\n  status: _constants.API_STATUS.FAILED,\n  method: 'PUT',\n  extraProperties: {\n    'error-key': errorMessage\n  }\n});\n(0, _chai.expect)(recordEventSpy.firstCall.args[0]).to.deep.equal({\n  event: 'api_call',\n  'api-name': 'PUT /profile/direct_deposits/disability_compensations',\n  'api-status': _constants.API_STATUS.FAILED,\n  'error-key': errorMessage\n});",
                  "err": {},
                  "uuid": "e0d09ee0-7120-49c1-b59b-942d52d46e91",
                  "parentUUID": "aed3267e-85fb-4810-8113-6f0ec807a7b5",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "records lighthouse analytics event without error",
                  "fullTitle": "DirectDepositClient client records lighthouse analytics event without error",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "client.recordDirectDepositEvent({\n  status: _constants.API_STATUS.SUCCESSFUL,\n  method: 'PUT'\n});\n(0, _chai.expect)(recordEventSpy.firstCall.args[0]).to.deep.equal({\n  event: 'api_call',\n  'api-name': 'PUT /profile/direct_deposits/disability_compensations',\n  'api-status': _constants.API_STATUS.SUCCESSFUL\n});",
                  "err": {},
                  "uuid": "7b058c62-3ea5-473e-9ace-d9358b2ed300",
                  "parentUUID": "aed3267e-85fb-4810-8113-6f0ec807a7b5",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "dfd65b7e-7fa7-4a5c-8581-e00286d1a5a2",
                "512e6977-4442-44d6-8712-2bea02e662d3",
                "1124d99a-c0ba-4ca1-b73d-80ffd3c60e92",
                "598aa5ce-fa51-479d-80ad-1be2c3424de4",
                "e0d09ee0-7120-49c1-b59b-942d52d46e91",
                "7b058c62-3ea5-473e-9ace-d9358b2ed300"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "7bad7d4b-25bc-4341-893a-40bffd1b38c7",
          "title": "hasErrorCombos",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/profile/tests/util/index.hasErrorCombos.unit.spec.js",
          "file": "/src/applications/personalization/profile/tests/util/index.hasErrorCombos.unit.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "bc7eaeb5-9e8b-4662-9e7e-72fd52beb44c",
              "title": "cases for invalid routing number",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/profile/tests/util/index.hasErrorCombos.unit.spec.js",
              "file": "/src/applications/personalization/profile/tests/util/index.hasErrorCombos.unit.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "return true for routing number error",
                  "fullTitle": "hasErrorCombos cases for invalid routing number return true for routing number error",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)((0, _util.hasErrorCombos)({\n  errors: _disabilityCompensations.default.updates.errors.invalidRoutingNumber.errors,\n  errorKeys: [_util.LIGHTHOUSE_ERROR_KEYS.ROUTING_NUMBER_INVALID]\n})).to.be.true;",
                  "err": {},
                  "uuid": "0e6fdad8-da8d-453e-a3ee-4a07086d543c",
                  "parentUUID": "bc7eaeb5-9e8b-4662-9e7e-72fd52beb44c",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "0e6fdad8-da8d-453e-a3ee-4a07086d543c"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "80360335-6e70-4b33-b827-16ad60349e22",
              "title": "cases for phone number errors",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/profile/tests/util/index.hasErrorCombos.unit.spec.js",
              "file": "/src/applications/personalization/profile/tests/util/index.hasErrorCombos.unit.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "return true for Lighthouse day phone error",
                  "fullTitle": "hasErrorCombos cases for phone number errors return true for Lighthouse day phone error",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)((0, _util.hasErrorCombos)({\n  errors: _disabilityCompensations.default.updates.errors.invalidDayPhone.errors,\n  errorKeys: [_util.LIGHTHOUSE_ERROR_KEYS.DAY_PHONE_NUMBER_INVALID]\n})).to.be.true;",
                  "err": {},
                  "uuid": "99c03962-2529-4bcc-826a-833a9890a386",
                  "parentUUID": "80360335-6e70-4b33-b827-16ad60349e22",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "return true for Lighthouse day area error",
                  "fullTitle": "hasErrorCombos cases for phone number errors return true for Lighthouse day area error",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)((0, _util.hasErrorCombos)({\n  errors: _disabilityCompensations.default.updates.errors.invalidDayPhoneArea.errors,\n  errorKeys: [_util.LIGHTHOUSE_ERROR_KEYS.DAY_PHONE_AREA_INVALID]\n})).to.be.true;",
                  "err": {},
                  "uuid": "9a595aa3-5582-4f4b-8729-441a8f39bd4a",
                  "parentUUID": "80360335-6e70-4b33-b827-16ad60349e22",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "99c03962-2529-4bcc-826a-833a9890a386",
                "9a595aa3-5582-4f4b-8729-441a8f39bd4a"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "f98d73a9-8688-47ea-b411-080198df2a12",
          "title": "profile utils",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/profile/tests/util/index.unit.spec.js",
          "file": "/src/applications/personalization/profile/tests/util/index.unit.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "59a90f59-7a10-4a9e-8402-63d4c601a7ff",
              "title": "createCNPDirectDepositAnalyticsDataObject",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/profile/tests/util/index.unit.spec.js",
              "file": "/src/applications/personalization/profile/tests/util/index.unit.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "returns the correct data when passed nothing",
                  "fullTitle": "profile utils createCNPDirectDepositAnalyticsDataObject returns the correct data when passed nothing",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var eventDataObject = (0, _util.createCNPDirectDepositAnalyticsDataObject)();\n(0, _chai.expect)(eventDataObject).to.deep.equal(defaultDataObject);",
                  "err": {},
                  "uuid": "20877e86-4ca2-40cc-9a85-e02ed459f1b0",
                  "parentUUID": "59a90f59-7a10-4a9e-8402-63d4c601a7ff",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "returns the correct data when passed an empty array",
                  "fullTitle": "profile utils createCNPDirectDepositAnalyticsDataObject returns the correct data when passed an empty array",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var eventDataObject = (0, _util.createCNPDirectDepositAnalyticsDataObject)([]);\n(0, _chai.expect)(eventDataObject).to.deep.equal(defaultDataObject);",
                  "err": {},
                  "uuid": "32a6503a-33da-4ed9-8984-44605d98c6c7",
                  "parentUUID": "59a90f59-7a10-4a9e-8402-63d4c601a7ff",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "returns the default error  event object when nothing is passed",
                  "fullTitle": "profile utils createCNPDirectDepositAnalyticsDataObject returns the default error  event object when nothing is passed",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var eventDataObject = (0, _util.createCNPDirectDepositAnalyticsDataObject)([{}]);\n(0, _chai.expect)(eventDataObject).to.deep.equal(defaultDataObject);\neventDataObject = (0, _util.createCNPDirectDepositAnalyticsDataObject)([{\n  meta: {}\n}]);\n(0, _chai.expect)(eventDataObject).to.deep.equal(defaultDataObject);",
                  "err": {},
                  "uuid": "01eea493-2380-437d-af1e-a76f68719e8b",
                  "parentUUID": "59a90f59-7a10-4a9e-8402-63d4c601a7ff",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "returns the correct data when a bad address error is passed",
                  "fullTitle": "profile utils createCNPDirectDepositAnalyticsDataObject returns the correct data when a bad address error is passed",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var eventDataObject = (0, _util.createCNPDirectDepositAnalyticsDataObject)({\n  errors: _disabilityCompensations.default.updates.errors.invalidMailingAddress.errors\n});\n(0, _chai.expect)(eventDataObject).to.deep.equal(badAddressDataObject);",
                  "err": {},
                  "uuid": "a1a24769-e197-43a7-82d9-bba134c00f89",
                  "parentUUID": "59a90f59-7a10-4a9e-8402-63d4c601a7ff",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "returns the correct data when a work phone number error is passed",
                  "fullTitle": "profile utils createCNPDirectDepositAnalyticsDataObject returns the correct data when a work phone number error is passed",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var eventDataObject = (0, _util.createCNPDirectDepositAnalyticsDataObject)(_disabilityCompensations.default.updates.errors.invalidDayPhone);\n(0, _chai.expect)(eventDataObject).to.deep.equal(badWorkPhoneDataObject);",
                  "err": {},
                  "uuid": "68ec015e-223d-4da7-99f5-761daded8305",
                  "parentUUID": "59a90f59-7a10-4a9e-8402-63d4c601a7ff",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "returns the correct data when a day phone number error is passed",
                  "fullTitle": "profile utils createCNPDirectDepositAnalyticsDataObject returns the correct data when a day phone number error is passed",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var eventDataObject = (0, _util.createCNPDirectDepositAnalyticsDataObject)(_disabilityCompensations.default.updates.errors.invalidNightPhone);\n(0, _chai.expect)(eventDataObject).to.deep.equal(badHomePhoneDataObject);",
                  "err": {},
                  "uuid": "502ceb0f-776a-468a-ae2c-75b28b565107",
                  "parentUUID": "59a90f59-7a10-4a9e-8402-63d4c601a7ff",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "returns the correct data when an account flagged for fraud error is passed",
                  "fullTitle": "profile utils createCNPDirectDepositAnalyticsDataObject returns the correct data when an account flagged for fraud error is passed",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var eventDataObject = (0, _util.createCNPDirectDepositAnalyticsDataObject)(_disabilityCompensations.default.updates.errors.accountNumberFlagged);\n(0, _chai.expect)(eventDataObject).to.deep.equal(accountFlaggedForFraudDataObject);",
                  "err": {},
                  "uuid": "c5f73dd9-76d5-495f-ae5d-61e9d590399f",
                  "parentUUID": "59a90f59-7a10-4a9e-8402-63d4c601a7ff",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "returns the correct data when an invalid routing number error is passed",
                  "fullTitle": "profile utils createCNPDirectDepositAnalyticsDataObject returns the correct data when an invalid routing number error is passed",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var eventDataObject = (0, _util.createCNPDirectDepositAnalyticsDataObject)(_disabilityCompensations.default.updates.errors.invalidRoutingNumber);\n(0, _chai.expect)(eventDataObject).to.deep.equal(invalidRoutingNumberDataObject);",
                  "err": {},
                  "uuid": "df880160-f2ca-40f9-8780-a29eb047251d",
                  "parentUUID": "59a90f59-7a10-4a9e-8402-63d4c601a7ff",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "returns the correct data when an invalid routing number error is passed",
                  "fullTitle": "profile utils createCNPDirectDepositAnalyticsDataObject returns the correct data when an invalid routing number error is passed",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var eventDataObject = (0, _util.createCNPDirectDepositAnalyticsDataObject)(_disabilityCompensations.default.updates.errors.invalidRoutingNumber);\n(0, _chai.expect)(eventDataObject).to.deep.equal(invalidRoutingNumberDataObject);",
                  "err": {},
                  "uuid": "e7a1c46e-53ea-4fe2-893d-dec82199bc32",
                  "parentUUID": "59a90f59-7a10-4a9e-8402-63d4c601a7ff",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "returns the correct data when a payment restriction indicators error is passed",
                  "fullTitle": "profile utils createCNPDirectDepositAnalyticsDataObject returns the correct data when a payment restriction indicators error is passed",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var eventDataObject = (0, _util.createCNPDirectDepositAnalyticsDataObject)(_disabilityCompensations.default.updates.errors.paymentRestrictionsPresent);\n(0, _chai.expect)(eventDataObject).to.deep.equal(paymentRestrictionIndicatorsDataObject);",
                  "err": {},
                  "uuid": "088c9663-7979-4a08-9429-33f8810cb4a4",
                  "parentUUID": "59a90f59-7a10-4a9e-8402-63d4c601a7ff",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "20877e86-4ca2-40cc-9a85-e02ed459f1b0",
                "32a6503a-33da-4ed9-8984-44605d98c6c7",
                "01eea493-2380-437d-af1e-a76f68719e8b",
                "a1a24769-e197-43a7-82d9-bba134c00f89",
                "68ec015e-223d-4da7-99f5-761daded8305",
                "502ceb0f-776a-468a-ae2c-75b28b565107",
                "c5f73dd9-76d5-495f-ae5d-61e9d590399f",
                "df880160-f2ca-40f9-8780-a29eb047251d",
                "e7a1c46e-53ea-4fe2-893d-dec82199bc32",
                "088c9663-7979-4a08-9429-33f8810cb4a4"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 5,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "b7aeb118-c618-4c12-9d03-41b58d61f6c8",
              "title": "PaymentInformation error parsing methods",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/profile/tests/util/index.unit.spec.js",
              "file": "/src/applications/personalization/profile/tests/util/index.unit.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "hasRoutingNumberFlaggedError returns true on error",
                  "fullTitle": "profile utils PaymentInformation error parsing methods hasRoutingNumberFlaggedError returns true on error",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)((0, _util.hasRoutingNumberFlaggedError)(_disabilityCompensations.default.updates.errors.routingNumberFlagged.errors)).to.equal(true);",
                  "err": {},
                  "uuid": "852cf98a-d485-4791-927d-f67777c7b37b",
                  "parentUUID": "b7aeb118-c618-4c12-9d03-41b58d61f6c8",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "hasAccountFlaggedError returns true on error",
                  "fullTitle": "profile utils PaymentInformation error parsing methods hasAccountFlaggedError returns true on error",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)((0, _util.hasAccountFlaggedError)(_disabilityCompensations.default.updates.errors.accountNumberFlagged.errors)).to.equal(true);",
                  "err": {},
                  "uuid": "5a9a0cef-ec07-49cd-b949-a51e227e907e",
                  "parentUUID": "b7aeb118-c618-4c12-9d03-41b58d61f6c8",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "hasInvalidHomePhoneNumberError returns false if text does not contain night phone",
                  "fullTitle": "profile utils PaymentInformation error parsing methods hasInvalidHomePhoneNumberError returns false if text does not contain night phone",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var errors = _disabilityCompensations.default.updates.errors.generic.errors;\n(0, _chai.expect)((0, _util.hasInvalidHomePhoneNumberError)(errors)).to.not.be.ok;",
                  "err": {},
                  "uuid": "840d266d-94aa-4722-ae15-4bd55f06286e",
                  "parentUUID": "b7aeb118-c618-4c12-9d03-41b58d61f6c8",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return false with multiple errors with text not matching desired error conditions",
                  "fullTitle": "profile utils PaymentInformation error parsing methods should return false with multiple errors with text not matching desired error conditions",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var errors = _disabilityCompensations.default.updates.errors.generic.errors;\n(0, _chai.expect)(!!(0, _util.hasInvalidHomePhoneNumberError)([].concat(_toConsumableArray(errors), _toConsumableArray(_disabilityCompensations.default.updates.errors.invalidAccountNumber.errors)))).to.be.not.ok;",
                  "err": {},
                  "uuid": "6e253af6-9559-4539-beec-d29a099ec235",
                  "parentUUID": "b7aeb118-c618-4c12-9d03-41b58d61f6c8",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "852cf98a-d485-4791-927d-f67777c7b37b",
                "5a9a0cef-ec07-49cd-b949-a51e227e907e",
                "840d266d-94aa-4722-ae15-4bd55f06286e",
                "6e253af6-9559-4539-beec-d29a099ec235"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "4b8145b8-e44e-47ee-b674-11ad7b2b7aa1",
          "title": "formatMultiSelectAndText utility",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/profile/tests/util/personalInformationUtils.unit.spec.js",
          "file": "/src/applications/personalization/profile/tests/util/personalInformationUtils.unit.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "returns single pronouns",
              "fullTitle": "formatMultiSelectAndText utility returns single pronouns",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, _chai.expect)((0, _personalInformationUtils.formatMultiSelectAndText)({\n  pronouns: ['heHimHis']\n}, 'pronouns')).to.equal('He/him/his');",
              "err": {},
              "uuid": "34f4f23e-49d9-4338-a3e4-a79b588ecbc8",
              "parentUUID": "4b8145b8-e44e-47ee-b674-11ad7b2b7aa1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "returns semicolon separated pronouns",
              "fullTitle": "formatMultiSelectAndText utility returns semicolon separated pronouns",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, _chai.expect)((0, _personalInformationUtils.formatMultiSelectAndText)({\n  pronouns: ['heHimHis', 'theyThemTheirs']\n}, 'pronouns')).to.equal('He/him/his; They/them/theirs');",
              "err": {},
              "uuid": "bc585a39-8bbc-4c92-94e7-6b56a764982d",
              "parentUUID": "4b8145b8-e44e-47ee-b674-11ad7b2b7aa1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "returns pronounsNotListedText value",
              "fullTitle": "formatMultiSelectAndText utility returns pronounsNotListedText value",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, _chai.expect)((0, _personalInformationUtils.formatMultiSelectAndText)({\n  pronounsNotListedText: 'custom pronouns'\n}, 'pronouns')).to.equal('custom pronouns');",
              "err": {},
              "uuid": "13f0ae51-b576-4cf2-bf15-fb08b3ed8a07",
              "parentUUID": "4b8145b8-e44e-47ee-b674-11ad7b2b7aa1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "returns semicolon separated list including pronounsNotListedText",
              "fullTitle": "formatMultiSelectAndText utility returns semicolon separated list including pronounsNotListedText",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, _chai.expect)((0, _personalInformationUtils.formatMultiSelectAndText)({\n  pronouns: ['heHimHis'],\n  pronounsNotListedText: 'custom pronouns'\n}, 'pronouns')).to.equal('He/him/his; custom pronouns');",
              "err": {},
              "uuid": "87a68829-415c-4a19-9a5b-38b060488879",
              "parentUUID": "4b8145b8-e44e-47ee-b674-11ad7b2b7aa1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "returns null if fields do not have values",
              "fullTitle": "formatMultiSelectAndText utility returns null if fields do not have values",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, _chai.expect)((0, _personalInformationUtils.formatMultiSelectAndText)({\n  pronouns: [],\n  pronounsNotListedText: ''\n}, 'pronouns')).to.be.null;",
              "err": {},
              "uuid": "ce9123b4-dc93-4dd2-9901-bc7f2e48d79a",
              "parentUUID": "4b8145b8-e44e-47ee-b674-11ad7b2b7aa1",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "34f4f23e-49d9-4338-a3e4-a79b588ecbc8",
            "bc585a39-8bbc-4c92-94e7-6b56a764982d",
            "13f0ae51-b576-4cf2-bf15-fb08b3ed8a07",
            "87a68829-415c-4a19-9a5b-38b060488879",
            "ce9123b4-dc93-4dd2-9901-bc7f2e48d79a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "95d5ef00-6388-40b5-ace5-3fe872d42692",
          "title": "createNotListedTextKey utility",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/profile/tests/util/personalInformationUtils.unit.spec.js",
          "file": "/src/applications/personalization/profile/tests/util/personalInformationUtils.unit.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "returns the properly formatted text string",
              "fullTitle": "createNotListedTextKey utility returns the properly formatted text string",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, _chai.expect)((0, _personalInformationUtils.createNotListedTextKey)('pronouns')).to.equal('pronounsNotListedText');",
              "err": {},
              "uuid": "b83f5d76-cfe3-4211-8563-00d92c454be4",
              "parentUUID": "95d5ef00-6388-40b5-ace5-3fe872d42692",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "b83f5d76-cfe3-4211-8563-00d92c454be4"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "fc151956-763d-4aa0-9bd9-d1b8bfdfa7f0",
          "title": "createBooleanSchemaPropertiesFromOptions utility",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/profile/tests/util/personalInformationUtils.unit.spec.js",
          "file": "/src/applications/personalization/profile/tests/util/personalInformationUtils.unit.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "returns properly formatted object with boolean type properties",
              "fullTitle": "createBooleanSchemaPropertiesFromOptions utility returns properly formatted object with boolean type properties",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var input = {\n  one: 'test1',\n  two: 'test2',\n  three: 'test3'\n};\nvar output = {\n  one: {\n    type: 'boolean'\n  },\n  two: {\n    type: 'boolean'\n  },\n  three: {\n    type: 'boolean'\n  }\n};\n(0, _chai.expect)((0, _personalInformationUtils.createBooleanSchemaPropertiesFromOptions)(input)).to.deep.equal(output);",
              "err": {},
              "uuid": "7220f0fb-f05f-4922-8a9d-5fb39f1128a5",
              "parentUUID": "fc151956-763d-4aa0-9bd9-d1b8bfdfa7f0",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "7220f0fb-f05f-4922-8a9d-5fb39f1128a5"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "3c676b00-1d5a-412c-af15-d3636539b44f",
          "title": "createUiTitlePropertiesFromOptions utility",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/profile/tests/util/personalInformationUtils.unit.spec.js",
          "file": "/src/applications/personalization/profile/tests/util/personalInformationUtils.unit.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "returns properly formatted object with ui:title properties",
              "fullTitle": "createUiTitlePropertiesFromOptions utility returns properly formatted object with ui:title properties",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var input = {\n  one: 'test1',\n  two: 'test2',\n  three: 'test3'\n};\nvar output = {\n  one: {\n    'ui:title': 'test1'\n  },\n  two: {\n    'ui:title': 'test2'\n  },\n  three: {\n    'ui:title': 'test3'\n  }\n};\n(0, _chai.expect)((0, _personalInformationUtils.createUiTitlePropertiesFromOptions)(input)).to.deep.equal(output);",
              "err": {},
              "uuid": "0308d656-ae31-40b0-b150-4de5f5646b57",
              "parentUUID": "3c676b00-1d5a-412c-af15-d3636539b44f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "0308d656-ae31-40b0-b150-4de5f5646b57"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "9d24d7a0-eb33-4bb4-b089-761768e40463",
          "title": "formatIndividualLabel utility",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/profile/tests/util/personalInformationUtils.unit.spec.js",
          "file": "/src/applications/personalization/profile/tests/util/personalInformationUtils.unit.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "returns properly formatted string for \"preferNotToAnswer\" ",
              "fullTitle": "formatIndividualLabel utility returns properly formatted string for \"preferNotToAnswer\" ",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var key = 'preferNotToAnswer';\nvar label = 'Prefer not to answer (un-checks other options)';\nvar output = 'Prefer not to answer';\n(0, _chai.expect)((0, _personalInformationUtils.formatIndividualLabel)(key, label)).to.equal(output);",
              "err": {},
              "uuid": "c43934e4-8c00-46d0-a332-188236bddc28",
              "parentUUID": "9d24d7a0-eb33-4bb4-b089-761768e40463",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "returns label unformatted for standard keys\" ",
              "fullTitle": "formatIndividualLabel utility returns label unformatted for standard keys\" ",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var key = 'test';\nvar label = 'test string here';\nvar output = 'test string here';\n(0, _chai.expect)((0, _personalInformationUtils.formatIndividualLabel)(key, label)).to.equal(output);",
              "err": {},
              "uuid": "efd6964e-a0fa-475f-b161-508785610790",
              "parentUUID": "9d24d7a0-eb33-4bb4-b089-761768e40463",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "c43934e4-8c00-46d0-a332-188236bddc28",
            "efd6964e-a0fa-475f-b161-508785610790"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "a1497b4a-e6b4-4950-bc48-9ca0fedacd15",
          "title": "renderDOB utility",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/profile/tests/util/personalInformationUtils.unit.spec.js",
          "file": "/src/applications/personalization/profile/tests/util/personalInformationUtils.unit.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "returns formatted date for a valid date string",
              "fullTitle": "renderDOB utility returns formatted date for a valid date string",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var dob = '1986-05-06';\nvar expected = 'May 6, 1986';\n(0, _chai.expect)((0, _personalInformationUtils.renderDOB)(dob)).to.equal(expected);",
              "err": {},
              "uuid": "3d604c21-7bb0-4293-bda8-c787887b62e9",
              "parentUUID": "a1497b4a-e6b4-4950-bc48-9ca0fedacd15",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "returns NOT_SET_TEXT when dob is undefined, null, or an empty string",
              "fullTitle": "renderDOB utility returns NOT_SET_TEXT when dob is undefined, null, or an empty string",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var NOT_SET_TEXT = 'This information is not available right now.';\nvar dob;\n(0, _chai.expect)((0, _personalInformationUtils.renderDOB)(dob)).to.equal(NOT_SET_TEXT);\ndob = null;\n(0, _chai.expect)((0, _personalInformationUtils.renderDOB)(dob)).to.equal(NOT_SET_TEXT);\ndob = '';\n(0, _chai.expect)((0, _personalInformationUtils.renderDOB)(dob)).to.equal(NOT_SET_TEXT);",
              "err": {},
              "uuid": "be34668d-a68d-433a-b4fb-17346e99681f",
              "parentUUID": "a1497b4a-e6b4-4950-bc48-9ca0fedacd15",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "3d604c21-7bb0-4293-bda8-c787887b62e9",
            "be34668d-a68d-433a-b4fb-17346e99681f"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "9631008f-18f4-420b-8b14-c660d1bdff46",
          "title": "<WelcomeVAContactAdditionalInfo />",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/review-information/tests/unit/components/WelcomeVAContactAdditionalInfo.unit.spec.js",
          "file": "/src/applications/personalization/review-information/tests/unit/components/WelcomeVAContactAdditionalInfo.unit.spec.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"<WelcomeVAContactAdditionalInfo />\"",
              "fullTitle": "<WelcomeVAContactAdditionalInfo /> \"before each\" hook in \"<WelcomeVAContactAdditionalInfo />\"",
              "timedOut": false,
              "duration": 1,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "wrapper = (0, _enzyme.shallow)(_WelcomeVAContactAdditionalInfo.default);",
              "err": {},
              "uuid": "074c56d6-7b41-492c-a72a-8ef76f26cf4c",
              "parentUUID": "9631008f-18f4-420b-8b14-c660d1bdff46",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": "renders as expected",
              "fullTitle": "<WelcomeVAContactAdditionalInfo /> renders as expected",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, _chai.expect)(wrapper.exists()).to.be.true;",
              "err": {},
              "uuid": "7477081e-f415-4220-9bf3-2cdf516247f7",
              "parentUUID": "9631008f-18f4-420b-8b14-c660d1bdff46",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "renders a <va-additional-info> component",
              "fullTitle": "<WelcomeVAContactAdditionalInfo /> renders a <va-additional-info> component",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var additionalInfo = wrapper.find('va-additional-info');\n(0, _chai.expect)(additionalInfo.exists()).to.be.true;\n(0, _chai.expect)(additionalInfo.prop('trigger')).to.equal('Which benefits and services does VA use this contact information for?');",
              "err": {},
              "uuid": "40178404-a094-4244-a86e-2ec2807def71",
              "parentUUID": "9631008f-18f4-420b-8b14-c660d1bdff46",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "renders the correct paragraph texts",
              "fullTitle": "<WelcomeVAContactAdditionalInfo /> renders the correct paragraph texts",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var paragraphs = wrapper.find('p');\n(0, _chai.expect)(paragraphs).to.have.lengthOf(3);\n(0, _chai.expect)(paragraphs.at(0).text()).to.include('We use this information to contact you about these VA benefits and services:');\n(0, _chai.expect)(paragraphs.at(1).text()).to.include('If you’re enrolled in VA health care, we also use this information to send you these:');\n(0, _chai.expect)(paragraphs.at(2).text()).to.include('Find out how to change your contact information for other VA benefits');",
              "err": {},
              "uuid": "2dfc66ed-51dd-4e05-9968-5ab626a4d3d9",
              "parentUUID": "9631008f-18f4-420b-8b14-c660d1bdff46",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "renders the correct unordered lists and list items",
              "fullTitle": "<WelcomeVAContactAdditionalInfo /> renders the correct unordered lists and list items",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var lists = wrapper.find('ul');\n(0, _chai.expect)(lists).to.have.lengthOf(2);\nvar firstListItems = lists.at(0).find('li');\n(0, _chai.expect)(firstListItems).to.have.lengthOf(4);\n(0, _chai.expect)(firstListItems.at(0).text()).to.equal('Disability compensation');\n(0, _chai.expect)(firstListItems.at(1).text()).to.equal('Pension benefits');\n(0, _chai.expect)(firstListItems.at(2).text()).to.equal('Claims and appeals');\n(0, _chai.expect)(firstListItems.at(3).text()).to.equal('Veteran Readiness and Employment (VR&E)');\nvar secondListItems = lists.at(1).find('li');\n(0, _chai.expect)(secondListItems).to.have.lengthOf(4);\n(0, _chai.expect)(secondListItems.at(0).text()).to.equal('Appointment reminders');\n(0, _chai.expect)(secondListItems.at(1).text()).to.equal('Communications from your VA medical center');\n(0, _chai.expect)(secondListItems.at(2).text()).to.equal('Lab and test results');\n(0, _chai.expect)(secondListItems.at(3).text()).to.include('Prescription medicines (we send your medicines to your mailing address)');",
              "err": {},
              "uuid": "e834defb-67bf-4894-99e5-9654ccf2c1ab",
              "parentUUID": "9631008f-18f4-420b-8b14-c660d1bdff46",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "renders a link with the correct href and text",
              "fullTitle": "<WelcomeVAContactAdditionalInfo /> renders a link with the correct href and text",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var link = wrapper.find('a');\n(0, _chai.expect)(link.exists()).to.be.true;\n(0, _chai.expect)(link.prop('href')).to.equal('/resources/change-your-address-on-file-with-va/#change-your-address-by-contact');\n(0, _chai.expect)(link.text()).to.include('Find out how to change your contact information for other VA benefits');",
              "err": {},
              "uuid": "32d37711-0647-4969-87dd-4118bfc803eb",
              "parentUUID": "9631008f-18f4-420b-8b14-c660d1bdff46",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "7477081e-f415-4220-9bf3-2cdf516247f7",
            "40178404-a094-4244-a86e-2ec2807def71",
            "2dfc66ed-51dd-4e05-9968-5ab626a4d3d9",
            "e834defb-67bf-4894-99e5-9654ccf2c1ab",
            "32d37711-0647-4969-87dd-4118bfc803eb"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "73859823-0122-4f53-9966-bcc187c4f44a",
          "title": "formConfig",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/review-information/tests/unit/config/form.unit.spec.js",
          "file": "/src/applications/personalization/review-information/tests/unit/config/form.unit.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "is an object",
              "fullTitle": "formConfig is an object",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, _chai.expect)(_form.default).to.be.an('object');",
              "err": {},
              "uuid": "9e39929b-b66f-4b68-8342-ca610288daa0",
              "parentUUID": "73859823-0122-4f53-9966-bcc187c4f44a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "has a rootUrl property",
              "fullTitle": "formConfig has a rootUrl property",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, _chai.expect)(_form.default).to.have.property('rootUrl');\n(0, _chai.expect)(_form.default.rootUrl).to.be.a('string');",
              "err": {},
              "uuid": "710d0b71-6b62-4753-8ceb-cc7a1bf52465",
              "parentUUID": "73859823-0122-4f53-9966-bcc187c4f44a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "has a formId property",
              "fullTitle": "formConfig has a formId property",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, _chai.expect)(_form.default).to.have.property('formId');\n(0, _chai.expect)(_form.default.formId).to.be.a('string');",
              "err": {},
              "uuid": "2c50b88e-ecb7-47de-9e7c-32714c391136",
              "parentUUID": "73859823-0122-4f53-9966-bcc187c4f44a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "has a chapters property",
              "fullTitle": "formConfig has a chapters property",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, _chai.expect)(_form.default).to.have.property('chapters');\n(0, _chai.expect)(_form.default.chapters).to.be.an('object');",
              "err": {},
              "uuid": "62f9c5c9-8a06-43da-8d38-e68b53f23a51",
              "parentUUID": "73859823-0122-4f53-9966-bcc187c4f44a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [
            {
              "uuid": "6f627e28-df05-4018-9570-8bfe30f9aef9",
              "title": "chapters",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/review-information/tests/unit/config/form.unit.spec.js",
              "file": "/src/applications/personalization/review-information/tests/unit/config/form.unit.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "contains the infoPage chapter",
                  "fullTitle": "formConfig chapters contains the infoPage chapter",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)(_form.default.chapters).to.have.property('infoPage');\n(0, _chai.expect)(_form.default.chapters.infoPage).to.be.an('object');",
                  "err": {},
                  "uuid": "57f79fe7-e890-4136-b5ec-0323a4c2fc7b",
                  "parentUUID": "6f627e28-df05-4018-9570-8bfe30f9aef9",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "contains pages in the infoPage chapter",
                  "fullTitle": "formConfig chapters contains pages in the infoPage chapter",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var infoPage = _form.default.chapters.infoPage;\n(0, _chai.expect)(infoPage).to.have.property('pages');\n(0, _chai.expect)(infoPage.pages).to.be.an('object');",
                  "err": {},
                  "uuid": "dc97edcc-3d3c-4a1a-9528-75133ffc5773",
                  "parentUUID": "6f627e28-df05-4018-9570-8bfe30f9aef9",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "includes a contact information page",
                  "fullTitle": "formConfig chapters includes a contact information page",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var contactInfoPage = _form.default.chapters.infoPage.pages.confirmContactInfo;\n(0, _chai.expect)(contactInfoPage).to.exist;\n(0, _chai.expect)(contactInfoPage).to.be.an('object');\n(0, _chai.expect)(contactInfoPage).to.have.property('CustomPage');",
                  "err": {},
                  "uuid": "0ead0a13-8676-4cd6-a425-ecc78cb7c326",
                  "parentUUID": "6f627e28-df05-4018-9570-8bfe30f9aef9",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "57f79fe7-e890-4136-b5ec-0323a4c2fc7b",
                "dc97edcc-3d3c-4a1a-9528-75133ffc5773",
                "0ead0a13-8676-4cd6-a425-ecc78cb7c326"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "50fba0c2-2648-444d-ac11-a9b55b9c4110",
              "title": "contact information page",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/review-information/tests/unit/config/form.unit.spec.js",
              "file": "/src/applications/personalization/review-information/tests/unit/config/form.unit.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "has an onNavForward method",
                  "fullTitle": "formConfig contact information page has an onNavForward method",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)(contactInfoPage).to.have.property('onNavForward');\n(0, _chai.expect)(contactInfoPage.onNavForward).to.be.a('function');",
                  "err": {},
                  "uuid": "860c8fbf-5b00-4b19-9c0d-d8f520e81533",
                  "parentUUID": "50fba0c2-2648-444d-ac11-a9b55b9c4110",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "onNavForward navigates to the confirmation path",
                  "fullTitle": "formConfig contact information page onNavForward navigates to the confirmation path",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var mockGoPath = function mockGoPath(path) {\n  return (0, _chai.expect)(path).to.equal('confirmation');\n};\ncontactInfoPage.onNavForward({\n  goPath: mockGoPath\n});",
                  "err": {},
                  "uuid": "7122f2b2-37b3-4b1a-8c8c-29a38bbf30dc",
                  "parentUUID": "50fba0c2-2648-444d-ac11-a9b55b9c4110",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "has an onNavBack method",
                  "fullTitle": "formConfig contact information page has an onNavBack method",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)(contactInfoPage).to.have.property('onNavBack');\n(0, _chai.expect)(contactInfoPage.onNavBack).to.be.a('function');",
                  "err": {},
                  "uuid": "8c7c6326-6914-45bc-97b9-c9249df0c123",
                  "parentUUID": "50fba0c2-2648-444d-ac11-a9b55b9c4110",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "onNavBack redirects to the My VA page",
                  "fullTitle": "formConfig contact information page onNavBack redirects to the My VA page",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var originalLocation = window.location;\ncontactInfoPage.onNavBack();\n(0, _chai.expect)(window.location).to.equal('https://dev.va.gov/my-va/');\nglobal.window.location = originalLocation;",
                  "err": {},
                  "uuid": "26c607bf-2526-462a-a1fa-cb075521de45",
                  "parentUUID": "50fba0c2-2648-444d-ac11-a9b55b9c4110",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "860c8fbf-5b00-4b19-9c0d-d8f520e81533",
                "7122f2b2-37b3-4b1a-8c8c-29a38bbf30dc",
                "8c7c6326-6914-45bc-97b9-c9249df0c123",
                "26c607bf-2526-462a-a1fa-cb075521de45"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "40b13a18-0d66-46b4-90f6-804b97449dbd",
              "title": "submit function",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/review-information/tests/unit/config/form.unit.spec.js",
              "file": "/src/applications/personalization/review-information/tests/unit/config/form.unit.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "exists and returns a promise with a confirmation number",
                  "fullTitle": "formConfig submit function exists and returns a promise with a confirmation number",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
                  "err": {},
                  "uuid": "a39505af-9b46-486d-92de-2c96b32a102d",
                  "parentUUID": "40b13a18-0d66-46b4-90f6-804b97449dbd",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "a39505af-9b46-486d-92de-2c96b32a102d"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "34a96f72-a35e-4049-be7f-f66a00829cd0",
              "title": "footerContent",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/review-information/tests/unit/config/form.unit.spec.js",
              "file": "/src/applications/personalization/review-information/tests/unit/config/form.unit.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "exists as a property",
                  "fullTitle": "formConfig footerContent exists as a property",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)(_form.default).to.have.property('footerContent');\n(0, _chai.expect)(_form.default.footerContent).to.be.a('function');",
                  "err": {},
                  "uuid": "1a876b9e-38c4-458d-9045-f244307d652f",
                  "parentUUID": "34a96f72-a35e-4049-be7f-f66a00829cd0",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "1a876b9e-38c4-458d-9045-f244307d652f"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "4ba62d9b-0f41-4cc7-8977-e09f5216528a",
              "title": "savedFormMessages",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/review-information/tests/unit/config/form.unit.spec.js",
              "file": "/src/applications/personalization/review-information/tests/unit/config/form.unit.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "includes a notFound message",
                  "fullTitle": "formConfig savedFormMessages includes a notFound message",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)(_form.default.savedFormMessages).to.have.property('notFound');\n(0, _chai.expect)(_form.default.savedFormMessages.notFound).to.be.a('string');",
                  "err": {},
                  "uuid": "ee347a82-3a8c-4bf6-9686-f0a1cb64fbe9",
                  "parentUUID": "4ba62d9b-0f41-4cc7-8977-e09f5216528a",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "includes a noAuth message",
                  "fullTitle": "formConfig savedFormMessages includes a noAuth message",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)(_form.default.savedFormMessages).to.have.property('noAuth');\n(0, _chai.expect)(_form.default.savedFormMessages.noAuth).to.be.a('string');",
                  "err": {},
                  "uuid": "59373125-455d-4937-9d25-f3649290e385",
                  "parentUUID": "4ba62d9b-0f41-4cc7-8977-e09f5216528a",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "ee347a82-3a8c-4bf6-9686-f0a1cb64fbe9",
                "59373125-455d-4937-9d25-f3649290e385"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "065958f2-0684-4bfd-81fb-6581873ee216",
              "title": "formOptions",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/review-information/tests/unit/config/form.unit.spec.js",
              "file": "/src/applications/personalization/review-information/tests/unit/config/form.unit.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "includes a noTopNav property",
                  "fullTitle": "formConfig formOptions includes a noTopNav property",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)(_form.default.formOptions).to.have.property('noTopNav');\n(0, _chai.expect)(_form.default.formOptions.noTopNav).to.be.true;",
                  "err": {},
                  "uuid": "21d7089d-4c15-4202-a322-9aa9569b0e3c",
                  "parentUUID": "065958f2-0684-4bfd-81fb-6581873ee216",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "21d7089d-4c15-4202-a322-9aa9569b0e3c"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            }
          ],
          "passes": [
            "9e39929b-b66f-4b68-8342-ca610288daa0",
            "710d0b71-6b62-4753-8ceb-cc7a1bf52465",
            "2c50b88e-ecb7-47de-9e7c-32714c391136",
            "62f9c5c9-8a06-43da-8d38-e68b53f23a51"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "ecbe86c5-0981-4b63-afdd-eb4c25966c32",
          "title": "ConfirmationPage",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/review-information/tests/unit/containers/ConfirmationPage.unit.spec.jsx",
          "file": "/src/applications/personalization/review-information/tests/unit/containers/ConfirmationPage.unit.spec.jsx",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"ConfirmationPage\"",
              "fullTitle": "ConfirmationPage \"before each\" hook in \"ConfirmationPage\"",
              "timedOut": false,
              "duration": 1,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "wrapper = (0, _enzyme.mount)(/*#__PURE__*/_react.default.createElement(_ConfirmationPage.default, null));",
              "err": {},
              "uuid": "56fdbff6-ce4d-4078-9da6-a0403cf4a9dc",
              "parentUUID": "ecbe86c5-0981-4b63-afdd-eb4c25966c32",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after each\" hook in \"ConfirmationPage\"",
              "fullTitle": "ConfirmationPage \"after each\" hook in \"ConfirmationPage\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "if (wrapper) {\n  wrapper.unmount();\n}\n(0, _react2.cleanup)();",
              "err": {},
              "uuid": "2c60f7a0-739c-43dc-a0ff-9360613b148c",
              "parentUUID": "ecbe86c5-0981-4b63-afdd-eb4c25966c32",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "renders as expected",
              "fullTitle": "ConfirmationPage renders as expected",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, _chai.expect)(wrapper.exists()).to.be.true;",
              "err": {},
              "uuid": "d5827ad4-e3c4-42f9-9f85-613880ac3774",
              "parentUUID": "ecbe86c5-0981-4b63-afdd-eb4c25966c32",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "contains the correct alert content",
              "fullTitle": "ConfirmationPage contains the correct alert content",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var alert = wrapper.find('va-alert');\n(0, _chai.expect)(alert.exists()).to.be.true;\n(0, _chai.expect)(alert.prop('status')).to.equal('success');\n(0, _chai.expect)(alert.find('h2').text()).to.equal('Contact information added to your profile');",
              "err": {},
              "uuid": "8b68f651-e00f-430a-b2b5-f231d4e36947",
              "parentUUID": "ecbe86c5-0981-4b63-afdd-eb4c25966c32",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "contains the correct informational messages",
              "fullTitle": "ConfirmationPage contains the correct informational messages",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var alert = wrapper.find('va-alert');\nvar paragraphs = alert.find('p');\n(0, _chai.expect)(paragraphs).to.have.lengthOf(2);\n(0, _chai.expect)(paragraphs.at(0).text()).to.include('If you apply for VA benefits');\n(0, _chai.expect)(paragraphs.at(1).text()).to.include('You can change your email and text notification settings');",
              "err": {},
              "uuid": "ea8af86d-8125-474c-9072-c2932d87c254",
              "parentUUID": "ecbe86c5-0981-4b63-afdd-eb4c25966c32",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "renders \"Go to your notification settings\" link correctly",
              "fullTitle": "ConfirmationPage renders \"Go to your notification settings\" link correctly",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var notificationLink = wrapper.find('va-link-action').at(0);\n(0, _chai.expect)(notificationLink.exists()).to.be.true;\n(0, _chai.expect)(notificationLink.prop('href')).to.equal('/profile/notifications/');\n(0, _chai.expect)(notificationLink.prop('text')).to.equal('Go to your notification settings in your VA.gov profile');",
              "err": {},
              "uuid": "a6b86017-ce2d-4392-a4cd-4472c1183cca",
              "parentUUID": "ecbe86c5-0981-4b63-afdd-eb4c25966c32",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "renders \"Go back to My VA\" link correctly",
              "fullTitle": "ConfirmationPage renders \"Go back to My VA\" link correctly",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var myVaLink = wrapper.find('va-link-action').at(1);\n(0, _chai.expect)(myVaLink.exists()).to.be.true;\n(0, _chai.expect)(myVaLink.prop('href')).to.equal('/my-va/');\n(0, _chai.expect)(myVaLink.prop('text')).to.equal('Go back to My VA');",
              "err": {},
              "uuid": "56bea907-ecd8-4733-ac7c-07b77a69eaf1",
              "parentUUID": "ecbe86c5-0981-4b63-afdd-eb4c25966c32",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "renders \"Go back to your profile\" link correctly",
              "fullTitle": "ConfirmationPage renders \"Go back to your profile\" link correctly",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var profileLink = wrapper.find('va-link-action').at(2);\n(0, _chai.expect)(profileLink.exists()).to.be.true;\n(0, _chai.expect)(profileLink.prop('href')).to.equal('/profile/');\n(0, _chai.expect)(profileLink.prop('text')).to.equal('Go back to your profile');",
              "err": {},
              "uuid": "4b41c51a-513e-40d7-9861-8c14868de403",
              "parentUUID": "ecbe86c5-0981-4b63-afdd-eb4c25966c32",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "d5827ad4-e3c4-42f9-9f85-613880ac3774",
            "8b68f651-e00f-430a-b2b5-f231d4e36947",
            "ea8af86d-8125-474c-9072-c2932d87c254",
            "a6b86017-ce2d-4392-a4cd-4472c1183cca",
            "56bea907-ecd8-4733-ac7c-07b77a69eaf1",
            "4b41c51a-513e-40d7-9861-8c14868de403"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 4,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "449c079d-f4fb-4903-bbca-67d0777a8429",
          "title": "<ManageDependentsApp />",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/view-dependents/manage-dependents/tests/unit/ManageDependentsApp.unit.spec.jsx",
          "file": "/src/applications/personalization/view-dependents/manage-dependents/tests/unit/ManageDependentsApp.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "renders a form",
              "fullTitle": "<ManageDependentsApp /> renders a form",
              "timedOut": false,
              "duration": 0,
              "state": "pending",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": true,
              "context": null,
              "code": "",
              "err": {},
              "uuid": "6a3e5d30-7d47-4ca8-93f1-31ed79bff425",
              "parentUUID": "449c079d-f4fb-4903-bbca-67d0777a8429",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "fills out the form",
              "fullTitle": "<ManageDependentsApp /> fills out the form",
              "timedOut": false,
              "duration": 0,
              "state": "pending",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": true,
              "context": null,
              "code": "",
              "err": {},
              "uuid": "de82c71e-d71d-4756-97ef-e846c24602d8",
              "parentUUID": "449c079d-f4fb-4903-bbca-67d0777a8429",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [],
          "pending": [
            "6a3e5d30-7d47-4ca8-93f1-31ed79bff425",
            "de82c71e-d71d-4756-97ef-e846c24602d8"
          ],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "9e580be4-9a01-4a4d-8ca8-6cecbec2af80",
          "title": "View Disabilities actions: fetchAllDependents",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/view-dependents/tests/actions/Index.unit.spec.jsx",
          "file": "/src/applications/personalization/view-dependents/tests/actions/Index.unit.spec.jsx",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"View Disabilities actions: fetchAllDependents\"",
              "fullTitle": "View Disabilities actions: fetchAllDependents \"before each\" hook in \"View Disabilities actions: fetchAllDependents\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "return (0, _helpers.mockFetch)();",
              "err": {},
              "uuid": "1611c8ac-ae76-4502-98cd-9cc9332fb43f",
              "parentUUID": "9e580be4-9a01-4a4d-8ca8-6cecbec2af80",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": "should fetch rated disabilities",
              "fullTitle": "View Disabilities actions: fetchAllDependents should fetch rated disabilities",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, _helpers.setFetchJSONResponse)(global.fetch.onCall(0), _helpers2.dependents);\nvar makeTheFetch = (0, _actions.fetchAllDependents)();\nvar dispatchSpy = _sinon.default.spy();\nvar dispatch = function dispatch(action) {\n  dispatchSpy(action);\n  (0, _chai.expect)(dispatchSpy.firstCall.args[0].type).to.equal(_actions.FETCH_ALL_DEPENDENTS_SUCCESS);\n  (0, _chai.expect)(dispatchSpy.firstCall.args[1].errors).to.equal(undefined);\n};\nmakeTheFetch(dispatch);",
              "err": {},
              "uuid": "4bfd5728-c7d2-42d8-b80c-ba8421176956",
              "parentUUID": "9e580be4-9a01-4a4d-8ca8-6cecbec2af80",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should handle an error returned",
              "fullTitle": "View Disabilities actions: fetchAllDependents should handle an error returned",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var response = {\n  errors: [{\n    code: '500',\n    status: 'some status'\n  }]\n};\n(0, _helpers.setFetchJSONResponse)(global.fetch.onCall(0), response);\nvar thunk = (0, _actions.fetchAllDependents)();\nvar dispatchSpy = _sinon.default.spy();\nvar dispatch = function dispatch(action) {\n  dispatchSpy(action);\n  (0, _chai.expect)(dispatchSpy.calledOnce).to.be.true;\n  (0, _chai.expect)(dispatchSpy.firstCall.args[0].type).to.equal(_actions.FETCH_ALL_DEPENDENTS_FAILED);\n  (0, _chai.expect)(dispatchSpy.firstCall.args[1]).to.equal(response);\n};\nthunk(dispatch);",
              "err": {},
              "uuid": "574689ee-498a-4818-9933-5d0bc310416a",
              "parentUUID": "9e580be4-9a01-4a4d-8ca8-6cecbec2af80",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "4bfd5728-c7d2-42d8-b80c-ba8421176956",
            "574689ee-498a-4818-9933-5d0bc310416a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "b680dafe-8ea7-4636-b6b5-9201a6a24dd1",
          "title": "<ViewDependentsHeader />",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/view-dependents/tests/components/ViewDependentsHeader.unit.spec.jsx",
          "file": "/src/applications/personalization/view-dependents/tests/components/ViewDependentsHeader.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Should Render",
              "fullTitle": "<ViewDependentsHeader /> Should Render",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var wrapper = (0, _enzyme.shallow)(/*#__PURE__*/_react.default.createElement(_ViewDependentsHeader.default, null));\n(0, _chai.expect)(wrapper.contains(/*#__PURE__*/_react.default.createElement(\"h1\", null, _util.PAGE_TITLE))).to.equal(true);\nwrapper.unmount();",
              "err": {},
              "uuid": "c0441f04-0d74-4108-bb31-41520187de07",
              "parentUUID": "b680dafe-8ea7-4636-b6b5-9201a6a24dd1",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "c0441f04-0d74-4108-bb31-41520187de07"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "fc47455d-eb1d-4d65-8799-6240d5ce90eb",
          "title": "<ViewDependentsList />",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/view-dependents/tests/components/ViewDependentsList.unit.spec.jsx",
          "file": "/src/applications/personalization/view-dependents/tests/components/ViewDependentsList.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should render the component with the provided dependents",
              "fullTitle": "<ViewDependentsList /> should render the component with the provided dependents",
              "timedOut": false,
              "duration": 17,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
              "err": {},
              "uuid": "c048b1e7-1549-489b-9ae8-47233425fd19",
              "parentUUID": "fc47455d-eb1d-4d65-8799-6240d5ce90eb",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "c048b1e7-1549-489b-9ae8-47233425fd19"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 17,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "026a86a3-5e69-4b7c-8df1-3c3befa45309",
          "title": "<ViewDependentsListItem />",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/view-dependents/tests/components/ViewDependentsListItem.unit.spec.jsx",
          "file": "/src/applications/personalization/view-dependents/tests/components/ViewDependentsListItem.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Should Render with all props visible",
              "fullTitle": "<ViewDependentsListItem /> Should Render with all props visible",
              "timedOut": false,
              "duration": 4,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
              "err": {},
              "uuid": "66af1a01-f765-4cf4-964e-bfa07d8d7066",
              "parentUUID": "026a86a3-5e69-4b7c-8df1-3c3befa45309",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "66af1a01-f765-4cf4-964e-bfa07d8d7066"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 4,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "35092623-814b-42fe-8cf2-b86f1928d28d",
          "title": "<ViewDependentsSidebar />",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/view-dependents/tests/components/ViewDependentsSidebar.unit.spec.jsx",
          "file": "/src/applications/personalization/view-dependents/tests/components/ViewDependentsSidebar.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should render",
              "fullTitle": "<ViewDependentsSidebar /> should render",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var wrapper = (0, _enzyme.shallow)(/*#__PURE__*/_react.default.createElement(_ViewDependentsSidebar.default, null));\n(0, _chai.expect)(wrapper.find('div.medium-screen:vads-u-padding-left--4')).to.exist;\nwrapper.unmount();",
              "err": {},
              "uuid": "16800e69-d45a-4750-a277-ed6161e48784",
              "parentUUID": "35092623-814b-42fe-8cf2-b86f1928d28d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "16800e69-d45a-4750-a277-ed6161e48784"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "686c9c64-11c5-4962-8e73-67cec9a5e6a2",
          "title": "<ViewDependentsSidebar />",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/view-dependents/tests/components/ViewDependentsSidebarBlock.unit.spec.jsx",
          "file": "/src/applications/personalization/view-dependents/tests/components/ViewDependentsSidebarBlock.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should render",
              "fullTitle": "<ViewDependentsSidebar /> should render",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var mockHeader = 'Here is the header';\nvar mockContent = /*#__PURE__*/_react.default.createElement(\"div\", null, \"Here is the content\");\nvar wrapper = (0, _enzyme.shallow)(/*#__PURE__*/_react.default.createElement(_ViewDependentsSidebarBlock.default, {\n  heading: mockHeader,\n  content: mockContent\n}));\n(0, _chai.expect)(wrapper.find('div.vads-u-padding-bottom--1p5')).to.exist;\nwrapper.unmount();",
              "err": {},
              "uuid": "365abcd5-fd68-43dc-9611-b2cf0c49be13",
              "parentUUID": "686c9c64-11c5-4962-8e73-67cec9a5e6a2",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "365abcd5-fd68-43dc-9611-b2cf0c49be13"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "cb959f05-30b7-4810-9780-246dcd4226fb",
          "title": "<ViewDependentsApp />",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/view-dependents/tests/containers/ViewDependentsApp.unit.spec.jsx",
          "file": "/src/applications/personalization/view-dependents/tests/containers/ViewDependentsApp.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should render a ViewDependentsLayout",
              "fullTitle": "<ViewDependentsApp /> should render a ViewDependentsLayout",
              "timedOut": false,
              "duration": 3,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var fetchAllDependentsMock = _sinon.default.spy();\nvar wrapper = (0, _enzyme.shallow)(/*#__PURE__*/_react.default.createElement(_ViewDependentsApp.ViewDependentsApp, {\n  fetchAllDependents: fetchAllDependentsMock\n}, /*#__PURE__*/_react.default.createElement(\"div\", null, \"App Children\")));\n(0, _chai.expect)(wrapper.find('ViewDependentsLayout').length).to.equal(1);\nwrapper.unmount();",
              "err": {},
              "uuid": "343cd48e-5753-4f70-ae10-80e6d487576b",
              "parentUUID": "cb959f05-30b7-4810-9780-246dcd4226fb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should render a RequiredLoginView",
              "fullTitle": "<ViewDependentsApp /> should render a RequiredLoginView",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var fetchAllDependentsMock = _sinon.default.spy();\nvar wrapper = (0, _enzyme.shallow)(/*#__PURE__*/_react.default.createElement(_ViewDependentsApp.ViewDependentsApp, {\n  fetchAllDependents: fetchAllDependentsMock\n}, /*#__PURE__*/_react.default.createElement(\"div\", null, \"App Children\")));\n(0, _chai.expect)(wrapper.find('RequiredLoginView').length).to.equal(1);\nwrapper.unmount();",
              "err": {},
              "uuid": "c4dd5df7-62c0-4736-aff5-93c83ccc40e7",
              "parentUUID": "cb959f05-30b7-4810-9780-246dcd4226fb",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "343cd48e-5753-4f70-ae10-80e6d487576b",
            "c4dd5df7-62c0-4736-aff5-93c83ccc40e7"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 4,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "227ed098-761f-4bb9-b716-5afec8688c77",
          "title": "<ViewDependentsLayout />",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/view-dependents/tests/layouts/ViewDependentsLayout.unit.spec.jsx",
          "file": "/src/applications/personalization/view-dependents/tests/layouts/ViewDependentsLayout.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should render",
              "fullTitle": "<ViewDependentsLayout /> should render",
              "timedOut": false,
              "duration": 8,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
              "err": {},
              "uuid": "0837f6e2-ad9c-4800-b1d5-3066cea20604",
              "parentUUID": "227ed098-761f-4bb9-b716-5afec8688c77",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should show an info alert when there are no dependents",
              "fullTitle": "<ViewDependentsLayout /> should show an info alert when there are no dependents",
              "timedOut": false,
              "duration": 19,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
              "err": {},
              "uuid": "1ce178b4-6e2f-4329-aea9-9b4693ad6601",
              "parentUUID": "227ed098-761f-4bb9-b716-5afec8688c77",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should show an error alert when there is a 500 error",
              "fullTitle": "<ViewDependentsLayout /> should show an error alert when there is a 500 error",
              "timedOut": false,
              "duration": 21,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
              "err": {},
              "uuid": "32b1ebd5-5f0f-4e2f-a94e-8062d3e570f4",
              "parentUUID": "227ed098-761f-4bb9-b716-5afec8688c77",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "0837f6e2-ad9c-4800-b1d5-3066cea20604",
            "1ce178b4-6e2f-4329-aea9-9b4693ad6601",
            "32b1ebd5-5f0f-4e2f-a94e-8062d3e570f4"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 48,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "5c332618-fbc0-41e0-8156-07d3e07e08d4",
          "title": "<ViewDependentsLists />",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/view-dependents/tests/layouts/ViewDependentsLists.unit.spec.jsx",
          "file": "/src/applications/personalization/view-dependents/tests/layouts/ViewDependentsLists.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should render",
              "fullTitle": "<ViewDependentsLists /> should render",
              "timedOut": false,
              "duration": 4,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
              "err": {},
              "uuid": "683ae3a5-513a-4302-8bbb-e78c8305701b",
              "parentUUID": "5c332618-fbc0-41e0-8156-07d3e07e08d4",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "683ae3a5-513a-4302-8bbb-e78c8305701b"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 4,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "a51cf2d7-aa3f-4ac7-aa05-99e7a28b8ad9",
          "title": "View Dependents splitPersons Utility",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/view-dependents/tests/util/index.unit.spec.jsx",
          "file": "/src/applications/personalization/view-dependents/tests/util/index.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should return a populated object with two arrays",
              "fullTitle": "View Dependents splitPersons Utility should return a populated object with two arrays",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var data = (0, _index.splitPersons)(mockData);\n(0, _chai.expect)(data.onAward).to.exist;\n(0, _chai.expect)(data.notOnAward).to.exist;\n(0, _chai.expect)(data.notOnAward[0].awardIndicator).to.equal('N');\n(0, _chai.expect)(data.notOnAward[1].awardIndicator).to.equal('N');",
              "err": {},
              "uuid": "e677e602-45e9-4cbd-8504-9821c3064374",
              "parentUUID": "a51cf2d7-aa3f-4ac7-aa05-99e7a28b8ad9",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "e677e602-45e9-4cbd-8504-9821c3064374"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "7acf5366-64e4-464c-85f4-700c86446007",
          "title": "View Dependents isServerError Utility",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/view-dependents/tests/util/index.unit.spec.jsx",
          "file": "/src/applications/personalization/view-dependents/tests/util/index.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should return true on a 500 error",
              "fullTitle": "View Dependents isServerError Utility should return true on a 500 error",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var errorCheck = (0, _index.isServerError)(500);\n(0, _chai.expect)(errorCheck).to.be.true;",
              "err": {},
              "uuid": "7e0e7e87-bd9e-4559-b406-543a430b562c",
              "parentUUID": "7acf5366-64e4-464c-85f4-700c86446007",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "7e0e7e87-bd9e-4559-b406-543a430b562c"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "9f01a211-e76d-4263-a9ee-8f96a70417b4",
          "title": "View Dependents isClientError Utility",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/view-dependents/tests/util/index.unit.spec.jsx",
          "file": "/src/applications/personalization/view-dependents/tests/util/index.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should return true on a 400 error",
              "fullTitle": "View Dependents isClientError Utility should return true on a 400 error",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var errorCheck = (0, _index.isClientError)(400);\n(0, _chai.expect)(errorCheck).to.be.true;",
              "err": {},
              "uuid": "80e9a21e-ad3a-4aa5-9045-328c62b747e7",
              "parentUUID": "9f01a211-e76d-4263-a9ee-8f96a70417b4",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "80e9a21e-ad3a-4aa5-9045-328c62b747e7"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "e8dd81c4-efe6-4499-8256-182994646e00",
          "title": "Mask utility",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/view-dependents/tests/util/index.unit.spec.jsx",
          "file": "/src/applications/personalization/view-dependents/tests/util/index.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should mask all but the last 4 of the SSN",
              "fullTitle": "Mask utility should mask all but the last 4 of the SSN",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var tree = _testUtils.default.renderIntoDocument((0, _index.mask)('1234-56-7890'));\nvar dom = (0, _reactDom.findDOMNode)(tree);\nvar result = \"<span aria-hidden=\\\"true\\\">\\u25CF\\u25CF\\u25CF\\u2013\\u25CF\\u25CF\\u20137890</span><span class=\\\"sr-only\\\">ending with 7 8 9 0</span>\";\n(0, _chai.expect)(dom.innerHTML).to.equal(result);",
              "err": {},
              "uuid": "079cc933-c759-44ec-bcd1-b38ce4b4c010",
              "parentUUID": "e8dd81c4-efe6-4499-8256-182994646e00",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "079cc933-c759-44ec-bcd1-b38ce4b4c010"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "d2042e96-e9db-4380-a79a-0dcff9d90813",
          "title": "View Representative",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/view-representative/tests/actions/index.unit.spec.js",
          "file": "/src/applications/personalization/view-representative/tests/actions/index.unit.spec.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"View Representative\"",
              "fullTitle": "View Representative \"before each\" hook in \"View Representative\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "return (0, _helpers.mockFetch)();",
              "err": {},
              "uuid": "3ecd9322-bd28-4d07-acd3-85080507a286",
              "parentUUID": "d2042e96-e9db-4380-a79a-0dcff9d90813",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": "should get current Reppresentative",
              "fullTitle": "View Representative should get current Reppresentative",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, _helpers.setFetchJSONResponse)(global.fetch.onCall(0), _helpers2.currentRepresentative);\nvar thunk = (0, _actions.fetchRepresentative)();\nvar dispatchSpy = _sinon.default.spy();\nvar dispatch = function dispatch(action) {\n  dispatchSpy(action);\n  if (dispatchSpy.callCount === 2) {\n    (0, _chai.expect)(dispatchSpy.secondCall.args[0].type).to.equal(_actions.FETCH_REPRESENTATIVE_SUCCESS);\n  }\n};\nthunk(dispatch);",
              "err": {},
              "uuid": "7d07358e-c6a5-468b-90a4-80db27f7e9e4",
              "parentUUID": "d2042e96-e9db-4380-a79a-0dcff9d90813",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should handle an error",
              "fullTitle": "View Representative should handle an error",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var response = {\n  errors: [{\n    code: '500',\n    status: 'Some status'\n  }]\n};\n(0, _helpers.setFetchJSONResponse)(global.fetch.onCall(0), response);\nvar thunk = (0, _actions.fetchRepresentative)();\nvar dispatchSpy = _sinon.default.spy();\nvar dispatch = function dispatch(action) {\n  dispatchSpy(action);\n  if (dispatchSpy.callCount === 2) {\n    (0, _chai.expect)(dispatchSpy.secondCall.args[0].type).to.equal(_actions.FETCH_REPRESENTATIVE_FAILED);\n  }\n};\nthunk(dispatch);",
              "err": {},
              "uuid": "c07c3c64-cf79-473d-9d4a-7ac683bfb63c",
              "parentUUID": "d2042e96-e9db-4380-a79a-0dcff9d90813",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "7d07358e-c6a5-468b-90a4-80db27f7e9e4",
            "c07c3c64-cf79-473d-9d4a-7ac683bfb63c"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "10af6e9b-5937-464a-82a2-519059c0babe",
          "title": "View Representative reducer",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/personalization/view-representative/tests/reducers/index.unit.spec.js",
          "file": "/src/applications/personalization/view-representative/tests/reducers/index.unit.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should return initial state",
              "fullTitle": "View Representative reducer should return initial state",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var state = _reducers.default.representative(initialState, {});\n(0, _chai.expect)(state.loading).to.be.true;\n(0, _chai.expect)(state.representative).to.equal(null);",
              "err": {},
              "uuid": "bd4cdcd4-a819-48eb-932c-99cf4ed762a7",
              "parentUUID": "10af6e9b-5937-464a-82a2-519059c0babe",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should handle a successful call for fetching payments",
              "fullTitle": "View Representative reducer should handle a successful call for fetching payments",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var state = _reducers.default.representative(initialState, {\n  type: 'FETCH_REPRESENTATIVE_SUCCESS',\n  response: _helpers.currentRepresentative\n});\n(0, _chai.expect)(state.loading).to.be.false;\n(0, _chai.expect)(state.representative.length).to.be.greaterThan(0);",
              "err": {},
              "uuid": "25173aa0-40c2-45ea-bbd9-f6d3404792e8",
              "parentUUID": "10af6e9b-5937-464a-82a2-519059c0babe",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should handle an error response from the server",
              "fullTitle": "View Representative reducer should handle an error response from the server",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var state = _reducers.default.representative(initialState, {\n  type: 'FETCH_REPRESENTATIVE_FAILED',\n  response: [{\n    code: '500',\n    status: 'failed'\n  }]\n});\n(0, _chai.expect)(state.loading).to.be.false;\n(0, _chai.expect)(state.representative).to.equal(null);\n(0, _chai.expect)(state.error).to.not.equal(null);",
              "err": {},
              "uuid": "0658c959-2699-465c-940a-6c0f81e797bf",
              "parentUUID": "10af6e9b-5937-464a-82a2-519059c0babe",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "bd4cdcd4-a819-48eb-932c-99cf4ed762a7",
            "25173aa0-40c2-45ea-bbd9-f6d3404792e8",
            "0658c959-2699-465c-940a-6c0f81e797bf"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 10000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.7.3"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "undefined_2025-03-03T221349641Z",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "min",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "id": "default",
        "consoleReporter": "min",
        "reportDir": "mocha/results",
        "reportFilename": "undefined_2025-03-03T221349641Z",
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}