{
  "stats": {
    "suites": 220,
    "tests": 478,
    "passes": 477,
    "pending": 1,
    "failures": 0,
    "start": "2025-03-03T22:41:47.515Z",
    "end": "2025-03-03T22:41:57.268Z",
    "duration": 9753,
    "testsRegistered": 479,
    "passPercent": 99.7907949790795,
    "pendingPercent": 0.20876826722338201,
    "other": 0,
    "hasOther": false,
    "skipped": 1,
    "hasSkipped": true
  },
  "results": [
    {
      "uuid": "bac9afa1-06f4-43a9-aa90-1eb006ea6cc8",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [
        {
          "title": "\"before each\" hook: beforeEach in \"{root}\"",
          "fullTitle": "\"before each\" hook: beforeEach in \"{root}\"",
          "timedOut": false,
          "duration": 2,
          "state": null,
          "speed": null,
          "pass": false,
          "fail": false,
          "pending": false,
          "context": null,
          "code": "cov_5fzq6lsur().f[20]++;\ncov_5fzq6lsur().s[70]++;\nsetupJSDom();\ncov_5fzq6lsur().s[71]++;\nresetFetch();\ncov_5fzq6lsur().s[72]++;\ncleanupStorage();\ncov_5fzq6lsur().s[73]++;\nif (isStressTest == 'false') {\n  cov_5fzq6lsur().b[12][0]++;\n  cov_5fzq6lsur().s[74]++;\n  checkAllowList(this);\n} else {\n  cov_5fzq6lsur().b[12][1]++;\n}\ncov_5fzq6lsur().s[75]++;\nif ((cov_5fzq6lsur().b[14][0]++, process.env.CI) || (cov_5fzq6lsur().b[14][1]++, ['trace', 'debug'].includes(process.env.LOG_LEVEL))) {\n  cov_5fzq6lsur().b[13][0]++;\n  cov_5fzq6lsur().s[76]++;\n  console.log('running: ', this.currentTest.file.slice(this.currentTest.file.indexOf('src')));\n} else {\n  cov_5fzq6lsur().b[13][1]++;\n}",
          "err": {},
          "uuid": "3b275c7d-f57d-4838-9f45-033fd0b2fc65",
          "parentUUID": "bac9afa1-06f4-43a9-aa90-1eb006ea6cc8",
          "isHook": true,
          "skipped": false
        },
        {
          "title": "\"before each\" hook in \"{root}\"",
          "fullTitle": "\"before each\" hook in \"{root}\"",
          "timedOut": false,
          "duration": 0,
          "state": null,
          "speed": null,
          "pass": false,
          "fail": false,
          "pending": false,
          "context": null,
          "code": "restoreConsole = suppressErrorOutput();",
          "err": {},
          "uuid": "3c8d6b0b-a301-4392-87bd-dfd44336a017",
          "parentUUID": "bac9afa1-06f4-43a9-aa90-1eb006ea6cc8",
          "isHook": true,
          "skipped": false
        }
      ],
      "afterHooks": [
        {
          "title": "\"after each\" hook: afterEach in \"{root}\"",
          "fullTitle": "\"after each\" hook: afterEach in \"{root}\"",
          "timedOut": false,
          "duration": 0,
          "state": null,
          "speed": null,
          "pass": false,
          "fail": false,
          "pending": false,
          "context": null,
          "code": "cov_5fzq6lsur().f[21]++;\ncov_5fzq6lsur().s[77]++;\ncleanupStorage();\ncov_5fzq6lsur().s[78]++;\nflushPromises();",
          "err": {},
          "uuid": "3f92579a-8707-4f3c-aaef-365b1edbe1d0",
          "parentUUID": "bac9afa1-06f4-43a9-aa90-1eb006ea6cc8",
          "isHook": true,
          "skipped": false
        },
        {
          "title": "\"after each\" hook in \"{root}\"",
          "fullTitle": "\"after each\" hook in \"{root}\"",
          "timedOut": false,
          "duration": 0,
          "state": null,
          "speed": null,
          "pass": false,
          "fail": false,
          "pending": false,
          "context": null,
          "code": "(0, _pure.cleanup)();",
          "err": {},
          "uuid": "4485a336-1c4b-4288-8dec-1bffea590903",
          "parentUUID": "bac9afa1-06f4-43a9-aa90-1eb006ea6cc8",
          "isHook": true,
          "skipped": false
        },
        {
          "title": "\"after each\" hook in \"{root}\"",
          "fullTitle": "\"after each\" hook in \"{root}\"",
          "timedOut": false,
          "duration": 0,
          "state": null,
          "speed": null,
          "pass": false,
          "fail": false,
          "pending": false,
          "context": null,
          "code": "await cleanup();",
          "err": {},
          "uuid": "8f97487e-2d11-423e-862f-04551c42f516",
          "parentUUID": "bac9afa1-06f4-43a9-aa90-1eb006ea6cc8",
          "isHook": true,
          "skipped": false
        },
        {
          "title": "\"after each\" hook in \"{root}\"",
          "fullTitle": "\"after each\" hook in \"{root}\"",
          "timedOut": false,
          "duration": 0,
          "state": null,
          "speed": null,
          "pass": false,
          "fail": false,
          "pending": false,
          "context": null,
          "code": "restoreConsole()",
          "err": {},
          "uuid": "cd2277a2-7937-447e-8326-fcc6126e4bd3",
          "parentUUID": "bac9afa1-06f4-43a9-aa90-1eb006ea6cc8",
          "isHook": true,
          "skipped": false
        }
      ],
      "tests": [
        {
          "title": "should return \"/\" when pathname is \"/verify/\" and hasSession() is false",
          "fullTitle": "should return \"/\" when pathname is \"/verify/\" and hasSession() is false",
          "timedOut": false,
          "duration": 0,
          "state": null,
          "speed": null,
          "pass": false,
          "fail": false,
          "pending": false,
          "context": null,
          "code": "setup({\n  path: '/verify/'\n});\n_sinon.default.stub(authUtilities, 'hasSession').returns(false);\n(0, _chai.expect)(authUtilities.createAndStoreReturnUrl()).to.equal('/');\n(0, _chai.expect)(sessionStorage.getItem(_constants2.AUTHN_SETTINGS.RETURN_URL)).to.equal('/');\nauthUtilities.hasSession.restore();",
          "err": {},
          "uuid": "becc739e-2a0d-4755-a319-258cd6d0ee59",
          "parentUUID": "bac9afa1-06f4-43a9-aa90-1eb006ea6cc8",
          "isHook": false,
          "skipped": true
        }
      ],
      "suites": [
        {
          "uuid": "cafa9c25-669a-46bc-a278-d39ef2c54c13",
          "title": "resetAddressValidation",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/platform/user/profile/vap-svc/tests/actions/transactions.unit.spec.js",
          "file": "/src/platform/user/profile/vap-svc/tests/actions/transactions.unit.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "creates the correct action",
              "fullTitle": "resetAddressValidation creates the correct action",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var action = (0, _transactions.resetAddressValidation)();\n(0, _chai.expect)(action).to.deep.equal({\n  type: _transactions.ADDRESS_VALIDATION_RESET\n});",
              "err": {},
              "uuid": "6644eec1-03c3-4aa2-80a0-5faa3c1618c5",
              "parentUUID": "cafa9c25-669a-46bc-a278-d39ef2c54c13",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "6644eec1-03c3-4aa2-80a0-5faa3c1618c5"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "ade9d32f-c6f6-496e-919d-2de36dffd75b",
          "title": "validateAddress",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/platform/user/profile/vap-svc/tests/actions/transactions.unit.spec.js",
          "file": "/src/platform/user/profile/vap-svc/tests/actions/transactions.unit.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "verify return data",
              "fullTitle": "validateAddress verify return data",
              "timedOut": false,
              "duration": 1005,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var dispatch = _sinon.default.spy();\nreturn (0, _transactions.validateAddress)(route, method, fieldName, payload, analyticsSectionName)(dispatch).then(function () {\n  (0, _chai.expect)(dispatch.firstCall.args[0].type).to.equal(_transactions.ADDRESS_VALIDATION_INITIALIZE);\n  (0, _chai.expect)(dispatch.secondCall.args[0].type).to.equal(_transactions.ADDRESS_VALIDATION_CONFIRM);\n  (0, _chai.expect)(dispatch.secondCall.args[0].suggestedAddresses).to.deep.equal([{\n    addressMetaData: {\n      confidenceScore: 100,\n      addressType: 'Domestic',\n      deliveryPointValidation: 'UNDELIVERABLE'\n    },\n    addressLine1: '400 N 65th St',\n    addressType: 'DOMESTIC',\n    city: 'Seattle',\n    countryName: 'United States',\n    countryCodeIso3: 'USA',\n    countyCode: '53033',\n    countyName: 'King',\n    stateCode: 'WA',\n    zipCode: '98103',\n    zipCodeSuffix: '5252',\n    type: 'DOMESTIC',\n    addressPou: 'RESIDENCE/CHOICE',\n    id: 123\n  }, {\n    addressMetaData: {\n      confidenceScore: 100,\n      addressType: 'Domestic',\n      deliveryPointValidation: 'CONFIRMED',\n      residentialDeliveryIndicator: 'RESIDENTIAL'\n    },\n    addressLine1: '400 NW 65th St',\n    addressType: 'DOMESTIC',\n    city: 'Seattle',\n    countryName: 'United States',\n    countryCodeIso3: 'USA',\n    countyCode: '53033',\n    countyName: 'King',\n    stateCode: 'WA',\n    zipCode: '98117',\n    zipCodeSuffix: '5026',\n    type: 'DOMESTIC',\n    addressPou: 'RESIDENCE/CHOICE',\n    id: 123\n  }, {\n    addressMetaData: {\n      confidenceScore: 98,\n      addressType: 'Domestic',\n      deliveryPointValidation: 'STREET_NUMBER_VALIDATED_BUT_MISSING_UNIT_NUMBER',\n      residentialDeliveryIndicator: 'RESIDENTIAL'\n    },\n    addressLine1: '400 NE 65th St',\n    addressType: 'DOMESTIC',\n    city: 'Seattle',\n    countryName: 'United States',\n    countryCodeIso3: 'USA',\n    countyCode: '53033',\n    countyName: 'King',\n    stateCode: 'WA',\n    zipCode: '98115',\n    zipCodeSuffix: '6463',\n    type: 'DOMESTIC',\n    addressPou: 'RESIDENCE/CHOICE',\n    id: 123\n  }]);\n});",
              "err": {},
              "uuid": "542efbde-0822-43ee-839e-cb625bf073a3",
              "parentUUID": "ade9d32f-c6f6-496e-919d-2de36dffd75b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "542efbde-0822-43ee-839e-cb625bf073a3"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1005,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "32d1a21d-49ce-45fd-b31e-2a335cd6be65",
          "title": "updateValidationKeyAndSave",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/platform/user/profile/vap-svc/tests/actions/transactions.unit.spec.js",
          "file": "/src/platform/user/profile/vap-svc/tests/actions/transactions.unit.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "verify return data",
              "fullTitle": "updateValidationKeyAndSave verify return data",
              "timedOut": false,
              "duration": 1003,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var dispatch = _sinon.default.spy();\nreturn (0, _transactions.updateValidationKeyAndSave)(route, method, fieldName, payload, analyticsSectionName)(dispatch).then(function () {\n  (0, _chai.expect)(dispatch.firstCall.args[0].type).to.equal(_transactions.ADDRESS_VALIDATION_UPDATE);\n});",
              "err": {},
              "uuid": "34c51b81-9184-4735-9be7-38e48dc128e5",
              "parentUUID": "32d1a21d-49ce-45fd-b31e-2a335cd6be65",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "34c51b81-9184-4735-9be7-38e48dc128e5"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1003,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "775535e1-3969-457b-af59-70febc230d3a",
          "title": "updateFormFieldWithSchema",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/platform/user/profile/vap-svc/tests/actions/ui.unit.spec.js",
          "file": "/src/platform/user/profile/vap-svc/tests/actions/ui.unit.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "creates the correct action",
              "fullTitle": "updateFormFieldWithSchema creates the correct action",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var schema = {\n  type: 'object',\n  properties: {\n    city: {\n      type: 'string'\n    }\n  }\n};\nvar uiSchema = {\n  city: {\n    'ui:title': 'City'\n  }\n};\nvar action = actions.updateFormFieldWithSchema('address', {\n  city: 'sf',\n  state: 'ca'\n}, schema, uiSchema);\n(0, _chai.expect)(action).to.deep.equal({\n  type: actions.UPDATE_PROFILE_FORM_FIELD,\n  field: 'address',\n  newState: {\n    value: {\n      city: 'sf',\n      state: 'ca'\n    },\n    formSchema: schema,\n    uiSchema: uiSchema\n  }\n});",
              "err": {},
              "uuid": "540df4b8-f8ff-44ea-9ca4-6d19a7386732",
              "parentUUID": "775535e1-3969-457b-af59-70febc230d3a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "540df4b8-f8ff-44ea-9ca4-6d19a7386732"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "11d4db90-40d7-4b15-b2c3-c8050ea3a07f",
          "title": "ADDRESS_VALIDATION_MESSAGES object",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/platform/user/profile/vap-svc/tests/addressValidationMessages.unit.spec.js",
          "file": "/src/platform/user/profile/vap-svc/tests/addressValidationMessages.unit.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "has a valid data object for each ADDRESS_VALIDATION_TYPE",
              "fullTitle": "ADDRESS_VALIDATION_MESSAGES object has a valid data object for each ADDRESS_VALIDATION_TYPE",
              "timedOut": false,
              "duration": 46,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var validationTypes = Object.values(_addressValidationMessages.ADDRESS_VALIDATION_TYPES);\nvalidationTypes.forEach(function (type) {\n  var messageData = _addressValidationMessages.ADDRESS_VALIDATION_MESSAGES[type];\n  var editSpy = _sinon.default.spy();\n  (0, _chai.expect)(_typeof(messageData)).to.equal('object');\n  (0, _chai.expect)(_typeof(messageData.headline)).to.equal('string');\n  var modalTextComponent = (0, _enzyme.mount)(/*#__PURE__*/_react.default.createElement(messageData.ModalText, {\n    editFunction: editSpy\n  }));\n  var button = modalTextComponent.find('button');\n  if ((button === null || button === void 0 ? void 0 : button.length) > 0) {\n    button.simulate('click');\n    (0, _chai.expect)(editSpy.called).to.be.true;\n  }\n  modalTextComponent.unmount();\n});",
              "err": {},
              "uuid": "faf32530-9bf8-4a70-8817-02e9a75b2813",
              "parentUUID": "11d4db90-40d7-4b15-b2c3-c8050ea3a07f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "faf32530-9bf8-4a70-8817-02e9a75b2813"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 46,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "9e18a906-14bd-4544-87de-b89aabb493e9",
          "title": "<ProfileInformationFieldController/>",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/platform/user/profile/vap-svc/tests/components/ContactInformationField.unit.spec.jsx",
          "file": "/src/platform/user/profile/vap-svc/tests/components/ContactInformationField.unit.spec.jsx",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"<ProfileInformationFieldController/>\"",
              "fullTitle": "<ProfileInformationFieldController/> \"before each\" hook in \"<ProfileInformationFieldController/>\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "props = {\n  analyticsSectionName: 'home-telephone',\n  clearErrors: function clearErrors() {},\n  data: {\n    someField: 'someFieldValue'\n  },\n  field: null,\n  fieldName: _constants.FIELD_NAMES.HOME_PHONE,\n  showEditView: false,\n  showValidationView: false,\n  showConfirmCancelModal: false,\n  hasUnsavedEdits: false,\n  isEmpty: false,\n  onAdd: function onAdd() {},\n  onEdit: function onEdit() {},\n  onCancel: function onCancel() {},\n  onChange: function onChange() {},\n  onChangeFormDataAndSchemas: function onChangeFormDataAndSchemas() {},\n  onDelete: function onDelete() {},\n  onSubmit: function onSubmit() {},\n  openModal: _sinon.default.spy(),\n  refreshTransaction: function refreshTransaction() {},\n  title: 'Some field',\n  transaction: null,\n  transactionRequest: null\n};",
              "err": {},
              "uuid": "51889318-27f0-4274-ac94-bf2641fb58fa",
              "parentUUID": "9e18a906-14bd-4544-87de-b89aabb493e9",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": "conditional render based on existence of data",
              "fullTitle": "<ProfileInformationFieldController/> conditional render based on existence of data",
              "timedOut": false,
              "duration": 11,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var isEmptyProps = _objectSpread(_objectSpread({}, props), {}, {\n  isEmpty: true\n});\ncomponent = _enzyme.default.shallow(/*#__PURE__*/_react.default.createElement(_ProfileInformationFieldController.ProfileInformationFieldController, isEmptyProps));\n(0, _chai.expect)(component.find('ProfileInformationView'), 'the ProfileInformationView was rendered').to.have.lengthOf(1);\n(0, _chai.expect)(component.html(), 'the add-button was rendered instead of the Content').to.contain('button');\ncomponent.unmount();",
              "err": {},
              "uuid": "cc3b4fbc-1977-402d-ad1a-af391280596d",
              "parentUUID": "9e18a906-14bd-4544-87de-b89aabb493e9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "renders the ProfileInformationEditView",
              "fullTitle": "<ProfileInformationFieldController/> renders the ProfileInformationEditView",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "props.showEditView = true;\ncomponent = _enzyme.default.shallow(/*#__PURE__*/_react.default.createElement(_ProfileInformationFieldController.ProfileInformationFieldController, props));\n(0, _chai.expect)(component.find('Connect(ProfileInformationEditView)'), 'the ProfileInformationEditView was rendered').to.have.lengthOf(1);\ncomponent.unmount();",
              "err": {},
              "uuid": "b0f21283-f1b5-40ac-a15d-4e55bd85a52c",
              "parentUUID": "9e18a906-14bd-4544-87de-b89aabb493e9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "renders the ProfileInformationEditView when forceEditView is set",
              "fullTitle": "<ProfileInformationFieldController/> renders the ProfileInformationEditView when forceEditView is set",
              "timedOut": false,
              "duration": 3,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "props.forceEditView = true;\ncomponent = _enzyme.default.shallow(/*#__PURE__*/_react.default.createElement(_ProfileInformationFieldController.ProfileInformationFieldController, props));\n(0, _chai.expect)(component.find('Connect(ProfileInformationEditView)'), 'the ProfileInformationEditView was rendered').to.have.lengthOf(1);\ncomponent.unmount();",
              "err": {},
              "uuid": "bfbca47f-d4e4-40c0-96dc-21f40fde5dd4",
              "parentUUID": "9e18a906-14bd-4544-87de-b89aabb493e9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "renders the ProfileInformationView",
              "fullTitle": "<ProfileInformationFieldController/> renders the ProfileInformationView",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "component = _enzyme.default.shallow(/*#__PURE__*/_react.default.createElement(_ProfileInformationFieldController.ProfileInformationFieldController, props));\n(0, _chai.expect)(component.find('ProfileInformationView'), 'the ProfileInformationView was rendered').to.have.lengthOf(1);\ncomponent.unmount();",
              "err": {},
              "uuid": "1d0731ef-a837-46ba-a197-d659487bc204",
              "parentUUID": "9e18a906-14bd-4544-87de-b89aabb493e9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "hides the remove button",
              "fullTitle": "<ProfileInformationFieldController/> hides the remove button",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "component = _enzyme.default.shallow(/*#__PURE__*/_react.default.createElement(_ProfileInformationFieldController.ProfileInformationFieldController, _extends({}, props, {\n  isDeleteDisabled: true\n})));\n(0, _chai.expect)(component.find('.usa-button-secondary'), 'the remove button was not rendered').to.have.lengthOf(0);\ncomponent.unmount();",
              "err": {},
              "uuid": "c1c47500-72d0-4d83-ab96-a5c07e2e878f",
              "parentUUID": "9e18a906-14bd-4544-87de-b89aabb493e9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "calls the cancelCallback",
              "fullTitle": "<ProfileInformationFieldController/> calls the cancelCallback",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var cancelCallbackSpy = _sinon.default.spy();\nprops.forceEditView = true;\ncomponent = _enzyme.default.shallow(/*#__PURE__*/_react.default.createElement(_ProfileInformationFieldController.ProfileInformationFieldController, _extends({}, props, {\n  cancelCallback: cancelCallbackSpy\n})));\n(0, _chai.expect)(component.find('Connect(ProfileInformationEditView)'), 'the ProfileInformationEditView was rendered').to.have.lengthOf(1);\ncomponent.find('Connect(ProfileInformationEditView)').props().onCancel();\n(0, _chai.expect)(cancelCallbackSpy.calledOnce, 'cancelCallback called').to.be.true;\ncomponent.unmount();",
              "err": {},
              "uuid": "90c39942-dbca-46f6-923f-781837e5409f",
              "parentUUID": "9e18a906-14bd-4544-87de-b89aabb493e9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "calls the successCallback (non-address changes)",
              "fullTitle": "<ProfileInformationFieldController/> calls the successCallback (non-address changes)",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var successCallbackSpy = _sinon.default.spy();\nvar data = _objectSpread(_objectSpread({}, props), {}, {\n  forceEditView: true,\n  transactionRequest: {\n    isPending: true\n  },\n  successCallback: successCallbackSpy\n});\ncomponent = _enzyme.default.shallow(/*#__PURE__*/_react.default.createElement(_ProfileInformationFieldController.ProfileInformationFieldController, data));\n(0, _chai.expect)(component.find('Connect(ProfileInformationEditView)'), 'the ProfileInformationEditView was rendered').to.have.lengthOf(1);\ndata.transactionRequest = null; // non-address success\ncomponent.setProps(data);\n(0, _chai.expect)(successCallbackSpy.calledOnce, 'successCallback called').to.be.true;\ncomponent.unmount();",
              "err": {},
              "uuid": "2982e18f-34ad-4bd7-8136-4fd7c12177e5",
              "parentUUID": "9e18a906-14bd-4544-87de-b89aabb493e9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "calls the successCallback (address changes)",
              "fullTitle": "<ProfileInformationFieldController/> calls the successCallback (address changes)",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var successCallbackSpy = _sinon.default.spy();\nvar data = _objectSpread(_objectSpread({}, props), {}, {\n  showEditView: true,\n  forceEditView: true,\n  fieldName: _constants.FIELD_NAMES.MAILING_ADDRESS,\n  transaction: {\n    data: {\n      attributes: {\n        transactionStatus: ''\n      }\n    }\n  },\n  successCallback: successCallbackSpy\n});\ncomponent = _enzyme.default.shallow(/*#__PURE__*/_react.default.createElement(_ProfileInformationFieldController.ProfileInformationFieldController, data));\n(0, _chai.expect)(component.find('Connect(ProfileInformationEditView)'), 'the ProfileInformationEditView was rendered').to.have.lengthOf(1);\nvar newData = _objectSpread(_objectSpread({}, data), {}, {\n  showEditView: false,\n  // justClosedModal check\n  transaction: null,\n  showUpdateSuccessAlert: true // success check\n});\n// Address success callback\ncomponent.setProps(newData);\n(0, _chai.expect)(successCallbackSpy.calledOnce, 'successCallback called').to.be.true;\ncomponent.unmount();",
              "err": {},
              "uuid": "bf7d44d3-7eeb-4ba3-bf93-f2ddb74af97e",
              "parentUUID": "9e18a906-14bd-4544-87de-b89aabb493e9",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "cc3b4fbc-1977-402d-ad1a-af391280596d",
            "b0f21283-f1b5-40ac-a15d-4e55bd85a52c",
            "bfbca47f-d4e4-40c0-96dc-21f40fde5dd4",
            "1d0731ef-a837-46ba-a197-d659487bc204",
            "c1c47500-72d0-4d83-ab96-a5c07e2e878f",
            "90c39942-dbca-46f6-923f-781837e5409f",
            "2982e18f-34ad-4bd7-8136-4fd7c12177e5",
            "bf7d44d3-7eeb-4ba3-bf93-f2ddb74af97e"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 26,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "16ba6f9a-db57-40e5-8684-df2a3a841779",
          "title": "mapStateToProps",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/platform/user/profile/vap-svc/tests/components/ContactInformationField.unit.spec.jsx",
          "file": "/src/platform/user/profile/vap-svc/tests/components/ContactInformationField.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "8c3d1c02-cc5a-4f50-84b5-3f4c808238f6",
              "title": "#blockEditMode",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/platform/user/profile/vap-svc/tests/components/ContactInformationField.unit.spec.jsx",
              "file": "/src/platform/user/profile/vap-svc/tests/components/ContactInformationField.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should be false if no field is in edit mode",
                  "fullTitle": "mapStateToProps #blockEditMode should be false if no field is in edit mode",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var state = getBasicState();\nvar mappedProps = (0, _ProfileInformationFieldController.mapStateToProps)(state, {\n  fieldName: _constants.FIELD_NAMES.MOBILE_PHONE\n});\n(0, _chai.expect)(mappedProps.blockEditMode).to.be.false;",
                  "err": {},
                  "uuid": "fb0424a9-74c9-4553-836b-44b6036f8ddd",
                  "parentUUID": "8c3d1c02-cc5a-4f50-84b5-3f4c808238f6",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should be false if currently editing another field but no changes have been made yet",
                  "fullTitle": "mapStateToProps #blockEditMode should be false if currently editing another field but no changes have been made yet",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var state = getBasicState();\nstate.vapService.modal = 'homePhone';\nstate.vapService.hasUnsavedEdits = false;\nvar mappedProps = (0, _ProfileInformationFieldController.mapStateToProps)(state, {\n  fieldName: _constants.FIELD_NAMES.MOBILE_PHONE\n});\n(0, _chai.expect)(mappedProps.blockEditMode).to.be.false;",
                  "err": {},
                  "uuid": "64a481a6-242a-477a-b33d-1ec2861d7da4",
                  "parentUUID": "8c3d1c02-cc5a-4f50-84b5-3f4c808238f6",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should be true if currently editing another field and changes have been made",
                  "fullTitle": "mapStateToProps #blockEditMode should be true if currently editing another field and changes have been made",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var state = getBasicState();\nstate.vapService.modal = 'homePhone';\nstate.vapService.hasUnsavedEdits = true;\nvar mappedProps = (0, _ProfileInformationFieldController.mapStateToProps)(state, {\n  fieldName: _constants.FIELD_NAMES.MOBILE_PHONE\n});\n(0, _chai.expect)(mappedProps.blockEditMode).to.be.true;",
                  "err": {},
                  "uuid": "433e7d02-6155-42e9-80aa-6b84b46200b1",
                  "parentUUID": "8c3d1c02-cc5a-4f50-84b5-3f4c808238f6",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "fb0424a9-74c9-4553-836b-44b6036f8ddd",
                "64a481a6-242a-477a-b33d-1ec2861d7da4",
                "433e7d02-6155-42e9-80aa-6b84b46200b1"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "beed2280-6b83-41e2-ab93-98f1b5f2c8f7",
              "title": "#activeEditView",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/platform/user/profile/vap-svc/tests/components/ContactInformationField.unit.spec.jsx",
              "file": "/src/platform/user/profile/vap-svc/tests/components/ContactInformationField.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should be the field name of the field that is being edited",
                  "fullTitle": "mapStateToProps #activeEditView should be the field name of the field that is being edited",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var state = getBasicState();\nstate.vapService.modal = _constants.FIELD_NAMES.RESIDENTIAL_ADDRESS;\nvar mappedProps = (0, _ProfileInformationFieldController.mapStateToProps)(state, {\n  fieldName: _constants.FIELD_NAMES.MOBILE_PHONE\n});\n(0, _chai.expect)(mappedProps.activeEditView).to.equal(_constants.FIELD_NAMES.RESIDENTIAL_ADDRESS);",
                  "err": {},
                  "uuid": "dc76ab1c-876c-4d7f-bd8d-5f9a2c38a74b",
                  "parentUUID": "beed2280-6b83-41e2-ab93-98f1b5f2c8f7",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should be the field name of the address field that is being validated",
                  "fullTitle": "mapStateToProps #activeEditView should be the field name of the address field that is being validated",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var state = getBasicState();\nstate.vapService.modal = 'addressValidation';\nstate.vapService.addressValidation.addressValidationType = _constants.FIELD_NAMES.RESIDENTIAL_ADDRESS;\nvar mappedProps = (0, _ProfileInformationFieldController.mapStateToProps)(state, {\n  fieldName: _constants.FIELD_NAMES.MOBILE_PHONE\n});\n(0, _chai.expect)(mappedProps.activeEditView).to.equal(_constants.FIELD_NAMES.RESIDENTIAL_ADDRESS);",
                  "err": {},
                  "uuid": "3312b75c-ebc8-4783-8292-c4cd3fe36e04",
                  "parentUUID": "beed2280-6b83-41e2-ab93-98f1b5f2c8f7",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "dc76ab1c-876c-4d7f-bd8d-5f9a2c38a74b",
                "3312b75c-ebc8-4783-8292-c4cd3fe36e04"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "47cb3ca0-b67a-490f-896b-4706e3abdff9",
              "title": "#showValidationView",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/platform/user/profile/vap-svc/tests/components/ContactInformationField.unit.spec.jsx",
              "file": "/src/platform/user/profile/vap-svc/tests/components/ContactInformationField.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [],
              "suites": [
                {
                  "uuid": "a2ed0c33-8991-461e-bda5-9c452a558281",
                  "title": "when all the correct conditions are met",
                  "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/platform/user/profile/vap-svc/tests/components/ContactInformationField.unit.spec.jsx",
                  "file": "/src/platform/user/profile/vap-svc/tests/components/ContactInformationField.unit.spec.jsx",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "sets `showValidationView` to `true`",
                      "fullTitle": "mapStateToProps #showValidationView when all the correct conditions are met sets `showValidationView` to `true`",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "slow",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "var state = showValidationModalState();\nvar mappedProps = (0, _ProfileInformationFieldController.mapStateToProps)(state, {\n  fieldName: _constants.FIELD_NAMES.MAILING_ADDRESS\n});\n(0, _chai.expect)(mappedProps.showValidationView).to.be.true;",
                      "err": {},
                      "uuid": "3c5c999a-6272-4e0f-8f05-fadf4a038fff",
                      "parentUUID": "a2ed0c33-8991-461e-bda5-9c452a558281",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "3c5c999a-6272-4e0f-8f05-fadf4a038fff"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "0e428297-e7ed-4618-93bc-fb4b5a0fa59a",
                  "title": "when the address validation modal is not open",
                  "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/platform/user/profile/vap-svc/tests/components/ContactInformationField.unit.spec.jsx",
                  "file": "/src/platform/user/profile/vap-svc/tests/components/ContactInformationField.unit.spec.jsx",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "sets `showValidationView` to `false`",
                      "fullTitle": "mapStateToProps #showValidationView when the address validation modal is not open sets `showValidationView` to `false`",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "var state = showValidationModalState();\nstate.vapService.modal = 'notTheValidationModal';\nvar mappedProps = (0, _ProfileInformationFieldController.mapStateToProps)(state, {\n  fieldName: _constants.FIELD_NAMES.MAILING_ADDRESS\n});\n(0, _chai.expect)(mappedProps.showValidationView).to.be.false;",
                      "err": {},
                      "uuid": "46fc2fc4-84e9-4de0-b431-02d69a7f4432",
                      "parentUUID": "0e428297-e7ed-4618-93bc-fb4b5a0fa59a",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "46fc2fc4-84e9-4de0-b431-02d69a7f4432"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "a4be4812-92eb-4ad1-9b96-e58e1aa0d94b",
                  "title": "when this ProfileInformationFieldController's `fieldName` does not match address validation type",
                  "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/platform/user/profile/vap-svc/tests/components/ContactInformationField.unit.spec.jsx",
                  "file": "/src/platform/user/profile/vap-svc/tests/components/ContactInformationField.unit.spec.jsx",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "sets `showValidationView` to `false`",
                      "fullTitle": "mapStateToProps #showValidationView when this ProfileInformationFieldController's `fieldName` does not match address validation type sets `showValidationView` to `false`",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "slow",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "var state = showValidationModalState();\nvar mappedProps = (0, _ProfileInformationFieldController.mapStateToProps)(state, {\n  fieldName: _constants.FIELD_NAMES.RESIDENTIAL_ADDRESS\n});\n(0, _chai.expect)(mappedProps.showValidationView).to.be.false;",
                      "err": {},
                      "uuid": "50bce69a-7b09-422a-ad3c-2004d38a9e35",
                      "parentUUID": "a4be4812-92eb-4ad1-9b96-e58e1aa0d94b",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "50bce69a-7b09-422a-ad3c-2004d38a9e35"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                }
              ],
              "passes": [],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "bf61cc63-f9d1-48d8-9f2b-0e0b06624b1f",
          "title": "<VAPServiceEditModalActionButtons/>",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/platform/user/profile/vap-svc/tests/components/VAPServiceEditModalActionButtons.unit.spec.jsx",
          "file": "/src/platform/user/profile/vap-svc/tests/components/VAPServiceEditModalActionButtons.unit.spec.jsx",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"<VAPServiceEditModalActionButtons/>\"",
              "fullTitle": "<VAPServiceEditModalActionButtons/> \"before each\" hook in \"<VAPServiceEditModalActionButtons/>\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "props = {\n  transactionRequest: {},\n  onCancel: function onCancel() {},\n  onDelete: function onDelete() {},\n  title: 'TITLE_ATTRIBUTE',\n  deleteEnabled: true\n};",
              "err": {},
              "uuid": "0f989dae-b95d-48a2-818c-983541ae85cd",
              "parentUUID": "bf61cc63-f9d1-48d8-9f2b-0e0b06624b1f",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": "renders correctly when delete enabled",
              "fullTitle": "<VAPServiceEditModalActionButtons/> renders correctly when delete enabled",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var component = _enzyme.default.shallow(/*#__PURE__*/_react.default.createElement(_VAPServiceEditModalActionButtons.default, props, /*#__PURE__*/_react.default.createElement(\"p\", null, \"Children\")));\n(0, _chai.expect)(component.html(), 'renders children components').to.contain('Children');\n(0, _chai.expect)(component.find('va-icon'), 'renders delete icon').to.have.lengthOf(1);\n(0, _chai.expect)(component.find('.usa-button-secondary.button-link'), 'renders delete button').to.have.lengthOf(1);\ncomponent.unmount();",
              "err": {},
              "uuid": "e83d72e3-b1a1-4f5f-a533-b11a372c39b9",
              "parentUUID": "bf61cc63-f9d1-48d8-9f2b-0e0b06624b1f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "renders correctly when delete triggered",
              "fullTitle": "<VAPServiceEditModalActionButtons/> renders correctly when delete triggered",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var component = _enzyme.default.shallow(/*#__PURE__*/_react.default.createElement(_VAPServiceEditModalActionButtons.default, props, /*#__PURE__*/_react.default.createElement(\"p\", null, \"Children\")));\ncomponent.setState({\n  deleteInitiated: true\n});\n(0, _chai.expect)(component.html(), 'renders alert contents').to.contain('Are you sure?');\n(0, _chai.expect)(component.html(), 'does not render children components after triggered').to.not.contain('Children');\n(0, _chai.expect)(component.find('va-icon'), 'hides delete icon correctly').to.have.lengthOf(0);\n(0, _chai.expect)(component.find('.usa-button-secondary.button-link'), 'hide delete button').to.have.lengthOf(0);\ncomponent.unmount();",
              "err": {},
              "uuid": "38145989-1922-46ea-98a9-1d18f664ea89",
              "parentUUID": "bf61cc63-f9d1-48d8-9f2b-0e0b06624b1f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "renders correctly when delete disabled",
              "fullTitle": "<VAPServiceEditModalActionButtons/> renders correctly when delete disabled",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var component = _enzyme.default.shallow(/*#__PURE__*/_react.default.createElement(_VAPServiceEditModalActionButtons.default, props, /*#__PURE__*/_react.default.createElement(\"p\", null, \"Children\")));\n(0, _chai.expect)(component.html(), 'renders children components').to.contain('Children');\ncomponent.setProps({\n  deleteEnabled: false\n});\n(0, _chai.expect)(component.find('.usa-button-secondary.button-link'), 'hide delete button').to.have.lengthOf(0);\ncomponent.unmount();",
              "err": {},
              "uuid": "0a78d55a-7c68-4c0a-8a9a-8374619387fd",
              "parentUUID": "bf61cc63-f9d1-48d8-9f2b-0e0b06624b1f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "e83d72e3-b1a1-4f5f-a533-b11a372c39b9",
            "38145989-1922-46ea-98a9-1d18f664ea89",
            "0a78d55a-7c68-4c0a-8a9a-8374619387fd"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 5,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "0aa3ff04-a05c-4e59-99c7-f70bbbf67504",
          "title": "<VAPServiceEditModalErrorMessage />",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/platform/user/profile/vap-svc/tests/components/VAPServiceEditModalErrorMessage.unit.spec.jsx",
          "file": "/src/platform/user/profile/vap-svc/tests/components/VAPServiceEditModalErrorMessage.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "shows the correct error message when there is an invalid email",
              "fullTitle": "<VAPServiceEditModalErrorMessage /> shows the correct error message when there is an invalid email",
              "timedOut": false,
              "duration": 5,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var invalidEmailError = {\n  errors: [{\n    title: 'Check Email Address',\n    detail: \"Email address cannot have 2 @ symbols, must have at least one period '.' after the @ character, and cannot have '.%' or '%.' or '%..%' or \\\" ( ) , : ; < > @ [ ] or space unless in a quoted string in the local part.\",\n    code: 'VET360_EMAIL305',\n    source: 'Vet360::ContactInformation::Service',\n    status: '400'\n  }]\n};\nvar wrapper = (0, _enzyme.mount)(/*#__PURE__*/_react.default.createElement(_VAPServiceEditModalErrorMessage.default, {\n  error: invalidEmailError\n}));\n(0, _chai.expect)(wrapper.find('va-alert')).to.have.lengthOf(1);\n(0, _chai.expect)(wrapper.html()).to.include('It looks like the email you entered isn’t valid. Please enter your email address again.');\nwrapper.unmount();",
              "err": {},
              "uuid": "037bee4c-b38f-4206-a364-d49139a0ad6a",
              "parentUUID": "0aa3ff04-a05c-4e59-99c7-f70bbbf67504",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "shows the correct error message when there is an invalid phone area code",
              "fullTitle": "<VAPServiceEditModalErrorMessage /> shows the correct error message when there is an invalid phone area code",
              "timedOut": false,
              "duration": 3,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var invalidPhoneError = {\n  errors: [{\n    title: 'Area Code Pattern',\n    detail: 'Phone area code pattern must match \"[0-9]+\"',\n    code: 'VET360_PHON126',\n    source: 'Vet360::ContactInformation::Service',\n    status: '400'\n  }]\n};\nvar wrapper = (0, _enzyme.mount)(/*#__PURE__*/_react.default.createElement(_VAPServiceEditModalErrorMessage.default, {\n  error: invalidPhoneError\n}));\n(0, _chai.expect)(wrapper.find('va-alert')).to.have.lengthOf(1);\n(0, _chai.expect)(wrapper.html()).to.include('currently only support U.S. area codes. Please provide a U.S.-based');\nwrapper.unmount();",
              "err": {},
              "uuid": "6239bde8-98e5-46b1-a8cb-670ac3cd33c4",
              "parentUUID": "0aa3ff04-a05c-4e59-99c7-f70bbbf67504",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "037bee4c-b38f-4206-a364-d49139a0ad6a",
            "6239bde8-98e5-46b1-a8cb-670ac3cd33c4"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 8,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "682fda8d-9375-40aa-bdff-8864c365a267",
          "title": "<VAPServiceTransaction/>",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/platform/user/profile/vap-svc/tests/components/VAPServiceTransaction.unit.spec.jsx",
          "file": "/src/platform/user/profile/vap-svc/tests/components/VAPServiceTransaction.unit.spec.jsx",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"<VAPServiceTransaction/>\"",
              "fullTitle": "<VAPServiceTransaction/> \"before each\" hook in \"<VAPServiceTransaction/>\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "props = {\n  refreshTransaction: _sinon.default.stub(),\n  title: 'Some title',\n  transaction: null\n};",
              "err": {},
              "uuid": "e6ae0414-c107-41bb-9ea9-c2e9bb0415c9",
              "parentUUID": "682fda8d-9375-40aa-bdff-8864c365a267",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": "renders",
              "fullTitle": "<VAPServiceTransaction/> renders",
              "timedOut": false,
              "duration": 19,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var component = _enzyme.default.shallow(/*#__PURE__*/_react.default.createElement(_VAPServiceTransaction.default, props, /*#__PURE__*/_react.default.createElement(\"div\", {\n  className: \"content\"\n}, \"Children\")));\n(0, _chai.expect)(component.html(), 'renders children components').to.contain('Children');\n(0, _chai.expect)(component.find('div.content'), 'renders children components').to.have.lengthOf(1);\n(0, _chai.expect)(component.find(_VAPServiceTransactionPending.default), 'does not render a transaction-pending message').to.have.lengthOf(0);\ncomponent.setProps({\n  transaction: {\n    data: {\n      attributes: {\n        transactionStatus: _constants.TRANSACTION_STATUS.REJECTED\n      }\n    }\n  }\n});\n(0, _chai.expect)(component.find('VAPServiceTransactionInlineErrorMessage'), 'renders error messages').to.have.lengthOf(1);\ncomponent.setProps({\n  transaction: {\n    data: {\n      attributes: {\n        transactionStatus: _constants.TRANSACTION_STATUS.RECEIVED\n      }\n    }\n  }\n});\n(0, _chai.expect)(component.find(_VAPServiceTransactionPending.default), 'renders a transaction-pending message').to.have.lengthOf(1);\n(0, _chai.expect)(component.find('div.content'), 'does not render children components').to.have.lengthOf(0);\ncomponent.unmount();",
              "err": {},
              "uuid": "775ff68d-97e6-482f-b01c-73d13884bc44",
              "parentUUID": "682fda8d-9375-40aa-bdff-8864c365a267",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "775ff68d-97e6-482f-b01c-73d13884bc44"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 19,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "03da8802-4349-4182-9413-559e5bb58bfe",
          "title": "<VAPServiceTransactionPending/>",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/platform/user/profile/vap-svc/tests/components/VAPServiceTransactionPending.unit.spec.jsx",
          "file": "/src/platform/user/profile/vap-svc/tests/components/VAPServiceTransactionPending.unit.spec.jsx",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"<VAPServiceTransactionPending/>\"",
              "fullTitle": "<VAPServiceTransactionPending/> \"before each\" hook in \"<VAPServiceTransactionPending/>\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "props = {\n  refreshTransaction: _sinon.default.stub(),\n  title: 'Some title'\n};",
              "err": {},
              "uuid": "6ff70e9b-9209-4617-9770-1ce72d710f2f",
              "parentUUID": "03da8802-4349-4182-9413-559e5bb58bfe",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": "renders",
              "fullTitle": "<VAPServiceTransactionPending/> renders",
              "timedOut": false,
              "duration": 4003,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var component = _enzyme.default.shallow(/*#__PURE__*/_react.default.createElement(_VAPServiceTransactionPending.default, props));\nsetTimeout(function () {\n  // This should be a 3 or 4, but I'm undershooting this by setting it at 2. I don't know what to expect with a shallow-render on the Jenkins server.\n  (0, _chai.expect)(props.refreshTransaction.callCount).to.be.greaterThan(2);\n  (0, _chai.expect)(component.html()).to.contain(props.title.toLowerCase());\n  component.unmount();\n  done();\n}, 4000);",
              "err": {},
              "uuid": "981b4d66-55ea-470a-86d1-12b949d7636d",
              "parentUUID": "03da8802-4349-4182-9413-559e5bb58bfe",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "981b4d66-55ea-470a-86d1-12b949d7636d"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 4003,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "44f94ab4-5c4b-46e0-8920-5afe5a2073a6",
          "title": "<AddressValidationModal/>",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/platform/user/profile/vap-svc/tests/containers/AddressValidationModal.unit.spec.jsx",
          "file": "/src/platform/user/profile/vap-svc/tests/containers/AddressValidationModal.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "validate render",
              "fullTitle": "<AddressValidationModal/> validate render",
              "timedOut": false,
              "duration": 23,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var component = _enzyme.default.mount(/*#__PURE__*/_react.default.createElement(_AddressValidationModal.default, {\n  store: fakeStore\n}));\n(0, _chai.expect)(component.exists('AddressValidationModal')).to.equal(true);\n(0, _chai.expect)(component.exists('VaModal')).to.equal(true);\ncomponent.unmount();",
              "err": {},
              "uuid": "1ac9885d-a468-4e55-afcb-8f521cc6ca93",
              "parentUUID": "44f94ab4-5c4b-46e0-8920-5afe5a2073a6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "renders alert box",
              "fullTitle": "<AddressValidationModal/> renders alert box",
              "timedOut": false,
              "duration": 8,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var component = _enzyme.default.mount(/*#__PURE__*/_react.default.createElement(_AddressValidationModal.default, {\n  store: fakeStore\n}));\n(0, _chai.expect)(component.exists('VaAlert')).to.equal(true);\ncomponent.unmount();",
              "err": {},
              "uuid": "e42966d0-dcc4-4874-a901-76fa899da4df",
              "parentUUID": "44f94ab4-5c4b-46e0-8920-5afe5a2073a6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "renders correct buttons",
              "fullTitle": "<AddressValidationModal/> renders correct buttons",
              "timedOut": false,
              "duration": 7,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var component = _enzyme.default.mount(/*#__PURE__*/_react.default.createElement(_AddressValidationModal.default, {\n  store: fakeStore\n}));\n(0, _chai.expect)(component.find('LoadingButton').text()).to.equal('Use this address');\n(0, _chai.expect)(component.find('.usa-button-secondary').text()).to.equal('Cancel');\ncomponent.unmount();",
              "err": {},
              "uuid": "ce9f1b1b-88c5-48b9-aa9d-9dc4e0f38601",
              "parentUUID": "44f94ab4-5c4b-46e0-8920-5afe5a2073a6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "renders correct buttons",
              "fullTitle": "<AddressValidationModal/> renders correct buttons",
              "timedOut": false,
              "duration": 6,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var newFakeStore = {\n  getState: function getState() {\n    return {\n      vapService: {\n        fieldTransactionMap: {\n          mailingAddress: {\n            isPending: false\n          }\n        },\n        modal: 'addressValidation',\n        addressValidation: {\n          addressFromUser: {\n            addressLine1: '12345 1st Ave',\n            addressLine2: 'bldg 2',\n            addressLine3: 'apt 23',\n            city: 'Tampa',\n            stateCode: 'FL',\n            zipCode: '12346'\n          },\n          isAddressValidationModalVisible: true,\n          addressValidationError: true,\n          suggestedAddresses: [],\n          confirmedSuggestions: [],\n          addressValidationType: 'mailingAddress',\n          userEnteredAddress: {},\n          validationKey: null\n        }\n      }\n    };\n  },\n  subscribe: function subscribe() {},\n  dispatch: function dispatch() {}\n};\nvar component = _enzyme.default.mount(/*#__PURE__*/_react.default.createElement(_AddressValidationModal.default, {\n  store: newFakeStore\n}));\n(0, _chai.expect)(component.find('.usa-button-primary').text()).to.equal('Edit Address');\n(0, _chai.expect)(component.find('.usa-button-secondary').text()).to.equal('Cancel');\ncomponent.unmount();",
              "err": {},
              "uuid": "a9c73dc8-35a0-4f95-a402-ca7d0ecc5fee",
              "parentUUID": "44f94ab4-5c4b-46e0-8920-5afe5a2073a6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "renders multiple suggestion button text",
              "fullTitle": "<AddressValidationModal/> renders multiple suggestion button text",
              "timedOut": false,
              "duration": 13,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var newFakeStore = {\n  getState: function getState() {\n    return {\n      vapService: {\n        fieldTransactionMap: {\n          mailingAddress: {\n            isPending: false\n          }\n        },\n        modal: 'addressValidation',\n        addressValidation: {\n          addressFromUser: {\n            addressLine1: '12345 1st Ave',\n            addressLine2: 'bldg 2',\n            addressLine3: 'apt 23',\n            city: 'Tampa',\n            stateCode: 'FL',\n            zipCode: '12346'\n          },\n          isAddressValidationModalVisible: true,\n          addressValidationError: false,\n          suggestedAddresses: [{\n            addressLine1: '12345 1st Ave',\n            addressLine2: 'bldg 2',\n            addressLine3: 'apt 23',\n            city: 'Tampa',\n            stateCode: 'FL',\n            zipCode: '12346',\n            addressMetaData: {\n              confidenceScore: 100.0,\n              addressType: 'Domestic',\n              deliveryPointValidation: 'CONFIRMED',\n              residentialDeliveryIndicator: 'MIXED'\n            }\n          }, {\n            addressLine1: '22222 1st Ave',\n            addressLine2: 'bldg 2',\n            addressLine3: 'apt 23',\n            city: 'Saint Petersburg',\n            stateCode: 'FL',\n            zipCode: '55555',\n            addressMetaData: {\n              confidenceScore: 100.0,\n              addressType: 'Domestic',\n              deliveryPointValidation: 'CONFIRMED',\n              residentialDeliveryIndicator: 'MIXED'\n            }\n          }],\n          confirmedSuggestions: [{\n            addressLine1: '12345 1st Ave',\n            addressLine2: 'bldg 2',\n            addressLine3: 'apt 23',\n            city: 'Tampa',\n            stateCode: 'FL',\n            zipCode: '12346',\n            addressMetaData: {\n              confidenceScore: 100.0,\n              addressType: 'Domestic',\n              deliveryPointValidation: 'CONFIRMED',\n              residentialDeliveryIndicator: 'MIXED'\n            }\n          }, {\n            addressLine1: '22222 1st Ave',\n            addressLine2: 'bldg 2',\n            addressLine3: 'apt 23',\n            city: 'Saint Petersburg',\n            stateCode: 'FL',\n            zipCode: '55555',\n            addressMetaData: {\n              confidenceScore: 100.0,\n              addressType: 'Domestic',\n              deliveryPointValidation: 'CONFIRMED',\n              residentialDeliveryIndicator: 'MIXED'\n            }\n          }],\n          addressValidationType: 'mailingAddress',\n          userEnteredAddress: {},\n          validationKey: 12345\n        }\n      }\n    };\n  },\n  subscribe: function subscribe() {},\n  dispatch: function dispatch() {}\n};\nvar component = _enzyme.default.mount(/*#__PURE__*/_react.default.createElement(_AddressValidationModal.default, {\n  store: newFakeStore\n}));\n(0, _chai.expect)(component.find('LoadingButton').text()).to.equal('Update');\n(0, _chai.expect)(component.find('.usa-button-secondary').text()).to.equal('Cancel');\ncomponent.unmount();",
              "err": {},
              "uuid": "c608da68-df6c-4cef-ae20-f138ecac3816",
              "parentUUID": "44f94ab4-5c4b-46e0-8920-5afe5a2073a6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "renders use suggested button text",
              "fullTitle": "<AddressValidationModal/> renders use suggested button text",
              "timedOut": false,
              "duration": 7,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var newFakeStore = {\n  getState: function getState() {\n    return {\n      vapService: {\n        fieldTransactionMap: {\n          mailingAddress: {\n            isPending: false\n          }\n        },\n        modal: 'addressValidation',\n        addressValidation: {\n          addressFromUser: {\n            addressLine1: '12345 1st Ave',\n            addressLine2: 'bldg 2',\n            addressLine3: 'apt 23',\n            city: 'Tampa',\n            stateCode: 'FL',\n            zipCode: '12346'\n          },\n          isAddressValidationModalVisible: true,\n          addressValidationError: false,\n          suggestedAddresses: [{\n            addressLine1: '12345 1st Ave',\n            addressLine2: 'bldg 2',\n            addressLine3: 'apt 23',\n            city: 'Tampa',\n            stateCode: 'FL',\n            zipCode: '12346',\n            addressMetaData: {\n              confidenceScore: 100.0,\n              addressType: 'Domestic',\n              deliveryPointValidation: 'CONFIRMED',\n              residentialDeliveryIndicator: 'MIXED'\n            }\n          }, {\n            addressLine1: '22222 1st Ave',\n            addressLine2: 'bldg 2',\n            addressLine3: 'apt 23',\n            city: 'Saint Petersburg',\n            stateCode: 'FL',\n            zipCode: '55555',\n            addressMetaData: {\n              confidenceScore: 100.0,\n              addressType: 'Domestic',\n              deliveryPointValidation: 'CONFIRMED',\n              residentialDeliveryIndicator: 'MIXED'\n            }\n          }],\n          confirmedSuggestions: [{\n            addressLine1: '12345 1st Ave',\n            addressLine2: 'bldg 2',\n            addressLine3: 'apt 23',\n            city: 'Tampa',\n            stateCode: 'FL',\n            zipCode: '12346',\n            addressMetaData: {\n              confidenceScore: 100.0,\n              addressType: 'Domestic',\n              deliveryPointValidation: 'CONFIRMED',\n              residentialDeliveryIndicator: 'MIXED'\n            }\n          }],\n          addressValidationType: 'mailingAddress',\n          userEnteredAddress: {},\n          validationKey: null\n        }\n      }\n    };\n  },\n  subscribe: function subscribe() {},\n  dispatch: function dispatch() {}\n};\nvar component = _enzyme.default.mount(/*#__PURE__*/_react.default.createElement(_AddressValidationModal.default, {\n  store: newFakeStore\n}));\n(0, _chai.expect)(component.find('LoadingButton').text()).to.equal('Use suggested address');\n(0, _chai.expect)(component.find('.usa-button-secondary').text()).to.equal('Cancel');\ncomponent.unmount();",
              "err": {},
              "uuid": "b6d46344-ba46-41d3-9dc5-228c4b7a55f0",
              "parentUUID": "44f94ab4-5c4b-46e0-8920-5afe5a2073a6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "validates inputs",
              "fullTitle": "<AddressValidationModal/> validates inputs",
              "timedOut": false,
              "duration": 8,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var newFakeStore = {\n  getState: function getState() {\n    return {\n      vapService: {\n        fieldTransactionMap: {\n          mailingAddress: {\n            isPending: false\n          }\n        },\n        modal: 'addressValidation',\n        addressValidation: {\n          addressFromUser: {\n            addressLine1: '12345 1st Ave',\n            addressLine2: 'bldg 2',\n            addressLine3: 'apt 23',\n            city: 'Tampa',\n            stateCode: 'FL',\n            zipCode: '12346'\n          },\n          isAddressValidationModalVisible: true,\n          addressValidationError: true,\n          suggestedAddresses: [],\n          confirmedSuggestions: [{\n            addressLine1: '12345 1st Ave',\n            addressLine2: 'bldg 2',\n            addressLine3: 'apt 23',\n            addressType: 'DOMESTIC',\n            city: 'Tampa',\n            stateCode: 'FL',\n            zipCode: '12346',\n            addressMetaData: {\n              confidenceScore: 100.0,\n              addressType: 'Domestic',\n              deliveryPointValidation: 'CONFIRMED',\n              residentialDeliveryIndicator: 'MIXED'\n            }\n          }, {\n            addressLine1: '22222 1st Ave',\n            addressLine2: 'bldg 2',\n            addressLine3: 'apt 23',\n            addressType: 'DOMESTIC',\n            city: 'Saint Petersburg',\n            stateCode: 'FL',\n            zipCode: '55555',\n            addressMetaData: {\n              confidenceScore: 100.0,\n              addressType: 'Domestic',\n              deliveryPointValidation: 'CONFIRMED',\n              residentialDeliveryIndicator: 'MIXED'\n            }\n          }],\n          addressValidationType: 'mailingAddress',\n          userEnteredAddress: {},\n          validationKey: null\n        }\n      }\n    };\n  },\n  subscribe: function subscribe() {},\n  dispatch: function dispatch() {}\n};\nvar component = _enzyme.default.mount(/*#__PURE__*/_react.default.createElement(_AddressValidationModal.default, {\n  store: newFakeStore\n}));\n(0, _chai.expect)(component.find('label').at(1).text()).to.equal('12345 1st Ave, bldg 2, apt 23Tampa, FL 12346');\n(0, _chai.expect)(component.find('label').at(2).text()).to.equal('22222 1st Ave, bldg 2, apt 23Saint Petersburg, FL 55555');\ncomponent.unmount();",
              "err": {},
              "uuid": "3e724218-a470-4ce7-af6f-2939fe43a8d9",
              "parentUUID": "44f94ab4-5c4b-46e0-8920-5afe5a2073a6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "validates headings",
              "fullTitle": "<AddressValidationModal/> validates headings",
              "timedOut": false,
              "duration": 5,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var component = _enzyme.default.mount(/*#__PURE__*/_react.default.createElement(_AddressValidationModal.default, {\n  store: fakeStore\n}));\n(0, _chai.expect)(component.find('VaModal').prop('modalTitle')).to.equal('Edit mailing address');\n(0, _chai.expect)(component.find('VaAlert').prop('headline')).to.equal('We can’t confirm the address you entered with the U.S. Postal Service.');\ncomponent.unmount();",
              "err": {},
              "uuid": "41aef23e-d191-4ff0-b7a3-fb26abfb3a5a",
              "parentUUID": "44f94ab4-5c4b-46e0-8920-5afe5a2073a6",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "1ac9885d-a468-4e55-afcb-8f521cc6ca93",
            "e42966d0-dcc4-4874-a901-76fa899da4df",
            "ce9f1b1b-88c5-48b9-aa9d-9dc4e0f38601",
            "a9c73dc8-35a0-4f95-a402-ca7d0ecc5fee",
            "c608da68-df6c-4cef-ae20-f138ecac3816",
            "b6d46344-ba46-41d3-9dc5-228c4b7a55f0",
            "3e724218-a470-4ce7-af6f-2939fe43a8d9",
            "41aef23e-d191-4ff0-b7a3-fb26abfb3a5a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 77,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "799f2a74-8b7c-431f-8195-e46663dd5392",
          "title": "<AddressValidationView/>",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/platform/user/profile/vap-svc/tests/containers/AddressValidationView.unit.spec.jsx",
          "file": "/src/platform/user/profile/vap-svc/tests/containers/AddressValidationView.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "renders VaAlert component and address elements in AddressValidationView component",
              "fullTitle": "<AddressValidationView/> renders VaAlert component and address elements in AddressValidationView component",
              "timedOut": false,
              "duration": 23,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
              "err": {},
              "uuid": "8ae0e762-4bff-4b68-8e34-371d956fe9ae",
              "parentUUID": "799f2a74-8b7c-431f-8195-e46663dd5392",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "renders va-button and confirm address button with correct attributes and text",
              "fullTitle": "<AddressValidationView/> renders va-button and confirm address button with correct attributes and text",
              "timedOut": false,
              "duration": 4,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _render2 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: store\n  }, /*#__PURE__*/_react.default.createElement(_AddressValidationView.default, {\n    store: store\n  }))),\n  container = _render2.container;\nexpectButtons(container, [{\n  type: 'submit',\n  text: 'Use this address',\n  dataTestId: 'confirm-address-button'\n}, {\n  text: 'Go back to edit',\n  type: 'button'\n}]);",
              "err": {},
              "uuid": "5188b511-230e-4dda-96ca-b8c50f662355",
              "parentUUID": "799f2a74-8b7c-431f-8195-e46663dd5392",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "renders two primary va-button components with correct text when no validationKey and suggestedAddress are present",
              "fullTitle": "<AddressValidationView/> renders two primary va-button components with correct text when no validationKey and suggestedAddress are present",
              "timedOut": false,
              "duration": 4,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var newStore = mockStore({\n  vapService: {\n    fieldTransactionMap: {\n      mailingAddress: {\n        isPending: false\n      }\n    },\n    modal: 'addressValidation',\n    addressValidation: {\n      addressFromUser: {\n        addressLine1: '12345 1st Ave',\n        addressLine2: 'bldg 2',\n        addressLine3: 'apt 23',\n        city: 'Tampa',\n        stateCode: 'FL',\n        zipCode: '12346'\n      },\n      isAddressValidationModalVisible: true,\n      addressValidationError: '',\n      addressValidationType: 'mailingAddress',\n      userEnteredAddress: {},\n      validationKey: null,\n      confirmedSuggestions: [],\n      suggestedAddresses: []\n    }\n  }\n});\nvar _render3 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: newStore\n  }, /*#__PURE__*/_react.default.createElement(_AddressValidationView.default, {\n    store: newStore\n  }))),\n  container = _render3.container;\nexpectButtons(container, [{\n  text: 'Edit Address',\n  type: 'submit'\n}, {\n  text: 'Go back to edit',\n  type: 'button'\n}]);",
              "err": {},
              "uuid": "a3324309-2a82-487f-b432-f316ce9abf26",
              "parentUUID": "799f2a74-8b7c-431f-8195-e46663dd5392",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "does not render Go back to edit button while pending transaction",
              "fullTitle": "<AddressValidationView/> does not render Go back to edit button while pending transaction",
              "timedOut": false,
              "duration": 4,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var newStore = mockStore({\n  vapService: {\n    fieldTransactionMap: {\n      mailingAddress: {\n        isPending: true\n      }\n    },\n    modal: 'addressValidation',\n    addressValidation: {\n      addressFromUser: {\n        addressLine1: '12345 1st Ave',\n        addressLine2: 'bldg 2',\n        addressLine3: 'apt 23',\n        city: 'Tampa',\n        stateCode: 'FL',\n        zipCode: '12346'\n      },\n      isAddressValidationModalVisible: true,\n      addressValidationError: '',\n      addressValidationType: 'mailingAddress',\n      userEnteredAddress: {},\n      validationKey: null,\n      confirmedSuggestions: [],\n      suggestedAddresses: []\n    }\n  }\n});\nvar _render4 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: newStore\n  }, /*#__PURE__*/_react.default.createElement(_AddressValidationView.default, {\n    store: newStore\n  }))),\n  container = _render4.container;\nexpectButtons(container, [{\n  text: 'Edit Address',\n  type: 'submit'\n}]);",
              "err": {},
              "uuid": "74afb57a-8a9c-4aa3-a6cb-89b79c775cc2",
              "parentUUID": "799f2a74-8b7c-431f-8195-e46663dd5392",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [
            {
              "uuid": "cbf3501c-c8c5-48be-97e9-97d39a86478a",
              "title": "AddressValidationView with TWO suggestions",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/platform/user/profile/vap-svc/tests/containers/AddressValidationView.unit.spec.jsx",
              "file": "/src/platform/user/profile/vap-svc/tests/containers/AddressValidationView.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "renders correct labels, buttons, and 2 radio buttons for suggested addresses when validationKey is null",
                  "fullTitle": "<AddressValidationView/> AddressValidationView with TWO suggestions renders correct labels, buttons, and 2 radio buttons for suggested addresses when validationKey is null",
                  "timedOut": false,
                  "duration": 21,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var newStore = mockStore(_objectSpread(_objectSpread({}, baseStore), {}, {\n  vapService: _objectSpread(_objectSpread({}, baseStore.vapService), {}, {\n    addressValidation: _objectSpread(_objectSpread({}, baseStore.vapService.addressValidation), {}, {\n      validationKey: null\n    })\n  })\n}));\nvar _render5 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: newStore\n  }, /*#__PURE__*/_react.default.createElement(_AddressValidationView.default, {\n    store: newStore\n  }))),\n  container = _render5.container,\n  getAllByRole = _render5.getAllByRole,\n  getByText = _render5.getByText,\n  getAllByText = _render5.getAllByText;\n(0, _chai.expect)(getByText('You entered:')).to.exist;\n(0, _chai.expect)(getByText('Suggested Addresses:')).to.exist;\nvar radios = getAllByRole('radio');\n(0, _chai.expect)(radios.length).to.equal(2);\n(0, _chai.expect)(radios[0].checked).to.be.true;\n(0, _chai.expect)(radios[1].checked).to.be.false;\nvar instances = getAllByText('1600 Pennsylvania Ave NW');\n(0, _chai.expect)(instances.length).to.equal(2);\n(0, _chai.expect)(getByText('Washington, DC 20500')).to.exist;\n(0, _chai.expect)(getByText('Washington, DC 20502')).to.exist;\nexpectButtons(container, [{\n  type: 'submit',\n  text: 'Use this address',\n  dataTestId: 'confirm-address-button'\n}, {\n  text: 'Go back to edit',\n  type: 'button'\n}]);",
                  "err": {},
                  "uuid": "e1fea9ca-e949-4b9f-b6af-3295e1971427",
                  "parentUUID": "cbf3501c-c8c5-48be-97e9-97d39a86478a",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "renders 3 radio buttons when validationKey is present",
                  "fullTitle": "<AddressValidationView/> AddressValidationView with TWO suggestions renders 3 radio buttons when validationKey is present",
                  "timedOut": false,
                  "duration": 14,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var newStoreWithKey = mockStore(_objectSpread(_objectSpread({}, baseStore), {}, {\n  vapService: _objectSpread(_objectSpread({}, baseStore.vapService), {}, {\n    addressValidation: _objectSpread(_objectSpread({}, baseStore.vapService.addressValidation), {}, {\n      validationKey: 1234\n    })\n  })\n}));\nvar _render6 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: newStoreWithKey\n  }, /*#__PURE__*/_react.default.createElement(_AddressValidationView.default, {\n    store: newStoreWithKey\n  }))),\n  getAllByRole = _render6.getAllByRole;\nvar radios = getAllByRole('radio');\n(0, _chai.expect)(radios.length).to.equal(3);",
                  "err": {},
                  "uuid": "6c103ec5-289a-4f77-b98d-b0f64e6d6300",
                  "parentUUID": "cbf3501c-c8c5-48be-97e9-97d39a86478a",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "renders the alert with the correct headline and message for NO validationKey and NO suggestedAddresses",
                  "fullTitle": "<AddressValidationView/> AddressValidationView with TWO suggestions renders the alert with the correct headline and message for NO validationKey and NO suggestedAddresses",
                  "timedOut": false,
                  "duration": 8,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var newStoreWithoutSuggestions = mockStore(_objectSpread(_objectSpread({}, baseStore), {}, {\n  featureToggles: _defineProperty(_defineProperty({}, _featureFlagNames.default.profileShowNoValidationKeyAddressAlert, true), \"profileShowNoValidationKeyAddressAlert\", true),\n  isNoValidationKeyAlertEnabled: true,\n  vapService: _objectSpread(_objectSpread({}, baseStore.vapService), {}, {\n    addressValidation: _objectSpread(_objectSpread({}, baseStore.vapService.addressValidation), {}, {\n      validationKey: null,\n      suggestedAddresses: [],\n      confirmedSuggestions: []\n    })\n  })\n}));\nvar _render7 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: newStoreWithoutSuggestions\n  }, /*#__PURE__*/_react.default.createElement(_AddressValidationView.default, {\n    store: newStoreWithoutSuggestions\n  }))),\n  container = _render7.container,\n  getByRole = _render7.getByRole,\n  getByText = _render7.getByText;\nvar alert = getByRole('alert');\n(0, _chai.expect)(alert).to.exist;\n// Validate the headline\nvar headline = getByText('This address you entered is invalid');\n(0, _chai.expect)(headline).to.exist;\n// Validate the alert message\nvar alertMessage = getByText('We can’t confirm the address you entered with the U.S. Postal Service. You’ll need to go back to edit it.');\n(0, _chai.expect)(alertMessage).to.exist;\n// Validate correct buttons are getting displayed\nexpectButtons(container, [{\n  text: 'Go back to edit',\n  type: 'button'\n}]);",
                  "err": {},
                  "uuid": "80a884cd-28e4-4ead-a059-904deb381e7e",
                  "parentUUID": "cbf3501c-c8c5-48be-97e9-97d39a86478a",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "renders the alert with the correct headline and message for NO validationKey and has suggestedAddresses",
                  "fullTitle": "<AddressValidationView/> AddressValidationView with TWO suggestions renders the alert with the correct headline and message for NO validationKey and has suggestedAddresses",
                  "timedOut": false,
                  "duration": 10,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var newStoreWithSingleSuggestion = mockStore(_objectSpread(_objectSpread({}, baseStore), {}, {\n  featureToggles: {\n    profileShowNoValidationKeyAddressAlert: true\n  },\n  isNoValidationKeyAlertEnabled: true,\n  vapService: _objectSpread(_objectSpread({}, baseStore.vapService), {}, {\n    addressValidation: _objectSpread(_objectSpread({}, baseStore.vapService.addressValidation), {}, {\n      validationKey: null,\n      suggestedAddresses: [{\n        addressLine1: '1600 Pennsylvania Ave NW',\n        addressType: 'DOMESTIC',\n        city: 'Washington',\n        countryName: 'United States',\n        countryCodeIso3: 'USA',\n        stateCode: 'DC',\n        zipCode: '20500',\n        zipCodeSuffix: '0005',\n        addressMetaData: {\n          confidenceScore: 100.0,\n          addressType: 'Domestic',\n          deliveryPointValidation: 'CONFIRMED',\n          residentialDeliveryIndicator: 'BUSINESS'\n        }\n      }],\n      confirmedSuggestions: [{\n        addressLine1: '1600 Pennsylvania Ave NW',\n        addressType: 'DOMESTIC',\n        city: 'Washington',\n        countryName: 'United States',\n        countryCodeIso3: 'USA',\n        countyCode: '11001',\n        countyName: 'District of Columbia',\n        stateCode: 'DC',\n        zipCode: '20500',\n        zipCodeSuffix: '0005',\n        addressMetaData: {\n          confidenceScore: 100.0,\n          addressType: 'Domestic',\n          deliveryPointValidation: 'CONFIRMED',\n          residentialDeliveryIndicator: 'BUSINESS'\n        }\n      }]\n    })\n  })\n}));\nvar _render8 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: newStoreWithSingleSuggestion\n  }, /*#__PURE__*/_react.default.createElement(_AddressValidationView.default, {\n    store: newStoreWithSingleSuggestion\n  }))),\n  container = _render8.container,\n  getByRole = _render8.getByRole,\n  getByText = _render8.getByText;\nvar alert = getByRole('alert');\n(0, _chai.expect)(alert).to.exist;\n// Validate the headline\nvar headline = getByText('We can’t confirm the address you entered with the U.S. Postal Service');\n(0, _chai.expect)(headline).to.exist;\n// Validate the alert message\nvar alertMessage = getByText('We can use the suggested address we found. Or, you can go back to edit the address you entered.');\n(0, _chai.expect)(alertMessage).to.exist;\n// Validate correct buttons are getting displayed\nexpectButtons(container, [{\n  text: 'Use suggested address',\n  type: 'submit'\n}, {\n  text: 'Go back to edit',\n  type: 'button'\n}]);",
                  "err": {},
                  "uuid": "e84dd8f8-aac3-4649-b068-f45beec52496",
                  "parentUUID": "cbf3501c-c8c5-48be-97e9-97d39a86478a",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "e1fea9ca-e949-4b9f-b6af-3295e1971427",
                "6c103ec5-289a-4f77-b98d-b0f64e6d6300",
                "80a884cd-28e4-4ead-a059-904deb381e7e",
                "e84dd8f8-aac3-4649-b068-f45beec52496"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 53,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            }
          ],
          "passes": [
            "8ae0e762-4bff-4b68-8e34-371d956fe9ae",
            "5188b511-230e-4dda-96ca-b8c50f662355",
            "a3324309-2a82-487f-b432-f316ce9abf26",
            "74afb57a-8a9c-4aa3-a6cb-89b79c775cc2"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 35,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "51821422-01b7-4600-ab9b-0442e925404b",
          "title": "<CopyMailingAddress/>",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/platform/user/profile/vap-svc/tests/containers/CopyMailingAddress.unit.spec.jsx",
          "file": "/src/platform/user/profile/vap-svc/tests/containers/CopyMailingAddress.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "bb4bbd19-280b-4161-98f5-58d928beaf2e",
              "title": "the checkbox",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/platform/user/profile/vap-svc/tests/containers/CopyMailingAddress.unit.spec.jsx",
              "file": "/src/platform/user/profile/vap-svc/tests/containers/CopyMailingAddress.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "is checked when the Mailing Address and Home Address are equal",
                  "fullTitle": "<CopyMailingAddress/> the checkbox is checked when the Mailing Address and Home Address are equal",
                  "timedOut": false,
                  "duration": 4,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var fakeStore = {\n  getState: function getState() {\n    return {\n      vapService: {\n        formFields: {\n          residentialAddress: {\n            value: {\n              addressLine1: '36320 Coronado Dr',\n              addressLine2: null,\n              addressLine3: null,\n              addressPou: 'CORRESPONDENCE',\n              city: 'Fremont',\n              countryName: 'United States',\n              countryCodeIso3: 'USA',\n              internationalPostalCode: null,\n              province: null,\n              stateCode: 'CA',\n              zipCode: '94536'\n            }\n          }\n        }\n      },\n      user: {\n        profile: {\n          vapContactInfo: {\n            mailingAddress: {\n              addressLine1: '36320 Coronado Dr',\n              addressLine2: null,\n              addressLine3: null,\n              addressPou: 'CORRESPONDENCE',\n              city: 'Fremont',\n              countryName: 'United States',\n              countryCodeIso3: 'USA',\n              internationalPostalCode: null,\n              province: null,\n              stateCode: 'CA',\n              zipCode: '94536'\n            }\n          }\n        }\n      }\n    };\n  },\n  subscribe: function subscribe() {},\n  dispatch: function dispatch() {}\n};\nvar component = _enzyme.default.mount(/*#__PURE__*/_react.default.createElement(_CopyMailingAddress.default, {\n  store: fakeStore\n}));\nvar checkbox = component.find('#copy-mailing-address-to-residential-address');\n(0, _chai.expect)(checkbox.props().checked).to.equal(true);\ncomponent.unmount();",
                  "err": {},
                  "uuid": "90433971-7104-48dc-826b-dd17f282fc7c",
                  "parentUUID": "bb4bbd19-280b-4161-98f5-58d928beaf2e",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "is not checked when the Mailing Address and Home Address are not equal",
                  "fullTitle": "<CopyMailingAddress/> the checkbox is not checked when the Mailing Address and Home Address are not equal",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var fakeStore = {\n  getState: function getState() {\n    return {\n      vapService: {\n        formFields: {\n          residentialAddress: {\n            value: {\n              addressLine1: '36320 Coronado Dr',\n              addressLine2: null,\n              addressLine3: null,\n              addressPou: 'CORRESPONDENCE',\n              city: 'Fremont',\n              countryName: 'United States',\n              countryCodeIso3: 'USA',\n              internationalPostalCode: null,\n              province: null,\n              stateCode: 'CA',\n              zipCode: '94536'\n            }\n          }\n        }\n      },\n      user: {\n        profile: {\n          vapContactInfo: {\n            mailingAddress: {\n              addressLine1: '36310 Coronado Dr',\n              addressLine2: null,\n              addressLine3: null,\n              addressPou: 'CORRESPONDENCE',\n              city: 'Fremont',\n              countryName: 'United States',\n              countryCodeIso3: 'USA',\n              internationalPostalCode: null,\n              province: null,\n              stateCode: 'CA',\n              zipCode: '94536'\n            }\n          }\n        }\n      }\n    };\n  },\n  subscribe: function subscribe() {},\n  dispatch: function dispatch() {}\n};\nvar component = _enzyme.default.mount(/*#__PURE__*/_react.default.createElement(_CopyMailingAddress.default, {\n  store: fakeStore\n}));\nvar checkbox = component.find('#copy-mailing-address-to-residential-address');\n(0, _chai.expect)(checkbox.props().checked).to.equal(false);\ncomponent.unmount();",
                  "err": {},
                  "uuid": "20c93990-0865-4e0f-98d5-5f6f7ed816f0",
                  "parentUUID": "bb4bbd19-280b-4161-98f5-58d928beaf2e",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "90433971-7104-48dc-826b-dd17f282fc7c",
                "20c93990-0865-4e0f-98d5-5f6f7ed816f0"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 7,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "d6396bef-a997-42c0-922b-e1732112601c",
          "title": "<VAPServiceProfileField/>",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/platform/user/profile/vap-svc/tests/containers/VAPServiceProfileField.unit.spec.jsx",
          "file": "/src/platform/user/profile/vap-svc/tests/containers/VAPServiceProfileField.unit.spec.jsx",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"<VAPServiceProfileField/>\"",
              "fullTitle": "<VAPServiceProfileField/> \"before each\" hook in \"<VAPServiceProfileField/>\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "props = {\n  analyticsSectionName: 'home-phone',\n  clearErrors: function clearErrors() {},\n  Content: function Content() {\n    return /*#__PURE__*/_react.default.createElement(_Content, null);\n  },\n  data: {\n    homePhone: {\n      areaCode: '989',\n      phoneNumber: '1234567'\n    }\n  },\n  EditModal: function EditModal() {\n    return /*#__PURE__*/_react.default.createElement(_EditModal, null);\n  },\n  field: null,\n  fieldName: 'homePhone',\n  isEditing: false,\n  isEmpty: false,\n  title: 'Home phone',\n  openModal: _sinon.default.spy(),\n  onEdit: _sinon.default.spy()\n};",
              "err": {},
              "uuid": "e478191e-80f1-4417-a0fa-0c60501e1ac3",
              "parentUUID": "d6396bef-a997-42c0-922b-e1732112601c",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": "renders the Content prop",
              "fullTitle": "<VAPServiceProfileField/> renders the Content prop",
              "timedOut": false,
              "duration": 51,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _renderInReduxProvide = (0, _reactTestingLibraryHelpers.renderInReduxProvider)(/*#__PURE__*/_react.default.createElement(_VAPServiceProfileField.VAPServiceProfileField, props), {\n    initialState: initialState,\n    reducers: {\n      vapService: _reducers.default\n    }\n  }),\n  getByRole = _renderInReduxProvide.getByRole;\n(0, _chai.expect)(getByRole('heading', {\n  name: /Content/i\n})).to.be.visible;",
              "err": {},
              "uuid": "04ac77c4-c39f-4866-b7af-afea0ab3f9e6",
              "parentUUID": "d6396bef-a997-42c0-922b-e1732112601c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "conditional render based on existence of data",
              "fullTitle": "<VAPServiceProfileField/> conditional render based on existence of data",
              "timedOut": false,
              "duration": 36,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var state = _objectSpread(_objectSpread({}, initialState), {\n  user: {\n    profile: {\n      vapContactInfo: {}\n    }\n  }\n});\nprops = _objectSpread(_objectSpread({}, props), {}, {\n  isEmpty: true\n});\nvar _renderInReduxProvide2 = (0, _reactTestingLibraryHelpers.renderInReduxProvider)(/*#__PURE__*/_react.default.createElement(_VAPServiceProfileField.VAPServiceProfileField, props), {\n    initialState: state,\n    reducers: {\n      vapService: _reducers.default\n    }\n  }),\n  queryByRole = _renderInReduxProvide2.queryByRole,\n  getByText = _renderInReduxProvide2.getByText;\n(0, _chai.expect)(queryByRole('heading', {\n  name: /Content/i\n})).to.be.null;\n(0, _chai.expect)(getByText('Save')).to.be.visible;",
              "err": {},
              "uuid": "44b2c29c-02ee-4bff-b4a3-c193e8ccb76f",
              "parentUUID": "d6396bef-a997-42c0-922b-e1732112601c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "renders the edit link and handles click",
              "fullTitle": "<VAPServiceProfileField/> renders the edit link and handles click",
              "timedOut": false,
              "duration": 36,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _renderInReduxProvide3 = (0, _reactTestingLibraryHelpers.renderInReduxProvider)(/*#__PURE__*/_react.default.createElement(_VAPServiceProfileField.VAPServiceProfileField, props), {\n    initialState: initialState,\n    reducers: {\n      vapService: _reducers.default\n    }\n  }),\n  getByRole = _renderInReduxProvide3.getByRole;\nvar editLink = getByRole('button', {\n  name: /Edit Home phone/i\n});\n_userEvent.default.click(editLink);\n(0, _chai.expect)(props.openModal.callCount).to.equal(1);",
              "err": {},
              "uuid": "5aa046cd-4766-4f2e-af5a-e3f38ae703a3",
              "parentUUID": "d6396bef-a997-42c0-922b-e1732112601c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "04ac77c4-c39f-4866-b7af-afea0ab3f9e6",
            "44b2c29c-02ee-4bff-b4a3-c193e8ccb76f",
            "5aa046cd-4766-4f2e-af5a-e3f38ae703a3"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 123,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "644b4cad-3e86-408b-8c93-0faec6338eb5",
          "title": "<VAPServiceTransactionReporter/>",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/platform/user/profile/vap-svc/tests/containers/VAPServiceTransactionReporter.unit.spec.jsx",
          "file": "/src/platform/user/profile/vap-svc/tests/containers/VAPServiceTransactionReporter.unit.spec.jsx",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"<VAPServiceTransactionReporter/>\"",
              "fullTitle": "<VAPServiceTransactionReporter/> \"before each\" hook in \"<VAPServiceTransactionReporter/>\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "props = {\n  clearTransaction: function clearTransaction() {},\n  mostRecentErroredTransaction: null,\n  erroredTransactions: null\n};",
              "err": {},
              "uuid": "8bd56224-21ed-4b85-8762-bfa0a5f83be2",
              "parentUUID": "644b4cad-3e86-408b-8c93-0faec6338eb5",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": "renders nothing when there are no successful or errored transactions",
              "fullTitle": "<VAPServiceTransactionReporter/> renders nothing when there are no successful or errored transactions",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var component = _enzyme.default.shallow(/*#__PURE__*/_react.default.createElement(_VAPServiceTransactionReporter.VAPServiceTransactionReporter, props));\n(0, _chai.expect)(component.text()).to.be.equal('');\ncomponent.unmount();",
              "err": {},
              "uuid": "6b879ac8-54b1-4358-aa7c-bcefde88e5c0",
              "parentUUID": "644b4cad-3e86-408b-8c93-0faec6338eb5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "renders a success or error component when there are success or errored transactions",
              "fullTitle": "<VAPServiceTransactionReporter/> renders a success or error component when there are success or errored transactions",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "props.erroredTransactions = [{\n  data: {\n    attributes: {\n      transactionId: 'transaction_2'\n    }\n  }\n}];\nprops.mostRecentErroredTransaction = props.erroredTransactions[0];\nvar component = _enzyme.default.shallow(/*#__PURE__*/_react.default.createElement(_VAPServiceTransactionReporter.VAPServiceTransactionReporter, props));\nvar vapServiceTransactionErrorBanner = component.find('VAPServiceTransactionErrorBanner');\n(0, _chai.expect)(vapServiceTransactionErrorBanner, 'the errored transaction rendered').to.have.lengthOf(1);\ncomponent.unmount();",
              "err": {},
              "uuid": "9ec676e1-48dc-43ac-8e1b-e81e3f8329c5",
              "parentUUID": "644b4cad-3e86-408b-8c93-0faec6338eb5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "calls clearTransaction on each errored transaction",
              "fullTitle": "<VAPServiceTransactionReporter/> calls clearTransaction on each errored transaction",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "props.clearTransaction = _sinon.default.stub();\nprops.erroredTransactions = [{\n  data: {\n    attributes: {\n      transactionId: 'transaction_1'\n    }\n  }\n}, {\n  data: {\n    attributes: {\n      transactionId: 'transaction_2'\n    }\n  }\n}, {\n  data: {\n    attributes: {\n      transactionId: 'transaction_3'\n    }\n  }\n}];\nprops.mostRecentErroredTransaction = props.erroredTransactions[0];\nvar component = _enzyme.default.shallow(/*#__PURE__*/_react.default.createElement(_VAPServiceTransactionReporter.VAPServiceTransactionReporter, props));\nvar errorBanner = component.find('VAPServiceTransactionErrorBanner');\nerrorBanner.props().clearTransaction();\n(0, _chai.expect)(props.clearTransaction.callCount, 'Closing the success banner resulted in a call to clearTransaction for each successful transaction').to.be.equal(props.erroredTransactions.length);\ncomponent.unmount();",
              "err": {},
              "uuid": "fd531959-8ad4-44d6-881d-2e76d5d3304b",
              "parentUUID": "644b4cad-3e86-408b-8c93-0faec6338eb5",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "6b879ac8-54b1-4358-aa7c-bcefde88e5c0",
            "9ec676e1-48dc-43ac-8e1b-e81e3f8329c5",
            "fd531959-8ad4-44d6-881d-2e76d5d3304b"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "52bac103-20ed-4513-8047-571c0aab70d8",
          "title": "getValidationMessageKey",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/platform/user/profile/vap-svc/tests/helpers/addressValidationMessages.unit.spec.js",
          "file": "/src/platform/user/profile/vap-svc/tests/helpers/addressValidationMessages.unit.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "returns showSuggestionsOverride key",
              "fullTitle": "getValidationMessageKey returns showSuggestionsOverride key",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var suggestedAddresses = [{\n  address: {\n    addressLine1: '400 N 65th St',\n    addressType: 'DOMESTIC',\n    city: 'Seattle',\n    countryName: 'USA',\n    countryCodeIso3: 'USA',\n    countyCode: '53033',\n    countyName: 'King',\n    stateCode: 'WA',\n    zipCode: '98103',\n    zipCodeSuffix: '5252'\n  },\n  addressMetaData: {\n    confidenceScore: 79.0,\n    addressType: 'Domestic',\n    deliveryPointValidation: 'UNDELIVERABLE'\n  }\n}, {\n  address: {\n    addressLine1: '400 NE 65th St',\n    addressType: 'DOMESTIC',\n    city: 'Seattle',\n    countryName: 'USA',\n    countryCodeIso3: 'USA',\n    countyCode: '53033',\n    countyName: 'King',\n    stateCode: 'WA',\n    zipCode: '98115',\n    zipCodeSuffix: '6463'\n  },\n  addressMetaData: {\n    confidenceScore: 98.0,\n    addressType: 'Domestic',\n    deliveryPointValidation: 'STREET_NUMBER_VALIDATED_BUT_MISSING_UNIT_NUMBER',\n    residentialDeliveryIndicator: 'RESIDENTIAL'\n  }\n}];\n(0, _chai.expect)((0, _util.getValidationMessageKey)({\n  suggestedAddresses: suggestedAddresses,\n  addressValidationError: false,\n  confirmedSuggestions: []\n})).to.equal('showSuggestionsOverride');",
              "err": {},
              "uuid": "c2ee4452-99bd-496b-bdcb-843214c4130a",
              "parentUUID": "52bac103-20ed-4513-8047-571c0aab70d8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "returns missingUnitNumberOverride key",
              "fullTitle": "getValidationMessageKey returns missingUnitNumberOverride key",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var suggestedAddresses = [{\n  address: {\n    addressLine1: '400 NE 65th St',\n    addressType: 'DOMESTIC',\n    city: 'Seattle',\n    countryName: 'USA',\n    countryCodeIso3: 'USA',\n    countyCode: '53033',\n    countyName: 'King',\n    stateCode: 'WA',\n    zipCode: '98115',\n    zipCodeSuffix: '6463'\n  },\n  addressMetaData: {\n    confidenceScore: 98.0,\n    addressType: 'Domestic',\n    deliveryPointValidation: 'STREET_NUMBER_VALIDATED_BUT_MISSING_UNIT_NUMBER',\n    residentialDeliveryIndicator: 'RESIDENTIAL'\n  }\n}];\n(0, _chai.expect)((0, _util.getValidationMessageKey)({\n  suggestedAddresses: suggestedAddresses,\n  addressValidationError: false\n})).to.equal('missingUnitNumberOverride');",
              "err": {},
              "uuid": "1ce09df3-001a-4539-8440-46220e4c6e99",
              "parentUUID": "52bac103-20ed-4513-8047-571c0aab70d8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "returns validationError key",
              "fullTitle": "getValidationMessageKey returns validationError key",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var suggestedAddresses = [{\n  address: {\n    addressLine1: '400 NE 65th St',\n    addressType: 'DOMESTIC',\n    city: 'Seattle',\n    countryName: 'USA',\n    countryCodeIso3: 'USA',\n    countyCode: '53033',\n    countyName: 'King',\n    stateCode: 'WA',\n    zipCode: '98115',\n    zipCodeSuffix: '6463'\n  },\n  addressMetaData: {\n    confidenceScore: 98.0,\n    addressType: 'Domestic',\n    deliveryPointValidation: 'STREET_NUMBER_VALIDATED_BUT_MISSING_UNIT_NUMBER',\n    residentialDeliveryIndicator: 'RESIDENTIAL'\n  }\n}];\n(0, _chai.expect)((0, _util.getValidationMessageKey)({\n  suggestedAddresses: suggestedAddresses,\n  addressValidationError: true\n})).to.equal(_addressValidationMessages.ADDRESS_VALIDATION_TYPES.VALIDATION_ERROR);",
              "err": {},
              "uuid": "c306468c-e774-41c4-a924-a38008261921",
              "parentUUID": "52bac103-20ed-4513-8047-571c0aab70d8",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "c2ee4452-99bd-496b-bdcb-843214c4130a",
            "1ce09df3-001a-4539-8440-46220e4c6e99",
            "c306468c-e774-41c4-a924-a38008261921"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "3c4e81a7-ccdb-47dd-b329-d325a67f08cb",
          "title": "showAddressValidationModal",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/platform/user/profile/vap-svc/tests/helpers/addressValidationMessages.unit.spec.js",
          "file": "/src/platform/user/profile/vap-svc/tests/helpers/addressValidationMessages.unit.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "returns true with multiple suggestions",
              "fullTitle": "showAddressValidationModal returns true with multiple suggestions",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var suggestedAddresses = [{\n  addressLine1: '400 N 65th St',\n  addressType: 'DOMESTIC',\n  city: 'Seattle',\n  countryName: 'USA',\n  countryCodeIso3: 'USA',\n  countyCode: '53033',\n  countyName: 'King',\n  stateCode: 'WA',\n  zipCode: '98103',\n  zipCodeSuffix: '5252',\n  addressMetaData: {\n    confidenceScore: 79.0,\n    addressType: 'Domestic',\n    deliveryPointValidation: 'UNDELIVERABLE'\n  }\n}, {\n  addressLine1: '400 NE 65th St',\n  addressType: 'DOMESTIC',\n  city: 'Seattle',\n  countryName: 'USA',\n  countryCodeIso3: 'USA',\n  countyCode: '53033',\n  countyName: 'King',\n  stateCode: 'WA',\n  zipCode: '98115',\n  zipCodeSuffix: '6463',\n  addressMetaData: {\n    confidenceScore: 98.0,\n    addressType: 'Domestic',\n    deliveryPointValidation: 'STREET_NUMBER_VALIDATED_BUT_MISSING_UNIT_NUMBER',\n    residentialDeliveryIndicator: 'RESIDENTIAL'\n  }\n}];\nvar userInputAddress = {\n  addressLine1: '400 north 65th',\n  addressType: 'DOMESTIC',\n  city: 'Seattle',\n  countryName: 'USA',\n  countryCodeIso3: 'USA',\n  countyCode: '53033',\n  countyName: 'King',\n  stateCode: 'WA',\n  zipCode: '98103',\n  zipCodeSuffix: '5252'\n};\n(0, _chai.expect)((0, _util.showAddressValidationModal)(suggestedAddresses, userInputAddress)).to.equal(true);",
              "err": {},
              "uuid": "1ce95bba-ce18-4b47-a865-fc7aaaa318ea",
              "parentUUID": "3c4e81a7-ccdb-47dd-b329-d325a67f08cb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "returns false when there is a single CONFIRMED domestic address with a confidence score > 90 and whose state matches the user-submitted state",
              "fullTitle": "showAddressValidationModal returns false when there is a single CONFIRMED domestic address with a confidence score > 90 and whose state matches the user-submitted state",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var suggestedAddresses = [{\n  addressLine1: '400 N 65th St',\n  addressType: 'DOMESTIC',\n  city: 'Seattle',\n  countryName: 'USA',\n  countryCodeIso3: 'USA',\n  countyCode: '53033',\n  countyName: 'King',\n  stateCode: 'WA',\n  zipCode: '98103',\n  zipCodeSuffix: '5252',\n  addressMetaData: {\n    confidenceScore: 91.0,\n    addressType: 'Domestic',\n    deliveryPointValidation: 'CONFIRMED'\n  }\n}];\nvar userInputAddress = {\n  addressLine1: '400 north 65th',\n  addressType: 'DOMESTIC',\n  city: 'Seattle',\n  countryName: 'USA',\n  countryCodeIso3: 'USA',\n  countyCode: '53033',\n  countyName: 'King',\n  stateCode: 'WA',\n  zipCode: '98103',\n  zipCodeSuffix: '5252'\n};\n(0, _chai.expect)((0, _util.showAddressValidationModal)(suggestedAddresses, userInputAddress)).to.equal(false);",
              "err": {},
              "uuid": "9a96ef95-83b2-4b07-8139-eba0ec213183",
              "parentUUID": "3c4e81a7-ccdb-47dd-b329-d325a67f08cb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "returns true when there is a single CONFIRMED domestic address with a confidence score > 90 but whose state does not match the user-submitted state",
              "fullTitle": "showAddressValidationModal returns true when there is a single CONFIRMED domestic address with a confidence score > 90 but whose state does not match the user-submitted state",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var suggestedAddresses = [{\n  addressLine1: '400 N 65th St',\n  addressType: 'DOMESTIC',\n  city: 'Seattle',\n  countryName: 'USA',\n  countryCodeIso3: 'USA',\n  countyCode: '53033',\n  countyName: 'King',\n  stateCode: 'WI',\n  zipCode: '98103',\n  zipCodeSuffix: '5252',\n  addressMetaData: {\n    confidenceScore: 91.0,\n    addressType: 'Domestic',\n    deliveryPointValidation: 'CONFIRMED'\n  }\n}];\nvar userInputAddress = {\n  addressLine1: '400 north 65th',\n  addressType: 'DOMESTIC',\n  city: 'Seattle',\n  countryName: 'USA',\n  countryCodeIso3: 'USA',\n  countyCode: '53033',\n  countyName: 'King',\n  stateCode: 'WA',\n  zipCode: '98103',\n  zipCodeSuffix: '5252'\n};\n(0, _chai.expect)((0, _util.showAddressValidationModal)(suggestedAddresses, userInputAddress)).to.equal(true);",
              "err": {},
              "uuid": "cd7e5c10-a521-4745-aad9-3b8cdf3b7910",
              "parentUUID": "3c4e81a7-ccdb-47dd-b329-d325a67f08cb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "returns true with single deliverable suggestion that's under 90 confidence",
              "fullTitle": "showAddressValidationModal returns true with single deliverable suggestion that's under 90 confidence",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var suggestedAddresses = [{\n  addressLine1: '400 N 65th St',\n  addressType: 'DOMESTIC',\n  city: 'Seattle',\n  countryName: 'USA',\n  countryCodeIso3: 'USA',\n  countyCode: '53033',\n  countyName: 'King',\n  stateCode: 'WA',\n  zipCode: '98103',\n  zipCodeSuffix: '5252',\n  addressMetaData: {\n    confidenceScore: 87.0,\n    addressType: 'Domestic',\n    deliveryPointValidation: 'CONFIRMED'\n  }\n}];\nvar userInputAddress = {\n  addressLine1: '400 north 65th',\n  addressType: 'DOMESTIC',\n  city: 'Seattle',\n  countryName: 'USA',\n  countryCodeIso3: 'USA',\n  countyCode: '53033',\n  countyName: 'King',\n  stateCode: 'WA',\n  zipCode: '98103',\n  zipCodeSuffix: '5252'\n};\n(0, _chai.expect)((0, _util.showAddressValidationModal)(suggestedAddresses, userInputAddress)).to.equal(true);",
              "err": {},
              "uuid": "33ee6f87-f3b7-40a5-b110-c28b6fa647e6",
              "parentUUID": "3c4e81a7-ccdb-47dd-b329-d325a67f08cb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "returns true with single suggestion over 90 confidence but undeliverable",
              "fullTitle": "showAddressValidationModal returns true with single suggestion over 90 confidence but undeliverable",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var suggestedAddresses = [{\n  addressLine1: '400 N 65th St',\n  addressType: 'DOMESTIC',\n  city: 'Seattle',\n  countryName: 'USA',\n  countryCodeIso3: 'USA',\n  countyCode: '53033',\n  countyName: 'King',\n  stateCode: 'WA',\n  zipCode: '98103',\n  zipCodeSuffix: '5252',\n  addressMetaData: {\n    confidenceScore: 91.0,\n    addressType: 'Domestic',\n    deliveryPointValidation: 'UNDELIVERABLE'\n  }\n}];\nvar userInputAddress = {\n  addressLine1: '400 north 65th',\n  addressType: 'DOMESTIC',\n  city: 'Seattle',\n  countryName: 'USA',\n  countryCodeIso3: 'USA',\n  countyCode: '53033',\n  countyName: 'King',\n  stateCode: 'WA',\n  zipCode: '98103',\n  zipCodeSuffix: '5252'\n};\n(0, _chai.expect)((0, _util.showAddressValidationModal)(suggestedAddresses, userInputAddress)).to.equal(true);",
              "err": {},
              "uuid": "8299b377-46c4-4fd0-aae0-55b13c466fa2",
              "parentUUID": "3c4e81a7-ccdb-47dd-b329-d325a67f08cb",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "1ce95bba-ce18-4b47-a865-fc7aaaa318ea",
            "9a96ef95-83b2-4b07-8139-eba0ec213183",
            "cd7e5c10-a521-4745-aad9-3b8cdf3b7910",
            "33ee6f87-f3b7-40a5-b110-c28b6fa647e6",
            "8299b377-46c4-4fd0-aae0-55b13c466fa2"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "3a4438f9-b1cf-40a2-8dad-23c5f9adc09f",
          "title": "inferAddressType",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/platform/user/profile/vap-svc/tests/helpers/inferAddressType.unit.spec.js",
          "file": "/src/platform/user/profile/vap-svc/tests/helpers/inferAddressType.unit.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should set the type to international if USA isn't selected",
              "fullTitle": "inferAddressType should set the type to international if USA isn't selected",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var newAddress = Object.assign({}, address, {\n  countryName: 'Uganda'\n});\n(0, _chai.expect)((0, _util.inferAddressType)(newAddress).type).to.equal(_constants.ADDRESS_TYPES_ALTERNATE.international);",
              "err": {},
              "uuid": "b93ac73f-30c6-4e41-9991-ec8d8d501275",
              "parentUUID": "3a4438f9-b1cf-40a2-8dad-23c5f9adc09f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should set the type to military if a military stateCode is chosen",
              "fullTitle": "inferAddressType should set the type to military if a military stateCode is chosen",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var newAddress = Object.assign({}, address);\nArray.from(_constants.MILITARY_STATES).forEach(function (code) {\n  newAddress.stateCode = code;\n  (0, _chai.expect)((0, _util.inferAddressType)(newAddress).type).to.equal(_constants.ADDRESS_TYPES_ALTERNATE.military);\n});",
              "err": {},
              "uuid": "6d7b2599-1643-4dde-9a6a-1a464168cb05",
              "parentUUID": "3a4438f9-b1cf-40a2-8dad-23c5f9adc09f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should set the type to domestic if the countryName is \"United States\"",
              "fullTitle": "inferAddressType should set the type to domestic if the countryName is \"United States\"",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var newAddress = _objectSpread(_objectSpread({}, address), {}, {\n  countryName: 'United States'\n});\n(0, _chai.expect)((0, _util.inferAddressType)(newAddress).type).to.equal(_constants.ADDRESS_TYPES_ALTERNATE.domestic);",
              "err": {},
              "uuid": "504e7886-1901-449e-96ea-e8b11b401bfe",
              "parentUUID": "3a4438f9-b1cf-40a2-8dad-23c5f9adc09f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should set the type to domestic if none of the above are true",
              "fullTitle": "inferAddressType should set the type to domestic if none of the above are true",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, _chai.expect)((0, _util.inferAddressType)(address).type).to.equal(_constants.ADDRESS_TYPES_ALTERNATE.domestic);",
              "err": {},
              "uuid": "7b988e5d-7084-4619-ad61-9616ac0374ee",
              "parentUUID": "3a4438f9-b1cf-40a2-8dad-23c5f9adc09f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "b93ac73f-30c6-4e41-9991-ec8d8d501275",
            "6d7b2599-1643-4dde-9a6a-1a464168cb05",
            "504e7886-1901-449e-96ea-e8b11b401bfe",
            "7b988e5d-7084-4619-ad61-9616ac0374ee"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "41f7a41e-055e-475a-a868-ae4288915319",
          "title": "vapService reducer",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/platform/user/profile/vap-svc/tests/reducers/index.unit.spec.js",
          "file": "/src/platform/user/profile/vap-svc/tests/reducers/index.unit.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should return array of transaction data",
              "fullTitle": "vapService reducer should return array of transaction data",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var state = (0, _reducers.default)({}, {\n  type: 'VAP_SERVICE_TRANSACTIONS_FETCH_SUCCESS',\n  data: [1, 2, 3]\n});\n(0, _chai.expect)(state.transactions.length).to.eql(3);\n(0, _chai.expect)(state.transactions).to.eql([{\n  data: 1\n}, {\n  data: 2\n}, {\n  data: 3\n}]);",
              "err": {},
              "uuid": "698d50bb-24f7-4442-8957-5d477d318ecd",
              "parentUUID": "41f7a41e-055e-475a-a868-ae4288915319",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should set pending transaction",
              "fullTitle": "vapService reducer should set pending transaction",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var state = (0, _reducers.default)({}, {\n  type: 'VAP_SERVICE_TRANSACTION_REQUESTED',\n  fieldName: 'fieldName',\n  method: 'POST'\n});\n(0, _chai.expect)(state.fieldTransactionMap).to.eql({\n  fieldName: {\n    isPending: true,\n    method: 'POST'\n  }\n});",
              "err": {},
              "uuid": "9f013a9c-17e7-4065-9853-817dd52085f9",
              "parentUUID": "41f7a41e-055e-475a-a868-ae4288915319",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should set pending transaction failure",
              "fullTitle": "vapService reducer should set pending transaction failure",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var state = (0, _reducers.default)({\n  fieldTransactionMap: {\n    fieldName: {\n      retainedField: 'value'\n    }\n  }\n}, {\n  type: 'VAP_SERVICE_TRANSACTION_REQUEST_FAILED',\n  fieldName: 'fieldName',\n  error: 'errorMessage'\n});\n(0, _chai.expect)(state.fieldTransactionMap).to.eql({\n  fieldName: {\n    retainedField: 'value',\n    isPending: false,\n    isFailed: true,\n    error: 'errorMessage'\n  }\n});",
              "err": {},
              "uuid": "8145ddb1-5b4d-4ea5-b96f-0b7574636202",
              "parentUUID": "41f7a41e-055e-475a-a868-ae4288915319",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should set pending transaction success",
              "fullTitle": "vapService reducer should set pending transaction success",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var state = (0, _reducers.default)({\n  fieldTransactionMap: {\n    fieldName: {\n      retainedField: 'value'\n    }\n  },\n  transactions: []\n}, {\n  type: 'VAP_SERVICE_TRANSACTION_REQUEST_SUCCEEDED',\n  fieldName: 'fieldName',\n  transaction: {\n    data: {\n      attributes: {\n        transactionId: 111\n      }\n    }\n  }\n});\n(0, _chai.expect)(state.modal, 'The modal remains open').to.not.be.null;\n(0, _chai.expect)(state.transactions.length).to.eql(1);\n(0, _chai.expect)(state.transactions[0].data.attributes.transactionId).to.eql(111);\n(0, _chai.expect)(state.fieldTransactionMap).to.eql({\n  fieldName: {\n    retainedField: 'value',\n    isPending: false,\n    transactionId: 111\n  }\n});",
              "err": {},
              "uuid": "0cc8c0a5-d285-4f9f-806e-55b685e82e3a",
              "parentUUID": "41f7a41e-055e-475a-a868-ae4288915319",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should set transaction update request",
              "fullTitle": "vapService reducer should set transaction update request",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var state = (0, _reducers.default)({\n  transactionsAwaitingUpdate: []\n}, {\n  type: 'VAP_SERVICE_TRANSACTION_UPDATE_REQUESTED',\n  transaction: {\n    data: {\n      attributes: {\n        transactionId: 111\n      }\n    }\n  }\n});\n(0, _chai.expect)(state.transactionsAwaitingUpdate.length).to.eql(1);\n(0, _chai.expect)(state.transactionsAwaitingUpdate[0]).to.eql(111);",
              "err": {},
              "uuid": "dc725ad0-acc5-4355-92fe-17cae95c02a7",
              "parentUUID": "41f7a41e-055e-475a-a868-ae4288915319",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should set updated transaction request success",
              "fullTitle": "vapService reducer should set updated transaction request success",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var state = (0, _reducers.default)({\n  transactions: [{\n    data: {\n      attributes: {\n        transactionId: 111,\n        transactionStatus: 'COMPLETED_SUCCESS'\n      }\n    }\n  }],\n  transactionsAwaitingUpdate: [111],\n  metadata: {}\n}, {\n  type: 'VAP_SERVICE_TRANSACTION_UPDATED',\n  transaction: {\n    data: {\n      attributes: {\n        transactionId: 111,\n        transactionStatus: VAP_SERVICE.TRANSACTION_STATUS.COMPLETED_SUCCESS\n      }\n    }\n  }\n});\n(0, _chai.expect)(state.transactionsAwaitingUpdate.length).to.eql(0);\n(0, _chai.expect)(state.transactions[0].data.attributes.transactionId).to.eql(111);",
              "err": {},
              "uuid": "cf79412a-6312-4581-ab49-b551a998686e",
              "parentUUID": "41f7a41e-055e-475a-a868-ae4288915319",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should set updated transaction request failure",
              "fullTitle": "vapService reducer should set updated transaction request failure",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var state = (0, _reducers.default)({\n  transactions: [{\n    data: {\n      attributes: {\n        transactionId: 111,\n        transactionStatus: 'COMPLETED_SUCCESS'\n      }\n    }\n  }],\n  transactionsAwaitingUpdate: [111],\n  metadata: {}\n}, {\n  type: 'VAP_SERVICE_TRANSACTION_UPDATED',\n  transaction: {\n    data: {\n      attributes: {\n        transactionId: 111,\n        transactionStatus: VAP_SERVICE.TRANSACTION_STATUS.COMPLETED_FAILURE\n      }\n    }\n  }\n});\n(0, _chai.expect)(state.transactionsAwaitingUpdate.length).to.eql(0);\n(0, _chai.expect)(state.transactions[0].data.attributes.transactionId).to.eql(111);\n(0, _chai.expect)(state.metadata.mostRecentErroredTransactionId).to.eql(111);",
              "err": {},
              "uuid": "1fd5b5af-3745-4590-9075-95c400311483",
              "parentUUID": "41f7a41e-055e-475a-a868-ae4288915319",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should set transaction update failed",
              "fullTitle": "vapService reducer should set transaction update failed",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var state = (0, _reducers.default)({\n  transactionsAwaitingUpdate: [111]\n}, {\n  type: 'VAP_SERVICE_TRANSACTION_UPDATE_FAILED',\n  transaction: {\n    data: {\n      attributes: {\n        transactionId: 111\n      }\n    }\n  }\n});\n(0, _chai.expect)(state.transactionsAwaitingUpdate.length).to.eql(0);",
              "err": {},
              "uuid": "eadedd97-b7ef-47bb-8d53-72ebc42462dd",
              "parentUUID": "41f7a41e-055e-475a-a868-ae4288915319",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should set transaction cleared",
              "fullTitle": "vapService reducer should set transaction cleared",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var state = (0, _reducers.default)({\n  transactions: [{\n    data: {\n      attributes: {\n        transactionId: 111\n      }\n    }\n  }],\n  metadata: {\n    mostRecentErroredTransactionId: 111\n  }\n}, {\n  type: 'VAP_SERVICE_TRANSACTION_CLEARED',\n  transaction: {\n    data: {\n      attributes: {\n        transactionId: 111\n      }\n    }\n  }\n});\n(0, _chai.expect)(state.metadata.mostRecentErroredTransactionId).to.eql(null);\n(0, _chai.expect)(state.modal).to.be.null;\n(0, _chai.expect)(state.transactions.length).to.eql(0);",
              "err": {},
              "uuid": "33cd7ca0-538b-4970-b210-00232fd47796",
              "parentUUID": "41f7a41e-055e-475a-a868-ae4288915319",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should set transaction request cleared",
              "fullTitle": "vapService reducer should set transaction request cleared",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var state = (0, _reducers.default)({\n  fieldTransactionMap: {\n    fieldName: 'name'\n  }\n}, {\n  type: 'VAP_SERVICE_TRANSACTION_REQUEST_CLEARED',\n  fieldName: 'name'\n});\n(0, _chai.expect)(state.fieldTransactionMap.name).to.eql(undefined);",
              "err": {},
              "uuid": "27264457-a373-46b4-88f8-83be0f68c537",
              "parentUUID": "41f7a41e-055e-475a-a868-ae4288915319",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should update profile form fields",
              "fullTitle": "vapService reducer should update profile form fields",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var state = (0, _reducers.default)({\n  initialFormFields: {\n    mailingAddress: {\n      value: 'value'\n    }\n  },\n  formFields: {\n    mailingAddress: {\n      value: 'value'\n    }\n  },\n  modal: 'emailAddress'\n}, {\n  type: 'UPDATE_PROFILE_FORM_FIELD',\n  field: 'fieldName',\n  newState: {\n    fieldValue: 'value'\n  }\n});\n(0, _chai.expect)(state.formFields.fieldName).to.eql({\n  fieldValue: 'value'\n});",
              "err": {},
              "uuid": "d03fd26c-d6c2-426d-a327-6468dd090642",
              "parentUUID": "41f7a41e-055e-475a-a868-ae4288915319",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should open modal",
              "fullTitle": "vapService reducer should open modal",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var state = (0, _reducers.default)({}, {\n  type: 'OPEN_MODAL',\n  modal: 'modalName'\n});\n(0, _chai.expect)(state.modal).to.eql('modalName');",
              "err": {},
              "uuid": "3d523ea1-e5e7-4bff-bac5-27c95b8a541c",
              "parentUUID": "41f7a41e-055e-475a-a868-ae4288915319",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should update addressValidation on confirm",
              "fullTitle": "vapService reducer should update addressValidation on confirm",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var state = (0, _reducers.default)({}, {\n  type: 'ADDRESS_VALIDATION_CONFIRM',\n  addressValidationType: 'mailingAddress',\n  suggestedAddresses: [],\n  modal: 'addressValidation',\n  validationKey: 123456\n});\n(0, _chai.expect)(state.modal).to.eql('addressValidation');\n(0, _chai.expect)(state.addressValidation.addressValidationType).to.eql('mailingAddress');\n(0, _chai.expect)(state.addressValidation.suggestedAddresses).to.eql([]);\n(0, _chai.expect)(state.addressValidation.validationKey).to.eql(123456);",
              "err": {},
              "uuid": "30c06b4f-6390-4eb5-87af-a676efcff3e4",
              "parentUUID": "41f7a41e-055e-475a-a868-ae4288915319",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [
            {
              "uuid": "bb413476-d76a-432f-bf87-f22da0ee1db8",
              "title": "ADDRESS_VALIDATION_ERROR",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/platform/user/profile/vap-svc/tests/reducers/index.unit.spec.js",
              "file": "/src/platform/user/profile/vap-svc/tests/reducers/index.unit.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "sets the correct data on the redux state",
                  "fullTitle": "vapService reducer ADDRESS_VALIDATION_ERROR sets the correct data on the redux state",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var state = {\n  metadata: {},\n  otherData: true,\n  modal: null,\n  addressValidation: {\n    suggestedAddresses: [{\n      street: '123 oak st'\n    }],\n    selectedAddress: {\n      street: '456 elm'\n    },\n    selectedAddressId: 'userEntered'\n  },\n  fieldTransactionMap: {\n    mailingAddress: {\n      isPending: true\n    }\n  }\n};\nvar action = {\n  type: 'ADDRESS_VALIDATION_ERROR',\n  addressFromUser: {\n    street: '987 main'\n  },\n  addressValidationError: true,\n  fieldName: 'mailingAddress',\n  error: 'Foo'\n};\nvar expectedState = _objectSpread(_objectSpread({}, state), {}, {\n  addressValidation: {\n    addressValidationError: true,\n    addressValidationType: 'mailingAddress',\n    addressFromUser: {\n      street: '987 main'\n    },\n    selectedAddress: {},\n    selectedAddressId: null,\n    suggestedAddresses: [],\n    confirmedSuggestions: [],\n    validationKey: null\n  },\n  fieldTransactionMap: {\n    mailingAddress: {\n      isPending: false,\n      isFailed: true,\n      error: 'Foo'\n    }\n  },\n  modal: 'mailingAddress'\n});\n(0, _chai.expect)((0, _reducers.default)(state, action)).to.eql(expectedState);",
                  "err": {},
                  "uuid": "27cf1b47-cfd3-4b7c-9c23-e23e454d3266",
                  "parentUUID": "bb413476-d76a-432f-bf87-f22da0ee1db8",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "27cf1b47-cfd3-4b7c-9c23-e23e454d3266"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "11463deb-9b9d-49db-918f-6a2a89716939",
              "title": "ADDRESS_VALIDATION_RESET action",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/platform/user/profile/vap-svc/tests/reducers/index.unit.spec.js",
              "file": "/src/platform/user/profile/vap-svc/tests/reducers/index.unit.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "resets the addressValidation state",
                  "fullTitle": "vapService reducer ADDRESS_VALIDATION_RESET action resets the addressValidation state",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var state = {\n  modal: 'modalName',\n  modalData: {\n    foo: 'bar'\n  },\n  addressValidation: {\n    addressValidationType: 'address',\n    confirmedSuggestions: [],\n    suggestedAddresses: [{\n      street: '123 Main St'\n    }],\n    addressFromUser: {\n      addressLine1: '123 main',\n      addressLine2: '',\n      addressLine3: '',\n      city: 'sf',\n      stateCode: 'CA',\n      zipCode: '12345'\n    },\n    addressValidationError: false,\n    validationKey: 1234,\n    selectedAddress: {},\n    selectedAddressId: null\n  }\n};\nvar action = {\n  type: _actions.ADDRESS_VALIDATION_RESET\n};\nvar expectedState = _objectSpread(_objectSpread({}, state), {}, {\n  addressValidation: {\n    addressValidationType: '',\n    suggestedAddresses: [],\n    confirmedSuggestions: [],\n    addressFromUser: {\n      addressLine1: '',\n      addressLine2: '',\n      addressLine3: '',\n      city: '',\n      stateCode: '',\n      zipCode: '',\n      countryCodeIso3: ''\n    },\n    addressValidationError: false,\n    validationKey: null,\n    selectedAddress: {},\n    selectedAddressId: null\n  }\n});\n(0, _chai.expect)((0, _reducers.default)(state, action)).to.eql(expectedState);",
                  "err": {},
                  "uuid": "1ebefab6-096b-4f1d-8c62-2e4fc08552c3",
                  "parentUUID": "11463deb-9b9d-49db-918f-6a2a89716939",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "1ebefab6-096b-4f1d-8c62-2e4fc08552c3"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "5c4deaae-117e-4c16-8c47-f1b049579533",
              "title": "UPDATE_SELECTED_ADDRESS action",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/platform/user/profile/vap-svc/tests/reducers/index.unit.spec.js",
              "file": "/src/platform/user/profile/vap-svc/tests/reducers/index.unit.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "sets the selectedAddress and selectedAddressId from the action",
                  "fullTitle": "vapService reducer UPDATE_SELECTED_ADDRESS action sets the selectedAddress and selectedAddressId from the action",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var state = {\n  metadata: {},\n  otherData: true,\n  addressValidation: {\n    selectedAddress: {\n      street: '456 elm'\n    },\n    selectedAddressId: 'userEntered'\n  }\n};\nvar action = {\n  type: _actions.UPDATE_SELECTED_ADDRESS,\n  selectedAddress: {\n    street: '123 main'\n  },\n  selectedAddressId: '0'\n};\nvar expectedState = _objectSpread(_objectSpread({}, state), {}, {\n  addressValidation: {\n    selectedAddress: {\n      street: '123 main'\n    },\n    selectedAddressId: '0'\n  }\n});\n(0, _chai.expect)((0, _reducers.default)(state, action)).to.eql(expectedState);",
                  "err": {},
                  "uuid": "f8997244-2453-4a81-9cf1-659dd69bc8e7",
                  "parentUUID": "5c4deaae-117e-4c16-8c47-f1b049579533",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "f8997244-2453-4a81-9cf1-659dd69bc8e7"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "728ec9d6-20e3-446b-ae4f-f921aabf489c",
              "title": "ADDRESS_VALIDATION_INITIALIZE action",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/platform/user/profile/vap-svc/tests/reducers/index.unit.spec.js",
              "file": "/src/platform/user/profile/vap-svc/tests/reducers/index.unit.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "sets inProgress to true",
                  "fullTitle": "vapService reducer ADDRESS_VALIDATION_INITIALIZE action sets inProgress to true",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var state = {\n  fieldTransactionMap: {\n    mailingAddress: {\n      isPending: false\n    }\n  }\n};\nvar action = {\n  type: _actions.ADDRESS_VALIDATION_INITIALIZE,\n  fieldName: 'mailingAddress'\n};\nvar expectedState = {\n  addressValidation: {\n    addressFromUser: {\n      addressLine1: '',\n      addressLine2: '',\n      addressLine3: '',\n      city: '',\n      stateCode: '',\n      zipCode: '',\n      countryCodeIso3: ''\n    },\n    addressValidationError: false,\n    addressValidationType: '',\n    confirmedSuggestions: [],\n    selectedAddress: {},\n    selectedAddressId: null,\n    suggestedAddresses: [],\n    validationKey: null\n  },\n  fieldTransactionMap: {\n    mailingAddress: {\n      isPending: true\n    }\n  }\n};\n(0, _chai.expect)((0, _reducers.default)(state, action)).to.eql(expectedState);",
                  "err": {},
                  "uuid": "6eb73591-f2cc-4c24-afbd-4582453fb4fc",
                  "parentUUID": "728ec9d6-20e3-446b-ae4f-f921aabf489c",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "6eb73591-f2cc-4c24-afbd-4582453fb4fc"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "675f9257-3e34-4995-918b-e66ef29f92a4",
              "title": "ADDRESS_VALIDATION_UPDATE action",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/platform/user/profile/vap-svc/tests/reducers/index.unit.spec.js",
              "file": "/src/platform/user/profile/vap-svc/tests/reducers/index.unit.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "sets inProgress to true",
                  "fullTitle": "vapService reducer ADDRESS_VALIDATION_UPDATE action sets inProgress to true",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var expectedState = {\n  fieldTransactionMap: {\n    mailingAddress: {\n      isPending: true\n    }\n  }\n};\nvar state = {\n  fieldTransactionMap: {\n    mailingAddress: {\n      isPending: false\n    }\n  }\n};\nvar action = {\n  type: _actions.ADDRESS_VALIDATION_UPDATE,\n  fieldName: 'mailingAddress'\n};\n(0, _chai.expect)((0, _reducers.default)(state, action)).to.eql(expectedState);",
                  "err": {},
                  "uuid": "f73481ae-1d63-4757-bdea-a6fae99a322f",
                  "parentUUID": "675f9257-3e34-4995-918b-e66ef29f92a4",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "f73481ae-1d63-4757-bdea-a6fae99a322f"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            }
          ],
          "passes": [
            "698d50bb-24f7-4442-8957-5d477d318ecd",
            "9f013a9c-17e7-4065-9853-817dd52085f9",
            "8145ddb1-5b4d-4ea5-b96f-0b7574636202",
            "0cc8c0a5-d285-4f9f-806e-55b685e82e3a",
            "dc725ad0-acc5-4355-92fe-17cae95c02a7",
            "cf79412a-6312-4581-ab49-b551a998686e",
            "1fd5b5af-3745-4590-9075-95c400311483",
            "eadedd97-b7ef-47bb-8d53-72ebc42462dd",
            "33cd7ca0-538b-4970-b210-00232fd47796",
            "27264457-a373-46b4-88f8-83be0f68c537",
            "d03fd26c-d6c2-426d-a327-6468dd090642",
            "3d523ea1-e5e7-4bff-bac5-27c95b8a541c",
            "30c06b4f-6390-4eb5-87af-a676efcff3e4"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "5d94fb21-22e4-4ddc-9def-64e935ee4b94",
          "title": "selectors",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/platform/user/profile/vap-svc/tests/selectors.unit.spec.js",
          "file": "/src/platform/user/profile/vap-svc/tests/selectors.unit.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "437b2f83-2f49-4399-9b7e-a013d71d1552",
              "title": "selectIsVAProfileServiceAvailableForUser",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/platform/user/profile/vap-svc/tests/selectors.unit.spec.js",
              "file": "/src/platform/user/profile/vap-svc/tests/selectors.unit.spec.js",
              "beforeHooks": [
                {
                  "title": "\"before each\" hook: beforeEach in \"selectIsVAProfileServiceAvailableForUser\"",
                  "fullTitle": "selectors selectIsVAProfileServiceAvailableForUser \"before each\" hook: beforeEach in \"selectIsVAProfileServiceAvailableForUser\"",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var user = {\n  profile: {\n    services: [_backendServices.default.VA_PROFILE],\n    vapContactInfo: {}\n  }\n};\nvar vapService = {\n  modal: null,\n  formFields: {},\n  transactions: [],\n  fieldTransactionMap: {},\n  metadata: {\n    mostRecentErroredTransactionId: ''\n  }\n};\nstate = {\n  user: user,\n  vapService: vapService\n};",
                  "err": {},
                  "uuid": "a0ef3230-d899-4416-9b06-05ad94e3b6f6",
                  "parentUUID": "437b2f83-2f49-4399-9b7e-a013d71d1552",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [],
              "tests": [
                {
                  "title": "returns true if vet360 is found in the profile.services list or when the environment is localhost",
                  "fullTitle": "selectors selectIsVAProfileServiceAvailableForUser returns true if vet360 is found in the profile.services list or when the environment is localhost",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var old = {\n  document: global.document\n};\nglobal.document = {\n  location: {\n    hostname: 'localhost'\n  }\n};\nvar result = selectors.selectIsVAProfileServiceAvailableForUser(state);\n(0, _chai.expect)(result, 'returns true when on localhost so the local VA Profile Service mock will run').to.be.true;\nglobal.document.location.hostname = 'staging.va.gov';\nresult = selectors.selectIsVAProfileServiceAvailableForUser(state);\n(0, _chai.expect)(result, 'returns true when the environment is not localhost but Vet360 is in the profile services array').to.be.true;\nstate.user.profile.services = [];\nresult = selectors.selectIsVAProfileServiceAvailableForUser(state);\n(0, _chai.expect)(result, 'returns false when the environment is not localhost and Vet360 is not in the services array').to.be.false;\nglobal.document = old.document;",
                  "err": {},
                  "uuid": "3a3d9481-19ed-4b3a-9eca-8bd3458c3926",
                  "parentUUID": "437b2f83-2f49-4399-9b7e-a013d71d1552",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "3a3d9481-19ed-4b3a-9eca-8bd3458c3926"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "b3bf0ecf-0b2a-455a-8679-6966d095287f",
              "title": "selectVAPContactInfoField",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/platform/user/profile/vap-svc/tests/selectors.unit.spec.js",
              "file": "/src/platform/user/profile/vap-svc/tests/selectors.unit.spec.js",
              "beforeHooks": [
                {
                  "title": "\"before each\" hook: beforeEach in \"selectVAPContactInfoField\"",
                  "fullTitle": "selectors selectVAPContactInfoField \"before each\" hook: beforeEach in \"selectVAPContactInfoField\"",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var user = {\n  profile: {\n    services: [_backendServices.default.VA_PROFILE],\n    vapContactInfo: {}\n  }\n};\nvar vapService = {\n  modal: null,\n  formFields: {},\n  transactions: [],\n  fieldTransactionMap: {},\n  metadata: {\n    mostRecentErroredTransactionId: ''\n  }\n};\nstate = {\n  user: user,\n  vapService: vapService\n};",
                  "err": {},
                  "uuid": "36aeb46d-7ea7-481a-8f9b-b6e748f1eed6",
                  "parentUUID": "b3bf0ecf-0b2a-455a-8679-6966d095287f",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [],
              "tests": [
                {
                  "title": "looks up a field from the user VAP contact info data",
                  "fullTitle": "selectors selectVAPContactInfoField looks up a field from the user VAP contact info data",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "state.user.profile.vapContactInfo = {\n  someField: 'data'\n};\n(0, _chai.expect)(selectors.selectVAPContactInfoField(state, 'someField')).to.equal('data');",
                  "err": {},
                  "uuid": "a62f55c3-ec2a-474d-8915-b45f21c3c24b",
                  "parentUUID": "b3bf0ecf-0b2a-455a-8679-6966d095287f",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "a62f55c3-ec2a-474d-8915-b45f21c3c24b"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "e692a522-46e5-4111-8ea7-5025b091be59",
              "title": "selectVAPServiceTransaction",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/platform/user/profile/vap-svc/tests/selectors.unit.spec.js",
              "file": "/src/platform/user/profile/vap-svc/tests/selectors.unit.spec.js",
              "beforeHooks": [
                {
                  "title": "\"before each\" hook: beforeEach in \"selectVAPServiceTransaction\"",
                  "fullTitle": "selectors selectVAPServiceTransaction \"before each\" hook: beforeEach in \"selectVAPServiceTransaction\"",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var user = {\n  profile: {\n    services: [_backendServices.default.VA_PROFILE],\n    vapContactInfo: {}\n  }\n};\nvar vapService = {\n  modal: null,\n  formFields: {},\n  transactions: [],\n  fieldTransactionMap: {},\n  metadata: {\n    mostRecentErroredTransactionId: ''\n  }\n};\nstate = {\n  user: user,\n  vapService: vapService\n};",
                  "err": {},
                  "uuid": "db1f12e5-37f5-445a-ae93-66f758c5b006",
                  "parentUUID": "e692a522-46e5-4111-8ea7-5025b091be59",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [],
              "tests": [
                {
                  "title": "accepts a field name to look up a transaction and transaction request using the field-transaction map",
                  "fullTitle": "selectors selectVAPServiceTransaction accepts a field name to look up a transaction and transaction request using the field-transaction map",
                  "timedOut": false,
                  "duration": 303,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
                  "err": {},
                  "uuid": "aa5c8afb-5059-49ef-9f8d-d539a27c3de6",
                  "parentUUID": "e692a522-46e5-4111-8ea7-5025b091be59",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "aa5c8afb-5059-49ef-9f8d-d539a27c3de6"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 303,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "e8a9f37b-3e8d-474c-9b0b-c86cc35754c6",
              "title": "selectVAPServiceFailedTransactions",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/platform/user/profile/vap-svc/tests/selectors.unit.spec.js",
              "file": "/src/platform/user/profile/vap-svc/tests/selectors.unit.spec.js",
              "beforeHooks": [
                {
                  "title": "\"before each\" hook: beforeEach in \"selectVAPServiceFailedTransactions\"",
                  "fullTitle": "selectors selectVAPServiceFailedTransactions \"before each\" hook: beforeEach in \"selectVAPServiceFailedTransactions\"",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var user = {\n  profile: {\n    services: [_backendServices.default.VA_PROFILE],\n    vapContactInfo: {}\n  }\n};\nvar vapService = {\n  modal: null,\n  formFields: {},\n  transactions: [],\n  fieldTransactionMap: {},\n  metadata: {\n    mostRecentErroredTransactionId: ''\n  }\n};\nstate = {\n  user: user,\n  vapService: vapService\n};",
                  "err": {},
                  "uuid": "78fa0ab1-8e5e-4a71-afdd-8bb6eba78537",
                  "parentUUID": "e8a9f37b-3e8d-474c-9b0b-c86cc35754c6",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [],
              "tests": [
                {
                  "title": "returns only failed transactions from a list of transactions",
                  "fullTitle": "selectors selectVAPServiceFailedTransactions returns only failed transactions from a list of transactions",
                  "timedOut": false,
                  "duration": 503,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
                  "err": {},
                  "uuid": "4e6b699a-bfaf-40c2-bc86-0604310490ec",
                  "parentUUID": "e8a9f37b-3e8d-474c-9b0b-c86cc35754c6",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "4e6b699a-bfaf-40c2-bc86-0604310490ec"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 503,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "bfe31332-09bb-4cce-93d3-68e7ebb5631d",
              "title": "selectMostRecentErroredTransaction",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/platform/user/profile/vap-svc/tests/selectors.unit.spec.js",
              "file": "/src/platform/user/profile/vap-svc/tests/selectors.unit.spec.js",
              "beforeHooks": [
                {
                  "title": "\"before each\" hook: beforeEach in \"selectMostRecentErroredTransaction\"",
                  "fullTitle": "selectors selectMostRecentErroredTransaction \"before each\" hook: beforeEach in \"selectMostRecentErroredTransaction\"",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var user = {\n  profile: {\n    services: [_backendServices.default.VA_PROFILE],\n    vapContactInfo: {}\n  }\n};\nvar vapService = {\n  modal: null,\n  formFields: {},\n  transactions: [],\n  fieldTransactionMap: {},\n  metadata: {\n    mostRecentErroredTransactionId: ''\n  }\n};\nstate = {\n  user: user,\n  vapService: vapService\n};",
                  "err": {},
                  "uuid": "c37f6182-b025-4e2c-b1f7-d514173b44b2",
                  "parentUUID": "bfe31332-09bb-4cce-93d3-68e7ebb5631d",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [],
              "tests": [
                {
                  "title": "selects the transaction of the ID stored in the metadata mostRecentErroredTransactionId",
                  "fullTitle": "selectors selectMostRecentErroredTransaction selects the transaction of the ID stored in the metadata mostRecentErroredTransactionId",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var transactionId = 'transaction_id';\nvar transaction = {\n  data: {\n    attributes: {\n      transactionId: transactionId\n    }\n  }\n};\nstate.vapService.transactions = [transaction];\nstate.vapService.metadata.mostRecentErroredTransactionId = transactionId;\n(0, _chai.expect)(selectors.selectMostRecentErroredTransaction(state)).to.be.equal(transaction);",
                  "err": {},
                  "uuid": "5929ffa8-615c-43a0-a0a4-0cc4aba00cd9",
                  "parentUUID": "bfe31332-09bb-4cce-93d3-68e7ebb5631d",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "5929ffa8-615c-43a0-a0a4-0cc4aba00cd9"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "d9176494-1798-4de8-bb77-15e613e2542c",
              "title": "selectVAPServicePendingCategoryTransactions",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/platform/user/profile/vap-svc/tests/selectors.unit.spec.js",
              "file": "/src/platform/user/profile/vap-svc/tests/selectors.unit.spec.js",
              "beforeHooks": [
                {
                  "title": "\"before each\" hook: beforeEach in \"selectVAPServicePendingCategoryTransactions\"",
                  "fullTitle": "selectors selectVAPServicePendingCategoryTransactions \"before each\" hook: beforeEach in \"selectVAPServicePendingCategoryTransactions\"",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var user = {\n  profile: {\n    services: [_backendServices.default.VA_PROFILE],\n    vapContactInfo: {}\n  }\n};\nvar vapService = {\n  modal: null,\n  formFields: {},\n  transactions: [],\n  fieldTransactionMap: {},\n  metadata: {\n    mostRecentErroredTransactionId: ''\n  }\n};\nstate = {\n  user: user,\n  vapService: vapService\n};",
                  "err": {},
                  "uuid": "c97dafb7-999f-4cbb-b2ed-273e16106b0f",
                  "parentUUID": "d9176494-1798-4de8-bb77-15e613e2542c",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [],
              "tests": [
                {
                  "title": "selects transactions of the passed transaction category type that is still pending and without field-level data",
                  "fullTitle": "selectors selectVAPServicePendingCategoryTransactions selects transactions of the passed transaction category type that is still pending and without field-level data",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var type = _constants.TRANSACTION_CATEGORY_TYPES.ADDRESS;\nvar pendingAddressTransactions = [{\n  data: {\n    attributes: {\n      type: type,\n      transactionId: 'transaction_1',\n      transactionStatus: _constants.TRANSACTION_STATUS.RECEIVED\n    }\n  }\n}, {\n  data: {\n    attributes: {\n      type: type,\n      transactionId: 'transaction_2',\n      transactionStatus: _constants.TRANSACTION_STATUS.RECEIVED\n    }\n  }\n}];\nvar transactions = [].concat(pendingAddressTransactions, [{\n  data: {\n    attributes: {\n      type: _constants.TRANSACTION_CATEGORY_TYPES.EMAIL,\n      transactionId: 'transaction_3',\n      transactionStatus: _constants.TRANSACTION_STATUS.RECEIVED\n    }\n  }\n}, {\n  data: {\n    attributes: {\n      type: _constants.TRANSACTION_CATEGORY_TYPES.PHONE,\n      transactionId: 'transaction_4',\n      transactionStatus: _constants.TRANSACTION_STATUS.RECEIVED\n    }\n  }\n}, {\n  data: {\n    attributes: {\n      type: _constants.TRANSACTION_CATEGORY_TYPES.ADDRESS,\n      transactionId: 'transaction_5',\n      transactionStatus: _constants.TRANSACTION_STATUS.COMPLETED_SUCCESS\n    }\n  }\n}]);\nstate.vapService.transactions = transactions;\nvar result = selectors.selectVAPServicePendingCategoryTransactions(state, type);\n(0, _chai.expect)(result).to.include(pendingAddressTransactions[0]);\n(0, _chai.expect)(result).to.include(pendingAddressTransactions[1]);",
                  "err": {},
                  "uuid": "b78ef351-a6ee-4c6c-a833-8f0dd8c64626",
                  "parentUUID": "d9176494-1798-4de8-bb77-15e613e2542c",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "b78ef351-a6ee-4c6c-a833-8f0dd8c64626"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "dbcc25a2-c386-4a6f-b4c4-ab9d008c05e7",
              "title": "selectEditedFormField",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/platform/user/profile/vap-svc/tests/selectors.unit.spec.js",
              "file": "/src/platform/user/profile/vap-svc/tests/selectors.unit.spec.js",
              "beforeHooks": [
                {
                  "title": "\"before each\" hook: beforeEach in \"selectEditedFormField\"",
                  "fullTitle": "selectors selectEditedFormField \"before each\" hook: beforeEach in \"selectEditedFormField\"",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var user = {\n  profile: {\n    services: [_backendServices.default.VA_PROFILE],\n    vapContactInfo: {}\n  }\n};\nvar vapService = {\n  modal: null,\n  formFields: {},\n  transactions: [],\n  fieldTransactionMap: {},\n  metadata: {\n    mostRecentErroredTransactionId: ''\n  }\n};\nstate = {\n  user: user,\n  vapService: vapService\n};",
                  "err": {},
                  "uuid": "b51ddc0f-b0f8-4735-88e4-0c3b007d24ff",
                  "parentUUID": "dbcc25a2-c386-4a6f-b4c4-ab9d008c05e7",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [],
              "tests": [
                {
                  "title": "looks up the form value in state for a given field name",
                  "fullTitle": "selectors selectEditedFormField looks up the form value in state for a given field name",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var fieldName = 'someField';\nvar fieldValue = 'someFieldValue';\nstate.vapService.formFields[fieldName] = fieldValue;\n(0, _chai.expect)(selectors.selectEditedFormField(state, fieldName)).to.be.equal(fieldValue);",
                  "err": {},
                  "uuid": "04774caa-4392-4bb6-87e8-e2c5e86f6df3",
                  "parentUUID": "dbcc25a2-c386-4a6f-b4c4-ab9d008c05e7",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "04774caa-4392-4bb6-87e8-e2c5e86f6df3"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "a8c36d4e-bd40-43a7-bfc7-b2d2e81c5064",
              "title": "selectCurrentlyOpenEditModal",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/platform/user/profile/vap-svc/tests/selectors.unit.spec.js",
              "file": "/src/platform/user/profile/vap-svc/tests/selectors.unit.spec.js",
              "beforeHooks": [
                {
                  "title": "\"before each\" hook: beforeEach in \"selectCurrentlyOpenEditModal\"",
                  "fullTitle": "selectors selectCurrentlyOpenEditModal \"before each\" hook: beforeEach in \"selectCurrentlyOpenEditModal\"",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var user = {\n  profile: {\n    services: [_backendServices.default.VA_PROFILE],\n    vapContactInfo: {}\n  }\n};\nvar vapService = {\n  modal: null,\n  formFields: {},\n  transactions: [],\n  fieldTransactionMap: {},\n  metadata: {\n    mostRecentErroredTransactionId: ''\n  }\n};\nstate = {\n  user: user,\n  vapService: vapService\n};",
                  "err": {},
                  "uuid": "e7582e9b-abeb-4921-a592-a9e0d7a57746",
                  "parentUUID": "a8c36d4e-bd40-43a7-bfc7-b2d2e81c5064",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [],
              "tests": [
                {
                  "title": "looks up the form value in state for a given field name",
                  "fullTitle": "selectors selectCurrentlyOpenEditModal looks up the form value in state for a given field name",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var currentlyOpenModal = 'someField';\nstate.vapService.modal = currentlyOpenModal;\n(0, _chai.expect)(selectors.selectCurrentlyOpenEditModal(state)).to.be.equal(currentlyOpenModal);",
                  "err": {},
                  "uuid": "7e45411e-7553-48cd-8664-fbb3c0e2ed65",
                  "parentUUID": "a8c36d4e-bd40-43a7-bfc7-b2d2e81c5064",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "7e45411e-7553-48cd-8664-fbb3c0e2ed65"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "bf1c167e-9bdf-4315-8334-227d366a540c",
              "title": "selectAddressValidation",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/platform/user/profile/vap-svc/tests/selectors.unit.spec.js",
              "file": "/src/platform/user/profile/vap-svc/tests/selectors.unit.spec.js",
              "beforeHooks": [
                {
                  "title": "\"before each\" hook: beforeEach in \"selectAddressValidation\"",
                  "fullTitle": "selectors selectAddressValidation \"before each\" hook: beforeEach in \"selectAddressValidation\"",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var user = {\n  profile: {\n    services: [_backendServices.default.VA_PROFILE],\n    vapContactInfo: {}\n  }\n};\nvar vapService = {\n  modal: null,\n  formFields: {},\n  transactions: [],\n  fieldTransactionMap: {},\n  metadata: {\n    mostRecentErroredTransactionId: ''\n  }\n};\nstate = {\n  user: user,\n  vapService: vapService\n};",
                  "err": {},
                  "uuid": "1066a456-f626-424e-83e9-ec0c076b2e60",
                  "parentUUID": "bf1c167e-9bdf-4315-8334-227d366a540c",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return the address validation data",
                  "fullTitle": "selectors selectAddressValidation should return the address validation data",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var addressValidation = {\n  addressValidationType: 'foo',\n  validationKey: '123',\n  addressValidationError: null\n};\nstate.vapService.addressValidation = addressValidation;\n(0, _chai.expect)(selectors.selectAddressValidation(state)).to.deep.equal(addressValidation);",
                  "err": {},
                  "uuid": "6983ed08-b394-4b30-be46-615049c54030",
                  "parentUUID": "bf1c167e-9bdf-4315-8334-227d366a540c",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "6983ed08-b394-4b30-be46-615049c54030"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "e7b2d041-5aec-45e3-b15f-aaa52f22fe52",
              "title": "selectAddressValidationType",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/platform/user/profile/vap-svc/tests/selectors.unit.spec.js",
              "file": "/src/platform/user/profile/vap-svc/tests/selectors.unit.spec.js",
              "beforeHooks": [
                {
                  "title": "\"before each\" hook: beforeEach in \"selectAddressValidationType\"",
                  "fullTitle": "selectors selectAddressValidationType \"before each\" hook: beforeEach in \"selectAddressValidationType\"",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var user = {\n  profile: {\n    services: [_backendServices.default.VA_PROFILE],\n    vapContactInfo: {}\n  }\n};\nvar vapService = {\n  modal: null,\n  formFields: {},\n  transactions: [],\n  fieldTransactionMap: {},\n  metadata: {\n    mostRecentErroredTransactionId: ''\n  }\n};\nstate = {\n  user: user,\n  vapService: vapService\n};",
                  "err": {},
                  "uuid": "e936f976-b0de-461b-8ca0-6720398bbbb6",
                  "parentUUID": "e7b2d041-5aec-45e3-b15f-aaa52f22fe52",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return the current address validation type",
                  "fullTitle": "selectors selectAddressValidationType should return the current address validation type",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var addressValidationType = 'home';\nstate.vapService.addressValidation = {\n  addressValidationType: addressValidationType\n};\n(0, _chai.expect)(selectors.selectAddressValidationType(state)).to.be.equal(addressValidationType);",
                  "err": {},
                  "uuid": "5a1a88f8-f9cb-46cb-896a-16c58a2f8276",
                  "parentUUID": "e7b2d041-5aec-45e3-b15f-aaa52f22fe52",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "5a1a88f8-f9cb-46cb-896a-16c58a2f8276"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "9b579c3c-7dde-4c84-aec4-b0e1254400e3",
          "title": "selectVAPServiceInitializationStatus",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/platform/user/profile/vap-svc/tests/selectors.unit.spec.js",
          "file": "/src/platform/user/profile/vap-svc/tests/selectors.unit.spec.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"selectVAPServiceInitializationStatus\"",
              "fullTitle": "selectVAPServiceInitializationStatus \"before each\" hook in \"selectVAPServiceInitializationStatus\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "hooks.beforeEach();\nglobal.document = {\n  location: {\n    hostname: 'staging.va.gov'\n  }\n};",
              "err": {},
              "uuid": "34c2f651-1eac-47a3-b109-965fcc06d0c9",
              "parentUUID": "9b579c3c-7dde-4c84-aec4-b0e1254400e3",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after each\" hook in \"selectVAPServiceInitializationStatus\"",
              "fullTitle": "selectVAPServiceInitializationStatus \"after each\" hook in \"selectVAPServiceInitializationStatus\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "global.document = old.document;",
              "err": {},
              "uuid": "948f3762-1354-4d30-bad0-ce1b110268d6",
              "parentUUID": "9b579c3c-7dde-4c84-aec4-b0e1254400e3",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "returns UNINITIALIZED if Vet360 is not found in the services array and there is not an associated transaction",
              "fullTitle": "selectVAPServiceInitializationStatus returns UNINITIALIZED if Vet360 is not found in the services array and there is not an associated transaction",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "state.user.profile.services = [];\nvar result = selectors.selectVAPServiceInitializationStatus(state);\n(0, _chai.expect)(result.status).to.be.equal(_constants.VAP_SERVICE_INITIALIZATION_STATUS.UNINITIALIZED);",
              "err": {},
              "uuid": "c1c5513a-578f-4623-938a-d137b8066b86",
              "parentUUID": "9b579c3c-7dde-4c84-aec4-b0e1254400e3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "returns INITIALIZED if Vet360 is found in the services array",
              "fullTitle": "selectVAPServiceInitializationStatus returns INITIALIZED if Vet360 is found in the services array",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var result = selectors.selectVAPServiceInitializationStatus(state);\n(0, _chai.expect)(result.status).to.be.equal(_constants.VAP_SERVICE_INITIALIZATION_STATUS.INITIALIZED);",
              "err": {},
              "uuid": "57faa522-3bd5-44f5-88a2-ed0dca8aff15",
              "parentUUID": "9b579c3c-7dde-4c84-aec4-b0e1254400e3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "returns INITIALIZING if there is an ongoing transaction",
              "fullTitle": "selectVAPServiceInitializationStatus returns INITIALIZING if there is an ongoing transaction",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var transactionId = 'transaction_1';\nstate.user.profile.services = [];\nstate.vapService.transactions = [{\n  data: {\n    attributes: {\n      transactionId: transactionId,\n      transactionStatus: _constants.TRANSACTION_STATUS.RECEIVED\n    }\n  }\n}];\nstate.vapService.fieldTransactionMap[_constants.INIT_VAP_SERVICE_ID] = {\n  transactionId: transactionId\n};\nvar result = selectors.selectVAPServiceInitializationStatus(state);\n(0, _chai.expect)(result.status).to.be.equal(_constants.VAP_SERVICE_INITIALIZATION_STATUS.INITIALIZING);",
              "err": {},
              "uuid": "91680be8-a5d6-4b2c-823b-cfdbe4470832",
              "parentUUID": "9b579c3c-7dde-4c84-aec4-b0e1254400e3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "returns INITIALIZATION_FAILURE if there is a failed transaction",
              "fullTitle": "selectVAPServiceInitializationStatus returns INITIALIZATION_FAILURE if there is a failed transaction",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var transactionId = 'transaction_1';\nstate.user.profile.services = [];\nstate.vapService.transactions = [{\n  data: {\n    attributes: {\n      transactionId: transactionId,\n      transactionStatus: _constants.TRANSACTION_STATUS.REJECTED\n    }\n  }\n}];\nstate.vapService.fieldTransactionMap[_constants.INIT_VAP_SERVICE_ID] = {\n  transactionId: transactionId\n};\nvar result = selectors.selectVAPServiceInitializationStatus(state);\n(0, _chai.expect)(result.status).to.be.equal(_constants.VAP_SERVICE_INITIALIZATION_STATUS.INITIALIZATION_FAILURE);",
              "err": {},
              "uuid": "699bf6b7-c920-4928-b1ff-9d819e2981ec",
              "parentUUID": "9b579c3c-7dde-4c84-aec4-b0e1254400e3",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [
            {
              "uuid": "2c32faff-3aec-47bf-bc1e-e897a315a843",
              "title": "selectVAProfilePersonalInformation selector",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/platform/user/profile/vap-svc/tests/selectors.unit.spec.js",
              "file": "/src/platform/user/profile/vap-svc/tests/selectors.unit.spec.js",
              "beforeHooks": [
                {
                  "title": "\"before each\" hook in \"selectVAProfilePersonalInformation selector\"",
                  "fullTitle": "selectVAPServiceInitializationStatus selectVAProfilePersonalInformation selector \"before each\" hook in \"selectVAProfilePersonalInformation selector\"",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "personalInfoState = {\n  vaProfile: {\n    personalInformation: {\n      gender: 'M',\n      birthDate: '1986-05-06',\n      preferredName: 'WES',\n      pronouns: ['heHimHis', 'theyThemTheirs'],\n      pronounsNotListedText: 'Other/pronouns/here',\n      genderIdentity: {\n        code: 'M',\n        name: 'Male'\n      },\n      sexualOrientation: ['straightOrHeterosexual'],\n      sexualOrientationNotListedText: 'Some other orientation'\n    }\n  }\n};",
                  "err": {},
                  "uuid": "e9da24fe-3ea1-444e-a8e7-4282ea871e29",
                  "parentUUID": "2c32faff-3aec-47bf-bc1e-e897a315a843",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [],
              "tests": [
                {
                  "title": "returns preferredName",
                  "fullTitle": "selectVAPServiceInitializationStatus selectVAProfilePersonalInformation selector returns preferredName",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)(selectors.selectVAProfilePersonalInformation(personalInfoState, 'preferredName')).to.deep.equal({\n  preferredName: 'WES'\n});",
                  "err": {},
                  "uuid": "4bba1f92-c163-4b02-91be-0160e83efe1e",
                  "parentUUID": "2c32faff-3aec-47bf-bc1e-e897a315a843",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "returns genderIdentity",
                  "fullTitle": "selectVAPServiceInitializationStatus selectVAProfilePersonalInformation selector returns genderIdentity",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)(selectors.selectVAProfilePersonalInformation(personalInfoState, 'genderIdentity')).to.deep.equal({\n  genderIdentity: {\n    code: 'M',\n    name: 'Male'\n  }\n});",
                  "err": {},
                  "uuid": "2f149425-cdab-4a5a-9847-a188dfe4d4cd",
                  "parentUUID": "2c32faff-3aec-47bf-bc1e-e897a315a843",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "returns pronouns and pronounsNotListedText",
                  "fullTitle": "selectVAPServiceInitializationStatus selectVAProfilePersonalInformation selector returns pronouns and pronounsNotListedText",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)(selectors.selectVAProfilePersonalInformation(personalInfoState, 'pronouns')).to.deep.equal({\n  pronouns: ['heHimHis', 'theyThemTheirs'],\n  pronounsNotListedText: 'Other/pronouns/here'\n});",
                  "err": {},
                  "uuid": "c43b4f79-5396-460b-8a81-41c0b724cdc7",
                  "parentUUID": "2c32faff-3aec-47bf-bc1e-e897a315a843",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "returns sexualOrientation and sexualOrientationNotListedText",
                  "fullTitle": "selectVAPServiceInitializationStatus selectVAProfilePersonalInformation selector returns sexualOrientation and sexualOrientationNotListedText",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)(selectors.selectVAProfilePersonalInformation(personalInfoState, 'sexualOrientation')).to.deep.equal({\n  sexualOrientation: ['straightOrHeterosexual'],\n  sexualOrientationNotListedText: 'Some other orientation'\n});",
                  "err": {},
                  "uuid": "590e6022-346a-4843-bc35-9ff79bfd1ff9",
                  "parentUUID": "2c32faff-3aec-47bf-bc1e-e897a315a843",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "4bba1f92-c163-4b02-91be-0160e83efe1e",
                "2f149425-cdab-4a5a-9847-a188dfe4d4cd",
                "c43b4f79-5396-460b-8a81-41c0b724cdc7",
                "590e6022-346a-4843-bc35-9ff79bfd1ff9"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            }
          ],
          "passes": [
            "c1c5513a-578f-4623-938a-d137b8066b86",
            "57faa522-3bd5-44f5-88a2-ed0dca8aff15",
            "91680be8-a5d6-4b2c-823b-cfdbe4470832",
            "699bf6b7-c920-4928-b1ff-9d819e2981ec"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "177e4cfc-3873-4e10-a426-2f3c014f4f30",
          "title": "isPendingTransaction",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/platform/user/profile/vap-svc/tests/util/transactions.unit.spec.js",
          "file": "/src/platform/user/profile/vap-svc/tests/util/transactions.unit.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "returns `false` if passed nothing",
              "fullTitle": "isPendingTransaction returns `false` if passed nothing",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, _chai.expect)((0, _transactions.isPendingTransaction)()).to.be.false;",
              "err": {},
              "uuid": "a1c0dcc5-d196-4496-93c9-ccb7868fbb59",
              "parentUUID": "177e4cfc-3873-4e10-a426-2f3c014f4f30",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "returns `true` if passed a transaction with a pending status",
              "fullTitle": "isPendingTransaction returns `true` if passed a transaction with a pending status",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var transaction = {\n  data: {\n    attributes: {\n      transactionStatus: 'RECEIVED'\n    }\n  }\n};\n(0, _chai.expect)((0, _transactions.isPendingTransaction)(transaction)).to.be.true;\ntransaction.data.attributes.transactionStatus = 'RECEIVED_DEAD_LETTER_QUEUE';\n(0, _chai.expect)((0, _transactions.isPendingTransaction)(transaction)).to.be.true;\ntransaction.data.attributes.transactionStatus = 'RECEIVED_ERROR_QUEUE';\n(0, _chai.expect)((0, _transactions.isPendingTransaction)(transaction)).to.be.true;",
              "err": {},
              "uuid": "6183664a-7c04-4aec-a74a-a7722b54e398",
              "parentUUID": "177e4cfc-3873-4e10-a426-2f3c014f4f30",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a1c0dcc5-d196-4496-93c9-ccb7868fbb59",
            "6183664a-7c04-4aec-a74a-a7722b54e398"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "979c5a8c-656f-4fb5-a95f-9f49a91fe6bb",
          "title": "isFailedTransaction",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/platform/user/profile/vap-svc/tests/util/transactions.unit.spec.js",
          "file": "/src/platform/user/profile/vap-svc/tests/util/transactions.unit.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "returns `false` if passed nothing",
              "fullTitle": "isFailedTransaction returns `false` if passed nothing",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, _chai.expect)((0, _transactions.isFailedTransaction)()).to.be.false;",
              "err": {},
              "uuid": "73aa7ac0-b703-4f9c-86b2-86fb97427f41",
              "parentUUID": "979c5a8c-656f-4fb5-a95f-9f49a91fe6bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "returns `true` if passed a transaction with a failed status",
              "fullTitle": "isFailedTransaction returns `true` if passed a transaction with a failed status",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var transaction = {\n  data: {\n    attributes: {\n      transactionStatus: 'COMPLETED_FAILURE'\n    }\n  }\n};\n(0, _chai.expect)((0, _transactions.isFailedTransaction)(transaction)).to.be.true;\ntransaction.data.attributes.transactionStatus = 'REJECTED';\n(0, _chai.expect)((0, _transactions.isFailedTransaction)(transaction)).to.be.true;",
              "err": {},
              "uuid": "49d41631-668d-4eb1-9066-04270281a218",
              "parentUUID": "979c5a8c-656f-4fb5-a95f-9f49a91fe6bb",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "73aa7ac0-b703-4f9c-86b2-86fb97427f41",
            "49d41631-668d-4eb1-9066-04270281a218"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "7a63a1e2-e284-4d34-bfbb-606cd873a614",
          "title": "isSuccessfulTransaction",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/platform/user/profile/vap-svc/tests/util/transactions.unit.spec.js",
          "file": "/src/platform/user/profile/vap-svc/tests/util/transactions.unit.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "returns `false` if passed nothing",
              "fullTitle": "isSuccessfulTransaction returns `false` if passed nothing",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, _chai.expect)((0, _transactions.isSuccessfulTransaction)()).to.be.false;",
              "err": {},
              "uuid": "db769e37-8514-42a5-96be-db5f52c7ad3e",
              "parentUUID": "7a63a1e2-e284-4d34-bfbb-606cd873a614",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "returns `true` if passed a transaction with a successful status",
              "fullTitle": "isSuccessfulTransaction returns `true` if passed a transaction with a successful status",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var transaction = {\n  data: {\n    attributes: {\n      transactionStatus: 'COMPLETED_SUCCESS'\n    }\n  }\n};\n(0, _chai.expect)((0, _transactions.isSuccessfulTransaction)(transaction)).to.be.true;\ntransaction.data.attributes.transactionStatus = 'COMPLETED_NO_CHANGES_DETECTED';\n(0, _chai.expect)((0, _transactions.isSuccessfulTransaction)(transaction)).to.be.true;",
              "err": {},
              "uuid": "e88a2d7f-a4c6-43e7-9af8-289d2b8ba337",
              "parentUUID": "7a63a1e2-e284-4d34-bfbb-606cd873a614",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "db769e37-8514-42a5-96be-db5f52c7ad3e",
            "e88a2d7f-a4c6-43e7-9af8-289d2b8ba337"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "7f14751e-5f3a-47f1-8659-1e40a0ba4dbb",
          "title": "authentication actions",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/platform/user/tests/authentication/actions/index.unit.spec.js",
          "file": "/src/platform/user/tests/authentication/actions/index.unit.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should return the update logged in status type along with the passed value",
              "fullTitle": "authentication actions should return the update logged in status type along with the passed value",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var action = actions.updateLoggedInStatus(true);\n(0, _chai.expect)(action.type).to.equal(actions.UPDATE_LOGGEDIN_STATUS);\n(0, _chai.expect)(action.value).to.be.true;",
              "err": {},
              "uuid": "76b92ebb-755f-4b56-a13d-09bf1efc0692",
              "parentUUID": "7f14751e-5f3a-47f1-8659-1e40a0ba4dbb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return the log out type",
              "fullTitle": "authentication actions should return the log out type",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var action = actions.logOut();\n(0, _chai.expect)(action.type).to.equal(actions.LOG_OUT);",
              "err": {},
              "uuid": "ded215a0-e195-4921-8677-d4346b61e04f",
              "parentUUID": "7f14751e-5f3a-47f1-8659-1e40a0ba4dbb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return the check keep alive type",
              "fullTitle": "authentication actions should return the check keep alive type",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var action = actions.checkKeepAlive();\n(0, _chai.expect)(action.type).to.equal(actions.CHECK_KEEP_ALIVE);",
              "err": {},
              "uuid": "f1baa525-d12b-4d66-ba0b-439f7f33fb0f",
              "parentUUID": "7f14751e-5f3a-47f1-8659-1e40a0ba4dbb",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "76b92ebb-755f-4b56-a13d-09bf1efc0692",
            "ded215a0-e195-4921-8677-d4346b61e04f",
            "f1baa525-d12b-4d66-ba0b-439f7f33fb0f"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "fd44b0d0-f9f3-4487-b915-6c83e02a4cb3",
          "title": "authentication - hooks",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/platform/user/tests/authentication/authentication-hooks.unit.spec.js",
          "file": "/src/platform/user/tests/authentication/authentication-hooks.unit.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "0430dc82-82df-41e9-87f1-f626a666118d",
              "title": "useIdentityVerificationURL",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/platform/user/tests/authentication/authentication-hooks.unit.spec.js",
              "file": "/src/platform/user/tests/authentication/authentication-hooks.unit.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [],
              "suites": [
                {
                  "uuid": "bc27d8c8-8e9e-4de4-8a32-883ebde88897",
                  "title": "SAML",
                  "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/platform/user/tests/authentication/authentication-hooks.unit.spec.js",
                  "file": "/src/platform/user/tests/authentication/authentication-hooks.unit.spec.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "should return an ID.me (SAML-based) verify URL",
                      "fullTitle": "authentication - hooks useIdentityVerificationURL SAML should return an ID.me (SAML-based) verify URL",
                      "timedOut": false,
                      "duration": 12,
                      "state": "passed",
                      "speed": "slow",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
                      "err": {},
                      "uuid": "631406ac-cf5e-4a3a-a172-1cdd25004c83",
                      "parentUUID": "bc27d8c8-8e9e-4de4-8a32-883ebde88897",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "should return a Login.gov (SAML-based) verify URL",
                      "fullTitle": "authentication - hooks useIdentityVerificationURL SAML should return a Login.gov (SAML-based) verify URL",
                      "timedOut": false,
                      "duration": 2,
                      "state": "passed",
                      "speed": "slow",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
                      "err": {},
                      "uuid": "ce356e03-6411-41a8-8883-e3c7f219b220",
                      "parentUUID": "bc27d8c8-8e9e-4de4-8a32-883ebde88897",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "631406ac-cf5e-4a3a-a172-1cdd25004c83",
                    "ce356e03-6411-41a8-8883-e3c7f219b220"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 14,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "2391bf43-c9cf-4c89-889a-4c7954761707",
                  "title": "OAuth",
                  "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/platform/user/tests/authentication/authentication-hooks.unit.spec.js",
                  "file": "/src/platform/user/tests/authentication/authentication-hooks.unit.spec.js",
                  "beforeHooks": [
                    {
                      "title": "\"before each\" hook in \"OAuth\"",
                      "fullTitle": "authentication - hooks useIdentityVerificationURL OAuth \"before each\" hook in \"OAuth\"",
                      "timedOut": false,
                      "duration": 0,
                      "state": null,
                      "speed": null,
                      "pass": false,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "window.crypto = _mockCrypto.mockCrypto;",
                      "err": {},
                      "uuid": "c2ef4a59-d382-468c-be16-1aa0eb8afe60",
                      "parentUUID": "2391bf43-c9cf-4c89-889a-4c7954761707",
                      "isHook": true,
                      "skipped": false
                    }
                  ],
                  "afterHooks": [
                    {
                      "title": "\"after each\" hook in \"OAuth\"",
                      "fullTitle": "authentication - hooks useIdentityVerificationURL OAuth \"after each\" hook in \"OAuth\"",
                      "timedOut": false,
                      "duration": 0,
                      "state": null,
                      "speed": null,
                      "pass": false,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "window.crypto = globalCrypto;",
                      "err": {},
                      "uuid": "2b84df3b-e8d3-4011-9f16-7e6dc034432c",
                      "parentUUID": "2391bf43-c9cf-4c89-889a-4c7954761707",
                      "isHook": true,
                      "skipped": false
                    }
                  ],
                  "tests": [
                    {
                      "title": "should return an ID.me (OAuth-based) verify URL",
                      "fullTitle": "authentication - hooks useIdentityVerificationURL OAuth should return an ID.me (OAuth-based) verify URL",
                      "timedOut": false,
                      "duration": 3,
                      "state": "passed",
                      "speed": "slow",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
                      "err": {},
                      "uuid": "f84b06c8-d5f3-4adb-861c-3c5fd3603598",
                      "parentUUID": "2391bf43-c9cf-4c89-889a-4c7954761707",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "should return an Login.gov (OAuth-based) verify URL",
                      "fullTitle": "authentication - hooks useIdentityVerificationURL OAuth should return an Login.gov (OAuth-based) verify URL",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "slow",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
                      "err": {},
                      "uuid": "c146c000-0a98-4017-bdf6-113207ca11f9",
                      "parentUUID": "2391bf43-c9cf-4c89-889a-4c7954761707",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "f84b06c8-d5f3-4adb-861c-3c5fd3603598",
                    "c146c000-0a98-4017-bdf6-113207ca11f9"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 4,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                }
              ],
              "passes": [],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "b5879d13-a631-4976-bd61-c7d007cd1b66",
              "title": "onVerifyClick",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/platform/user/tests/authentication/authentication-hooks.unit.spec.js",
              "file": "/src/platform/user/tests/authentication/authentication-hooks.unit.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should NOT update state + code verifier when using SAML",
                  "fullTitle": "authentication - hooks onVerifyClick should NOT update state + code verifier when using SAML",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "localStorage.clear();\n(0, _hooks.onVerifyClick)({\n  useOAuth: false,\n  policy: 'idme'\n});\n(0, _chai.expect)(localStorage.length).to.eql(0);",
                  "err": {},
                  "uuid": "81e7e179-976f-4bd3-bc0d-aed0a9937f0b",
                  "parentUUID": "b5879d13-a631-4976-bd61-c7d007cd1b66",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should update state + code verifier when using OAuth",
                  "fullTitle": "authentication - hooks onVerifyClick should update state + code verifier when using OAuth",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "localStorage.setItem('logingov_signup_state', 'test_state');\nlocalStorage.setItem('logingov_signup_code_verifier', 'test_cv');\n(0, _chai.expect)(localStorage.getItem('state')).to.be.null;\n(0, _chai.expect)(localStorage.getItem('code_verifier')).to.be.null;\n(0, _hooks.onVerifyClick)({\n  useOAuth: true,\n  policy: 'logingov'\n});\n(0, _chai.expect)(localStorage.getItem('state')).to.eql('test_state');\n(0, _chai.expect)(localStorage.getItem('code_verifier')).to.eql('test_cv');",
                  "err": {},
                  "uuid": "be62e8ff-547e-4aa1-b249-07c66f905c91",
                  "parentUUID": "b5879d13-a631-4976-bd61-c7d007cd1b66",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "81e7e179-976f-4bd3-bc0d-aed0a9937f0b",
                "be62e8ff-547e-4aa1-b249-07c66f905c91"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "c681be2f-307e-480f-b422-92159d15f5be",
              "title": "useInternalTestingAuth",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/platform/user/tests/authentication/authentication-hooks.unit.spec.js",
              "file": "/src/platform/user/tests/authentication/authentication-hooks.unit.spec.js",
              "beforeHooks": [],
              "afterHooks": [
                {
                  "title": "\"after each\" hook in \"useInternalTestingAuth\"",
                  "fullTitle": "authentication - hooks useInternalTestingAuth \"after each\" hook in \"useInternalTestingAuth\"",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "global.window.location = oldLocation;",
                  "err": {},
                  "uuid": "9014f412-eb64-46cc-addd-04204f1fc586",
                  "parentUUID": "c681be2f-307e-480f-b422-92159d15f5be",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "tests": [
                {
                  "title": "should return an href with vaoccmobile application",
                  "fullTitle": "authentication - hooks useInternalTestingAuth should return an href with vaoccmobile application",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
                  "err": {},
                  "uuid": "d3ad168f-b0fb-484d-b56a-b992382937a0",
                  "parentUUID": "c681be2f-307e-480f-b422-92159d15f5be",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "d3ad168f-b0fb-484d-b56a-b992382937a0"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "3b32e992-b121-4c26-be1b-942f350f8046",
          "title": "CreateAccountLink",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/platform/user/tests/authentication/components/CreateAccountLink.unit.spec.js",
          "file": "/src/platform/user/tests/authentication/components/CreateAccountLink.unit.spec.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"CreateAccountLink\"",
              "fullTitle": "CreateAccountLink \"before each\" hook in \"CreateAccountLink\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "global.window.crypto = _mockCrypto.mockCrypto;",
              "err": {},
              "uuid": "7b945a7b-43f6-4291-9d75-8c3abda8fcfb",
              "parentUUID": "3b32e992-b121-4c26-be1b-942f350f8046",
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"before each\" hook in \"CreateAccountLink\"",
              "fullTitle": "CreateAccountLink \"before each\" hook in \"CreateAccountLink\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "global.window.crypto = _mockCrypto.mockCrypto;",
              "err": {},
              "uuid": "be3c38f2-f7b8-4286-a7a9-ab7dc362b2fe",
              "parentUUID": "3b32e992-b121-4c26-be1b-942f350f8046",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after each\" hook in \"CreateAccountLink\"",
              "fullTitle": "CreateAccountLink \"after each\" hook in \"CreateAccountLink\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "global.window.crypto = oldCrypto;\n(0, _react2.cleanup)();",
              "err": {},
              "uuid": "dd286f7e-0bfc-4037-8ab6-8463ce06d596",
              "parentUUID": "3b32e992-b121-4c26-be1b-942f350f8046",
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"after each\" hook in \"CreateAccountLink\"",
              "fullTitle": "CreateAccountLink \"after each\" hook in \"CreateAccountLink\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "global.window.crypto = oldCrypto;\n(0, _react2.cleanup)();",
              "err": {},
              "uuid": "62e984d0-4dae-407d-b0a3-c0b83c564a8b",
              "parentUUID": "3b32e992-b121-4c26-be1b-942f350f8046",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "should render correctly for each logingov",
              "fullTitle": "CreateAccountLink should render correctly for each logingov",
              "timedOut": false,
              "duration": 6,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
              "err": {},
              "uuid": "8cc2fcb0-3fc1-4883-9c8a-75533d17cd0e",
              "parentUUID": "3b32e992-b121-4c26-be1b-942f350f8046",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should set correct href for logingov (SAML)",
              "fullTitle": "CreateAccountLink should set correct href for logingov (SAML)",
              "timedOut": false,
              "duration": 4,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
              "err": {},
              "uuid": "7a440a5b-fa45-441f-97e6-5999ed7e99d8",
              "parentUUID": "3b32e992-b121-4c26-be1b-942f350f8046",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should set correct href for logingov (OAuth)",
              "fullTitle": "CreateAccountLink should set correct href for logingov (OAuth)",
              "timedOut": false,
              "duration": 6,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
              "err": {},
              "uuid": "cd0313fc-d032-4a35-824e-1ca206a31d08",
              "parentUUID": "3b32e992-b121-4c26-be1b-942f350f8046",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should not call updateStateAndVerifier for logingov (SAML)",
              "fullTitle": "CreateAccountLink should not call updateStateAndVerifier for logingov (SAML)",
              "timedOut": false,
              "duration": 5,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
              "err": {},
              "uuid": "5be9a2be-4a7b-46bf-a846-b8def1a0fd77",
              "parentUUID": "3b32e992-b121-4c26-be1b-942f350f8046",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should call updateStateAndVerifier logingov (OAuth)",
              "fullTitle": "CreateAccountLink should call updateStateAndVerifier logingov (OAuth)",
              "timedOut": false,
              "duration": 9,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
              "err": {},
              "uuid": "a20303de-fa9d-48e7-bbd5-28030cff2686",
              "parentUUID": "3b32e992-b121-4c26-be1b-942f350f8046",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should render correctly for each idme",
              "fullTitle": "CreateAccountLink should render correctly for each idme",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
              "err": {},
              "uuid": "7e3619a1-0de7-4652-ac8f-ec1c393f2d59",
              "parentUUID": "3b32e992-b121-4c26-be1b-942f350f8046",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should set correct href for idme (SAML)",
              "fullTitle": "CreateAccountLink should set correct href for idme (SAML)",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
              "err": {},
              "uuid": "5ad38cbd-a9de-42f7-9f38-49c5aa502dbb",
              "parentUUID": "3b32e992-b121-4c26-be1b-942f350f8046",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should set correct href for idme (OAuth)",
              "fullTitle": "CreateAccountLink should set correct href for idme (OAuth)",
              "timedOut": false,
              "duration": 4,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
              "err": {},
              "uuid": "70461de5-6384-4b0a-ab10-7661dc8b0f2b",
              "parentUUID": "3b32e992-b121-4c26-be1b-942f350f8046",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should not call updateStateAndVerifier for idme (SAML)",
              "fullTitle": "CreateAccountLink should not call updateStateAndVerifier for idme (SAML)",
              "timedOut": false,
              "duration": 3,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
              "err": {},
              "uuid": "63df6bcc-997d-4a0f-9d53-00b96a09bb91",
              "parentUUID": "3b32e992-b121-4c26-be1b-942f350f8046",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should call updateStateAndVerifier idme (OAuth)",
              "fullTitle": "CreateAccountLink should call updateStateAndVerifier idme (OAuth)",
              "timedOut": false,
              "duration": 5,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
              "err": {},
              "uuid": "5a1bf683-5f00-4506-90e2-c960c91eaa7a",
              "parentUUID": "3b32e992-b121-4c26-be1b-942f350f8046",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "8cc2fcb0-3fc1-4883-9c8a-75533d17cd0e",
            "7a440a5b-fa45-441f-97e6-5999ed7e99d8",
            "cd0313fc-d032-4a35-824e-1ca206a31d08",
            "5be9a2be-4a7b-46bf-a846-b8def1a0fd77",
            "a20303de-fa9d-48e7-bbd5-28030cff2686",
            "7e3619a1-0de7-4652-ac8f-ec1c393f2d59",
            "5ad38cbd-a9de-42f7-9f38-49c5aa502dbb",
            "70461de5-6384-4b0a-ab10-7661dc8b0f2b",
            "63df6bcc-997d-4a0f-9d53-00b96a09bb91",
            "5a1bf683-5f00-4506-90e2-c960c91eaa7a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 46,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "efda7820-5f9f-445f-ac5c-c06b2308386f",
          "title": "DowntimeBanner",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/platform/user/tests/authentication/components/DowntimeBanner.unit.spec.js",
          "file": "/src/platform/user/tests/authentication/components/DowntimeBanner.unit.spec.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"DowntimeBanner\"",
              "fullTitle": "DowntimeBanner \"before all\" hook in \"DowntimeBanner\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "server.listen();",
              "err": {},
              "uuid": "41bb87fc-a1bf-40d2-8ecf-5688a36a8f17",
              "parentUUID": "efda7820-5f9f-445f-ac5c-c06b2308386f",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"DowntimeBanner\"",
              "fullTitle": "DowntimeBanner \"after all\" hook in \"DowntimeBanner\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "server.close();",
              "err": {},
              "uuid": "0b0499f7-bcec-4d5c-8fd6-cd4d90229dde",
              "parentUUID": "efda7820-5f9f-445f-ac5c-c06b2308386f",
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"after each\" hook in \"DowntimeBanner\"",
              "fullTitle": "DowntimeBanner \"after each\" hook in \"DowntimeBanner\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "server.resetHandlers();",
              "err": {},
              "uuid": "2d5dd0c2-74be-4236-8457-15870931ca7a",
              "parentUUID": "efda7820-5f9f-445f-ac5c-c06b2308386f",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "should NOT display banner if statuses are active",
              "fullTitle": "DowntimeBanner should NOT display banner if statuses are active",
              "timedOut": false,
              "duration": 13,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "server.use(_msw.rest.get(STATUSES_URL, function (_, res, ctx) {\n  return res(ctx.json(generateMockResponse()));\n}));\nvar screen = (0, _reactTestingLibraryHelpers.renderInReduxProvider)(/*#__PURE__*/_react.default.createElement(_DowntimeBanner.default, null));\n(0, _chai.expect)(screen.queryByText(/You may have trouble signing in or using some tools or services/i)).to.not.exist;",
              "err": {},
              "uuid": "08233791-1009-40b3-9582-0f34bb8785dc",
              "parentUUID": "efda7820-5f9f-445f-ac5c-c06b2308386f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should display banner if logingov service is down",
              "fullTitle": "DowntimeBanner should display banner if logingov service is down",
              "timedOut": false,
              "duration": 12,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
              "err": {},
              "uuid": "4c165f66-0483-43ac-8411-bf1da45edeb4",
              "parentUUID": "efda7820-5f9f-445f-ac5c-c06b2308386f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should display banner if idme service is down",
              "fullTitle": "DowntimeBanner should display banner if idme service is down",
              "timedOut": false,
              "duration": 8,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
              "err": {},
              "uuid": "1b0e929a-7861-4366-8992-6babc2026c0d",
              "parentUUID": "efda7820-5f9f-445f-ac5c-c06b2308386f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should display banner if dslogon service is down",
              "fullTitle": "DowntimeBanner should display banner if dslogon service is down",
              "timedOut": false,
              "duration": 7,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
              "err": {},
              "uuid": "be37ccef-02b2-4552-9322-42b23d0c0cf2",
              "parentUUID": "efda7820-5f9f-445f-ac5c-c06b2308386f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should display banner if mhv service is down",
              "fullTitle": "DowntimeBanner should display banner if mhv service is down",
              "timedOut": false,
              "duration": 9,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
              "err": {},
              "uuid": "17755337-d4d6-4d7b-999f-20433b37cff6",
              "parentUUID": "efda7820-5f9f-445f-ac5c-c06b2308386f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should display banner if ssoe service is down",
              "fullTitle": "DowntimeBanner should display banner if ssoe service is down",
              "timedOut": false,
              "duration": 7,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
              "err": {},
              "uuid": "3da719af-b62a-4c26-9ca2-b508958cbcf3",
              "parentUUID": "efda7820-5f9f-445f-ac5c-c06b2308386f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should display banner if mvi service is down",
              "fullTitle": "DowntimeBanner should display banner if mvi service is down",
              "timedOut": false,
              "duration": 11,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
              "err": {},
              "uuid": "c5f4d2f0-5155-4e50-ad01-19272704f2c3",
              "parentUUID": "efda7820-5f9f-445f-ac5c-c06b2308386f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should display banner if multipleServices are down",
              "fullTitle": "DowntimeBanner should display banner if multipleServices are down",
              "timedOut": false,
              "duration": 9,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
              "err": {},
              "uuid": "8269e8f7-4b03-4bf4-a8ad-4376fe480989",
              "parentUUID": "efda7820-5f9f-445f-ac5c-c06b2308386f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "08233791-1009-40b3-9582-0f34bb8785dc",
            "4c165f66-0483-43ac-8411-bf1da45edeb4",
            "1b0e929a-7861-4366-8992-6babc2026c0d",
            "be37ccef-02b2-4552-9322-42b23d0c0cf2",
            "17755337-d4d6-4d7b-999f-20433b37cff6",
            "3da719af-b62a-4c26-9ca2-b508958cbcf3",
            "c5f4d2f0-5155-4e50-ad01-19272704f2c3",
            "8269e8f7-4b03-4bf4-a8ad-4376fe480989"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 76,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "984960d9-c0da-4248-ade8-7dc96dcfbf01",
          "title": "login DOM ",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/platform/user/tests/authentication/components/loginActions.unit.spec.js",
          "file": "/src/platform/user/tests/authentication/components/loginActions.unit.spec.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"login DOM \"",
              "fullTitle": "login DOM  \"before each\" hook in \"login DOM \"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "sandbox.spy(authUtilities, 'login');",
              "err": {},
              "uuid": "a90f2c8d-355d-48ba-9e62-b80fb50b3eea",
              "parentUUID": "984960d9-c0da-4248-ade8-7dc96dcfbf01",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after each\" hook in \"login DOM \"",
              "fullTitle": "login DOM  \"after each\" hook in \"login DOM \"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "sandbox.restore();",
              "err": {},
              "uuid": "92251509-db33-4245-a27f-090d6b72b263",
              "parentUUID": "984960d9-c0da-4248-ade8-7dc96dcfbf01",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "login buttons should properly call login method",
              "fullTitle": "login DOM  login buttons should properly call login method",
              "timedOut": false,
              "duration": 15,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var loginButtons = (0, _enzyme.mount)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n  store: mockStore\n}, /*#__PURE__*/_react.default.createElement(_LoginActions.default, null)));\nvar testButton = function testButton(button) {\n  var loginCSP = button.prop('data-csp');\n  var expectedArgs = {\n    idme: {\n      policy: _constants.CSP_IDS.ID_ME\n    },\n    logingov: {\n      policy: _constants.CSP_IDS.LOGIN_GOV\n    },\n    dslogon: {\n      policy: _constants.CSP_IDS.DS_LOGON\n    },\n    mhv: {\n      policy: _constants.CSP_IDS.MHV\n    }\n  };\n  button.simulate('click');\n  (0, _chai.expect)(authUtilities.login.calledOnce).to.be.true;\n  (0, _chai.expect)(authUtilities.login.getCall(0).args[0]).to.deep.equal(expectedArgs[loginCSP]);\n  sandbox.reset();\n};\nloginButtons.find('button').forEach(testButton);\nloginButtons.unmount();",
              "err": {},
              "uuid": "d6f3c172-e6b6-4c92-b30b-cd8b74333a1e",
              "parentUUID": "984960d9-c0da-4248-ade8-7dc96dcfbf01",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should render 3 buttons when flipper is enabled",
              "fullTitle": "login DOM  should render 3 buttons when flipper is enabled",
              "timedOut": false,
              "duration": 8,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "global.window.location = new URL('https://dev.va.gov/sign-in/?application=vaoccmobile');\nvar store = generateStore({\n  featureToggles: {\n    mhvCredentialButtonDisabled: true\n  }\n});\nvar loginButtons = (0, _enzyme.mount)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n  store: store\n}, /*#__PURE__*/_react.default.createElement(_LoginActions.default, {\n  externalApplication: \"vaoccmobile\",\n  isUnifiedSignIn: true\n})));\n(0, _chai.expect)(loginButtons.find('button').length).to.eql(3);\nloginButtons.unmount();",
              "err": {},
              "uuid": "91561cb8-3830-4f35-9f01-02014e611686",
              "parentUUID": "984960d9-c0da-4248-ade8-7dc96dcfbf01",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should render 4 buttons when flipper is false",
              "fullTitle": "login DOM  should render 4 buttons when flipper is false",
              "timedOut": false,
              "duration": 8,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "global.window.location = new URL('https://dev.va.gov/sign-in/?application=mhv');\nvar store = generateStore({\n  featureToggles: {\n    mhvCredentialButtonDisabled: false\n  }\n});\nvar loginButtons = (0, _enzyme.mount)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n  store: store\n}, /*#__PURE__*/_react.default.createElement(_LoginActions.default, {\n  externalApplication: \"mhv\"\n})));\n(0, _chai.expect)(loginButtons.find('button').length).to.eql(4);\nloginButtons.unmount();",
              "err": {},
              "uuid": "a3c22de0-10ae-43ed-89b0-77934a6fc800",
              "parentUUID": "984960d9-c0da-4248-ade8-7dc96dcfbf01",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should use fallback when featureToggles not found",
              "fullTitle": "login DOM  should use fallback when featureToggles not found",
              "timedOut": false,
              "duration": 10,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "global.window.location = new URL('https://dev.va.gov/sign-in/?application=mhv');\nvar store = generateStore({\n  featureToggles: {}\n});\nvar loginButtons = (0, _enzyme.mount)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n  store: store\n}, /*#__PURE__*/_react.default.createElement(_LoginActions.default, {\n  externalApplication: \"mhv\"\n})));\n(0, _chai.expect)(loginButtons.find('button').length).to.eql(4);\nloginButtons.unmount();",
              "err": {},
              "uuid": "f07cf7e0-d231-4526-bf34-a6abd274963d",
              "parentUUID": "984960d9-c0da-4248-ade8-7dc96dcfbf01",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "d6f3c172-e6b6-4c92-b30b-cd8b74333a1e",
            "91561cb8-3830-4f35-9f01-02014e611686",
            "a3c22de0-10ae-43ed-89b0-77934a6fc800",
            "f07cf7e0-d231-4526-bf34-a6abd274963d"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 41,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "4d450c21-e6a5-413b-80d0-846c6ca7869b",
          "title": "LoginButton",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/platform/user/tests/authentication/components/LoginButton.unit.spec.js",
          "file": "/src/platform/user/tests/authentication/components/LoginButton.unit.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should not render with a `csp`",
              "fullTitle": "LoginButton should not render with a `csp`",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var screen = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_LoginButton.default, null));\n(0, _chai.expect)(screen.queryByRole('button')).to.be.null;",
              "err": {},
              "uuid": "42d67c64-0105-46fa-86bd-6f1f49566308",
              "parentUUID": "4d450c21-e6a5-413b-80d0-846c6ca7869b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should render correctly for logingov",
              "fullTitle": "LoginButton should render correctly for logingov",
              "timedOut": false,
              "duration": 6,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var screen = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_LoginButton.default, {\n  csp: csp.policy\n}));\n(0, _chai.expect)(screen.queryByRole('button')).to.have.attr('data-csp', csp.policy);",
              "err": {},
              "uuid": "771ab1b0-bbd3-4b55-a20f-a06e73c45c0b",
              "parentUUID": "4d450c21-e6a5-413b-80d0-846c6ca7869b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should render correctly for idme",
              "fullTitle": "LoginButton should render correctly for idme",
              "timedOut": false,
              "duration": 4,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var screen = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_LoginButton.default, {\n  csp: csp.policy\n}));\n(0, _chai.expect)(screen.queryByRole('button')).to.have.attr('data-csp', csp.policy);",
              "err": {},
              "uuid": "f536299a-41b9-41db-987b-01ca70bf6722",
              "parentUUID": "4d450c21-e6a5-413b-80d0-846c6ca7869b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should render correctly for dslogon",
              "fullTitle": "LoginButton should render correctly for dslogon",
              "timedOut": false,
              "duration": 3,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var screen = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_LoginButton.default, {\n  csp: csp.policy\n}));\n(0, _chai.expect)(screen.queryByRole('button')).to.have.attr('data-csp', csp.policy);",
              "err": {},
              "uuid": "acac5ae4-9803-4c85-b774-916ef38686b9",
              "parentUUID": "4d450c21-e6a5-413b-80d0-846c6ca7869b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should render correctly for mhv",
              "fullTitle": "LoginButton should render correctly for mhv",
              "timedOut": false,
              "duration": 3,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var screen = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_LoginButton.default, {\n  csp: csp.policy\n}));\n(0, _chai.expect)(screen.queryByRole('button')).to.have.attr('data-csp', csp.policy);",
              "err": {},
              "uuid": "c7d6f0a8-45ab-4c3b-ae6d-eacc26e526ec",
              "parentUUID": "4d450c21-e6a5-413b-80d0-846c6ca7869b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should call the `loginHandler` function on click",
              "fullTitle": "LoginButton should call the `loginHandler` function on click",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var loginHandlerSpy = _sinon.default.spy();\nvar wrapper = (0, _enzyme.shallow)(/*#__PURE__*/_react.default.createElement(_LoginButton.default, {\n  csp: \"dslogon\",\n  onClick: loginHandlerSpy\n}));\nwrapper.find('button').simulate('click');\n(0, _chai.expect)(loginHandlerSpy.called).to.be.true;\nwrapper.unmount();",
              "err": {},
              "uuid": "b022648f-f557-46f9-8ba1-5abfc49b2afb",
              "parentUUID": "4d450c21-e6a5-413b-80d0-846c6ca7869b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "42d67c64-0105-46fa-86bd-6f1f49566308",
            "771ab1b0-bbd3-4b55-a20f-a06e73c45c0b",
            "f536299a-41b9-41db-987b-01ca70bf6722",
            "acac5ae4-9803-4c85-b774-916ef38686b9",
            "c7d6f0a8-45ab-4c3b-ae6d-eacc26e526ec",
            "b022648f-f557-46f9-8ba1-5abfc49b2afb"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 18,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "3dd50fea-5e28-4463-b519-78777a976bae",
          "title": "loginHandler",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/platform/user/tests/authentication/components/LoginButton.unit.spec.js",
          "file": "/src/platform/user/tests/authentication/components/LoginButton.unit.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "logs a user in with the correct `csp`",
              "fullTitle": "loginHandler logs a user in with the correct `csp`",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var mockAuthLogin = _sinon.default.stub(authUtilities, 'login');\nvar loginHandlerSpy = _sinon.default.spy(_LoginButton.loginHandler);\nloginHandlerSpy('mhv');\n(0, _chai.expect)(loginHandlerSpy.called).to.be.true;\n(0, _chai.expect)(mockAuthLogin.called).to.be.true;\n(0, _chai.expect)(mockAuthLogin.calledWith({\n  policy: 'mhv'\n})).to.be.true;\nmockAuthLogin.restore();",
              "err": {},
              "uuid": "c8933393-9459-47f1-b8bc-7b0282fbaefe",
              "parentUUID": "3dd50fea-5e28-4463-b519-78777a976bae",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "c8933393-9459-47f1-b8bc-7b0282fbaefe"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "175816a1-bb75-48bd-bf44-7b0c779ebfe3",
          "title": "LoginContainer",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/platform/user/tests/authentication/components/LoginContainer.unit.spec.js",
          "file": "/src/platform/user/tests/authentication/components/LoginContainer.unit.spec.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"LoginContainer\"",
              "fullTitle": "LoginContainer \"before each\" hook in \"LoginContainer\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "fakeWindow();",
              "err": {},
              "uuid": "23162bd2-8813-4c24-909e-d2d5688399d9",
              "parentUUID": "175816a1-bb75-48bd-bf44-7b0c779ebfe3",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after each\" hook in \"LoginContainer\"",
              "fullTitle": "LoginContainer \"after each\" hook in \"LoginContainer\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "global.window = oldWindow;",
              "err": {},
              "uuid": "03d91179-5e59-4a3c-a3b3-e931f939bedb",
              "parentUUID": "175816a1-bb75-48bd-bf44-7b0c779ebfe3",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "should render",
              "fullTitle": "LoginContainer should render",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
              "err": {},
              "uuid": "e99d61ab-0506-4bcf-aa09-9c602ec0a7fc",
              "parentUUID": "175816a1-bb75-48bd-bf44-7b0c779ebfe3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should NOT render the VA logo on the Unified Sign in Page",
              "fullTitle": "LoginContainer should NOT render the VA logo on the Unified Sign in Page",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "global.window.location = '/sign-in/?application=mhv';\nvar wrapper = (0, _enzyme.shallow)(/*#__PURE__*/_react.default.createElement(_LoginContainer.default, {\n  isUnifiedSignIn: true\n}));\nvar img = wrapper.find('img');\n(0, _chai.expect)(img.exists()).to.be.false;\nwrapper.unmount();",
              "err": {},
              "uuid": "d48b86e1-4613-4001-a134-8b4dc29e1921",
              "parentUUID": "175816a1-bb75-48bd-bf44-7b0c779ebfe3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should render the LoginHeader",
              "fullTitle": "LoginContainer should render the LoginHeader",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
              "err": {},
              "uuid": "cfc65b1e-0e5d-417d-bb60-d2e671f2dc1f",
              "parentUUID": "175816a1-bb75-48bd-bf44-7b0c779ebfe3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should render the LoginActions",
              "fullTitle": "LoginContainer should render the LoginActions",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
              "err": {},
              "uuid": "6f28e896-9209-4508-bb65-395a00d38166",
              "parentUUID": "175816a1-bb75-48bd-bf44-7b0c779ebfe3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should render the LoginInfo",
              "fullTitle": "LoginContainer should render the LoginInfo",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
              "err": {},
              "uuid": "c33d3ecf-964c-404d-b89c-090ab7c00bd8",
              "parentUUID": "175816a1-bb75-48bd-bf44-7b0c779ebfe3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should render a va-link \"VA staff\" when application is vaoccmobile",
              "fullTitle": "LoginContainer should render a va-link \"VA staff\" when application is vaoccmobile",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "global.window.location = '/sign-in/?application=vaoccmobile';\nvar wrapper = (0, _enzyme.shallow)(/*#__PURE__*/_react.default.createElement(_LoginContainer.default, {\n  isUnifiedSignIn: true,\n  externalApplication: \"vaoccmobile\"\n}));\nvar loginInfo = wrapper.find('va-link[text=\"VA staff\"]');\n(0, _chai.expect)(loginInfo).to.not.be.null;\nwrapper.unmount();",
              "err": {},
              "uuid": "b949ae58-e29c-4e7a-870a-ebe80ab751fe",
              "parentUUID": "175816a1-bb75-48bd-bf44-7b0c779ebfe3",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "e99d61ab-0506-4bcf-aa09-9c602ec0a7fc",
            "d48b86e1-4613-4001-a134-8b4dc29e1921",
            "cfc65b1e-0e5d-417d-bb60-d2e671f2dc1f",
            "6f28e896-9209-4508-bb65-395a00d38166",
            "c33d3ecf-964c-404d-b89c-090ab7c00bd8",
            "b949ae58-e29c-4e7a-870a-ebe80ab751fe"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "f0cbb556-7931-4f32-8085-6fd03b85a329",
          "title": "LoginHeader",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/platform/user/tests/authentication/components/LoginHeader.unit.spec.js",
          "file": "/src/platform/user/tests/authentication/components/LoginHeader.unit.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should render",
              "fullTitle": "LoginHeader should render",
              "timedOut": false,
              "duration": 14,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var screen = (0, _reactTestingLibraryHelpers.renderInReduxProvider)(/*#__PURE__*/_react.default.createElement(_LoginHeader.default, null), {\n  initialState: generateState({})\n});\n(0, _chai.expect)(screen.queryByText(/Sign in or create an account/)).to.not.be.null;",
              "err": {},
              "uuid": "77be7fa1-7cdd-45d9-8485-67fbd83feaaa",
              "parentUUID": "f0cbb556-7931-4f32-8085-6fd03b85a329",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should display the SessionTimeoutAlert component when the session is expired",
              "fullTitle": "LoginHeader should display the SessionTimeoutAlert component when the session is expired",
              "timedOut": false,
              "duration": 6,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var originalLocation = window.location;\ndelete window.location;\nwindow.location = _objectSpread(_objectSpread({}, originalLocation), {}, {\n  search: '?status=session_expired'\n});\nvar screen = (0, _reactTestingLibraryHelpers.renderInReduxProvider)(/*#__PURE__*/_react.default.createElement(_LoginHeader.default, null), {\n  initialState: generateState({})\n});\n(0, _chai.expect)(screen.queryByText(/Your session timed out. Sign in again to continue./i)).to.not.be.null;\nwindow.location = originalLocation;",
              "err": {},
              "uuid": "9b2790e1-dc4c-409d-82d9-6ada916e146f",
              "parentUUID": "f0cbb556-7931-4f32-8085-6fd03b85a329",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "77be7fa1-7cdd-45d9-8485-67fbd83feaaa",
            "9b2790e1-dc4c-409d-82d9-6ada916e146f"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 20,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "4262274d-4052-462b-b766-b5f7077ede28",
          "title": "LoginInfo",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/platform/user/tests/authentication/components/LoginInfo.unit.spec.js",
          "file": "/src/platform/user/tests/authentication/components/LoginInfo.unit.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "renders 6 links",
              "fullTitle": "LoginInfo renders 6 links",
              "timedOut": false,
              "duration": 4,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _renderInReduxProvide = (0, _reactTestingLibraryHelpers.renderInReduxProvider)(/*#__PURE__*/_react.default.createElement(_LoginInfo.default, null)),\n  container = _renderInReduxProvide.container;\nvar links = container.querySelectorAll('a');\n(0, _chai.expect)(links.length).to.eq(6);",
              "err": {},
              "uuid": "21eb5cdc-8d5f-4392-99e9-128d1f6adc2f",
              "parentUUID": "4262274d-4052-462b-b766-b5f7077ede28",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "21eb5cdc-8d5f-4392-99e9-128d1f6adc2f"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 4,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "9cfc1dd0-e944-49af-b499-fc380145cfdd",
          "title": "LoginNote",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/platform/user/tests/authentication/components/LoginNote.unit.spec.js",
          "file": "/src/platform/user/tests/authentication/components/LoginNote.unit.spec.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"LoginNote\"",
              "fullTitle": "LoginNote \"before each\" hook in \"LoginNote\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "wrapper = (0, _enzyme.shallow)(/*#__PURE__*/_react.default.createElement(_LoginNote.default, null));",
              "err": {},
              "uuid": "66d056a8-cf1e-477c-b318-bbca074a5f11",
              "parentUUID": "9cfc1dd0-e944-49af-b499-fc380145cfdd",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after each\" hook in \"LoginNote\"",
              "fullTitle": "LoginNote \"after each\" hook in \"LoginNote\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "return wrapper.unmount();",
              "err": {},
              "uuid": "bb15d39d-e1c2-4f0a-91ab-a588dbd4bc5a",
              "parentUUID": "9cfc1dd0-e944-49af-b499-fc380145cfdd",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "should render",
              "fullTitle": "LoginNote should render",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, _chai.expect)(wrapper.find('a').text()).includes('Learn about creating');\nwrapper.unmount();",
              "err": {},
              "uuid": "4f3cb12f-d75a-415f-b278-e8f8a2d5cdae",
              "parentUUID": "9cfc1dd0-e944-49af-b499-fc380145cfdd",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "4f3cb12f-d75a-415f-b278-e8f8a2d5cdae"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "01b44b3d-e421-45a2-88b3-391150125137",
          "title": "LogoutAlert",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/platform/user/tests/authentication/components/LogoutAlert.unit.spec.js",
          "file": "/src/platform/user/tests/authentication/components/LogoutAlert.unit.spec.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"LogoutAlert\"",
              "fullTitle": "LogoutAlert \"before each\" hook in \"LogoutAlert\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "wrapper = (0, _enzyme.shallow)(/*#__PURE__*/_react.default.createElement(_LogoutAlert.default, null));",
              "err": {},
              "uuid": "5f79dc8b-cd37-400b-948a-31cf7eeb9a90",
              "parentUUID": "01b44b3d-e421-45a2-88b3-391150125137",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after each\" hook in \"LogoutAlert\"",
              "fullTitle": "LogoutAlert \"after each\" hook in \"LogoutAlert\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "return wrapper.unmount();",
              "err": {},
              "uuid": "67ca4380-d290-43bd-b3d2-35b053cd8708",
              "parentUUID": "01b44b3d-e421-45a2-88b3-391150125137",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "should render",
              "fullTitle": "LogoutAlert should render",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, _chai.expect)(wrapper.find('h2').text()).includes('signed out');\nwrapper.unmount();",
              "err": {},
              "uuid": "4f721102-d550-4df8-82f6-374082cb2e97",
              "parentUUID": "01b44b3d-e421-45a2-88b3-391150125137",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should verify URL links are correct",
              "fullTitle": "LogoutAlert should verify URL links are correct",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, _chai.expect)(wrapper.find('Connect(EbenefitsLink)').exists()).to.be.true;\n(0, _chai.expect)(wrapper.find('[data-testid=\"mhv\"]').prop('href')).to.eql('https://www.myhealth.va.gov');\n(0, _chai.expect)(wrapper.find('[data-testid=\"mhv\"]').prop('href')).includes('/');\nwrapper.unmount();",
              "err": {},
              "uuid": "acc033ad-2025-47db-87cf-8d1e0597bb01",
              "parentUUID": "01b44b3d-e421-45a2-88b3-391150125137",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "4f721102-d550-4df8-82f6-374082cb2e97",
            "acc033ad-2025-47db-87cf-8d1e0597bb01"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "71aaa36e-886e-434e-872e-c7f76c34404a",
          "title": "ServiceProvidersText",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/platform/user/tests/authentication/components/ServiceProvidersText.unit.spec.js",
          "file": "/src/platform/user/tests/authentication/components/ServiceProvidersText.unit.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should display 4 CSPS if loginGovDisabled flag is disabled",
              "fullTitle": "ServiceProvidersText should display 4 CSPS if loginGovDisabled flag is disabled",
              "timedOut": false,
              "duration": 5,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getServiceProvidersT = getServiceProvidersTextData({}),\n  wrapper = _getServiceProvidersT.wrapper;\n(0, _chai.expect)(serviceProviders.includes(wrapper.text()));\nwrapper.unmount();",
              "err": {},
              "uuid": "893c2708-3fff-46a4-8165-1bd159a7954b",
              "parentUUID": "71aaa36e-886e-434e-872e-c7f76c34404a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should display bold if `isBold` is truthy",
              "fullTitle": "ServiceProvidersText should display bold if `isBold` is truthy",
              "timedOut": false,
              "duration": 0,
              "state": "pending",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": true,
              "context": null,
              "code": "",
              "err": {},
              "uuid": "a6bf4870-9e7b-4900-b91d-8c04ec50ff87",
              "parentUUID": "71aaa36e-886e-434e-872e-c7f76c34404a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should display normal if `isBold` is falsy",
              "fullTitle": "ServiceProvidersText should display normal if `isBold` is falsy",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getServiceProvidersT3 = getServiceProvidersTextData({\n    propsIsBold: false\n  }),\n  wrapper = _getServiceProvidersT3.wrapper;\n(0, _chai.expect)(wrapper.find('strong').exists()).to.be.false;\nwrapper.unmount();",
              "err": {},
              "uuid": "04fe05fc-aa6f-401d-abde-43f4459a46a4",
              "parentUUID": "71aaa36e-886e-434e-872e-c7f76c34404a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "893c2708-3fff-46a4-8165-1bd159a7954b",
            "04fe05fc-aa6f-401d-abde-43f4459a46a4"
          ],
          "failures": [],
          "pending": [
            "a6bf4870-9e7b-4900-b91d-8c04ec50ff87"
          ],
          "skipped": [],
          "duration": 7,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "e9024b65-d49e-4312-9713-6d42f17344a7",
          "title": "ServiceProvidersTextCreateAcct",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/platform/user/tests/authentication/components/ServiceProvidersText.unit.spec.js",
          "file": "/src/platform/user/tests/authentication/components/ServiceProvidersText.unit.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should render string if `isFormBased` prop is truthy",
              "fullTitle": "ServiceProvidersTextCreateAcct should render string if `isFormBased` prop is truthy",
              "timedOut": false,
              "duration": 3,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getServiceProvidersT4 = getServiceProvidersTextCreateAcctData({\n    propsIsFormBased: true\n  }),\n  wrapper = _getServiceProvidersT4.wrapper;\n(0, _chai.expect)(wrapper.text()).to.include('completed this form without signing in, and you');\nwrapper.unmount();",
              "err": {},
              "uuid": "9ca27799-5a0a-4e04-b03b-1e2650a15b99",
              "parentUUID": "e9024b65-d49e-4312-9713-6d42f17344a7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should NOT render string if `isFormBased` prop is falsy",
              "fullTitle": "ServiceProvidersTextCreateAcct should NOT render string if `isFormBased` prop is falsy",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getServiceProvidersT5 = getServiceProvidersTextCreateAcctData({\n    propsIsFormBased: false\n  }),\n  wrapper = _getServiceProvidersT5.wrapper;\n(0, _chai.expect)(wrapper.text()).to.not.include('completed this form without signing in, and you');\nwrapper.unmount();",
              "err": {},
              "uuid": "0c52e9a4-3979-465e-a0a1-d28ec1e3fc7b",
              "parentUUID": "e9024b65-d49e-4312-9713-6d42f17344a7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should render string if `hasExtraTodo` prop is truthy",
              "fullTitle": "ServiceProvidersTextCreateAcct should render string if `hasExtraTodo` prop is truthy",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getServiceProvidersT6 = getServiceProvidersTextCreateAcctData({\n    propsHasExtraTodo: true\n  }),\n  wrapper = _getServiceProvidersT6.wrapper;\n(0, _chai.expect)(wrapper.text()).to.include('When you sign in or create an account, you’ll be able to:');\nwrapper.unmount();",
              "err": {},
              "uuid": "43a2d909-9086-4c9b-bf22-9ddb2b974a83",
              "parentUUID": "e9024b65-d49e-4312-9713-6d42f17344a7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should NOT render string if `hasExtraTodo` prop is falsy",
              "fullTitle": "ServiceProvidersTextCreateAcct should NOT render string if `hasExtraTodo` prop is falsy",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getServiceProvidersT7 = getServiceProvidersTextCreateAcctData({\n    propsHasExtraTodo: false\n  }),\n  wrapper = _getServiceProvidersT7.wrapper;\n(0, _chai.expect)(wrapper.text()).to.not.include('When you sign in or create an account, you’ll be able to:');\nwrapper.unmount();",
              "err": {},
              "uuid": "a65b2130-12ac-42a3-b35c-ffd54b46c2fb",
              "parentUUID": "e9024b65-d49e-4312-9713-6d42f17344a7",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "9ca27799-5a0a-4e04-b03b-1e2650a15b99",
            "0c52e9a4-3979-465e-a0a1-d28ec1e3fc7b",
            "43a2d909-9086-4c9b-bf22-9ddb2b974a83",
            "a65b2130-12ac-42a3-b35c-ffd54b46c2fb"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 8,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "7eef86d1-beaa-43e9-9091-ec73eecc9f6b",
          "title": "SessionTimeoutAlert",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/platform/user/tests/authentication/components/SessionTimeoutAlert.unit.spec.js",
          "file": "/src/platform/user/tests/authentication/components/SessionTimeoutAlert.unit.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "does not render when no query parameters are provided",
              "fullTitle": "SessionTimeoutAlert does not render when no query parameters are provided",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var screen = (0, _reactTestingLibraryHelpers.renderInReduxProvider)(/*#__PURE__*/_react.default.createElement(_SessionTimeoutAlert.default, null), {\n  initialState: generateState({})\n});\n(0, _chai.expect)(screen.queryByText(/Your session timed out. Sign in again to continue./i)).to.be.null;",
              "err": {},
              "uuid": "92246d35-059f-4f42-94b0-60cfc37f503d",
              "parentUUID": "7eef86d1-beaa-43e9-9091-ec73eecc9f6b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "renders when session has expired and there is no downtime",
              "fullTitle": "SessionTimeoutAlert renders when session has expired and there is no downtime",
              "timedOut": false,
              "duration": 3,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var originalLocation = global.window.location;\nglobal.window.location = _objectSpread(_objectSpread({}, originalLocation), {}, {\n  search: '?status=session_expired'\n});\nvar screen = (0, _reactTestingLibraryHelpers.renderInReduxProvider)(/*#__PURE__*/_react.default.createElement(_SessionTimeoutAlert.default, null), {\n  initialState: generateState({})\n});\n(0, _chai.expect)(screen.queryByText(/Your session timed out. Sign in again to continue./i)).to.not.be.null;\nglobal.window.location = originalLocation;",
              "err": {},
              "uuid": "e16c9bf9-ea8e-4495-aed4-5ec393fbb57d",
              "parentUUID": "7eef86d1-beaa-43e9-9091-ec73eecc9f6b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "does not render when session has expired but there is downtime",
              "fullTitle": "SessionTimeoutAlert does not render when session has expired but there is downtime",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var originalLocation = global.window.location;\nglobal.window.location = _objectSpread(_objectSpread({}, originalLocation), {}, {\n  search: '?status=session_expired'\n});\nvar screen = (0, _reactTestingLibraryHelpers.renderInReduxProvider)(/*#__PURE__*/_react.default.createElement(_SessionTimeoutAlert.default, null), {\n  initialState: generateState({\n    statuses: [{\n      serviceId: 'idme',\n      status: 'down'\n    }]\n  })\n});\n(0, _chai.expect)(screen.queryByText(/Your session timed out. Sign in again to continue./i)).to.be.null;\nglobal.window.location = originalLocation;",
              "err": {},
              "uuid": "2e7683e4-b936-4038-b818-4d311b8273aa",
              "parentUUID": "7eef86d1-beaa-43e9-9091-ec73eecc9f6b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "92246d35-059f-4f42-94b0-60cfc37f503d",
            "e16c9bf9-ea8e-4495-aed4-5ec393fbb57d",
            "2e7683e4-b936-4038-b818-4d311b8273aa"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 5,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "a1e28bd3-9dec-44fb-935a-0a834e6c96a8",
          "title": "SessionTimeoutModal",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/platform/user/tests/authentication/components/SessionTimeoutModal.unit.spec.js",
          "file": "/src/platform/user/tests/authentication/components/SessionTimeoutModal.unit.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should render Modal",
              "fullTitle": "SessionTimeoutModal should render Modal",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var component = (0, _enzyme.shallow)(/*#__PURE__*/_react.default.createElement(_SessionTimeoutModal.SessionTimeoutModal, defaultProps));\nvar buttons = component.find('button');\n(0, _chai.expect)(component).to.have.lengthOf(1);\n(0, _chai.expect)(buttons.length).to.eql(2);\ncomponent.unmount();",
              "err": {},
              "uuid": "a680af04-a265-4a40-9149-7e56a6e4c809",
              "parentUUID": "a1e28bd3-9dec-44fb-935a-0a834e6c96a8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should map state to props",
              "fullTitle": "SessionTimeoutModal should map state to props",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var state = {\n  user: {\n    login: {\n      currentlyLoggedIn: true\n    },\n    profile: {\n      session: {\n        authBroker: 'sis'\n      },\n      signIn: {\n        serviceName: 'logingov'\n      }\n    }\n  }\n};\nvar props = (0, _SessionTimeoutModal.mapStateToProps)(state);\n(0, _chai.expect)(props.isLoggedIn).to.eql(true);\n(0, _chai.expect)(props.authenticatedWithOAuth).to.eql(true);\n(0, _chai.expect)(props.serviceName).to.eql('logingov');",
              "err": {},
              "uuid": "87afdc76-c852-4185-9318-951f60c5424a",
              "parentUUID": "a1e28bd3-9dec-44fb-935a-0a834e6c96a8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "extends the session when the modal is closed",
              "fullTitle": "SessionTimeoutModal extends the session when the modal is closed",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var onExtendSessionSpy = _sinon.default.spy();\nvar props = _objectSpread(_objectSpread({}, defaultProps), {}, {\n  onExtendSession: onExtendSessionSpy\n});\nvar component = (0, _enzyme.shallow)(/*#__PURE__*/_react.default.createElement(_SessionTimeoutModal.SessionTimeoutModal, props));\ncomponent.find('Modal').prop('onClose')();\n(0, _chai.expect)(onExtendSessionSpy.calledOnce).to.be.true;\ncomponent.unmount();",
              "err": {},
              "uuid": "044d00ab-68ea-426c-a14d-34acdb083e86",
              "parentUUID": "a1e28bd3-9dec-44fb-935a-0a834e6c96a8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should call refresh when extendSession is called and authenticatedWithOAuth is true",
              "fullTitle": "SessionTimeoutModal should call refresh when extendSession is called and authenticatedWithOAuth is true",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var refreshStub = _sinon.default.stub(oauthUtilities, 'refresh');\nvar props = _objectSpread(_objectSpread({}, defaultProps), {}, {\n  authenticatedWithOAuth: true\n});\nvar component = (0, _enzyme.shallow)(/*#__PURE__*/_react.default.createElement(_SessionTimeoutModal.SessionTimeoutModal, props));\ncomponent.instance().extendSession();\n(0, _chai.expect)(refreshStub.calledOnce).to.be.true;\n(0, _chai.expect)(refreshStub.calledWith({\n  type: 'logingov'\n})).to.be.true;\nrefreshStub.restore();\ncomponent.unmount();",
              "err": {},
              "uuid": "85759dd5-9ff1-4cba-8c84-e7b42e29fa7e",
              "parentUUID": "a1e28bd3-9dec-44fb-935a-0a834e6c96a8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should call logoutUrlSiS when signing out while authenticatedWithOAuth is true",
              "fullTitle": "SessionTimeoutModal should call logoutUrlSiS when signing out while authenticatedWithOAuth is true",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var logoutUrlSiSStub = _sinon.default.stub(oauthUtilities, 'logoutUrlSiS');\nvar props = _objectSpread(_objectSpread({}, defaultProps), {}, {\n  authenticatedWithOAuth: true\n});\nvar component = (0, _enzyme.shallow)(/*#__PURE__*/_react.default.createElement(_SessionTimeoutModal.SessionTimeoutModal, props));\ncomponent.instance().signOut();\n(0, _chai.expect)(logoutUrlSiSStub.calledOnce).to.be.true;\nlogoutUrlSiSStub.restore();\ncomponent.unmount();",
              "err": {},
              "uuid": "4beadc74-abbe-49ea-a932-850381da72b7",
              "parentUUID": "a1e28bd3-9dec-44fb-935a-0a834e6c96a8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should call IAMLogout when signing out while authenticatedWithOAuth is false",
              "fullTitle": "SessionTimeoutModal should call IAMLogout when signing out while authenticatedWithOAuth is false",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var IAMLogoutStub = _sinon.default.stub(authenticationUtilities, 'logout');\nvar component = (0, _enzyme.shallow)(/*#__PURE__*/_react.default.createElement(_SessionTimeoutModal.SessionTimeoutModal, defaultProps));\ncomponent.instance().signOut();\n(0, _chai.expect)(IAMLogoutStub.calledOnce).to.be.true;\nIAMLogoutStub.restore();\ncomponent.unmount();",
              "err": {},
              "uuid": "39f379de-24b9-4a9e-be06-30ec4aafb0e7",
              "parentUUID": "a1e28bd3-9dec-44fb-935a-0a834e6c96a8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should call logoutUrlSiS when the session expires while authenticatedWithOAuth is true",
              "fullTitle": "SessionTimeoutModal should call logoutUrlSiS when the session expires while authenticatedWithOAuth is true",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var logoutUrlSiSStub = _sinon.default.stub(oauthUtilities, 'logoutUrlSiS');\nvar props = _objectSpread(_objectSpread({}, defaultProps), {}, {\n  authenticatedWithOAuth: true\n});\nvar component = (0, _enzyme.shallow)(/*#__PURE__*/_react.default.createElement(_SessionTimeoutModal.SessionTimeoutModal, props));\ncomponent.instance().expireSession();\n(0, _chai.expect)(logoutUrlSiSStub.calledOnce).to.be.true;\nlogoutUrlSiSStub.restore();\ncomponent.unmount();",
              "err": {},
              "uuid": "c2fcf26a-93d8-4b7f-b331-6b57d0b3ffee",
              "parentUUID": "a1e28bd3-9dec-44fb-935a-0a834e6c96a8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should call IAMLogout when the session expires while authenticatedWithOAuth is false",
              "fullTitle": "SessionTimeoutModal should call IAMLogout when the session expires while authenticatedWithOAuth is false",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var IAMLogoutStub = _sinon.default.stub(authenticationUtilities, 'logout');\nvar component = (0, _enzyme.shallow)(/*#__PURE__*/_react.default.createElement(_SessionTimeoutModal.SessionTimeoutModal, defaultProps));\ncomponent.instance().expireSession();\n(0, _chai.expect)(IAMLogoutStub.calledOnce).to.be.true;\nIAMLogoutStub.restore();\ncomponent.unmount();",
              "err": {},
              "uuid": "ed073e1a-af66-4482-b5eb-862e5343234e",
              "parentUUID": "a1e28bd3-9dec-44fb-935a-0a834e6c96a8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should clear interval and return when not logged in",
              "fullTitle": "SessionTimeoutModal should clear interval and return when not logged in",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var props = _objectSpread(_objectSpread({}, defaultProps), {}, {\n  isLoggedIn: false\n});\nvar component = (0, _enzyme.shallow)(/*#__PURE__*/_react.default.createElement(_SessionTimeoutModal.SessionTimeoutModal, props));\nvar instance = component.instance();\nvar clearIntervalSpy = _sinon.default.spy(instance, 'clearInterval');\ninstance.checkExpiration();\n(0, _chai.expect)(clearIntervalSpy.calledOnce).to.be.true;\nclearIntervalSpy.restore();\ncomponent.unmount();",
              "err": {},
              "uuid": "af09c55b-416a-44b8-a61c-91e4c5789dce",
              "parentUUID": "a1e28bd3-9dec-44fb-935a-0a834e6c96a8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return when there is no expirationDate",
              "fullTitle": "SessionTimeoutModal should return when there is no expirationDate",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var component = (0, _enzyme.shallow)(/*#__PURE__*/_react.default.createElement(_SessionTimeoutModal.SessionTimeoutModal, defaultProps));\nvar instance = component.instance();\ninstance.checkExpiration();\n// Ensure no state changes or method calls\n(0, _chai.expect)(instance.state.countdown).to.be.null;\ncomponent.unmount();",
              "err": {},
              "uuid": "19b7e6de-846a-4312-b034-12ea3ac1ecd9",
              "parentUUID": "a1e28bd3-9dec-44fb-935a-0a834e6c96a8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should call expireSession when countdown is less than 0",
              "fullTitle": "SessionTimeoutModal should call expireSession when countdown is less than 0",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var pastDate = new Date(Date.now() - 60000).toISOString(); // 1 minute ago\n_localStorage.default.setItem('sessionExpiration', pastDate);\nvar component = (0, _enzyme.shallow)(/*#__PURE__*/_react.default.createElement(_SessionTimeoutModal.SessionTimeoutModal, defaultProps));\nvar instance = component.instance();\nvar expireSessionSpy = _sinon.default.spy(instance, 'expireSession');\ninstance.checkExpiration();\n(0, _chai.expect)(expireSessionSpy.calledOnce).to.be.true;\n_localStorage.default.clear();\nexpireSessionSpy.restore();\ncomponent.unmount();",
              "err": {},
              "uuid": "a8545502-c102-4e98-994e-24a7fc735321",
              "parentUUID": "a1e28bd3-9dec-44fb-935a-0a834e6c96a8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should set state.countdown when countdown is gte 0 and lte MODAL_DURATION",
              "fullTitle": "SessionTimeoutModal should set state.countdown when countdown is gte 0 and lte MODAL_DURATION",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var futureDate = new Date(Date.now() + 15000).toISOString(); // 15 seconds in future\n_localStorage.default.setItem('sessionExpiration', futureDate);\nvar component = (0, _enzyme.shallow)(/*#__PURE__*/_react.default.createElement(_SessionTimeoutModal.SessionTimeoutModal, defaultProps));\nvar instance = component.instance();\nvar setStateSpy = _sinon.default.spy(instance, 'setState');\ninstance.checkExpiration();\n(0, _chai.expect)(setStateSpy.calledOnce).to.be.true;\n(0, _chai.expect)(instance.state.countdown).to.be.within(0, 30); // MODAL_DURATION is 30\n_localStorage.default.clear();\nsetStateSpy.restore();\ncomponent.unmount();",
              "err": {},
              "uuid": "3e64a048-d2b0-47a5-8456-deaf189c1dbf",
              "parentUUID": "a1e28bd3-9dec-44fb-935a-0a834e6c96a8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should do nothing when countdown is greater than MODAL_DURATION",
              "fullTitle": "SessionTimeoutModal should do nothing when countdown is greater than MODAL_DURATION",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var futureDate = new Date(Date.now() + 60000).toISOString(); // 60 seconds in future\n_localStorage.default.setItem('sessionExpiration', futureDate);\nvar component = (0, _enzyme.shallow)(/*#__PURE__*/_react.default.createElement(_SessionTimeoutModal.SessionTimeoutModal, defaultProps));\nvar instance = component.instance();\nvar setStateSpy = _sinon.default.spy(instance, 'setState');\nvar expireSessionSpy = _sinon.default.spy(instance, 'expireSession');\ninstance.checkExpiration();\n(0, _chai.expect)(setStateSpy.notCalled).to.be.true;\n(0, _chai.expect)(expireSessionSpy.notCalled).to.be.true;\n_localStorage.default.clear();\nsetStateSpy.restore();\nexpireSessionSpy.restore();\ncomponent.unmount();",
              "err": {},
              "uuid": "cebc4532-0aa6-42e4-ae66-0af4a08f2fb6",
              "parentUUID": "a1e28bd3-9dec-44fb-935a-0a834e6c96a8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "does not set interval when expirationInterval is already set",
              "fullTitle": "SessionTimeoutModal does not set interval when expirationInterval is already set",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var component = (0, _enzyme.shallow)(/*#__PURE__*/_react.default.createElement(_SessionTimeoutModal.SessionTimeoutModal, defaultProps));\nvar instance = component.instance();\ninstance.expirationInterval = 123;\nvar setIntervalSpy = _sinon.default.spy(global, 'setInterval');\ninstance.componentDidUpdate();\n(0, _chai.expect)(setIntervalSpy.notCalled).to.be.true;\nsetIntervalSpy.restore();\ncomponent.unmount();",
              "err": {},
              "uuid": "3e8b8715-0abe-4622-a86f-05d33ba54749",
              "parentUUID": "a1e28bd3-9dec-44fb-935a-0a834e6c96a8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "sets the service name to an empty string when it is undefined",
              "fullTitle": "SessionTimeoutModal sets the service name to an empty string when it is undefined",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var state = {\n  user: {\n    login: {\n      currentlyLoggedIn: true\n    },\n    profile: {\n      session: {\n        authBroker: 'sis'\n      },\n      signIn: {\n        serviceName: undefined\n      }\n    }\n  }\n};\nvar props = (0, _SessionTimeoutModal.mapStateToProps)(state);\nvar component = (0, _enzyme.shallow)(/*#__PURE__*/_react.default.createElement(_SessionTimeoutModal.SessionTimeoutModal, props));\nvar instance = component.instance();\ninstance.componentDidUpdate();\n(0, _chai.expect)(instance.serviceName).to.eql('');\ncomponent.unmount();",
              "err": {},
              "uuid": "b6a3338d-fb53-4818-b912-1c5bfb81fd72",
              "parentUUID": "a1e28bd3-9dec-44fb-935a-0a834e6c96a8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "sets the service name to an empty string when it is null",
              "fullTitle": "SessionTimeoutModal sets the service name to an empty string when it is null",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var state = {\n  user: {\n    login: {\n      currentlyLoggedIn: true\n    },\n    profile: {\n      session: {\n        authBroker: 'sis'\n      },\n      signIn: {\n        serviceName: null\n      }\n    }\n  }\n};\nvar props = (0, _SessionTimeoutModal.mapStateToProps)(state);\nvar component = (0, _enzyme.shallow)(/*#__PURE__*/_react.default.createElement(_SessionTimeoutModal.SessionTimeoutModal, props));\nvar instance = component.instance();\ninstance.componentDidUpdate();\n(0, _chai.expect)(instance.serviceName).to.eql('');\ncomponent.unmount();",
              "err": {},
              "uuid": "248863db-a2e3-4900-acab-0ab129b2840a",
              "parentUUID": "a1e28bd3-9dec-44fb-935a-0a834e6c96a8",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a680af04-a265-4a40-9149-7e56a6e4c809",
            "87afdc76-c852-4185-9318-951f60c5424a",
            "044d00ab-68ea-426c-a14d-34acdb083e86",
            "85759dd5-9ff1-4cba-8c84-e7b42e29fa7e",
            "4beadc74-abbe-49ea-a932-850381da72b7",
            "39f379de-24b9-4a9e-be06-30ec4aafb0e7",
            "c2fcf26a-93d8-4b7f-b331-6b57d0b3ffee",
            "ed073e1a-af66-4482-b5eb-862e5343234e",
            "af09c55b-416a-44b8-a61c-91e4c5789dce",
            "19b7e6de-846a-4312-b034-12ea3ac1ecd9",
            "a8545502-c102-4e98-994e-24a7fc735321",
            "3e64a048-d2b0-47a5-8456-deaf189c1dbf",
            "cebc4532-0aa6-42e4-ae66-0af4a08f2fb6",
            "3e8b8715-0abe-4622-a86f-05d33ba54749",
            "b6a3338d-fb53-4818-b912-1c5bfb81fd72",
            "248863db-a2e3-4900-acab-0ab129b2840a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 18,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "a0907160-b98e-43da-bc88-1477fe7ef5be",
          "title": "SignInModal",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/platform/user/tests/authentication/components/SignInModal.unit.spec.js",
          "file": "/src/platform/user/tests/authentication/components/SignInModal.unit.spec.js",
          "beforeHooks": [],
          "afterHooks": [
            {
              "title": "\"after each\" hook in \"SignInModal\"",
              "fullTitle": "SignInModal \"after each\" hook in \"SignInModal\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "global.window.dataLayer = oldDataLayer;",
              "err": {},
              "uuid": "64ebee97-af3f-42ee-bbd1-ad6a385d167e",
              "parentUUID": "a0907160-b98e-43da-bc88-1477fe7ef5be",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "should NOT render if `visible` is set to false",
              "fullTitle": "SignInModal should NOT render if `visible` is set to false",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var screen = (0, _reactTestingLibraryHelpers.renderInReduxProvider)(/*#__PURE__*/_react.default.createElement(_SignInModal.default, null), {\n  initialState: generateStore()\n});\nvar modal = (0, _ui.$)('va-modal[visible]', screen.container);\n(0, _chai.expect)(modal).to.be.null;",
              "err": {},
              "uuid": "7fa42d8f-c684-42b8-bd93-22c9294ceffd",
              "parentUUID": "a0907160-b98e-43da-bc88-1477fe7ef5be",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should render if `visible` is set to true",
              "fullTitle": "SignInModal should render if `visible` is set to true",
              "timedOut": false,
              "duration": 14,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var screen = (0, _reactTestingLibraryHelpers.renderInReduxProvider)(/*#__PURE__*/_react.default.createElement(_SignInModal.default, {\n  visible: true\n}), {\n  initialState: generateStore()\n});\nvar modal = (0, _ui.$)('va-modal[visible]', screen.container);\n(0, _chai.expect)(modal).to.not.be.null;\n(0, _chai.expect)(screen.queryByText('Sign in or create an account')).to.not.be.null;",
              "err": {},
              "uuid": "c311a045-3012-48fa-a70d-87deea9b94b3",
              "parentUUID": "a0907160-b98e-43da-bc88-1477fe7ef5be",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should verify the close button works as expected",
              "fullTitle": "SignInModal should verify the close button works as expected",
              "timedOut": false,
              "duration": 12,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var onClose = _sinon.default.spy();\nvar screen = (0, _reactTestingLibraryHelpers.renderInReduxProvider)(/*#__PURE__*/_react.default.createElement(_SignInModal.default, {\n  visible: true,\n  onClose: onClose\n}), {\n  initialState: generateStore()\n});\n(0, _ui.$)('va-modal', screen.container).__events.closeEvent();\n(0, _chai.expect)(onClose.called).to.be.true;",
              "err": {},
              "uuid": "828c029d-2c98-460a-97fb-b59bd4a54ce4",
              "parentUUID": "a0907160-b98e-43da-bc88-1477fe7ef5be",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should render the LoginContainer component",
              "fullTitle": "SignInModal should render the LoginContainer component",
              "timedOut": false,
              "duration": 12,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var screen = (0, _reactTestingLibraryHelpers.renderInReduxProvider)(/*#__PURE__*/_react.default.createElement(_SignInModal.default, {\n  visible: true\n}), {\n  initialState: generateStore()\n});\n(0, _chai.expect)(screen.getByText('Sign in or create an account')).to.exist;",
              "err": {},
              "uuid": "e7703629-ba94-451b-aa1d-4ac5bb228355",
              "parentUUID": "a0907160-b98e-43da-bc88-1477fe7ef5be",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "7fa42d8f-c684-42b8-bd93-22c9294ceffd",
            "c311a045-3012-48fa-a70d-87deea9b94b3",
            "828c029d-2c98-460a-97fb-b59bd4a54ce4",
            "e7703629-ba94-451b-aa1d-4ac5bb228355"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 40,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "644d84f8-8d51-4370-b071-d021f8c0a716",
          "title": "TransitionModal",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/platform/user/tests/authentication/components/TransitionModal.unit.spec.js",
          "file": "/src/platform/user/tests/authentication/components/TransitionModal.unit.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should display when `visible` is set to true",
              "fullTitle": "TransitionModal should display when `visible` is set to true",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var wrapper = (0, _enzyme.mount)(/*#__PURE__*/_react.default.createElement(_TransitionModal.default, props));\n(0, _chai.expect)(wrapper.prop('visible')).to.be.false;\nwrapper.props().visible = true;\n(0, _chai.expect)(wrapper.prop('visible')).to.be.true;\nwrapper.unmount();",
              "err": {},
              "uuid": "806e9cc5-578b-4fd0-ae7d-2dcae42088ec",
              "parentUUID": "644d84f8-8d51-4370-b071-d021f8c0a716",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should include `Prepare for sign in changes at VA` in the modal",
              "fullTitle": "TransitionModal should include `Prepare for sign in changes at VA` in the modal",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var wrapper = (0, _enzyme.mount)(/*#__PURE__*/_react.default.createElement(_TransitionModal.default, props));\n(0, _chai.expect)(wrapper.find('Modal').props().title).to.include('Prepare for sign in changes at VA');\nwrapper.unmount();",
              "err": {},
              "uuid": "d70d9e7e-4c0f-4300-a392-68afa8f67cc1",
              "parentUUID": "644d84f8-8d51-4370-b071-d021f8c0a716",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should forward as a primary action",
              "fullTitle": "TransitionModal should forward as a primary action",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var wrapper = (0, _enzyme.shallow)(/*#__PURE__*/_react.default.createElement(_TransitionModal.default, props));\nwrapper.prop('primaryButton').action();\n(0, _chai.expect)(window.location).equal('/transfer-account');\nwrapper.unmount();",
              "err": {},
              "uuid": "910bcf06-9610-41dc-8cb9-4f3affcf95ad",
              "parentUUID": "644d84f8-8d51-4370-b071-d021f8c0a716",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should close as a secondary action",
              "fullTitle": "TransitionModal should close as a secondary action",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var wrapper = (0, _enzyme.shallow)(/*#__PURE__*/_react.default.createElement(_TransitionModal.default, props));\nwrapper.prop('secondaryButton').action();\n(0, _chai.expect)(wrapper.prop('onClose').calledOnce).to.be.true;\nwrapper.unmount();",
              "err": {},
              "uuid": "e1a264f2-5290-4ec8-a4d3-adec63467155",
              "parentUUID": "644d84f8-8d51-4370-b071-d021f8c0a716",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "806e9cc5-578b-4fd0-ae7d-2dcae42088ec",
            "d70d9e7e-4c0f-4300-a392-68afa8f67cc1",
            "910bcf06-9610-41dc-8cb9-4f3affcf95ad",
            "e1a264f2-5290-4ec8-a4d3-adec63467155"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 5,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "01dc5d7e-eb71-4212-ab2c-ac37920dfe97",
          "title": "",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/platform/user/tests/authentication/components/TransitionSuccessModal.unit.spec.js",
          "file": "/src/platform/user/tests/authentication/components/TransitionSuccessModal.unit.spec.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"\"",
              "fullTitle": " \"before each\" hook in \"\"",
              "timedOut": false,
              "duration": 1,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "store = mockStore({\n  user: {\n    profile: {\n      signIn: {\n        serviceName: 'mhv'\n      }\n    }\n  }\n});\nwrapper = (0, _enzyme.mount)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n  store: store\n}, /*#__PURE__*/_react.default.createElement(_TransitionSuccessModal.default, props)));",
              "err": {},
              "uuid": "13aa0ff5-e05c-4c11-ab4e-0842c73f2b44",
              "parentUUID": "01dc5d7e-eb71-4212-ab2c-ac37920dfe97",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after each\" hook in \"\"",
              "fullTitle": " \"after each\" hook in \"\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "store = {};",
              "err": {},
              "uuid": "41ce742f-275e-45c8-b93e-684f202a9983",
              "parentUUID": "01dc5d7e-eb71-4212-ab2c-ac37920dfe97",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "should display when `visible` is set to true",
              "fullTitle": " should display when `visible` is set to true",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, _chai.expect)(wrapper.find('TransitionSuccessModal').prop('visible')).to.be.false;\nwrapper.children().props().visible = true;\n(0, _chai.expect)(wrapper.find('TransitionSuccessModal').prop('visible')).to.be.true;\nwrapper.unmount();",
              "err": {},
              "uuid": "30f3c7be-6a6d-4a22-8205-ac8714045c42",
              "parentUUID": "01dc5d7e-eb71-4212-ab2c-ac37920dfe97",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should include `Account transfer is complete` in the modal",
              "fullTitle": " should include `Account transfer is complete` in the modal",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, _chai.expect)(wrapper.find('Modal').props().title).to.include('Account transfer is complete');\nwrapper.unmount();",
              "err": {},
              "uuid": "b385bc46-7bc4-4985-ad74-a749e101c6b3",
              "parentUUID": "01dc5d7e-eb71-4212-ab2c-ac37920dfe97",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should close the modal when primaryButton action is called",
              "fullTitle": " should close the modal when primaryButton action is called",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _wrapper$find$prop = wrapper.find('Modal').prop('primaryButton'),\n  continueToVA = _wrapper$find$prop.action;\ncontinueToVA();\n(0, _chai.expect)(wrapper.find('TransitionSuccessModal').prop('onClose').calledOnce).to.be.true;\nwrapper.unmount();",
              "err": {},
              "uuid": "06f6fb41-5afa-4a8e-8628-ad54263260da",
              "parentUUID": "01dc5d7e-eb71-4212-ab2c-ac37920dfe97",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "30f3c7be-6a6d-4a22-8205-ac8714045c42",
            "b385bc46-7bc4-4985-ad74-a749e101c6b3",
            "06f6fb41-5afa-4a8e-8628-ad54263260da"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "3d40e04d-72fe-4e3b-93ed-1726799743ca",
          "title": "VerifyAccountLink",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/platform/user/tests/authentication/components/VerifyAccountLink.unit.spec.js",
          "file": "/src/platform/user/tests/authentication/components/VerifyAccountLink.unit.spec.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"VerifyAccountLink\"",
              "fullTitle": "VerifyAccountLink \"before each\" hook in \"VerifyAccountLink\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "global.window.crypto = _mockCrypto.mockCrypto;\nwindow.location = new URL('https://dev.va.gov/');",
              "err": {},
              "uuid": "0b51d7a9-533a-453e-96ed-63601c414700",
              "parentUUID": "3d40e04d-72fe-4e3b-93ed-1726799743ca",
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"before each\" hook in \"VerifyAccountLink\"",
              "fullTitle": "VerifyAccountLink \"before each\" hook in \"VerifyAccountLink\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "global.window.crypto = _mockCrypto.mockCrypto;\nwindow.location = new URL('https://dev.va.gov/');",
              "err": {},
              "uuid": "98034c4b-aaeb-45e3-b2ea-dabf7113eaa3",
              "parentUUID": "3d40e04d-72fe-4e3b-93ed-1726799743ca",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after each\" hook in \"VerifyAccountLink\"",
              "fullTitle": "VerifyAccountLink \"after each\" hook in \"VerifyAccountLink\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "global.window.crypto = oldCrypto;\n(0, _react2.cleanup)();",
              "err": {},
              "uuid": "25f5f11a-2a38-42dd-a000-b1e0fb389fbb",
              "parentUUID": "3d40e04d-72fe-4e3b-93ed-1726799743ca",
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"after each\" hook in \"VerifyAccountLink\"",
              "fullTitle": "VerifyAccountLink \"after each\" hook in \"VerifyAccountLink\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "global.window.crypto = oldCrypto;\n(0, _react2.cleanup)();",
              "err": {},
              "uuid": "c8b9df1c-7eb3-4569-ad0b-c51f7f45510c",
              "parentUUID": "3d40e04d-72fe-4e3b-93ed-1726799743ca",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "should render correctly for each logingov",
              "fullTitle": "VerifyAccountLink should render correctly for each logingov",
              "timedOut": false,
              "duration": 4,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
              "err": {},
              "uuid": "8bf2a8dd-1126-47f3-9aa3-70c70aad1bb4",
              "parentUUID": "3d40e04d-72fe-4e3b-93ed-1726799743ca",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should set correct href for logingov (SAML)",
              "fullTitle": "VerifyAccountLink should set correct href for logingov (SAML)",
              "timedOut": false,
              "duration": 3,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
              "err": {},
              "uuid": "fdb20f1f-43d7-4646-8ffc-afd57787d921",
              "parentUUID": "3d40e04d-72fe-4e3b-93ed-1726799743ca",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should set correct href for logingov (OAuth)",
              "fullTitle": "VerifyAccountLink should set correct href for logingov (OAuth)",
              "timedOut": false,
              "duration": 4,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
              "err": {},
              "uuid": "1c5ae712-70f8-4614-89bc-5cde76923600",
              "parentUUID": "3d40e04d-72fe-4e3b-93ed-1726799743ca",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should render correctly for each idme",
              "fullTitle": "VerifyAccountLink should render correctly for each idme",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
              "err": {},
              "uuid": "63ce43c4-931b-4d16-892b-207574baa6eb",
              "parentUUID": "3d40e04d-72fe-4e3b-93ed-1726799743ca",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should set correct href for idme (SAML)",
              "fullTitle": "VerifyAccountLink should set correct href for idme (SAML)",
              "timedOut": false,
              "duration": 3,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
              "err": {},
              "uuid": "d25da362-4aa8-40e1-9276-b6c589c1db26",
              "parentUUID": "3d40e04d-72fe-4e3b-93ed-1726799743ca",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should set correct href for idme (OAuth)",
              "fullTitle": "VerifyAccountLink should set correct href for idme (OAuth)",
              "timedOut": false,
              "duration": 5,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
              "err": {},
              "uuid": "5614ef2a-4719-4c90-b059-85b0ef23464f",
              "parentUUID": "3d40e04d-72fe-4e3b-93ed-1726799743ca",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "8bf2a8dd-1126-47f3-9aa3-70c70aad1bb4",
            "fdb20f1f-43d7-4646-8ffc-afd57787d921",
            "1c5ae712-70f8-4614-89bc-5cde76923600",
            "63ce43c4-931b-4d16-892b-207574baa6eb",
            "d25da362-4aa8-40e1-9276-b6c589c1db26",
            "5614ef2a-4719-4c90-b059-85b0ef23464f"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 21,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "2d3656d8-7f7e-4898-ab06-afc9286bbde8",
          "title": "Verify Buttons",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/platform/user/tests/authentication/components/VerifyButton.unit.spec.js",
          "file": "/src/platform/user/tests/authentication/components/VerifyButton.unit.spec.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"Verify Buttons\"",
              "fullTitle": "Verify Buttons \"before each\" hook in \"Verify Buttons\"",
              "timedOut": false,
              "duration": 1,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "sandbox = _sinon.default.createSandbox();\nsandbox.spy(AuthUtils, 'verify');\nsandbox.spy(OAuthUtils, 'updateStateAndVerifier');",
              "err": {},
              "uuid": "f814c941-6d9e-45d1-bbc7-e8d0b12b5206",
              "parentUUID": "2d3656d8-7f7e-4898-ab06-afc9286bbde8",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after each\" hook in \"Verify Buttons\"",
              "fullTitle": "Verify Buttons \"after each\" hook in \"Verify Buttons\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "sandbox.restore();",
              "err": {},
              "uuid": "ecb68b59-4719-49cd-9d99-531edaaa2197",
              "parentUUID": "2d3656d8-7f7e-4898-ab06-afc9286bbde8",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "should render the idme button and call verifyHandler with correct parameters",
              "fullTitle": "Verify Buttons should render the idme button and call verifyHandler with correct parameters",
              "timedOut": false,
              "duration": 4,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var store = sharedStore();\nvar queryParams = {\n  operation: \"\".concat(policy, \"_verification\")\n};\nvar useOAuth = true;\nvar _render = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: store\n  }, /*#__PURE__*/_react.default.createElement(ButtonComponent, {\n    queryParams: queryParams,\n    useOAuth: useOAuth\n  }))),\n  container = _render.container;\nvar button = container.querySelector(className);\n(0, _chai.expect)(button).to.exist;\n_react2.fireEvent.click(button);\n// Verify that `verify` was called with correct parameters\n_sinon.default.assert.calledOnce(AuthUtils.verify);\n_sinon.default.assert.calledWith(AuthUtils.verify, {\n  policy: policy,\n  acr: _sinon.default.match.string,\n  queryParams: queryParams,\n  useOAuth: useOAuth\n});\n// Verify that `updateStateAndVerifier` was called if `useOAuth` is true\nif (useOAuth) {\n  _sinon.default.assert.calledOnce(OAuthUtils.updateStateAndVerifier);\n  _sinon.default.assert.calledWith(OAuthUtils.updateStateAndVerifier, policy);\n}",
              "err": {},
              "uuid": "0cbbac05-8782-43fd-b9ef-d30434c8a07f",
              "parentUUID": "2d3656d8-7f7e-4898-ab06-afc9286bbde8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should render the logingov button and call verifyHandler with correct parameters",
              "fullTitle": "Verify Buttons should render the logingov button and call verifyHandler with correct parameters",
              "timedOut": false,
              "duration": 4,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var store = sharedStore();\nvar queryParams = {\n  operation: \"\".concat(policy, \"_verification\")\n};\nvar useOAuth = true;\nvar _render = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: store\n  }, /*#__PURE__*/_react.default.createElement(ButtonComponent, {\n    queryParams: queryParams,\n    useOAuth: useOAuth\n  }))),\n  container = _render.container;\nvar button = container.querySelector(className);\n(0, _chai.expect)(button).to.exist;\n_react2.fireEvent.click(button);\n// Verify that `verify` was called with correct parameters\n_sinon.default.assert.calledOnce(AuthUtils.verify);\n_sinon.default.assert.calledWith(AuthUtils.verify, {\n  policy: policy,\n  acr: _sinon.default.match.string,\n  queryParams: queryParams,\n  useOAuth: useOAuth\n});\n// Verify that `updateStateAndVerifier` was called if `useOAuth` is true\nif (useOAuth) {\n  _sinon.default.assert.calledOnce(OAuthUtils.updateStateAndVerifier);\n  _sinon.default.assert.calledWith(OAuthUtils.updateStateAndVerifier, policy);\n}",
              "err": {},
              "uuid": "c8d3d32f-fd80-422b-a17c-a065fd9cee67",
              "parentUUID": "2d3656d8-7f7e-4898-ab06-afc9286bbde8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should not call updateStateAndVerifier if useOAuth is false",
              "fullTitle": "Verify Buttons should not call updateStateAndVerifier if useOAuth is false",
              "timedOut": false,
              "duration": 3,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var store = sharedStore();\nvar queryParams = {\n  operation: 'idme_verification'\n};\nvar useOAuth = false;\nvar _render2 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: store\n  }, /*#__PURE__*/_react.default.createElement(_VerifyButton.VerifyIdmeButton, {\n    queryParams: queryParams,\n    useOAuth: useOAuth\n  }))),\n  container = _render2.container;\nvar button = container.querySelector('.idme-verify-button');\n(0, _chai.expect)(button).to.exist;\n_react2.fireEvent.click(button);\n_sinon.default.assert.calledOnce(AuthUtils.verify);\n_sinon.default.assert.neverCalledWith(OAuthUtils.updateStateAndVerifier);",
              "err": {},
              "uuid": "ff0b0425-7e30-4dd7-b632-840b58fb375a",
              "parentUUID": "2d3656d8-7f7e-4898-ab06-afc9286bbde8",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "0cbbac05-8782-43fd-b9ef-d30434c8a07f",
            "c8d3d32f-fd80-422b-a17c-a065fd9cee67",
            "ff0b0425-7e30-4dd7-b632-840b58fb375a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 11,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "1efee084-56a1-4d0e-84da-fe1f5a7f012d",
          "title": "VerifyButton",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/platform/user/tests/authentication/components/VerifyButton.unit.spec.js",
          "file": "/src/platform/user/tests/authentication/components/VerifyButton.unit.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should render and call verifyHandler with correct parameters",
              "fullTitle": "VerifyButton should render and call verifyHandler with correct parameters",
              "timedOut": false,
              "duration": 3,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var store = sharedStore();\nvar queryParams = {\n  operation: 'generic_verification'\n};\nvar useOAuth = true;\nvar csp = 'logingov';\nvar verifyHandlerSpy = _sinon.default.spy(_VerifyButton.verifyHandler);\nvar _render3 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: store\n  }, /*#__PURE__*/_react.default.createElement(_VerifyButton.VerifyButton, {\n    csp: csp,\n    onClick: verifyHandlerSpy,\n    queryParams: queryParams,\n    useOAuth: useOAuth\n  }))),\n  container = _render3.container;\nvar button = container.querySelector(\".\".concat(csp, \"-verify-buttons\"));\n(0, _chai.expect)(button).to.exist;\n_react2.fireEvent.click(button);\n_sinon.default.assert.calledOnce(verifyHandlerSpy);\n_sinon.default.assert.calledWith(verifyHandlerSpy, {\n  policy: csp,\n  queryParams: queryParams,\n  useOAuth: useOAuth\n});",
              "err": {},
              "uuid": "c8b61146-70b7-4a6c-b218-026972059d32",
              "parentUUID": "1efee084-56a1-4d0e-84da-fe1f5a7f012d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "c8b61146-70b7-4a6c-b218-026972059d32"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "22c00795-0cf1-4637-9f51-a053bee9b72b",
          "title": "verifyHandler",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/platform/user/tests/authentication/components/VerifyButton.unit.spec.js",
          "file": "/src/platform/user/tests/authentication/components/VerifyButton.unit.spec.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"verifyHandler\"",
              "fullTitle": "verifyHandler \"before each\" hook in \"verifyHandler\"",
              "timedOut": false,
              "duration": 1,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "sandbox = _sinon.default.createSandbox();\nsandbox.spy(AuthUtils, 'verify');\nsandbox.spy(OAuthUtils, 'updateStateAndVerifier');",
              "err": {},
              "uuid": "148b5d83-6e16-408b-b754-3a84f5360352",
              "parentUUID": "22c00795-0cf1-4637-9f51-a053bee9b72b",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after each\" hook in \"verifyHandler\"",
              "fullTitle": "verifyHandler \"after each\" hook in \"verifyHandler\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "sandbox.restore();",
              "err": {},
              "uuid": "3ce8286a-c000-4f12-b05f-a459a4b4a801",
              "parentUUID": "22c00795-0cf1-4637-9f51-a053bee9b72b",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "should call verify and updateStateAndVerifier correctly when useOAuth is true",
              "fullTitle": "verifyHandler should call verify and updateStateAndVerifier correctly when useOAuth is true",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var queryParams = {\n  operation: 'test_operation'\n};\nvar useOAuth = true;\nvar policy = 'logingov';\n(0, _VerifyButton.verifyHandler)({\n  policy: policy,\n  queryParams: queryParams,\n  useOAuth: useOAuth\n});\n_sinon.default.assert.calledOnce(AuthUtils.verify);\n_sinon.default.assert.calledWith(AuthUtils.verify, {\n  policy: policy,\n  acr: _sinon.default.match.string,\n  queryParams: queryParams,\n  useOAuth: useOAuth\n});\n_sinon.default.assert.calledOnce(OAuthUtils.updateStateAndVerifier);\n_sinon.default.assert.calledWith(OAuthUtils.updateStateAndVerifier, policy);",
              "err": {},
              "uuid": "d0c6a0dc-e3d6-4700-ab24-a18e3186c85a",
              "parentUUID": "22c00795-0cf1-4637-9f51-a053bee9b72b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should not call updateStateAndVerifier when useOAuth is false",
              "fullTitle": "verifyHandler should not call updateStateAndVerifier when useOAuth is false",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var queryParams = {\n  operation: 'test_operation'\n};\nvar useOAuth = false;\nvar policy = 'logingov';\n(0, _VerifyButton.verifyHandler)({\n  policy: policy,\n  queryParams: queryParams,\n  useOAuth: useOAuth\n});\n_sinon.default.assert.calledOnce(AuthUtils.verify);\n_sinon.default.assert.calledWith(AuthUtils.verify, {\n  policy: policy,\n  acr: _sinon.default.match.string,\n  queryParams: queryParams,\n  useOAuth: useOAuth\n});\n_sinon.default.assert.notCalled(OAuthUtils.updateStateAndVerifier);",
              "err": {},
              "uuid": "f796f0bd-8b84-4a38-ad8d-8504f4315eff",
              "parentUUID": "22c00795-0cf1-4637-9f51-a053bee9b72b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "d0c6a0dc-e3d6-4700-ab24-a18e3186c85a",
            "f796f0bd-8b84-4a38-ad8d-8504f4315eff"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "4e543367-348a-4eab-a0ac-8c030d010114",
          "title": "generateCSPBanner",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/platform/user/tests/authentication/downtime.unit.spec.js",
          "file": "/src/platform/user/tests/authentication/downtime.unit.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should return a correct banner message when csp is \"logingov\"",
              "fullTitle": "generateCSPBanner should return a correct banner message when csp is \"logingov\"",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var result = downtimeUtils.generateCSPBanner({\n  csp: csp\n});\n(0, _chai.expect)(result).to.deep.equal(downtimeUtils.DOWNTIME_BANNER_CONFIG[csp]);",
              "err": {},
              "uuid": "79671370-945a-40ce-8a42-7e2b4ea62368",
              "parentUUID": "4e543367-348a-4eab-a0ac-8c030d010114",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return a correct banner message when csp is \"idme\"",
              "fullTitle": "generateCSPBanner should return a correct banner message when csp is \"idme\"",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var result = downtimeUtils.generateCSPBanner({\n  csp: csp\n});\n(0, _chai.expect)(result).to.deep.equal(downtimeUtils.DOWNTIME_BANNER_CONFIG[csp]);",
              "err": {},
              "uuid": "0a31aa5f-05b1-4402-910c-9af6dc9a9bfe",
              "parentUUID": "4e543367-348a-4eab-a0ac-8c030d010114",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return a correct banner message when csp is \"dslogon\"",
              "fullTitle": "generateCSPBanner should return a correct banner message when csp is \"dslogon\"",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var result = downtimeUtils.generateCSPBanner({\n  csp: csp\n});\n(0, _chai.expect)(result).to.deep.equal(downtimeUtils.DOWNTIME_BANNER_CONFIG[csp]);",
              "err": {},
              "uuid": "0f2d031d-7a36-490c-be8d-fc11e64f610c",
              "parentUUID": "4e543367-348a-4eab-a0ac-8c030d010114",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return a correct banner message when csp is \"mhv\"",
              "fullTitle": "generateCSPBanner should return a correct banner message when csp is \"mhv\"",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var result = downtimeUtils.generateCSPBanner({\n  csp: csp\n});\n(0, _chai.expect)(result).to.deep.equal(downtimeUtils.DOWNTIME_BANNER_CONFIG[csp]);",
              "err": {},
              "uuid": "98179956-7f15-496f-842f-767435d9b48b",
              "parentUUID": "4e543367-348a-4eab-a0ac-8c030d010114",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should throw an error when csp is not provided",
              "fullTitle": "generateCSPBanner should throw an error when csp is not provided",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, _chai.expect)(function () {\n  return downtimeUtils.generateCSPBanner({});\n}).to.throw(Error);",
              "err": {},
              "uuid": "0d7ed4af-7e4d-43a7-94b5-89dacf5bdf38",
              "parentUUID": "4e543367-348a-4eab-a0ac-8c030d010114",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should throw an error when csp is an unexpected value",
              "fullTitle": "generateCSPBanner should throw an error when csp is an unexpected value",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, _chai.expect)(function () {\n  return downtimeUtils.generateCSPBanner({\n    csp: 'unknownCSP'\n  });\n}).to.throw(Error);",
              "err": {},
              "uuid": "b850413d-db27-4d0d-b2c7-4e4b9a2b0de8",
              "parentUUID": "4e543367-348a-4eab-a0ac-8c030d010114",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "79671370-945a-40ce-8a42-7e2b4ea62368",
            "0a31aa5f-05b1-4402-910c-9af6dc9a9bfe",
            "0f2d031d-7a36-490c-be8d-fc11e64f610c",
            "98179956-7f15-496f-842f-767435d9b48b",
            "0d7ed4af-7e4d-43a7-94b5-89dacf5bdf38",
            "b850413d-db27-4d0d-b2c7-4e4b9a2b0de8"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "5a8bca58-6a17-4152-af2e-23faa39a6b82",
          "title": "renderServiceDown",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/platform/user/tests/authentication/downtime.unit.spec.js",
          "file": "/src/platform/user/tests/authentication/downtime.unit.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should render correct output for valid service string",
              "fullTitle": "renderServiceDown should render correct output for valid service string",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _render = (0, _react.render)(downtimeUtils.renderServiceDown('ssoe')),\n  container = _render.container;\nvar alert = container.querySelector('va-alert');\n(0, _chai.expect)(alert).to.exist;\n(0, _chai.expect)(alert.getAttribute('status')).to.equal(downtimeUtils.DOWNTIME_BANNER_CONFIG.ssoe.status);\n(0, _chai.expect)(alert.querySelector('h2').textContent).to.equal(downtimeUtils.DOWNTIME_BANNER_CONFIG.ssoe.headline);",
              "err": {},
              "uuid": "87182ca1-0a6d-4dc9-a321-a989d3e69b5b",
              "parentUUID": "5a8bca58-6a17-4152-af2e-23faa39a6b82",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should render fallback output for invalid service string",
              "fullTitle": "renderServiceDown should render fallback output for invalid service string",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _render2 = (0, _react.render)(downtimeUtils.renderServiceDown('unknownService')),\n  container = _render2.container;\nvar alert = container.querySelector('va-alert');\n(0, _chai.expect)(alert).to.exist;\n(0, _chai.expect)(alert.getAttribute('status')).to.equal(downtimeUtils.DOWNTIME_BANNER_CONFIG.mvi.status);\n(0, _chai.expect)(alert.querySelector('h2').textContent).to.equal(downtimeUtils.DOWNTIME_BANNER_CONFIG.mvi.headline);",
              "err": {},
              "uuid": "47522206-9592-4ca7-9b77-bbe28dafb6bb",
              "parentUUID": "5a8bca58-6a17-4152-af2e-23faa39a6b82",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should render correctly for non-string service parameter",
              "fullTitle": "renderServiceDown should render correctly for non-string service parameter",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var customService = {\n  status: 'info',\n  headline: 'Custom headline',\n  message: 'Custom message.'\n};\nvar _render3 = (0, _react.render)(downtimeUtils.renderServiceDown(customService)),\n  container = _render3.container;\nvar alert = container.querySelector('va-alert');\n(0, _chai.expect)(alert).to.exist;\n(0, _chai.expect)(alert.getAttribute('status')).to.equal(customService.status);\n(0, _chai.expect)(alert.querySelector('h2').textContent).to.equal(customService.headline);",
              "err": {},
              "uuid": "0e7b9091-b701-4a85-a181-cc32ba799b81",
              "parentUUID": "5a8bca58-6a17-4152-af2e-23faa39a6b82",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "87182ca1-0a6d-4dc9-a321-a989d3e69b5b",
            "47522206-9592-4ca7-9b77-bbe28dafb6bb",
            "0e7b9091-b701-4a85-a181-cc32ba799b81"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "963575cd-3dcd-41ad-8d5c-b3589ef51a22",
          "title": "renderDowntimeBanner",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/platform/user/tests/authentication/downtime.unit.spec.js",
          "file": "/src/platform/user/tests/authentication/downtime.unit.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should render banner for multiple services down",
              "fullTitle": "renderDowntimeBanner should render banner for multiple services down",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var statuses = [{\n  serviceId: 'logingov',\n  status: 'down'\n}, {\n  serviceId: 'mhv',\n  status: 'down'\n}];\nvar _render4 = (0, _react.render)(downtimeUtils.renderDowntimeBanner(statuses)),\n  container = _render4.container;\nvar alert = container.querySelector('va-alert');\n(0, _chai.expect)(alert).to.exist;\n(0, _chai.expect)(alert.getAttribute('status')).to.equal(downtimeUtils.DOWNTIME_BANNER_CONFIG.multipleServices.status);\n(0, _chai.expect)(alert.querySelector('h2').textContent).to.equal(downtimeUtils.DOWNTIME_BANNER_CONFIG.multipleServices.headline);",
              "err": {},
              "uuid": "58f1273c-263f-4be6-911a-c90bd75efd2d",
              "parentUUID": "963575cd-3dcd-41ad-8d5c-b3589ef51a22",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should render banner for a single service down",
              "fullTitle": "renderDowntimeBanner should render banner for a single service down",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var statuses = [{\n  serviceId: 'logingov',\n  status: 'down'\n}];\nvar _render5 = (0, _react.render)(downtimeUtils.renderDowntimeBanner(statuses)),\n  container = _render5.container;\nvar alert = container.querySelector('va-alert');\n(0, _chai.expect)(alert).to.exist;\n(0, _chai.expect)(alert.getAttribute('status')).to.equal(downtimeUtils.DOWNTIME_BANNER_CONFIG.logingov.status);\n(0, _chai.expect)(alert.querySelector('h2').textContent).to.equal(downtimeUtils.DOWNTIME_BANNER_CONFIG.logingov.headline);",
              "err": {},
              "uuid": "1ca06348-eeaa-4f14-8642-0e5092bdf0c4",
              "parentUUID": "963575cd-3dcd-41ad-8d5c-b3589ef51a22",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return null when no services are down",
              "fullTitle": "renderDowntimeBanner should return null when no services are down",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var statuses = [{\n  serviceId: 'loginGov',\n  status: 'active'\n}];\nvar result = downtimeUtils.renderDowntimeBanner(statuses);\n(0, _chai.expect)(result).to.be.null;",
              "err": {},
              "uuid": "5eee38ac-1db8-4728-9d6d-2090e898cb60",
              "parentUUID": "963575cd-3dcd-41ad-8d5c-b3589ef51a22",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return null when provided an empty status list",
              "fullTitle": "renderDowntimeBanner should return null when provided an empty status list",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var statuses = [];\nvar result = downtimeUtils.renderDowntimeBanner(statuses);\n(0, _chai.expect)(result).to.be.null;",
              "err": {},
              "uuid": "2ae61555-68a2-415f-a5df-980798dd36ee",
              "parentUUID": "963575cd-3dcd-41ad-8d5c-b3589ef51a22",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "58f1273c-263f-4be6-911a-c90bd75efd2d",
            "1ca06348-eeaa-4f14-8642-0e5092bdf0c4",
            "5eee38ac-1db8-4728-9d6d-2090e898cb60",
            "2ae61555-68a2-415f-a5df-980798dd36ee"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "f3373376-e793-4223-afe9-d9547f76f161",
          "title": "createMaintenanceBanner",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/platform/user/tests/authentication/downtime.unit.spec.js",
          "file": "/src/platform/user/tests/authentication/downtime.unit.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should correctly construct a maintenance banner object",
              "fullTitle": "createMaintenanceBanner should correctly construct a maintenance banner object",
              "timedOut": false,
              "duration": 6,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var startTime = new Date().toISOString();\nvar endTime = new Date(new Date().getTime() + 2 * 60 * 60 * 1000).toISOString(); // 2 hours later\nvar banner = downtimeUtils.createMaintenanceBanner({\n  startTime: startTime,\n  endTime: endTime\n});\n(0, _chai.expect)(banner).to.have.property('headline', 'Upcoming site maintenance');\n(0, _chai.expect)(banner).to.have.property('status', 'info');\n(0, _chai.expect)(banner).to.have.property('message').that.is.a('object');\n(0, _chai.expect)(banner).to.have.property('startTime').that.is.a('date');\n(0, _chai.expect)(banner).to.have.property('endTime').that.is.a('date');",
              "err": {},
              "uuid": "fe8e68ce-4e9d-4c4d-87b6-5f0d73685f10",
              "parentUUID": "f3373376-e793-4223-afe9-d9547f76f161",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "fe8e68ce-4e9d-4c4d-87b6-5f0d73685f10"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 6,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "b766c9b4-bfef-4ebb-9f89-87775eaa0e13",
          "title": "determineMaintenance",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/platform/user/tests/authentication/downtime.unit.spec.js",
          "file": "/src/platform/user/tests/authentication/downtime.unit.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should find the first maintenance window that meets the criteria",
              "fullTitle": "determineMaintenance should find the first maintenance window that meets the criteria",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var maintArray = [{\n  externalService: 'logingov'\n}, {\n  externalService: 'global'\n}];\nvar result = downtimeUtils.determineMaintenance(maintArray);\n(0, _chai.expect)(result).to.deep.equal({\n  externalService: 'logingov'\n});",
              "err": {},
              "uuid": "7ceb50bb-a6a9-4d40-b9ef-9a2471d5fa6f",
              "parentUUID": "b766c9b4-bfef-4ebb-9f89-87775eaa0e13",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return undefined if no maintenance window meets the criteria",
              "fullTitle": "determineMaintenance should return undefined if no maintenance window meets the criteria",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var maintArray = [{\n  externalService: 'otherService'\n}];\nvar result = downtimeUtils.determineMaintenance(maintArray);\n(0, _chai.expect)(result).to.be.undefined;",
              "err": {},
              "uuid": "97565944-e2a0-4925-9ee5-49c528fbf5eb",
              "parentUUID": "b766c9b4-bfef-4ebb-9f89-87775eaa0e13",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "7ceb50bb-a6a9-4d40-b9ef-9a2471d5fa6f",
            "97565944-e2a0-4925-9ee5-49c528fbf5eb"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "0eac5584-ddec-410d-b796-e7db15ce45a2",
          "title": "isInMaintenanceWindow",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/platform/user/tests/authentication/downtime.unit.spec.js",
          "file": "/src/platform/user/tests/authentication/downtime.unit.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should return true when the current time is within the maintenance window",
              "fullTitle": "isInMaintenanceWindow should return true when the current time is within the maintenance window",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var startTime = new Date(new Date().getTime() - 1 * 60 * 60 * 1000).toISOString(); // 1 hour ago\nvar endTime = new Date(new Date().getTime() + 1 * 60 * 60 * 1000).toISOString(); // 1 hour later\nvar result = downtimeUtils.isInMaintenanceWindow(startTime, endTime);\n(0, _chai.expect)(result).to.be.true;",
              "err": {},
              "uuid": "15b92375-0967-4112-a93f-913c69d8de1d",
              "parentUUID": "0eac5584-ddec-410d-b796-e7db15ce45a2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return false when the current time is outside the maintenance window",
              "fullTitle": "isInMaintenanceWindow should return false when the current time is outside the maintenance window",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var startTime = new Date(new Date().getTime() - 3 * 60 * 60 * 1000).toISOString(); // 3 hours ago\nvar endTime = new Date(new Date().getTime() - 1 * 60 * 60 * 1000).toISOString(); // 1 hour ago\nvar result = downtimeUtils.isInMaintenanceWindow(startTime, endTime);\n(0, _chai.expect)(result).to.be.false;",
              "err": {},
              "uuid": "0a1f247d-600f-4aa8-8efe-1984827d1d23",
              "parentUUID": "0eac5584-ddec-410d-b796-e7db15ce45a2",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "15b92375-0967-4112-a93f-913c69d8de1d",
            "0a1f247d-600f-4aa8-8efe-1984827d1d23"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "5d9d8b50-8552-4f12-ace6-851f1fba01d6",
          "title": "renderMaintenanceWindow",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/platform/user/tests/authentication/downtime.unit.spec.js",
          "file": "/src/platform/user/tests/authentication/downtime.unit.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should render the maintenance window banner when inside the maintenance window",
              "fullTitle": "renderMaintenanceWindow should render the maintenance window banner when inside the maintenance window",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var maintArray = [{\n  externalService: 'global',\n  startTime: new Date(new Date().getTime() - 1 * 60 * 60 * 1000).toISOString(),\n  endTime: new Date(new Date().getTime() + 1 * 60 * 60 * 1000).toISOString()\n}];\nvar _render6 = (0, _react.render)(downtimeUtils.renderMaintenanceWindow(maintArray)),\n  container = _render6.container;\nvar alert = container.querySelector('va-alert');\n(0, _chai.expect)(alert).to.exist;\n(0, _chai.expect)(alert.getAttribute('status')).to.equal('info');",
              "err": {},
              "uuid": "a7c7466a-75fd-4516-87e3-69ff64606a26",
              "parentUUID": "5d9d8b50-8552-4f12-ace6-851f1fba01d6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return null when outside the maintenance window",
              "fullTitle": "renderMaintenanceWindow should return null when outside the maintenance window",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var maintArray = [{\n  externalService: 'global',\n  startTime: new Date(new Date().getTime() - 3 * 60 * 60 * 1000).toISOString(),\n  endTime: new Date(new Date().getTime() - 1 * 60 * 60 * 1000).toISOString()\n}];\nvar result = downtimeUtils.renderMaintenanceWindow(maintArray);\n(0, _chai.expect)(result).to.be.null;",
              "err": {},
              "uuid": "47a00664-fb04-475e-844b-d1f3a30246e1",
              "parentUUID": "5d9d8b50-8552-4f12-ace6-851f1fba01d6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return null when there are no maintenance windows",
              "fullTitle": "renderMaintenanceWindow should return null when there are no maintenance windows",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var maintArray = [];\nvar result = downtimeUtils.renderMaintenanceWindow(maintArray);\n(0, _chai.expect)(result).to.be.null;",
              "err": {},
              "uuid": "a86cedee-7483-4d07-b6ff-c07800077c85",
              "parentUUID": "5d9d8b50-8552-4f12-ace6-851f1fba01d6",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a7c7466a-75fd-4516-87e3-69ff64606a26",
            "47a00664-fb04-475e-844b-d1f3a30246e1",
            "a86cedee-7483-4d07-b6ff-c07800077c85"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "6c9cb17f-33e5-43e2-80f2-63236d51a519",
          "title": "getAuthError",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/platform/user/tests/authentication/errors.unit.spec.js",
          "file": "/src/platform/user/tests/authentication/errors.unit.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should return a 007 for an unknown error",
              "fullTitle": "getAuthError should return a 007 for an unknown error",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getAuthError = (0, _errors.getAuthError)('150'),\n  errorCode = _getAuthError.errorCode;\n(0, _chai.expect)(errorCode).to.eql('007');",
              "err": {},
              "uuid": "6600268b-f138-4193-9611-44519325d3b0",
              "parentUUID": "6c9cb17f-33e5-43e2-80f2-63236d51a519",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return the appropriately mapped error",
              "fullTitle": "getAuthError should return the appropriately mapped error",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getAuthError2 = (0, _errors.getAuthError)('009'),\n  errorCode = _getAuthError2.errorCode;\n(0, _chai.expect)(errorCode).to.eql('009');",
              "err": {},
              "uuid": "752af2f0-f0e1-4534-add5-32d29f15f073",
              "parentUUID": "6c9cb17f-33e5-43e2-80f2-63236d51a519",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "6600268b-f138-4193-9611-44519325d3b0",
            "752af2f0-f0e1-4534-add5-32d29f15f073"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "b497444a-9964-4111-a4ea-228f547f966c",
          "title": "authentication - reducers",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/platform/user/tests/authentication/reducers.unit.spec.js",
          "file": "/src/platform/user/tests/authentication/reducers.unit.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should return the default state",
              "fullTitle": "authentication - reducers should return the default state",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var state = (0, _reducers.default)(undefined, {});\n(0, _chai.expect)(state).to.equal(_reducers.initialState);",
              "err": {},
              "uuid": "8c8621cd-fe0d-41bf-93b4-bba764318ee2",
              "parentUUID": "b497444a-9964-4111-a4ea-228f547f966c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should log out the user",
              "fullTitle": "authentication - reducers should log out the user",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var state = (0, _reducers.default)({\n  currentlyLoggedIn: true,\n  hasCheckedKeepAlive: true\n}, {\n  type: 'LOG_OUT'\n});\n(0, _chai.expect)(state.currentlyLoggedIn).to.be.false;",
              "err": {},
              "uuid": "1289050c-8e13-4ca8-a6ed-1b21191cc6a7",
              "parentUUID": "b497444a-9964-4111-a4ea-228f547f966c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should change currentlySignedIn to true",
              "fullTitle": "authentication - reducers should change currentlySignedIn to true",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var state = (0, _reducers.default)(_reducers.initialState, {\n  type: 'UPDATE_LOGGEDIN_STATUS',\n  value: true\n});\n(0, _chai.expect)(state.currentlyLoggedIn).to.be.true;",
              "err": {},
              "uuid": "b3a70330-3030-486c-b06c-dd56b6a17d26",
              "parentUUID": "b497444a-9964-4111-a4ea-228f547f966c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should update hasKeepAlive",
              "fullTitle": "authentication - reducers should update hasKeepAlive",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var state = (0, _reducers.default)(_reducers.initialState, {\n  type: 'CHECK_KEEP_ALIVE'\n});\n(0, _chai.expect)(state.hasCheckedKeepAlive).to.be.true;",
              "err": {},
              "uuid": "3eede4f5-4050-48d8-b524-091669303a77",
              "parentUUID": "b497444a-9964-4111-a4ea-228f547f966c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "8c8621cd-fe0d-41bf-93b4-bba764318ee2",
            "1289050c-8e13-4ca8-a6ed-1b21191cc6a7",
            "b3a70330-3030-486c-b06c-dd56b6a17d26",
            "3eede4f5-4050-48d8-b524-091669303a77"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "554c6d84-144d-4f02-9459-337e669afee6",
          "title": "authentication selectors",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/platform/user/tests/authentication/selectors.unit.spec.js",
          "file": "/src/platform/user/tests/authentication/selectors.unit.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "54c71c06-d051-49f3-aa90-52941e954afa",
              "title": "isAuthenticatedWithSSOe",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/platform/user/tests/authentication/selectors.unit.spec.js",
              "file": "/src/platform/user/tests/authentication/selectors.unit.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "pulls out state.session.ssoe",
                  "fullTitle": "authentication selectors isAuthenticatedWithSSOe pulls out state.session.ssoe",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var state = {\n  user: {\n    profile: {\n      signIn: {\n        ssoe: false\n      },\n      session: {\n        ssoe: true\n      }\n    }\n  }\n};\n(0, _chai.expect)(selectors.isAuthenticatedWithSSOe(state)).to.be.true;",
                  "err": {},
                  "uuid": "5cf28e99-319c-4f37-88c5-ac5a29e8ca63",
                  "parentUUID": "54c71c06-d051-49f3-aa90-52941e954afa",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "returns undefined when the ssoe flag is not present",
                  "fullTitle": "authentication selectors isAuthenticatedWithSSOe returns undefined when the ssoe flag is not present",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var state = {\n  user: {\n    profile: {\n      session: {}\n    }\n  }\n};\n(0, _chai.expect)(selectors.isAuthenticatedWithSSOe(state)).to.be.undefined;",
                  "err": {},
                  "uuid": "2f40ada8-38ef-4066-b710-67d104644ec7",
                  "parentUUID": "54c71c06-d051-49f3-aa90-52941e954afa",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "5cf28e99-319c-4f37-88c5-ac5a29e8ca63",
                "2f40ada8-38ef-4066-b710-67d104644ec7"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "0a2b33fa-8423-4494-93cc-24b78655b74c",
              "title": "ssoeTransactionId",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/platform/user/tests/authentication/selectors.unit.spec.js",
              "file": "/src/platform/user/tests/authentication/selectors.unit.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "pulls out state.session.transactionid",
                  "fullTitle": "authentication selectors ssoeTransactionId pulls out state.session.transactionid",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var state = {\n  user: {\n    profile: {\n      signIn: {\n        transactionid: 'X'\n      },\n      session: {\n        transactionid: 'Y'\n      }\n    }\n  }\n};\n(0, _chai.expect)(selectors.ssoeTransactionId(state)).to.eq('Y');",
                  "err": {},
                  "uuid": "7348ded4-c275-45a1-84d7-83f77c318e4e",
                  "parentUUID": "0a2b33fa-8423-4494-93cc-24b78655b74c",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "returns undefined when the transactionid is not present",
                  "fullTitle": "authentication selectors ssoeTransactionId returns undefined when the transactionid is not present",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var state = {\n  user: {\n    session: {\n      profile: {\n        ssoe: false\n      }\n    }\n  }\n};\n(0, _chai.expect)(selectors.ssoeTransactionId(state)).to.be.undefined;",
                  "err": {},
                  "uuid": "036c64a5-41bb-4176-a74d-3bb78b6f2289",
                  "parentUUID": "0a2b33fa-8423-4494-93cc-24b78655b74c",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "7348ded4-c275-45a1-84d7-83f77c318e4e",
                "036c64a5-41bb-4176-a74d-3bb78b6f2289"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "8a28d682-56d9-4bff-8880-72e029128526",
              "title": "hasCheckedKeepAlive",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/platform/user/tests/authentication/selectors.unit.spec.js",
              "file": "/src/platform/user/tests/authentication/selectors.unit.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "pulls out state.user.login.hasCheckedKeepAlive",
                  "fullTitle": "authentication selectors hasCheckedKeepAlive pulls out state.user.login.hasCheckedKeepAlive",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var state = {\n  user: {\n    login: {\n      hasCheckedKeepAlive: true\n    }\n  }\n};\n(0, _chai.expect)(selectors.hasCheckedKeepAlive(state)).to.be.true;",
                  "err": {},
                  "uuid": "610973c3-0a16-4f07-a788-73128a182a35",
                  "parentUUID": "8a28d682-56d9-4bff-8880-72e029128526",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "returns undefined when the hasCheckedKeepAlive flag is not present",
                  "fullTitle": "authentication selectors hasCheckedKeepAlive returns undefined when the hasCheckedKeepAlive flag is not present",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var state = {\n  user: {\n    login: {}\n  }\n};\n(0, _chai.expect)(selectors.hasCheckedKeepAlive(state)).to.be.undefined;",
                  "err": {},
                  "uuid": "4a73acea-60e4-418c-8adf-de723b33680b",
                  "parentUUID": "8a28d682-56d9-4bff-8880-72e029128526",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "610973c3-0a16-4f07-a788-73128a182a35",
                "4a73acea-60e4-418c-8adf-de723b33680b"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "75908534-aedd-4712-86bc-4a069ec8586f",
              "title": "signInServiceName",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/platform/user/tests/authentication/selectors.unit.spec.js",
              "file": "/src/platform/user/tests/authentication/selectors.unit.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "pulls out state.profile.signIn.serviceName",
                  "fullTitle": "authentication selectors signInServiceName pulls out state.profile.signIn.serviceName",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var state = {\n  user: {\n    profile: {\n      signIn: {\n        serviceName: 'test'\n      }\n    }\n  }\n};\n(0, _chai.expect)(selectors.signInServiceName(state)).to.eq('test');",
                  "err": {},
                  "uuid": "2073d2fc-7704-463d-a522-2aa7e3b14070",
                  "parentUUID": "75908534-aedd-4712-86bc-4a069ec8586f",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "returns undefined when the serviceName is not present",
                  "fullTitle": "authentication selectors signInServiceName returns undefined when the serviceName is not present",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var state = {\n  user: {\n    profile: {\n      signIn: {}\n    }\n  }\n};\n(0, _chai.expect)(selectors.signInServiceName(state)).to.be.undefined;",
                  "err": {},
                  "uuid": "f72b380e-ad75-4c19-836d-ca1d413ce88c",
                  "parentUUID": "75908534-aedd-4712-86bc-4a069ec8586f",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "2073d2fc-7704-463d-a522-2aa7e3b14070",
                "f72b380e-ad75-4c19-836d-ca1d413ce88c"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "50dfa952-7bf9-4ed8-ac59-af337c446277",
              "title": "isAuthenticatedWithOAuth",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/platform/user/tests/authentication/selectors.unit.spec.js",
              "file": "/src/platform/user/tests/authentication/selectors.unit.spec.js",
              "beforeHooks": [
                {
                  "title": "\"before all\" hook in \"isAuthenticatedWithOAuth\"",
                  "fullTitle": "authentication selectors isAuthenticatedWithOAuth \"before all\" hook in \"isAuthenticatedWithOAuth\"",
                  "timedOut": false,
                  "duration": 1,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "originalCookie = document.cookie;",
                  "err": {},
                  "uuid": "2b7a4ee1-0ceb-46f2-884e-f6443fa4105d",
                  "parentUUID": "50dfa952-7bf9-4ed8-ac59-af337c446277",
                  "isHook": true,
                  "skipped": false
                },
                {
                  "title": "\"before each\" hook in \"isAuthenticatedWithOAuth\"",
                  "fullTitle": "authentication selectors isAuthenticatedWithOAuth \"before each\" hook in \"isAuthenticatedWithOAuth\"",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "document.cookie = '';",
                  "err": {},
                  "uuid": "2c04cd17-4479-45f7-a534-4fdeeb3abee2",
                  "parentUUID": "50dfa952-7bf9-4ed8-ac59-af337c446277",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [
                {
                  "title": "\"after all\" hook in \"isAuthenticatedWithOAuth\"",
                  "fullTitle": "authentication selectors isAuthenticatedWithOAuth \"after all\" hook in \"isAuthenticatedWithOAuth\"",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "document.cookie = originalCookie;",
                  "err": {},
                  "uuid": "07c95081-753b-46d6-a4f9-7b39cab48336",
                  "parentUUID": "50dfa952-7bf9-4ed8-ac59-af337c446277",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "tests": [
                {
                  "title": "returns true when the authBroker is sis",
                  "fullTitle": "authentication selectors isAuthenticatedWithOAuth returns true when the authBroker is sis",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var state = {\n  user: {\n    profile: {\n      session: {\n        authBroker: 'sis'\n      }\n    }\n  }\n};\n(0, _chai.expect)(selectors.isAuthenticatedWithOAuth(state)).to.be.true;",
                  "err": {},
                  "uuid": "5bf7e3cc-2d62-436c-b881-02fc9400ba9a",
                  "parentUUID": "50dfa952-7bf9-4ed8-ac59-af337c446277",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "returns true when the infoToken exists",
                  "fullTitle": "authentication selectors isAuthenticatedWithOAuth returns true when the infoToken exists",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "document.cookie = 'vagov_info_token=true';\nvar state = {\n  user: {\n    profile: {\n      session: {\n        authBroker: 'not sis'\n      }\n    }\n  }\n};\n(0, _chai.expect)(selectors.isAuthenticatedWithOAuth(state)).to.be.true;",
                  "err": {},
                  "uuid": "06c326cb-7025-4b5b-a0c2-a66cdba97584",
                  "parentUUID": "50dfa952-7bf9-4ed8-ac59-af337c446277",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "returns false when the authBroker is not sis and the infoToken does not exist",
                  "fullTitle": "authentication selectors isAuthenticatedWithOAuth returns false when the authBroker is not sis and the infoToken does not exist",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var state = {\n  user: {\n    profile: {\n      session: {\n        authBroker: 'not sis'\n      }\n    }\n  }\n};\n(0, _chai.expect)(selectors.isAuthenticatedWithOAuth(state)).to.be.false;",
                  "err": {},
                  "uuid": "e7db36aa-464c-4a30-80ab-9df1ffe18842",
                  "parentUUID": "50dfa952-7bf9-4ed8-ac59-af337c446277",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "5bf7e3cc-2d62-436c-b881-02fc9400ba9a",
                "06c326cb-7025-4b5b-a0c2-a66cdba97584",
                "e7db36aa-464c-4a30-80ab-9df1ffe18842"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "8a053a11-9e26-4e11-8678-a7aea8426272",
              "title": "signInServiceEnabled",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/platform/user/tests/authentication/selectors.unit.spec.js",
              "file": "/src/platform/user/tests/authentication/selectors.unit.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "pulls out featureToggles.signInServiceEnabled",
                  "fullTitle": "authentication selectors signInServiceEnabled pulls out featureToggles.signInServiceEnabled",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var state = {\n  featureToggles: _defineProperty({}, _featureFlagNames.default.signInServiceEnabled, true)\n};\n(0, _chai.expect)(selectors.signInServiceEnabled(state)).to.be.true;",
                  "err": {},
                  "uuid": "b359ad75-5132-4727-bcb8-6dca8b3a892c",
                  "parentUUID": "8a053a11-9e26-4e11-8678-a7aea8426272",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "returns undefined when signInServiceEnabled is not present",
                  "fullTitle": "authentication selectors signInServiceEnabled returns undefined when signInServiceEnabled is not present",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var state = {\n  featureToggles: {}\n};\n(0, _chai.expect)(selectors.signInServiceEnabled(state)).to.be.undefined;",
                  "err": {},
                  "uuid": "30c90afc-5083-45bc-abe7-654e393fac5e",
                  "parentUUID": "8a053a11-9e26-4e11-8678-a7aea8426272",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "b359ad75-5132-4727-bcb8-6dca8b3a892c",
                "30c90afc-5083-45bc-abe7-654e393fac5e"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "3ce95c67-b048-416c-a64d-4ff42bc9a6ce",
              "title": "termsOfUseEnabled",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/platform/user/tests/authentication/selectors.unit.spec.js",
              "file": "/src/platform/user/tests/authentication/selectors.unit.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "pulls out featureToggles.termsOfUse",
                  "fullTitle": "authentication selectors termsOfUseEnabled pulls out featureToggles.termsOfUse",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var state = {\n  featureToggles: _defineProperty({}, _featureFlagNames.default.termsOfUse, true)\n};\n(0, _chai.expect)(selectors.termsOfUseEnabled(state)).to.be.true;",
                  "err": {},
                  "uuid": "6c0b5195-0ca1-440a-b326-8b32e5b8ce03",
                  "parentUUID": "3ce95c67-b048-416c-a64d-4ff42bc9a6ce",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "returns undefined when termsOfUse is not present",
                  "fullTitle": "authentication selectors termsOfUseEnabled returns undefined when termsOfUse is not present",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var state = {\n  featureToggles: {}\n};\n(0, _chai.expect)(selectors.termsOfUseEnabled(state)).to.be.undefined;",
                  "err": {},
                  "uuid": "bb2ee9f5-eab7-4d26-bc9b-695937a961d2",
                  "parentUUID": "3ce95c67-b048-416c-a64d-4ff42bc9a6ce",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "6c0b5195-0ca1-440a-b326-8b32e5b8ce03",
                "bb2ee9f5-eab7-4d26-bc9b-695937a961d2"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "7bd4e394-9ae3-4e6b-a67b-f4f57145cbd3",
          "title": "Authentication Utilities",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/platform/user/tests/authentication/utilities.unit.spec.js",
          "file": "/src/platform/user/tests/authentication/utilities.unit.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "754d34a0-bc1c-42a7-b191-6a600fc8b1a7",
              "title": "loginAppUrlRE",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/platform/user/tests/authentication/utilities.unit.spec.js",
              "file": "/src/platform/user/tests/authentication/utilities.unit.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should match true against sign-in page paths",
                  "fullTitle": "Authentication Utilities loginAppUrlRE should match true against sign-in page paths",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)(authUtilities.loginAppUrlRE.test(usipPath)).to.be.true;",
                  "err": {},
                  "uuid": "f460b107-ba76-4400-a8f8-50f7846866b7",
                  "parentUUID": "754d34a0-bc1c-42a7-b191-6a600fc8b1a7",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should match false against non sign-in page paths",
                  "fullTitle": "Authentication Utilities loginAppUrlRE should match false against non sign-in page paths",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)(authUtilities.loginAppUrlRE.test(nonUsipPath)).to.be.false;",
                  "err": {},
                  "uuid": "73086f34-4a0a-45d4-8be8-f99b69cba0c1",
                  "parentUUID": "754d34a0-bc1c-42a7-b191-6a600fc8b1a7",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should match false against paths that include sign-in-*",
                  "fullTitle": "Authentication Utilities loginAppUrlRE should match false against paths that include sign-in-*",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)(authUtilities.loginAppUrlRE.test(trickyNonUsipPath)).to.be.false;",
                  "err": {},
                  "uuid": "34aec23c-d579-48a5-a04c-0bb3f5dd0fe5",
                  "parentUUID": "754d34a0-bc1c-42a7-b191-6a600fc8b1a7",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "f460b107-ba76-4400-a8f8-50f7846866b7",
                "73086f34-4a0a-45d4-8be8-f99b69cba0c1",
                "34aec23c-d579-48a5-a04c-0bb3f5dd0fe5"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "38929f3b-4ffc-4fbc-bcdc-c6e9cdc225f7",
              "title": "getQueryParams",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/platform/user/tests/authentication/utilities.unit.spec.js",
              "file": "/src/platform/user/tests/authentication/utilities.unit.spec.js",
              "beforeHooks": [],
              "afterHooks": [
                {
                  "title": "\"after each\" hook in \"getQueryParams\"",
                  "fullTitle": "Authentication Utilities getQueryParams \"after each\" hook in \"getQueryParams\"",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "return cleanup();",
                  "err": {},
                  "uuid": "93836867-6228-4c83-884e-52ebc5fe3cac",
                  "parentUUID": "38929f3b-4ffc-4fbc-bcdc-c6e9cdc225f7",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "tests": [
                {
                  "title": "should return any AUTH_PARAMS params when present",
                  "fullTitle": "Authentication Utilities getQueryParams should return any AUTH_PARAMS params when present",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "setup({\n  path: usipPathWithParams(mhvUsipParams)\n});\nvar searchParams = new URLSearchParams(global.window.location.search);\n(0, _chai.expect)(authUtilities.getQueryParams()).to.deep.equal(_defineProperty(_defineProperty({}, application, searchParams.get(application)), to, searchParams.get([to])));",
                  "err": {},
                  "uuid": "9bb5fda2-e0c2-45d8-abce-d9730cb2b098",
                  "parentUUID": "38929f3b-4ffc-4fbc-bcdc-c6e9cdc225f7",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should not return params other than defined AUTH_PARAMS",
                  "fullTitle": "Authentication Utilities getQueryParams should not return params other than defined AUTH_PARAMS",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "setup({\n  path: usipPathWithParams(\"\".concat(mhvUsipParams, \"&useless=useless\"))\n});\nvar searchParams = new URLSearchParams(global.window.location.search);\n(0, _chai.expect)(authUtilities.getQueryParams()).to.deep.equal(_defineProperty(_defineProperty({}, application, searchParams.get(application)), to, searchParams.get([to])));",
                  "err": {},
                  "uuid": "0114641d-1c75-444e-968a-8a6dd521b4a0",
                  "parentUUID": "38929f3b-4ffc-4fbc-bcdc-c6e9cdc225f7",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return empty object when no valid AUTH_PARAMS are found",
                  "fullTitle": "Authentication Utilities getQueryParams should return empty object when no valid AUTH_PARAMS are found",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "setup({\n  path: usipPath\n});\n(0, _chai.expect)(authUtilities.getQueryParams()).to.deep.equal({});",
                  "err": {},
                  "uuid": "fc71915e-789e-4055-b98f-a0832f32d575",
                  "parentUUID": "38929f3b-4ffc-4fbc-bcdc-c6e9cdc225f7",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "9bb5fda2-e0c2-45d8-abce-d9730cb2b098",
                "0114641d-1c75-444e-968a-8a6dd521b4a0",
                "fc71915e-789e-4055-b98f-a0832f32d575"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "02906ae6-d283-4faa-b8a0-b316d9cd4143",
              "title": "sanitizeUrl",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/platform/user/tests/authentication/utilities.unit.spec.js",
              "file": "/src/platform/user/tests/authentication/utilities.unit.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return null if not given a url",
                  "fullTitle": "Authentication Utilities sanitizeUrl should return null if not given a url",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)(authUtilities.sanitizeUrl()).to.be.null;",
                  "err": {},
                  "uuid": "9b9e0ce1-a13d-4d81-8ea8-5889efcdc48d",
                  "parentUUID": "02906ae6-d283-4faa-b8a0-b316d9cd4143",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should remove trailing slash from urls",
                  "fullTitle": "Authentication Utilities sanitizeUrl should remove trailing slash from urls",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)(authUtilities.sanitizeUrl(\"\".concat(base, \"/\"))).to.equal(base);",
                  "err": {},
                  "uuid": "0f208317-ed01-472d-8feb-5fa47c4ffd04",
                  "parentUUID": "02906ae6-d283-4faa-b8a0-b316d9cd4143",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should remove potential CRLF injection sequences",
                  "fullTitle": "Authentication Utilities sanitizeUrl should remove potential CRLF injection sequences",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)(authUtilities.sanitizeUrl(\"\".concat(base).concat(CRLFString))).to.equal(base);",
                  "err": {},
                  "uuid": "18e8f111-4452-4674-ab29-9904f27a2d69",
                  "parentUUID": "02906ae6-d283-4faa-b8a0-b316d9cd4143",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "9b9e0ce1-a13d-4d81-8ea8-5889efcdc48d",
                "0f208317-ed01-472d-8feb-5fa47c4ffd04",
                "18e8f111-4452-4674-ab29-9904f27a2d69"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "ec895d50-5acb-4b64-a385-c9c9bc179197",
              "title": "sanitizePath",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/platform/user/tests/authentication/utilities.unit.spec.js",
              "file": "/src/platform/user/tests/authentication/utilities.unit.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return an empty string if to is undefined or null",
                  "fullTitle": "Authentication Utilities sanitizePath should return an empty string if to is undefined or null",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)(authUtilities.sanitizePath()).to.eql('');",
                  "err": {},
                  "uuid": "64a50e1e-ce61-482a-80f8-03610af85a74",
                  "parentUUID": "ec895d50-5acb-4b64-a385-c9c9bc179197",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should format to add forward slashes if necessary",
                  "fullTitle": "Authentication Utilities sanitizePath should format to add forward slashes if necessary",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)(authUtilities.sanitizePath('/hello')).to.eql('/hello');\n(0, _chai.expect)(authUtilities.sanitizePath('hello')).to.eql('/hello');",
                  "err": {},
                  "uuid": "d268dfb9-6cc8-4e27-8c99-3be56a19e686",
                  "parentUUID": "ec895d50-5acb-4b64-a385-c9c9bc179197",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "64a50e1e-ce61-482a-80f8-03610af85a74",
                "d268dfb9-6cc8-4e27-8c99-3be56a19e686"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "9bec52e3-e591-4cb1-b651-d7e797350c6c",
              "title": "isExternalRedirect",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/platform/user/tests/authentication/utilities.unit.spec.js",
              "file": "/src/platform/user/tests/authentication/utilities.unit.spec.js",
              "beforeHooks": [],
              "afterHooks": [
                {
                  "title": "\"after each\" hook in \"isExternalRedirect\"",
                  "fullTitle": "Authentication Utilities isExternalRedirect \"after each\" hook in \"isExternalRedirect\"",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "return cleanup();",
                  "err": {},
                  "uuid": "80d51167-7ae8-40d6-99df-27f6f11298da",
                  "parentUUID": "9bec52e3-e591-4cb1-b651-d7e797350c6c",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "tests": [
                {
                  "title": "should return true on USiP and valid application param",
                  "fullTitle": "Authentication Utilities isExternalRedirect should return true on USiP and valid application param",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "setup({\n  path: usipPathWithParams(mhvUsipParams)\n});\n(0, _chai.expect)(authUtilities.isExternalRedirect()).to.be.true;",
                  "err": {},
                  "uuid": "94a7b2e0-51c2-4f78-b444-fafc8eeb5370",
                  "parentUUID": "9bec52e3-e591-4cb1-b651-d7e797350c6c",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return false on USiP and invalid application param",
                  "fullTitle": "Authentication Utilities isExternalRedirect should return false on USiP and invalid application param",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "setup({\n  path: usipPathWithParams('?application=invalid')\n});\n(0, _chai.expect)(authUtilities.isExternalRedirect()).to.be.false;",
                  "err": {},
                  "uuid": "8b63a1c7-8e84-4641-9fa1-eacdbf9b1742",
                  "parentUUID": "9bec52e3-e591-4cb1-b651-d7e797350c6c",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return false on non USiP ",
                  "fullTitle": "Authentication Utilities isExternalRedirect should return false on non USiP ",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)(authUtilities.isExternalRedirect()).to.be.false;",
                  "err": {},
                  "uuid": "b95a4a83-743c-4cc2-99aa-733b4af6fc40",
                  "parentUUID": "9bec52e3-e591-4cb1-b651-d7e797350c6c",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return false on non USiP even with valid params",
                  "fullTitle": "Authentication Utilities isExternalRedirect should return false on non USiP even with valid params",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "setup({\n  path: mhvUsipParams\n});\n(0, _chai.expect)(authUtilities.isExternalRedirect()).to.be.false;",
                  "err": {},
                  "uuid": "90363254-0bdd-452e-b1a9-b491a5419e10",
                  "parentUUID": "9bec52e3-e591-4cb1-b651-d7e797350c6c",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "94a7b2e0-51c2-4f78-b444-fafc8eeb5370",
                "8b63a1c7-8e84-4641-9fa1-eacdbf9b1742",
                "b95a4a83-743c-4cc2-99aa-733b4af6fc40",
                "90363254-0bdd-452e-b1a9-b491a5419e10"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "02004bdf-851a-4587-8ef7-5d1e0ed07d0d",
              "title": "sessionTypeUrl",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/platform/user/tests/authentication/utilities.unit.spec.js",
              "file": "/src/platform/user/tests/authentication/utilities.unit.spec.js",
              "beforeHooks": [],
              "afterHooks": [
                {
                  "title": "\"after each\" hook in \"sessionTypeUrl\"",
                  "fullTitle": "Authentication Utilities sessionTypeUrl \"after each\" hook in \"sessionTypeUrl\"",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "return cleanup();",
                  "err": {},
                  "uuid": "20cc3dca-86fd-4afa-80cc-3988dddeb376",
                  "parentUUID": "02004bdf-851a-4587-8ef7-5d1e0ed07d0d",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "tests": [
                {
                  "title": "should return null if not provided a type",
                  "fullTitle": "Authentication Utilities sessionTypeUrl should return null if not provided a type",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)(authUtilities.sessionTypeUrl({})).to.be.null;",
                  "err": {},
                  "uuid": "67fb7311-6b1c-45ca-b366-5bdd1ff17876",
                  "parentUUID": "02004bdf-851a-4587-8ef7-5d1e0ed07d0d",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return session url with type in its simplest form",
                  "fullTitle": "Authentication Utilities sessionTypeUrl should return session url with type in its simplest form",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)(authUtilities.sessionTypeUrl({\n  type: type\n})).to.equal((0, _constants2.API_SESSION_URL)({\n  type: type\n}));",
                  "err": {},
                  "uuid": "c5d87075-e81c-4335-af89-e7dc4557efd7",
                  "parentUUID": "02004bdf-851a-4587-8ef7-5d1e0ed07d0d",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return session url with queryParams appended if provided",
                  "fullTitle": "Authentication Utilities sessionTypeUrl should return session url with queryParams appended if provided",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)(authUtilities.sessionTypeUrl({\n  type: type,\n  queryParams: queryParams\n})).to.eql((0, _appendQuery.default)((0, _constants2.API_SESSION_URL)({\n  type: type\n}), queryParams));",
                  "err": {},
                  "uuid": "e20ed0b4-d0df-432d-8d5f-7b05dc3debb3",
                  "parentUUID": "02004bdf-851a-4587-8ef7-5d1e0ed07d0d",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return session url with additional params appeneded for MHV Logins",
                  "fullTitle": "Authentication Utilities sessionTypeUrl should return session url with additional params appeneded for MHV Logins",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "setup({\n  path: usipPathWithParams(mhvUsipParams)\n});\n(0, _chai.expect)(authUtilities.sessionTypeUrl({\n  type: type\n})).to.contain.all('redirect=', 'postLogin=true');",
                  "err": {},
                  "uuid": "e397156a-8c1b-467d-b91e-913e05029455",
                  "parentUUID": "02004bdf-851a-4587-8ef7-5d1e0ed07d0d",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return session url with additional params appended for My VA Health (Cerner) login",
                  "fullTitle": "Authentication Utilities sessionTypeUrl should return session url with additional params appended for My VA Health (Cerner) login",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "setup({\n  path: usipPathWithParams(cernerUsipParams)\n});\n(0, _chai.expect)(authUtilities.sessionTypeUrl({\n  type: type\n})).to.not.contain.all('skip_dupe=true');",
                  "err": {},
                  "uuid": "486bef64-8a39-4415-8017-4fe6a3794ee4",
                  "parentUUID": "02004bdf-851a-4587-8ef7-5d1e0ed07d0d",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return session url with _verified appended to type for OCC logins",
                  "fullTitle": "Authentication Utilities sessionTypeUrl should return session url with _verified appended to type for OCC logins",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "setup({\n  path: usipPathWithParams(occUsipParams)\n});\n(0, _chai.expect)(authUtilities.sessionTypeUrl({\n  type: type\n})).to.include((0, _appendQuery.default)((0, _constants2.API_SESSION_URL)({\n  type: typeVerified\n})));",
                  "err": {},
                  "uuid": "392d796c-53af-405e-baab-24f58e75bb54",
                  "parentUUID": "02004bdf-851a-4587-8ef7-5d1e0ed07d0d",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return session url with _verified appended to type for Flagship logins",
                  "fullTitle": "Authentication Utilities sessionTypeUrl should return session url with _verified appended to type for Flagship logins",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "setup({\n  path: usipPathWithParams(flagshipUsipParams)\n});\n(0, _chai.expect)(authUtilities.sessionTypeUrl({\n  type: type\n})).to.include((0, _appendQuery.default)((0, _constants2.API_SESSION_URL)({\n  type: typeVerified\n})));",
                  "err": {},
                  "uuid": "d169b811-7ced-486e-9c28-df4a65a00d9e",
                  "parentUUID": "02004bdf-851a-4587-8ef7-5d1e0ed07d0d",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return session url with _verified appended to type for OCC signups",
                  "fullTitle": "Authentication Utilities sessionTypeUrl should return session url with _verified appended to type for OCC signups",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "setup({\n  path: usipPathWithParams(occUsipParams)\n});\n(0, _chai.expect)(authUtilities.sessionTypeUrl({\n  type: signupType\n})).to.include((0, _appendQuery.default)((0, _constants2.API_SESSION_URL)({\n  type: signupTypeVerified\n})));",
                  "err": {},
                  "uuid": "d11ded2e-f69f-4c32-90ec-6d1c14dd6c8c",
                  "parentUUID": "02004bdf-851a-4587-8ef7-5d1e0ed07d0d",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return session url with _verified appended to type for Flagship signups",
                  "fullTitle": "Authentication Utilities sessionTypeUrl should return session url with _verified appended to type for Flagship signups",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "setup({\n  path: usipPathWithParams(flagshipUsipParams)\n});\n(0, _chai.expect)(authUtilities.sessionTypeUrl({\n  type: signupType\n})).to.include((0, _appendQuery.default)((0, _constants2.API_SESSION_URL)({\n  type: signupTypeVerified\n})));",
                  "err": {},
                  "uuid": "ad37ad4b-75ea-4407-8e53-f185705d1519",
                  "parentUUID": "02004bdf-851a-4587-8ef7-5d1e0ed07d0d",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return the SIS session URL if oauth is set",
                  "fullTitle": "Authentication Utilities sessionTypeUrl should return the SIS session URL if oauth is set",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
                  "err": {},
                  "uuid": "068409a1-967a-41d3-a838-d5f046c44631",
                  "parentUUID": "02004bdf-851a-4587-8ef7-5d1e0ed07d0d",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should NOT return session url with _verified appended to type for types other than login/signup",
                  "fullTitle": "Authentication Utilities sessionTypeUrl should NOT return session url with _verified appended to type for types other than login/signup",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "setup({\n  path: usipPathWithParams(flagshipUsipParams)\n});\n(0, _chai.expect)(authUtilities.sessionTypeUrl({\n  type: 'mfa'\n})).to.include((0, _appendQuery.default)((0, _constants2.API_SESSION_URL)({\n  type: 'mfa'\n})));",
                  "err": {},
                  "uuid": "a3e41810-8eb6-4159-aa1b-78c4e52d21e4",
                  "parentUUID": "02004bdf-851a-4587-8ef7-5d1e0ed07d0d",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should NOT return session url with _verified appended to type when not on USiP",
                  "fullTitle": "Authentication Utilities sessionTypeUrl should NOT return session url with _verified appended to type when not on USiP",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "setup({\n  path: flagshipUsipParams\n});\n(0, _chai.expect)(authUtilities.sessionTypeUrl({\n  type: type\n})).to.include((0, _appendQuery.default)((0, _constants2.API_SESSION_URL)({\n  type: type\n})));",
                  "err": {},
                  "uuid": "268102d8-988d-4e66-a6e3-5bd452fd834a",
                  "parentUUID": "02004bdf-851a-4587-8ef7-5d1e0ed07d0d",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should NOT return session url with _verified appended for external applications other than OCC/Flagship",
                  "fullTitle": "Authentication Utilities sessionTypeUrl should NOT return session url with _verified appended for external applications other than OCC/Flagship",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "setup({\n  path: usipPathWithParams(ebenefitsUsipParams)\n});\n(0, _chai.expect)(authUtilities.sessionTypeUrl({\n  type: type\n})).to.not.include('_verified');",
                  "err": {},
                  "uuid": "9bca706e-d4fb-4ed8-8fd1-28a2cab37d56",
                  "parentUUID": "02004bdf-851a-4587-8ef7-5d1e0ed07d0d",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should use `API_SIGN_IN_SERVICE_URL` when `useOAuth` is true",
                  "fullTitle": "Authentication Utilities sessionTypeUrl should use `API_SIGN_IN_SERVICE_URL` when `useOAuth` is true",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
                  "err": {},
                  "uuid": "81a2f950-5b96-4be4-b4a2-d08f18c8ae9f",
                  "parentUUID": "02004bdf-851a-4587-8ef7-5d1e0ed07d0d",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should use API_SESSION_URL when OAuth is disabled",
                  "fullTitle": "Authentication Utilities sessionTypeUrl should use API_SESSION_URL when OAuth is disabled",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
                  "err": {},
                  "uuid": "28e12596-9021-4345-9c59-27cf3b52bd08",
                  "parentUUID": "02004bdf-851a-4587-8ef7-5d1e0ed07d0d",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "67fb7311-6b1c-45ca-b366-5bdd1ff17876",
                "c5d87075-e81c-4335-af89-e7dc4557efd7",
                "e20ed0b4-d0df-432d-8d5f-7b05dc3debb3",
                "e397156a-8c1b-467d-b91e-913e05029455",
                "486bef64-8a39-4415-8017-4fe6a3794ee4",
                "392d796c-53af-405e-baab-24f58e75bb54",
                "d169b811-7ced-486e-9c28-df4a65a00d9e",
                "d11ded2e-f69f-4c32-90ec-6d1c14dd6c8c",
                "ad37ad4b-75ea-4407-8e53-f185705d1519",
                "068409a1-967a-41d3-a838-d5f046c44631",
                "a3e41810-8eb6-4159-aa1b-78c4e52d21e4",
                "268102d8-988d-4e66-a6e3-5bd452fd834a",
                "9bca706e-d4fb-4ed8-8fd1-28a2cab37d56",
                "81a2f950-5b96-4be4-b4a2-d08f18c8ae9f",
                "28e12596-9021-4345-9c59-27cf3b52bd08"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 15,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "ce9359a8-b0e2-44cd-afea-03a0c9b9404c",
              "title": "getGAClientId",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/platform/user/tests/authentication/utilities.unit.spec.js",
              "file": "/src/platform/user/tests/authentication/utilities.unit.spec.js",
              "beforeHooks": [],
              "afterHooks": [
                {
                  "title": "\"after each\" hook in \"getGAClientId\"",
                  "fullTitle": "Authentication Utilities getGAClientId \"after each\" hook in \"getGAClientId\"",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "return cleanup();",
                  "err": {},
                  "uuid": "bd8f9c62-a5e5-4a43-9c49-64af64371de7",
                  "parentUUID": "ce9359a8-b0e2-44cd-afea-03a0c9b9404c",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "tests": [
                {
                  "title": "should return the GA client id",
                  "fullTitle": "Authentication Utilities getGAClientId should return the GA client id",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "setup({\n  mockGA: {\n    mockGAActive: true,\n    trackingId: _constants2.GA.trackingIds[0]\n  }\n});\n(0, _chai.expect)(authUtilities.getGAClientId()).to.eql(mockGAClientId);",
                  "err": {},
                  "uuid": "cb840aa1-5eeb-4a68-b246-0491a293eb29",
                  "parentUUID": "ce9359a8-b0e2-44cd-afea-03a0c9b9404c",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return null if clientId is invalid",
                  "fullTitle": "Authentication Utilities getGAClientId should return null if clientId is invalid",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "setup({\n  mockGA: {\n    mockGAActive: true,\n    trackingId: mockInvalidGATrackingId\n  }\n});\n(0, _chai.expect)(authUtilities.getGAClientId()).to.eql(null);",
                  "err": {},
                  "uuid": "75495456-9be0-452a-ad05-3c2537056828",
                  "parentUUID": "ce9359a8-b0e2-44cd-afea-03a0c9b9404c",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return null if clientId is invalid",
                  "fullTitle": "Authentication Utilities getGAClientId should return null if clientId is invalid",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "setup({\n  mockGA: {\n    throwGAError: true,\n    mockGAActive: true,\n    trackingId: mockInvalidGATrackingId\n  }\n});\n(0, _chai.expect)(authUtilities.getGAClientId()).to.eql(null);",
                  "err": {},
                  "uuid": "7208a93f-3134-4851-a64c-1e6f02e21d9d",
                  "parentUUID": "ce9359a8-b0e2-44cd-afea-03a0c9b9404c",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "cb840aa1-5eeb-4a68-b246-0491a293eb29",
                "75495456-9be0-452a-ad05-3c2537056828",
                "7208a93f-3134-4851-a64c-1e6f02e21d9d"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "6bfdcf11-b513-4765-9829-04de81b59ba8",
              "title": "createExternalApplicationUrl",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/platform/user/tests/authentication/utilities.unit.spec.js",
              "file": "/src/platform/user/tests/authentication/utilities.unit.spec.js",
              "beforeHooks": [],
              "afterHooks": [
                {
                  "title": "\"after each\" hook in \"createExternalApplicationUrl\"",
                  "fullTitle": "Authentication Utilities createExternalApplicationUrl \"after each\" hook in \"createExternalApplicationUrl\"",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "return cleanup();",
                  "err": {},
                  "uuid": "a56d3179-1398-4c9c-9877-ad381c94c899",
                  "parentUUID": "6bfdcf11-b513-4765-9829-04de81b59ba8",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "tests": [
                {
                  "title": "should return correct url or null for the parsed application param",
                  "fullTitle": "Authentication Utilities createExternalApplicationUrl should return correct url or null for the parsed application param",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "Object.values(_constants2.EXTERNAL_APPS).forEach(function (application) {\n  setup({\n    path: \"\".concat(usipPath, \"?application=\").concat(application)\n  });\n  var pathAppend = function pathAppend() {\n    switch (application) {\n      case _constants2.EXTERNAL_APPS.EBENEFITS:\n        return _constants2.EBENEFITS_DEFAULT_PATH;\n      case _constants2.EXTERNAL_APPS.VA_OCC_MOBILE:\n        return \"\".concat(global.window.location.search);\n      case _constants2.EXTERNAL_APPS.MY_VA_HEALTH:\n        return \"/?authenticated=true\";\n      default:\n        return '';\n    }\n  };\n  (0, _chai.expect)(authUtilities.createExternalApplicationUrl()).to.eq(\"\".concat(_constants2.EXTERNAL_REDIRECTS[application]).concat(pathAppend()));\n  setup({});\n});\n(0, _chai.expect)(authUtilities.createExternalApplicationUrl()).to.eq(null);",
                  "err": {},
                  "uuid": "6a5e1ba8-bda6-4124-a8db-dc1e42a7fb17",
                  "parentUUID": "6bfdcf11-b513-4765-9829-04de81b59ba8",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should pass all query params through for OCC mobile applications",
                  "fullTitle": "Authentication Utilities createExternalApplicationUrl should pass all query params through for OCC mobile applications",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var application = _constants2.EXTERNAL_APPS.VA_OCC_MOBILE;\nvar mockParams = \"?application=\".concat(application, \"&foo=bar&bar=foo\");\nsetup({\n  path: \"\".concat(usipPath).concat(mockParams)\n});\n(0, _chai.expect)(authUtilities.createExternalApplicationUrl()).to.eq(\"\".concat(_constants2.EXTERNAL_REDIRECTS[application]).concat(mockParams));",
                  "err": {},
                  "uuid": "6d6c569a-2667-4c3f-85c6-fbdd1fb282fa",
                  "parentUUID": "6bfdcf11-b513-4765-9829-04de81b59ba8",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should strip out the 2 `to` query parameters, uses the correct one",
                  "fullTitle": "Authentication Utilities createExternalApplicationUrl should strip out the 2 `to` query parameters, uses the correct one",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "setup({\n  path: \"\".concat(usipPath).concat(cernerUsipParams).concat(cernerComplicatedParams)\n});\n(0, _chai.expect)(authUtilities.createExternalApplicationUrl()).to.eql(\"https://staging-patientportal.myhealth.va.gov/session-api/realm/f0fded0d-d00b-4b28-9190-853247fd9f9d?authenticated=true\");",
                  "err": {},
                  "uuid": "26a4855c-22d4-4687-bda7-8c777fd5970d",
                  "parentUUID": "6bfdcf11-b513-4765-9829-04de81b59ba8",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should redirect to the proper Cerner url",
                  "fullTitle": "Authentication Utilities createExternalApplicationUrl should redirect to the proper Cerner url",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "setup({\n  path: \"\".concat(usipPath).concat(cernerUsipParams).concat(cernerSandbox)\n});\n(0, _chai.expect)(authUtilities.createExternalApplicationUrl()).to.eql(\"https://sandbox-patientportal.myhealth.va.gov/session-api/realm/f0fded0d-d00b-4b28-9190-853247fd9f9d?authenticated=true\");",
                  "err": {},
                  "uuid": "fa9a35f2-3d2d-4d82-b4e3-aaeff8bafb96",
                  "parentUUID": "6bfdcf11-b513-4765-9829-04de81b59ba8",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "6a5e1ba8-bda6-4124-a8db-dc1e42a7fb17",
                "6d6c569a-2667-4c3f-85c6-fbdd1fb282fa",
                "26a4855c-22d4-4687-bda7-8c777fd5970d",
                "fa9a35f2-3d2d-4d82-b4e3-aaeff8bafb96"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 5,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "9edf0532-6455-49bf-8d9b-ac65c72a149e",
              "title": "createAndStoreReturnUrl",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/platform/user/tests/authentication/utilities.unit.spec.js",
              "file": "/src/platform/user/tests/authentication/utilities.unit.spec.js",
              "beforeHooks": [],
              "afterHooks": [
                {
                  "title": "\"after each\" hook in \"createAndStoreReturnUrl\"",
                  "fullTitle": "Authentication Utilities createAndStoreReturnUrl \"after each\" hook in \"createAndStoreReturnUrl\"",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "return cleanup();",
                  "err": {},
                  "uuid": "3fc15a33-8597-41c0-9870-3a01ef6e1d7a",
                  "parentUUID": "9edf0532-6455-49bf-8d9b-ac65c72a149e",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "tests": [
                {
                  "title": "should return window.location when not on USiP",
                  "fullTitle": "Authentication Utilities createAndStoreReturnUrl should return window.location when not on USiP",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "setup({\n  path: nonUsipPath\n});\n(0, _chai.expect)(authUtilities.createAndStoreReturnUrl()).to.equal(\"\".concat(base).concat(nonUsipPath));\n(0, _chai.expect)(sessionStorage.getItem(_constants2.AUTHN_SETTINGS.RETURN_URL)).to.equal(\"\".concat(base).concat(nonUsipPath));",
                  "err": {},
                  "uuid": "34e3d660-d0dd-44d0-b56e-eae544f8c3ed",
                  "parentUUID": "9edf0532-6455-49bf-8d9b-ac65c72a149e",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return window.location.origin when on USiP but logging in internally",
                  "fullTitle": "Authentication Utilities createAndStoreReturnUrl should return window.location.origin when on USiP but logging in internally",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "setup({\n  path: usipPath\n});\n(0, _chai.expect)(authUtilities.createAndStoreReturnUrl()).to.equal(base);\n(0, _chai.expect)(sessionStorage.getItem(_constants2.AUTHN_SETTINGS.RETURN_URL)).to.equal(base);",
                  "err": {},
                  "uuid": "9ac59b40-acbd-401b-a28c-decce9b2ea83",
                  "parentUUID": "9edf0532-6455-49bf-8d9b-ac65c72a149e",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return external application url when on USiP and valid application param",
                  "fullTitle": "Authentication Utilities createAndStoreReturnUrl should return external application url when on USiP and valid application param",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "Object.values(_constants2.EXTERNAL_APPS).forEach(function (application) {\n  setup({\n    path: \"\".concat(usipPath, \"?application=\").concat(application)\n  });\n  (0, _chai.expect)(authUtilities.createAndStoreReturnUrl()).to.eq(authUtilities.createExternalApplicationUrl());\n  setup({});\n});\nit('should return \"/\" when pathname is \"/verify/\" and hasSession() is false', function () {\n  setup({\n    path: '/verify/'\n  });\n  _sinon.default.stub(authUtilities, 'hasSession').returns(false);\n  (0, _chai.expect)(authUtilities.createAndStoreReturnUrl()).to.equal('/');\n  (0, _chai.expect)(sessionStorage.getItem(_constants2.AUTHN_SETTINGS.RETURN_URL)).to.equal('/');\n  authUtilities.hasSession.restore();\n});",
                  "err": {},
                  "uuid": "795672b8-3238-4214-b122-285f8e3ad5c4",
                  "parentUUID": "9edf0532-6455-49bf-8d9b-ac65c72a149e",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return the `authReturnUrl` if it is already presented",
                  "fullTitle": "Authentication Utilities createAndStoreReturnUrl should return the `authReturnUrl` if it is already presented",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "setup({\n  path: nonUsipPath\n});\nvar internalLink = 'http://va.gov/track-claims/';\nsessionStorage.setItem('authReturnUrl', internalLink);\n(0, _chai.expect)(authUtilities.createAndStoreReturnUrl()).to.equal(internalLink);\n(0, _chai.expect)(sessionStorage.getItem(_constants2.AUTHN_SETTINGS.RETURN_URL)).to.equal(internalLink);\nsessionStorage.clear();",
                  "err": {},
                  "uuid": "de4c0ae4-76ea-4cc1-85f8-51387a9d26ee",
                  "parentUUID": "9edf0532-6455-49bf-8d9b-ac65c72a149e",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "34e3d660-d0dd-44d0-b56e-eae544f8c3ed",
                "9ac59b40-acbd-401b-a28c-decce9b2ea83",
                "795672b8-3238-4214-b122-285f8e3ad5c4",
                "de4c0ae4-76ea-4cc1-85f8-51387a9d26ee"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 5,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "205ca76f-dc54-4cf2-8955-6c3718ca4288",
              "title": "redirect",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/platform/user/tests/authentication/utilities.unit.spec.js",
              "file": "/src/platform/user/tests/authentication/utilities.unit.spec.js",
              "beforeHooks": [],
              "afterHooks": [
                {
                  "title": "\"after each\" hook in \"redirect\"",
                  "fullTitle": "Authentication Utilities redirect \"after each\" hook in \"redirect\"",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "return cleanup();",
                  "err": {},
                  "uuid": "4ccee99e-9a00-496b-b60d-6804cd3e3a25",
                  "parentUUID": "205ca76f-dc54-4cf2-8955-6c3718ca4288",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "tests": [
                {
                  "title": "should redirect to the provided redirectUrl in its simplest use case",
                  "fullTitle": "Authentication Utilities redirect should redirect to the provided redirectUrl in its simplest use case",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "authUtilities.redirect(base);\n(0, _chai.expect)(global.window.location).to.equal(base);",
                  "err": {},
                  "uuid": "0485a35b-21ee-4745-8022-6190c5b90e5a",
                  "parentUUID": "205ca76f-dc54-4cf2-8955-6c3718ca4288",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should set sessionStorage `authReturnUrl` correctly based on internal or external authentication",
                  "fullTitle": "Authentication Utilities redirect should set sessionStorage `authReturnUrl` correctly based on internal or external authentication",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "setup({\n  path: nonUsipPath\n});\nauthUtilities.redirect(base);\n(0, _chai.expect)(sessionStorage.getItem(_constants2.AUTHN_SETTINGS.RETURN_URL)).to.equal(\"\".concat(base).concat(nonUsipPath));\nsetup({\n  path: usipPathWithParams(mhvUsipParams)\n});\nauthUtilities.redirect(base);\n(0, _chai.expect)(sessionStorage.getItem(_constants2.AUTHN_SETTINGS.RETURN_URL)).to.equal(null);",
                  "err": {},
                  "uuid": "d35a58ed-2bd6-4bab-9e4e-a71651a0819e",
                  "parentUUID": "205ca76f-dc54-4cf2-8955-6c3718ca4288",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should redirect with GA Client ID appended for redirects that include `idme`",
                  "fullTitle": "Authentication Utilities redirect should redirect with GA Client ID appended for redirects that include `idme`",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
                  "err": {},
                  "uuid": "5b74282b-be55-4515-8ec1-6182c5504b42",
                  "parentUUID": "205ca76f-dc54-4cf2-8955-6c3718ca4288",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "0485a35b-21ee-4745-8022-6190c5b90e5a",
                "d35a58ed-2bd6-4bab-9e4e-a71651a0819e",
                "5b74282b-be55-4515-8ec1-6182c5504b42"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "f7cd37bd-7978-4aa2-b7bd-3cffe6a9a52a",
              "title": "mockLogin",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/platform/user/tests/authentication/utilities.unit.spec.js",
              "file": "/src/platform/user/tests/authentication/utilities.unit.spec.js",
              "beforeHooks": [
                {
                  "title": "\"before each\" hook in \"mockLogin\"",
                  "fullTitle": "Authentication Utilities mockLogin \"before each\" hook in \"mockLogin\"",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "return setup({});",
                  "err": {},
                  "uuid": "a1b5be3b-0bf5-4053-95c4-679e1887c153",
                  "parentUUID": "f7cd37bd-7978-4aa2-b7bd-3cffe6a9a52a",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [
                {
                  "title": "\"after each\" hook in \"mockLogin\"",
                  "fullTitle": "Authentication Utilities mockLogin \"after each\" hook in \"mockLogin\"",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "return cleanup();",
                  "err": {},
                  "uuid": "0d70966a-ae52-4f7a-8721-896a3748bf87",
                  "parentUUID": "f7cd37bd-7978-4aa2-b7bd-3cffe6a9a52a",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "tests": [
                {
                  "title": "should redirect to proper mockLogin url",
                  "fullTitle": "Authentication Utilities mockLogin should redirect to proper mockLogin url",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
                  "err": {},
                  "uuid": "d9b4a8b7-f6b4-464e-a702-61acd8eecacd",
                  "parentUUID": "f7cd37bd-7978-4aa2-b7bd-3cffe6a9a52a",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should throw an error when no `type` is provided",
                  "fullTitle": "Authentication Utilities mockLogin should throw an error when no `type` is provided",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)(authUtilities.mockLogin()).to.throw;",
                  "err": {},
                  "uuid": "29c63f2f-ede0-4efd-8450-3d3d43175a21",
                  "parentUUID": "f7cd37bd-7978-4aa2-b7bd-3cffe6a9a52a",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "d9b4a8b7-f6b4-464e-a702-61acd8eecacd",
                "29c63f2f-ede0-4efd-8450-3d3d43175a21"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "763250c8-9e9f-4cab-9cc0-e7a681a730ae",
              "title": "login",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/platform/user/tests/authentication/utilities.unit.spec.js",
              "file": "/src/platform/user/tests/authentication/utilities.unit.spec.js",
              "beforeHooks": [],
              "afterHooks": [
                {
                  "title": "\"after each\" hook in \"login\"",
                  "fullTitle": "Authentication Utilities login \"after each\" hook in \"login\"",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "return cleanup();",
                  "err": {},
                  "uuid": "16878a05-3dcb-49e1-88fe-42efec802445",
                  "parentUUID": "763250c8-9e9f-4cab-9cc0-e7a681a730ae",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "tests": [
                {
                  "title": "should setLoginAttempted and redirect to login session url for all CSPs not on USiP",
                  "fullTitle": "Authentication Utilities login should setLoginAttempted and redirect to login session url for all CSPs not on USiP",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "Object.values(_constants2.CSP_IDS).forEach(/*#__PURE__*/function () {\n  var _ref7 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee6(policy) {\n    return _regeneratorRuntime().wrap(function _callee6$(_context6) {\n      while (1) switch (_context6.prev = _context6.next) {\n        case 0:\n          setup({\n            path: nonUsipPath\n          });\n          _context6.next = 3;\n          return authUtilities.login({\n            policy: policy\n          });\n        case 3:\n          _context6.t0 = (0, _chai.expect)(global.window.location).to;\n          _context6.next = 6;\n          return authUtilities.sessionTypeUrl({\n            type: policy\n          });\n        case 6:\n          _context6.t1 = _context6.sent;\n          _context6.t0.equal.call(_context6.t0, _context6.t1);\n          (0, _chai.expect)((0, _loginAttempted.getLoginAttempted)()).to.equal('true');\n          (0, _chai.expect)(sessionStorage.getItem(_constants2.AUTHN_SETTINGS.RETURN_URL)).to.equal(\"\".concat(base).concat(nonUsipPath));\n          setup({});\n        case 11:\n        case \"end\":\n          return _context6.stop();\n      }\n    }, _callee6);\n  }));\n  return function (_x) {\n    return _ref7.apply(this, arguments);\n  };\n}());",
                  "err": {},
                  "uuid": "9a93c0e3-3c3d-4e55-9f4c-42b0c24125a2",
                  "parentUUID": "763250c8-9e9f-4cab-9cc0-e7a681a730ae",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should setLoginAttempted and redirect to login session url for all CSPs on USiP authenticating internally",
                  "fullTitle": "Authentication Utilities login should setLoginAttempted and redirect to login session url for all CSPs on USiP authenticating internally",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "Object.values(_constants2.CSP_IDS).forEach(/*#__PURE__*/function () {\n  var _ref8 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee7(policy) {\n    return _regeneratorRuntime().wrap(function _callee7$(_context7) {\n      while (1) switch (_context7.prev = _context7.next) {\n        case 0:\n          setup({\n            path: usipPath\n          });\n          _context7.next = 3;\n          return authUtilities.login({\n            policy: policy\n          });\n        case 3:\n          _context7.t0 = (0, _chai.expect)(global.window.location).to;\n          _context7.next = 6;\n          return authUtilities.sessionTypeUrl({\n            type: policy\n          });\n        case 6:\n          _context7.t1 = _context7.sent;\n          _context7.t0.equal.call(_context7.t0, _context7.t1);\n          (0, _chai.expect)((0, _loginAttempted.getLoginAttempted)()).to.equal('true');\n          (0, _chai.expect)(sessionStorage.getItem(_constants2.AUTHN_SETTINGS.RETURN_URL)).to.equal(base);\n          setup({});\n        case 11:\n        case \"end\":\n          return _context7.stop();\n      }\n    }, _callee7);\n  }));\n  return function (_x2) {\n    return _ref8.apply(this, arguments);\n  };\n}());",
                  "err": {},
                  "uuid": "5b31f360-ff16-45e3-abc8-6baa9e5913fd",
                  "parentUUID": "763250c8-9e9f-4cab-9cc0-e7a681a730ae",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should redirect to login session url for all CSPs on USiP authenticating externally",
                  "fullTitle": "Authentication Utilities login should redirect to login session url for all CSPs on USiP authenticating externally",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "Object.values(_constants2.CSP_IDS).forEach(/*#__PURE__*/function () {\n  var _ref9 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee8(policy) {\n    var externalApplicationUrl, expectedRedirect;\n    return _regeneratorRuntime().wrap(function _callee8$(_context8) {\n      while (1) switch (_context8.prev = _context8.next) {\n        case 0:\n          setup({\n            path: usipPathWithParams(mhvUsipParams)\n          });\n          externalApplicationUrl = authUtilities.createExternalApplicationUrl();\n          _context8.next = 4;\n          return authUtilities.sessionTypeUrl({\n            type: policy\n          });\n        case 4:\n          expectedRedirect = _context8.sent;\n          _context8.next = 7;\n          return authUtilities.login({\n            policy: policy\n          });\n        case 7:\n          (0, _chai.expect)(global.window.location).to.equal(expectedRedirect);\n          (0, _chai.expect)(sessionStorage.getItem(_constants2.AUTHN_SETTINGS.RETURN_URL)).to.equal(externalApplicationUrl);\n          setup({});\n        case 10:\n        case \"end\":\n          return _context8.stop();\n      }\n    }, _callee8);\n  }));\n  return function (_x3) {\n    return _ref9.apply(this, arguments);\n  };\n}());",
                  "err": {},
                  "uuid": "c5dd5f1a-f88e-470d-a189-ab3df82ccd24",
                  "parentUUID": "763250c8-9e9f-4cab-9cc0-e7a681a730ae",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "9a93c0e3-3c3d-4e55-9f4c-42b0c24125a2",
                "5b31f360-ff16-45e3-abc8-6baa9e5913fd",
                "c5dd5f1a-f88e-470d-a189-ab3df82ccd24"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 4,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "9b66db6d-4eff-4e94-91a5-e022a70eb8a0",
              "title": "mfa",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/platform/user/tests/authentication/utilities.unit.spec.js",
              "file": "/src/platform/user/tests/authentication/utilities.unit.spec.js",
              "beforeHooks": [],
              "afterHooks": [
                {
                  "title": "\"after each\" hook in \"mfa\"",
                  "fullTitle": "Authentication Utilities mfa \"after each\" hook in \"mfa\"",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "return cleanup();",
                  "err": {},
                  "uuid": "3f4810aa-4970-476b-b0df-822e5bb957cd",
                  "parentUUID": "9b66db6d-4eff-4e94-91a5-e022a70eb8a0",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "tests": [
                {
                  "title": "should redirect to the mfa session url",
                  "fullTitle": "Authentication Utilities mfa should redirect to the mfa session url",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "setup({\n  path: nonUsipPath\n});\nauthUtilities.mfa();\n(0, _chai.expect)(global.window.location).to.equal((0, _constants2.API_SESSION_URL)({\n  type: _constants2.POLICY_TYPES.MFA\n}));",
                  "err": {},
                  "uuid": "aa5f3fdf-3f5b-4683-955b-119daace798b",
                  "parentUUID": "9b66db6d-4eff-4e94-91a5-e022a70eb8a0",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "aa5f3fdf-3f5b-4683-955b-119daace798b"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "9f290cab-b2cf-4bf8-836e-587556a778e9",
              "title": "verify",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/platform/user/tests/authentication/utilities.unit.spec.js",
              "file": "/src/platform/user/tests/authentication/utilities.unit.spec.js",
              "beforeHooks": [
                {
                  "title": "\"before each\" hook in \"verify\"",
                  "fullTitle": "Authentication Utilities verify \"before each\" hook in \"verify\"",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "return setup({\n  path: nonUsipPath\n});",
                  "err": {},
                  "uuid": "4452e81c-5889-4e9f-b372-25990777e580",
                  "parentUUID": "9f290cab-b2cf-4bf8-836e-587556a778e9",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [
                {
                  "title": "\"after each\" hook in \"verify\"",
                  "fullTitle": "Authentication Utilities verify \"after each\" hook in \"verify\"",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "return cleanup();",
                  "err": {},
                  "uuid": "37182292-4f43-4677-9773-7d8fbccfbd1d",
                  "parentUUID": "9f290cab-b2cf-4bf8-836e-587556a778e9",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "tests": [
                {
                  "title": "should throw an error when no policy provided",
                  "fullTitle": "Authentication Utilities verify should throw an error when no policy provided",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)(authUtilities.verify({\n  isLink: false\n})).to.throw;",
                  "err": {},
                  "uuid": "b06cc14a-8a34-45f6-885f-435856cbe568",
                  "parentUUID": "9f290cab-b2cf-4bf8-836e-587556a778e9",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should generate a verify link (SAML)",
                  "fullTitle": "Authentication Utilities verify should generate a verify link (SAML)",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
                  "err": {},
                  "uuid": "e0c89afd-827e-407f-8de7-281008bdf401",
                  "parentUUID": "9f290cab-b2cf-4bf8-836e-587556a778e9",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should generate a verify link (OAuth)",
                  "fullTitle": "Authentication Utilities verify should generate a verify link (OAuth)",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
                  "err": {},
                  "uuid": "e871e5f8-10d6-4065-bc58-16f6d99a8bb8",
                  "parentUUID": "9f290cab-b2cf-4bf8-836e-587556a778e9",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should kickoff identity-verification (SAML)",
                  "fullTitle": "Authentication Utilities verify should kickoff identity-verification (SAML)",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
                  "err": {},
                  "uuid": "bd89b83b-cc91-4f28-a5a8-5744e30108d4",
                  "parentUUID": "9f290cab-b2cf-4bf8-836e-587556a778e9",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should kickoff identity-verification (OAuth)",
                  "fullTitle": "Authentication Utilities verify should kickoff identity-verification (OAuth)",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
                  "err": {},
                  "uuid": "22e5061a-0d04-463f-a670-499f674984ff",
                  "parentUUID": "9f290cab-b2cf-4bf8-836e-587556a778e9",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should pass along query parameters",
                  "fullTitle": "Authentication Utilities verify should pass along query parameters",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
                  "err": {},
                  "uuid": "43106c5d-178c-49c6-a241-a61d0502fc25",
                  "parentUUID": "9f290cab-b2cf-4bf8-836e-587556a778e9",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "b06cc14a-8a34-45f6-885f-435856cbe568",
                "e0c89afd-827e-407f-8de7-281008bdf401",
                "e871e5f8-10d6-4065-bc58-16f6d99a8bb8",
                "bd89b83b-cc91-4f28-a5a8-5744e30108d4",
                "22e5061a-0d04-463f-a670-499f674984ff",
                "43106c5d-178c-49c6-a241-a61d0502fc25"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 6,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "dbc61063-3c11-4dd8-a865-43e32991d14d",
              "title": "signupOrVerify (SAML)",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/platform/user/tests/authentication/utilities.unit.spec.js",
              "file": "/src/platform/user/tests/authentication/utilities.unit.spec.js",
              "beforeHooks": [],
              "afterHooks": [
                {
                  "title": "\"after each\" hook in \"signupOrVerify (SAML)\"",
                  "fullTitle": "Authentication Utilities signupOrVerify (SAML) \"after each\" hook in \"signupOrVerify (SAML)\"",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "return cleanup();",
                  "err": {},
                  "uuid": "c4c9f974-6a3b-435c-8762-51ab91242033",
                  "parentUUID": "dbc61063-3c11-4dd8-a865-43e32991d14d",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "tests": [
                {
                  "title": "should generate the default URL link for signup 'idme_signup'",
                  "fullTitle": "Authentication Utilities signupOrVerify (SAML) should generate the default URL link for signup 'idme_signup'",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
                  "err": {},
                  "uuid": "34d32780-ab58-4944-a2fd-127487d618aa",
                  "parentUUID": "dbc61063-3c11-4dd8-a865-43e32991d14d",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should generate the default URL link and redirect for signup 'idme_signup'",
                  "fullTitle": "Authentication Utilities signupOrVerify (SAML) should generate the default URL link and redirect for signup 'idme_signup'",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
                  "err": {},
                  "uuid": "941a39d6-ffe4-4870-97a1-e85b51629865",
                  "parentUUID": "dbc61063-3c11-4dd8-a865-43e32991d14d",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should generate a verified URL for signup 'idme_signup_verified'",
                  "fullTitle": "Authentication Utilities signupOrVerify (SAML) should generate a verified URL for signup 'idme_signup_verified'",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
                  "err": {},
                  "uuid": "a68d7550-0cf8-4dc4-bc99-e30b2dadc21c",
                  "parentUUID": "dbc61063-3c11-4dd8-a865-43e32991d14d",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should generate the default URL link for signup 'logingov_signup'",
                  "fullTitle": "Authentication Utilities signupOrVerify (SAML) should generate the default URL link for signup 'logingov_signup'",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
                  "err": {},
                  "uuid": "6ce153b4-e7fe-41cf-8319-00a0e4a07da7",
                  "parentUUID": "dbc61063-3c11-4dd8-a865-43e32991d14d",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should generate the default URL link and redirect for signup 'logingov_signup'",
                  "fullTitle": "Authentication Utilities signupOrVerify (SAML) should generate the default URL link and redirect for signup 'logingov_signup'",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
                  "err": {},
                  "uuid": "8a6d7962-a01a-4873-b84c-654c5704b25a",
                  "parentUUID": "dbc61063-3c11-4dd8-a865-43e32991d14d",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should generate a verified URL for signup 'logingov_signup_verified'",
                  "fullTitle": "Authentication Utilities signupOrVerify (SAML) should generate a verified URL for signup 'logingov_signup_verified'",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
                  "err": {},
                  "uuid": "8532d5c2-8988-46b9-863e-436c2775541b",
                  "parentUUID": "dbc61063-3c11-4dd8-a865-43e32991d14d",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "34d32780-ab58-4944-a2fd-127487d618aa",
                "941a39d6-ffe4-4870-97a1-e85b51629865",
                "a68d7550-0cf8-4dc4-bc99-e30b2dadc21c",
                "6ce153b4-e7fe-41cf-8319-00a0e4a07da7",
                "8a6d7962-a01a-4873-b84c-654c5704b25a",
                "8532d5c2-8988-46b9-863e-436c2775541b"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 8,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "dbbadb6b-c8c1-4b8a-96bd-947b6bc7b8fd",
              "title": "logout",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/platform/user/tests/authentication/utilities.unit.spec.js",
              "file": "/src/platform/user/tests/authentication/utilities.unit.spec.js",
              "beforeHooks": [],
              "afterHooks": [
                {
                  "title": "\"after each\" hook in \"logout\"",
                  "fullTitle": "Authentication Utilities logout \"after each\" hook in \"logout\"",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "return cleanup();",
                  "err": {},
                  "uuid": "cdad80f8-6639-415a-b39e-525b4de95acf",
                  "parentUUID": "dbbadb6b-c8c1-4b8a-96bd-947b6bc7b8fd",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "tests": [
                {
                  "title": "should redirect to the logout session url",
                  "fullTitle": "Authentication Utilities logout should redirect to the logout session url",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "setup({\n  path: nonUsipPath\n});\nauthUtilities.logout();\n(0, _chai.expect)(global.window.location).to.equal((0, _constants2.API_SESSION_URL)({\n  type: _constants2.POLICY_TYPES.SLO\n}));",
                  "err": {},
                  "uuid": "7dd642dc-1ffb-4ede-8502-e0233f93c150",
                  "parentUUID": "dbbadb6b-c8c1-4b8a-96bd-947b6bc7b8fd",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should redirect to the logout session url with appended params if provided",
                  "fullTitle": "Authentication Utilities logout should redirect to the logout session url with appended params if provided",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "setup({\n  path: nonUsipPath\n});\nvar params = {\n  foo: 'bar'\n};\nauthUtilities.logout({\n  version: _constants2.API_VERSION,\n  clickedEvent: _constants2.AUTH_EVENTS.LOGOUT,\n  queryParams: params\n});\n(0, _chai.expect)(global.window.location).to.equal((0, _appendQuery.default)((0, _constants2.API_SESSION_URL)({\n  type: _constants2.POLICY_TYPES.SLO\n}), params));",
                  "err": {},
                  "uuid": "f4544cef-752c-4172-b663-7ca088bf04a8",
                  "parentUUID": "dbbadb6b-c8c1-4b8a-96bd-947b6bc7b8fd",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should redirect to the SSOe logout session url with `agreements_declined=true` if provided",
                  "fullTitle": "Authentication Utilities logout should redirect to the SSOe logout session url with `agreements_declined=true` if provided",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "setup({\n  path: nonUsipPath\n});\nvar params = _defineProperty({}, \"agreements_declined\", true);\nauthUtilities.logout({\n  version: _constants2.API_VERSION,\n  clickedEvent: _constants2.AUTH_EVENTS.LOGOUT,\n  queryParams: params\n});\n(0, _chai.expect)(global.window.location).to.eql((0, _appendQuery.default)((0, _constants2.API_SESSION_URL)({\n  type: _constants2.POLICY_TYPES.SLO\n}), params));",
                  "err": {},
                  "uuid": "39c021c7-15e7-4955-a53d-fed968ca7b34",
                  "parentUUID": "dbbadb6b-c8c1-4b8a-96bd-947b6bc7b8fd",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "7dd642dc-1ffb-4ede-8502-e0233f93c150",
                "f4544cef-752c-4172-b663-7ca088bf04a8",
                "39c021c7-15e7-4955-a53d-fed968ca7b34"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "2ce98086-d299-4966-b08e-dff9e25e8c27",
              "title": "logoutUrl",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/platform/user/tests/authentication/utilities.unit.spec.js",
              "file": "/src/platform/user/tests/authentication/utilities.unit.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should generate the SAML logout URL",
                  "fullTitle": "Authentication Utilities logoutUrl should generate the SAML logout URL",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
                  "err": {},
                  "uuid": "d8a1a7a9-c70d-4616-9538-6ea91775140c",
                  "parentUUID": "2ce98086-d299-4966-b08e-dff9e25e8c27",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "d8a1a7a9-c70d-4616-9538-6ea91775140c"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "66605402-cda6-4018-ae00-29cfa1490e07",
              "title": "generateReturnURL",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/platform/user/tests/authentication/utilities.unit.spec.js",
              "file": "/src/platform/user/tests/authentication/utilities.unit.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return users signing in on via the USiP (on default USiP route) to /my-va/",
                  "fullTitle": "Authentication Utilities generateReturnURL should return users signing in on via the USiP (on default USiP route) to /my-va/",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)(authUtilities.generateReturnURL(usipRoute)).to.eql(myVARoute);",
                  "err": {},
                  "uuid": "f3ebac25-afa7-4ef7-8c68-c0bf1c875d8d",
                  "parentUUID": "66605402-cda6-4018-ae00-29cfa1490e07",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return users signing in via the Sign in Modal (on the homepage) to /my-va/",
                  "fullTitle": "Authentication Utilities generateReturnURL should return users signing in via the Sign in Modal (on the homepage) to /my-va/",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)(authUtilities.generateReturnURL(homepageModalRoute)).to.eql(myVARoute);",
                  "err": {},
                  "uuid": "99fbe6e1-f772-4e16-b8a4-2360f324641d",
                  "parentUUID": "66605402-cda6-4018-ae00-29cfa1490e07",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return users signing in on non-default routes to original location",
                  "fullTitle": "Authentication Utilities generateReturnURL should return users signing in on non-default routes to original location",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)(authUtilities.generateReturnURL(nonHomepageRoute)).to.eql(nonHomepageRoute);",
                  "err": {},
                  "uuid": "8c53a457-823c-48d1-b827-06bc45062f52",
                  "parentUUID": "66605402-cda6-4018-ae00-29cfa1490e07",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return users to /my-va page when `authReturnUrl` is empty",
                  "fullTitle": "Authentication Utilities generateReturnURL should return users to /my-va page when `authReturnUrl` is empty",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)(authUtilities.generateReturnURL('')).to.eql(myVARoute);",
                  "err": {},
                  "uuid": "57ee436a-fe0a-4249-82eb-a69b0a5ab0a7",
                  "parentUUID": "66605402-cda6-4018-ae00-29cfa1490e07",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "f3ebac25-afa7-4ef7-8c68-c0bf1c875d8d",
                "99fbe6e1-f772-4e16-b8a4-2360f324641d",
                "8c53a457-823c-48d1-b827-06bc45062f52",
                "57ee436a-fe0a-4249-82eb-a69b0a5ab0a7"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "1576c5bc-7ce3-46df-86ce-becde840d42d",
              "title": "API_SESSION_URL",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/platform/user/tests/authentication/utilities.unit.spec.js",
              "file": "/src/platform/user/tests/authentication/utilities.unit.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should throw an error if no type is provided",
                  "fullTitle": "Authentication Utilities API_SESSION_URL should throw an error if no type is provided",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)(function () {\n  return (0, _constants2.API_SESSION_URL)({});\n}).to.throw('Attempted to call API_SESSION_URL without a type');",
                  "err": {},
                  "uuid": "6d13b4ab-17f3-44e0-b5fd-da0849c9ddf6",
                  "parentUUID": "1576c5bc-7ce3-46df-86ce-becde840d42d",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "6d13b4ab-17f3-44e0-b5fd-da0849c9ddf6"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "922ef347-f51c-42c2-b8c8-11e5b329f98c",
          "title": "<AcceptTermsPrompt>",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/platform/user/tests/authorization/components/AcceptTermsPrompt.unit.spec.jsx",
          "file": "/src/platform/user/tests/authorization/components/AcceptTermsPrompt.unit.spec.jsx",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"<AcceptTermsPrompt>\"",
              "fullTitle": "<AcceptTermsPrompt> \"before all\" hook in \"<AcceptTermsPrompt>\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "window.dataLayer = [];\nwindow.scrollTo = function () {};",
              "err": {},
              "uuid": "5886a43b-b5d9-4e72-a2ec-df0f4b946dda",
              "parentUUID": "922ef347-f51c-42c2-b8c8-11e5b329f98c",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": "should be an empty div if there is no content",
              "fullTitle": "<AcceptTermsPrompt> should be an empty div if there is no content",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var tree = _skinDeep.default.shallowRender(/*#__PURE__*/_react.default.createElement(_AcceptTermsPrompt.default, {\n  terms: {}\n}));\n(0, _chai.expect)(tree.toString()).to.equal('<div />');",
              "err": {},
              "uuid": "b3e0f11e-5004-4fa3-a2ab-7a3d42a9e4e9",
              "parentUUID": "922ef347-f51c-42c2-b8c8-11e5b329f98c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should call onAccept correctly",
              "fullTitle": "<AcceptTermsPrompt> should call onAccept correctly",
              "timedOut": false,
              "duration": 9,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var acceptTermsPrompt = _testUtils.default.renderIntoDocument(/*#__PURE__*/_react.default.createElement(_AcceptTermsPrompt.default, defaultProps));\nacceptTermsPrompt.handleSubmit();\n(0, _chai.expect)(defaultProps.onAccept.calledWith('mhvac')).to.be.true;",
              "err": {},
              "uuid": "788ae96b-0dfc-4e38-8c11-5e5ee40837ec",
              "parentUUID": "922ef347-f51c-42c2-b8c8-11e5b329f98c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "submit button should be disabled by default",
              "fullTitle": "<AcceptTermsPrompt> submit button should be disabled by default",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var tree = _skinDeep.default.shallowRender(/*#__PURE__*/_react.default.createElement(_AcceptTermsPrompt.default, defaultProps));\nvar submitButton = tree.subTree('.usa-button-disabled');\n(0, _chai.expect)(submitButton).to.be.ok;\n(0, _chai.expect)(submitButton.props.disabled).to.be.true;",
              "err": {},
              "uuid": "df31b69a-1dee-4fcc-9740-923e121a4d7e",
              "parentUUID": "922ef347-f51c-42c2-b8c8-11e5b329f98c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "submit button should be enabled if state is valid",
              "fullTitle": "<AcceptTermsPrompt> submit button should be enabled if state is valid",
              "timedOut": false,
              "duration": 4,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var acceptTermsPrompt = _testUtils.default.renderIntoDocument(/*#__PURE__*/_react.default.createElement(_AcceptTermsPrompt.default, defaultProps));\nacceptTermsPrompt.setState({\n  yesSelected: true,\n  scrolledToBottom: true\n});\nvar submitButton = (0, _reactDom.findDOMNode)(_testUtils.default.findRenderedDOMComponentWithClass(acceptTermsPrompt, 'submit-button'));\n(0, _chai.expect)(submitButton).to.be.ok;\n(0, _chai.expect)(submitButton.disabled).to.be.false;\n(0, _chai.expect)(submitButton.className).to.eq('usa-button submit-button');",
              "err": {},
              "uuid": "4f0bb95d-ecc4-4b71-91ae-08a0cb86dae2",
              "parentUUID": "922ef347-f51c-42c2-b8c8-11e5b329f98c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "passes aXe check when Submit button is disabled",
              "fullTitle": "<AcceptTermsPrompt> passes aXe check when Submit button is disabled",
              "timedOut": false,
              "duration": 102,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, _helpers.axeCheck)(/*#__PURE__*/_react.default.createElement(_AcceptTermsPrompt.default, defaultProps));",
              "err": {},
              "uuid": "2f4d9915-a17b-421a-876b-d2e31755df18",
              "parentUUID": "922ef347-f51c-42c2-b8c8-11e5b329f98c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "passes aXe check when Submit button is enabled",
              "fullTitle": "<AcceptTermsPrompt> passes aXe check when Submit button is enabled",
              "timedOut": false,
              "duration": 64,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var acceptTermsPrompt = /*#__PURE__*/_react.default.createElement(_AcceptTermsPrompt.default, defaultProps);\nvar acceptTermsPromptState = {\n  yesSelected: true,\n  scrolledToBottom: true\n};\n(0, _helpers.axeCheck)(acceptTermsPrompt, acceptTermsPromptState);",
              "err": {},
              "uuid": "96febb37-faaa-4a6c-ac3d-23e3616bfc72",
              "parentUUID": "922ef347-f51c-42c2-b8c8-11e5b329f98c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should render the correct default h level",
              "fullTitle": "<AcceptTermsPrompt> should render the correct default h level",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var tree = _skinDeep.default.shallowRender(/*#__PURE__*/_react.default.createElement(_AcceptTermsPrompt.default, defaultProps));\nvar title = tree.subTree('h1');\n(0, _chai.expect)(title).to.exist;",
              "err": {},
              "uuid": "fc700fc4-7107-47ae-b8d5-b3cce291421c",
              "parentUUID": "922ef347-f51c-42c2-b8c8-11e5b329f98c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should render the correct h level",
              "fullTitle": "<AcceptTermsPrompt> should render the correct h level",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var defaultPropsWithLevel = _objectSpread(_objectSpread({}, defaultProps), {}, {\n  level: 3\n});\nvar tree = _skinDeep.default.shallowRender(/*#__PURE__*/_react.default.createElement(_AcceptTermsPrompt.default, defaultPropsWithLevel));\nvar title = tree.subTree('h3');\n(0, _chai.expect)(title).to.exist;",
              "err": {},
              "uuid": "fae55153-7d0d-4990-ab09-62340a1e5e7b",
              "parentUUID": "922ef347-f51c-42c2-b8c8-11e5b329f98c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "b3e0f11e-5004-4fa3-a2ab-7a3d42a9e4e9",
            "788ae96b-0dfc-4e38-8c11-5e5ee40837ec",
            "df31b69a-1dee-4fcc-9740-923e121a4d7e",
            "4f0bb95d-ecc4-4b71-91ae-08a0cb86dae2",
            "2f4d9915-a17b-421a-876b-d2e31755df18",
            "96febb37-faaa-4a6c-ac3d-23e3616bfc72",
            "fc700fc4-7107-47ae-b8d5-b3cce291421c",
            "fae55153-7d0d-4990-ab09-62340a1e5e7b"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 182,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "6910e7b0-784c-4f86-9977-14baea83c82a",
          "title": "IdentityNotVerified component",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/platform/user/tests/authorization/components/IdentityNotVerified.unit.spec.jsx",
          "file": "/src/platform/user/tests/authorization/components/IdentityNotVerified.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [
            {
              "title": "\"after each\" hook: cleanup in \"IdentityNotVerified component\"",
              "fullTitle": "IdentityNotVerified component \"after each\" hook: cleanup in \"IdentityNotVerified component\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "mountedContainers.forEach(cleanupAtContainer);",
              "err": {},
              "uuid": "175c6c23-8a98-46bc-843c-e3845e10130b",
              "parentUUID": "6910e7b0-784c-4f86-9977-14baea83c82a",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "renders the correct content for MHV based accounts",
              "fullTitle": "IdentityNotVerified component renders the correct content for MHV based accounts",
              "timedOut": false,
              "duration": 6,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _renderInReduxProvide = (0, _reactTestingLibraryHelpers.renderInReduxProvider)(/*#__PURE__*/_react.default.createElement(_IdentityNotVerified.default, null), {\n    initialState: {\n      user: {\n        profile: {\n          signIn: {\n            serviceName: _constants.CSP_IDS.MHV\n          }\n        }\n      }\n    }\n  }),\n  container = _renderInReduxProvide.container;\nvar signInAlert = container.querySelector('va-alert-sign-in');\n(0, _chai.expect)(signInAlert).to.exist;\n(0, _chai.expect)(signInAlert.getAttribute('variant')).to.eql('signInEither');\n(0, _chai.expect)(container.querySelectorAll('button').length).to.eql(2);",
              "err": {},
              "uuid": "67b49454-a66e-49f7-a7af-d5b765973fba",
              "parentUUID": "6910e7b0-784c-4f86-9977-14baea83c82a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "renders the correct content for ID.me based accounts",
              "fullTitle": "IdentityNotVerified component renders the correct content for ID.me based accounts",
              "timedOut": false,
              "duration": 3,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _renderInReduxProvide2 = (0, _reactTestingLibraryHelpers.renderInReduxProvider)(/*#__PURE__*/_react.default.createElement(_IdentityNotVerified.default, null), {\n    initialState: {\n      user: {\n        profile: {\n          signIn: {\n            serviceName: _constants.CSP_IDS.ID_ME\n          }\n        }\n      }\n    }\n  }),\n  container = _renderInReduxProvide2.container;\nvar signInAlert = container.querySelector('va-alert-sign-in');\n(0, _chai.expect)(signInAlert).to.exist;\n(0, _chai.expect)(signInAlert.getAttribute('variant')).to.eql('verifyIdMe');\n(0, _chai.expect)(container.querySelector('.idme-verify-button')).to.exist;",
              "err": {},
              "uuid": "0b5ca2bc-b8bf-4c66-8dc3-13e7c9edcf1e",
              "parentUUID": "6910e7b0-784c-4f86-9977-14baea83c82a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "renders the correct content for Login.gov based accounts",
              "fullTitle": "IdentityNotVerified component renders the correct content for Login.gov based accounts",
              "timedOut": false,
              "duration": 3,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _renderInReduxProvide3 = (0, _reactTestingLibraryHelpers.renderInReduxProvider)(/*#__PURE__*/_react.default.createElement(_IdentityNotVerified.default, null), {\n    initialState: {\n      user: {\n        profile: {\n          signIn: {\n            serviceName: _constants.CSP_IDS.LOGIN_GOV\n          }\n        }\n      }\n    }\n  }),\n  container = _renderInReduxProvide3.container;\nvar signInAlert = container.querySelector('va-alert-sign-in');\n(0, _chai.expect)(signInAlert).to.exist;\n(0, _chai.expect)(signInAlert.getAttribute('variant')).to.eql('verifyLoginGov');\n(0, _chai.expect)(container.querySelector('.logingov-verify-button')).to.exist;",
              "err": {},
              "uuid": "a2066538-65c0-4e7d-aa69-7d6c027e0d14",
              "parentUUID": "6910e7b0-784c-4f86-9977-14baea83c82a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "67b49454-a66e-49f7-a7af-d5b765973fba",
            "0b5ca2bc-b8bf-4c66-8dc3-13e7c9edcf1e",
            "a2066538-65c0-4e7d-aa69-7d6c027e0d14"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 12,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "1b3b5776-c534-4afe-9934-2158bc2c32a5",
          "title": "<RequiredLoginView>",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/platform/user/tests/authorization/components/RequiredLoginView.unit.spec.jsx",
          "file": "/src/platform/user/tests/authorization/components/RequiredLoginView.unit.spec.jsx",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"<RequiredLoginView>\"",
              "fullTitle": "<RequiredLoginView> \"before each\" hook in \"<RequiredLoginView>\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_localStorage.default.setItem('hasSession', true);\noldWindow = global.window;\nglobal.window = Object.create(global.window);\nObject.assign(global.window, {\n  pathname: '',\n  location: {\n    replace: redirectFunc\n  }\n});",
              "err": {},
              "uuid": "8d46ef13-a52e-4f4a-a354-593d7dab57e3",
              "parentUUID": "1b3b5776-c534-4afe-9934-2158bc2c32a5",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after each\" hook in \"<RequiredLoginView>\"",
              "fullTitle": "<RequiredLoginView> \"after each\" hook in \"<RequiredLoginView>\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "global.window = oldWindow;\n_localStorage.default.clear();\nprops = {};",
              "err": {},
              "uuid": "4207bf77-a230-4f99-9075-60d3801b16a2",
              "parentUUID": "1b3b5776-c534-4afe-9934-2158bc2c32a5",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "should render",
              "fullTitle": "<RequiredLoginView> should render",
              "timedOut": false,
              "duration": 3,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "props = generateProps({\n  user: _objectSpread({}, anonymousUser)\n});\nvar wrapper = (0, _enzyme.mount)(/*#__PURE__*/_react.default.createElement(_RequiredLoginView.RequiredLoginView, props, /*#__PURE__*/_react.default.createElement(TestChildComponent, {\n  name: \"one\"\n})));\n// expect(wrapper.text()).to.contain('Redirecting');\n(0, _chai.expect)(wrapper.find('va-loading-indicator').length).to.equal(1);\nwrapper.unmount();",
              "err": {},
              "uuid": "3281f0c2-df5e-469c-bcfb-d2b810ccc10b",
              "parentUUID": "1b3b5776-c534-4afe-9934-2158bc2c32a5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should render a loading graphic while loading",
              "fullTitle": "<RequiredLoginView> should render a loading graphic while loading",
              "timedOut": false,
              "duration": 3,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "props = generateProps({\n  user: _objectSpread(_objectSpread({}, loa1User), {}, {\n    profile: {\n      loading: true\n    }\n  })\n});\nvar wrapper = (0, _enzyme.mount)(/*#__PURE__*/_react.default.createElement(_RequiredLoginView.RequiredLoginView, props, /*#__PURE__*/_react.default.createElement(TestChildComponent, {\n  name: \"one\"\n}), /*#__PURE__*/_react.default.createElement(TestChildComponent, {\n  name: \"two\"\n}), /*#__PURE__*/_react.default.createElement(TestChildComponent, {\n  name: \"three\"\n})));\n// expect(wrapper.text()).to.contain('Loading your information...');\n(0, _chai.expect)(wrapper.find('va-loading-indicator').length).to.equal(1);\n(0, _chai.expect)(wrapper.find('ProfileErrorMessage').length).to.equal(0);\nwrapper.unmount();",
              "err": {},
              "uuid": "cf9939e0-97ec-44ba-a1db-465a344436f8",
              "parentUUID": "1b3b5776-c534-4afe-9934-2158bc2c32a5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should render ProfileErrorMessage when showProfileErrorMessage is set",
              "fullTitle": "<RequiredLoginView> should render ProfileErrorMessage when showProfileErrorMessage is set",
              "timedOut": false,
              "duration": 3,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "props = generateProps({\n  user: _objectSpread(_objectSpread({}, loa1User), {}, {\n    profile: {\n      errors: true\n    }\n  }),\n  showProfileErrorMessage: true\n});\nvar wrapper = (0, _enzyme.mount)(/*#__PURE__*/_react.default.createElement(_RequiredLoginView.RequiredLoginView, props, /*#__PURE__*/_react.default.createElement(TestChildComponent, {\n  name: \"one\"\n})));\nvar loader = wrapper.find('ProfileErrorMessage');\n(0, _chai.expect)(loader.length).to.equal(1);\nwrapper.unmount();",
              "err": {},
              "uuid": "1ec06074-36a3-4331-8925-c28a0aeebc2c",
              "parentUUID": "1b3b5776-c534-4afe-9934-2158bc2c32a5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should display children when service is available",
              "fullTitle": "<RequiredLoginView> should display children when service is available",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "props = generateProps({\n  user: loa3User\n});\nvar wrapper = (0, _enzyme.mount)(/*#__PURE__*/_react.default.createElement(_RequiredLoginView.RequiredLoginView, props, /*#__PURE__*/_react.default.createElement(TestChildComponent, {\n  name: \"one\"\n}), /*#__PURE__*/_react.default.createElement(TestChildComponent, {\n  name: \"two\"\n}), /*#__PURE__*/_react.default.createElement(TestChildComponent, {\n  name: \"three\"\n})));\n// Child components should not be passed an isDataAvailable prop\nwrapper.children().forEach(function (child) {\n  (0, _chai.expect)(child.props().isDataAvailable).to.be.undefined;\n});\nwrapper.unmount();",
              "err": {},
              "uuid": "363a20fe-bfea-418f-aa27-3c03efe114b0",
              "parentUUID": "1b3b5776-c534-4afe-9934-2158bc2c32a5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should display children and pass prop when service is not available",
              "fullTitle": "<RequiredLoginView> should display children and pass prop when service is not available",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "props = generateProps({\n  user: loa3User,\n  serviceRequired: _backendServices.default.MESSAGING\n});\nvar wrapper = (0, _enzyme.mount)(/*#__PURE__*/_react.default.createElement(_RequiredLoginView.RequiredLoginView, props, /*#__PURE__*/_react.default.createElement(TestChildComponent, {\n  name: \"one\"\n}), /*#__PURE__*/_react.default.createElement(TestChildComponent, {\n  name: \"two\"\n}), /*#__PURE__*/_react.default.createElement(TestChildComponent, {\n  name: \"three\"\n})));\n// Each direct child component should be passed a false isDataAvailable prop\nwrapper.children().forEach(function (child) {\n  (0, _chai.expect)(child.props().isDataAvailable).to.equal(false);\n});\nwrapper.unmount();",
              "err": {},
              "uuid": "9889e822-4159-49af-ac3c-2812506b0975",
              "parentUUID": "1b3b5776-c534-4afe-9934-2158bc2c32a5",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [
            {
              "uuid": "3614124a-8b31-48c4-8778-72b5b31212de",
              "title": "logged in at LOA 1",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/platform/user/tests/authorization/components/RequiredLoginView.unit.spec.jsx",
              "file": "/src/platform/user/tests/authorization/components/RequiredLoginView.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [],
              "suites": [
                {
                  "uuid": "58d05819-6312-4fef-92b4-f75f2ab7c0c2",
                  "title": "needs verification",
                  "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/platform/user/tests/authorization/components/RequiredLoginView.unit.spec.jsx",
                  "file": "/src/platform/user/tests/authorization/components/RequiredLoginView.unit.spec.jsx",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "should prompt for verification",
                      "fullTitle": "<RequiredLoginView> logged in at LOA 1 needs verification should prompt for verification",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "slow",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "props = generateProps({\n  user: loa1User\n});\nvar wrapper = (0, _enzyme.mount)(/*#__PURE__*/_react.default.createElement(_RequiredLoginView.RequiredLoginView, props, /*#__PURE__*/_react.default.createElement(TestChildComponent, {\n  name: \"three\"\n})));\n(0, _chai.expect)(redirectFunc.calledWith(_sinon.default.match('/verify'))).to.be.true;\nwrapper.unmount();",
                      "err": {},
                      "uuid": "10347c97-05b8-45de-8b07-b3fe5c705615",
                      "parentUUID": "58d05819-6312-4fef-92b4-f75f2ab7c0c2",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "10347c97-05b8-45de-8b07-b3fe5c705615"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "62a5571d-eb75-4549-bea2-851f2e9173e2",
                  "title": "does not need verification",
                  "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/platform/user/tests/authorization/components/RequiredLoginView.unit.spec.jsx",
                  "file": "/src/platform/user/tests/authorization/components/RequiredLoginView.unit.spec.jsx",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "should display children elements",
                      "fullTitle": "<RequiredLoginView> logged in at LOA 1 does not need verification should display children elements",
                      "timedOut": false,
                      "duration": 2,
                      "state": "passed",
                      "speed": "slow",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "props = generateProps({\n  verify: false,\n  serviceRequired: _backendServices.default.USER_PROFILE\n});\nvar wrapper = (0, _enzyme.mount)(/*#__PURE__*/_react.default.createElement(_RequiredLoginView.RequiredLoginView, props, /*#__PURE__*/_react.default.createElement(TestChildComponent, {\n  name: \"three\"\n})));\n(0, _chai.expect)(wrapper.containsMatchingElement(/*#__PURE__*/_react.default.createElement(TestChildComponent, {\n  name: \"three\"\n})));\n(0, _chai.expect)(wrapper.text()).to.contain('Child Component three');\nwrapper.unmount();",
                      "err": {},
                      "uuid": "feb1d07a-21fe-4af0-9d56-60f5c6128b95",
                      "parentUUID": "62a5571d-eb75-4549-bea2-851f2e9173e2",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "feb1d07a-21fe-4af0-9d56-60f5c6128b95"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 2,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                }
              ],
              "passes": [],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "a1442457-2e06-4c44-aae5-c92c8313e079",
              "title": "logged in at LOA 3",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/platform/user/tests/authorization/components/RequiredLoginView.unit.spec.jsx",
              "file": "/src/platform/user/tests/authorization/components/RequiredLoginView.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should display children elements",
                  "fullTitle": "<RequiredLoginView> logged in at LOA 3 should display children elements",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "props = generateProps({\n  user: loa3User\n});\nvar wrapper = (0, _enzyme.mount)(/*#__PURE__*/_react.default.createElement(_RequiredLoginView.RequiredLoginView, props, /*#__PURE__*/_react.default.createElement(TestChildComponent, {\n  name: \"One\"\n})));\n(0, _chai.expect)(wrapper.text()).to.include('Child Component One');\n(0, _chai.expect)(wrapper.containsMatchingElement(/*#__PURE__*/_react.default.createElement(TestChildComponent, {\n  name: \"One\"\n}))).to.be.true;\n(0, _chai.expect)(wrapper.text()).to.contain('Child Component One');\nwrapper.unmount();",
                  "err": {},
                  "uuid": "7b83cd55-ac1d-4b03-8310-7c3b40cf2790",
                  "parentUUID": "a1442457-2e06-4c44-aae5-c92c8313e079",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [
                {
                  "uuid": "3d9531d3-9ae2-4a5c-b9c8-b6cbec951b20",
                  "title": "user profile with SERVER_ERROR",
                  "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/platform/user/tests/authorization/components/RequiredLoginView.unit.spec.jsx",
                  "file": "/src/platform/user/tests/authorization/components/RequiredLoginView.unit.spec.jsx",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "should display server error message",
                      "fullTitle": "<RequiredLoginView> logged in at LOA 3 user profile with SERVER_ERROR should display server error message",
                      "timedOut": false,
                      "duration": 2,
                      "state": "passed",
                      "speed": "slow",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "props = generateProps({\n  user: _objectSpread(_objectSpread({}, loa3User), {}, {\n    profile: _objectSpread(_objectSpread({}, loa3User.profile), {}, {\n      status: 'SERVER_ERROR'\n    })\n  })\n});\nvar wrapper = (0, _enzyme.mount)(/*#__PURE__*/_react.default.createElement(_RequiredLoginView.RequiredLoginView, props, /*#__PURE__*/_react.default.createElement(TestChildComponent, {\n  name: \"One\"\n})));\n(0, _chai.expect)(wrapper.text()).to.contain('Sorry, our system is temporarily down while we fix a few things');\nwrapper.unmount();",
                      "err": {},
                      "uuid": "54760397-b2f1-4845-8ab5-80562c707033",
                      "parentUUID": "3d9531d3-9ae2-4a5c-b9c8-b6cbec951b20",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "54760397-b2f1-4845-8ab5-80562c707033"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 2,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "6841c358-0661-422a-9e1b-c1d23b996314",
                  "title": "user profile NOT_FOUND",
                  "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/platform/user/tests/authorization/components/RequiredLoginView.unit.spec.jsx",
                  "file": "/src/platform/user/tests/authorization/components/RequiredLoginView.unit.spec.jsx",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "should display not found message",
                      "fullTitle": "<RequiredLoginView> logged in at LOA 3 user profile NOT_FOUND should display not found message",
                      "timedOut": false,
                      "duration": 3,
                      "state": "passed",
                      "speed": "slow",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "props = generateProps({\n  user: _objectSpread(_objectSpread({}, loa3User), {}, {\n    profile: _objectSpread(_objectSpread({}, loa3User.profile), {}, {\n      status: 'NOT_FOUND'\n    })\n  })\n});\nvar wrapper = (0, _enzyme.mount)(/*#__PURE__*/_react.default.createElement(_RequiredLoginView.RequiredLoginView, props, /*#__PURE__*/_react.default.createElement(TestChildComponent, {\n  name: \"One\"\n})));\n(0, _chai.expect)(wrapper.text()).to.contain('We couldn’t find your records with that information.');\nwrapper.unmount();",
                      "err": {},
                      "uuid": "2f3c9450-6204-401c-8dac-9f240f2b9f00",
                      "parentUUID": "6841c358-0661-422a-9e1b-c1d23b996314",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "2f3c9450-6204-401c-8dac-9f240f2b9f00"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 3,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                }
              ],
              "passes": [
                "7b83cd55-ac1d-4b03-8310-7c3b40cf2790"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "f3b96d01-15fc-44a8-8e70-307c37312192",
              "title": "not logged in",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/platform/user/tests/authorization/components/RequiredLoginView.unit.spec.jsx",
              "file": "/src/platform/user/tests/authorization/components/RequiredLoginView.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return user to '/'",
                  "fullTitle": "<RequiredLoginView> not logged in should return user to '/'",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "props = generateProps({\n  user: anonymousUser\n});\nvar wrapper = (0, _enzyme.mount)(/*#__PURE__*/_react.default.createElement(_RequiredLoginView.RequiredLoginView, props, /*#__PURE__*/_react.default.createElement(TestChildComponent, {\n  name: \"three\"\n})));\n(0, _chai.expect)(redirectFunc.calledWith(_sinon.default.match('/'))).to.be.true;\nwrapper.unmount();",
                  "err": {},
                  "uuid": "821890ce-d3f3-472a-8ba8-9a1f7a62fad1",
                  "parentUUID": "f3b96d01-15fc-44a8-8e70-307c37312192",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should prompt user to login",
                  "fullTitle": "<RequiredLoginView> not logged in should prompt user to login",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "props = generateProps({\n  user: anonymousUser\n});\nvar wrapper = (0, _enzyme.mount)(/*#__PURE__*/_react.default.createElement(_RequiredLoginView.RequiredLoginView, props, /*#__PURE__*/_react.default.createElement(TestChildComponent, {\n  name: \"three\"\n})));\n// expect(wrapper.text()).to.include('Redirecting to login...');\\\n(0, _chai.expect)(wrapper.find('va-loading-indicator').length).to.equal(1);\nwrapper.unmount();",
                  "err": {},
                  "uuid": "fe579608-5e92-4c8f-a62f-731e28ed4105",
                  "parentUUID": "f3b96d01-15fc-44a8-8e70-307c37312192",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "821890ce-d3f3-472a-8ba8-9a1f7a62fad1",
                "fe579608-5e92-4c8f-a62f-731e28ed4105"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 3,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            }
          ],
          "passes": [
            "3281f0c2-df5e-469c-bcfb-d2b810ccc10b",
            "cf9939e0-97ec-44ba-a1db-465a344436f8",
            "1ec06074-36a3-4331-8925-c28a0aeebc2c",
            "363a20fe-bfea-418f-aa27-3c03efe114b0",
            "9889e822-4159-49af-ac3c-2812506b0975"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 12,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "6ad54142-9c0b-458f-83b3-abda051dcc08",
          "title": "VerifyAlert component",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/platform/user/tests/authorization/components/VerifyAlert.unit.spec.jsx",
          "file": "/src/platform/user/tests/authorization/components/VerifyAlert.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should match the mhv to the proper variant",
              "fullTitle": "VerifyAlert component should match the mhv to the proper variant",
              "timedOut": false,
              "duration": 4,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _renderInReduxProvide = (0, _reactTestingLibraryHelpers.renderInReduxProvider)(/*#__PURE__*/_react.default.createElement(_VerifyAlert.default, null), {\n    initialState: {\n      user: {\n        profile: {\n          signIn: {\n            serviceName: csp\n          }\n        }\n      }\n    }\n  }),\n  container = _renderInReduxProvide.container;\nvar signInAlert = container.querySelector('va-alert-sign-in');\n(0, _chai.expect)(signInAlert).to.exist;\n(0, _chai.expect)(signInAlert.getAttribute('variant')).to.eql(variant);",
              "err": {},
              "uuid": "03cee486-b7a7-4722-8a73-6ee64b62f7a3",
              "parentUUID": "6ad54142-9c0b-458f-83b3-abda051dcc08",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should match the logingov to the proper variant",
              "fullTitle": "VerifyAlert component should match the logingov to the proper variant",
              "timedOut": false,
              "duration": 3,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _renderInReduxProvide = (0, _reactTestingLibraryHelpers.renderInReduxProvider)(/*#__PURE__*/_react.default.createElement(_VerifyAlert.default, null), {\n    initialState: {\n      user: {\n        profile: {\n          signIn: {\n            serviceName: csp\n          }\n        }\n      }\n    }\n  }),\n  container = _renderInReduxProvide.container;\nvar signInAlert = container.querySelector('va-alert-sign-in');\n(0, _chai.expect)(signInAlert).to.exist;\n(0, _chai.expect)(signInAlert.getAttribute('variant')).to.eql(variant);",
              "err": {},
              "uuid": "3742ecc7-543a-4b40-99dc-b50e5a41ab3e",
              "parentUUID": "6ad54142-9c0b-458f-83b3-abda051dcc08",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should match the idme to the proper variant",
              "fullTitle": "VerifyAlert component should match the idme to the proper variant",
              "timedOut": false,
              "duration": 3,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _renderInReduxProvide = (0, _reactTestingLibraryHelpers.renderInReduxProvider)(/*#__PURE__*/_react.default.createElement(_VerifyAlert.default, null), {\n    initialState: {\n      user: {\n        profile: {\n          signIn: {\n            serviceName: csp\n          }\n        }\n      }\n    }\n  }),\n  container = _renderInReduxProvide.container;\nvar signInAlert = container.querySelector('va-alert-sign-in');\n(0, _chai.expect)(signInAlert).to.exist;\n(0, _chai.expect)(signInAlert.getAttribute('variant')).to.eql(variant);",
              "err": {},
              "uuid": "2ef6968f-bdca-492f-bf3b-24e3c243b65d",
              "parentUUID": "6ad54142-9c0b-458f-83b3-abda051dcc08",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return null for DS Logon",
              "fullTitle": "VerifyAlert component should return null for DS Logon",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _renderInReduxProvide2 = (0, _reactTestingLibraryHelpers.renderInReduxProvider)(/*#__PURE__*/_react.default.createElement(_VerifyAlert.default, null), {\n    initialState: {\n      user: {\n        profile: {\n          signIn: {\n            serviceName: 'dslogon'\n          }\n        }\n      }\n    }\n  }),\n  container = _renderInReduxProvide2.container;\n(0, _chai.expect)(container === null || container === void 0 ? void 0 : container.querySelector('va-alert-sign-in')).to.not.exist;",
              "err": {},
              "uuid": "caf7c0f1-2850-4cff-a5d3-37106576633d",
              "parentUUID": "6ad54142-9c0b-458f-83b3-abda051dcc08",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "03cee486-b7a7-4722-8a73-6ee64b62f7a3",
            "3742ecc7-543a-4b40-99dc-b50e5a41ab3e",
            "2ef6968f-bdca-492f-bf3b-24e3c243b65d",
            "caf7c0f1-2850-4cff-a5d3-37106576633d"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 11,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "c3a38008-2337-45d7-af97-07dfd6ecab7b",
          "title": "<MHVApp>",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/platform/user/tests/authorization/containers/MHVApp.unit.spec.jsx",
          "file": "/src/platform/user/tests/authorization/containers/MHVApp.unit.spec.jsx",
          "beforeHooks": [
            {
              "title": "\"before each\" hook: setup in \"<MHVApp>\"",
              "fullTitle": "<MHVApp> \"before each\" hook: setup in \"<MHVApp>\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "oldLocation = global.window.location;\ndelete global.window.location;\nglobal.window.location = {\n  replace: _sinon.default.spy()\n};\nprops.fetchMHVAccount.reset();",
              "err": {},
              "uuid": "e6a54f55-42a0-4b7f-8f36-1ae4d50eced9",
              "parentUUID": "c3a38008-2337-45d7-af97-07dfd6ecab7b",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after each\" hook in \"<MHVApp>\"",
              "fullTitle": "<MHVApp> \"after each\" hook in \"<MHVApp>\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "global.window.location = oldLocation;",
              "err": {},
              "uuid": "95413d04-30eb-4747-b644-d9e05ad97feb",
              "parentUUID": "c3a38008-2337-45d7-af97-07dfd6ecab7b",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "should show a loading indicator when fetching an account",
              "fullTitle": "<MHVApp> should show a loading indicator when fetching an account",
              "timedOut": false,
              "duration": 3,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var newProps = (0, _set.default)('mhvAccount.loading', true, props);\nvar wrapper = (0, _enzyme.shallow)(/*#__PURE__*/_react.default.createElement(_MHVApp.MHVApp, newProps), {\n  context: context\n});\n(0, _chai.expect)(wrapper.find('va-loading-indicator').exists()).to.be.true;\nwrapper.unmount();",
              "err": {},
              "uuid": "75e21467-b7a1-4c98-8c18-1924f0ea7177",
              "parentUUID": "c3a38008-2337-45d7-af97-07dfd6ecab7b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should redirect if the user needs to accepts T&C",
              "fullTitle": "<MHVApp> should redirect if the user needs to accepts T&C",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var wrapper = (0, _enzyme.shallow)(/*#__PURE__*/_react.default.createElement(_MHVApp.MHVApp, props), {\n  context: context\n});\nvar mhvAccount = (0, _set.default)('accountState', 'needs_terms_acceptance', props.mhvAccount);\nwrapper.setProps({\n  mhvAccount: mhvAccount\n});\n(0, _chai.expect)(global.window.location.replace.calledOnce).to.be.true;\nwrapper.unmount();",
              "err": {},
              "uuid": "0c1d5fad-98fb-48fa-b4be-bfc4580b98c9",
              "parentUUID": "c3a38008-2337-45d7-af97-07dfd6ecab7b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should show a success message after the user accepts T&C and gets upgraded",
              "fullTitle": "<MHVApp> should show a success message after the user accepts T&C and gets upgraded",
              "timedOut": false,
              "duration": 4,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var newProps = (0, _merge2.default)({}, props, {\n  mhvAccount: _objectSpread(_objectSpread({}, props.mhvAccount), {}, {\n    accountState: 'upgraded'\n  }),\n  location: _objectSpread(_objectSpread({}, props.location), {}, {\n    query: {\n      tc_accepted: true\n    }\n  }),\n  // eslint-disable-line camelcase\n  availableServices: ['rx']\n});\nvar wrapper = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_MHVApp.MHVApp, newProps), {\n  context: context\n});\nexpectAlert(wrapper, 'success', 'Thank you for accepting the Terms and Conditions for using VA.gov health tools');\nwrapper.unmount();",
              "err": {},
              "uuid": "b9ded885-379b-4382-81c7-0c27d5e810f4",
              "parentUUID": "c3a38008-2337-45d7-af97-07dfd6ecab7b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should show MHV access error if nothing is loading or processing",
              "fullTitle": "<MHVApp> should show MHV access error if nothing is loading or processing",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var wrapper = (0, _enzyme.shallow)(/*#__PURE__*/_react.default.createElement(_MHVApp.MHVApp, props), {\n  context: context\n});\n(0, _chai.expect)(wrapper.find('#mhv-access-error').exists()).to.be.true;\nwrapper.unmount();",
              "err": {},
              "uuid": "85eded6e-b9d6-4cb1-a923-7849fa153b72",
              "parentUUID": "c3a38008-2337-45d7-af97-07dfd6ecab7b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should show MHV access error if user has an account but not the required service",
              "fullTitle": "<MHVApp> should show MHV access error if user has an account but not the required service",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var newProps = (0, _set.default)('mhvAccount.accountState', 'existing', props);\nvar wrapper = (0, _enzyme.shallow)(/*#__PURE__*/_react.default.createElement(_MHVApp.MHVApp, newProps), {\n  context: context\n});\n(0, _chai.expect)(wrapper.find('#mhv-access-error').exists()).to.be.true;\nwrapper.unmount();",
              "err": {},
              "uuid": "60d1c3db-eb6b-444b-acbf-157eaef30167",
              "parentUUID": "c3a38008-2337-45d7-af97-07dfd6ecab7b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should render children if user has the required service as an existing user",
              "fullTitle": "<MHVApp> should render children if user has the required service as an existing user",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var newProps = (0, _merge2.default)({}, props, {\n  mhvAccount: {\n    accountState: 'existing'\n  },\n  availableServices: ['rx']\n});\nvar wrapper = (0, _enzyme.shallow)(/*#__PURE__*/_react.default.createElement(_MHVApp.MHVApp, newProps, /*#__PURE__*/_react.default.createElement(\"div\", {\n  id: \"test\"\n})), {\n  context: context\n});\n(0, _chai.expect)(wrapper.find('#test').exists()).to.be.true;\nwrapper.unmount();",
              "err": {},
              "uuid": "411dfef2-7ab1-4b37-9092-0d583aa6b168",
              "parentUUID": "c3a38008-2337-45d7-af97-07dfd6ecab7b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should render children if user has the required service as a registered user",
              "fullTitle": "<MHVApp> should render children if user has the required service as a registered user",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var newProps = (0, _merge2.default)({}, props, {\n  mhvAccount: {\n    accountState: 'registered'\n  },\n  availableServices: ['rx']\n});\nvar wrapper = (0, _enzyme.shallow)(/*#__PURE__*/_react.default.createElement(_MHVApp.MHVApp, newProps, /*#__PURE__*/_react.default.createElement(\"div\", {\n  id: \"test\"\n})), {\n  context: context\n});\n(0, _chai.expect)(wrapper.find('#test').exists()).to.be.true;\nwrapper.unmount();",
              "err": {},
              "uuid": "58bd48df-25ac-4ff1-9f61-4acba8dcc6a8",
              "parentUUID": "c3a38008-2337-45d7-af97-07dfd6ecab7b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should show placeholder account error",
              "fullTitle": "<MHVApp> should show placeholder account error",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var errors = [{\n  title: 'Account error',\n  detail: 'There was a problem with your account',\n  code: '500',\n  status: '500'\n}];\nvar newProps = (0, _set.default)('mhvAccount.errors', errors, props);\nvar wrapper = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_MHVApp.MHVApp, newProps), {\n  context: context\n});\nexpectAlert(wrapper, 'error', 'We’re not able to process your My HealtheVet account');\nwrapper.unmount();",
              "err": {},
              "uuid": "2ff5910c-9edf-4141-a96d-119a4266054f",
              "parentUUID": "c3a38008-2337-45d7-af97-07dfd6ecab7b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should show error if unable to determine MHV account level",
              "fullTitle": "<MHVApp> should show error if unable to determine MHV account level",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var newProps = (0, _set.default)('mhvAccount.accountLevel', 'Unknown', props);\nvar wrapper = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_MHVApp.MHVApp, newProps), {\n  context: context\n});\nexpectAlert(wrapper, 'error', 'We can’t confirm your My HealtheVet account level');\nwrapper.unmount();",
              "err": {},
              "uuid": "23b94ee2-6d2b-4480-819a-15a3a1c5ebdf",
              "parentUUID": "c3a38008-2337-45d7-af97-07dfd6ecab7b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should show error if failed to register MHV account",
              "fullTitle": "<MHVApp> should show error if failed to register MHV account",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var newProps = (0, _set.default)('mhvAccount.accountState', 'register_failed', props);\nvar wrapper = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_MHVApp.MHVApp, newProps), {\n  context: context\n});\nexpectAlert(wrapper, 'error', 'We can’t give you access to VA.gov health tools right now');\nwrapper.unmount();",
              "err": {},
              "uuid": "fba8b251-2cdf-45f0-8f41-95bfdf56c570",
              "parentUUID": "c3a38008-2337-45d7-af97-07dfd6ecab7b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should show error if failed to upgrade MHV account",
              "fullTitle": "<MHVApp> should show error if failed to upgrade MHV account",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var newProps = (0, _set.default)('mhvAccount.accountState', 'upgrade_failed', props);\nvar wrapper = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_MHVApp.MHVApp, newProps), {\n  context: context\n});\nexpectAlert(wrapper, 'error', 'We can’t give you access to VA.gov health tools right now');\nwrapper.unmount();",
              "err": {},
              "uuid": "6ebb290e-6bfe-43b9-869c-35e1099a7192",
              "parentUUID": "c3a38008-2337-45d7-af97-07dfd6ecab7b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should show error if the user has mismatched SSNs",
              "fullTitle": "<MHVApp> should show error if the user has mismatched SSNs",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var newProps = (0, _set.default)('mhvAccount.accountState', 'needs_ssn_resolution', props);\nvar wrapper = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_MHVApp.MHVApp, newProps), {\n  context: context\n});\nexpectAlert(wrapper, 'error', 'We can’t give you access to the VA.gov health tools');\nwrapper.unmount();",
              "err": {},
              "uuid": "e5db6fd8-cc54-44e4-b508-654cd86a009e",
              "parentUUID": "c3a38008-2337-45d7-af97-07dfd6ecab7b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should show error if the user is not a VA patient",
              "fullTitle": "<MHVApp> should show error if the user is not a VA patient",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var newProps = (0, _set.default)('mhvAccount.accountState', 'needs_va_patient', props);\nvar wrapper = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_MHVApp.MHVApp, newProps), {\n  context: context\n});\nexpectAlert(wrapper, 'error', 'We can’t give you access to the VA.gov health tools');\nwrapper.unmount();",
              "err": {},
              "uuid": "9f40fd4a-c95e-4601-a2a9-c1ad34cb4735",
              "parentUUID": "c3a38008-2337-45d7-af97-07dfd6ecab7b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should show error if the user has a disabled MHV account",
              "fullTitle": "<MHVApp> should show error if the user has a disabled MHV account",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var newProps = (0, _set.default)('mhvAccount.accountState', 'has_deactivated_mhv_ids', props);\nvar wrapper = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_MHVApp.MHVApp, newProps), {\n  context: context\n});\nexpectAlert(wrapper, 'error', 'It looks like you’ve disabled your My HealtheVet account');\nwrapper.unmount();",
              "err": {},
              "uuid": "b0972264-5c07-4c7c-a1dd-d462dffda18d",
              "parentUUID": "c3a38008-2337-45d7-af97-07dfd6ecab7b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should show error if the user has multiple active MHV accounts",
              "fullTitle": "<MHVApp> should show error if the user has multiple active MHV accounts",
              "timedOut": false,
              "duration": 3,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var newProps = (0, _set.default)('mhvAccount.accountState', 'has_multiple_active_mhv_ids', props);\nvar wrapper = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_MHVApp.MHVApp, newProps), {\n  context: context\n});\nexpectAlert(wrapper, 'error', 'It looks like you have more than one My HealtheVet account');\nwrapper.unmount();",
              "err": {},
              "uuid": "e97009ec-d554-4a4b-91e2-1fd065f37ac8",
              "parentUUID": "c3a38008-2337-45d7-af97-07dfd6ecab7b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "75e21467-b7a1-4c98-8c18-1924f0ea7177",
            "0c1d5fad-98fb-48fa-b4be-bfc4580b98c9",
            "b9ded885-379b-4382-81c7-0c27d5e810f4",
            "85eded6e-b9d6-4cb1-a923-7849fa153b72",
            "60d1c3db-eb6b-444b-acbf-157eaef30167",
            "411dfef2-7ab1-4b37-9092-0d583aa6b168",
            "58bd48df-25ac-4ff1-9f61-4acba8dcc6a8",
            "2ff5910c-9edf-4141-a96d-119a4266054f",
            "23b94ee2-6d2b-4480-819a-15a3a1c5ebdf",
            "fba8b251-2cdf-45f0-8f41-95bfdf56c570",
            "6ebb290e-6bfe-43b9-869c-35e1099a7192",
            "e5db6fd8-cc54-44e4-b508-654cd86a009e",
            "9f40fd4a-c95e-4601-a2a9-c1ad34cb4735",
            "b0972264-5c07-4c7c-a1dd-d462dffda18d",
            "e97009ec-d554-4a4b-91e2-1fd065f37ac8"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 28,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "65818e03-3fb7-4fa9-b6a4-5fe999260d72",
          "title": "<RequiredTermsAcceptanceView>",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/platform/user/tests/authorization/containers/RequiredTermsAcceptance.unit.spec.jsx",
          "file": "/src/platform/user/tests/authorization/containers/RequiredTermsAcceptance.unit.spec.jsx",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"<RequiredTermsAcceptanceView>\"",
              "fullTitle": "<RequiredTermsAcceptanceView> \"before all\" hook in \"<RequiredTermsAcceptanceView>\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "window.dataLayer = [];",
              "err": {},
              "uuid": "23ec4600-8135-4db8-b34f-f7fbd0bb58f1",
              "parentUUID": "65818e03-3fb7-4fa9-b6a4-5fe999260d72",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": "should call initial actions properly",
              "fullTitle": "<RequiredTermsAcceptanceView> should call initial actions properly",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "window.scrollTo = function () {};\nvar tree = _skinDeep.default.shallowRender(/*#__PURE__*/_react.default.createElement(_RequiredTermsAcceptanceView.RequiredTermsAcceptanceView, defaultProps));\ntree.getMountedInstance().componentDidMount();\n(0, _chai.expect)(defaultProps.fetchLatestTerms.called).to.be.true;",
              "err": {},
              "uuid": "5d96f952-b224-4589-92e6-263888d410c6",
              "parentUUID": "65818e03-3fb7-4fa9-b6a4-5fe999260d72",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should properly render loading state",
              "fullTitle": "<RequiredTermsAcceptanceView> should properly render loading state",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var props = _objectSpread(_objectSpread({}, defaultProps), {}, {\n  terms: {\n    loading: true\n  }\n});\nvar tree = _skinDeep.default.shallowRender(/*#__PURE__*/_react.default.createElement(_RequiredTermsAcceptanceView.RequiredTermsAcceptanceView, props));\n(0, _chai.expect)(tree.subTree('va-loading-indicator')).to.be.ok;",
              "err": {},
              "uuid": "1e8a6171-2b07-41dc-b69b-be0e20f75cc4",
              "parentUUID": "65818e03-3fb7-4fa9-b6a4-5fe999260d72",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should properly render children if terms accepted",
              "fullTitle": "<RequiredTermsAcceptanceView> should properly render children if terms accepted",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var props = _objectSpread(_objectSpread({}, defaultProps), {}, {\n  termsNeeded: false,\n  terms: {\n    acceptance: true\n  }\n});\nvar tree = _skinDeep.default.shallowRender(/*#__PURE__*/_react.default.createElement(_RequiredTermsAcceptanceView.RequiredTermsAcceptanceView, props));\n(0, _chai.expect)(tree.toString()).to.eq('<div>\\n\\n</div>');",
              "err": {},
              "uuid": "0f7e5137-15c0-4c72-b1c3-db5d9bd342ac",
              "parentUUID": "65818e03-3fb7-4fa9-b6a4-5fe999260d72",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should properly render prompt if terms not accepted",
              "fullTitle": "<RequiredTermsAcceptanceView> should properly render prompt if terms not accepted",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var tree = _skinDeep.default.shallowRender(/*#__PURE__*/_react.default.createElement(_RequiredTermsAcceptanceView.RequiredTermsAcceptanceView, defaultProps));\n(0, _chai.expect)(tree.subTree('AcceptTermsPrompt')).to.be.ok;",
              "err": {},
              "uuid": "65fc5ae7-c7a8-4c1a-9a78-3bcb1267609e",
              "parentUUID": "65818e03-3fb7-4fa9-b6a4-5fe999260d72",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "5d96f952-b224-4589-92e6-263888d410c6",
            "1e8a6171-2b07-41dc-b69b-be0e20f75cc4",
            "0f7e5137-15c0-4c72-b1c3-db5d9bd342ac",
            "65fc5ae7-c7a8-4c1a-9a78-3bcb1267609e"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "6b54b82a-8a0b-4909-b826-4f7477aab596",
          "title": "cerner-dsot user selectors",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/platform/user/tests/cerner-dsot/selectors.unit.spec.js",
          "file": "/src/platform/user/tests/cerner-dsot/selectors.unit.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "6f856816-b7a6-412e-8ffa-3a58cf09c4ec",
              "title": "selectPatientFacilities",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/platform/user/tests/cerner-dsot/selectors.unit.spec.js",
              "file": "/src/platform/user/tests/cerner-dsot/selectors.unit.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "returns null when there are no facilities on the profile",
                  "fullTitle": "cerner-dsot user selectors selectPatientFacilities returns null when there are no facilities on the profile",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var state = {\n  user: {\n    profile: {}\n  }\n};\n(0, _chai.expect)(selectors.selectPatientFacilities(state)).to.be.null;",
                  "err": {},
                  "uuid": "10af665a-17f2-4a7e-b33e-5522b3e2c38e",
                  "parentUUID": "6f856816-b7a6-412e-8ffa-3a58cf09c4ec",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "pulls out the state.profile.facilities array",
                  "fullTitle": "cerner-dsot user selectors selectPatientFacilities pulls out the state.profile.facilities array",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var state = {\n  user: {\n    profile: {\n      facilities: [{\n        facilityId: '983',\n        isCerner: false\n      }, {\n        facilityId: '984',\n        isCerner: false\n      }]\n    }\n  }\n};\n(0, _chai.expect)(selectors.selectPatientFacilities(state)).to.deep.equal(state.user.profile.facilities);",
                  "err": {},
                  "uuid": "467245ac-3c48-4bfb-a829-21b1269e9e5f",
                  "parentUUID": "6f856816-b7a6-412e-8ffa-3a58cf09c4ec",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "pulls out state.profile.facilities and marks all isCerner:false when Cerner facilities not set on state",
                  "fullTitle": "cerner-dsot user selectors selectPatientFacilities pulls out state.profile.facilities and marks all isCerner:false when Cerner facilities not set on state",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var state = {\n  user: {\n    profile: {\n      facilities: [{\n        facilityId: '984'\n      }, {\n        facilityId: '668'\n      }, {\n        facilityId: '757'\n      }]\n    }\n  }\n};\nvar expected = [{\n  facilityId: '984',\n  isCerner: false\n}, {\n  facilityId: '668',\n  isCerner: false\n}, {\n  facilityId: '757',\n  isCerner: false\n}];\n(0, _chai.expect)(selectors.selectPatientFacilities(state)).to.deep.equal(expected);",
                  "err": {},
                  "uuid": "64749999-4886-46ab-8adb-27c26e6ef836",
                  "parentUUID": "6f856816-b7a6-412e-8ffa-3a58cf09c4ec",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "pulls out state.profile.facilities and marks isCerner according to Cerner facilities data set on state",
                  "fullTitle": "cerner-dsot user selectors selectPatientFacilities pulls out state.profile.facilities and marks isCerner according to Cerner facilities data set on state",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var state = {\n  user: {\n    profile: {\n      facilities: [{\n        facilityId: '984'\n      }, {\n        facilityId: '687'\n      }, {\n        facilityId: '757'\n      }]\n    }\n  },\n  drupalStaticData: drupalStaticData\n};\nvar expected = [{\n  facilityId: '984',\n  isCerner: false\n}, {\n  facilityId: '687',\n  isCerner: true,\n  usesCernerAppointments: true,\n  usesCernerMedicalRecords: true,\n  usesCernerMessaging: true,\n  usesCernerRx: true,\n  usesCernerTestResults: true\n}, {\n  facilityId: '757',\n  isCerner: true,\n  usesCernerAppointments: true,\n  usesCernerMedicalRecords: true,\n  usesCernerMessaging: true,\n  usesCernerRx: true,\n  usesCernerTestResults: true\n}];\n(0, _chai.expect)(selectors.selectPatientFacilities(state)).to.deep.equal(expected);",
                  "err": {},
                  "uuid": "b3b0064d-be20-47e4-a019-dd44e00c056f",
                  "parentUUID": "6f856816-b7a6-412e-8ffa-3a58cf09c4ec",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "10af665a-17f2-4a7e-b33e-5522b3e2c38e",
                "467245ac-3c48-4bfb-a829-21b1269e9e5f",
                "64749999-4886-46ab-8adb-27c26e6ef836",
                "b3b0064d-be20-47e4-a019-dd44e00c056f"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 3,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "4dbac926-8600-4a3f-98f3-e6119c2488ad",
              "title": "selectPatientCernerFacilities",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/platform/user/tests/cerner-dsot/selectors.unit.spec.js",
              "file": "/src/platform/user/tests/cerner-dsot/selectors.unit.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "returns empty array when Cerner facilities not set on state",
                  "fullTitle": "cerner-dsot user selectors selectPatientCernerFacilities returns empty array when Cerner facilities not set on state",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var state = {\n  user: {\n    profile: {\n      facilities: [{\n        facilityId: '984'\n      }, {\n        facilityId: '687'\n      }, {\n        facilityId: '757'\n      }]\n    }\n  }\n};\n(0, _chai.expect)(selectors.selectPatientCernerFacilities(state)).to.deep.equal([]);",
                  "err": {},
                  "uuid": "f540a57b-5d68-48bd-9557-b6eed97e7c0a",
                  "parentUUID": "4dbac926-8600-4a3f-98f3-e6119c2488ad",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "pulls out patient facilities that are indicated as Cerner facilities",
                  "fullTitle": "cerner-dsot user selectors selectPatientCernerFacilities pulls out patient facilities that are indicated as Cerner facilities",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var state = {\n  user: {\n    profile: {\n      facilities: [{\n        facilityId: '984'\n      }, {\n        facilityId: '687'\n      }, {\n        facilityId: '757'\n      }]\n    }\n  },\n  drupalStaticData: drupalStaticData\n};\nvar expected = [{\n  facilityId: '687',\n  isCerner: true,\n  usesCernerAppointments: true,\n  usesCernerMedicalRecords: true,\n  usesCernerMessaging: true,\n  usesCernerRx: true,\n  usesCernerTestResults: true\n}, {\n  facilityId: '757',\n  isCerner: true,\n  usesCernerAppointments: true,\n  usesCernerMedicalRecords: true,\n  usesCernerMessaging: true,\n  usesCernerRx: true,\n  usesCernerTestResults: true\n}];\n(0, _chai.expect)(selectors.selectPatientCernerFacilities(state)).to.deep.equal(expected);",
                  "err": {},
                  "uuid": "3789dce7-760a-49d7-830d-97a69509107c",
                  "parentUUID": "4dbac926-8600-4a3f-98f3-e6119c2488ad",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "f540a57b-5d68-48bd-9557-b6eed97e7c0a",
                "3789dce7-760a-49d7-830d-97a69509107c"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "2e9585b4-4309-431a-8eba-052e956d6698",
              "title": "selectIsCernerOnlyPatient",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/platform/user/tests/cerner-dsot/selectors.unit.spec.js",
              "file": "/src/platform/user/tests/cerner-dsot/selectors.unit.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "returns true when all patient facilities are indicated as Cerner facilities",
                  "fullTitle": "cerner-dsot user selectors selectIsCernerOnlyPatient returns true when all patient facilities are indicated as Cerner facilities",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var state = {\n  user: {\n    profile: {\n      facilities: [{\n        facilityId: '757'\n      }, {\n        facilityId: '687'\n      }]\n    }\n  },\n  drupalStaticData: drupalStaticData\n};\n(0, _chai.expect)(selectors.selectIsCernerOnlyPatient(state)).to.be.true;",
                  "err": {},
                  "uuid": "fc885cb7-9834-4d27-909c-1aaf71906a2f",
                  "parentUUID": "2e9585b4-4309-431a-8eba-052e956d6698",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "returns false when at least one patient facility is not a Cerner facility",
                  "fullTitle": "cerner-dsot user selectors selectIsCernerOnlyPatient returns false when at least one patient facility is not a Cerner facility",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var state = {\n  user: {\n    profile: {\n      facilities: [{\n        facilityId: '757'\n      }, {\n        facilityId: '123'\n      }]\n    }\n  },\n  drupalStaticData: drupalStaticData\n};\n(0, _chai.expect)(selectors.selectIsCernerOnlyPatient(state)).to.be.false;",
                  "err": {},
                  "uuid": "3fa5b0a5-d18e-4a3d-ac00-04629ae14c85",
                  "parentUUID": "2e9585b4-4309-431a-8eba-052e956d6698",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "fc885cb7-9834-4d27-909c-1aaf71906a2f",
                "3fa5b0a5-d18e-4a3d-ac00-04629ae14c85"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "244d837c-063c-473f-abe2-8e861b20470f",
              "title": "selectIsCernerPatient",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/platform/user/tests/cerner-dsot/selectors.unit.spec.js",
              "file": "/src/platform/user/tests/cerner-dsot/selectors.unit.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "returns true when single patient facility is indicated as a Cerner facility",
                  "fullTitle": "cerner-dsot user selectors selectIsCernerPatient returns true when single patient facility is indicated as a Cerner facility",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var state = {\n  user: {\n    profile: {\n      facilities: [{\n        facilityId: '757'\n      }]\n    }\n  },\n  drupalStaticData: drupalStaticData\n};\n(0, _chai.expect)(selectors.selectIsCernerPatient(state)).to.be.true;",
                  "err": {},
                  "uuid": "b29f98a2-ded0-4526-a51e-d0a9815086c4",
                  "parentUUID": "244d837c-063c-473f-abe2-8e861b20470f",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "returns true when at least one patient facility is indicated as a Cerner facility",
                  "fullTitle": "cerner-dsot user selectors selectIsCernerPatient returns true when at least one patient facility is indicated as a Cerner facility",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var state = {\n  user: {\n    profile: {\n      facilities: [{\n        facilityId: '757'\n      }, {\n        facilityId: '123'\n      }]\n    }\n  },\n  drupalStaticData: drupalStaticData\n};\n(0, _chai.expect)(selectors.selectIsCernerPatient(state)).to.be.true;",
                  "err": {},
                  "uuid": "d044c18e-bd64-46bb-a0b4-34d77c56c059",
                  "parentUUID": "244d837c-063c-473f-abe2-8e861b20470f",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "returns false when no patient facilities are indicated as Cerner facilities",
                  "fullTitle": "cerner-dsot user selectors selectIsCernerPatient returns false when no patient facilities are indicated as Cerner facilities",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var state = {\n  user: {\n    profile: {\n      facilities: [{\n        facilityId: '123'\n      }, {\n        facilityId: '124'\n      }]\n    }\n  },\n  drupalStaticData: drupalStaticData\n};\n(0, _chai.expect)(selectors.selectIsCernerPatient(state)).to.be.false;",
                  "err": {},
                  "uuid": "bfb3eeed-4f8e-4be1-8601-7a8d7fb9126a",
                  "parentUUID": "244d837c-063c-473f-abe2-8e861b20470f",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "b29f98a2-ded0-4526-a51e-d0a9815086c4",
                "d044c18e-bd64-46bb-a0b4-34d77c56c059",
                "bfb3eeed-4f8e-4be1-8601-7a8d7fb9126a"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "06702cdb-bbc8-4995-8d64-6191ef1602a3",
          "title": "hca actions",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/platform/user/tests/profile/actions/hca.unit.spec.js",
          "file": "/src/platform/user/tests/profile/actions/hca.unit.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "7abd85b6-f965-4c77-945a-adb286982cbb",
              "title": "when `getEnrollmentStatus` executes",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/platform/user/tests/profile/actions/hca.unit.spec.js",
              "file": "/src/platform/user/tests/profile/actions/hca.unit.spec.js",
              "beforeHooks": [
                {
                  "title": "\"before each\" hook in \"when `getEnrollmentStatus` executes\"",
                  "fullTitle": "hca actions when `getEnrollmentStatus` executes \"before each\" hook in \"when `getEnrollmentStatus` executes\"",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "dispatch = _sinon.default.spy();",
                  "err": {},
                  "uuid": "ba472b7f-6a07-44f6-bed8-b28828b8c5e8",
                  "parentUUID": "7abd85b6-f965-4c77-945a-adb286982cbb",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [],
              "tests": [],
              "suites": [
                {
                  "uuid": "5e5f656f-e811-429e-be2e-03dc905a02d8",
                  "title": "when fetch operation succeeds",
                  "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/platform/user/tests/profile/actions/hca.unit.spec.js",
                  "file": "/src/platform/user/tests/profile/actions/hca.unit.spec.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "should dispatch a fetch succeeded action with data",
                      "fullTitle": "hca actions when `getEnrollmentStatus` executes when fetch operation succeeds should dispatch a fetch succeeded action with data",
                      "timedOut": false,
                      "duration": 7,
                      "state": "passed",
                      "speed": "slow",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "var mockData = {\n  data: 'data'\n};\nvar getState = function getState() {\n  return {\n    hcaEnrollmentStatus: {\n      isLoadingApplicationStatus: false\n    }\n  };\n};\n(0, _helpers.mockApiRequest)(mockData);\nreturn (0, _hca.getEnrollmentStatus)()(dispatch, getState).then(function () {\n  (0, _chai.expect)(dispatch.firstCall.args[0].type).to.equal(FETCH_ENROLLMENT_STATUS_STARTED);\n  (0, _chai.expect)(dispatch.secondCall.args[0]).to.eql({\n    type: FETCH_ENROLLMENT_STATUS_SUCCEEDED,\n    data: mockData\n  });\n});",
                      "err": {},
                      "uuid": "972d7f2d-bf05-4d41-85aa-51fb82681aa4",
                      "parentUUID": "5e5f656f-e811-429e-be2e-03dc905a02d8",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "972d7f2d-bf05-4d41-85aa-51fb82681aa4"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 7,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "5ec6ee32-a6ae-4aa5-b00f-1f26cdda6587",
                  "title": "when fetch operation fails",
                  "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/platform/user/tests/profile/actions/hca.unit.spec.js",
                  "file": "/src/platform/user/tests/profile/actions/hca.unit.spec.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "should dispatch a fetch failed action",
                      "fullTitle": "hca actions when `getEnrollmentStatus` executes when fetch operation fails should dispatch a fetch failed action",
                      "timedOut": false,
                      "duration": 5,
                      "state": "passed",
                      "speed": "slow",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "var mockData = {\n  data: 'data'\n};\nvar getState = function getState() {\n  return {\n    hcaEnrollmentStatus: {\n      isLoadingApplicationStatus: false\n    }\n  };\n};\n(0, _helpers.mockApiRequest)(mockData, false);\nreturn (0, _hca.getEnrollmentStatus)()(dispatch, getState).then(function () {\n  (0, _chai.expect)(dispatch.firstCall.args[0].type).to.equal(FETCH_ENROLLMENT_STATUS_STARTED);\n  (0, _chai.expect)(dispatch.secondCall.args[0].type).to.equal(FETCH_ENROLLMENT_STATUS_FAILED);\n});",
                      "err": {},
                      "uuid": "1eb741d1-1ae6-476b-9825-b86c6154195f",
                      "parentUUID": "5ec6ee32-a6ae-4aa5-b00f-1f26cdda6587",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "1eb741d1-1ae6-476b-9825-b86c6154195f"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 5,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "fdb06429-63f4-411b-bf13-52a754e3272c",
                  "title": "when a call is already in flight",
                  "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/platform/user/tests/profile/actions/hca.unit.spec.js",
                  "file": "/src/platform/user/tests/profile/actions/hca.unit.spec.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "should not dispatch anything",
                      "fullTitle": "hca actions when `getEnrollmentStatus` executes when a call is already in flight should not dispatch anything",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "var getState = function getState() {\n  return {\n    hcaEnrollmentStatus: {\n      isLoadingApplicationStatus: true\n    }\n  };\n};\n(0, _chai.expect)((0, _hca.getEnrollmentStatus)()(dispatch, getState)).to.be.null;\n(0, _chai.expect)(dispatch.notCalled).to.be.true;\ndone();",
                      "err": {},
                      "uuid": "b651675d-8e17-4fbb-8684-1873c4f0ec28",
                      "parentUUID": "fdb06429-63f4-411b-bf13-52a754e3272c",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "b651675d-8e17-4fbb-8684-1873c4f0ec28"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "60a3db6a-a4aa-4497-85fa-8321914ebb27",
                  "title": "when form data is passed in",
                  "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/platform/user/tests/profile/actions/hca.unit.spec.js",
                  "file": "/src/platform/user/tests/profile/actions/hca.unit.spec.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "should append the form data to the request URL",
                      "fullTitle": "hca actions when `getEnrollmentStatus` executes when form data is passed in should append the form data to the request URL",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "slow",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "(0, _helpers.mockFetch)();\n(0, _helpers.setFetchJSONResponse)(global.fetch.onFirstCall(), {\n  status: 'OK'\n});\nvar getState = function getState() {\n  return {\n    hcaEnrollmentStatus: {\n      isLoadingApplicationStatus: false\n    }\n  };\n};\nvar formData = {\n  dob: '01-01-00',\n  firstName: 'Pat',\n  lastName: 'Smith',\n  ssn: '123-12-1234'\n};\nreturn (0, _hca.getEnrollmentStatus)(formData)(dispatch, getState).then(function () {\n  (0, _chai.expect)(global.fetch.firstCall.args[0]).to.contain('health_care_applications/enrollment_status');\n  (0, _chai.expect)(global.fetch.firstCall.args[0]).to.contain('userAttributes%5BveteranDateOfBirth%5D=01-01-00');\n  (0, _chai.expect)(global.fetch.firstCall.args[0]).to.contain('userAttributes%5BveteranFullName%5D%5Bfirst%5D=Pat');\n  (0, _chai.expect)(global.fetch.firstCall.args[0]).to.contain('userAttributes%5BveteranFullName%5D%5Blast%5D=Smith');\n  (0, _chai.expect)(global.fetch.firstCall.args[0]).to.contain('userAttributes%5BveteranSocialSecurityNumber%5D=123-12-1234');\n});",
                      "err": {},
                      "uuid": "339361f2-686a-4158-ab8e-e1d39bbf300f",
                      "parentUUID": "60a3db6a-a4aa-4497-85fa-8321914ebb27",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "339361f2-686a-4158-ab8e-e1d39bbf300f"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                }
              ],
              "passes": [],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "0a306f61-2d40-4e92-975d-2772fd303293",
              "title": "when `resetEnrollmentStatus` executes",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/platform/user/tests/profile/actions/hca.unit.spec.js",
              "file": "/src/platform/user/tests/profile/actions/hca.unit.spec.js",
              "beforeHooks": [
                {
                  "title": "\"before each\" hook in \"when `resetEnrollmentStatus` executes\"",
                  "fullTitle": "hca actions when `resetEnrollmentStatus` executes \"before each\" hook in \"when `resetEnrollmentStatus` executes\"",
                  "timedOut": false,
                  "duration": 1,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "dispatch = _sinon.default.spy();",
                  "err": {},
                  "uuid": "28871357-d8d0-4db7-b4dd-8152e031bfb4",
                  "parentUUID": "0a306f61-2d40-4e92-975d-2772fd303293",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should dispatch a reset enrollment status action",
                  "fullTitle": "hca actions when `resetEnrollmentStatus` executes should dispatch a reset enrollment status action",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _hca.resetEnrollmentStatus)()(dispatch);\n(0, _chai.expect)(dispatch.firstCall.args[0].type).to.equal(RESET_ENROLLMENT_STATUS);",
                  "err": {},
                  "uuid": "084f51fb-3b1e-48b1-9248-be33fa23ac8e",
                  "parentUUID": "0a306f61-2d40-4e92-975d-2772fd303293",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "084f51fb-3b1e-48b1-9248-be33fa23ac8e"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "986b21ef-6289-4b3f-bbc1-f6d3f4536c51",
              "title": "when `getDismissedHCANotification` executes",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/platform/user/tests/profile/actions/hca.unit.spec.js",
              "file": "/src/platform/user/tests/profile/actions/hca.unit.spec.js",
              "beforeHooks": [
                {
                  "title": "\"before each\" hook in \"when `getDismissedHCANotification` executes\"",
                  "fullTitle": "hca actions when `getDismissedHCANotification` executes \"before each\" hook in \"when `getDismissedHCANotification` executes\"",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "dispatch = _sinon.default.spy();",
                  "err": {},
                  "uuid": "e15059ad-7f96-4e2a-a392-fc0a2bafb2f3",
                  "parentUUID": "986b21ef-6289-4b3f-bbc1-f6d3f4536c51",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [],
              "tests": [],
              "suites": [
                {
                  "uuid": "ecdb1a61-8282-4ac6-90a4-7fdba4d9738b",
                  "title": "when fetch operation succeeds",
                  "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/platform/user/tests/profile/actions/hca.unit.spec.js",
                  "file": "/src/platform/user/tests/profile/actions/hca.unit.spec.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "should dispatch a fetch succeeded action with data",
                      "fullTitle": "hca actions when `getDismissedHCANotification` executes when fetch operation succeeds should dispatch a fetch succeeded action with data",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "var mockData = {\n  data: 'data'\n};\n(0, _helpers.mockApiRequest)(mockData);\nreturn (0, _hca.getDismissedHCANotification)()(dispatch).then(function () {\n  (0, _chai.expect)(dispatch.firstCall.args[0].type).to.equal(FETCH_DISMISSED_HCA_NOTIFICATION_STARTED);\n  (0, _chai.expect)(dispatch.secondCall.args[0]).to.eql({\n    type: FETCH_DISMISSED_HCA_NOTIFICATION_SUCCEEDED,\n    response: mockData\n  });\n});",
                      "err": {},
                      "uuid": "31d9be12-7c77-48f0-a540-558fc7960276",
                      "parentUUID": "ecdb1a61-8282-4ac6-90a4-7fdba4d9738b",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "31d9be12-7c77-48f0-a540-558fc7960276"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "8cd20988-a78b-4299-9358-896e614c5613",
                  "title": "when fetch operation fails",
                  "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/platform/user/tests/profile/actions/hca.unit.spec.js",
                  "file": "/src/platform/user/tests/profile/actions/hca.unit.spec.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "should dispatch a fetch failed action",
                      "fullTitle": "hca actions when `getDismissedHCANotification` executes when fetch operation fails should dispatch a fetch failed action",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "slow",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "var mockData = {\n  data: 'data'\n};\n(0, _helpers.mockApiRequest)(mockData, false);\nreturn (0, _hca.getDismissedHCANotification)()(dispatch).then(function () {\n  (0, _chai.expect)(dispatch.firstCall.args[0].type).to.equal(FETCH_DISMISSED_HCA_NOTIFICATION_STARTED);\n  (0, _chai.expect)(dispatch.secondCall.args[0].type).to.equal(FETCH_DISMISSED_HCA_NOTIFICATION_FAILED);\n});",
                      "err": {},
                      "uuid": "042053be-acf4-4438-aae0-6f04d4992ff5",
                      "parentUUID": "8cd20988-a78b-4299-9358-896e614c5613",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "042053be-acf4-4438-aae0-6f04d4992ff5"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                }
              ],
              "passes": [],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "01b4fdce-264f-4bbd-b22f-4a96797d5a43",
              "title": "when `setDismissedHCANotification` executes",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/platform/user/tests/profile/actions/hca.unit.spec.js",
              "file": "/src/platform/user/tests/profile/actions/hca.unit.spec.js",
              "beforeHooks": [
                {
                  "title": "\"before each\" hook in \"when `setDismissedHCANotification` executes\"",
                  "fullTitle": "hca actions when `setDismissedHCANotification` executes \"before each\" hook in \"when `setDismissedHCANotification` executes\"",
                  "timedOut": false,
                  "duration": 1,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _helpers.mockFetch)();\n(0, _helpers.setFetchJSONResponse)(global.fetch.onFirstCall(), {\n  status: 'OK'\n});\ndispatch = _sinon.default.spy();",
                  "err": {},
                  "uuid": "0c2825b2-4dfd-42ad-a8ac-a6064e82e8db",
                  "parentUUID": "01b4fdce-264f-4bbd-b22f-4a96797d5a43",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [],
              "tests": [],
              "suites": [
                {
                  "uuid": "80289050-973b-4816-9238-3ee279c1712b",
                  "title": "when an HCA notification is being dismissed for the first time",
                  "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/platform/user/tests/profile/actions/hca.unit.spec.js",
                  "file": "/src/platform/user/tests/profile/actions/hca.unit.spec.js",
                  "beforeHooks": [
                    {
                      "title": "\"before each\" hook in \"when an HCA notification is being dismissed for the first time\"",
                      "fullTitle": "hca actions when `setDismissedHCANotification` executes when an HCA notification is being dismissed for the first time \"before each\" hook in \"when an HCA notification is being dismissed for the first time\"",
                      "timedOut": false,
                      "duration": 0,
                      "state": null,
                      "speed": null,
                      "pass": false,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "(0, _hca.setDismissedHCANotification)('status', statusEffectiveAtDate)(dispatch, function () {\n  return {\n    hcaEnrollmentStatus: {\n      dismissedNotificationDate: null\n    }\n  };\n});",
                      "err": {},
                      "uuid": "92e0b39b-5896-4db5-beb6-c660eb6bf40a",
                      "parentUUID": "80289050-973b-4816-9238-3ee279c1712b",
                      "isHook": true,
                      "skipped": false
                    }
                  ],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "should dispatch a SET_DISMISSED_HCA_NOTIFICATION action with the effective date",
                      "fullTitle": "hca actions when `setDismissedHCANotification` executes when an HCA notification is being dismissed for the first time should dispatch a SET_DISMISSED_HCA_NOTIFICATION action with the effective date",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "(0, _chai.expect)(dispatch.firstCall.args[0]).to.eql({\n  type: SET_DISMISSED_HCA_NOTIFICATION,\n  data: statusEffectiveAtDate\n});",
                      "err": {},
                      "uuid": "6c24ed76-7004-4b15-a99e-b635e4b6441e",
                      "parentUUID": "80289050-973b-4816-9238-3ee279c1712b",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "should call the correct POST endpoint",
                      "fullTitle": "hca actions when `setDismissedHCANotification` executes when an HCA notification is being dismissed for the first time should call the correct POST endpoint",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "(0, _chai.expect)(global.fetch.firstCall.args[0]).to.contain('/v0/notifications/dismissed_statuses');\n(0, _chai.expect)(global.fetch.firstCall.args[1].method).to.eql('POST');",
                      "err": {},
                      "uuid": "e2938b59-dc94-4765-84ec-190abaf16f39",
                      "parentUUID": "80289050-973b-4816-9238-3ee279c1712b",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "6c24ed76-7004-4b15-a99e-b635e4b6441e",
                    "e2938b59-dc94-4765-84ec-190abaf16f39"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "79aa4240-f38b-4083-ad15-fed780904a69",
                  "title": "when an HCA notification has previously been dismissed",
                  "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/platform/user/tests/profile/actions/hca.unit.spec.js",
                  "file": "/src/platform/user/tests/profile/actions/hca.unit.spec.js",
                  "beforeHooks": [
                    {
                      "title": "\"before each\" hook in \"when an HCA notification has previously been dismissed\"",
                      "fullTitle": "hca actions when `setDismissedHCANotification` executes when an HCA notification has previously been dismissed \"before each\" hook in \"when an HCA notification has previously been dismissed\"",
                      "timedOut": false,
                      "duration": 0,
                      "state": null,
                      "speed": null,
                      "pass": false,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "(0, _hca.setDismissedHCANotification)('status', statusEffectiveAtDate)(dispatch, function () {\n  return {\n    hcaEnrollmentStatus: {\n      dismissedNotificationDate: 1565025055758\n    }\n  };\n});",
                      "err": {},
                      "uuid": "3f005f9b-9dee-45a7-bcb7-580ca3cefc1f",
                      "parentUUID": "79aa4240-f38b-4083-ad15-fed780904a69",
                      "isHook": true,
                      "skipped": false
                    }
                  ],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "should dispatch a SET_DISMISSED_HCA_NOTIFICATION action with the effective date",
                      "fullTitle": "hca actions when `setDismissedHCANotification` executes when an HCA notification has previously been dismissed should dispatch a SET_DISMISSED_HCA_NOTIFICATION action with the effective date",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "(0, _chai.expect)(dispatch.firstCall.args[0]).to.eql({\n  type: SET_DISMISSED_HCA_NOTIFICATION,\n  data: statusEffectiveAtDate\n});",
                      "err": {},
                      "uuid": "09093db5-9c35-4f04-b657-77b83ef76891",
                      "parentUUID": "79aa4240-f38b-4083-ad15-fed780904a69",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "should call the correct PUT endpoint if a notification is being dismissed for the second time",
                      "fullTitle": "hca actions when `setDismissedHCANotification` executes when an HCA notification has previously been dismissed should call the correct PUT endpoint if a notification is being dismissed for the second time",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "(0, _chai.expect)(global.fetch.firstCall.args[0]).to.contain('/notifications/dismissed_statuses/form_10_10ez');\n(0, _chai.expect)(global.fetch.firstCall.args[1].method).to.eql('PUT');",
                      "err": {},
                      "uuid": "26b38556-5913-48d4-ad53-f7d979689524",
                      "parentUUID": "79aa4240-f38b-4083-ad15-fed780904a69",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "09093db5-9c35-4f04-b657-77b83ef76891",
                    "26b38556-5913-48d4-ad53-f7d979689524"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                }
              ],
              "passes": [],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "dba4bf46-0196-4c23-8862-31b3233e5105",
          "title": "profile actions",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/platform/user/tests/profile/actions/index.unit.spec.js",
          "file": "/src/platform/user/tests/profile/actions/index.unit.spec.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"profile actions\"",
              "fullTitle": "profile actions \"before each\" hook in \"profile actions\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "dispatch = _sinon.default.spy();\nrecordEventSpy = _sinon.default.spy();",
              "err": {},
              "uuid": "09d67eb3-fc03-4fe1-8e34-67f576aa173f",
              "parentUUID": "dba4bf46-0196-4c23-8862-31b3233e5105",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": "creates UPDATE_PROFILE_FIELDS when updating profile fields",
              "fullTitle": "profile actions creates UPDATE_PROFILE_FIELDS when updating profile fields",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var expectedAction = {\n  type: actions.UPDATE_PROFILE_FIELDS,\n  payload: {\n    test: 'data'\n  }\n};\n(0, _chai.expect)(actions.updateProfileFields({\n  test: 'data'\n})).to.deep.equal(expectedAction);",
              "err": {},
              "uuid": "7b742c05-7c25-487a-a8a4-117b6c6c71d5",
              "parentUUID": "dba4bf46-0196-4c23-8862-31b3233e5105",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "handles successful profile refresh, and triggers successful GA event",
              "fullTitle": "profile actions handles successful profile refresh, and triggers successful GA event",
              "timedOut": false,
              "duration": 5,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
              "err": {},
              "uuid": "1f41c567-7027-4f13-9bb1-7bb455677a3c",
              "parentUUID": "dba4bf46-0196-4c23-8862-31b3233e5105",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "handles failed profile refresh, and triggers failure GA event",
              "fullTitle": "profile actions handles failed profile refresh, and triggers failure GA event",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
              "err": {},
              "uuid": "36a93fa7-632d-4596-aca0-1f1abbd2a210",
              "parentUUID": "dba4bf46-0196-4c23-8862-31b3233e5105",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "7b742c05-7c25-487a-a8a4-117b6c6c71d5",
            "1f41c567-7027-4f13-9bb1-7bb455677a3c",
            "36a93fa7-632d-4596-aca0-1f1abbd2a210"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 6,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "bb4e6716-0ae3-4474-962f-c9adc5930622",
          "title": "extractProfileErrors",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/platform/user/tests/profile/actions/index.unit.spec.js",
          "file": "/src/platform/user/tests/profile/actions/index.unit.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "extracts errors from meta object",
              "fullTitle": "extractProfileErrors extracts errors from meta object",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var mockDataPayload = {\n  meta: {\n    errors: [{\n      description: 'Meta error 1'\n    }, {\n      description: 'Meta error 2'\n    }]\n  }\n};\nvar result = actions.extractProfileErrors(mockDataPayload);\n(0, _chai.expect)(result).to.equal('Meta error 1 | Meta error 2');",
              "err": {},
              "uuid": "62360276-277d-42ac-b26e-27d7cea918ed",
              "parentUUID": "bb4e6716-0ae3-4474-962f-c9adc5930622",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "extracts errors from main errors object",
              "fullTitle": "extractProfileErrors extracts errors from main errors object",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var mockDataPayload = {\n  errors: [{\n    title: 'Main error 1'\n  }, {\n    title: 'Main error 2'\n  }]\n};\nvar result = actions.extractProfileErrors(mockDataPayload);\n(0, _chai.expect)(result).to.equal('Main error 1 | Main error 2');",
              "err": {},
              "uuid": "c124070b-1c48-4de1-ba6e-b683d4982e23",
              "parentUUID": "bb4e6716-0ae3-4474-962f-c9adc5930622",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "extracts errors from both meta and main errors object",
              "fullTitle": "extractProfileErrors extracts errors from both meta and main errors object",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var mockDataPayload = {\n  meta: {\n    errors: [{\n      description: 'Meta error'\n    }]\n  },\n  errors: [{\n    title: 'Main error'\n  }]\n};\nvar result = actions.extractProfileErrors(mockDataPayload);\n(0, _chai.expect)(result).to.equal('Meta errorMain error');",
              "err": {},
              "uuid": "179e4329-9795-4b35-8215-fa90fc228ed9",
              "parentUUID": "bb4e6716-0ae3-4474-962f-c9adc5930622",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "returns default message if no errors found",
              "fullTitle": "extractProfileErrors returns default message if no errors found",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var mockDataPayload = {};\nvar result = actions.extractProfileErrors(mockDataPayload);\n(0, _chai.expect)(result).to.equal('No error messages found');",
              "err": {},
              "uuid": "f67c389b-5fdb-42cc-a2cf-c3af6ae70024",
              "parentUUID": "bb4e6716-0ae3-4474-962f-c9adc5930622",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "62360276-277d-42ac-b26e-27d7cea918ed",
            "c124070b-1c48-4de1-ba6e-b683d4982e23",
            "179e4329-9795-4b35-8215-fa90fc228ed9",
            "f67c389b-5fdb-42cc-a2cf-c3af6ae70024"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "da40ad02-9ffc-4100-a57b-121347801be5",
          "title": "Profile reducer",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/platform/user/tests/profile/reducers/index.unit.spec.js",
          "file": "/src/platform/user/tests/profile/reducers/index.unit.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should set loading to false when profile is done loading",
              "fullTitle": "Profile reducer should set loading to false when profile is done loading",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var state = (0, _reducers.default)({}, {\n  type: _actions2.PROFILE_LOADING_FINISHED\n});\n(0, _chai.expect)(state.loading).to.be.false;",
              "err": {},
              "uuid": "f60c963b-dcd0-4123-becd-ef3376d11bf3",
              "parentUUID": "da40ad02-9ffc-4100-a57b-121347801be5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should set loading to false when logged in status changes",
              "fullTitle": "Profile reducer should set loading to false when logged in status changes",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var state = (0, _reducers.default)({}, {\n  type: _actions.UPDATE_LOGGEDIN_STATUS\n});\n(0, _chai.expect)(state.loading).to.be.false;",
              "err": {},
              "uuid": "3554e269-0f96-4bfd-92a3-ab6e19b61e5b",
              "parentUUID": "da40ad02-9ffc-4100-a57b-121347801be5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should be loading when fetching MHV account",
              "fullTitle": "Profile reducer should be loading when fetching MHV account",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var state = (0, _reducers.default)({\n  mhvAccount: {}\n}, {\n  type: _actions2.FETCHING_MHV_ACCOUNT\n});\n(0, _chai.expect)(state.mhvAccount.loading).to.be.true;",
              "err": {},
              "uuid": "68391bb5-23f3-4734-bcf4-b3b5c0f79c0a",
              "parentUUID": "da40ad02-9ffc-4100-a57b-121347801be5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should handle failure to fetch MHV account",
              "fullTitle": "Profile reducer should handle failure to fetch MHV account",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var state = (0, _reducers.default)({\n  mhvAccount: {}\n}, {\n  type: _actions2.FETCH_MHV_ACCOUNT_FAILURE,\n  errors: [{\n    title: 'error',\n    code: 500\n  }]\n});\n(0, _chai.expect)(state.mhvAccount.errors).to.exist;\n(0, _chai.expect)(state.mhvAccount.loading).to.be.false;",
              "err": {},
              "uuid": "74093069-f9c1-4fa0-a489-c073682c8c78",
              "parentUUID": "da40ad02-9ffc-4100-a57b-121347801be5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should set MHV account level and state after it is fetched",
              "fullTitle": "Profile reducer should set MHV account level and state after it is fetched",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var state = (0, _reducers.default)({\n  mhvAccount: {\n    accountLevel: null,\n    accountState: null\n  }\n}, {\n  type: _actions2.FETCH_MHV_ACCOUNT_SUCCESS,\n  data: {\n    attributes: {\n      accountLevel: 'Premium',\n      accountState: 'upgraded'\n    }\n  }\n});\n(0, _chai.expect)(state.mhvAccount.accountLevel).to.eq('Premium');\n(0, _chai.expect)(state.mhvAccount.accountState).to.eq('upgraded');",
              "err": {},
              "uuid": "4bbe06dd-f635-4db5-aa11-21b062a604a4",
              "parentUUID": "da40ad02-9ffc-4100-a57b-121347801be5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should remove the right form when deleting a form",
              "fullTitle": "Profile reducer should remove the right form when deleting a form",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var state = (0, _reducers.default)({\n  savedForms: [{\n    form: 1\n  }, {\n    form: 2\n  }]\n}, {\n  type: _actions2.REMOVING_SAVED_FORM_SUCCESS,\n  formId: 1\n});\n(0, _chai.expect)(state.savedForms.length).to.eq(1);\n(0, _chai.expect)(state.savedForms).to.deep.equal([{\n  form: 2\n}]);",
              "err": {},
              "uuid": "f0421e27-ba9d-4f5c-9776-fb97f7a8f015",
              "parentUUID": "da40ad02-9ffc-4100-a57b-121347801be5",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [
            {
              "uuid": "1175646a-c5d4-46a6-9bf2-7067e7552d0c",
              "title": "initial state",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/platform/user/tests/profile/reducers/index.unit.spec.js",
              "file": "/src/platform/user/tests/profile/reducers/index.unit.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should set mhvAccount.loading to false",
                  "fullTitle": "Profile reducer initial state should set mhvAccount.loading to false",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var state = (0, _reducers.default)(undefined, {\n  type: 'not a valid event type'\n});\n(0, _chai.expect)(state.mhvAccount.loading).to.be.false;",
                  "err": {},
                  "uuid": "51e9c18b-f8a4-4e08-ac07-74a9574a0c77",
                  "parentUUID": "1175646a-c5d4-46a6-9bf2-7067e7552d0c",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "51e9c18b-f8a4-4e08-ac07-74a9574a0c77"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            }
          ],
          "passes": [
            "f60c963b-dcd0-4123-becd-ef3376d11bf3",
            "3554e269-0f96-4bfd-92a3-ab6e19b61e5b",
            "68391bb5-23f3-4734-bcf4-b3b5c0f79c0a",
            "74093069-f9c1-4fa0-a489-c073682c8c78",
            "4bbe06dd-f635-4db5-aa11-21b062a604a4",
            "f0421e27-ba9d-4f5c-9776-fb97f7a8f015"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "bc0fb42f-486d-492c-8140-3dd5f285051c",
          "title": "hca top-level selectors",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/platform/user/tests/profile/selectors/hca.unit.spec.js",
          "file": "/src/platform/user/tests/profile/selectors/hca.unit.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "64433990-c1f8-4a7d-af9a-fed215344599",
              "title": "when `selectEnrollmentStatus` executes",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/platform/user/tests/profile/selectors/hca.unit.spec.js",
              "file": "/src/platform/user/tests/profile/selectors/hca.unit.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should select the correct part of the state",
                  "fullTitle": "hca top-level selectors when `selectEnrollmentStatus` executes should select the correct part of the state",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var state = {\n  hcaEnrollmentStatus: _objectSpread({}, basicEnrollmentStatusState),\n  user: _objectSpread({}, loggedOutUserState)\n};\nvar enrollmentStatus = selectors.selectEnrollmentStatus(state);\n(0, _chai.expect)(enrollmentStatus).to.deep.equal(basicEnrollmentStatusState);",
                  "err": {},
                  "uuid": "df7ed286-334c-4ae9-b221-42cbc5010d3f",
                  "parentUUID": "64433990-c1f8-4a7d-af9a-fed215344599",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "df7ed286-334c-4ae9-b221-42cbc5010d3f"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "95aefd58-5b8c-41c4-9460-85a31f1d729c",
              "title": "when `isEnrollmentStatusLoading` executes",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/platform/user/tests/profile/selectors/hca.unit.spec.js",
              "file": "/src/platform/user/tests/profile/selectors/hca.unit.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return the correct part of the enrollment status state",
                  "fullTitle": "hca top-level selectors when `isEnrollmentStatusLoading` executes should return the correct part of the enrollment status state",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var state = {\n  hcaEnrollmentStatus: _objectSpread({}, basicEnrollmentStatusState)\n};\nvar isLoading = selectors.isEnrollmentStatusLoading(state);\n(0, _chai.expect)(isLoading).to.be.false;\nstate.hcaEnrollmentStatus.isLoadingApplicationStatus = true;\nisLoading = selectors.isEnrollmentStatusLoading(state);\n(0, _chai.expect)(isLoading).to.be.true;",
                  "err": {},
                  "uuid": "ed8719b6-b725-4391-95a8-f622666d326b",
                  "parentUUID": "95aefd58-5b8c-41c4-9460-85a31f1d729c",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "ed8719b6-b725-4391-95a8-f622666d326b"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "2e47721b-1e54-4d5a-868f-04fe540b1a20",
              "title": "when `hasServerError` executes",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/platform/user/tests/profile/selectors/hca.unit.spec.js",
              "file": "/src/platform/user/tests/profile/selectors/hca.unit.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return the correct part of the enrollment status state",
                  "fullTitle": "hca top-level selectors when `hasServerError` executes should return the correct part of the enrollment status state",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var state = {\n  hcaEnrollmentStatus: _objectSpread({}, basicEnrollmentStatusState)\n};\nvar hasServerError = selectors.hasServerError(state);\n(0, _chai.expect)(hasServerError).to.be.false;\nstate.hcaEnrollmentStatus.hasServerError = true;\nhasServerError = selectors.hasServerError(state);\n(0, _chai.expect)(hasServerError).to.be.true;",
                  "err": {},
                  "uuid": "0f1a9cd1-5925-4ab9-8b1a-511e2328c154",
                  "parentUUID": "2e47721b-1e54-4d5a-868f-04fe540b1a20",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "0f1a9cd1-5925-4ab9-8b1a-511e2328c154"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "b943ba58-1c6a-41b1-9c12-faabd013c7f0",
              "title": "when `noESRRecordFound` executes",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/platform/user/tests/profile/selectors/hca.unit.spec.js",
              "file": "/src/platform/user/tests/profile/selectors/hca.unit.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return the correct part of the enrollment status state",
                  "fullTitle": "hca top-level selectors when `noESRRecordFound` executes should return the correct part of the enrollment status state",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var state = {\n  hcaEnrollmentStatus: _objectSpread({}, basicEnrollmentStatusState)\n};\nvar noESRRecordFound = selectors.noESRRecordFound(state);\n(0, _chai.expect)(noESRRecordFound).to.be.false;\nstate.hcaEnrollmentStatus.noESRRecordFound = true;\nnoESRRecordFound = selectors.noESRRecordFound(state);\n(0, _chai.expect)(noESRRecordFound).to.be.true;",
                  "err": {},
                  "uuid": "136acddf-bc28-47cd-b1cf-c137713d6dda",
                  "parentUUID": "b943ba58-1c6a-41b1-9c12-faabd013c7f0",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "136acddf-bc28-47cd-b1cf-c137713d6dda"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "8f4fef29-540e-41a5-bc96-8e32ce377b9c",
              "title": "when `shouldShowReapplyContent` executes",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/platform/user/tests/profile/selectors/hca.unit.spec.js",
              "file": "/src/platform/user/tests/profile/selectors/hca.unit.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return the correct part of the enrollment status state",
                  "fullTitle": "hca top-level selectors when `shouldShowReapplyContent` executes should return the correct part of the enrollment status state",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var state = {\n  hcaEnrollmentStatus: _objectSpread({}, basicEnrollmentStatusState)\n};\nvar showReapplyContent = selectors.shouldShowReapplyContent(state);\n(0, _chai.expect)(showReapplyContent).to.be.false;\nstate.hcaEnrollmentStatus.showReapplyContent = true;\nshowReapplyContent = selectors.shouldShowReapplyContent(state);\n(0, _chai.expect)(showReapplyContent).to.be.true;",
                  "err": {},
                  "uuid": "fb304dc3-b9bb-477f-a127-154e0efbef5d",
                  "parentUUID": "8f4fef29-540e-41a5-bc96-8e32ce377b9c",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "fb304dc3-b9bb-477f-a127-154e0efbef5d"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "83a57e95-61f7-4b91-b171-8e94b873d972",
              "title": "when `isEnrolledInESR` executes",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/platform/user/tests/profile/selectors/hca.unit.spec.js",
              "file": "/src/platform/user/tests/profile/selectors/hca.unit.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [],
              "suites": [
                {
                  "uuid": "feaa55ac-f362-4d4a-b886-907817377ef9",
                  "title": "when the enrollmentStatus is not set",
                  "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/platform/user/tests/profile/selectors/hca.unit.spec.js",
                  "file": "/src/platform/user/tests/profile/selectors/hca.unit.spec.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "should return `false`",
                      "fullTitle": "hca top-level selectors when `isEnrolledInESR` executes when the enrollmentStatus is not set should return `false`",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "var state = {\n  hcaEnrollmentStatus: _objectSpread({}, basicEnrollmentStatusState)\n};\nvar isEnrolledInESR = selectors.isEnrolledInESR(state);\n(0, _chai.expect)(isEnrolledInESR).to.be.false;",
                      "err": {},
                      "uuid": "c9ba6e42-a634-4d82-990e-67069f5db4fa",
                      "parentUUID": "feaa55ac-f362-4d4a-b886-907817377ef9",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "c9ba6e42-a634-4d82-990e-67069f5db4fa"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "28ecba45-e266-48d6-9ad3-dd7419370792",
                  "title": "when the enrollmentStatus is `not enrolled`",
                  "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/platform/user/tests/profile/selectors/hca.unit.spec.js",
                  "file": "/src/platform/user/tests/profile/selectors/hca.unit.spec.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "should return `false`",
                      "fullTitle": "hca top-level selectors when `isEnrolledInESR` executes when the enrollmentStatus is `not enrolled` should return `false`",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "var state = {\n  hcaEnrollmentStatus: _objectSpread(_objectSpread({}, basicEnrollmentStatusState), {}, {\n    enrollmentStatus: _hca2.HCA_ENROLLMENT_STATUSES.pendingOther\n  })\n};\nvar isEnrolledInESR = selectors.isEnrolledInESR(state);\n(0, _chai.expect)(isEnrolledInESR).to.be.false;",
                      "err": {},
                      "uuid": "22a29029-c300-4f1e-b80e-5e265c769ef4",
                      "parentUUID": "28ecba45-e266-48d6-9ad3-dd7419370792",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "22a29029-c300-4f1e-b80e-5e265c769ef4"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "674545cf-343f-4fef-a349-36ba80602add",
                  "title": "when the enrollmentStatus is `enrolled`",
                  "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/platform/user/tests/profile/selectors/hca.unit.spec.js",
                  "file": "/src/platform/user/tests/profile/selectors/hca.unit.spec.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "should return `true`",
                      "fullTitle": "hca top-level selectors when `isEnrolledInESR` executes when the enrollmentStatus is `enrolled` should return `true`",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "var state = {\n  hcaEnrollmentStatus: _objectSpread(_objectSpread({}, basicEnrollmentStatusState), {}, {\n    enrollmentStatus: _hca2.HCA_ENROLLMENT_STATUSES.enrolled\n  })\n};\nvar isEnrolledInESR = selectors.isEnrolledInESR(state);\n(0, _chai.expect)(isEnrolledInESR).to.be.true;",
                      "err": {},
                      "uuid": "efda8c6a-d3cc-43c0-ab9e-6b919b62a5ca",
                      "parentUUID": "674545cf-343f-4fef-a349-36ba80602add",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "efda8c6a-d3cc-43c0-ab9e-6b919b62a5ca"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                }
              ],
              "passes": [],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "8f658387-a76a-4901-9b50-ba980d81bddd",
              "title": "when `isInESR` executes",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/platform/user/tests/profile/selectors/hca.unit.spec.js",
              "file": "/src/platform/user/tests/profile/selectors/hca.unit.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [],
              "suites": [
                {
                  "uuid": "20472ba1-1e83-4a9b-8feb-da61b5b5cf0e",
                  "title": "when the enrollmentStatus is not set",
                  "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/platform/user/tests/profile/selectors/hca.unit.spec.js",
                  "file": "/src/platform/user/tests/profile/selectors/hca.unit.spec.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "should return `false`",
                      "fullTitle": "hca top-level selectors when `isInESR` executes when the enrollmentStatus is not set should return `false`",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "var state = {\n  hcaEnrollmentStatus: _objectSpread({}, basicEnrollmentStatusState)\n};\nvar isInESR = selectors.hasApplicationInESR(state);\n(0, _chai.expect)(isInESR).to.be.false;",
                      "err": {},
                      "uuid": "d1fb67be-09c4-42a7-af7c-f4e9086e62cf",
                      "parentUUID": "20472ba1-1e83-4a9b-8feb-da61b5b5cf0e",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "d1fb67be-09c4-42a7-af7c-f4e9086e62cf"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "83ec879d-d653-49d1-8368-f16a111ac351",
                  "title": "when the enrollmentStatus is `noneOfTheAbove`",
                  "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/platform/user/tests/profile/selectors/hca.unit.spec.js",
                  "file": "/src/platform/user/tests/profile/selectors/hca.unit.spec.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "should return `false`",
                      "fullTitle": "hca top-level selectors when `isInESR` executes when the enrollmentStatus is `noneOfTheAbove` should return `false`",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "var state = {\n  hcaEnrollmentStatus: _objectSpread(_objectSpread({}, basicEnrollmentStatusState), {}, {\n    enrollmentStatus: _hca2.HCA_ENROLLMENT_STATUSES.noneOfTheAbove\n  })\n};\nvar isInESR = selectors.hasApplicationInESR(state);\n(0, _chai.expect)(isInESR).to.be.false;",
                      "err": {},
                      "uuid": "4feae3be-4992-46f6-a714-aeea78fc9dcd",
                      "parentUUID": "83ec879d-d653-49d1-8368-f16a111ac351",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "4feae3be-4992-46f6-a714-aeea78fc9dcd"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "c9292455-6f4c-49c6-b0ef-00716657d761",
                  "title": "when the enrollmentStatus is `activeDuty`",
                  "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/platform/user/tests/profile/selectors/hca.unit.spec.js",
                  "file": "/src/platform/user/tests/profile/selectors/hca.unit.spec.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "should return `false`",
                      "fullTitle": "hca top-level selectors when `isInESR` executes when the enrollmentStatus is `activeDuty` should return `false`",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "var state = {\n  hcaEnrollmentStatus: _objectSpread(_objectSpread({}, basicEnrollmentStatusState), {}, {\n    enrollmentStatus: _hca2.HCA_ENROLLMENT_STATUSES.activeDuty\n  })\n};\nvar isInESR = selectors.hasApplicationInESR(state);\n(0, _chai.expect)(isInESR).to.be.false;",
                      "err": {},
                      "uuid": "3cb2d57a-cf35-4ccb-b260-c138d9765896",
                      "parentUUID": "c9292455-6f4c-49c6-b0ef-00716657d761",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "3cb2d57a-cf35-4ccb-b260-c138d9765896"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "8bfa767c-3816-4e0e-9509-3fdbeb4dd07c",
                  "title": "when the enrollmentStatus is `cancelled`",
                  "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/platform/user/tests/profile/selectors/hca.unit.spec.js",
                  "file": "/src/platform/user/tests/profile/selectors/hca.unit.spec.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "should return `false`",
                      "fullTitle": "hca top-level selectors when `isInESR` executes when the enrollmentStatus is `cancelled` should return `false`",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "var state = {\n  hcaEnrollmentStatus: _objectSpread(_objectSpread({}, basicEnrollmentStatusState), {}, {\n    enrollmentStatus: _hca2.HCA_ENROLLMENT_STATUSES.canceledDeclined\n  })\n};\nvar isInESR = selectors.hasApplicationInESR(state);\n(0, _chai.expect)(isInESR).to.be.false;",
                      "err": {},
                      "uuid": "d5907c58-071f-4890-8185-a4e572149531",
                      "parentUUID": "8bfa767c-3816-4e0e-9509-3fdbeb4dd07c",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "d5907c58-071f-4890-8185-a4e572149531"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "94d1b10f-53a2-442a-a583-cdb126ff40b0",
                  "title": "when the enrollmentStatus is `deceased`",
                  "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/platform/user/tests/profile/selectors/hca.unit.spec.js",
                  "file": "/src/platform/user/tests/profile/selectors/hca.unit.spec.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "should return `false`",
                      "fullTitle": "hca top-level selectors when `isInESR` executes when the enrollmentStatus is `deceased` should return `false`",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "var state = {\n  hcaEnrollmentStatus: _objectSpread(_objectSpread({}, basicEnrollmentStatusState), {}, {\n    enrollmentStatus: _hca2.HCA_ENROLLMENT_STATUSES.deceased\n  })\n};\nvar isInESR = selectors.hasApplicationInESR(state);\n(0, _chai.expect)(isInESR).to.be.false;",
                      "err": {},
                      "uuid": "5df61bf8-3218-4cb0-a790-9b82f60a812b",
                      "parentUUID": "94d1b10f-53a2-442a-a583-cdb126ff40b0",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "5df61bf8-3218-4cb0-a790-9b82f60a812b"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "3107ad93-b364-40f1-ada9-16f636f899e9",
                  "title": "when the enrollmentStatus is `enrolled`",
                  "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/platform/user/tests/profile/selectors/hca.unit.spec.js",
                  "file": "/src/platform/user/tests/profile/selectors/hca.unit.spec.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "should return `true`",
                      "fullTitle": "hca top-level selectors when `isInESR` executes when the enrollmentStatus is `enrolled` should return `true`",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "var state = {\n  hcaEnrollmentStatus: _objectSpread(_objectSpread({}, basicEnrollmentStatusState), {}, {\n    enrollmentStatus: _hca2.HCA_ENROLLMENT_STATUSES.enrolled\n  })\n};\nvar isInESR = selectors.hasApplicationInESR(state);\n(0, _chai.expect)(isInESR).to.be.true;",
                      "err": {},
                      "uuid": "e547608b-bc01-4e72-b735-5c52aace0e8d",
                      "parentUUID": "3107ad93-b364-40f1-ada9-16f636f899e9",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "e547608b-bc01-4e72-b735-5c52aace0e8d"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "4edce16c-1b17-4ba2-b069-6db04ab2c999",
                  "title": "when the enrollmentStatus is `pending`",
                  "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/platform/user/tests/profile/selectors/hca.unit.spec.js",
                  "file": "/src/platform/user/tests/profile/selectors/hca.unit.spec.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "should return `true`",
                      "fullTitle": "hca top-level selectors when `isInESR` executes when the enrollmentStatus is `pending` should return `true`",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "var state = {\n  hcaEnrollmentStatus: _objectSpread(_objectSpread({}, basicEnrollmentStatusState), {}, {\n    enrollmentStatus: _hca2.HCA_ENROLLMENT_STATUSES.pendingOther\n  })\n};\nvar isInESR = selectors.hasApplicationInESR(state);\n(0, _chai.expect)(isInESR).to.be.true;",
                      "err": {},
                      "uuid": "3635af4b-65f2-44b3-ae37-62b477de3d82",
                      "parentUUID": "4edce16c-1b17-4ba2-b069-6db04ab2c999",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "3635af4b-65f2-44b3-ae37-62b477de3d82"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                }
              ],
              "passes": [],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "bc812605-328d-4be2-a9f9-a67a910137bc",
          "title": "hca compound selectors",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/platform/user/tests/profile/selectors/hca.unit.spec.js",
          "file": "/src/platform/user/tests/profile/selectors/hca.unit.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "f0bb8386-be1d-49e9-a143-3717fe23ad17",
              "title": "when `isLoading` executes",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/platform/user/tests/profile/selectors/hca.unit.spec.js",
              "file": "/src/platform/user/tests/profile/selectors/hca.unit.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [],
              "suites": [
                {
                  "uuid": "39b4218c-017a-41ab-ac31-e2660635dc3e",
                  "title": "when the enrollment status is loading",
                  "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/platform/user/tests/profile/selectors/hca.unit.spec.js",
                  "file": "/src/platform/user/tests/profile/selectors/hca.unit.spec.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "should return `true`",
                      "fullTitle": "hca compound selectors when `isLoading` executes when the enrollment status is loading should return `true`",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "var state = {\n  hcaEnrollmentStatus: _objectSpread(_objectSpread({}, basicEnrollmentStatusState), {}, {\n    isLoadingApplicationStatus: true\n  }),\n  user: _objectSpread({}, loggedOutUserState)\n};\nvar isLoading = selectors.isLoading(state);\n(0, _chai.expect)(isLoading).to.be.true;",
                      "err": {},
                      "uuid": "4cd00ff9-3bf2-4cff-bb4f-c27b41e1d2ec",
                      "parentUUID": "39b4218c-017a-41ab-ac31-e2660635dc3e",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "4cd00ff9-3bf2-4cff-bb4f-c27b41e1d2ec"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "128ae6a3-5cf4-460c-98f7-20280ee1d65f",
                  "title": "when the profile is loading",
                  "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/platform/user/tests/profile/selectors/hca.unit.spec.js",
                  "file": "/src/platform/user/tests/profile/selectors/hca.unit.spec.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "should return `true`",
                      "fullTitle": "hca compound selectors when `isLoading` executes when the profile is loading should return `true`",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "var state = {\n  hcaEnrollmentStatus: _objectSpread({}, basicEnrollmentStatusState),\n  user: _objectSpread({}, loadingUserState)\n};\nvar isLoading = selectors.isLoading(state);\n(0, _chai.expect)(isLoading).to.be.true;",
                      "err": {},
                      "uuid": "6bcde548-c10b-4f0e-9445-1f66c63bd1a9",
                      "parentUUID": "128ae6a3-5cf4-460c-98f7-20280ee1d65f",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "6bcde548-c10b-4f0e-9445-1f66c63bd1a9"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "4500d447-342a-4fb6-b5e0-75b1b949935c",
                  "title": "when neither the profile or enrollment status is loading",
                  "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/platform/user/tests/profile/selectors/hca.unit.spec.js",
                  "file": "/src/platform/user/tests/profile/selectors/hca.unit.spec.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "should return `false`",
                      "fullTitle": "hca compound selectors when `isLoading` executes when neither the profile or enrollment status is loading should return `false`",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "slow",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "var state = {\n  hcaEnrollmentStatus: _objectSpread({}, basicEnrollmentStatusState),\n  user: _objectSpread({}, loggedOutUserState)\n};\nvar isLoading = selectors.isLoading(state);\n(0, _chai.expect)(isLoading).to.be.false;",
                      "err": {},
                      "uuid": "dfcf027f-53fb-4b1b-98b6-869ff66a22f4",
                      "parentUUID": "4500d447-342a-4fb6-b5e0-75b1b949935c",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "dfcf027f-53fb-4b1b-98b6-869ff66a22f4"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                }
              ],
              "passes": [],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "d0f2f3b8-4305-4252-9929-59ecee15f63e",
              "title": "when `isUserLOA1` executes",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/platform/user/tests/profile/selectors/hca.unit.spec.js",
              "file": "/src/platform/user/tests/profile/selectors/hca.unit.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [],
              "suites": [
                {
                  "uuid": "29757171-9a38-4f4e-8004-302712db58f4",
                  "title": "when the user is logged out",
                  "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/platform/user/tests/profile/selectors/hca.unit.spec.js",
                  "file": "/src/platform/user/tests/profile/selectors/hca.unit.spec.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "should return `false`",
                      "fullTitle": "hca compound selectors when `isUserLOA1` executes when the user is logged out should return `false`",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "var state = {\n  hcaEnrollmentStatus: _objectSpread({}, basicEnrollmentStatusState),\n  user: _objectSpread({}, loggedOutUserState)\n};\nvar isLOA1 = selectors.isUserLOA1(state);\n(0, _chai.expect)(isLOA1).to.be.false;",
                      "err": {},
                      "uuid": "d0aeccce-afd1-4d56-8c24-72549eb16ab4",
                      "parentUUID": "29757171-9a38-4f4e-8004-302712db58f4",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "d0aeccce-afd1-4d56-8c24-72549eb16ab4"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "d3ac0c7c-38ce-4e80-ae20-b2bb7d4d3ff1",
                  "title": "when the user is logged in",
                  "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/platform/user/tests/profile/selectors/hca.unit.spec.js",
                  "file": "/src/platform/user/tests/profile/selectors/hca.unit.spec.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [],
                  "suites": [
                    {
                      "uuid": "852c1759-34ba-48cf-8bd5-302aea67b542",
                      "title": "when the enrollment status is loading",
                      "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/platform/user/tests/profile/selectors/hca.unit.spec.js",
                      "file": "/src/platform/user/tests/profile/selectors/hca.unit.spec.js",
                      "beforeHooks": [],
                      "afterHooks": [],
                      "tests": [
                        {
                          "title": "should return `false`",
                          "fullTitle": "hca compound selectors when `isUserLOA1` executes when the user is logged in when the enrollment status is loading should return `false`",
                          "timedOut": false,
                          "duration": 0,
                          "state": "passed",
                          "speed": "fast",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "var state = {\n  hcaEnrollmentStatus: _objectSpread(_objectSpread({}, basicEnrollmentStatusState), {}, {\n    isLoadingApplicationStatus: true\n  }),\n  user: _objectSpread({}, LOA1UserState)\n};\nvar isLOA1 = selectors.isUserLOA1(state);\n(0, _chai.expect)(isLOA1).to.be.false;",
                          "err": {},
                          "uuid": "fc48b790-d20e-43aa-bf2c-90bf4d7560f7",
                          "parentUUID": "852c1759-34ba-48cf-8bd5-302aea67b542",
                          "isHook": false,
                          "skipped": false
                        }
                      ],
                      "suites": [],
                      "passes": [
                        "fc48b790-d20e-43aa-bf2c-90bf4d7560f7"
                      ],
                      "failures": [],
                      "pending": [],
                      "skipped": [],
                      "duration": 0,
                      "root": false,
                      "rootEmpty": false,
                      "_timeout": 10000
                    },
                    {
                      "uuid": "046d42e1-7673-4f64-922a-ead0267fb017",
                      "title": "when the profile is loading",
                      "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/platform/user/tests/profile/selectors/hca.unit.spec.js",
                      "file": "/src/platform/user/tests/profile/selectors/hca.unit.spec.js",
                      "beforeHooks": [],
                      "afterHooks": [],
                      "tests": [
                        {
                          "title": "should return `false`",
                          "fullTitle": "hca compound selectors when `isUserLOA1` executes when the user is logged in when the profile is loading should return `false`",
                          "timedOut": false,
                          "duration": 1,
                          "state": "passed",
                          "speed": "slow",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "var state = {\n  hcaEnrollmentStatus: _objectSpread({}, basicEnrollmentStatusState),\n  user: _objectSpread({}, loadingUserState)\n};\nvar isLOA1 = selectors.isUserLOA1(state);\n(0, _chai.expect)(isLOA1).to.be.false;",
                          "err": {},
                          "uuid": "c0dd1ea5-ea5e-4bf7-b86f-06d972f37c40",
                          "parentUUID": "046d42e1-7673-4f64-922a-ead0267fb017",
                          "isHook": false,
                          "skipped": false
                        }
                      ],
                      "suites": [],
                      "passes": [
                        "c0dd1ea5-ea5e-4bf7-b86f-06d972f37c40"
                      ],
                      "failures": [],
                      "pending": [],
                      "skipped": [],
                      "duration": 1,
                      "root": false,
                      "rootEmpty": false,
                      "_timeout": 10000
                    },
                    {
                      "uuid": "b87af02c-d530-41ae-bb78-28b8cf44477e",
                      "title": "when everything has loaded",
                      "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/platform/user/tests/profile/selectors/hca.unit.spec.js",
                      "file": "/src/platform/user/tests/profile/selectors/hca.unit.spec.js",
                      "beforeHooks": [],
                      "afterHooks": [],
                      "tests": [],
                      "suites": [
                        {
                          "uuid": "9223ae91-4244-4a2a-b08f-52c9d38c1801",
                          "title": "when the user is LOA1",
                          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/platform/user/tests/profile/selectors/hca.unit.spec.js",
                          "file": "/src/platform/user/tests/profile/selectors/hca.unit.spec.js",
                          "beforeHooks": [],
                          "afterHooks": [],
                          "tests": [
                            {
                              "title": "should return `true`",
                              "fullTitle": "hca compound selectors when `isUserLOA1` executes when the user is logged in when everything has loaded when the user is LOA1 should return `true`",
                              "timedOut": false,
                              "duration": 0,
                              "state": "passed",
                              "speed": "fast",
                              "pass": true,
                              "fail": false,
                              "pending": false,
                              "context": null,
                              "code": "var state = {\n  hcaEnrollmentStatus: _objectSpread({}, basicEnrollmentStatusState),\n  user: _objectSpread({}, LOA1UserState)\n};\nvar isLOA1 = selectors.isUserLOA1(state);\n(0, _chai.expect)(isLOA1).to.be.true;",
                              "err": {},
                              "uuid": "f5274448-a1a7-42fe-8445-ae6b11f3c39b",
                              "parentUUID": "9223ae91-4244-4a2a-b08f-52c9d38c1801",
                              "isHook": false,
                              "skipped": false
                            }
                          ],
                          "suites": [],
                          "passes": [
                            "f5274448-a1a7-42fe-8445-ae6b11f3c39b"
                          ],
                          "failures": [],
                          "pending": [],
                          "skipped": [],
                          "duration": 0,
                          "root": false,
                          "rootEmpty": false,
                          "_timeout": 10000
                        },
                        {
                          "uuid": "ca178749-eda1-4127-b574-44d31a21ad6f",
                          "title": "when the user is LOA3",
                          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/platform/user/tests/profile/selectors/hca.unit.spec.js",
                          "file": "/src/platform/user/tests/profile/selectors/hca.unit.spec.js",
                          "beforeHooks": [],
                          "afterHooks": [],
                          "tests": [
                            {
                              "title": "should return `false`",
                              "fullTitle": "hca compound selectors when `isUserLOA1` executes when the user is logged in when everything has loaded when the user is LOA3 should return `false`",
                              "timedOut": false,
                              "duration": 0,
                              "state": "passed",
                              "speed": "fast",
                              "pass": true,
                              "fail": false,
                              "pending": false,
                              "context": null,
                              "code": "var state = {\n  hcaEnrollmentStatus: _objectSpread({}, basicEnrollmentStatusState),\n  user: _objectSpread({}, LOA3UserState)\n};\nvar isLOA1 = selectors.isUserLOA1(state);\n(0, _chai.expect)(isLOA1).to.be.false;",
                              "err": {},
                              "uuid": "f30209bc-5b23-4d42-a8b4-e3120ddd4080",
                              "parentUUID": "ca178749-eda1-4127-b574-44d31a21ad6f",
                              "isHook": false,
                              "skipped": false
                            }
                          ],
                          "suites": [],
                          "passes": [
                            "f30209bc-5b23-4d42-a8b4-e3120ddd4080"
                          ],
                          "failures": [],
                          "pending": [],
                          "skipped": [],
                          "duration": 0,
                          "root": false,
                          "rootEmpty": false,
                          "_timeout": 10000
                        }
                      ],
                      "passes": [],
                      "failures": [],
                      "pending": [],
                      "skipped": [],
                      "duration": 0,
                      "root": false,
                      "rootEmpty": false,
                      "_timeout": 10000
                    }
                  ],
                  "passes": [],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                }
              ],
              "passes": [],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "7e1d77a6-2a45-41d2-ab24-c2d097dcea46",
              "title": "when `isUserLOA3` executes",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/platform/user/tests/profile/selectors/hca.unit.spec.js",
              "file": "/src/platform/user/tests/profile/selectors/hca.unit.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [],
              "suites": [
                {
                  "uuid": "63117863-b638-4c9f-a3b7-790d24737422",
                  "title": "when the user is logged out",
                  "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/platform/user/tests/profile/selectors/hca.unit.spec.js",
                  "file": "/src/platform/user/tests/profile/selectors/hca.unit.spec.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "should return `false`",
                      "fullTitle": "hca compound selectors when `isUserLOA3` executes when the user is logged out should return `false`",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "var state = {\n  hcaEnrollmentStatus: _objectSpread({}, basicEnrollmentStatusState),\n  user: _objectSpread({}, loggedOutUserState)\n};\nvar isLOA3 = selectors.isUserLOA3(state);\n(0, _chai.expect)(isLOA3).to.be.false;",
                      "err": {},
                      "uuid": "17cb1ab5-c23c-42ac-83f4-03a4ed3de9f9",
                      "parentUUID": "63117863-b638-4c9f-a3b7-790d24737422",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "17cb1ab5-c23c-42ac-83f4-03a4ed3de9f9"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "605efcd5-3b8e-47d5-b8b9-4ac72740199f",
                  "title": "when the user is logged in",
                  "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/platform/user/tests/profile/selectors/hca.unit.spec.js",
                  "file": "/src/platform/user/tests/profile/selectors/hca.unit.spec.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [],
                  "suites": [
                    {
                      "uuid": "84ebe671-2fd0-4e45-9e8f-c3ea7a8692eb",
                      "title": "when the enrollment status is loading",
                      "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/platform/user/tests/profile/selectors/hca.unit.spec.js",
                      "file": "/src/platform/user/tests/profile/selectors/hca.unit.spec.js",
                      "beforeHooks": [],
                      "afterHooks": [],
                      "tests": [],
                      "suites": [
                        {
                          "uuid": "c60497a0-c67b-4e51-8006-674e1a96b028",
                          "title": "when the user has resolved",
                          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/platform/user/tests/profile/selectors/hca.unit.spec.js",
                          "file": "/src/platform/user/tests/profile/selectors/hca.unit.spec.js",
                          "beforeHooks": [],
                          "afterHooks": [],
                          "tests": [
                            {
                              "title": "should return `true`",
                              "fullTitle": "hca compound selectors when `isUserLOA3` executes when the user is logged in when the enrollment status is loading when the user has resolved should return `true`",
                              "timedOut": false,
                              "duration": 0,
                              "state": "passed",
                              "speed": "fast",
                              "pass": true,
                              "fail": false,
                              "pending": false,
                              "context": null,
                              "code": "var state = {\n  hcaEnrollmentStatus: _objectSpread(_objectSpread({}, basicEnrollmentStatusState), {}, {\n    isLoadingApplicationStatus: true\n  }),\n  user: _objectSpread({}, LOA3UserState)\n};\nvar isLOA3 = selectors.isUserLOA3(state);\n(0, _chai.expect)(isLOA3).to.be.true;",
                              "err": {},
                              "uuid": "d7ec4923-ee6c-4d51-9919-60c9593b8e54",
                              "parentUUID": "c60497a0-c67b-4e51-8006-674e1a96b028",
                              "isHook": false,
                              "skipped": false
                            }
                          ],
                          "suites": [],
                          "passes": [
                            "d7ec4923-ee6c-4d51-9919-60c9593b8e54"
                          ],
                          "failures": [],
                          "pending": [],
                          "skipped": [],
                          "duration": 0,
                          "root": false,
                          "rootEmpty": false,
                          "_timeout": 10000
                        }
                      ],
                      "passes": [],
                      "failures": [],
                      "pending": [],
                      "skipped": [],
                      "duration": 0,
                      "root": false,
                      "rootEmpty": false,
                      "_timeout": 10000
                    },
                    {
                      "uuid": "fa27f854-429e-4265-86b8-af88742c7483",
                      "title": "when the profile is loading",
                      "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/platform/user/tests/profile/selectors/hca.unit.spec.js",
                      "file": "/src/platform/user/tests/profile/selectors/hca.unit.spec.js",
                      "beforeHooks": [],
                      "afterHooks": [],
                      "tests": [
                        {
                          "title": "should return `false`",
                          "fullTitle": "hca compound selectors when `isUserLOA3` executes when the user is logged in when the profile is loading should return `false`",
                          "timedOut": false,
                          "duration": 0,
                          "state": "passed",
                          "speed": "fast",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "var state = {\n  hcaEnrollmentStatus: _objectSpread({}, basicEnrollmentStatusState),\n  user: _objectSpread({}, loadingUserState)\n};\nvar isLOA3 = selectors.isUserLOA3(state);\n(0, _chai.expect)(isLOA3).to.be.false;",
                          "err": {},
                          "uuid": "283ccefb-d65e-4f05-b2a6-9265e3b128eb",
                          "parentUUID": "fa27f854-429e-4265-86b8-af88742c7483",
                          "isHook": false,
                          "skipped": false
                        }
                      ],
                      "suites": [],
                      "passes": [
                        "283ccefb-d65e-4f05-b2a6-9265e3b128eb"
                      ],
                      "failures": [],
                      "pending": [],
                      "skipped": [],
                      "duration": 0,
                      "root": false,
                      "rootEmpty": false,
                      "_timeout": 10000
                    },
                    {
                      "uuid": "24e2dc1f-4a9c-4328-a6ca-402bc08a38f2",
                      "title": "when everything has loaded",
                      "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/platform/user/tests/profile/selectors/hca.unit.spec.js",
                      "file": "/src/platform/user/tests/profile/selectors/hca.unit.spec.js",
                      "beforeHooks": [],
                      "afterHooks": [],
                      "tests": [],
                      "suites": [
                        {
                          "uuid": "9551471f-01a8-42f7-b5b2-22ac48f81824",
                          "title": "when the user is LOA1",
                          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/platform/user/tests/profile/selectors/hca.unit.spec.js",
                          "file": "/src/platform/user/tests/profile/selectors/hca.unit.spec.js",
                          "beforeHooks": [],
                          "afterHooks": [],
                          "tests": [
                            {
                              "title": "should return `false`",
                              "fullTitle": "hca compound selectors when `isUserLOA3` executes when the user is logged in when everything has loaded when the user is LOA1 should return `false`",
                              "timedOut": false,
                              "duration": 0,
                              "state": "passed",
                              "speed": "fast",
                              "pass": true,
                              "fail": false,
                              "pending": false,
                              "context": null,
                              "code": "var state = {\n  hcaEnrollmentStatus: _objectSpread({}, basicEnrollmentStatusState),\n  user: _objectSpread({}, LOA1UserState)\n};\nvar isLOA3 = selectors.isUserLOA3(state);\n(0, _chai.expect)(isLOA3).to.be.false;",
                              "err": {},
                              "uuid": "21e0cbaf-942e-42a1-848b-af1930a695df",
                              "parentUUID": "9551471f-01a8-42f7-b5b2-22ac48f81824",
                              "isHook": false,
                              "skipped": false
                            }
                          ],
                          "suites": [],
                          "passes": [
                            "21e0cbaf-942e-42a1-848b-af1930a695df"
                          ],
                          "failures": [],
                          "pending": [],
                          "skipped": [],
                          "duration": 0,
                          "root": false,
                          "rootEmpty": false,
                          "_timeout": 10000
                        },
                        {
                          "uuid": "9eb65f05-b671-4021-8f7f-4f0fe4ac8352",
                          "title": "when the user is LOA3",
                          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/platform/user/tests/profile/selectors/hca.unit.spec.js",
                          "file": "/src/platform/user/tests/profile/selectors/hca.unit.spec.js",
                          "beforeHooks": [],
                          "afterHooks": [],
                          "tests": [
                            {
                              "title": "should return `true`",
                              "fullTitle": "hca compound selectors when `isUserLOA3` executes when the user is logged in when everything has loaded when the user is LOA3 should return `true`",
                              "timedOut": false,
                              "duration": 0,
                              "state": "passed",
                              "speed": "fast",
                              "pass": true,
                              "fail": false,
                              "pending": false,
                              "context": null,
                              "code": "var state = {\n  hcaEnrollmentStatus: _objectSpread({}, basicEnrollmentStatusState),\n  user: _objectSpread({}, LOA3UserState)\n};\nvar isLOA3 = selectors.isUserLOA3(state);\n(0, _chai.expect)(isLOA3).to.be.true;",
                              "err": {},
                              "uuid": "92ff6021-c3cf-4c1c-a0c9-7c66adcb7bd5",
                              "parentUUID": "9eb65f05-b671-4021-8f7f-4f0fe4ac8352",
                              "isHook": false,
                              "skipped": false
                            }
                          ],
                          "suites": [],
                          "passes": [
                            "92ff6021-c3cf-4c1c-a0c9-7c66adcb7bd5"
                          ],
                          "failures": [],
                          "pending": [],
                          "skipped": [],
                          "duration": 0,
                          "root": false,
                          "rootEmpty": false,
                          "_timeout": 10000
                        },
                        {
                          "uuid": "7273e3ee-e12c-4990-85bc-d6a4dbd9cebf",
                          "title": "when the user is not found in ESR",
                          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/platform/user/tests/profile/selectors/hca.unit.spec.js",
                          "file": "/src/platform/user/tests/profile/selectors/hca.unit.spec.js",
                          "beforeHooks": [],
                          "afterHooks": [],
                          "tests": [
                            {
                              "title": "should return `false`",
                              "fullTitle": "hca compound selectors when `isUserLOA3` executes when the user is logged in when everything has loaded when the user is not found in ESR should return `false`",
                              "timedOut": false,
                              "duration": 0,
                              "state": "passed",
                              "speed": "fast",
                              "pass": true,
                              "fail": false,
                              "pending": false,
                              "context": null,
                              "code": "var state = {\n  hcaEnrollmentStatus: _objectSpread(_objectSpread({}, basicEnrollmentStatusState), {}, {\n    noESRRecordFound: true\n  }),\n  user: _objectSpread({}, LOA3UserState)\n};\nvar isLOA3 = selectors.isUserLOA3(state);\n(0, _chai.expect)(isLOA3).to.be.false;",
                              "err": {},
                              "uuid": "f5438e8c-7952-4497-be0e-71278dcd4bfd",
                              "parentUUID": "7273e3ee-e12c-4990-85bc-d6a4dbd9cebf",
                              "isHook": false,
                              "skipped": false
                            }
                          ],
                          "suites": [],
                          "passes": [
                            "f5438e8c-7952-4497-be0e-71278dcd4bfd"
                          ],
                          "failures": [],
                          "pending": [],
                          "skipped": [],
                          "duration": 0,
                          "root": false,
                          "rootEmpty": false,
                          "_timeout": 10000
                        }
                      ],
                      "passes": [],
                      "failures": [],
                      "pending": [],
                      "skipped": [],
                      "duration": 0,
                      "root": false,
                      "rootEmpty": false,
                      "_timeout": 10000
                    },
                    {
                      "uuid": "9ad37acd-89bf-480b-9a01-46dcc246a899",
                      "title": "when there is a server error",
                      "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/platform/user/tests/profile/selectors/hca.unit.spec.js",
                      "file": "/src/platform/user/tests/profile/selectors/hca.unit.spec.js",
                      "beforeHooks": [],
                      "afterHooks": [],
                      "tests": [
                        {
                          "title": "should return `false`",
                          "fullTitle": "hca compound selectors when `isUserLOA3` executes when the user is logged in when there is a server error should return `false`",
                          "timedOut": false,
                          "duration": 0,
                          "state": "passed",
                          "speed": "fast",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "var state = {\n  hcaEnrollmentStatus: _objectSpread(_objectSpread({}, basicEnrollmentStatusState), {}, {\n    hasServerError: true\n  }),\n  user: _objectSpread({}, LOA3UserState)\n};\nvar isLOA3 = selectors.isUserLOA3(state);\n(0, _chai.expect)(isLOA3).to.be.false;",
                          "err": {},
                          "uuid": "9a87e932-b438-467c-9e2d-8a469b8b954d",
                          "parentUUID": "9ad37acd-89bf-480b-9a01-46dcc246a899",
                          "isHook": false,
                          "skipped": false
                        }
                      ],
                      "suites": [],
                      "passes": [
                        "9a87e932-b438-467c-9e2d-8a469b8b954d"
                      ],
                      "failures": [],
                      "pending": [],
                      "skipped": [],
                      "duration": 0,
                      "root": false,
                      "rootEmpty": false,
                      "_timeout": 10000
                    }
                  ],
                  "passes": [],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                }
              ],
              "passes": [],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "5bfcd407-84e2-4fb3-bd8f-1f3c492503b8",
              "title": "when `shouldShowGetStartedContent` executes",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/platform/user/tests/profile/selectors/hca.unit.spec.js",
              "file": "/src/platform/user/tests/profile/selectors/hca.unit.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [],
              "suites": [
                {
                  "uuid": "df890e04-c6df-4bd5-983a-787c780fcce9",
                  "title": "when the user is logged out",
                  "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/platform/user/tests/profile/selectors/hca.unit.spec.js",
                  "file": "/src/platform/user/tests/profile/selectors/hca.unit.spec.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "should return `true`",
                      "fullTitle": "hca compound selectors when `shouldShowGetStartedContent` executes when the user is logged out should return `true`",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "var state = {\n  hcaEnrollmentStatus: _objectSpread({}, basicEnrollmentStatusState),\n  user: _objectSpread({}, loggedOutUserState)\n};\nvar shouldShowGetStartedContent = selectors.shouldShowGetStartedContent(state);\n(0, _chai.expect)(shouldShowGetStartedContent).to.be.true;",
                      "err": {},
                      "uuid": "b783f741-f427-4259-a6f2-042df896e9e9",
                      "parentUUID": "df890e04-c6df-4bd5-983a-787c780fcce9",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "b783f741-f427-4259-a6f2-042df896e9e9"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "3148f8b4-e481-4d8c-bf46-236f2d55241b",
                  "title": "when the user is logged in",
                  "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/platform/user/tests/profile/selectors/hca.unit.spec.js",
                  "file": "/src/platform/user/tests/profile/selectors/hca.unit.spec.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [],
                  "suites": [
                    {
                      "uuid": "81d2a85b-b762-4db8-8b39-963778bdbad2",
                      "title": "default behavior",
                      "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/platform/user/tests/profile/selectors/hca.unit.spec.js",
                      "file": "/src/platform/user/tests/profile/selectors/hca.unit.spec.js",
                      "beforeHooks": [],
                      "afterHooks": [],
                      "tests": [
                        {
                          "title": "should return `false`",
                          "fullTitle": "hca compound selectors when `shouldShowGetStartedContent` executes when the user is logged in default behavior should return `false`",
                          "timedOut": false,
                          "duration": 0,
                          "state": "passed",
                          "speed": "fast",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "var state = {\n  hcaEnrollmentStatus: _objectSpread({}, basicEnrollmentStatusState),\n  user: _objectSpread({}, LOA3UserState)\n};\nvar shouldShowGetStartedContent = selectors.shouldShowGetStartedContent(state);\n(0, _chai.expect)(shouldShowGetStartedContent).to.be.false;",
                          "err": {},
                          "uuid": "0a6a5808-26da-45f5-beb7-5f6f83a6fd89",
                          "parentUUID": "81d2a85b-b762-4db8-8b39-963778bdbad2",
                          "isHook": false,
                          "skipped": false
                        }
                      ],
                      "suites": [],
                      "passes": [
                        "0a6a5808-26da-45f5-beb7-5f6f83a6fd89"
                      ],
                      "failures": [],
                      "pending": [],
                      "skipped": [],
                      "duration": 0,
                      "root": false,
                      "rootEmpty": false,
                      "_timeout": 10000
                    },
                    {
                      "uuid": "61f89f37-343b-4491-aa0f-e28796f16146",
                      "title": "when there is a server error",
                      "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/platform/user/tests/profile/selectors/hca.unit.spec.js",
                      "file": "/src/platform/user/tests/profile/selectors/hca.unit.spec.js",
                      "beforeHooks": [],
                      "afterHooks": [],
                      "tests": [
                        {
                          "title": "should return `true`",
                          "fullTitle": "hca compound selectors when `shouldShowGetStartedContent` executes when the user is logged in when there is a server error should return `true`",
                          "timedOut": false,
                          "duration": 1,
                          "state": "passed",
                          "speed": "slow",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "var state = {\n  hcaEnrollmentStatus: _objectSpread(_objectSpread({}, basicEnrollmentStatusState), {}, {\n    hasServerError: true\n  }),\n  user: _objectSpread({}, LOA3UserState)\n};\nvar shouldShowGetStartedContent = selectors.shouldShowGetStartedContent(state);\n(0, _chai.expect)(shouldShowGetStartedContent).to.be.true;",
                          "err": {},
                          "uuid": "4f700219-a253-4c47-88ea-ace6f797fd25",
                          "parentUUID": "61f89f37-343b-4491-aa0f-e28796f16146",
                          "isHook": false,
                          "skipped": false
                        }
                      ],
                      "suites": [],
                      "passes": [
                        "4f700219-a253-4c47-88ea-ace6f797fd25"
                      ],
                      "failures": [],
                      "pending": [],
                      "skipped": [],
                      "duration": 1,
                      "root": false,
                      "rootEmpty": false,
                      "_timeout": 10000
                    },
                    {
                      "uuid": "b02d9bb4-fd01-4969-a9be-233f3d6c53c5",
                      "title": "when the user is not found in ESR",
                      "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/platform/user/tests/profile/selectors/hca.unit.spec.js",
                      "file": "/src/platform/user/tests/profile/selectors/hca.unit.spec.js",
                      "beforeHooks": [],
                      "afterHooks": [],
                      "tests": [
                        {
                          "title": "should return `true`",
                          "fullTitle": "hca compound selectors when `shouldShowGetStartedContent` executes when the user is logged in when the user is not found in ESR should return `true`",
                          "timedOut": false,
                          "duration": 1,
                          "state": "passed",
                          "speed": "slow",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "var state = {\n  hcaEnrollmentStatus: _objectSpread(_objectSpread({}, basicEnrollmentStatusState), {}, {\n    noESRRecordFound: true\n  }),\n  user: _objectSpread({}, LOA3UserState)\n};\nvar shouldShowGetStartedContent = selectors.shouldShowGetStartedContent(state);\n(0, _chai.expect)(shouldShowGetStartedContent).to.be.true;",
                          "err": {},
                          "uuid": "6e35bc6a-fcc2-4f52-81b5-a4cff8c78533",
                          "parentUUID": "b02d9bb4-fd01-4969-a9be-233f3d6c53c5",
                          "isHook": false,
                          "skipped": false
                        }
                      ],
                      "suites": [],
                      "passes": [
                        "6e35bc6a-fcc2-4f52-81b5-a4cff8c78533"
                      ],
                      "failures": [],
                      "pending": [],
                      "skipped": [],
                      "duration": 1,
                      "root": false,
                      "rootEmpty": false,
                      "_timeout": 10000
                    }
                  ],
                  "passes": [],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                }
              ],
              "passes": [],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "5469803d-3c36-49b7-a8cb-472cb9ef47a1",
              "title": "when `shouldHideFormFooter` executes",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/platform/user/tests/profile/selectors/hca.unit.spec.js",
              "file": "/src/platform/user/tests/profile/selectors/hca.unit.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [],
              "suites": [
                {
                  "uuid": "5e580912-c2cf-4982-8747-23589dbc13d7",
                  "title": "when the enrollment status is loading",
                  "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/platform/user/tests/profile/selectors/hca.unit.spec.js",
                  "file": "/src/platform/user/tests/profile/selectors/hca.unit.spec.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "should return `false`",
                      "fullTitle": "hca compound selectors when `shouldHideFormFooter` executes when the enrollment status is loading should return `false`",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "var state = {\n  hcaEnrollmentStatus: _objectSpread(_objectSpread({}, basicEnrollmentStatusState), {}, {\n    isLoadingApplicationStatus: true\n  }),\n  user: _objectSpread({}, LOA1UserState)\n};\nvar shouldHideFormFooter = selectors.shouldHideFormFooter(state);\n(0, _chai.expect)(shouldHideFormFooter).to.be.false;",
                      "err": {},
                      "uuid": "b4d1a001-b15f-47ef-a02e-91a63de9eb62",
                      "parentUUID": "5e580912-c2cf-4982-8747-23589dbc13d7",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "b4d1a001-b15f-47ef-a02e-91a63de9eb62"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "a8cf8722-07c9-49b1-a539-27f47c80ec0a",
                  "title": "when the profile is loading",
                  "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/platform/user/tests/profile/selectors/hca.unit.spec.js",
                  "file": "/src/platform/user/tests/profile/selectors/hca.unit.spec.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "should return `false`",
                      "fullTitle": "hca compound selectors when `shouldHideFormFooter` executes when the profile is loading should return `false`",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "var state = {\n  hcaEnrollmentStatus: _objectSpread({}, basicEnrollmentStatusState),\n  user: _objectSpread({}, loadingUserState)\n};\nvar shouldHideFormFooter = selectors.shouldHideFormFooter(state);\n(0, _chai.expect)(shouldHideFormFooter).to.be.false;",
                      "err": {},
                      "uuid": "e8db19f8-dcac-438c-96de-a51d7cb267c3",
                      "parentUUID": "a8cf8722-07c9-49b1-a539-27f47c80ec0a",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "e8db19f8-dcac-438c-96de-a51d7cb267c3"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "555ac046-4cfc-4e0e-a8a9-23bdc8545a06",
                  "title": "when the user is LOA1",
                  "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/platform/user/tests/profile/selectors/hca.unit.spec.js",
                  "file": "/src/platform/user/tests/profile/selectors/hca.unit.spec.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "should return `true`",
                      "fullTitle": "hca compound selectors when `shouldHideFormFooter` executes when the user is LOA1 should return `true`",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "var state = {\n  hcaEnrollmentStatus: _objectSpread({}, basicEnrollmentStatusState),\n  user: _objectSpread({}, LOA1UserState)\n};\nvar shouldHideFormFooter = selectors.shouldHideFormFooter(state);\n(0, _chai.expect)(shouldHideFormFooter).to.be.true;",
                      "err": {},
                      "uuid": "2c913bc7-ec20-4d47-88cf-96a04491eb2d",
                      "parentUUID": "555ac046-4cfc-4e0e-a8a9-23bdc8545a06",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "2c913bc7-ec20-4d47-88cf-96a04491eb2d"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "00d0cb29-7c5f-4e70-abe3-265cb6e4b897",
                  "title": "when the user is LOA3",
                  "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/platform/user/tests/profile/selectors/hca.unit.spec.js",
                  "file": "/src/platform/user/tests/profile/selectors/hca.unit.spec.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [],
                  "suites": [
                    {
                      "uuid": "5c279d31-160d-4a11-b52c-fb439dce36a7",
                      "title": "when the reapply content is not rendered",
                      "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/platform/user/tests/profile/selectors/hca.unit.spec.js",
                      "file": "/src/platform/user/tests/profile/selectors/hca.unit.spec.js",
                      "beforeHooks": [],
                      "afterHooks": [],
                      "tests": [
                        {
                          "title": "should return `true`",
                          "fullTitle": "hca compound selectors when `shouldHideFormFooter` executes when the user is LOA3 when the reapply content is not rendered should return `true`",
                          "timedOut": false,
                          "duration": 0,
                          "state": "passed",
                          "speed": "fast",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "var state = {\n  hcaEnrollmentStatus: _objectSpread({}, basicEnrollmentStatusState),\n  user: _objectSpread({}, LOA3UserState)\n};\nvar shouldHideFormFooter = selectors.shouldHideFormFooter(state);\n(0, _chai.expect)(shouldHideFormFooter).to.be.true;",
                          "err": {},
                          "uuid": "852676e4-2b9d-4339-a741-363f60be1388",
                          "parentUUID": "5c279d31-160d-4a11-b52c-fb439dce36a7",
                          "isHook": false,
                          "skipped": false
                        }
                      ],
                      "suites": [],
                      "passes": [
                        "852676e4-2b9d-4339-a741-363f60be1388"
                      ],
                      "failures": [],
                      "pending": [],
                      "skipped": [],
                      "duration": 0,
                      "root": false,
                      "rootEmpty": false,
                      "_timeout": 10000
                    },
                    {
                      "uuid": "516a98b2-63c7-4b71-b84e-6c7b4da47151",
                      "title": "when the reapply content is rendered",
                      "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/platform/user/tests/profile/selectors/hca.unit.spec.js",
                      "file": "/src/platform/user/tests/profile/selectors/hca.unit.spec.js",
                      "beforeHooks": [],
                      "afterHooks": [],
                      "tests": [
                        {
                          "title": "should return `false`",
                          "fullTitle": "hca compound selectors when `shouldHideFormFooter` executes when the user is LOA3 when the reapply content is rendered should return `false`",
                          "timedOut": false,
                          "duration": 0,
                          "state": "passed",
                          "speed": "fast",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "var state = {\n  hcaEnrollmentStatus: _objectSpread(_objectSpread({}, basicEnrollmentStatusState), {}, {\n    showReapplyContent: true\n  }),\n  user: _objectSpread({}, LOA3UserState)\n};\nvar shouldHideFormFooter = selectors.shouldHideFormFooter(state);\n(0, _chai.expect)(shouldHideFormFooter).to.be.false;",
                          "err": {},
                          "uuid": "d79ab000-42a3-479b-a1a1-9e066f977f2b",
                          "parentUUID": "516a98b2-63c7-4b71-b84e-6c7b4da47151",
                          "isHook": false,
                          "skipped": false
                        }
                      ],
                      "suites": [],
                      "passes": [
                        "d79ab000-42a3-479b-a1a1-9e066f977f2b"
                      ],
                      "failures": [],
                      "pending": [],
                      "skipped": [],
                      "duration": 0,
                      "root": false,
                      "rootEmpty": false,
                      "_timeout": 10000
                    }
                  ],
                  "passes": [],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                }
              ],
              "passes": [],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "ee648ebf-03d8-4a45-8b4c-7f7f6753d6bf",
          "title": "Profile utilities",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/platform/user/tests/profile/utilities/index.unit.spec.js",
          "file": "/src/platform/user/tests/profile/utilities/index.unit.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "f1cc8ca5-d10e-4ea3-b935-834af0a82399",
              "title": "mapRawUserDataToState",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/platform/user/tests/profile/utilities/index.unit.spec.js",
              "file": "/src/platform/user/tests/profile/utilities/index.unit.spec.js",
              "beforeHooks": [
                {
                  "title": "\"before each\" hook in \"mapRawUserDataToState\"",
                  "fullTitle": "Profile utilities mapRawUserDataToState \"before each\" hook in \"mapRawUserDataToState\"",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "oldLocation = document.location.href;\nglobal.dom.reconfigure({\n  url: 'https://www.va.gov'\n});",
                  "err": {},
                  "uuid": "e65ff890-f1c4-43b1-b05e-ed00093ea7a1",
                  "parentUUID": "f1cc8ca5-d10e-4ea3-b935-834af0a82399",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [
                {
                  "title": "\"after each\" hook in \"mapRawUserDataToState\"",
                  "fullTitle": "Profile utilities mapRawUserDataToState \"after each\" hook in \"mapRawUserDataToState\"",
                  "timedOut": false,
                  "duration": 1,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "global.dom.reconfigure({\n  url: oldLocation\n});",
                  "err": {},
                  "uuid": "f423c73c-6e7e-4ac6-bed9-83f417dce3af",
                  "parentUUID": "f1cc8ca5-d10e-4ea3-b935-834af0a82399",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "tests": [
                {
                  "title": "should map profile",
                  "fullTitle": "Profile utilities mapRawUserDataToState should map profile",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var data = createDefaultData();\nvar mappedData = (0, _utilities.mapRawUserDataToState)({\n  data: data,\n  meta: {\n    errors: null\n  }\n});\n(0, _chai.expect)(mappedData.status).to.equal(data.attributes.va_profile.status);",
                  "err": {},
                  "uuid": "9783f591-ab0c-452a-8167-456a6f518d69",
                  "parentUUID": "f1cc8ca5-d10e-4ea3-b935-834af0a82399",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should map account UUID",
                  "fullTitle": "Profile utilities mapRawUserDataToState should map account UUID",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var data = createDefaultData();\nvar mappedData = (0, _utilities.mapRawUserDataToState)({\n  data: data,\n  meta: {\n    errors: null\n  }\n});\n(0, _chai.expect)(mappedData.accountUuid).to.deep.equal(data.attributes.account.accountUuid);",
                  "err": {},
                  "uuid": "5425796f-849a-4a13-bd26-f300719d7434",
                  "parentUUID": "f1cc8ca5-d10e-4ea3-b935-834af0a82399",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should map veteran status",
                  "fullTitle": "Profile utilities mapRawUserDataToState should map veteran status",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var data = createDefaultData();\nvar mappedData = (0, _utilities.mapRawUserDataToState)({\n  data: data,\n  meta: {\n    errors: null\n  }\n});\n(0, _chai.expect)(mappedData.veteranStatus).to.deep.equal({\n  status: data.attributes.veteran_status.status,\n  isVeteran: data.attributes.veteran_status.is_veteran,\n  servedInMilitary: data.attributes.veteran_status.served_in_military\n});",
                  "err": {},
                  "uuid": "e3ad79a7-aa57-4312-9dfe-ac968cebbb90",
                  "parentUUID": "f1cc8ca5-d10e-4ea3-b935-834af0a82399",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should map vet 360 info",
                  "fullTitle": "Profile utilities mapRawUserDataToState should map vet 360 info",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var data = createDefaultData();\nvar mappedData = (0, _utilities.mapRawUserDataToState)({\n  data: data,\n  meta: {\n    errors: null\n  }\n});\n(0, _chai.expect)(mappedData.vapContactInfo).to.deep.equal(data.attributes.vet360_contact_information);",
                  "err": {},
                  "uuid": "d402955e-01d6-4706-8588-354e54a8d0d3",
                  "parentUUID": "f1cc8ca5-d10e-4ea3-b935-834af0a82399",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should handle upstream VET360/VA Profile server errors",
                  "fullTitle": "Profile utilities mapRawUserDataToState should handle upstream VET360/VA Profile server errors",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var data = createDefaultData();\ndata.attributes.vet360_contact_information = null;\nvar mappedData = (0, _utilities.mapRawUserDataToState)({\n  data: data,\n  meta: {\n    errors: [{\n      externalService: 'VAProfile',\n      startTime: '2020-11-19T17:32:54Z',\n      endTime: null,\n      description: 'VET360_502, 502, Bad Gateway, Received an an invalid response from the upstream server',\n      status: 502\n    }]\n  }\n});\n(0, _chai.expect)(mappedData.vapContactInfo.status).to.equal('SERVER_ERROR');",
                  "err": {},
                  "uuid": "29a48462-3ad2-4157-82e1-9688d918caf3",
                  "parentUUID": "f1cc8ca5-d10e-4ea3-b935-834af0a82399",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should map the facilities if they are set",
                  "fullTitle": "Profile utilities mapRawUserDataToState should map the facilities if they are set",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var data = createDefaultData();\nvar mappedData = (0, _utilities.mapRawUserDataToState)({\n  data: data,\n  meta: {\n    errors: null\n  }\n});\n(0, _chai.expect)(mappedData.facilities).to.deep.equal(data.attributes.va_profile.facilities);",
                  "err": {},
                  "uuid": "4c6cd9e6-110a-4119-aac2-68b28bb4bd08",
                  "parentUUID": "f1cc8ca5-d10e-4ea3-b935-834af0a82399",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should not add facilities if they are not set",
                  "fullTitle": "Profile utilities mapRawUserDataToState should not add facilities if they are not set",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var data = createDefaultData();\ndelete data.attributes.va_profile.facilities;\nvar mappedData = (0, _utilities.mapRawUserDataToState)({\n  data: data,\n  meta: {\n    errors: null\n  }\n});\n(0, _chai.expect)(mappedData.facilities).to.be.undefined;",
                  "err": {},
                  "uuid": "0b3f9a7b-f7ed-4350-a03d-9699129c8d66",
                  "parentUUID": "f1cc8ca5-d10e-4ea3-b935-834af0a82399",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should handle profile error",
                  "fullTitle": "Profile utilities mapRawUserDataToState should handle profile error",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var data = createDefaultData();\ndata.attributes.va_profile = null;\nvar mappedData = (0, _utilities.mapRawUserDataToState)({\n  data: data,\n  meta: {\n    errors: [{\n      externalService: 'MVI',\n      status: 500\n    }]\n  }\n});\n(0, _chai.expect)(mappedData.status).to.equal('SERVER_ERROR');",
                  "err": {},
                  "uuid": "e5b9ddee-058a-4532-920c-b025496c3bb0",
                  "parentUUID": "f1cc8ca5-d10e-4ea3-b935-834af0a82399",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should handle veteran status error",
                  "fullTitle": "Profile utilities mapRawUserDataToState should handle veteran status error",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var data = createDefaultData();\ndata.attributes.veteran_status = null;\nvar mappedData = (0, _utilities.mapRawUserDataToState)({\n  data: data,\n  meta: {\n    errors: [{\n      externalService: 'VAProfile',\n      status: 404\n    }]\n  }\n});\n(0, _chai.expect)(mappedData.veteranStatus.status).to.equal('NOT_FOUND');",
                  "err": {},
                  "uuid": "db5d8d26-fc73-45d0-b5be-f27854266d73",
                  "parentUUID": "f1cc8ca5-d10e-4ea3-b935-834af0a82399",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should handle vet 360 error",
                  "fullTitle": "Profile utilities mapRawUserDataToState should handle vet 360 error",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var data = createDefaultData();\ndata.attributes.vet360_contact_information = null;\nvar mappedData = (0, _utilities.mapRawUserDataToState)({\n  data: data,\n  meta: {\n    errors: [{\n      externalService: 'VAProfile',\n      status: 'SERVER_ERROR'\n    }]\n  }\n});\n(0, _chai.expect)(mappedData.vapContactInfo.status).to.equal('SERVER_ERROR');",
                  "err": {},
                  "uuid": "92c367bc-018c-4ab6-9509-5a3d20a8faac",
                  "parentUUID": "f1cc8ca5-d10e-4ea3-b935-834af0a82399",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "9783f591-ab0c-452a-8167-456a6f518d69",
                "5425796f-849a-4a13-bd26-f300719d7434",
                "e3ad79a7-aa57-4312-9dfe-ac968cebbb90",
                "d402955e-01d6-4706-8588-354e54a8d0d3",
                "29a48462-3ad2-4157-82e1-9688d918caf3",
                "4c6cd9e6-110a-4119-aac2-68b28bb4bd08",
                "0b3f9a7b-f7ed-4350-a03d-9699129c8d66",
                "e5b9ddee-058a-4532-920c-b025496c3bb0",
                "db5d8d26-fc73-45d0-b5be-f27854266d73",
                "92c367bc-018c-4ab6-9509-5a3d20a8faac"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 3,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "c1c4e646-212b-4846-96c1-1c78b1bc074a",
          "title": "user selectors",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/platform/user/tests/selectors.unit.spec.js",
          "file": "/src/platform/user/tests/selectors.unit.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "e908f744-d0c0-4dff-9294-dd523c112e45",
              "title": "selectVAPContactInfo",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/platform/user/tests/selectors.unit.spec.js",
              "file": "/src/platform/user/tests/selectors.unit.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "pulls out the state.profile.vapContactInfo data",
                  "fullTitle": "user selectors selectVAPContactInfo pulls out the state.profile.vapContactInfo data",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var state = {\n  user: {\n    profile: {\n      vapContactInfo: {\n        email: {\n          emailAddress: '123@va.com'\n        }\n      }\n    }\n  }\n};\n(0, _chai.expect)(selectors.selectVAPContactInfo(state)).to.deep.equal(state.user.profile.vapContactInfo);",
                  "err": {},
                  "uuid": "dded5e99-5d93-4d9f-8151-fabdf3f5f91f",
                  "parentUUID": "e908f744-d0c0-4dff-9294-dd523c112e45",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "returns undefined if there is no vapContactInfo on the profile",
                  "fullTitle": "user selectors selectVAPContactInfo returns undefined if there is no vapContactInfo on the profile",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var state = {\n  user: {\n    profile: {}\n  }\n};\n(0, _chai.expect)(selectors.selectVAPContactInfo(state)).to.be.undefined;",
                  "err": {},
                  "uuid": "40daa3aa-5ba1-4cf4-838c-f4340247a037",
                  "parentUUID": "e908f744-d0c0-4dff-9294-dd523c112e45",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "dded5e99-5d93-4d9f-8151-fabdf3f5f91f",
                "40daa3aa-5ba1-4cf4-838c-f4340247a037"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "8818ac5a-d5fe-4c4c-9bc3-690ddf068e57",
              "title": "hasVAPServiceConnectionError",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/platform/user/tests/selectors.unit.spec.js",
              "file": "/src/platform/user/tests/selectors.unit.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "returns `true` if `user.profile.vapContactInfo.status === \"SERVER_ERROR\"`",
                  "fullTitle": "user selectors hasVAPServiceConnectionError returns `true` if `user.profile.vapContactInfo.status === \"SERVER_ERROR\"`",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var state = {\n  user: {\n    profile: {\n      vapContactInfo: {\n        status: 'SERVER_ERROR'\n      }\n    }\n  }\n};\n(0, _chai.expect)(selectors.hasVAPServiceConnectionError(state)).to.be.true;",
                  "err": {},
                  "uuid": "75ce4f94-5a22-41b0-8dc9-5099c0cdbf08",
                  "parentUUID": "8818ac5a-d5fe-4c4c-9bc3-690ddf068e57",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "returns `false` if `user.profile.vapContactInfo.status` is not \"SERVER_ERROR\"",
                  "fullTitle": "user selectors hasVAPServiceConnectionError returns `false` if `user.profile.vapContactInfo.status` is not \"SERVER_ERROR\"",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var state = {\n  user: {\n    profile: {\n      vapContactInfo: {\n        status: 'NOT_FOUND'\n      }\n    }\n  }\n};\n(0, _chai.expect)(selectors.hasVAPServiceConnectionError(state)).to.be.false;",
                  "err": {},
                  "uuid": "95d3bfdf-ed95-45d0-887d-9394c0c59927",
                  "parentUUID": "8818ac5a-d5fe-4c4c-9bc3-690ddf068e57",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "returns `false` if `user.profile.vapContactInfo.status` does not exist",
                  "fullTitle": "user selectors hasVAPServiceConnectionError returns `false` if `user.profile.vapContactInfo.status` does not exist",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var state = {\n  user: {\n    profile: {\n      vapContactInfo: {\n        email: {}\n      }\n    }\n  }\n};\n(0, _chai.expect)(selectors.hasVAPServiceConnectionError(state)).to.be.false;",
                  "err": {},
                  "uuid": "8cc4e732-539f-4732-9019-1a7b8ecfa854",
                  "parentUUID": "8818ac5a-d5fe-4c4c-9bc3-690ddf068e57",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "75ce4f94-5a22-41b0-8dc9-5099c0cdbf08",
                "95d3bfdf-ed95-45d0-887d-9394c0c59927",
                "8cc4e732-539f-4732-9019-1a7b8ecfa854"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "3c3d2d00-dcaf-40a3-9e4d-1cd7d10c690e",
              "title": "selectVAPEmailAddress",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/platform/user/tests/selectors.unit.spec.js",
              "file": "/src/platform/user/tests/selectors.unit.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "pulls out the state.profile.vapContactInfo.emailAddress",
                  "fullTitle": "user selectors selectVAPEmailAddress pulls out the state.profile.vapContactInfo.emailAddress",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var state = {\n  user: {\n    profile: {\n      vapContactInfo: {\n        email: {\n          createdAt: '2019-10-11T12:42:14.000Z',\n          emailAddress: 'testertester2@mail.com',\n          effectiveEndDate: null,\n          effectiveStartDate: '2019-10-11T12:41:06.000Z',\n          id: 70619,\n          sourceDate: '2019-10-11T12:41:06.000Z',\n          sourceSystemUser: null,\n          transactionId: '5fda71d0-7e4c-468c-aee7-21c16405ca1f',\n          updatedAt: '2019-10-11T12:42:14.000Z',\n          vet360Id: '139281'\n        }\n      }\n    }\n  }\n};\n(0, _chai.expect)(selectors.selectVAPEmailAddress(state)).to.equal(state.user.profile.vapContactInfo.email.emailAddress);",
                  "err": {},
                  "uuid": "f9847ece-3c38-4a36-9c55-7ee7a6d2aef4",
                  "parentUUID": "3c3d2d00-dcaf-40a3-9e4d-1cd7d10c690e",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "returns undefined if there is no vapContactInfo on the profile",
                  "fullTitle": "user selectors selectVAPEmailAddress returns undefined if there is no vapContactInfo on the profile",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var state = {\n  user: {\n    profile: {}\n  }\n};\n(0, _chai.expect)(selectors.selectVAPEmailAddress(state)).to.be.undefined;",
                  "err": {},
                  "uuid": "a8c3794c-f266-4298-91e8-c32d79ce1d2e",
                  "parentUUID": "3c3d2d00-dcaf-40a3-9e4d-1cd7d10c690e",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "returns undefined if there is no email",
                  "fullTitle": "user selectors selectVAPEmailAddress returns undefined if there is no email",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var state = {\n  user: {\n    profile: {\n      vapContactInfo: {}\n    }\n  }\n};\n(0, _chai.expect)(selectors.selectVAPEmailAddress(state)).to.be.undefined;",
                  "err": {},
                  "uuid": "7df389b5-52bb-4d5f-a2f7-9212d3629416",
                  "parentUUID": "3c3d2d00-dcaf-40a3-9e4d-1cd7d10c690e",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "f9847ece-3c38-4a36-9c55-7ee7a6d2aef4",
                "a8c3794c-f266-4298-91e8-c32d79ce1d2e",
                "7df389b5-52bb-4d5f-a2f7-9212d3629416"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "30b25944-d5c7-492f-be5b-f47d312c6488",
              "title": "phone number selectors",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/platform/user/tests/selectors.unit.spec.js",
              "file": "/src/platform/user/tests/selectors.unit.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [],
              "suites": [
                {
                  "uuid": "c05f3080-1464-4b50-84c5-001e7ea1e45f",
                  "title": "selectVAPMobilePhone",
                  "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/platform/user/tests/selectors.unit.spec.js",
                  "file": "/src/platform/user/tests/selectors.unit.spec.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "pulls out the state.profile.vapContactInfo.mobilePhone data object",
                      "fullTitle": "user selectors phone number selectors selectVAPMobilePhone pulls out the state.profile.vapContactInfo.mobilePhone data object",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "var state = {\n  user: {\n    profile: {\n      vapContactInfo: {\n        mobilePhone: phoneNumberData\n      }\n    }\n  }\n};\n(0, _chai.expect)(selectors.selectVAPMobilePhone(state)).to.deep.equal(state.user.profile.vapContactInfo.mobilePhone);",
                      "err": {},
                      "uuid": "d7d58912-9a39-430d-8d98-2d7ec55584af",
                      "parentUUID": "c05f3080-1464-4b50-84c5-001e7ea1e45f",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "returns undefined if there is no vapContactInfo on the profile",
                      "fullTitle": "user selectors phone number selectors selectVAPMobilePhone returns undefined if there is no vapContactInfo on the profile",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "var state = {\n  user: {\n    profile: {}\n  }\n};\n(0, _chai.expect)(selectors.selectVAPMobilePhone(state)).to.be.undefined;",
                      "err": {},
                      "uuid": "750ab628-587d-46e7-afbc-73b81287d5e4",
                      "parentUUID": "c05f3080-1464-4b50-84c5-001e7ea1e45f",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "returns undefined if there is no mobile phone",
                      "fullTitle": "user selectors phone number selectors selectVAPMobilePhone returns undefined if there is no mobile phone",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "var state = {\n  user: {\n    profile: {\n      vapContactInfo: {}\n    }\n  }\n};\n(0, _chai.expect)(selectors.selectVAPMobilePhone(state)).to.be.undefined;",
                      "err": {},
                      "uuid": "4012ce96-574d-4d6b-bd10-bcca52dccfc4",
                      "parentUUID": "c05f3080-1464-4b50-84c5-001e7ea1e45f",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "d7d58912-9a39-430d-8d98-2d7ec55584af",
                    "750ab628-587d-46e7-afbc-73b81287d5e4",
                    "4012ce96-574d-4d6b-bd10-bcca52dccfc4"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "f923c4e9-caf3-4041-8941-e92d0566da21",
                  "title": "selectVAPMobilePhoneString",
                  "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/platform/user/tests/selectors.unit.spec.js",
                  "file": "/src/platform/user/tests/selectors.unit.spec.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "pulls out the mobile phone number as a single string if it exists",
                      "fullTitle": "user selectors phone number selectors selectVAPMobilePhoneString pulls out the mobile phone number as a single string if it exists",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "var state = {\n  user: {\n    profile: {\n      vapContactInfo: {\n        mobilePhone: phoneNumberData\n      }\n    }\n  }\n};\n(0, _chai.expect)(selectors.selectVAPMobilePhoneString(state)).to.equal('4158453210');",
                      "err": {},
                      "uuid": "6e0eb632-1476-4c85-ab59-8201c4ffadaf",
                      "parentUUID": "f923c4e9-caf3-4041-8941-e92d0566da21",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "properly handles phone numbers with an extension",
                      "fullTitle": "user selectors phone number selectors selectVAPMobilePhoneString properly handles phone numbers with an extension",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "slow",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "var state = {\n  user: {\n    profile: {\n      vapContactInfo: {\n        mobilePhone: _objectSpread(_objectSpread({}, phoneNumberData), {}, {\n          extension: '1234'\n        })\n      }\n    }\n  }\n};\n(0, _chai.expect)(selectors.selectVAPMobilePhoneString(state)).to.equal('4158453210x1234');",
                      "err": {},
                      "uuid": "6ce0e5fa-07b6-4b01-a9e7-a5fb703bc678",
                      "parentUUID": "f923c4e9-caf3-4041-8941-e92d0566da21",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "properly handles phone numbers with an extension of \"0000\"",
                      "fullTitle": "user selectors phone number selectors selectVAPMobilePhoneString properly handles phone numbers with an extension of \"0000\"",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "var state = {\n  user: {\n    profile: {\n      vapContactInfo: {\n        mobilePhone: _objectSpread(_objectSpread({}, phoneNumberData), {}, {\n          extension: '0000'\n        })\n      }\n    }\n  }\n};\n(0, _chai.expect)(selectors.selectVAPMobilePhoneString(state)).to.equal('4158453210');",
                      "err": {},
                      "uuid": "101fcec5-4106-4760-9e3f-f8ef344a26be",
                      "parentUUID": "f923c4e9-caf3-4041-8941-e92d0566da21",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "6e0eb632-1476-4c85-ab59-8201c4ffadaf",
                    "6ce0e5fa-07b6-4b01-a9e7-a5fb703bc678",
                    "101fcec5-4106-4760-9e3f-f8ef344a26be"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "ebe031e4-848b-47b6-88db-c97a928fde41",
                  "title": "selectVAPHomePhone",
                  "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/platform/user/tests/selectors.unit.spec.js",
                  "file": "/src/platform/user/tests/selectors.unit.spec.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "pulls out the state.profile.vapContactInfo.homePhone data object",
                      "fullTitle": "user selectors phone number selectors selectVAPHomePhone pulls out the state.profile.vapContactInfo.homePhone data object",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "slow",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "var state = {\n  user: {\n    profile: {\n      vapContactInfo: {\n        homePhone: phoneNumberData\n      }\n    }\n  }\n};\n(0, _chai.expect)(selectors.selectVAPHomePhone(state)).to.deep.equal(state.user.profile.vapContactInfo.homePhone);",
                      "err": {},
                      "uuid": "0ddc1f25-d053-4c7b-adba-7f0887e9f563",
                      "parentUUID": "ebe031e4-848b-47b6-88db-c97a928fde41",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "returns undefined if there is no vapContactInfo on the profile",
                      "fullTitle": "user selectors phone number selectors selectVAPHomePhone returns undefined if there is no vapContactInfo on the profile",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "var state = {\n  user: {\n    profile: {}\n  }\n};\n(0, _chai.expect)(selectors.selectVAPHomePhone(state)).to.be.undefined;",
                      "err": {},
                      "uuid": "08647eab-1afa-4fb8-b5de-59e98ea7af90",
                      "parentUUID": "ebe031e4-848b-47b6-88db-c97a928fde41",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "returns undefined if there is no mobile phone",
                      "fullTitle": "user selectors phone number selectors selectVAPHomePhone returns undefined if there is no mobile phone",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "var state = {\n  user: {\n    profile: {\n      vapContactInfo: {}\n    }\n  }\n};\n(0, _chai.expect)(selectors.selectVAPHomePhone(state)).to.be.undefined;",
                      "err": {},
                      "uuid": "21087eae-d044-4c16-a99d-cd42b7dc6891",
                      "parentUUID": "ebe031e4-848b-47b6-88db-c97a928fde41",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "0ddc1f25-d053-4c7b-adba-7f0887e9f563",
                    "08647eab-1afa-4fb8-b5de-59e98ea7af90",
                    "21087eae-d044-4c16-a99d-cd42b7dc6891"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "76337a37-0687-45a1-b9e6-3e50b24b0ae8",
                  "title": "selectVAPHomePhoneString",
                  "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/platform/user/tests/selectors.unit.spec.js",
                  "file": "/src/platform/user/tests/selectors.unit.spec.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "pulls out the home phone number as a single string if it exists",
                      "fullTitle": "user selectors phone number selectors selectVAPHomePhoneString pulls out the home phone number as a single string if it exists",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "var state = {\n  user: {\n    profile: {\n      vapContactInfo: {\n        homePhone: phoneNumberData\n      }\n    }\n  }\n};\n(0, _chai.expect)(selectors.selectVAPHomePhoneString(state)).to.equal('4158453210');",
                      "err": {},
                      "uuid": "e84e2027-d8aa-45a2-aacc-ffc3a11f457f",
                      "parentUUID": "76337a37-0687-45a1-b9e6-3e50b24b0ae8",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "properly handles phone numbers with an extension",
                      "fullTitle": "user selectors phone number selectors selectVAPHomePhoneString properly handles phone numbers with an extension",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "var state = {\n  user: {\n    profile: {\n      vapContactInfo: {\n        homePhone: _objectSpread(_objectSpread({}, phoneNumberData), {}, {\n          extension: '1234'\n        })\n      }\n    }\n  }\n};\n(0, _chai.expect)(selectors.selectVAPHomePhoneString(state)).to.equal('4158453210x1234');",
                      "err": {},
                      "uuid": "8105a4c2-b44e-4ecf-8e32-a93f564c5bc9",
                      "parentUUID": "76337a37-0687-45a1-b9e6-3e50b24b0ae8",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "e84e2027-d8aa-45a2-aacc-ffc3a11f457f",
                    "8105a4c2-b44e-4ecf-8e32-a93f564c5bc9"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                }
              ],
              "passes": [],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "1fdbdb85-99b1-4dae-a427-0739e054f255",
              "title": "selectVeteranStatus",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/platform/user/tests/selectors.unit.spec.js",
              "file": "/src/platform/user/tests/selectors.unit.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "pulls out the veteranStatus object",
                  "fullTitle": "user selectors selectVeteranStatus pulls out the veteranStatus object",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var state = {\n  user: {\n    profile: {\n      veteranStatus: {\n        status: 'OK',\n        isVeteran: true,\n        servedInMilitary: true\n      }\n    }\n  }\n};\nvar expected = {\n  status: 'OK',\n  isVeteran: true,\n  servedInMilitary: true\n};\n(0, _chai.expect)(selectors.selectVeteranStatus(state)).to.deep.equal(expected);",
                  "err": {},
                  "uuid": "0f3e0616-a43f-4301-a7c3-3f1158c5f8ac",
                  "parentUUID": "1fdbdb85-99b1-4dae-a427-0739e054f255",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "0f3e0616-a43f-4301-a7c3-3f1158c5f8ac"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "44ba9e1a-3714-4517-8095-3b3da3bd0f92",
              "title": "isVAPatient",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/platform/user/tests/selectors.unit.spec.js",
              "file": "/src/platform/user/tests/selectors.unit.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "returns `true` if the profile.vaPatient is `true`",
                  "fullTitle": "user selectors isVAPatient returns `true` if the profile.vaPatient is `true`",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var state = {\n  user: {\n    profile: {\n      vaPatient: true\n    }\n  }\n};\n(0, _chai.expect)(selectors.isVAPatient(state)).to.be.true;",
                  "err": {},
                  "uuid": "4284d67c-80ee-4cde-bf97-ed6662877a6d",
                  "parentUUID": "44ba9e1a-3714-4517-8095-3b3da3bd0f92",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "returns `false` if the profile.vaPatient is anything other than `true`",
                  "fullTitle": "user selectors isVAPatient returns `false` if the profile.vaPatient is anything other than `true`",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var state = {\n  user: {\n    profile: {\n      vaPatient: 'blah'\n    }\n  }\n};\n(0, _chai.expect)(selectors.isVAPatient(state)).to.be.false;\ndelete state.user.profile.vaPatient;\n(0, _chai.expect)(selectors.isVAPatient(state)).to.be.false;\ndelete state.user.profile;\n(0, _chai.expect)(selectors.isVAPatient(state)).to.be.false;\ndelete state.user;\n(0, _chai.expect)(selectors.isVAPatient(state)).to.be.false;",
                  "err": {},
                  "uuid": "670e8822-da76-4ef0-9bcf-a2a543d232be",
                  "parentUUID": "44ba9e1a-3714-4517-8095-3b3da3bd0f92",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "4284d67c-80ee-4cde-bf97-ed6662877a6d",
                "670e8822-da76-4ef0-9bcf-a2a543d232be"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "ed01986d-2347-4b31-ab68-3ae89581ab43",
              "title": "isInMPI",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/platform/user/tests/selectors.unit.spec.js",
              "file": "/src/platform/user/tests/selectors.unit.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "returns `true` if the profile.status is `OK`",
                  "fullTitle": "user selectors isInMPI returns `true` if the profile.status is `OK`",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var state = {\n  user: {\n    profile: {\n      status: 'OK'\n    }\n  }\n};\n(0, _chai.expect)(selectors.isInMPI(state)).to.be.true;",
                  "err": {},
                  "uuid": "1dc8d17b-acce-41f8-916a-0359240b3727",
                  "parentUUID": "ed01986d-2347-4b31-ab68-3ae89581ab43",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "returns `false` if the profile.status is anything other than `OK`",
                  "fullTitle": "user selectors isInMPI returns `false` if the profile.status is anything other than `OK`",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var state = {\n  user: {\n    profile: {\n      status: 'blah'\n    }\n  }\n};\n(0, _chai.expect)(selectors.isInMPI(state)).to.be.false;\ndelete state.user.profile;\n(0, _chai.expect)(selectors.isInMPI(state)).to.be.false;",
                  "err": {},
                  "uuid": "c07f2621-a1fa-4d90-98ac-cbd3db286cdc",
                  "parentUUID": "ed01986d-2347-4b31-ab68-3ae89581ab43",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "1dc8d17b-acce-41f8-916a-0359240b3727",
                "c07f2621-a1fa-4d90-98ac-cbd3db286cdc"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "108b28a5-4a4b-406d-88e0-ec9cfd437c6a",
              "title": "isNotInMPI",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/platform/user/tests/selectors.unit.spec.js",
              "file": "/src/platform/user/tests/selectors.unit.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "returns `true` if the profile.status is `NOT_FOUND`",
                  "fullTitle": "user selectors isNotInMPI returns `true` if the profile.status is `NOT_FOUND`",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var state = {\n  user: {\n    profile: {\n      status: 'NOT_FOUND'\n    }\n  }\n};\n(0, _chai.expect)(selectors.isNotInMPI(state)).to.be.true;",
                  "err": {},
                  "uuid": "63560616-4917-41a7-9fc5-740f88b99a52",
                  "parentUUID": "108b28a5-4a4b-406d-88e0-ec9cfd437c6a",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "returns `false` if the profile.status is anything other than `NOT_FOUND`",
                  "fullTitle": "user selectors isNotInMPI returns `false` if the profile.status is anything other than `NOT_FOUND`",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var state = {\n  user: {\n    profile: {\n      status: 'NOT_AUTHORIZED'\n    }\n  }\n};\n(0, _chai.expect)(selectors.isNotInMPI(state)).to.be.false;\ndelete state.user.profile.status;\n(0, _chai.expect)(selectors.isNotInMPI(state)).to.be.false;\ndelete state.user.profile;\n(0, _chai.expect)(selectors.isNotInMPI(state)).to.be.false;",
                  "err": {},
                  "uuid": "b58982bc-4db6-411c-9037-8292f4be324b",
                  "parentUUID": "108b28a5-4a4b-406d-88e0-ec9cfd437c6a",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "63560616-4917-41a7-9fc5-740f88b99a52",
                "b58982bc-4db6-411c-9037-8292f4be324b"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "c661baf8-ec44-433b-8bf4-9ffe970620d4",
              "title": "hasMPIConnectionError",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/platform/user/tests/selectors.unit.spec.js",
              "file": "/src/platform/user/tests/selectors.unit.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "returns `true` if the profile.status is `SERVER_ERROR`",
                  "fullTitle": "user selectors hasMPIConnectionError returns `true` if the profile.status is `SERVER_ERROR`",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var state = {\n  user: {\n    profile: {\n      status: 'SERVER_ERROR'\n    }\n  }\n};\n(0, _chai.expect)(selectors.hasMPIConnectionError(state)).to.be.true;",
                  "err": {},
                  "uuid": "ab913b90-80c9-4f8d-a8b6-11725eb50179",
                  "parentUUID": "c661baf8-ec44-433b-8bf4-9ffe970620d4",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "returns `false` if the profile.status is anything other than `SERVER_ERROR`",
                  "fullTitle": "user selectors hasMPIConnectionError returns `false` if the profile.status is anything other than `SERVER_ERROR`",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var state = {\n  user: {\n    profile: {\n      veteranStatus: {\n        status: 'ERROR'\n      }\n    }\n  }\n};\n(0, _chai.expect)(selectors.isInMPI(state)).to.be.false;\ndelete state.user.profile;\n(0, _chai.expect)(selectors.isInMPI(state)).to.be.false;",
                  "err": {},
                  "uuid": "c65d370b-7dbe-4977-9749-908ce4dc3fda",
                  "parentUUID": "c661baf8-ec44-433b-8bf4-9ffe970620d4",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "ab913b90-80c9-4f8d-a8b6-11725eb50179",
                "c65d370b-7dbe-4977-9749-908ce4dc3fda"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [
        "becc739e-2a0d-4755-a319-258cd6d0ee59"
      ],
      "duration": 0,
      "root": true,
      "rootEmpty": false,
      "_timeout": 10000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.7.3"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "undefined_2025-03-03T224147452Z",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "min",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "id": "default",
        "consoleReporter": "min",
        "reportDir": "mocha/results",
        "reportFilename": "undefined_2025-03-03T224147452Z",
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}