{
  "stats": {
    "suites": 631,
    "tests": 873,
    "passes": 872,
    "pending": 1,
    "failures": 0,
    "start": "2025-03-03T22:23:42.569Z",
    "end": "2025-03-03T22:23:53.737Z",
    "duration": 11168,
    "testsRegistered": 873,
    "passPercent": 100,
    "pendingPercent": 0.11454753722794961,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "49215948-21fc-48c0-ba66-173197791237",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [
        {
          "title": "\"before each\" hook: beforeEach in \"{root}\"",
          "fullTitle": "\"before each\" hook: beforeEach in \"{root}\"",
          "timedOut": false,
          "duration": 2,
          "state": null,
          "speed": null,
          "pass": false,
          "fail": false,
          "pending": false,
          "context": null,
          "code": "cov_5fzq6lsur().f[20]++;\ncov_5fzq6lsur().s[70]++;\nsetupJSDom();\ncov_5fzq6lsur().s[71]++;\nresetFetch();\ncov_5fzq6lsur().s[72]++;\ncleanupStorage();\ncov_5fzq6lsur().s[73]++;\nif (isStressTest == 'false') {\n  cov_5fzq6lsur().b[12][0]++;\n  cov_5fzq6lsur().s[74]++;\n  checkAllowList(this);\n} else {\n  cov_5fzq6lsur().b[12][1]++;\n}\ncov_5fzq6lsur().s[75]++;\nif ((cov_5fzq6lsur().b[14][0]++, process.env.CI) || (cov_5fzq6lsur().b[14][1]++, ['trace', 'debug'].includes(process.env.LOG_LEVEL))) {\n  cov_5fzq6lsur().b[13][0]++;\n  cov_5fzq6lsur().s[76]++;\n  console.log('running: ', this.currentTest.file.slice(this.currentTest.file.indexOf('src')));\n} else {\n  cov_5fzq6lsur().b[13][1]++;\n}",
          "err": {},
          "uuid": "95b152c0-76c3-4182-b24e-15f24a9cff59",
          "parentUUID": "49215948-21fc-48c0-ba66-173197791237",
          "isHook": true,
          "skipped": false
        }
      ],
      "afterHooks": [
        {
          "title": "\"after each\" hook: afterEach in \"{root}\"",
          "fullTitle": "\"after each\" hook: afterEach in \"{root}\"",
          "timedOut": false,
          "duration": 0,
          "state": null,
          "speed": null,
          "pass": false,
          "fail": false,
          "pending": false,
          "context": null,
          "code": "cov_5fzq6lsur().f[21]++;\ncov_5fzq6lsur().s[77]++;\ncleanupStorage();\ncov_5fzq6lsur().s[78]++;\nflushPromises();",
          "err": {},
          "uuid": "f8c8d1b9-d1fe-4279-b329-81039a21b7b0",
          "parentUUID": "49215948-21fc-48c0-ba66-173197791237",
          "isHook": true,
          "skipped": false
        },
        {
          "title": "\"after each\" hook in \"{root}\"",
          "fullTitle": "\"after each\" hook in \"{root}\"",
          "timedOut": false,
          "duration": 0,
          "state": null,
          "speed": null,
          "pass": false,
          "fail": false,
          "pending": false,
          "context": null,
          "code": "(0, _pure.cleanup)();",
          "err": {},
          "uuid": "9981a714-c50f-4c09-90d2-52804aaa1d8c",
          "parentUUID": "49215948-21fc-48c0-ba66-173197791237",
          "isHook": true,
          "skipped": false
        }
      ],
      "tests": [],
      "suites": [
        {
          "uuid": "23b82c4f-f66e-4f5d-8632-59b32e4115f9",
          "title": "DisabilityExamDate",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/20-10206/tests/unit/components/viewElements.unit.spec.jsx",
          "file": "/src/applications/simple-forms/20-10206/tests/unit/components/viewElements.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "renders the exam date correctly",
              "fullTitle": "DisabilityExamDate renders the exam date correctly",
              "timedOut": false,
              "duration": 25,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var testDate = '2022-01-01';\nvar _render = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_viewElements.DisabilityExamDate, {\n    formData: {\n      disabilityExamDate: testDate\n    }\n  })),\n  getByText = _render.getByText;\n(0, _chai.expect)(getByText('Exam date')).to.exist;\n(0, _chai.expect)(getByText((0, _moment.default)(testDate, 'YYYY-MM-DD').format('MMMM D, YYYY'))).to.exist;",
              "err": {},
              "uuid": "81d4f8da-eb52-4df6-8e8b-8bb3c50b4536",
              "parentUUID": "23b82c4f-f66e-4f5d-8632-59b32e4115f9",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "81d4f8da-eb52-4df6-8e8b-8bb3c50b4536"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 25,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "199f6924-e931-4606-880b-3d092a8da50c",
          "title": "formConfig",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/20-10206/tests/unit/config/form.unit.spec.js",
          "file": "/src/applications/simple-forms/20-10206/tests/unit/config/form.unit.spec.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"formConfig\"",
              "fullTitle": "formConfig \"before each\" hook in \"formConfig\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "delete require.cache[require.resolve(\"../../../config/form\")];",
              "err": {},
              "uuid": "6fb33030-632d-49e8-8657-716fb45c6c23",
              "parentUUID": "199f6924-e931-4606-880b-3d092a8da50c",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after each\" hook in \"formConfig\"",
              "fullTitle": "formConfig \"after each\" hook in \"formConfig\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "if (isLocalhostStub) {\n  isLocalhostStub.restore();\n}",
              "err": {},
              "uuid": "1c0d07aa-dc1d-49fe-bbcc-0488e193593e",
              "parentUUID": "199f6924-e931-4606-880b-3d092a8da50c",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "should be an object",
              "fullTitle": "formConfig should be an object",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, _chai.expect)(_form.default).to.be.an('object');",
              "err": {},
              "uuid": "e9fdb441-395d-4859-9920-fda48060978a",
              "parentUUID": "199f6924-e931-4606-880b-3d092a8da50c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should have a rootUrl property",
              "fullTitle": "formConfig should have a rootUrl property",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, _chai.expect)(_form.default).to.have.property('rootUrl');\n(0, _chai.expect)(_form.default.rootUrl).to.be.a('string');",
              "err": {},
              "uuid": "4031efd3-e337-42bc-91cf-0a2b45fac119",
              "parentUUID": "199f6924-e931-4606-880b-3d092a8da50c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [
            {
              "uuid": "38b2a21b-5364-4604-b0ce-203a0e8e0f2c",
              "title": "chapters",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/20-10206/tests/unit/config/form.unit.spec.js",
              "file": "/src/applications/simple-forms/20-10206/tests/unit/config/form.unit.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should be an object",
                  "fullTitle": "formConfig chapters should be an object",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)(_form.default.chapters).to.be.an('object');",
                  "err": {},
                  "uuid": "4dc97a58-757a-4e75-a82f-46b0c93bf3ec",
                  "parentUUID": "38b2a21b-5364-4604-b0ce-203a0e8e0f2c",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "4dc97a58-757a-4e75-a82f-46b0c93bf3ec"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            }
          ],
          "passes": [
            "e9fdb441-395d-4859-9920-fda48060978a",
            "4031efd3-e337-42bc-91cf-0a2b45fac119"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "ff3e98d9-a1f3-4fdb-8619-f088536b52af",
          "title": "prefillTransformer",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/20-10206/tests/unit/config/prefill-transformer.unit.spec.js",
          "file": "/src/applications/simple-forms/20-10206/tests/unit/config/prefill-transformer.unit.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should return the correct transformed data for CITIZEN type",
              "fullTitle": "prefillTransformer should return the correct transformed data for CITIZEN type",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var pages = [];\nvar formData = {\n  preparerType: _constants.PREPARER_TYPES.CITIZEN\n};\nvar metadata = {};\nvar result = (0, _prefillTransformer.default)(pages, formData, metadata);\n(0, _chai.expect)(result.formData).to.have.property('citizenId');\n(0, _chai.expect)(result.formData.citizenId).to.have.property('ssn', '333221111');",
              "err": {},
              "uuid": "68892e61-9be1-4d27-9168-ed20a256c3db",
              "parentUUID": "ff3e98d9-a1f3-4fdb-8619-f088536b52af",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should not add citizenId for non-CITIZEN type",
              "fullTitle": "prefillTransformer should not add citizenId for non-CITIZEN type",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var pages = [];\nvar formData = {\n  preparerType: 'NON_CITIZEN'\n};\nvar metadata = {};\nvar result = (0, _prefillTransformer.default)(pages, formData, metadata);\n(0, _chai.expect)(result.formData).to.not.have.property('citizenId');",
              "err": {},
              "uuid": "b089d6ea-fd40-4109-87b9-cce4055029b0",
              "parentUUID": "ff3e98d9-a1f3-4fdb-8619-f088536b52af",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should correctly copy all properties from formData",
              "fullTitle": "prefillTransformer should correctly copy all properties from formData",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var pages = [];\nvar formData = {\n  preparerType: _constants.PREPARER_TYPES.CITIZEN,\n  extraProp: 'extraValue'\n};\nvar metadata = {};\nvar result = (0, _prefillTransformer.default)(pages, formData, metadata);\n(0, _chai.expect)(result.formData).to.have.property('extraProp', 'extraValue');",
              "err": {},
              "uuid": "575a5ce8-7b11-44af-a415-11b64826717d",
              "parentUUID": "ff3e98d9-a1f3-4fdb-8619-f088536b52af",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should correctly copy all properties from metadata",
              "fullTitle": "prefillTransformer should correctly copy all properties from metadata",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var pages = [];\nvar formData = {\n  preparerType: _constants.PREPARER_TYPES.CITIZEN\n};\nvar metadata = {\n  extraMeta: 'extraValue'\n};\nvar result = (0, _prefillTransformer.default)(pages, formData, metadata);\n(0, _chai.expect)(result.metadata).to.have.property('extraMeta', 'extraValue');",
              "err": {},
              "uuid": "55b87f09-d9b5-4b79-852b-787e571318f8",
              "parentUUID": "ff3e98d9-a1f3-4fdb-8619-f088536b52af",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "68892e61-9be1-4d27-9168-ed20a256c3db",
            "b089d6ea-fd40-4109-87b9-cce4055029b0",
            "575a5ce8-7b11-44af-a415-11b64826717d",
            "55b87f09-d9b5-4b79-852b-787e571318f8"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "c84781b3-34a7-4201-a9f5-27ead00c8c18",
          "title": "transformForSubmit",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/20-10206/tests/unit/config/submit-transformer.unit.spec.js",
          "file": "/src/applications/simple-forms/20-10206/tests/unit/config/submit-transformer.unit.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should delete nonCitizenId form-data if preparerType is \"citizen\"",
              "fullTitle": "transformForSubmit should delete nonCitizenId form-data if preparerType is \"citizen\"",
              "timedOut": false,
              "duration": 4,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var transformedDataString = (0, _submitTransformer.default)(_form.default, _objectSpread(_objectSpread({}, form), {}, {\n  data: _objectSpread(_objectSpread({}, form.data), {}, {\n    preparerType: 'citizen'\n  })\n}));\nvar transformedData = JSON.parse(transformedDataString);\n(0, _chai.expect)(transformedData.nonCitizenId).to.be.undefined;",
              "err": {},
              "uuid": "7b564077-caf3-4468-80c9-f9f284e2fdcf",
              "parentUUID": "c84781b3-34a7-4201-a9f5-27ead00c8c18",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should delete citizenId form-data if preparerType is \"non-citizen\"",
              "fullTitle": "transformForSubmit should delete citizenId form-data if preparerType is \"non-citizen\"",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var transformedDataString = (0, _submitTransformer.default)(_form.default, _objectSpread(_objectSpread({}, form), {}, {\n  data: _objectSpread(_objectSpread({}, form.data), {}, {\n    preparerType: 'non-citizen'\n  })\n}));\nvar transformedData = JSON.parse(transformedDataString);\n(0, _chai.expect)(transformedData.citizenId).to.be.undefined;",
              "err": {},
              "uuid": "ff96eae8-7e59-4419-a7ff-d3ac08fcf918",
              "parentUUID": "c84781b3-34a7-4201-a9f5-27ead00c8c18",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should delete unneeded record-details form-data based on recordSelections",
              "fullTitle": "transformForSubmit should delete unneeded record-details form-data based on recordSelections",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var transformedDataString = (0, _submitTransformer.default)(_form.default, _objectSpread(_objectSpread({}, form), {}, {\n  data: _objectSpread(_objectSpread({}, form.data), {}, {\n    recordSelections: {\n      'disability-exams': true,\n      'other-comp-pen': false,\n      financial: false,\n      'life-ins': false,\n      other: false\n    }\n  })\n}));\nvar transformedData = JSON.parse(transformedDataString);\n(0, _chai.expect)(transformedData.otherCompAndPenDetails).to.be.undefined;\n(0, _chai.expect)(transformedData.financialRecordDetails).to.be.undefined;\n(0, _chai.expect)(transformedData.lifeInsuranceBenefitDetails).to.be.undefined;\n(0, _chai.expect)(transformedData.otherBenefitDetails).to.be.undefined;",
              "err": {},
              "uuid": "8a5b4b16-43b0-494e-9255-86ff87f1ef39",
              "parentUUID": "c84781b3-34a7-4201-a9f5-27ead00c8c18",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should not delete record-details form-data based on recordSelections",
              "fullTitle": "transformForSubmit should not delete record-details form-data based on recordSelections",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var transformedDataString = (0, _submitTransformer.default)(_form.default, _objectSpread(_objectSpread({}, form), {}, {\n  data: _objectSpread(_objectSpread({}, form.data), {}, {\n    recordSelections: {\n      'disability-exams': true,\n      'other-comp-pen': true,\n      financial: true,\n      'life-ins': true,\n      other: true\n    }\n  })\n}));\nvar transformedData = JSON.parse(transformedDataString);\n(0, _chai.expect)(transformedData.disabilityExams).to.be.an('array').that.is.not.empty;",
              "err": {},
              "uuid": "ac304e5c-3fcf-4765-a1d3-a63bd865d391",
              "parentUUID": "c84781b3-34a7-4201-a9f5-27ead00c8c18",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "7b564077-caf3-4468-80c9-f9f284e2fdcf",
            "ff96eae8-7e59-4419-a7ff-d3ac08fcf918",
            "8a5b4b16-43b0-494e-9255-86ff87f1ef39",
            "ac304e5c-3fcf-4765-a1d3-a63bd865d391"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 9,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "09799758-777d-4df2-9dc2-b03cf7ef5fe8",
          "title": "ConfirmationPage",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/20-10206/tests/unit/containers/ConfirmationPage.unit.spec.jsx",
          "file": "/src/applications/simple-forms/20-10206/tests/unit/containers/ConfirmationPage.unit.spec.jsx",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"ConfirmationPage\"",
              "fullTitle": "ConfirmationPage \"before each\" hook in \"ConfirmationPage\"",
              "timedOut": false,
              "duration": 8,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "store = mockStore(initialState);\nwrapper = (0, _enzyme.mount)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n  store: store\n}, /*#__PURE__*/_react.default.createElement(_ConfirmationPage.default, {\n  route: {\n    formConfig: _form.default\n  }\n})));",
              "err": {},
              "uuid": "2c0d6e13-4740-4021-8d18-2a608925caad",
              "parentUUID": "09799758-777d-4df2-9dc2-b03cf7ef5fe8",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after each\" hook in \"ConfirmationPage\"",
              "fullTitle": "ConfirmationPage \"after each\" hook in \"ConfirmationPage\"",
              "timedOut": false,
              "duration": 1,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "if (wrapper) {\n  wrapper.unmount();\n}\n(0, _react2.cleanup)();",
              "err": {},
              "uuid": "a26c15de-8adf-42c7-9192-59e8e5dd02c1",
              "parentUUID": "09799758-777d-4df2-9dc2-b03cf7ef5fe8",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "passes the correct props to ConfirmationPageView",
              "fullTitle": "ConfirmationPage passes the correct props to ConfirmationPageView",
              "timedOut": false,
              "duration": 4,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var confirmationViewProps = wrapper.find('ConfirmationView').props();\n(0, _chai.expect)(confirmationViewProps.submitDate).to.equal('2022-01-01T00:00:00Z');\n(0, _chai.expect)(confirmationViewProps.confirmationNumber).to.equal('1234567890');",
              "err": {},
              "uuid": "f3dfeb97-8d25-48b8-b452-754be7b34c37",
              "parentUUID": "09799758-777d-4df2-9dc2-b03cf7ef5fe8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should select form from state when state.form is defined",
              "fullTitle": "ConfirmationPage should select form from state when state.form is defined",
              "timedOut": false,
              "duration": 14,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var submitDate = new Date();\nvar mockInitialState = {\n  form: {\n    submission: {\n      timestamp: submitDate,\n      response: {\n        confirmationNumber: '1234'\n      }\n    },\n    data: {\n      fullName: {\n        first: 'John',\n        last: 'Preparer'\n      }\n    }\n  }\n};\nvar mockDefinedState = (0, _redux.createStore)(function () {\n  return mockInitialState;\n});\nvar definedWrapper = (0, _enzyme.mount)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n  store: mockDefinedState\n}, /*#__PURE__*/_react.default.createElement(_ConfirmationPage.default, {\n  route: {\n    formConfig: _form.default\n  }\n})));\n(0, _chai.expect)(definedWrapper.text()).to.include((0, _dateFns.format)(submitDate, 'MMMM d, yyyy'));\n(0, _chai.expect)(definedWrapper.text()).to.include('1234');\ndefinedWrapper.unmount();",
              "err": {},
              "uuid": "ed2ccc99-786a-4cb1-87fa-6fd694761d17",
              "parentUUID": "09799758-777d-4df2-9dc2-b03cf7ef5fe8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should throw error when state.form is undefined",
              "fullTitle": "ConfirmationPage should throw error when state.form is undefined",
              "timedOut": false,
              "duration": 23,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var mockEmptyState = {};\nvar mockEmptyStore = (0, _redux.createStore)(function () {\n  return mockEmptyState;\n});\nvar errorWrapper;\n(0, _chai.expect)(function () {\n  errorWrapper = (0, _enzyme.mount)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockEmptyStore\n  }, /*#__PURE__*/_react.default.createElement(_ConfirmationPage.default, {\n    route: {\n      formConfig: _form.default\n    }\n  })));\n}).to.throw();\nif (errorWrapper) {\n  errorWrapper.unmount();\n}",
              "err": {},
              "uuid": "3d2592d7-e217-441a-b0d1-eb6f8e7c92e6",
              "parentUUID": "09799758-777d-4df2-9dc2-b03cf7ef5fe8",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f3dfeb97-8d25-48b8-b452-754be7b34c37",
            "ed2ccc99-786a-4cb1-87fa-6fd694761d17",
            "3d2592d7-e217-441a-b0d1-eb6f8e7c92e6"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 41,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "db87eeea-4ddd-44f4-98b6-18b197843277",
          "title": "IntroductionPage",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/20-10206/tests/unit/containers/IntroductionPage.unit.spec.jsx",
          "file": "/src/applications/simple-forms/20-10206/tests/unit/containers/IntroductionPage.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should render",
              "fullTitle": "IntroductionPage should render",
              "timedOut": false,
              "duration": 13,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var mockStore = generateStore();\nvar _render = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_IntroductionPage.default, props))),\n  container = _render.container;\n(0, _chai.expect)(container).to.exist;",
              "err": {},
              "uuid": "7ecfa960-135f-4cc5-b20d-9e27707f55ce",
              "parentUUID": "db87eeea-4ddd-44f4-98b6-18b197843277",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should render the va-alert-sign-in for LOA1 users",
              "fullTitle": "IntroductionPage should render the va-alert-sign-in for LOA1 users",
              "timedOut": false,
              "duration": 14,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var mockStore = generateStore({\n  loggedIn: true,\n  loaCurrent: 1\n});\nvar _render2 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_IntroductionPage.default, {\n    route: props.route\n  }))),\n  container = _render2.container;\n(0, _chai.expect)(container.querySelector('va-alert-sign-in')).to.exist;",
              "err": {},
              "uuid": "1027387f-166c-42b1-8088-47ecea537433",
              "parentUUID": "db87eeea-4ddd-44f4-98b6-18b197843277",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "7ecfa960-135f-4cc5-b20d-9e27707f55ce",
            "1027387f-166c-42b1-8088-47ecea537433"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 27,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "ae586e30-a247-4896-8c76-083e64e4697e",
          "title": "helpers",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/20-10206/tests/unit/helpers.unit.spec.js",
          "file": "/src/applications/simple-forms/20-10206/tests/unit/helpers.unit.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "a777c6ca-4d21-48ac-9e13-bc8949e50d83",
              "title": "getMockData",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/20-10206/tests/unit/helpers.unit.spec.js",
              "file": "/src/applications/simple-forms/20-10206/tests/unit/helpers.unit.spec.js",
              "beforeHooks": [],
              "afterHooks": [
                {
                  "title": "\"after each\" hook in \"getMockData\"",
                  "fullTitle": "helpers getMockData \"after each\" hook in \"getMockData\"",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "if (isLocalhostStub) {\n  isLocalhostStub.restore();\n}",
                  "err": {},
                  "uuid": "9a8f3da4-c3b3-4da2-8dcd-42b72c652ca0",
                  "parentUUID": "a777c6ca-4d21-48ac-9e13-bc8949e50d83",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "tests": [
                {
                  "title": "should return mockData when mockData is truthy, environment is localhost and window.Cypress is not defined",
                  "fullTitle": "helpers getMockData should return mockData when mockData is truthy, environment is localhost and window.Cypress is not defined",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "isLocalhostStub = _sinon.default.stub(form, 'isLocalhost').returns(true);\nglobal.window = {\n  Cypress: undefined\n};\nvar result = (0, _helpers.getMockData)(_testData.default, isLocalhostStub);\n(0, _chai.expect)(result).to.deep.equal(_testData.default);",
                  "err": {},
                  "uuid": "a5dd617d-a7e8-4b39-a551-08cbb18544cf",
                  "parentUUID": "a777c6ca-4d21-48ac-9e13-bc8949e50d83",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return undefined when mockData is falsy, environment is not localhost or window.Cypress is defined",
                  "fullTitle": "helpers getMockData should return undefined when mockData is falsy, environment is not localhost or window.Cypress is defined",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "isLocalhostStub = _sinon.default.stub(form, 'isLocalhost').returns(false);\nglobal.window = {\n  Cypress: true\n};\nvar result = (0, _helpers.getMockData)(null, isLocalhostStub);\n(0, _chai.expect)(result).to.be.undefined;",
                  "err": {},
                  "uuid": "a5c62e1c-e497-4d8c-8701-0529d3f7630a",
                  "parentUUID": "a777c6ca-4d21-48ac-9e13-bc8949e50d83",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "a5dd617d-a7e8-4b39-a551-08cbb18544cf",
                "a5c62e1c-e497-4d8c-8701-0529d3f7630a"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "80ce0658-b055-4235-977c-6841c8be47bd",
          "title": "Preparer’s address page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/20-10206/tests/unit/pages/address.unit.spec.jsx",
          "file": "/src/applications/simple-forms/20-10206/tests/unit/pages/address.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should have appropriate number of web components",
              "fullTitle": "Preparer’s address page should have appropriate number of web components",
              "timedOut": false,
              "duration": 59,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps3 = getProps(),\n  mockStore = _getProps3.mockStore;\nvar _render3 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render3.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypesWebComponents)).to.have.lengthOf(expectedNumberOfFields);",
              "err": {},
              "uuid": "0b96783c-a6b7-46b5-b555-6294162b0fa3",
              "parentUUID": "80ce0658-b055-4235-977c-6841c8be47bd",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "0b96783c-a6b7-46b5-b555-6294162b0fa3"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 59,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "93c454cc-5da0-4640-a38d-693f898c3bec",
          "title": "Preparer’s address page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/20-10206/tests/unit/pages/address.unit.spec.jsx",
          "file": "/src/applications/simple-forms/20-10206/tests/unit/pages/address.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should show the correct number of errors on submit for web components",
              "fullTitle": "Preparer’s address page should show the correct number of errors on submit for web components",
              "timedOut": false,
              "duration": 152,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps4 = getProps(),\n  mockStore = _getProps4.mockStore;\nvar _render4 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render4.container,\n  getByRole = _render4.getByRole;\ngetByRole('button', {\n  name: /submit/i\n}).click();\nvar nodes = Array.from(container.querySelectorAll(\"\".concat(expectedFieldTypesWebComponents, \", \").concat(wrapperWebComponents)));\nvar errors = nodes.filter(function (node) {\n  return node.error;\n});\n(0, _chai.expect)(errors).to.have.lengthOf(expectedNumberOfErrors);",
              "err": {},
              "uuid": "4083ba3b-5acd-424d-a643-071216e0ffd7",
              "parentUUID": "93c454cc-5da0-4640-a38d-693f898c3bec",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "4083ba3b-5acd-424d-a643-071216e0ffd7"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 152,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "73187508-fb5b-4a9e-a711-3689a7e9bf72",
          "title": "Citizen’s identification information page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/20-10206/tests/unit/pages/citizenIdInfo.unit.spec.jsx",
          "file": "/src/applications/simple-forms/20-10206/tests/unit/pages/citizenIdInfo.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should have appropriate number of web components",
              "fullTitle": "Citizen’s identification information page should have appropriate number of web components",
              "timedOut": false,
              "duration": 8,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps3 = getProps(),\n  mockStore = _getProps3.mockStore;\nvar _render3 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render3.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypesWebComponents)).to.have.lengthOf(expectedNumberOfFields);",
              "err": {},
              "uuid": "efc3902a-9cda-4b9a-9113-6c27082f1a46",
              "parentUUID": "73187508-fb5b-4a9e-a711-3689a7e9bf72",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "efc3902a-9cda-4b9a-9113-6c27082f1a46"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 8,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "93560fd3-ab3c-4cac-959f-6b871131ab9e",
          "title": "Citizen’s identification information page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/20-10206/tests/unit/pages/citizenIdInfo.unit.spec.jsx",
          "file": "/src/applications/simple-forms/20-10206/tests/unit/pages/citizenIdInfo.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should show the correct number of errors on submit for web components",
              "fullTitle": "Citizen’s identification information page should show the correct number of errors on submit for web components",
              "timedOut": false,
              "duration": 39,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps4 = getProps(),\n  mockStore = _getProps4.mockStore;\nvar _render4 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render4.container,\n  getByRole = _render4.getByRole;\ngetByRole('button', {\n  name: /submit/i\n}).click();\nvar nodes = Array.from(container.querySelectorAll(\"\".concat(expectedFieldTypesWebComponents, \", \").concat(wrapperWebComponents)));\nvar errors = nodes.filter(function (node) {\n  return node.error;\n});\n(0, _chai.expect)(errors).to.have.lengthOf(expectedNumberOfErrors);",
              "err": {},
              "uuid": "dfb52e86-21d3-49b7-bc27-6d7b93ad8231",
              "parentUUID": "93560fd3-ab3c-4cac-959f-6b871131ab9e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "dfb52e86-21d3-49b7-bc27-6d7b93ad8231"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 39,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "b2a7ce48-7bf9-4ebd-aa5a-540a12807fdb",
          "title": "Claim exam details page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/20-10206/tests/unit/pages/disabilityExamDetails.unit.spec.jsx",
          "file": "/src/applications/simple-forms/20-10206/tests/unit/pages/disabilityExamDetails.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should have appropriate number of web components",
              "fullTitle": "Claim exam details page should have appropriate number of web components",
              "timedOut": false,
              "duration": 17,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps3 = getProps(),\n  mockStore = _getProps3.mockStore;\nvar _render3 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render3.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypesWebComponents)).to.have.lengthOf(expectedNumberOfFields);",
              "err": {},
              "uuid": "93891c1f-e2b4-4cd0-a98f-80c3bb559732",
              "parentUUID": "b2a7ce48-7bf9-4ebd-aa5a-540a12807fdb",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "93891c1f-e2b4-4cd0-a98f-80c3bb559732"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 17,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "a9e9b724-c5c4-49f2-9202-7e1503840d55",
          "title": "Claim exam details page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/20-10206/tests/unit/pages/disabilityExamDetails.unit.spec.jsx",
          "file": "/src/applications/simple-forms/20-10206/tests/unit/pages/disabilityExamDetails.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should show the correct number of errors on submit for web components",
              "fullTitle": "Claim exam details page should show the correct number of errors on submit for web components",
              "timedOut": false,
              "duration": 34,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps4 = getProps(),\n  mockStore = _getProps4.mockStore;\nvar _render4 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render4.container,\n  getByRole = _render4.getByRole;\ngetByRole('button', {\n  name: /submit/i\n}).click();\nvar nodes = Array.from(container.querySelectorAll(\"\".concat(expectedFieldTypesWebComponents, \", \").concat(wrapperWebComponents)));\nvar errors = nodes.filter(function (node) {\n  return node.error;\n});\n(0, _chai.expect)(errors).to.have.lengthOf(expectedNumberOfErrors);",
              "err": {},
              "uuid": "2a2d93a9-ff9a-44a6-8928-0a1de6d384b7",
              "parentUUID": "a9e9b724-c5c4-49f2-9202-7e1503840d55",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "2a2d93a9-ff9a-44a6-8928-0a1de6d384b7"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 34,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "d5f396a1-a365-481a-8fc5-6ab0ab26c022",
          "title": "ui:reviewField",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/20-10206/tests/unit/pages/disabilityExamDetails.unit.spec.jsx",
          "file": "/src/applications/simple-forms/20-10206/tests/unit/pages/disabilityExamDetails.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "renders the date correctly when formData is present",
              "fullTitle": "ui:reviewField renders the date correctly when formData is present",
              "timedOut": false,
              "duration": 16,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var ReviewField = uiSchema.disabilityExams.items.disabilityExamDate['ui:reviewField'];\nvar wrapper = (0, _enzyme.render)(/*#__PURE__*/_react.default.createElement(ReviewField, null, /*#__PURE__*/_react.default.createElement(\"div\", {\n  formData: \"2022-01-01\"\n})));\n(0, _chai.expect)(wrapper.find('dt').text()).to.equal('When was your exam?');\n(0, _chai.expect)(wrapper.find('dd').text()).to.equal('January 1, 2022');",
              "err": {},
              "uuid": "a5ab6e2e-1a6f-4d84-bb4b-27a97e61efb2",
              "parentUUID": "d5f396a1-a365-481a-8fc5-6ab0ab26c022",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "renders nothing when formData is not present",
              "fullTitle": "ui:reviewField renders nothing when formData is not present",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var ReviewField = uiSchema.disabilityExams.items.disabilityExamDate['ui:reviewField'];\nvar wrapper = (0, _enzyme.render)(/*#__PURE__*/_react.default.createElement(ReviewField, null, /*#__PURE__*/_react.default.createElement(\"div\", {\n  formData: null\n})));\n(0, _chai.expect)(wrapper.find('dt').text()).to.equal('When was your exam?');\n(0, _chai.expect)(wrapper.find('dd').text()).to.be.empty;",
              "err": {},
              "uuid": "a6ed7f3e-1c1f-449e-b281-79ce00341513",
              "parentUUID": "d5f396a1-a365-481a-8fc5-6ab0ab26c022",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a5ab6e2e-1a6f-4d84-bb4b-27a97e61efb2",
            "a6ed7f3e-1c1f-449e-b281-79ce00341513"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 17,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "8efe817a-b22c-42a1-b282-a251292d7739",
          "title": "Financial record details page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/20-10206/tests/unit/pages/financialRecordDetails.unit.spec.jsx",
          "file": "/src/applications/simple-forms/20-10206/tests/unit/pages/financialRecordDetails.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should have appropriate number of web components",
              "fullTitle": "Financial record details page should have appropriate number of web components",
              "timedOut": false,
              "duration": 7,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps3 = getProps(),\n  mockStore = _getProps3.mockStore;\nvar _render3 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render3.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypesWebComponents)).to.have.lengthOf(expectedNumberOfFields);",
              "err": {},
              "uuid": "7d4b376c-63d2-41ff-8d11-65d3a886f806",
              "parentUUID": "8efe817a-b22c-42a1-b282-a251292d7739",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "7d4b376c-63d2-41ff-8d11-65d3a886f806"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 7,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "ba0236ad-0558-4262-8c6b-ff534a973999",
          "title": "Financial record details page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/20-10206/tests/unit/pages/financialRecordDetails.unit.spec.jsx",
          "file": "/src/applications/simple-forms/20-10206/tests/unit/pages/financialRecordDetails.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should show the correct number of errors on submit for web components",
              "fullTitle": "Financial record details page should show the correct number of errors on submit for web components",
              "timedOut": false,
              "duration": 17,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps4 = getProps(),\n  mockStore = _getProps4.mockStore;\nvar _render4 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render4.container,\n  getByRole = _render4.getByRole;\ngetByRole('button', {\n  name: /submit/i\n}).click();\nvar nodes = Array.from(container.querySelectorAll(\"\".concat(expectedFieldTypesWebComponents, \", \").concat(wrapperWebComponents)));\nvar errors = nodes.filter(function (node) {\n  return node.error;\n});\n(0, _chai.expect)(errors).to.have.lengthOf(expectedNumberOfErrors);",
              "err": {},
              "uuid": "cf02028c-1495-4dfe-a866-66cc59114b71",
              "parentUUID": "ba0236ad-0558-4262-8c6b-ff534a973999",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "cf02028c-1495-4dfe-a866-66cc59114b71"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 17,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "21283738-7540-4d1c-b2dd-9942761f0084",
          "title": "Life insurance benefit details page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/20-10206/tests/unit/pages/lifeInsuranceBenefitDetails.unit.spec.jsx",
          "file": "/src/applications/simple-forms/20-10206/tests/unit/pages/lifeInsuranceBenefitDetails.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should have appropriate number of web components",
              "fullTitle": "Life insurance benefit details page should have appropriate number of web components",
              "timedOut": false,
              "duration": 5,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps3 = getProps(),\n  mockStore = _getProps3.mockStore;\nvar _render3 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render3.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypesWebComponents)).to.have.lengthOf(expectedNumberOfFields);",
              "err": {},
              "uuid": "6af008a6-1949-4342-a97b-43770eb9b7d6",
              "parentUUID": "21283738-7540-4d1c-b2dd-9942761f0084",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "6af008a6-1949-4342-a97b-43770eb9b7d6"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 5,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "800b5f69-fe7c-48dd-856c-db9326fd1ee1",
          "title": "Life insurance benefit details page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/20-10206/tests/unit/pages/lifeInsuranceBenefitDetails.unit.spec.jsx",
          "file": "/src/applications/simple-forms/20-10206/tests/unit/pages/lifeInsuranceBenefitDetails.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should show the correct number of errors on submit for web components",
              "fullTitle": "Life insurance benefit details page should show the correct number of errors on submit for web components",
              "timedOut": false,
              "duration": 15,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps4 = getProps(),\n  mockStore = _getProps4.mockStore;\nvar _render4 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render4.container,\n  getByRole = _render4.getByRole;\ngetByRole('button', {\n  name: /submit/i\n}).click();\nvar nodes = Array.from(container.querySelectorAll(\"\".concat(expectedFieldTypesWebComponents, \", \").concat(wrapperWebComponents)));\nvar errors = nodes.filter(function (node) {\n  return node.error;\n});\n(0, _chai.expect)(errors).to.have.lengthOf(expectedNumberOfErrors);",
              "err": {},
              "uuid": "4483233e-9bce-48e9-bdb4-a146abd1f2fc",
              "parentUUID": "800b5f69-fe7c-48dd-856c-db9326fd1ee1",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "4483233e-9bce-48e9-bdb4-a146abd1f2fc"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 15,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "c6fcc63f-f843-4439-89e3-52fb9e21c3e0",
          "title": "Non-Citizen’s identification information page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/20-10206/tests/unit/pages/nonCitizenIdInfo.unit.spec.jsx",
          "file": "/src/applications/simple-forms/20-10206/tests/unit/pages/nonCitizenIdInfo.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should have appropriate number of web components",
              "fullTitle": "Non-Citizen’s identification information page should have appropriate number of web components",
              "timedOut": false,
              "duration": 7,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps3 = getProps(),\n  mockStore = _getProps3.mockStore;\nvar _render3 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render3.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypesWebComponents)).to.have.lengthOf(expectedNumberOfFields);",
              "err": {},
              "uuid": "fb5a9bf8-71db-4a63-968b-6eb7eed8c26a",
              "parentUUID": "c6fcc63f-f843-4439-89e3-52fb9e21c3e0",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "fb5a9bf8-71db-4a63-968b-6eb7eed8c26a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 7,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "1112cf62-4d1e-476a-908f-33590803e398",
          "title": "Non-Citizen’s identification information page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/20-10206/tests/unit/pages/nonCitizenIdInfo.unit.spec.jsx",
          "file": "/src/applications/simple-forms/20-10206/tests/unit/pages/nonCitizenIdInfo.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should show the correct number of errors on submit for web components",
              "fullTitle": "Non-Citizen’s identification information page should show the correct number of errors on submit for web components",
              "timedOut": false,
              "duration": 22,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps4 = getProps(),\n  mockStore = _getProps4.mockStore;\nvar _render4 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render4.container,\n  getByRole = _render4.getByRole;\ngetByRole('button', {\n  name: /submit/i\n}).click();\nvar nodes = Array.from(container.querySelectorAll(\"\".concat(expectedFieldTypesWebComponents, \", \").concat(wrapperWebComponents)));\nvar errors = nodes.filter(function (node) {\n  return node.error;\n});\n(0, _chai.expect)(errors).to.have.lengthOf(expectedNumberOfErrors);",
              "err": {},
              "uuid": "feab5735-5815-47a2-b3a2-e741fbbf7e4e",
              "parentUUID": "1112cf62-4d1e-476a-908f-33590803e398",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "feab5735-5815-47a2-b3a2-e741fbbf7e4e"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 22,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "aaf669f4-3c1a-45d5-afdf-68f9bf6b5d90",
          "title": "Other benefit record details page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/20-10206/tests/unit/pages/otherBenefitDetails.unit.spec.jsx",
          "file": "/src/applications/simple-forms/20-10206/tests/unit/pages/otherBenefitDetails.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should have appropriate number of web components",
              "fullTitle": "Other benefit record details page should have appropriate number of web components",
              "timedOut": false,
              "duration": 5,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps3 = getProps(),\n  mockStore = _getProps3.mockStore;\nvar _render3 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render3.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypesWebComponents)).to.have.lengthOf(expectedNumberOfFields);",
              "err": {},
              "uuid": "73406788-bb73-4bd5-8068-f82e56c69175",
              "parentUUID": "aaf669f4-3c1a-45d5-afdf-68f9bf6b5d90",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "73406788-bb73-4bd5-8068-f82e56c69175"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 5,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "11f85a4e-d156-405b-a54d-499b0004fcca",
          "title": "Other benefit record details page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/20-10206/tests/unit/pages/otherBenefitDetails.unit.spec.jsx",
          "file": "/src/applications/simple-forms/20-10206/tests/unit/pages/otherBenefitDetails.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should show the correct number of errors on submit for web components",
              "fullTitle": "Other benefit record details page should show the correct number of errors on submit for web components",
              "timedOut": false,
              "duration": 16,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps4 = getProps(),\n  mockStore = _getProps4.mockStore;\nvar _render4 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render4.container,\n  getByRole = _render4.getByRole;\ngetByRole('button', {\n  name: /submit/i\n}).click();\nvar nodes = Array.from(container.querySelectorAll(\"\".concat(expectedFieldTypesWebComponents, \", \").concat(wrapperWebComponents)));\nvar errors = nodes.filter(function (node) {\n  return node.error;\n});\n(0, _chai.expect)(errors).to.have.lengthOf(expectedNumberOfErrors);",
              "err": {},
              "uuid": "7213db29-0c19-4084-9536-697cf8910dec",
              "parentUUID": "11f85a4e-d156-405b-a54d-499b0004fcca",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "7213db29-0c19-4084-9536-697cf8910dec"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 16,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "e062c5cc-1a76-4017-ac20-f42dcb51c043",
          "title": "Other compensation and pension record details page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/20-10206/tests/unit/pages/otherCompensationAndPensionDetails.unit.spec.jsx",
          "file": "/src/applications/simple-forms/20-10206/tests/unit/pages/otherCompensationAndPensionDetails.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should have appropriate number of web components",
              "fullTitle": "Other compensation and pension record details page should have appropriate number of web components",
              "timedOut": false,
              "duration": 4,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps3 = getProps(),\n  mockStore = _getProps3.mockStore;\nvar _render3 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render3.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypesWebComponents)).to.have.lengthOf(expectedNumberOfFields);",
              "err": {},
              "uuid": "de7c2332-c8af-41b3-9591-4d3c104bfabb",
              "parentUUID": "e062c5cc-1a76-4017-ac20-f42dcb51c043",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "de7c2332-c8af-41b3-9591-4d3c104bfabb"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 4,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "fd91dba4-8306-454e-b5a2-47dfc0c5df0c",
          "title": "Other compensation and pension record details page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/20-10206/tests/unit/pages/otherCompensationAndPensionDetails.unit.spec.jsx",
          "file": "/src/applications/simple-forms/20-10206/tests/unit/pages/otherCompensationAndPensionDetails.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should show the correct number of errors on submit for web components",
              "fullTitle": "Other compensation and pension record details page should show the correct number of errors on submit for web components",
              "timedOut": false,
              "duration": 15,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps4 = getProps(),\n  mockStore = _getProps4.mockStore;\nvar _render4 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render4.container,\n  getByRole = _render4.getByRole;\ngetByRole('button', {\n  name: /submit/i\n}).click();\nvar nodes = Array.from(container.querySelectorAll(\"\".concat(expectedFieldTypesWebComponents, \", \").concat(wrapperWebComponents)));\nvar errors = nodes.filter(function (node) {\n  return node.error;\n});\n(0, _chai.expect)(errors).to.have.lengthOf(expectedNumberOfErrors);",
              "err": {},
              "uuid": "5e587796-6b52-42d3-9673-5e1d164a8e30",
              "parentUUID": "fd91dba4-8306-454e-b5a2-47dfc0c5df0c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "5e587796-6b52-42d3-9673-5e1d164a8e30"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 15,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "72a4df3c-6a50-474a-9bfe-860f7d6882fa",
          "title": "Your personal information page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/20-10206/tests/unit/pages/personalInfo.unit.spec.jsx",
          "file": "/src/applications/simple-forms/20-10206/tests/unit/pages/personalInfo.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should have appropriate number of web components",
              "fullTitle": "Your personal information page should have appropriate number of web components",
              "timedOut": false,
              "duration": 10,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps3 = getProps(),\n  mockStore = _getProps3.mockStore;\nvar _render3 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render3.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypesWebComponents)).to.have.lengthOf(expectedNumberOfFields);",
              "err": {},
              "uuid": "766ffc0f-6b29-43ea-9805-46d9d811e947",
              "parentUUID": "72a4df3c-6a50-474a-9bfe-860f7d6882fa",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "766ffc0f-6b29-43ea-9805-46d9d811e947"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 10,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "14253e5e-0835-4d03-a819-b32352900205",
          "title": "Your personal information page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/20-10206/tests/unit/pages/personalInfo.unit.spec.jsx",
          "file": "/src/applications/simple-forms/20-10206/tests/unit/pages/personalInfo.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should show the correct number of errors on submit for web components",
              "fullTitle": "Your personal information page should show the correct number of errors on submit for web components",
              "timedOut": false,
              "duration": 33,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps4 = getProps(),\n  mockStore = _getProps4.mockStore;\nvar _render4 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render4.container,\n  getByRole = _render4.getByRole;\ngetByRole('button', {\n  name: /submit/i\n}).click();\nvar nodes = Array.from(container.querySelectorAll(\"\".concat(expectedFieldTypesWebComponents, \", \").concat(wrapperWebComponents)));\nvar errors = nodes.filter(function (node) {\n  return node.error;\n});\n(0, _chai.expect)(errors).to.have.lengthOf(expectedNumberOfErrors);",
              "err": {},
              "uuid": "5d50e827-9397-4172-b505-7f1b38b766aa",
              "parentUUID": "14253e5e-0835-4d03-a819-b32352900205",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "5d50e827-9397-4172-b505-7f1b38b766aa"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 33,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "343bfc82-6b5b-40a4-9439-570168b11f69",
          "title": "Your contact information page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/20-10206/tests/unit/pages/phoneEmail.unit.spec.jsx",
          "file": "/src/applications/simple-forms/20-10206/tests/unit/pages/phoneEmail.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should have appropriate number of web components",
              "fullTitle": "Your contact information page should have appropriate number of web components",
              "timedOut": false,
              "duration": 7,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps3 = getProps(),\n  mockStore = _getProps3.mockStore;\nvar _render3 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render3.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypesWebComponents)).to.have.lengthOf(expectedNumberOfFields);",
              "err": {},
              "uuid": "95202a97-335c-4b08-8a37-a24ec80233e7",
              "parentUUID": "343bfc82-6b5b-40a4-9439-570168b11f69",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "95202a97-335c-4b08-8a37-a24ec80233e7"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 7,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "75105b9a-17ef-4d0a-bc56-b99388ff3233",
          "title": "Your contact information page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/20-10206/tests/unit/pages/phoneEmail.unit.spec.jsx",
          "file": "/src/applications/simple-forms/20-10206/tests/unit/pages/phoneEmail.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should show the correct number of errors on submit for web components",
              "fullTitle": "Your contact information page should show the correct number of errors on submit for web components",
              "timedOut": false,
              "duration": 18,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps4 = getProps(),\n  mockStore = _getProps4.mockStore;\nvar _render4 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render4.container,\n  getByRole = _render4.getByRole;\ngetByRole('button', {\n  name: /submit/i\n}).click();\nvar nodes = Array.from(container.querySelectorAll(\"\".concat(expectedFieldTypesWebComponents, \", \").concat(wrapperWebComponents)));\nvar errors = nodes.filter(function (node) {\n  return node.error;\n});\n(0, _chai.expect)(errors).to.have.lengthOf(expectedNumberOfErrors);",
              "err": {},
              "uuid": "3e37999e-3347-4991-a5b8-0e9ea0e7352d",
              "parentUUID": "75105b9a-17ef-4d0a-bc56-b99388ff3233",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "3e37999e-3347-4991-a5b8-0e9ea0e7352d"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 18,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "6eeb1480-c5b0-4cc2-97bf-27915b831b35",
          "title": "Preparer-type page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/20-10206/tests/unit/pages/preparerType.unit.spec.jsx",
          "file": "/src/applications/simple-forms/20-10206/tests/unit/pages/preparerType.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should have appropriate number of web components",
              "fullTitle": "Preparer-type page should have appropriate number of web components",
              "timedOut": false,
              "duration": 7,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps3 = getProps(),\n  mockStore = _getProps3.mockStore;\nvar _render3 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render3.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypesWebComponents)).to.have.lengthOf(expectedNumberOfFields);",
              "err": {},
              "uuid": "bc6278ab-8d4e-4143-a3c3-25c6c041d096",
              "parentUUID": "6eeb1480-c5b0-4cc2-97bf-27915b831b35",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "bc6278ab-8d4e-4143-a3c3-25c6c041d096"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 7,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "4ff16b43-2275-49ca-8467-c3dffdd06ab9",
          "title": "Preparer-type page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/20-10206/tests/unit/pages/preparerType.unit.spec.jsx",
          "file": "/src/applications/simple-forms/20-10206/tests/unit/pages/preparerType.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should show the correct number of errors on submit for web components",
              "fullTitle": "Preparer-type page should show the correct number of errors on submit for web components",
              "timedOut": false,
              "duration": 26,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps4 = getProps(),\n  mockStore = _getProps4.mockStore;\nvar _render4 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render4.container,\n  getByRole = _render4.getByRole;\ngetByRole('button', {\n  name: /submit/i\n}).click();\nvar nodes = Array.from(container.querySelectorAll(\"\".concat(expectedFieldTypesWebComponents, \", \").concat(wrapperWebComponents)));\nvar errors = nodes.filter(function (node) {\n  return node.error;\n});\n(0, _chai.expect)(errors).to.have.lengthOf(expectedNumberOfErrors);",
              "err": {},
              "uuid": "5c4f42e1-c7af-4e27-b750-a8878d4e8af1",
              "parentUUID": "4ff16b43-2275-49ca-8467-c3dffdd06ab9",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "5c4f42e1-c7af-4e27-b750-a8878d4e8af1"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 26,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "b09be8cf-aec6-4941-8b5b-fad5b941d3a9",
          "title": "Record selections page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/20-10206/tests/unit/pages/recordSelections.unit.spec.jsx",
          "file": "/src/applications/simple-forms/20-10206/tests/unit/pages/recordSelections.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should have appropriate number of web components",
              "fullTitle": "Record selections page should have appropriate number of web components",
              "timedOut": false,
              "duration": 9,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps3 = getProps(),\n  mockStore = _getProps3.mockStore;\nvar _render3 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render3.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypesWebComponents)).to.have.lengthOf(expectedNumberOfFields);",
              "err": {},
              "uuid": "77066a9d-3dc5-4918-b446-dbd5140db41a",
              "parentUUID": "b09be8cf-aec6-4941-8b5b-fad5b941d3a9",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "77066a9d-3dc5-4918-b446-dbd5140db41a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 9,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "070a38c4-cb51-4098-b611-df30be4e2cf8",
          "title": "Record selections page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/20-10206/tests/unit/pages/recordSelections.unit.spec.jsx",
          "file": "/src/applications/simple-forms/20-10206/tests/unit/pages/recordSelections.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should show the correct number of errors on submit for web components",
              "fullTitle": "Record selections page should show the correct number of errors on submit for web components",
              "timedOut": false,
              "duration": 19,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps4 = getProps(),\n  mockStore = _getProps4.mockStore;\nvar _render4 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render4.container,\n  getByRole = _render4.getByRole;\ngetByRole('button', {\n  name: /submit/i\n}).click();\nvar nodes = Array.from(container.querySelectorAll(\"\".concat(expectedFieldTypesWebComponents, \", \").concat(wrapperWebComponents)));\nvar errors = nodes.filter(function (node) {\n  return node.error;\n});\n(0, _chai.expect)(errors).to.have.lengthOf(expectedNumberOfErrors);",
              "err": {},
              "uuid": "f3a366c3-5718-42cd-93cb-3c7ca357aabc",
              "parentUUID": "070a38c4-cb51-4098-b611-df30be4e2cf8",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f3a366c3-5718-42cd-93cb-3c7ca357aabc"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 19,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "03d41e67-ae75-42ad-8d3f-0229d4695d6d",
          "title": "<AlsViewField />",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/20-10207/tests/unit/components/AlsViewField.unit.spec.jsx",
          "file": "/src/applications/simple-forms/20-10207/tests/unit/components/AlsViewField.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [
            {
              "title": "\"after each\" hook in \"<AlsViewField />\"",
              "fullTitle": "<AlsViewField /> \"after each\" hook in \"<AlsViewField />\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "if (wrapper) {\n  wrapper.unmount();\n  wrapper = null;\n}\ndone();",
              "err": {},
              "uuid": "a21a5711-8c1b-43d6-8885-c6ebc4cabc08",
              "parentUUID": "03d41e67-ae75-42ad-8d3f-0229d4695d6d",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "renders without crashing",
              "fullTitle": "<AlsViewField /> renders without crashing",
              "timedOut": false,
              "duration": 4,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// eslint-disable-next-line @department-of-veterans-affairs/enzyme-unmount\nwrapper = (0, _enzyme.mount)(/*#__PURE__*/_react.default.createElement(_AlsViewField.default, {\n  defaultEditButton: function defaultEditButton() {},\n  formData: mockFormData\n}));\n(0, _chai.expect)(wrapper.exists()).to.equal(true);\ndone();",
              "err": {},
              "uuid": "34de7198-7c2f-44a9-8106-494ccc06fc4a",
              "parentUUID": "03d41e67-ae75-42ad-8d3f-0229d4695d6d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "renders ALS_DESCRIPTION",
              "fullTitle": "<AlsViewField /> renders ALS_DESCRIPTION",
              "timedOut": false,
              "duration": 5,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// eslint-disable-next-line @department-of-veterans-affairs/enzyme-unmount\nwrapper = (0, _enzyme.mount)(/*#__PURE__*/_react.default.createElement(_AlsViewField.default, {\n  defaultEditButton: function defaultEditButton() {},\n  formData: mockFormData\n}));\n(0, _chai.expect)(wrapper.contains(_constants.ALS_DESCRIPTION)).to.equal(true);\ndone();",
              "err": {},
              "uuid": "822d53af-6d3e-4ae1-ac95-7143c5f9a525",
              "parentUUID": "03d41e67-ae75-42ad-8d3f-0229d4695d6d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "renders alsDocuments when provided",
              "fullTitle": "<AlsViewField /> renders alsDocuments when provided",
              "timedOut": false,
              "duration": 5,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// eslint-disable-next-line @department-of-veterans-affairs/enzyme-unmount\nwrapper = (0, _enzyme.mount)(/*#__PURE__*/_react.default.createElement(_AlsViewField.default, {\n  defaultEditButton: function defaultEditButton() {},\n  formData: mockFormData\n}));\n(0, _chai.expect)(wrapper.find('.va-growable-background')).to.have.lengthOf(mockFormData.alsDocuments.length);\ndone();",
              "err": {},
              "uuid": "0413e173-f476-4677-92c4-88ebc0e94d97",
              "parentUUID": "03d41e67-ae75-42ad-8d3f-0229d4695d6d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "34de7198-7c2f-44a9-8106-494ccc06fc4a",
            "822d53af-6d3e-4ae1-ac95-7143c5f9a525",
            "0413e173-f476-4677-92c4-88ebc0e94d97"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 14,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "a9375ff3-fe80-40a2-92c6-51b0992c08ac",
          "title": "<FinancialHardshipViewField />",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/20-10207/tests/unit/components/FinancialHardshipViewField.unit.spec.jsx",
          "file": "/src/applications/simple-forms/20-10207/tests/unit/components/FinancialHardshipViewField.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [
            {
              "title": "\"after each\" hook in \"<FinancialHardshipViewField />\"",
              "fullTitle": "<FinancialHardshipViewField /> \"after each\" hook in \"<FinancialHardshipViewField />\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "if (wrapper) {\n  wrapper.unmount();\n  wrapper = null;\n}\ndone();",
              "err": {},
              "uuid": "3b0f4c37-29b0-45c0-9291-e3201134da68",
              "parentUUID": "a9375ff3-fe80-40a2-92c6-51b0992c08ac",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "renders without crashing",
              "fullTitle": "<FinancialHardshipViewField /> renders without crashing",
              "timedOut": false,
              "duration": 3,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// eslint-disable-next-line @department-of-veterans-affairs/enzyme-unmount\nwrapper = (0, _enzyme.mount)(/*#__PURE__*/_react.default.createElement(_FinancialHardshipViewField.default, {\n  defaultEditButton: function defaultEditButton() {},\n  formData: mockFormData\n}));\n(0, _chai.expect)(wrapper.exists()).to.equal(true);\ndone();",
              "err": {},
              "uuid": "54a74b23-56b5-4b6c-b72d-dae81c81e1ac",
              "parentUUID": "a9375ff3-fe80-40a2-92c6-51b0992c08ac",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "renders FINANCIAL_HARDSHIP_DESCRIPTION",
              "fullTitle": "<FinancialHardshipViewField /> renders FINANCIAL_HARDSHIP_DESCRIPTION",
              "timedOut": false,
              "duration": 4,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// eslint-disable-next-line @department-of-veterans-affairs/enzyme-unmount\nwrapper = (0, _enzyme.mount)(/*#__PURE__*/_react.default.createElement(_FinancialHardshipViewField.default, {\n  defaultEditButton: function defaultEditButton() {},\n  formData: mockFormData\n}));\n(0, _chai.expect)(wrapper.contains(_constants.FINANCIAL_HARDSHIP_DESCRIPTION)).to.equal(true);\ndone();",
              "err": {},
              "uuid": "486d1afa-7da2-4432-b814-c77f27dfd588",
              "parentUUID": "a9375ff3-fe80-40a2-92c6-51b0992c08ac",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "renders financialHardshipDocuments when provided",
              "fullTitle": "<FinancialHardshipViewField /> renders financialHardshipDocuments when provided",
              "timedOut": false,
              "duration": 4,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// eslint-disable-next-line @department-of-veterans-affairs/enzyme-unmount\nwrapper = (0, _enzyme.mount)(/*#__PURE__*/_react.default.createElement(_FinancialHardshipViewField.default, {\n  defaultEditButton: function defaultEditButton() {},\n  formData: mockFormData\n}));\n(0, _chai.expect)(wrapper.find('.va-growable-background')).to.have.lengthOf(mockFormData.financialHardshipDocuments.length);\ndone();",
              "err": {},
              "uuid": "5100780e-8f77-4e65-b18b-853d3251ddcd",
              "parentUUID": "a9375ff3-fe80-40a2-92c6-51b0992c08ac",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "54a74b23-56b5-4b6c-b72d-dae81c81e1ac",
            "486d1afa-7da2-4432-b814-c77f27dfd588",
            "5100780e-8f77-4e65-b18b-853d3251ddcd"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 11,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "857bf4b3-8248-488f-95b8-5425906ae82a",
          "title": "<MedalAwardViewField />",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/20-10207/tests/unit/components/MedalAwardViewField.unit.spec.jsx",
          "file": "/src/applications/simple-forms/20-10207/tests/unit/components/MedalAwardViewField.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [
            {
              "title": "\"after each\" hook in \"<MedalAwardViewField />\"",
              "fullTitle": "<MedalAwardViewField /> \"after each\" hook in \"<MedalAwardViewField />\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "if (wrapper) {\n  wrapper.unmount();\n  wrapper = null;\n}\ndone();",
              "err": {},
              "uuid": "30a84e40-c11a-4d2f-b941-afd86c3f24a9",
              "parentUUID": "857bf4b3-8248-488f-95b8-5425906ae82a",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "renders without crashing",
              "fullTitle": "<MedalAwardViewField /> renders without crashing",
              "timedOut": false,
              "duration": 5,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// eslint-disable-next-line @department-of-veterans-affairs/enzyme-unmount\nwrapper = (0, _enzyme.mount)(/*#__PURE__*/_react.default.createElement(_MedalAwardViewField.default, {\n  defaultEditButton: function defaultEditButton() {},\n  formData: mockFormData\n}));\n(0, _chai.expect)(wrapper.exists()).to.equal(true);\ndone();",
              "err": {},
              "uuid": "96a9fca3-529d-407a-8369-b56535f454d4",
              "parentUUID": "857bf4b3-8248-488f-95b8-5425906ae82a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "renders MEDAL_AWARD_DESCRIPTION",
              "fullTitle": "<MedalAwardViewField /> renders MEDAL_AWARD_DESCRIPTION",
              "timedOut": false,
              "duration": 4,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// eslint-disable-next-line @department-of-veterans-affairs/enzyme-unmount\nwrapper = (0, _enzyme.mount)(/*#__PURE__*/_react.default.createElement(_MedalAwardViewField.default, {\n  defaultEditButton: function defaultEditButton() {},\n  formData: mockFormData\n}));\n(0, _chai.expect)(wrapper.contains(_constants.MEDAL_AWARD_DESCRIPTION)).to.equal(true);\ndone();",
              "err": {},
              "uuid": "44911ddb-199e-4f5b-acc0-843caaa3005e",
              "parentUUID": "857bf4b3-8248-488f-95b8-5425906ae82a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "renders medalAwardDocuments when provided",
              "fullTitle": "<MedalAwardViewField /> renders medalAwardDocuments when provided",
              "timedOut": false,
              "duration": 5,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// eslint-disable-next-line @department-of-veterans-affairs/enzyme-unmount\nwrapper = (0, _enzyme.mount)(/*#__PURE__*/_react.default.createElement(_MedalAwardViewField.default, {\n  defaultEditButton: function defaultEditButton() {},\n  formData: mockFormData\n}));\n(0, _chai.expect)(wrapper.find('.va-growable-background')).to.have.lengthOf(mockFormData.medalAwardDocuments.length);\ndone();",
              "err": {},
              "uuid": "25f5ba92-34b4-4627-801c-7998d4c0b88c",
              "parentUUID": "857bf4b3-8248-488f-95b8-5425906ae82a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "96a9fca3-529d-407a-8369-b56535f454d4",
            "44911ddb-199e-4f5b-acc0-843caaa3005e",
            "25f5ba92-34b4-4627-801c-7998d4c0b88c"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 14,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "8b3dc4d6-00c3-498e-bddb-44f2bc4224de",
          "title": "<PowViewField />",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/20-10207/tests/unit/components/PowViewField.unit.spec.jsx",
          "file": "/src/applications/simple-forms/20-10207/tests/unit/components/PowViewField.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [
            {
              "title": "\"after each\" hook in \"<PowViewField />\"",
              "fullTitle": "<PowViewField /> \"after each\" hook in \"<PowViewField />\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "if (wrapper) {\n  wrapper.unmount();\n  wrapper = null;\n}\ndone();",
              "err": {},
              "uuid": "b0e86b8c-db76-4cde-9043-2adc97b9fbcb",
              "parentUUID": "8b3dc4d6-00c3-498e-bddb-44f2bc4224de",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "renders without crashing",
              "fullTitle": "<PowViewField /> renders without crashing",
              "timedOut": false,
              "duration": 3,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// eslint-disable-next-line @department-of-veterans-affairs/enzyme-unmount\nwrapper = (0, _enzyme.mount)(/*#__PURE__*/_react.default.createElement(_PowViewField.default, {\n  defaultEditButton: function defaultEditButton() {},\n  formData: mockFormData\n}));\n(0, _chai.expect)(wrapper.exists()).to.equal(true);\ndone();",
              "err": {},
              "uuid": "0f2a729d-c1f7-4567-9815-c4a1e2870ece",
              "parentUUID": "8b3dc4d6-00c3-498e-bddb-44f2bc4224de",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "renders POW_DESCRIPTION",
              "fullTitle": "<PowViewField /> renders POW_DESCRIPTION",
              "timedOut": false,
              "duration": 5,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// eslint-disable-next-line @department-of-veterans-affairs/enzyme-unmount\nwrapper = (0, _enzyme.mount)(/*#__PURE__*/_react.default.createElement(_PowViewField.default, {\n  defaultEditButton: function defaultEditButton() {},\n  formData: mockFormData\n}));\n(0, _chai.expect)(wrapper.contains(_constants.POW_DESCRIPTION)).to.equal(true);\ndone();",
              "err": {},
              "uuid": "d799e0d9-96af-4336-90d1-0af6e1d201ae",
              "parentUUID": "8b3dc4d6-00c3-498e-bddb-44f2bc4224de",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "renders powDocuments when provided",
              "fullTitle": "<PowViewField /> renders powDocuments when provided",
              "timedOut": false,
              "duration": 3,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// eslint-disable-next-line @department-of-veterans-affairs/enzyme-unmount\nwrapper = (0, _enzyme.mount)(/*#__PURE__*/_react.default.createElement(_PowViewField.default, {\n  defaultEditButton: function defaultEditButton() {},\n  formData: mockFormData\n}));\n(0, _chai.expect)(wrapper.find('.va-growable-background')).to.have.lengthOf(mockFormData.powDocuments.length);\ndone();",
              "err": {},
              "uuid": "94b9717c-c19f-4a02-9e86-17167f4e34bb",
              "parentUUID": "8b3dc4d6-00c3-498e-bddb-44f2bc4224de",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "0f2a729d-c1f7-4567-9815-c4a1e2870ece",
            "d799e0d9-96af-4336-90d1-0af6e1d201ae",
            "94b9717c-c19f-4a02-9e86-17167f4e34bb"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 11,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "4e65f579-d952-4d4e-8d4f-238f39092df9",
          "title": "<TerminalIllnessViewField />",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/20-10207/tests/unit/components/TerminalIllnessViewField.unit.spec.jsx",
          "file": "/src/applications/simple-forms/20-10207/tests/unit/components/TerminalIllnessViewField.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [
            {
              "title": "\"after each\" hook in \"<TerminalIllnessViewField />\"",
              "fullTitle": "<TerminalIllnessViewField /> \"after each\" hook in \"<TerminalIllnessViewField />\"",
              "timedOut": false,
              "duration": 1,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "if (wrapper) {\n  wrapper.unmount();\n  wrapper = null;\n}\ndone();",
              "err": {},
              "uuid": "9cf343e5-c81d-48f3-ad1b-2cb8ef79c064",
              "parentUUID": "4e65f579-d952-4d4e-8d4f-238f39092df9",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "renders without crashing",
              "fullTitle": "<TerminalIllnessViewField /> renders without crashing",
              "timedOut": false,
              "duration": 3,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// eslint-disable-next-line @department-of-veterans-affairs/enzyme-unmount\nwrapper = (0, _enzyme.mount)(/*#__PURE__*/_react.default.createElement(_TerminalIllnessViewField.default, {\n  defaultEditButton: function defaultEditButton() {},\n  formData: mockFormData\n}));\n(0, _chai.expect)(wrapper.exists()).to.equal(true);\ndone();",
              "err": {},
              "uuid": "82d6f5b8-2bfd-4eb7-9227-5331f3ef7c52",
              "parentUUID": "4e65f579-d952-4d4e-8d4f-238f39092df9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "renders TERMINAL_ILLNESS_DESCRIPTION",
              "fullTitle": "<TerminalIllnessViewField /> renders TERMINAL_ILLNESS_DESCRIPTION",
              "timedOut": false,
              "duration": 4,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// eslint-disable-next-line @department-of-veterans-affairs/enzyme-unmount\nwrapper = (0, _enzyme.mount)(/*#__PURE__*/_react.default.createElement(_TerminalIllnessViewField.default, {\n  defaultEditButton: function defaultEditButton() {},\n  formData: mockFormData\n}));\n(0, _chai.expect)(wrapper.contains(_constants.TERMINAL_ILLNESS_DESCRIPTION)).to.equal(true);\ndone();",
              "err": {},
              "uuid": "a80871fb-0391-4d9e-9562-670e83a8f466",
              "parentUUID": "4e65f579-d952-4d4e-8d4f-238f39092df9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "renders terminalIllnessDocuments when provided",
              "fullTitle": "<TerminalIllnessViewField /> renders terminalIllnessDocuments when provided",
              "timedOut": false,
              "duration": 5,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// eslint-disable-next-line @department-of-veterans-affairs/enzyme-unmount\nwrapper = (0, _enzyme.mount)(/*#__PURE__*/_react.default.createElement(_TerminalIllnessViewField.default, {\n  defaultEditButton: function defaultEditButton() {},\n  formData: mockFormData\n}));\n(0, _chai.expect)(wrapper.find('.va-growable-background')).to.have.lengthOf(mockFormData.terminalIllnessDocuments.length);\ndone();",
              "err": {},
              "uuid": "616385c8-d80f-4fd3-b920-18142fbe24b2",
              "parentUUID": "4e65f579-d952-4d4e-8d4f-238f39092df9",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "82d6f5b8-2bfd-4eb7-9227-5331f3ef7c52",
            "a80871fb-0391-4d9e-9562-670e83a8f466",
            "616385c8-d80f-4fd3-b920-18142fbe24b2"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 12,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "5cb44921-5dca-4a7b-843d-88197d4c4a7a",
          "title": "<VsiViewField />",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/20-10207/tests/unit/components/VsiViewField.unit.spec.jsx",
          "file": "/src/applications/simple-forms/20-10207/tests/unit/components/VsiViewField.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [
            {
              "title": "\"after each\" hook in \"<VsiViewField />\"",
              "fullTitle": "<VsiViewField /> \"after each\" hook in \"<VsiViewField />\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "if (wrapper) {\n  wrapper.unmount();\n  wrapper = null;\n}\ndone();",
              "err": {},
              "uuid": "9439b48e-53ed-4036-8014-f9ce1e4201f0",
              "parentUUID": "5cb44921-5dca-4a7b-843d-88197d4c4a7a",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "renders without crashing",
              "fullTitle": "<VsiViewField /> renders without crashing",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// eslint-disable-next-line @department-of-veterans-affairs/enzyme-unmount\nwrapper = (0, _enzyme.mount)(/*#__PURE__*/_react.default.createElement(_VsiViewField.default, {\n  defaultEditButton: function defaultEditButton() {},\n  formData: mockFormData\n}));\n(0, _chai.expect)(wrapper.exists()).to.equal(true);\ndone();",
              "err": {},
              "uuid": "b7fd39ae-85bc-44fe-b4eb-4d1ccdf499a2",
              "parentUUID": "5cb44921-5dca-4a7b-843d-88197d4c4a7a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "renders VSI_DESCRIPTION",
              "fullTitle": "<VsiViewField /> renders VSI_DESCRIPTION",
              "timedOut": false,
              "duration": 4,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// eslint-disable-next-line @department-of-veterans-affairs/enzyme-unmount\nwrapper = (0, _enzyme.mount)(/*#__PURE__*/_react.default.createElement(_VsiViewField.default, {\n  defaultEditButton: function defaultEditButton() {},\n  formData: mockFormData\n}));\n(0, _chai.expect)(wrapper.contains(_constants.VSI_DESCRIPTION)).to.equal(true);\ndone();",
              "err": {},
              "uuid": "be910de5-3aa4-44de-b420-247ae1304bd8",
              "parentUUID": "5cb44921-5dca-4a7b-843d-88197d4c4a7a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "renders vsiDocuments when provided",
              "fullTitle": "<VsiViewField /> renders vsiDocuments when provided",
              "timedOut": false,
              "duration": 5,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// eslint-disable-next-line @department-of-veterans-affairs/enzyme-unmount\nwrapper = (0, _enzyme.mount)(/*#__PURE__*/_react.default.createElement(_VsiViewField.default, {\n  defaultEditButton: function defaultEditButton() {},\n  formData: mockFormData\n}));\n(0, _chai.expect)(wrapper.find('.va-growable-background')).to.have.lengthOf(mockFormData.vsiDocuments.length);\ndone();",
              "err": {},
              "uuid": "2ae71903-f9f3-48e7-8a38-2f7ba4c93cb7",
              "parentUUID": "5cb44921-5dca-4a7b-843d-88197d4c4a7a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "b7fd39ae-85bc-44fe-b4eb-4d1ccdf499a2",
            "be910de5-3aa4-44de-b420-247ae1304bd8",
            "2ae71903-f9f3-48e7-8a38-2f7ba4c93cb7"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 11,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "822ec4d0-e95c-4ca1-ada8-5204b74838fb",
          "title": "formConfig",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/20-10207/tests/unit/config/form.unit.spec.js",
          "file": "/src/applications/simple-forms/20-10207/tests/unit/config/form.unit.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "is an object",
              "fullTitle": "formConfig is an object",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, _chai.expect)(_form.default).to.be.an('object');",
              "err": {},
              "uuid": "e8b58d4d-e01d-4978-85cd-82504ed1be2c",
              "parentUUID": "822ec4d0-e95c-4ca1-ada8-5204b74838fb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "has a rootUrl property",
              "fullTitle": "formConfig has a rootUrl property",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, _chai.expect)(_form.default).to.have.property('rootUrl');\n(0, _chai.expect)(_form.default.rootUrl).to.be.a('string');",
              "err": {},
              "uuid": "57db996d-4f74-4ec3-8534-3745f4727364",
              "parentUUID": "822ec4d0-e95c-4ca1-ada8-5204b74838fb",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [
            {
              "uuid": "18675720-b8d4-4d81-923e-832c0497c55c",
              "title": "chapters",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/20-10207/tests/unit/config/form.unit.spec.js",
              "file": "/src/applications/simple-forms/20-10207/tests/unit/config/form.unit.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "is an object",
                  "fullTitle": "formConfig chapters is an object",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)(_form.default.chapters).to.be.an('object');",
                  "err": {},
                  "uuid": "a038e762-7e72-46e0-9ea2-270e8c86f262",
                  "parentUUID": "18675720-b8d4-4d81-923e-832c0497c55c",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [
                {
                  "uuid": "4d3eb6f1-e35a-4a77-9fda-f9af3187222e",
                  "title": "Dynamic chapter-titles",
                  "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/20-10207/tests/unit/config/form.unit.spec.js",
                  "file": "/src/applications/simple-forms/20-10207/tests/unit/config/form.unit.spec.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [],
                  "suites": [
                    {
                      "uuid": "d6a1f58f-96b4-4cc6-acc4-e75e600d77b0",
                      "title": "Personal-information chapter-title",
                      "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/20-10207/tests/unit/config/form.unit.spec.js",
                      "file": "/src/applications/simple-forms/20-10207/tests/unit/config/form.unit.spec.js",
                      "beforeHooks": [],
                      "afterHooks": [],
                      "tests": [
                        {
                          "title": "returns correct chapter-title for preparerType veteran",
                          "fullTitle": "formConfig chapters Dynamic chapter-titles Personal-information chapter-title returns correct chapter-title for preparerType veteran",
                          "timedOut": false,
                          "duration": 0,
                          "state": "passed",
                          "speed": "fast",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "(0, _chai.expect)(titleFunction({\n  formData: mockFormDataVet\n})).to.equal(\"Your \".concat(titleEnding));",
                          "err": {},
                          "uuid": "4b761a2b-5d9c-4659-9486-c38aa55b9ecc",
                          "parentUUID": "d6a1f58f-96b4-4cc6-acc4-e75e600d77b0",
                          "isHook": false,
                          "skipped": false
                        },
                        {
                          "title": "returns correct chapter-title for preparerType non-veteran",
                          "fullTitle": "formConfig chapters Dynamic chapter-titles Personal-information chapter-title returns correct chapter-title for preparerType non-veteran",
                          "timedOut": false,
                          "duration": 0,
                          "state": "passed",
                          "speed": "fast",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "(0, _chai.expect)(titleFunction({\n  formData: mockFormDataNonVet\n})).to.equal(\"Your \".concat(titleEnding));",
                          "err": {},
                          "uuid": "8628c6c5-2ea3-41a9-b85f-3ca3f41984b1",
                          "parentUUID": "d6a1f58f-96b4-4cc6-acc4-e75e600d77b0",
                          "isHook": false,
                          "skipped": false
                        },
                        {
                          "title": "returns correct chapter-title for preparerType third-party-veteran",
                          "fullTitle": "formConfig chapters Dynamic chapter-titles Personal-information chapter-title returns correct chapter-title for preparerType third-party-veteran",
                          "timedOut": false,
                          "duration": 0,
                          "state": "passed",
                          "speed": "fast",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "(0, _chai.expect)(titleFunction({\n  formData: mockFormData3rdPtyVet\n})).to.equal(\"Veteran\\u2019s \".concat(titleEnding));",
                          "err": {},
                          "uuid": "a21fe035-6c51-4312-b4ce-561a1e36c992",
                          "parentUUID": "d6a1f58f-96b4-4cc6-acc4-e75e600d77b0",
                          "isHook": false,
                          "skipped": false
                        },
                        {
                          "title": "returns correct chapter-title for preparerType third-party-non-veteran",
                          "fullTitle": "formConfig chapters Dynamic chapter-titles Personal-information chapter-title returns correct chapter-title for preparerType third-party-non-veteran",
                          "timedOut": false,
                          "duration": 0,
                          "state": "passed",
                          "speed": "fast",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "(0, _chai.expect)(titleFunction({\n  formData: mockFormData3rdPtyNonVet\n})).to.equal(\"Claimant\\u2019s \".concat(titleEnding));",
                          "err": {},
                          "uuid": "afc66451-1855-4e3b-b61e-1f3c52083baa",
                          "parentUUID": "d6a1f58f-96b4-4cc6-acc4-e75e600d77b0",
                          "isHook": false,
                          "skipped": false
                        }
                      ],
                      "suites": [],
                      "passes": [
                        "4b761a2b-5d9c-4659-9486-c38aa55b9ecc",
                        "8628c6c5-2ea3-41a9-b85f-3ca3f41984b1",
                        "a21fe035-6c51-4312-b4ce-561a1e36c992",
                        "afc66451-1855-4e3b-b61e-1f3c52083baa"
                      ],
                      "failures": [],
                      "pending": [],
                      "skipped": [],
                      "duration": 0,
                      "root": false,
                      "rootEmpty": false,
                      "_timeout": 10000
                    },
                    {
                      "uuid": "d71fe4f4-f82e-4222-a9e1-68fd4e3d6df2",
                      "title": "Living-situation chapter-title",
                      "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/20-10207/tests/unit/config/form.unit.spec.js",
                      "file": "/src/applications/simple-forms/20-10207/tests/unit/config/form.unit.spec.js",
                      "beforeHooks": [],
                      "afterHooks": [],
                      "tests": [
                        {
                          "title": "returns correct chapter-title for preparerType veteran",
                          "fullTitle": "formConfig chapters Dynamic chapter-titles Living-situation chapter-title returns correct chapter-title for preparerType veteran",
                          "timedOut": false,
                          "duration": 0,
                          "state": "passed",
                          "speed": "fast",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "(0, _chai.expect)(titleFunction({\n  formData: mockFormDataVet\n})).to.equal(\"Your \".concat(titleEnding));",
                          "err": {},
                          "uuid": "6a25095f-6cc8-42bf-a398-6afeb6ca1ffc",
                          "parentUUID": "d71fe4f4-f82e-4222-a9e1-68fd4e3d6df2",
                          "isHook": false,
                          "skipped": false
                        },
                        {
                          "title": "returns correct chapter-title for preparerType non-veteran",
                          "fullTitle": "formConfig chapters Dynamic chapter-titles Living-situation chapter-title returns correct chapter-title for preparerType non-veteran",
                          "timedOut": false,
                          "duration": 0,
                          "state": "passed",
                          "speed": "fast",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "(0, _chai.expect)(titleFunction({\n  formData: mockFormDataNonVet\n})).to.equal(\"Your \".concat(titleEnding));",
                          "err": {},
                          "uuid": "5bac6af1-7df0-4c13-9272-3586146ad36d",
                          "parentUUID": "d71fe4f4-f82e-4222-a9e1-68fd4e3d6df2",
                          "isHook": false,
                          "skipped": false
                        },
                        {
                          "title": "returns correct chapter-title for preparerType third-party-veteran",
                          "fullTitle": "formConfig chapters Dynamic chapter-titles Living-situation chapter-title returns correct chapter-title for preparerType third-party-veteran",
                          "timedOut": false,
                          "duration": 0,
                          "state": "passed",
                          "speed": "fast",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "(0, _chai.expect)(titleFunction({\n  formData: mockFormData3rdPtyVet\n})).to.equal(\"Veteran\\u2019s \".concat(titleEnding));",
                          "err": {},
                          "uuid": "ecac65e6-fca9-4fb6-911a-c26f46bc4865",
                          "parentUUID": "d71fe4f4-f82e-4222-a9e1-68fd4e3d6df2",
                          "isHook": false,
                          "skipped": false
                        },
                        {
                          "title": "returns correct chapter-title for preparerType third-party-non-veteran",
                          "fullTitle": "formConfig chapters Dynamic chapter-titles Living-situation chapter-title returns correct chapter-title for preparerType third-party-non-veteran",
                          "timedOut": false,
                          "duration": 0,
                          "state": "passed",
                          "speed": "fast",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "(0, _chai.expect)(titleFunction({\n  formData: mockFormData3rdPtyNonVet\n})).to.equal(\"Claimant\\u2019s \".concat(titleEnding));",
                          "err": {},
                          "uuid": "83233eee-7b89-4778-b641-13f706d2c0fc",
                          "parentUUID": "d71fe4f4-f82e-4222-a9e1-68fd4e3d6df2",
                          "isHook": false,
                          "skipped": false
                        }
                      ],
                      "suites": [],
                      "passes": [
                        "6a25095f-6cc8-42bf-a398-6afeb6ca1ffc",
                        "5bac6af1-7df0-4c13-9272-3586146ad36d",
                        "ecac65e6-fca9-4fb6-911a-c26f46bc4865",
                        "83233eee-7b89-4778-b641-13f706d2c0fc"
                      ],
                      "failures": [],
                      "pending": [],
                      "skipped": [],
                      "duration": 0,
                      "root": false,
                      "rootEmpty": false,
                      "_timeout": 10000
                    },
                    {
                      "uuid": "93c12061-8060-45f5-93f2-e63b68f7f8cb",
                      "title": "Contact-info chapter-title",
                      "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/20-10207/tests/unit/config/form.unit.spec.js",
                      "file": "/src/applications/simple-forms/20-10207/tests/unit/config/form.unit.spec.js",
                      "beforeHooks": [],
                      "afterHooks": [],
                      "tests": [
                        {
                          "title": "returns correct Contact-info chapter-title for preparerType veteran",
                          "fullTitle": "formConfig chapters Dynamic chapter-titles Contact-info chapter-title returns correct Contact-info chapter-title for preparerType veteran",
                          "timedOut": false,
                          "duration": 0,
                          "state": "passed",
                          "speed": "fast",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "(0, _chai.expect)(titleFunction({\n  formData: mockFormDataVet\n})).to.equal(\"Your \".concat(titleEnding));",
                          "err": {},
                          "uuid": "16baa750-70f6-4fac-bd2d-47a23e5e1fd5",
                          "parentUUID": "93c12061-8060-45f5-93f2-e63b68f7f8cb",
                          "isHook": false,
                          "skipped": false
                        },
                        {
                          "title": "returns correct Contact-info chapter-title for preparerType non-veteran",
                          "fullTitle": "formConfig chapters Dynamic chapter-titles Contact-info chapter-title returns correct Contact-info chapter-title for preparerType non-veteran",
                          "timedOut": false,
                          "duration": 0,
                          "state": "passed",
                          "speed": "fast",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "(0, _chai.expect)(titleFunction({\n  formData: mockFormDataNonVet\n})).to.equal(\"Your \".concat(titleEnding));",
                          "err": {},
                          "uuid": "a1615ed3-1758-473a-badf-00d8e9727490",
                          "parentUUID": "93c12061-8060-45f5-93f2-e63b68f7f8cb",
                          "isHook": false,
                          "skipped": false
                        },
                        {
                          "title": "returns correct Contact-info chapter-title for preparerType third-party-veteran",
                          "fullTitle": "formConfig chapters Dynamic chapter-titles Contact-info chapter-title returns correct Contact-info chapter-title for preparerType third-party-veteran",
                          "timedOut": false,
                          "duration": 0,
                          "state": "passed",
                          "speed": "fast",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "(0, _chai.expect)(titleFunction({\n  formData: mockFormData3rdPtyVet\n})).to.equal(\"Veteran\\u2019s \".concat(titleEnding));",
                          "err": {},
                          "uuid": "e5dbe070-8867-446d-9791-1958391cee76",
                          "parentUUID": "93c12061-8060-45f5-93f2-e63b68f7f8cb",
                          "isHook": false,
                          "skipped": false
                        },
                        {
                          "title": "returns correct Contact-info chapter-title for preparerType third-party-non-veteran",
                          "fullTitle": "formConfig chapters Dynamic chapter-titles Contact-info chapter-title returns correct Contact-info chapter-title for preparerType third-party-non-veteran",
                          "timedOut": false,
                          "duration": 0,
                          "state": "passed",
                          "speed": "fast",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "(0, _chai.expect)(titleFunction({\n  formData: mockFormData3rdPtyNonVet\n})).to.equal(\"Claimant\\u2019s \".concat(titleEnding));",
                          "err": {},
                          "uuid": "fdb06ca1-4393-4fab-80b8-66b363dde1a4",
                          "parentUUID": "93c12061-8060-45f5-93f2-e63b68f7f8cb",
                          "isHook": false,
                          "skipped": false
                        }
                      ],
                      "suites": [],
                      "passes": [
                        "16baa750-70f6-4fac-bd2d-47a23e5e1fd5",
                        "a1615ed3-1758-473a-badf-00d8e9727490",
                        "e5dbe070-8867-446d-9791-1958391cee76",
                        "fdb06ca1-4393-4fab-80b8-66b363dde1a4"
                      ],
                      "failures": [],
                      "pending": [],
                      "skipped": [],
                      "duration": 0,
                      "root": false,
                      "rootEmpty": false,
                      "_timeout": 10000
                    }
                  ],
                  "passes": [],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                }
              ],
              "passes": [
                "a038e762-7e72-46e0-9ea2-270e8c86f262"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "9f4e11f1-da7c-4c4e-b851-41098966038c",
              "title": "page.depends functions",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/20-10207/tests/unit/config/form.unit.spec.js",
              "file": "/src/applications/simple-forms/20-10207/tests/unit/config/form.unit.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [],
              "suites": [
                {
                  "uuid": "6d45ecbb-d6bf-4e10-95b8-e7751f2ccd7b",
                  "title": "preparerTypeChapter page.depends",
                  "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/20-10207/tests/unit/config/form.unit.spec.js",
                  "file": "/src/applications/simple-forms/20-10207/tests/unit/config/form.unit.spec.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [],
                  "suites": [
                    {
                      "uuid": "a5ba8718-1161-411b-a645-32e9774e249d",
                      "title": "thirdPartyVeteranIdentityPage.depends",
                      "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/20-10207/tests/unit/config/form.unit.spec.js",
                      "file": "/src/applications/simple-forms/20-10207/tests/unit/config/form.unit.spec.js",
                      "beforeHooks": [],
                      "afterHooks": [],
                      "tests": [
                        {
                          "title": "returns FALSE if preparerType is veteran",
                          "fullTitle": "formConfig page.depends functions preparerTypeChapter page.depends thirdPartyVeteranIdentityPage.depends returns FALSE if preparerType is veteran",
                          "timedOut": false,
                          "duration": 0,
                          "state": "passed",
                          "speed": "fast",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "(0, _chai.expect)(depends({\n  preparerType: _constants.PREPARER_TYPES.VETERAN\n})).to.be.false;",
                          "err": {},
                          "uuid": "366cc619-96f3-4239-8c0a-c85807a1db45",
                          "parentUUID": "a5ba8718-1161-411b-a645-32e9774e249d",
                          "isHook": false,
                          "skipped": false
                        },
                        {
                          "title": "returns TRUE if preparerType is third-party-veteran",
                          "fullTitle": "formConfig page.depends functions preparerTypeChapter page.depends thirdPartyVeteranIdentityPage.depends returns TRUE if preparerType is third-party-veteran",
                          "timedOut": false,
                          "duration": 0,
                          "state": "passed",
                          "speed": "fast",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "(0, _chai.expect)(depends({\n  preparerType: _constants.PREPARER_TYPES.THIRD_PARTY_VETERAN\n})).to.be.true;",
                          "err": {},
                          "uuid": "9843e535-041e-486d-8dc1-575168c9a9fd",
                          "parentUUID": "a5ba8718-1161-411b-a645-32e9774e249d",
                          "isHook": false,
                          "skipped": false
                        }
                      ],
                      "suites": [],
                      "passes": [
                        "366cc619-96f3-4239-8c0a-c85807a1db45",
                        "9843e535-041e-486d-8dc1-575168c9a9fd"
                      ],
                      "failures": [],
                      "pending": [],
                      "skipped": [],
                      "duration": 0,
                      "root": false,
                      "rootEmpty": false,
                      "_timeout": 10000
                    },
                    {
                      "uuid": "9ea7ac91-2111-4164-bf8c-38d43b4bdcaa",
                      "title": "thirdPartyNonVeteranIdentityPage.depends",
                      "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/20-10207/tests/unit/config/form.unit.spec.js",
                      "file": "/src/applications/simple-forms/20-10207/tests/unit/config/form.unit.spec.js",
                      "beforeHooks": [],
                      "afterHooks": [],
                      "tests": [
                        {
                          "title": "returns FALSE if preparerType is non-veteran",
                          "fullTitle": "formConfig page.depends functions preparerTypeChapter page.depends thirdPartyNonVeteranIdentityPage.depends returns FALSE if preparerType is non-veteran",
                          "timedOut": false,
                          "duration": 0,
                          "state": "passed",
                          "speed": "fast",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "(0, _chai.expect)(depends({\n  preparerType: _constants.PREPARER_TYPES.NON_VETERAN\n})).to.be.false;",
                          "err": {},
                          "uuid": "4e7724e1-9de6-4f69-aea1-1f7dc75cb947",
                          "parentUUID": "9ea7ac91-2111-4164-bf8c-38d43b4bdcaa",
                          "isHook": false,
                          "skipped": false
                        },
                        {
                          "title": "returns TRUE if preparerType is third-party-non-veteran",
                          "fullTitle": "formConfig page.depends functions preparerTypeChapter page.depends thirdPartyNonVeteranIdentityPage.depends returns TRUE if preparerType is third-party-non-veteran",
                          "timedOut": false,
                          "duration": 0,
                          "state": "passed",
                          "speed": "fast",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "(0, _chai.expect)(depends({\n  preparerType: _constants.PREPARER_TYPES.THIRD_PARTY_NON_VETERAN\n})).to.be.true;",
                          "err": {},
                          "uuid": "763c2202-ed4a-408b-9283-57b0a755651c",
                          "parentUUID": "9ea7ac91-2111-4164-bf8c-38d43b4bdcaa",
                          "isHook": false,
                          "skipped": false
                        }
                      ],
                      "suites": [],
                      "passes": [
                        "4e7724e1-9de6-4f69-aea1-1f7dc75cb947",
                        "763c2202-ed4a-408b-9283-57b0a755651c"
                      ],
                      "failures": [],
                      "pending": [],
                      "skipped": [],
                      "duration": 0,
                      "root": false,
                      "rootEmpty": false,
                      "_timeout": 10000
                    }
                  ],
                  "passes": [],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "e1432db7-891e-4e1b-8adc-b0ee003558ee",
                  "title": "personalInformationChapter page.depends",
                  "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/20-10207/tests/unit/config/form.unit.spec.js",
                  "file": "/src/applications/simple-forms/20-10207/tests/unit/config/form.unit.spec.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [],
                  "suites": [
                    {
                      "uuid": "f071c9eb-2ccc-4d06-81c1-9bbee68afb62",
                      "title": "veteranNameAndDateOfBirthPageA.depends",
                      "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/20-10207/tests/unit/config/form.unit.spec.js",
                      "file": "/src/applications/simple-forms/20-10207/tests/unit/config/form.unit.spec.js",
                      "beforeHooks": [],
                      "afterHooks": [],
                      "tests": [
                        {
                          "title": "returns TRUE if preparerType is veteran or third-party-veteran",
                          "fullTitle": "formConfig page.depends functions personalInformationChapter page.depends veteranNameAndDateOfBirthPageA.depends returns TRUE if preparerType is veteran or third-party-veteran",
                          "timedOut": false,
                          "duration": 0,
                          "state": "passed",
                          "speed": "fast",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "(0, _chai.expect)(depends({\n  preparerType: _constants.PREPARER_TYPES.VETERAN\n})).to.be.true;\n(0, _chai.expect)(depends({\n  preparerType: _constants.PREPARER_TYPES.THIRD_PARTY_VETERAN\n})).to.be.true;",
                          "err": {},
                          "uuid": "6c449d3b-d2ce-4cc7-812b-a5c21514625d",
                          "parentUUID": "f071c9eb-2ccc-4d06-81c1-9bbee68afb62",
                          "isHook": false,
                          "skipped": false
                        },
                        {
                          "title": "returns FALSE if preparerType is non-veteran or third-party-non-veteran",
                          "fullTitle": "formConfig page.depends functions personalInformationChapter page.depends veteranNameAndDateOfBirthPageA.depends returns FALSE if preparerType is non-veteran or third-party-non-veteran",
                          "timedOut": false,
                          "duration": 0,
                          "state": "passed",
                          "speed": "fast",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "(0, _chai.expect)(depends({\n  preparerType: _constants.PREPARER_TYPES.NON_VETERAN\n})).to.be.false;\n(0, _chai.expect)(depends({\n  preparerType: _constants.PREPARER_TYPES.THIRD_PARTY__NON_VETERAN\n})).to.be.false;",
                          "err": {},
                          "uuid": "2b885612-15f5-4c3c-b90e-b2141ad86398",
                          "parentUUID": "f071c9eb-2ccc-4d06-81c1-9bbee68afb62",
                          "isHook": false,
                          "skipped": false
                        }
                      ],
                      "suites": [],
                      "passes": [
                        "6c449d3b-d2ce-4cc7-812b-a5c21514625d",
                        "2b885612-15f5-4c3c-b90e-b2141ad86398"
                      ],
                      "failures": [],
                      "pending": [],
                      "skipped": [],
                      "duration": 0,
                      "root": false,
                      "rootEmpty": false,
                      "_timeout": 10000
                    },
                    {
                      "uuid": "4174afc9-67d7-469a-8737-6bb254520b40",
                      "title": "nonVeteranNameAndDateOfBirthPage.depends",
                      "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/20-10207/tests/unit/config/form.unit.spec.js",
                      "file": "/src/applications/simple-forms/20-10207/tests/unit/config/form.unit.spec.js",
                      "beforeHooks": [],
                      "afterHooks": [],
                      "tests": [
                        {
                          "title": "returns FALSE if preparerType is veteran or third-party-veteran",
                          "fullTitle": "formConfig page.depends functions personalInformationChapter page.depends nonVeteranNameAndDateOfBirthPage.depends returns FALSE if preparerType is veteran or third-party-veteran",
                          "timedOut": false,
                          "duration": 0,
                          "state": "passed",
                          "speed": "fast",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "(0, _chai.expect)(depends({\n  preparerType: _constants.PREPARER_TYPES.VETERAN\n})).to.be.false;\n(0, _chai.expect)(depends({\n  preparerType: _constants.PREPARER_TYPES.THIRD_PARTY_VETERAN\n})).to.be.false;",
                          "err": {},
                          "uuid": "537e7388-c7e5-4f3e-b5e4-1d068096e3e7",
                          "parentUUID": "4174afc9-67d7-469a-8737-6bb254520b40",
                          "isHook": false,
                          "skipped": false
                        },
                        {
                          "title": "returns TRUE if preparerType is non-veteran or third-party-non-veteran",
                          "fullTitle": "formConfig page.depends functions personalInformationChapter page.depends nonVeteranNameAndDateOfBirthPage.depends returns TRUE if preparerType is non-veteran or third-party-non-veteran",
                          "timedOut": false,
                          "duration": 0,
                          "state": "passed",
                          "speed": "fast",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "(0, _chai.expect)(depends({\n  preparerType: _constants.PREPARER_TYPES.NON_VETERAN\n})).to.be.true;\n(0, _chai.expect)(depends({\n  preparerType: _constants.PREPARER_TYPES.THIRD_PARTY_NON_VETERAN\n})).to.be.true;",
                          "err": {},
                          "uuid": "1016cd43-03ec-4498-bba7-f4d3ff467579",
                          "parentUUID": "4174afc9-67d7-469a-8737-6bb254520b40",
                          "isHook": false,
                          "skipped": false
                        }
                      ],
                      "suites": [],
                      "passes": [
                        "537e7388-c7e5-4f3e-b5e4-1d068096e3e7",
                        "1016cd43-03ec-4498-bba7-f4d3ff467579"
                      ],
                      "failures": [],
                      "pending": [],
                      "skipped": [],
                      "duration": 0,
                      "root": false,
                      "rootEmpty": false,
                      "_timeout": 10000
                    },
                    {
                      "uuid": "f58fefc5-b3a7-4cad-bcc1-7f49b091555e",
                      "title": "veteranIdentificationInformationPageA.depends",
                      "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/20-10207/tests/unit/config/form.unit.spec.js",
                      "file": "/src/applications/simple-forms/20-10207/tests/unit/config/form.unit.spec.js",
                      "beforeHooks": [],
                      "afterHooks": [],
                      "tests": [
                        {
                          "title": "returns TRUE if preparerType is veteran or third-party-veteran",
                          "fullTitle": "formConfig page.depends functions personalInformationChapter page.depends veteranIdentificationInformationPageA.depends returns TRUE if preparerType is veteran or third-party-veteran",
                          "timedOut": false,
                          "duration": 0,
                          "state": "passed",
                          "speed": "fast",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "(0, _chai.expect)(depends({\n  preparerType: _constants.PREPARER_TYPES.VETERAN\n})).to.be.true;\n(0, _chai.expect)(depends({\n  preparerType: _constants.PREPARER_TYPES.THIRD_PARTY_VETERAN\n})).to.be.true;",
                          "err": {},
                          "uuid": "8ae8bf02-6650-4191-95e3-485b488a496c",
                          "parentUUID": "f58fefc5-b3a7-4cad-bcc1-7f49b091555e",
                          "isHook": false,
                          "skipped": false
                        },
                        {
                          "title": "returns FALSE if preparerType is non-veteran or third-party-non-veteran",
                          "fullTitle": "formConfig page.depends functions personalInformationChapter page.depends veteranIdentificationInformationPageA.depends returns FALSE if preparerType is non-veteran or third-party-non-veteran",
                          "timedOut": false,
                          "duration": 0,
                          "state": "passed",
                          "speed": "fast",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "(0, _chai.expect)(depends({\n  preparerType: _constants.PREPARER_TYPES.NON_VETERAN\n})).to.be.false;\n(0, _chai.expect)(depends({\n  preparerType: _constants.PREPARER_TYPES.THIRD_PARTY_NON_VETERAN\n})).to.be.false;",
                          "err": {},
                          "uuid": "49e3e452-df2b-4015-9da5-06e78e1c6cd6",
                          "parentUUID": "f58fefc5-b3a7-4cad-bcc1-7f49b091555e",
                          "isHook": false,
                          "skipped": false
                        }
                      ],
                      "suites": [],
                      "passes": [
                        "8ae8bf02-6650-4191-95e3-485b488a496c",
                        "49e3e452-df2b-4015-9da5-06e78e1c6cd6"
                      ],
                      "failures": [],
                      "pending": [],
                      "skipped": [],
                      "duration": 0,
                      "root": false,
                      "rootEmpty": false,
                      "_timeout": 10000
                    },
                    {
                      "uuid": "7ebcc557-9897-40a2-8206-7430e9df3895",
                      "title": "nonVeteranIdentificationInformationPage.depends",
                      "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/20-10207/tests/unit/config/form.unit.spec.js",
                      "file": "/src/applications/simple-forms/20-10207/tests/unit/config/form.unit.spec.js",
                      "beforeHooks": [],
                      "afterHooks": [],
                      "tests": [
                        {
                          "title": "returns FALSE if preparerType is veteran or third-party-veteran",
                          "fullTitle": "formConfig page.depends functions personalInformationChapter page.depends nonVeteranIdentificationInformationPage.depends returns FALSE if preparerType is veteran or third-party-veteran",
                          "timedOut": false,
                          "duration": 0,
                          "state": "passed",
                          "speed": "fast",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "(0, _chai.expect)(depends({\n  preparerType: _constants.PREPARER_TYPES.VETERAN\n})).to.be.false;\n(0, _chai.expect)(depends({\n  preparerType: _constants.PREPARER_TYPES.THIRD_PARTY_VETERAN\n})).to.be.false;",
                          "err": {},
                          "uuid": "a385c2a9-1d70-47cd-a025-9b15c7de763a",
                          "parentUUID": "7ebcc557-9897-40a2-8206-7430e9df3895",
                          "isHook": false,
                          "skipped": false
                        },
                        {
                          "title": "returns TRUE if preparerType is non-veteran or third-party-non-veteran",
                          "fullTitle": "formConfig page.depends functions personalInformationChapter page.depends nonVeteranIdentificationInformationPage.depends returns TRUE if preparerType is non-veteran or third-party-non-veteran",
                          "timedOut": false,
                          "duration": 0,
                          "state": "passed",
                          "speed": "fast",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "(0, _chai.expect)(depends({\n  preparerType: _constants.PREPARER_TYPES.NON_VETERAN\n})).to.be.true;\n(0, _chai.expect)(depends({\n  preparerType: _constants.PREPARER_TYPES.THIRD_PARTY_NON_VETERAN\n})).to.be.true;",
                          "err": {},
                          "uuid": "ecfb4524-a469-41a8-97fd-70f154ec4e24",
                          "parentUUID": "7ebcc557-9897-40a2-8206-7430e9df3895",
                          "isHook": false,
                          "skipped": false
                        }
                      ],
                      "suites": [],
                      "passes": [
                        "a385c2a9-1d70-47cd-a025-9b15c7de763a",
                        "ecfb4524-a469-41a8-97fd-70f154ec4e24"
                      ],
                      "failures": [],
                      "pending": [],
                      "skipped": [],
                      "duration": 0,
                      "root": false,
                      "rootEmpty": false,
                      "_timeout": 10000
                    }
                  ],
                  "passes": [],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "238493ab-a856-402a-8739-21ba2526df60",
                  "title": "livingSituationChapter page.depends",
                  "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/20-10207/tests/unit/config/form.unit.spec.js",
                  "file": "/src/applications/simple-forms/20-10207/tests/unit/config/form.unit.spec.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [],
                  "suites": [
                    {
                      "uuid": "4c341ab4-ce02-4fd1-adbf-2bc0d5dc92f6",
                      "title": "livingSituationPage.depends",
                      "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/20-10207/tests/unit/config/form.unit.spec.js",
                      "file": "/src/applications/simple-forms/20-10207/tests/unit/config/form.unit.spec.js",
                      "beforeHooks": [],
                      "afterHooks": [],
                      "tests": [
                        {
                          "title": "returns TRUE if preparerType is veteran or non-veteran",
                          "fullTitle": "formConfig page.depends functions livingSituationChapter page.depends livingSituationPage.depends returns TRUE if preparerType is veteran or non-veteran",
                          "timedOut": false,
                          "duration": 0,
                          "state": "passed",
                          "speed": "fast",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "(0, _chai.expect)(depends({\n  preparerType: _constants.PREPARER_TYPES.VETERAN\n})).to.be.true;\n(0, _chai.expect)(depends({\n  preparerType: _constants.PREPARER_TYPES.NON_VETERAN\n})).to.be.true;",
                          "err": {},
                          "uuid": "4a14b05b-e2b7-4eff-8bf9-9b4e1de69297",
                          "parentUUID": "4c341ab4-ce02-4fd1-adbf-2bc0d5dc92f6",
                          "isHook": false,
                          "skipped": false
                        },
                        {
                          "title": "returns FALSE if preparerType is third-party-veteran or third-party-non-veteran",
                          "fullTitle": "formConfig page.depends functions livingSituationChapter page.depends livingSituationPage.depends returns FALSE if preparerType is third-party-veteran or third-party-non-veteran",
                          "timedOut": false,
                          "duration": 0,
                          "state": "passed",
                          "speed": "fast",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "(0, _chai.expect)(depends({\n  preparerType: _constants.PREPARER_TYPES.THIRD_PARTY_VETERAN\n})).to.be.false;\n(0, _chai.expect)(depends({\n  preparerType: _constants.PREPARER_TYPES.THIRD_PARTY_NON_VETERAN\n})).to.be.false;",
                          "err": {},
                          "uuid": "06d4955d-bbe4-4a4e-ba07-cca2b274a1b0",
                          "parentUUID": "4c341ab4-ce02-4fd1-adbf-2bc0d5dc92f6",
                          "isHook": false,
                          "skipped": false
                        }
                      ],
                      "suites": [],
                      "passes": [
                        "4a14b05b-e2b7-4eff-8bf9-9b4e1de69297",
                        "06d4955d-bbe4-4a4e-ba07-cca2b274a1b0"
                      ],
                      "failures": [],
                      "pending": [],
                      "skipped": [],
                      "duration": 0,
                      "root": false,
                      "rootEmpty": false,
                      "_timeout": 10000
                    },
                    {
                      "uuid": "5422f242-beb0-4018-972a-40e2ae8a55ad",
                      "title": "livingSituationThirdPartyVeteranPage.depends",
                      "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/20-10207/tests/unit/config/form.unit.spec.js",
                      "file": "/src/applications/simple-forms/20-10207/tests/unit/config/form.unit.spec.js",
                      "beforeHooks": [],
                      "afterHooks": [],
                      "tests": [
                        {
                          "title": "returns FALSE if preparerType is veteran, non-veteran, or third-party-non-veteran",
                          "fullTitle": "formConfig page.depends functions livingSituationChapter page.depends livingSituationThirdPartyVeteranPage.depends returns FALSE if preparerType is veteran, non-veteran, or third-party-non-veteran",
                          "timedOut": false,
                          "duration": 0,
                          "state": "passed",
                          "speed": "fast",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "(0, _chai.expect)(depends({\n  preparerType: _constants.PREPARER_TYPES.VETERAN\n})).to.be.false;\n(0, _chai.expect)(depends({\n  preparerType: _constants.PREPARER_TYPES.NON_VETERAN\n})).to.be.false;\n(0, _chai.expect)(depends({\n  preparerType: _constants.PREPARER_TYPES.THIRD_PARTY_NON_VETERAN\n})).to.be.false;",
                          "err": {},
                          "uuid": "2b57c7c2-a7d5-41ea-b888-0ccae3bae39f",
                          "parentUUID": "5422f242-beb0-4018-972a-40e2ae8a55ad",
                          "isHook": false,
                          "skipped": false
                        },
                        {
                          "title": "returns TRUE if preparerType is third-party-veteran",
                          "fullTitle": "formConfig page.depends functions livingSituationChapter page.depends livingSituationThirdPartyVeteranPage.depends returns TRUE if preparerType is third-party-veteran",
                          "timedOut": false,
                          "duration": 0,
                          "state": "passed",
                          "speed": "fast",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "(0, _chai.expect)(depends({\n  preparerType: _constants.PREPARER_TYPES.THIRD_PARTY_VETERAN\n})).to.be.true;",
                          "err": {},
                          "uuid": "c195107a-2f17-45d8-8d09-faba5570e145",
                          "parentUUID": "5422f242-beb0-4018-972a-40e2ae8a55ad",
                          "isHook": false,
                          "skipped": false
                        }
                      ],
                      "suites": [],
                      "passes": [
                        "2b57c7c2-a7d5-41ea-b888-0ccae3bae39f",
                        "c195107a-2f17-45d8-8d09-faba5570e145"
                      ],
                      "failures": [],
                      "pending": [],
                      "skipped": [],
                      "duration": 0,
                      "root": false,
                      "rootEmpty": false,
                      "_timeout": 10000
                    },
                    {
                      "uuid": "855a8de8-4f57-4b9d-9657-6e14f3455806",
                      "title": "livingSituationThirdPartyNonVeteranPage.depends",
                      "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/20-10207/tests/unit/config/form.unit.spec.js",
                      "file": "/src/applications/simple-forms/20-10207/tests/unit/config/form.unit.spec.js",
                      "beforeHooks": [],
                      "afterHooks": [],
                      "tests": [
                        {
                          "title": "returns FALSE if preparerType is veteran, non-veteran, or third-party-veteran",
                          "fullTitle": "formConfig page.depends functions livingSituationChapter page.depends livingSituationThirdPartyNonVeteranPage.depends returns FALSE if preparerType is veteran, non-veteran, or third-party-veteran",
                          "timedOut": false,
                          "duration": 0,
                          "state": "passed",
                          "speed": "fast",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "(0, _chai.expect)(depends({\n  preparerType: _constants.PREPARER_TYPES.VETERAN\n})).to.be.false;\n(0, _chai.expect)(depends({\n  preparerType: _constants.PREPARER_TYPES.NON_VETERAN\n})).to.be.false;\n(0, _chai.expect)(depends({\n  preparerType: _constants.PREPARER_TYPES.THIRD_PARTY_VETERAN\n})).to.be.false;",
                          "err": {},
                          "uuid": "e07d7f29-2e64-427e-a44b-0c79611df0e8",
                          "parentUUID": "855a8de8-4f57-4b9d-9657-6e14f3455806",
                          "isHook": false,
                          "skipped": false
                        },
                        {
                          "title": "returns TRUE if preparerType is third-party-non-veteran",
                          "fullTitle": "formConfig page.depends functions livingSituationChapter page.depends livingSituationThirdPartyNonVeteranPage.depends returns TRUE if preparerType is third-party-non-veteran",
                          "timedOut": false,
                          "duration": 0,
                          "state": "passed",
                          "speed": "fast",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "(0, _chai.expect)(depends({\n  preparerType: _constants.PREPARER_TYPES.THIRD_PARTY_NON_VETERAN\n})).to.be.true;",
                          "err": {},
                          "uuid": "70efdc8a-c539-4d63-a520-4a70604ab9dc",
                          "parentUUID": "855a8de8-4f57-4b9d-9657-6e14f3455806",
                          "isHook": false,
                          "skipped": false
                        }
                      ],
                      "suites": [],
                      "passes": [
                        "e07d7f29-2e64-427e-a44b-0c79611df0e8",
                        "70efdc8a-c539-4d63-a520-4a70604ab9dc"
                      ],
                      "failures": [],
                      "pending": [],
                      "skipped": [],
                      "duration": 0,
                      "root": false,
                      "rootEmpty": false,
                      "_timeout": 10000
                    },
                    {
                      "uuid": "8256baf8-f0e0-4dae-857c-081c33e84754",
                      "title": "otherHousingRiskPage.depends",
                      "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/20-10207/tests/unit/config/form.unit.spec.js",
                      "file": "/src/applications/simple-forms/20-10207/tests/unit/config/form.unit.spec.js",
                      "beforeHooks": [],
                      "afterHooks": [],
                      "tests": [
                        {
                          "title": "returns FALSE if livingSituation.OTHER_RISK is FALSE",
                          "fullTitle": "formConfig page.depends functions livingSituationChapter page.depends otherHousingRiskPage.depends returns FALSE if livingSituation.OTHER_RISK is FALSE",
                          "timedOut": false,
                          "duration": 0,
                          "state": "passed",
                          "speed": "fast",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "(0, _chai.expect)(depends({\n  livingSituation: {\n    OTHER_RISK: false\n  }\n})).to.be.false;",
                          "err": {},
                          "uuid": "5312ad2d-95f2-4b8b-bad5-395a4ffd0466",
                          "parentUUID": "8256baf8-f0e0-4dae-857c-081c33e84754",
                          "isHook": false,
                          "skipped": false
                        },
                        {
                          "title": "returns TRUE if livingSituation.OTHER_RISK is TRUE and preparerType is veteran or non-veteran",
                          "fullTitle": "formConfig page.depends functions livingSituationChapter page.depends otherHousingRiskPage.depends returns TRUE if livingSituation.OTHER_RISK is TRUE and preparerType is veteran or non-veteran",
                          "timedOut": false,
                          "duration": 0,
                          "state": "passed",
                          "speed": "fast",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "(0, _chai.expect)(depends({\n  livingSituation: {\n    OTHER_RISK: true\n  },\n  preparerType: _constants.PREPARER_TYPES.VETERAN\n})).to.be.true;\n(0, _chai.expect)(depends({\n  livingSituation: {\n    OTHER_RISK: true\n  },\n  preparerType: _constants.PREPARER_TYPES.NON_VETERAN\n})).to.be.true;",
                          "err": {},
                          "uuid": "fe423ebb-68ab-4552-bacf-886592eb3296",
                          "parentUUID": "8256baf8-f0e0-4dae-857c-081c33e84754",
                          "isHook": false,
                          "skipped": false
                        },
                        {
                          "title": "returns FALSE if preparerType is third-party",
                          "fullTitle": "formConfig page.depends functions livingSituationChapter page.depends otherHousingRiskPage.depends returns FALSE if preparerType is third-party",
                          "timedOut": false,
                          "duration": 0,
                          "state": "passed",
                          "speed": "fast",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "(0, _chai.expect)(depends({\n  livingSituation: {\n    OTHER_RISK: true,\n    preparerType: _constants.PREPARER_TYPES.THIRD_PARTY_VETERAN\n  }\n})).to.be.false;\n(0, _chai.expect)(depends({\n  livingSituation: {\n    OTHER_RISK: true,\n    preparerType: _constants.PREPARER_TYPES.THIRD_PARTY_NON_VETERAN\n  }\n})).to.be.false;",
                          "err": {},
                          "uuid": "b74f2ac9-1090-4f8c-8649-4ad90906ad0f",
                          "parentUUID": "8256baf8-f0e0-4dae-857c-081c33e84754",
                          "isHook": false,
                          "skipped": false
                        }
                      ],
                      "suites": [],
                      "passes": [
                        "5312ad2d-95f2-4b8b-bad5-395a4ffd0466",
                        "fe423ebb-68ab-4552-bacf-886592eb3296",
                        "b74f2ac9-1090-4f8c-8649-4ad90906ad0f"
                      ],
                      "failures": [],
                      "pending": [],
                      "skipped": [],
                      "duration": 0,
                      "root": false,
                      "rootEmpty": false,
                      "_timeout": 10000
                    },
                    {
                      "uuid": "315950ce-1519-4bab-a0f7-69e27de53d9c",
                      "title": "otherHousingRiskThirdPartyVeteranPage.depends",
                      "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/20-10207/tests/unit/config/form.unit.spec.js",
                      "file": "/src/applications/simple-forms/20-10207/tests/unit/config/form.unit.spec.js",
                      "beforeHooks": [],
                      "afterHooks": [],
                      "tests": [
                        {
                          "title": "returns FALSE if livingSituation.OTHER_RISK is FALSE",
                          "fullTitle": "formConfig page.depends functions livingSituationChapter page.depends otherHousingRiskThirdPartyVeteranPage.depends returns FALSE if livingSituation.OTHER_RISK is FALSE",
                          "timedOut": false,
                          "duration": 0,
                          "state": "passed",
                          "speed": "fast",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "(0, _chai.expect)(depends({\n  livingSituation: {\n    OTHER_RISK: false\n  }\n})).to.be.false;",
                          "err": {},
                          "uuid": "44765796-c6e9-474d-82c3-890c78314bb2",
                          "parentUUID": "315950ce-1519-4bab-a0f7-69e27de53d9c",
                          "isHook": false,
                          "skipped": false
                        },
                        {
                          "title": "returns FALSE if preparerType is veteran, non-veteran, or third-party-non-veteran",
                          "fullTitle": "formConfig page.depends functions livingSituationChapter page.depends otherHousingRiskThirdPartyVeteranPage.depends returns FALSE if preparerType is veteran, non-veteran, or third-party-non-veteran",
                          "timedOut": false,
                          "duration": 1,
                          "state": "passed",
                          "speed": "slow",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "(0, _chai.expect)(depends({\n  livingSituation: {\n    OTHER_RISK: true\n  },\n  preparerType: _constants.PREPARER_TYPES.VETERAN\n})).to.be.false;\n(0, _chai.expect)(depends({\n  livingSituation: {\n    OTHER_RISK: true\n  },\n  preparerType: _constants.PREPARER_TYPES.NON_VETERAN\n})).to.be.false;\n(0, _chai.expect)(depends({\n  livingSituation: {\n    OTHER_RISK: true\n  },\n  preparerType: _constants.PREPARER_TYPES.THIRD_PARTY_NON_VETERAN\n})).to.be.false;",
                          "err": {},
                          "uuid": "874f8337-c2eb-4bf4-8d5d-e431b2510d11",
                          "parentUUID": "315950ce-1519-4bab-a0f7-69e27de53d9c",
                          "isHook": false,
                          "skipped": false
                        },
                        {
                          "title": "returns TRUE if livingSituation.OTHER_RISK is TRUE and preparerType is third-party-veteran",
                          "fullTitle": "formConfig page.depends functions livingSituationChapter page.depends otherHousingRiskThirdPartyVeteranPage.depends returns TRUE if livingSituation.OTHER_RISK is TRUE and preparerType is third-party-veteran",
                          "timedOut": false,
                          "duration": 0,
                          "state": "passed",
                          "speed": "fast",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "(0, _chai.expect)(depends({\n  livingSituation: {\n    OTHER_RISK: true\n  },\n  preparerType: _constants.PREPARER_TYPES.THIRD_PARTY_VETERAN\n})).to.be.true;",
                          "err": {},
                          "uuid": "c9836dc8-de17-4e02-9958-391e2b8ee3f8",
                          "parentUUID": "315950ce-1519-4bab-a0f7-69e27de53d9c",
                          "isHook": false,
                          "skipped": false
                        }
                      ],
                      "suites": [],
                      "passes": [
                        "44765796-c6e9-474d-82c3-890c78314bb2",
                        "874f8337-c2eb-4bf4-8d5d-e431b2510d11",
                        "c9836dc8-de17-4e02-9958-391e2b8ee3f8"
                      ],
                      "failures": [],
                      "pending": [],
                      "skipped": [],
                      "duration": 1,
                      "root": false,
                      "rootEmpty": false,
                      "_timeout": 10000
                    },
                    {
                      "uuid": "b7a0046a-790d-42db-b5bd-323ff6491ed7",
                      "title": "otherHousingRiskThirdPartyNonVeteranPage.depends",
                      "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/20-10207/tests/unit/config/form.unit.spec.js",
                      "file": "/src/applications/simple-forms/20-10207/tests/unit/config/form.unit.spec.js",
                      "beforeHooks": [],
                      "afterHooks": [],
                      "tests": [
                        {
                          "title": "returns FALSE if livingSituation.OTHER_RISK is FALSE",
                          "fullTitle": "formConfig page.depends functions livingSituationChapter page.depends otherHousingRiskThirdPartyNonVeteranPage.depends returns FALSE if livingSituation.OTHER_RISK is FALSE",
                          "timedOut": false,
                          "duration": 0,
                          "state": "passed",
                          "speed": "fast",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "(0, _chai.expect)(depends({\n  livingSituation: {\n    OTHER_RISK: false\n  }\n})).to.be.false;",
                          "err": {},
                          "uuid": "e1f813f2-c113-4ecd-a471-890705bee303",
                          "parentUUID": "b7a0046a-790d-42db-b5bd-323ff6491ed7",
                          "isHook": false,
                          "skipped": false
                        },
                        {
                          "title": "returns FALSE if preparerType is veteran, non-veteran, or third-party-veteran",
                          "fullTitle": "formConfig page.depends functions livingSituationChapter page.depends otherHousingRiskThirdPartyNonVeteranPage.depends returns FALSE if preparerType is veteran, non-veteran, or third-party-veteran",
                          "timedOut": false,
                          "duration": 0,
                          "state": "passed",
                          "speed": "fast",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "(0, _chai.expect)(depends({\n  livingSituation: {\n    OTHER_RISK: true\n  },\n  preparerType: _constants.PREPARER_TYPES.VETERAN\n})).to.be.false;\n(0, _chai.expect)(depends({\n  livingSituation: {\n    OTHER_RISK: true\n  },\n  preparerType: _constants.PREPARER_TYPES.NON_VETERAN\n})).to.be.false;\n(0, _chai.expect)(depends({\n  livingSituation: {\n    OTHER_RISK: true\n  },\n  preparerType: _constants.PREPARER_TYPES.THIRD_PARTY_VETERAN\n})).to.be.false;",
                          "err": {},
                          "uuid": "7f71098e-db84-451f-9f15-043c4c1e6f43",
                          "parentUUID": "b7a0046a-790d-42db-b5bd-323ff6491ed7",
                          "isHook": false,
                          "skipped": false
                        },
                        {
                          "title": "returns TRUE if livingSituation.OTHER_RISK is TRUE and preparerType is third-party-non-veteran",
                          "fullTitle": "formConfig page.depends functions livingSituationChapter page.depends otherHousingRiskThirdPartyNonVeteranPage.depends returns TRUE if livingSituation.OTHER_RISK is TRUE and preparerType is third-party-non-veteran",
                          "timedOut": false,
                          "duration": 0,
                          "state": "passed",
                          "speed": "fast",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "(0, _chai.expect)(depends({\n  livingSituation: {\n    OTHER_RISK: true\n  },\n  preparerType: _constants.PREPARER_TYPES.THIRD_PARTY_NON_VETERAN\n})).to.be.true;",
                          "err": {},
                          "uuid": "9714cf91-e9bd-406a-a6e9-f38c14319051",
                          "parentUUID": "b7a0046a-790d-42db-b5bd-323ff6491ed7",
                          "isHook": false,
                          "skipped": false
                        }
                      ],
                      "suites": [],
                      "passes": [
                        "e1f813f2-c113-4ecd-a471-890705bee303",
                        "7f71098e-db84-451f-9f15-043c4c1e6f43",
                        "9714cf91-e9bd-406a-a6e9-f38c14319051"
                      ],
                      "failures": [],
                      "pending": [],
                      "skipped": [],
                      "duration": 0,
                      "root": false,
                      "rootEmpty": false,
                      "_timeout": 10000
                    }
                  ],
                  "passes": [],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "4b29071f-958a-4b7d-a518-a0b21725ec46",
                  "title": "contactInformationChapter page.depends",
                  "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/20-10207/tests/unit/config/form.unit.spec.js",
                  "file": "/src/applications/simple-forms/20-10207/tests/unit/config/form.unit.spec.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [],
                  "suites": [
                    {
                      "uuid": "9c8de3a1-f24c-4575-ba61-1531dd928a9d",
                      "title": "mailingAddressYesNoPage.depends",
                      "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/20-10207/tests/unit/config/form.unit.spec.js",
                      "file": "/src/applications/simple-forms/20-10207/tests/unit/config/form.unit.spec.js",
                      "beforeHooks": [],
                      "afterHooks": [],
                      "tests": [
                        {
                          "title": "returns FALSE if livingSituation.NONE is FALSE",
                          "fullTitle": "formConfig page.depends functions contactInformationChapter page.depends mailingAddressYesNoPage.depends returns FALSE if livingSituation.NONE is FALSE",
                          "timedOut": false,
                          "duration": 0,
                          "state": "passed",
                          "speed": "fast",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "(0, _chai.expect)(depends({\n  livingSituation: {\n    NONE: false\n  }\n})).to.be.false;",
                          "err": {},
                          "uuid": "fb73f378-34e4-496c-abe7-ded7588211ec",
                          "parentUUID": "9c8de3a1-f24c-4575-ba61-1531dd928a9d",
                          "isHook": false,
                          "skipped": false
                        },
                        {
                          "title": "returns TRUE if preparerType is veteran or non-veteran",
                          "fullTitle": "formConfig page.depends functions contactInformationChapter page.depends mailingAddressYesNoPage.depends returns TRUE if preparerType is veteran or non-veteran",
                          "timedOut": false,
                          "duration": 0,
                          "state": "passed",
                          "speed": "fast",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "(0, _chai.expect)(depends({\n  livingSituation: {\n    NONE: false\n  },\n  preparerType: _constants.PREPARER_TYPES.VETERAN\n})).to.be.true;\n(0, _chai.expect)(depends({\n  livingSituation: {\n    NONE: false\n  },\n  preparerType: _constants.PREPARER_TYPES.NON_VETERAN\n})).to.be.true;",
                          "err": {},
                          "uuid": "9590cd57-19d7-4e6f-ba4d-47b2bcf6c4ca",
                          "parentUUID": "9c8de3a1-f24c-4575-ba61-1531dd928a9d",
                          "isHook": false,
                          "skipped": false
                        },
                        {
                          "title": "returns FALSE if preparerType is third-party-veteran or third-party-non-veteran",
                          "fullTitle": "formConfig page.depends functions contactInformationChapter page.depends mailingAddressYesNoPage.depends returns FALSE if preparerType is third-party-veteran or third-party-non-veteran",
                          "timedOut": false,
                          "duration": 0,
                          "state": "passed",
                          "speed": "fast",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "(0, _chai.expect)(depends({\n  livingSituation: {\n    NONE: true\n  },\n  preparerType: _constants.PREPARER_TYPES.THIRD_PARTY_VETERAN\n})).to.be.false;\n(0, _chai.expect)(depends({\n  livingSituation: {\n    NONE: true\n  },\n  preparerType: _constants.PREPARER_TYPES.THIRD_PARTY_NON_VETERAN\n})).to.be.false;",
                          "err": {},
                          "uuid": "4a08a39f-2837-4377-b994-ab2c0f93ca95",
                          "parentUUID": "9c8de3a1-f24c-4575-ba61-1531dd928a9d",
                          "isHook": false,
                          "skipped": false
                        }
                      ],
                      "suites": [],
                      "passes": [
                        "fb73f378-34e4-496c-abe7-ded7588211ec",
                        "9590cd57-19d7-4e6f-ba4d-47b2bcf6c4ca",
                        "4a08a39f-2837-4377-b994-ab2c0f93ca95"
                      ],
                      "failures": [],
                      "pending": [],
                      "skipped": [],
                      "duration": 0,
                      "root": false,
                      "rootEmpty": false,
                      "_timeout": 10000
                    },
                    {
                      "uuid": "1dc8b2bf-4021-4dea-9bcf-055438d2bb22",
                      "title": "mailingAddressYesNoThirdPartyVeteranPage.depends",
                      "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/20-10207/tests/unit/config/form.unit.spec.js",
                      "file": "/src/applications/simple-forms/20-10207/tests/unit/config/form.unit.spec.js",
                      "beforeHooks": [],
                      "afterHooks": [],
                      "tests": [
                        {
                          "title": "returns FALSE if livingSituation.NONE is FALSE",
                          "fullTitle": "formConfig page.depends functions contactInformationChapter page.depends mailingAddressYesNoThirdPartyVeteranPage.depends returns FALSE if livingSituation.NONE is FALSE",
                          "timedOut": false,
                          "duration": 0,
                          "state": "passed",
                          "speed": "fast",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "(0, _chai.expect)(depends({\n  livingSituation: {\n    NONE: false\n  }\n})).to.be.false;",
                          "err": {},
                          "uuid": "03fb4308-4873-4dc9-8f9b-ce3e929ba8c8",
                          "parentUUID": "1dc8b2bf-4021-4dea-9bcf-055438d2bb22",
                          "isHook": false,
                          "skipped": false
                        },
                        {
                          "title": "returns FALSE if preparerType is veteran, non-veteran, or third-party-non-veteran",
                          "fullTitle": "formConfig page.depends functions contactInformationChapter page.depends mailingAddressYesNoThirdPartyVeteranPage.depends returns FALSE if preparerType is veteran, non-veteran, or third-party-non-veteran",
                          "timedOut": false,
                          "duration": 0,
                          "state": "passed",
                          "speed": "fast",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "(0, _chai.expect)(depends({\n  livingSituation: {\n    NONE: true\n  },\n  preparerType: _constants.PREPARER_TYPES.VETERAN\n})).to.be.false;\n(0, _chai.expect)(depends({\n  livingSituation: {\n    NONE: true\n  },\n  preparerType: _constants.PREPARER_TYPES.NON_VETERAN\n})).to.be.false;\n(0, _chai.expect)(depends({\n  livingSituation: {\n    NONE: true\n  },\n  preparerType: _constants.PREPARER_TYPES.THIRD_PARTY_NON_VETERAN\n})).to.be.false;",
                          "err": {},
                          "uuid": "c8dc586d-bb70-4236-b0f6-8fd70e3ad8cc",
                          "parentUUID": "1dc8b2bf-4021-4dea-9bcf-055438d2bb22",
                          "isHook": false,
                          "skipped": false
                        },
                        {
                          "title": "returns TRUE if livingSituation.NONE is FALSE and preparerType is third-party-veteran",
                          "fullTitle": "formConfig page.depends functions contactInformationChapter page.depends mailingAddressYesNoThirdPartyVeteranPage.depends returns TRUE if livingSituation.NONE is FALSE and preparerType is third-party-veteran",
                          "timedOut": false,
                          "duration": 0,
                          "state": "passed",
                          "speed": "fast",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "(0, _chai.expect)(depends({\n  livingSituation: {\n    NONE: false\n  },\n  preparerType: _constants.PREPARER_TYPES.THIRD_PARTY_VETERAN\n})).to.be.true;",
                          "err": {},
                          "uuid": "7c10b101-a7e1-46cc-82af-daac00044278",
                          "parentUUID": "1dc8b2bf-4021-4dea-9bcf-055438d2bb22",
                          "isHook": false,
                          "skipped": false
                        }
                      ],
                      "suites": [],
                      "passes": [
                        "03fb4308-4873-4dc9-8f9b-ce3e929ba8c8",
                        "c8dc586d-bb70-4236-b0f6-8fd70e3ad8cc",
                        "7c10b101-a7e1-46cc-82af-daac00044278"
                      ],
                      "failures": [],
                      "pending": [],
                      "skipped": [],
                      "duration": 0,
                      "root": false,
                      "rootEmpty": false,
                      "_timeout": 10000
                    },
                    {
                      "uuid": "b013c13c-017d-4d89-8a9a-f047d130c517",
                      "title": "mailingAddressYesNoThirdPartyNonVeteranPage.depends",
                      "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/20-10207/tests/unit/config/form.unit.spec.js",
                      "file": "/src/applications/simple-forms/20-10207/tests/unit/config/form.unit.spec.js",
                      "beforeHooks": [],
                      "afterHooks": [],
                      "tests": [
                        {
                          "title": "returns FALSE if livingSituation.NONE is FALSE",
                          "fullTitle": "formConfig page.depends functions contactInformationChapter page.depends mailingAddressYesNoThirdPartyNonVeteranPage.depends returns FALSE if livingSituation.NONE is FALSE",
                          "timedOut": false,
                          "duration": 0,
                          "state": "passed",
                          "speed": "fast",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "(0, _chai.expect)(depends({\n  livingSituation: {\n    NONE: false\n  }\n})).to.be.false;",
                          "err": {},
                          "uuid": "3637cd11-a094-45c4-9213-43ccce776b2b",
                          "parentUUID": "b013c13c-017d-4d89-8a9a-f047d130c517",
                          "isHook": false,
                          "skipped": false
                        },
                        {
                          "title": "returns FALSE if preparerType is veteran, non-veteran, or third-party-veteran",
                          "fullTitle": "formConfig page.depends functions contactInformationChapter page.depends mailingAddressYesNoThirdPartyNonVeteranPage.depends returns FALSE if preparerType is veteran, non-veteran, or third-party-veteran",
                          "timedOut": false,
                          "duration": 0,
                          "state": "passed",
                          "speed": "fast",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "(0, _chai.expect)(depends({\n  livingSituation: {\n    NONE: true\n  },\n  preparerType: _constants.PREPARER_TYPES.VETERAN\n})).to.be.false;\n(0, _chai.expect)(depends({\n  livingSituation: {\n    NONE: true\n  },\n  preparerType: _constants.PREPARER_TYPES.NON_VETERAN\n})).to.be.false;\n(0, _chai.expect)(depends({\n  livingSituation: {\n    NONE: true\n  },\n  preparerType: _constants.PREPARER_TYPES.THIRD_PARTY_VETERAN\n})).to.be.false;",
                          "err": {},
                          "uuid": "4fd243f3-cf7e-4008-8d9f-f665b0fb2931",
                          "parentUUID": "b013c13c-017d-4d89-8a9a-f047d130c517",
                          "isHook": false,
                          "skipped": false
                        },
                        {
                          "title": "returns TRUE if livingSituation.NONE is FALSE and preparerType is third-party-non-veteran",
                          "fullTitle": "formConfig page.depends functions contactInformationChapter page.depends mailingAddressYesNoThirdPartyNonVeteranPage.depends returns TRUE if livingSituation.NONE is FALSE and preparerType is third-party-non-veteran",
                          "timedOut": false,
                          "duration": 0,
                          "state": "passed",
                          "speed": "fast",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "(0, _chai.expect)(depends({\n  livingSituation: {\n    NONE: false\n  },\n  preparerType: _constants.PREPARER_TYPES.THIRD_PARTY_NON_VETERAN\n})).to.be.true;",
                          "err": {},
                          "uuid": "ce77000b-8303-4a8d-9c38-9c74a4863cad",
                          "parentUUID": "b013c13c-017d-4d89-8a9a-f047d130c517",
                          "isHook": false,
                          "skipped": false
                        }
                      ],
                      "suites": [],
                      "passes": [
                        "3637cd11-a094-45c4-9213-43ccce776b2b",
                        "4fd243f3-cf7e-4008-8d9f-f665b0fb2931",
                        "ce77000b-8303-4a8d-9c38-9c74a4863cad"
                      ],
                      "failures": [],
                      "pending": [],
                      "skipped": [],
                      "duration": 0,
                      "root": false,
                      "rootEmpty": false,
                      "_timeout": 10000
                    },
                    {
                      "uuid": "391eae1c-d83e-4ae2-81b2-36489735e95a",
                      "title": "veteranMailingAddressPage.depends",
                      "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/20-10207/tests/unit/config/form.unit.spec.js",
                      "file": "/src/applications/simple-forms/20-10207/tests/unit/config/form.unit.spec.js",
                      "beforeHooks": [],
                      "afterHooks": [],
                      "tests": [
                        {
                          "title": "returns FALSE if livingSituation.NONE is FALSE",
                          "fullTitle": "formConfig page.depends functions contactInformationChapter page.depends veteranMailingAddressPage.depends returns FALSE if livingSituation.NONE is FALSE",
                          "timedOut": false,
                          "duration": 0,
                          "state": "passed",
                          "speed": "fast",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "(0, _chai.expect)(depends({\n  livingSituation: {\n    NONE: false\n  }\n})).to.be.false;",
                          "err": {},
                          "uuid": "fbcb0f09-a57f-4627-a539-5c3d04bc699e",
                          "parentUUID": "391eae1c-d83e-4ae2-81b2-36489735e95a",
                          "isHook": false,
                          "skipped": false
                        },
                        {
                          "title": "returns FALSE if mailingAddressYesNo is FALSE",
                          "fullTitle": "formConfig page.depends functions contactInformationChapter page.depends veteranMailingAddressPage.depends returns FALSE if mailingAddressYesNo is FALSE",
                          "timedOut": false,
                          "duration": 0,
                          "state": "passed",
                          "speed": "fast",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "(0, _chai.expect)(depends({\n  livingSituation: {\n    NONE: true\n  },\n  mailingAddressYesNo: false\n})).to.be.false;",
                          "err": {},
                          "uuid": "c306ed25-9080-4b0a-b032-03f73c0abdda",
                          "parentUUID": "391eae1c-d83e-4ae2-81b2-36489735e95a",
                          "isHook": false,
                          "skipped": false
                        },
                        {
                          "title": "returns TRUE if livingSituation.NONE is TRUE and mailingAddressYesNo is TRUE and preparerType is veteran",
                          "fullTitle": "formConfig page.depends functions contactInformationChapter page.depends veteranMailingAddressPage.depends returns TRUE if livingSituation.NONE is TRUE and mailingAddressYesNo is TRUE and preparerType is veteran",
                          "timedOut": false,
                          "duration": 0,
                          "state": "passed",
                          "speed": "fast",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "(0, _chai.expect)(depends({\n  livingSituation: {\n    NONE: true\n  },\n  mailingAddressYesNo: true,\n  preparerType: _constants.PREPARER_TYPES.VETERAN\n})).to.be.true;",
                          "err": {},
                          "uuid": "fa766efc-10b2-4ad0-b16f-fa44ee4f438f",
                          "parentUUID": "391eae1c-d83e-4ae2-81b2-36489735e95a",
                          "isHook": false,
                          "skipped": false
                        },
                        {
                          "title": "returns FALSE if livingSituation.NONE is TRUE and mailingAddressYesNo is TRUE and preparerType is non-veteran, third-party-veteran, or third-party-non-veteran",
                          "fullTitle": "formConfig page.depends functions contactInformationChapter page.depends veteranMailingAddressPage.depends returns FALSE if livingSituation.NONE is TRUE and mailingAddressYesNo is TRUE and preparerType is non-veteran, third-party-veteran, or third-party-non-veteran",
                          "timedOut": false,
                          "duration": 0,
                          "state": "passed",
                          "speed": "fast",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "(0, _chai.expect)(depends({\n  livingSituation: {\n    NONE: true\n  },\n  mailingAddressYesNo: true,\n  preparerType: _constants.PREPARER_TYPES.NON_VETERAN\n})).to.be.false;\n(0, _chai.expect)(depends({\n  livingSituation: {\n    NONE: true\n  },\n  mailingAddressYesNo: true,\n  preparerType: _constants.PREPARER_TYPES.THIRD_PARTY_VETERAN\n})).to.be.false;\n(0, _chai.expect)(depends({\n  livingSituation: {\n    NONE: true\n  },\n  mailingAddressYesNo: true,\n  preparerType: _constants.PREPARER_TYPES.THIRD_PARTY_NON_VETERAN\n})).to.be.false;",
                          "err": {},
                          "uuid": "85c7c0b2-3f68-4c06-8f45-2b1d570f6767",
                          "parentUUID": "391eae1c-d83e-4ae2-81b2-36489735e95a",
                          "isHook": false,
                          "skipped": false
                        }
                      ],
                      "suites": [],
                      "passes": [
                        "fbcb0f09-a57f-4627-a539-5c3d04bc699e",
                        "c306ed25-9080-4b0a-b032-03f73c0abdda",
                        "fa766efc-10b2-4ad0-b16f-fa44ee4f438f",
                        "85c7c0b2-3f68-4c06-8f45-2b1d570f6767"
                      ],
                      "failures": [],
                      "pending": [],
                      "skipped": [],
                      "duration": 0,
                      "root": false,
                      "rootEmpty": false,
                      "_timeout": 10000
                    },
                    {
                      "uuid": "1a63c09a-f2ba-4144-a1a0-d5ea4dc7b883",
                      "title": "nonVeteranMailingAddressPage.depends",
                      "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/20-10207/tests/unit/config/form.unit.spec.js",
                      "file": "/src/applications/simple-forms/20-10207/tests/unit/config/form.unit.spec.js",
                      "beforeHooks": [],
                      "afterHooks": [],
                      "tests": [
                        {
                          "title": "returns FALSE if livingSituation.NONE is FALSE",
                          "fullTitle": "formConfig page.depends functions contactInformationChapter page.depends nonVeteranMailingAddressPage.depends returns FALSE if livingSituation.NONE is FALSE",
                          "timedOut": false,
                          "duration": 0,
                          "state": "passed",
                          "speed": "fast",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "(0, _chai.expect)(depends({\n  livingSituation: {\n    NONE: false\n  }\n})).to.be.false;",
                          "err": {},
                          "uuid": "3a29c68c-e23e-44cf-b516-9f7b0d12100b",
                          "parentUUID": "1a63c09a-f2ba-4144-a1a0-d5ea4dc7b883",
                          "isHook": false,
                          "skipped": false
                        },
                        {
                          "title": "returns FALSE if mailingAddressYesNo is FALSE",
                          "fullTitle": "formConfig page.depends functions contactInformationChapter page.depends nonVeteranMailingAddressPage.depends returns FALSE if mailingAddressYesNo is FALSE",
                          "timedOut": false,
                          "duration": 0,
                          "state": "passed",
                          "speed": "fast",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "(0, _chai.expect)(depends({\n  livingSituation: {\n    NONE: true\n  },\n  mailingAddressYesNo: false\n})).to.be.false;",
                          "err": {},
                          "uuid": "79229cc0-85ff-4304-9f63-a3633dce6fc3",
                          "parentUUID": "1a63c09a-f2ba-4144-a1a0-d5ea4dc7b883",
                          "isHook": false,
                          "skipped": false
                        },
                        {
                          "title": "returns TRUE if livingSituation.NONE is TRUE and mailingAddressYesNo is TRUE and preparerType is non-veteran",
                          "fullTitle": "formConfig page.depends functions contactInformationChapter page.depends nonVeteranMailingAddressPage.depends returns TRUE if livingSituation.NONE is TRUE and mailingAddressYesNo is TRUE and preparerType is non-veteran",
                          "timedOut": false,
                          "duration": 0,
                          "state": "passed",
                          "speed": "fast",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "(0, _chai.expect)(depends({\n  livingSituation: {\n    NONE: true\n  },\n  mailingAddressYesNo: true,\n  preparerType: _constants.PREPARER_TYPES.NON_VETERAN\n})).to.be.true;",
                          "err": {},
                          "uuid": "8bb7b5c8-63c4-462c-83f9-529f27d34433",
                          "parentUUID": "1a63c09a-f2ba-4144-a1a0-d5ea4dc7b883",
                          "isHook": false,
                          "skipped": false
                        },
                        {
                          "title": "returns FALSE if livingSituation.NONE is TRUE and mailingAddressYesNo is TRUE and preparerType is veteran, third-party-veteran, or third-party-non-veteran",
                          "fullTitle": "formConfig page.depends functions contactInformationChapter page.depends nonVeteranMailingAddressPage.depends returns FALSE if livingSituation.NONE is TRUE and mailingAddressYesNo is TRUE and preparerType is veteran, third-party-veteran, or third-party-non-veteran",
                          "timedOut": false,
                          "duration": 0,
                          "state": "passed",
                          "speed": "fast",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "(0, _chai.expect)(depends({\n  livingSituation: {\n    NONE: true\n  },\n  mailingAddressYesNo: true,\n  preparerType: _constants.PREPARER_TYPES.VETERAN\n})).to.be.false;\n(0, _chai.expect)(depends({\n  livingSituation: {\n    NONE: true\n  },\n  mailingAddressYesNo: true,\n  preparerType: _constants.PREPARER_TYPES.THIRD_PARTY_VETERAN\n})).to.be.false;\n(0, _chai.expect)(depends({\n  livingSituation: {\n    NONE: true\n  },\n  mailingAddressYesNo: true,\n  preparerType: _constants.PREPARER_TYPES.THIRD_PARTY_NON_VETERAN\n})).to.be.false;",
                          "err": {},
                          "uuid": "f1601007-ebdb-4e78-b298-8631cc529593",
                          "parentUUID": "1a63c09a-f2ba-4144-a1a0-d5ea4dc7b883",
                          "isHook": false,
                          "skipped": false
                        }
                      ],
                      "suites": [],
                      "passes": [
                        "3a29c68c-e23e-44cf-b516-9f7b0d12100b",
                        "79229cc0-85ff-4304-9f63-a3633dce6fc3",
                        "8bb7b5c8-63c4-462c-83f9-529f27d34433",
                        "f1601007-ebdb-4e78-b298-8631cc529593"
                      ],
                      "failures": [],
                      "pending": [],
                      "skipped": [],
                      "duration": 0,
                      "root": false,
                      "rootEmpty": false,
                      "_timeout": 10000
                    },
                    {
                      "uuid": "11cddc90-32a0-42d7-a783-6dff89e18b85",
                      "title": "veteranMailingAddressThirdPartyVeteranPage.depends",
                      "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/20-10207/tests/unit/config/form.unit.spec.js",
                      "file": "/src/applications/simple-forms/20-10207/tests/unit/config/form.unit.spec.js",
                      "beforeHooks": [],
                      "afterHooks": [],
                      "tests": [
                        {
                          "title": "returns FALSE if livingSituation.NONE is FALSE",
                          "fullTitle": "formConfig page.depends functions contactInformationChapter page.depends veteranMailingAddressThirdPartyVeteranPage.depends returns FALSE if livingSituation.NONE is FALSE",
                          "timedOut": false,
                          "duration": 0,
                          "state": "passed",
                          "speed": "fast",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "(0, _chai.expect)(depends({\n  livingSituation: {\n    NONE: false\n  }\n})).to.be.false;",
                          "err": {},
                          "uuid": "4436691e-8507-49aa-9c5c-1faccf6c5b7f",
                          "parentUUID": "11cddc90-32a0-42d7-a783-6dff89e18b85",
                          "isHook": false,
                          "skipped": false
                        },
                        {
                          "title": "returns FALSE if mailingAddressYesNo is FALSE",
                          "fullTitle": "formConfig page.depends functions contactInformationChapter page.depends veteranMailingAddressThirdPartyVeteranPage.depends returns FALSE if mailingAddressYesNo is FALSE",
                          "timedOut": false,
                          "duration": 0,
                          "state": "passed",
                          "speed": "fast",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "(0, _chai.expect)(depends({\n  livingSituation: {\n    NONE: true\n  },\n  mailingAddressYesNo: false\n})).to.be.false;",
                          "err": {},
                          "uuid": "84eac5f9-9303-4520-9d4c-f6f701f15f7a",
                          "parentUUID": "11cddc90-32a0-42d7-a783-6dff89e18b85",
                          "isHook": false,
                          "skipped": false
                        },
                        {
                          "title": "returns FALSE if preparerType is veteran, non-veteran, or third-party-non-veteran",
                          "fullTitle": "formConfig page.depends functions contactInformationChapter page.depends veteranMailingAddressThirdPartyVeteranPage.depends returns FALSE if preparerType is veteran, non-veteran, or third-party-non-veteran",
                          "timedOut": false,
                          "duration": 0,
                          "state": "passed",
                          "speed": "fast",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "(0, _chai.expect)(depends({\n  livingSituation: {\n    NONE: true\n  },\n  mailingAddressYesNo: true,\n  preparerType: _constants.PREPARER_TYPES.VETERAN\n})).to.be.false;\n(0, _chai.expect)(depends({\n  livingSituation: {\n    NONE: true\n  },\n  mailingAddressYesNo: true,\n  preparerType: _constants.PREPARER_TYPES.NON_VETERAN\n})).to.be.false;\n(0, _chai.expect)(depends({\n  livingSituation: {\n    NONE: true\n  },\n  mailingAddressYesNo: true,\n  preparerType: _constants.PREPARER_TYPES.THIRD_PARTY_NON_VETERAN\n})).to.be.false;",
                          "err": {},
                          "uuid": "8f86870e-349c-4048-aef6-23812548310b",
                          "parentUUID": "11cddc90-32a0-42d7-a783-6dff89e18b85",
                          "isHook": false,
                          "skipped": false
                        },
                        {
                          "title": "returns TRUE if livingSituation.NONE is TRUE and mailingAddressYesNo is TRUE and preparerType is third-party-veteran",
                          "fullTitle": "formConfig page.depends functions contactInformationChapter page.depends veteranMailingAddressThirdPartyVeteranPage.depends returns TRUE if livingSituation.NONE is TRUE and mailingAddressYesNo is TRUE and preparerType is third-party-veteran",
                          "timedOut": false,
                          "duration": 1,
                          "state": "passed",
                          "speed": "slow",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "(0, _chai.expect)(depends({\n  livingSituation: {\n    NONE: true\n  },\n  mailingAddressYesNo: true,\n  preparerType: _constants.PREPARER_TYPES.THIRD_PARTY_VETERAN\n})).to.be.true;",
                          "err": {},
                          "uuid": "8494fbdf-ef19-44c0-a32e-c299b821e377",
                          "parentUUID": "11cddc90-32a0-42d7-a783-6dff89e18b85",
                          "isHook": false,
                          "skipped": false
                        }
                      ],
                      "suites": [],
                      "passes": [
                        "4436691e-8507-49aa-9c5c-1faccf6c5b7f",
                        "84eac5f9-9303-4520-9d4c-f6f701f15f7a",
                        "8f86870e-349c-4048-aef6-23812548310b",
                        "8494fbdf-ef19-44c0-a32e-c299b821e377"
                      ],
                      "failures": [],
                      "pending": [],
                      "skipped": [],
                      "duration": 1,
                      "root": false,
                      "rootEmpty": false,
                      "_timeout": 10000
                    },
                    {
                      "uuid": "21b1f117-df6e-437f-88a9-5748825cb884",
                      "title": "nonVeteranMailingAddressThirdPartyNonVeteranPage.depends",
                      "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/20-10207/tests/unit/config/form.unit.spec.js",
                      "file": "/src/applications/simple-forms/20-10207/tests/unit/config/form.unit.spec.js",
                      "beforeHooks": [],
                      "afterHooks": [],
                      "tests": [
                        {
                          "title": "returns FALSE if livingSituation.NONE is FALSE",
                          "fullTitle": "formConfig page.depends functions contactInformationChapter page.depends nonVeteranMailingAddressThirdPartyNonVeteranPage.depends returns FALSE if livingSituation.NONE is FALSE",
                          "timedOut": false,
                          "duration": 1,
                          "state": "passed",
                          "speed": "slow",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "(0, _chai.expect)(depends({\n  livingSituation: {\n    NONE: false\n  }\n})).to.be.false;",
                          "err": {},
                          "uuid": "7d81ee94-bd54-4999-85fd-ec4491280372",
                          "parentUUID": "21b1f117-df6e-437f-88a9-5748825cb884",
                          "isHook": false,
                          "skipped": false
                        },
                        {
                          "title": "returns FALSE if mailingAddressYesNo is FALSE",
                          "fullTitle": "formConfig page.depends functions contactInformationChapter page.depends nonVeteranMailingAddressThirdPartyNonVeteranPage.depends returns FALSE if mailingAddressYesNo is FALSE",
                          "timedOut": false,
                          "duration": 0,
                          "state": "passed",
                          "speed": "fast",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "(0, _chai.expect)(depends({\n  livingSituation: {\n    NONE: true\n  },\n  mailingAddressYesNo: false\n})).to.be.false;",
                          "err": {},
                          "uuid": "2833cd38-d77a-46d9-898a-d65f6056c023",
                          "parentUUID": "21b1f117-df6e-437f-88a9-5748825cb884",
                          "isHook": false,
                          "skipped": false
                        },
                        {
                          "title": "returns FALSE if preparerType is veteran, non-veteran, or third-party-veteran",
                          "fullTitle": "formConfig page.depends functions contactInformationChapter page.depends nonVeteranMailingAddressThirdPartyNonVeteranPage.depends returns FALSE if preparerType is veteran, non-veteran, or third-party-veteran",
                          "timedOut": false,
                          "duration": 0,
                          "state": "passed",
                          "speed": "fast",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "(0, _chai.expect)(depends({\n  livingSituation: {\n    NONE: true\n  },\n  mailingAddressYesNo: true,\n  preparerType: _constants.PREPARER_TYPES.VETERAN\n})).to.be.false;\n(0, _chai.expect)(depends({\n  livingSituation: {\n    NONE: true\n  },\n  mailingAddressYesNo: true,\n  preparerType: _constants.PREPARER_TYPES.NON_VETERAN\n})).to.be.false;\n(0, _chai.expect)(depends({\n  livingSituation: {\n    NONE: true\n  },\n  mailingAddressYesNo: true,\n  preparerType: _constants.PREPARER_TYPES.THIRD_PARTY_VETERAN\n})).to.be.false;",
                          "err": {},
                          "uuid": "9479a7ea-340f-450c-8fdc-8f8927b9e080",
                          "parentUUID": "21b1f117-df6e-437f-88a9-5748825cb884",
                          "isHook": false,
                          "skipped": false
                        },
                        {
                          "title": "returns TRUE if livingSituation.NONE is TRUE and mailingAddressYesNo is TRUE and preparerType is third-party-non-veteran",
                          "fullTitle": "formConfig page.depends functions contactInformationChapter page.depends nonVeteranMailingAddressThirdPartyNonVeteranPage.depends returns TRUE if livingSituation.NONE is TRUE and mailingAddressYesNo is TRUE and preparerType is third-party-non-veteran",
                          "timedOut": false,
                          "duration": 0,
                          "state": "passed",
                          "speed": "fast",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "(0, _chai.expect)(depends({\n  livingSituation: {\n    NONE: true\n  },\n  mailingAddressYesNo: true,\n  preparerType: _constants.PREPARER_TYPES.THIRD_PARTY_NON_VETERAN\n})).to.be.true;",
                          "err": {},
                          "uuid": "cb2a31c0-37ab-457a-bdf1-cc8d692cf725",
                          "parentUUID": "21b1f117-df6e-437f-88a9-5748825cb884",
                          "isHook": false,
                          "skipped": false
                        }
                      ],
                      "suites": [],
                      "passes": [
                        "7d81ee94-bd54-4999-85fd-ec4491280372",
                        "2833cd38-d77a-46d9-898a-d65f6056c023",
                        "9479a7ea-340f-450c-8fdc-8f8927b9e080",
                        "cb2a31c0-37ab-457a-bdf1-cc8d692cf725"
                      ],
                      "failures": [],
                      "pending": [],
                      "skipped": [],
                      "duration": 1,
                      "root": false,
                      "rootEmpty": false,
                      "_timeout": 10000
                    },
                    {
                      "uuid": "892f4b64-05e2-4586-9a8d-2428e719834b",
                      "title": "veteranPhoneAndEmailPage.depends",
                      "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/20-10207/tests/unit/config/form.unit.spec.js",
                      "file": "/src/applications/simple-forms/20-10207/tests/unit/config/form.unit.spec.js",
                      "beforeHooks": [],
                      "afterHooks": [],
                      "tests": [
                        {
                          "title": "returns TRUE if livingSituation.NONE is TRUE and preparerType is veteran or third-party-veteran",
                          "fullTitle": "formConfig page.depends functions contactInformationChapter page.depends veteranPhoneAndEmailPage.depends returns TRUE if livingSituation.NONE is TRUE and preparerType is veteran or third-party-veteran",
                          "timedOut": false,
                          "duration": 0,
                          "state": "passed",
                          "speed": "fast",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "(0, _chai.expect)(depends({\n  preparerType: _constants.PREPARER_TYPES.VETERAN\n})).to.be.true;\n(0, _chai.expect)(depends({\n  preparerType: _constants.PREPARER_TYPES.THIRD_PARTY_VETERAN\n})).to.be.true;",
                          "err": {},
                          "uuid": "9cd67f1e-59c5-4983-9fa3-fe32a1b270d8",
                          "parentUUID": "892f4b64-05e2-4586-9a8d-2428e719834b",
                          "isHook": false,
                          "skipped": false
                        },
                        {
                          "title": "returns FALSE if preparerType is non-veteran or third-party-non-veteran",
                          "fullTitle": "formConfig page.depends functions contactInformationChapter page.depends veteranPhoneAndEmailPage.depends returns FALSE if preparerType is non-veteran or third-party-non-veteran",
                          "timedOut": false,
                          "duration": 0,
                          "state": "passed",
                          "speed": "fast",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "(0, _chai.expect)(depends({\n  livingSituation: {\n    NONE: true\n  },\n  preparerType: _constants.PREPARER_TYPES.NON_VETERAN\n})).to.be.false;\n(0, _chai.expect)(depends({\n  livingSituation: {\n    NONE: true\n  },\n  preparerType: _constants.PREPARER_TYPES.THIRD_PARTY_NON_VETERAN\n})).to.be.false;",
                          "err": {},
                          "uuid": "ec5b7a6a-db7a-4931-9812-50316696128b",
                          "parentUUID": "892f4b64-05e2-4586-9a8d-2428e719834b",
                          "isHook": false,
                          "skipped": false
                        }
                      ],
                      "suites": [],
                      "passes": [
                        "9cd67f1e-59c5-4983-9fa3-fe32a1b270d8",
                        "ec5b7a6a-db7a-4931-9812-50316696128b"
                      ],
                      "failures": [],
                      "pending": [],
                      "skipped": [],
                      "duration": 0,
                      "root": false,
                      "rootEmpty": false,
                      "_timeout": 10000
                    },
                    {
                      "uuid": "502e64db-65e8-473f-b495-5605025d9a44",
                      "title": "nonVeteranPhoneAndEmailPage.depends",
                      "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/20-10207/tests/unit/config/form.unit.spec.js",
                      "file": "/src/applications/simple-forms/20-10207/tests/unit/config/form.unit.spec.js",
                      "beforeHooks": [],
                      "afterHooks": [],
                      "tests": [
                        {
                          "title": "returns TRUE if preparerType is non-veteran or third-party-non-veteran",
                          "fullTitle": "formConfig page.depends functions contactInformationChapter page.depends nonVeteranPhoneAndEmailPage.depends returns TRUE if preparerType is non-veteran or third-party-non-veteran",
                          "timedOut": false,
                          "duration": 0,
                          "state": "passed",
                          "speed": "fast",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "(0, _chai.expect)(depends({\n  preparerType: _constants.PREPARER_TYPES.NON_VETERAN\n})).to.be.true;\n(0, _chai.expect)(depends({\n  preparerType: _constants.PREPARER_TYPES.THIRD_PARTY_NON_VETERAN\n})).to.be.true;",
                          "err": {},
                          "uuid": "93a0a988-6a43-4865-b904-9c5ed83b1cd4",
                          "parentUUID": "502e64db-65e8-473f-b495-5605025d9a44",
                          "isHook": false,
                          "skipped": false
                        },
                        {
                          "title": "returns FALSE if preparerType is veteran or third-party-veteran",
                          "fullTitle": "formConfig page.depends functions contactInformationChapter page.depends nonVeteranPhoneAndEmailPage.depends returns FALSE if preparerType is veteran or third-party-veteran",
                          "timedOut": false,
                          "duration": 0,
                          "state": "passed",
                          "speed": "fast",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "(0, _chai.expect)(depends({\n  preparerType: _constants.PREPARER_TYPES.VETERAN\n})).to.be.false;\n(0, _chai.expect)(depends({\n  preparerType: _constants.PREPARER_TYPES.THIRD_PARTY_VETERAN\n})).to.be.false;",
                          "err": {},
                          "uuid": "7cd2a507-1b8e-4b94-97f8-f109efecd6dc",
                          "parentUUID": "502e64db-65e8-473f-b495-5605025d9a44",
                          "isHook": false,
                          "skipped": false
                        }
                      ],
                      "suites": [],
                      "passes": [
                        "93a0a988-6a43-4865-b904-9c5ed83b1cd4",
                        "7cd2a507-1b8e-4b94-97f8-f109efecd6dc"
                      ],
                      "failures": [],
                      "pending": [],
                      "skipped": [],
                      "duration": 0,
                      "root": false,
                      "rootEmpty": false,
                      "_timeout": 10000
                    }
                  ],
                  "passes": [],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "b764c08b-b8c4-42ce-bbbf-50f53b1128de",
                  "title": "veteranPersonalInformationChapter page.depends",
                  "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/20-10207/tests/unit/config/form.unit.spec.js",
                  "file": "/src/applications/simple-forms/20-10207/tests/unit/config/form.unit.spec.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [],
                  "suites": [
                    {
                      "uuid": "bdfcca7b-3aa1-47ea-8369-5e7c328f6380",
                      "title": "veteranNameAndDateOfBirthPageB.depends",
                      "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/20-10207/tests/unit/config/form.unit.spec.js",
                      "file": "/src/applications/simple-forms/20-10207/tests/unit/config/form.unit.spec.js",
                      "beforeHooks": [],
                      "afterHooks": [],
                      "tests": [
                        {
                          "title": "returns FALSE if preparerType is veteran or third-party-veteran",
                          "fullTitle": "formConfig page.depends functions veteranPersonalInformationChapter page.depends veteranNameAndDateOfBirthPageB.depends returns FALSE if preparerType is veteran or third-party-veteran",
                          "timedOut": false,
                          "duration": 0,
                          "state": "passed",
                          "speed": "fast",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "(0, _chai.expect)(depends({\n  preparerType: _constants.PREPARER_TYPES.VETERAN\n})).to.be.false;\n(0, _chai.expect)(depends({\n  preparerType: _constants.PREPARER_TYPES.THIRD_PARTY_VETERAN\n})).to.be.false;",
                          "err": {},
                          "uuid": "54750575-f71b-4e5d-9e33-a3f2258d5642",
                          "parentUUID": "bdfcca7b-3aa1-47ea-8369-5e7c328f6380",
                          "isHook": false,
                          "skipped": false
                        },
                        {
                          "title": "returns TRUE if preparerType is non-veteran or third-party-non-veteran",
                          "fullTitle": "formConfig page.depends functions veteranPersonalInformationChapter page.depends veteranNameAndDateOfBirthPageB.depends returns TRUE if preparerType is non-veteran or third-party-non-veteran",
                          "timedOut": false,
                          "duration": 0,
                          "state": "passed",
                          "speed": "fast",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "(0, _chai.expect)(depends({\n  preparerType: _constants.PREPARER_TYPES.NON_VETERAN\n})).to.be.true;\n(0, _chai.expect)(depends({\n  preparerType: _constants.PREPARER_TYPES.THIRD_PARTY_NON_VETERAN\n})).to.be.true;",
                          "err": {},
                          "uuid": "0b0cd37e-c147-435c-994e-ac53dbd90f47",
                          "parentUUID": "bdfcca7b-3aa1-47ea-8369-5e7c328f6380",
                          "isHook": false,
                          "skipped": false
                        }
                      ],
                      "suites": [],
                      "passes": [
                        "54750575-f71b-4e5d-9e33-a3f2258d5642",
                        "0b0cd37e-c147-435c-994e-ac53dbd90f47"
                      ],
                      "failures": [],
                      "pending": [],
                      "skipped": [],
                      "duration": 0,
                      "root": false,
                      "rootEmpty": false,
                      "_timeout": 10000
                    },
                    {
                      "uuid": "27e21328-859b-494a-ae79-60e76915560c",
                      "title": "veteranIdentificationInformationPageB.depends",
                      "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/20-10207/tests/unit/config/form.unit.spec.js",
                      "file": "/src/applications/simple-forms/20-10207/tests/unit/config/form.unit.spec.js",
                      "beforeHooks": [],
                      "afterHooks": [],
                      "tests": [
                        {
                          "title": "returns FALSE if preparerType is veteran or third-party-veteran",
                          "fullTitle": "formConfig page.depends functions veteranPersonalInformationChapter page.depends veteranIdentificationInformationPageB.depends returns FALSE if preparerType is veteran or third-party-veteran",
                          "timedOut": false,
                          "duration": 0,
                          "state": "passed",
                          "speed": "fast",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "(0, _chai.expect)(depends({\n  preparerType: _constants.PREPARER_TYPES.VETERAN\n})).to.be.false;\n(0, _chai.expect)(depends({\n  preparerType: _constants.PREPARER_TYPES.THIRD_PARTY_VETERAN\n})).to.be.false;",
                          "err": {},
                          "uuid": "558a6aac-77e4-4dfc-ba8d-dccf0263e223",
                          "parentUUID": "27e21328-859b-494a-ae79-60e76915560c",
                          "isHook": false,
                          "skipped": false
                        },
                        {
                          "title": "returns TRUE if preparerType is non-veteran or third-party-non-veteran",
                          "fullTitle": "formConfig page.depends functions veteranPersonalInformationChapter page.depends veteranIdentificationInformationPageB.depends returns TRUE if preparerType is non-veteran or third-party-non-veteran",
                          "timedOut": false,
                          "duration": 0,
                          "state": "passed",
                          "speed": "fast",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "(0, _chai.expect)(depends({\n  preparerType: _constants.PREPARER_TYPES.NON_VETERAN\n})).to.be.true;\n(0, _chai.expect)(depends({\n  preparerType: _constants.PREPARER_TYPES.THIRD_PARTY_NON_VETERAN\n})).to.be.true;",
                          "err": {},
                          "uuid": "c093eff7-1aef-4c9c-ad20-103f3a7db1d9",
                          "parentUUID": "27e21328-859b-494a-ae79-60e76915560c",
                          "isHook": false,
                          "skipped": false
                        }
                      ],
                      "suites": [],
                      "passes": [
                        "558a6aac-77e4-4dfc-ba8d-dccf0263e223",
                        "c093eff7-1aef-4c9c-ad20-103f3a7db1d9"
                      ],
                      "failures": [],
                      "pending": [],
                      "skipped": [],
                      "duration": 0,
                      "root": false,
                      "rootEmpty": false,
                      "_timeout": 10000
                    }
                  ],
                  "passes": [],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "58920018-2543-4a4a-a1a7-6359155e4115",
                  "title": "otherReasonsChapter page.depends",
                  "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/20-10207/tests/unit/config/form.unit.spec.js",
                  "file": "/src/applications/simple-forms/20-10207/tests/unit/config/form.unit.spec.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [],
                  "suites": [
                    {
                      "uuid": "b3ac98b3-2eb6-482c-ad77-4cb327f86a71",
                      "title": "otherReasonsPage.depends",
                      "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/20-10207/tests/unit/config/form.unit.spec.js",
                      "file": "/src/applications/simple-forms/20-10207/tests/unit/config/form.unit.spec.js",
                      "beforeHooks": [],
                      "afterHooks": [],
                      "tests": [
                        {
                          "title": "returns FALSE if livingSituation.NONE is FALSE",
                          "fullTitle": "formConfig page.depends functions otherReasonsChapter page.depends otherReasonsPage.depends returns FALSE if livingSituation.NONE is FALSE",
                          "timedOut": false,
                          "duration": 0,
                          "state": "passed",
                          "speed": "fast",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "(0, _chai.expect)(depends({\n  livingSituation: {\n    NONE: false\n  }\n})).to.be.false;",
                          "err": {},
                          "uuid": "f0ad5939-98e4-41f5-937f-13913c33988f",
                          "parentUUID": "b3ac98b3-2eb6-482c-ad77-4cb327f86a71",
                          "isHook": false,
                          "skipped": false
                        },
                        {
                          "title": "returns TRUE if livingSituation.NONE is TRUE and preparerType is veteran or non-veteran",
                          "fullTitle": "formConfig page.depends functions otherReasonsChapter page.depends otherReasonsPage.depends returns TRUE if livingSituation.NONE is TRUE and preparerType is veteran or non-veteran",
                          "timedOut": false,
                          "duration": 0,
                          "state": "passed",
                          "speed": "fast",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "(0, _chai.expect)(depends({\n  livingSituation: {\n    NONE: true\n  },\n  preparerType: _constants.PREPARER_TYPES.VETERAN\n})).to.be.true;\n(0, _chai.expect)(depends({\n  livingSituation: {\n    NONE: true\n  },\n  preparerType: _constants.PREPARER_TYPES.NON_VETERAN\n})).to.be.true;",
                          "err": {},
                          "uuid": "08807415-3fcb-49fe-a400-3e8200d1060e",
                          "parentUUID": "b3ac98b3-2eb6-482c-ad77-4cb327f86a71",
                          "isHook": false,
                          "skipped": false
                        },
                        {
                          "title": "returns FALSE if livingSituation.NONE is TRUE and preparerType is third-party-veteran or third-party-non-veteran",
                          "fullTitle": "formConfig page.depends functions otherReasonsChapter page.depends otherReasonsPage.depends returns FALSE if livingSituation.NONE is TRUE and preparerType is third-party-veteran or third-party-non-veteran",
                          "timedOut": false,
                          "duration": 0,
                          "state": "passed",
                          "speed": "fast",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "(0, _chai.expect)(depends({\n  livingSituation: {\n    NONE: true\n  },\n  preparerType: _constants.PREPARER_TYPES.THIRD_PARTY_VETERAN\n})).to.be.false;\n(0, _chai.expect)(depends({\n  livingSituation: {\n    NONE: true\n  },\n  preparerType: _constants.PREPARER_TYPES.THIRD_PARTY_NON_VETERAN\n})).to.be.false;",
                          "err": {},
                          "uuid": "032a86b7-2d08-43f0-b1ff-07884ce6fb93",
                          "parentUUID": "b3ac98b3-2eb6-482c-ad77-4cb327f86a71",
                          "isHook": false,
                          "skipped": false
                        }
                      ],
                      "suites": [],
                      "passes": [
                        "f0ad5939-98e4-41f5-937f-13913c33988f",
                        "08807415-3fcb-49fe-a400-3e8200d1060e",
                        "032a86b7-2d08-43f0-b1ff-07884ce6fb93"
                      ],
                      "failures": [],
                      "pending": [],
                      "skipped": [],
                      "duration": 0,
                      "root": false,
                      "rootEmpty": false,
                      "_timeout": 10000
                    },
                    {
                      "uuid": "26d03a25-6d92-4128-92ae-fcda9bbcc5a7",
                      "title": "otherReasonsThirdPartyVeteranPage.depends",
                      "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/20-10207/tests/unit/config/form.unit.spec.js",
                      "file": "/src/applications/simple-forms/20-10207/tests/unit/config/form.unit.spec.js",
                      "beforeHooks": [],
                      "afterHooks": [],
                      "tests": [
                        {
                          "title": "returns FALSE if livingSituation.NONE is FALSE",
                          "fullTitle": "formConfig page.depends functions otherReasonsChapter page.depends otherReasonsThirdPartyVeteranPage.depends returns FALSE if livingSituation.NONE is FALSE",
                          "timedOut": false,
                          "duration": 0,
                          "state": "passed",
                          "speed": "fast",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "(0, _chai.expect)(depends({\n  livingSituation: {\n    NONE: false\n  }\n})).to.be.false;",
                          "err": {},
                          "uuid": "ad546a72-78b9-4557-b5a6-699e76c3b26b",
                          "parentUUID": "26d03a25-6d92-4128-92ae-fcda9bbcc5a7",
                          "isHook": false,
                          "skipped": false
                        },
                        {
                          "title": "returns FALSE if preparerType is veteran, non-veteran, or third-party-non-veteran",
                          "fullTitle": "formConfig page.depends functions otherReasonsChapter page.depends otherReasonsThirdPartyVeteranPage.depends returns FALSE if preparerType is veteran, non-veteran, or third-party-non-veteran",
                          "timedOut": false,
                          "duration": 0,
                          "state": "passed",
                          "speed": "fast",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "(0, _chai.expect)(depends({\n  livingSituation: {\n    NONE: true\n  },\n  preparerType: _constants.PREPARER_TYPES.VETERAN\n})).to.be.false;\n(0, _chai.expect)(depends({\n  livingSituation: {\n    NONE: true\n  },\n  preparerType: _constants.PREPARER_TYPES.NON_VETERAN\n})).to.be.false;\n(0, _chai.expect)(depends({\n  livingSituation: {\n    NONE: true\n  },\n  preparerType: _constants.PREPARER_TYPES.THIRD_PARTY_NON_VETERAN\n})).to.be.false;",
                          "err": {},
                          "uuid": "51521f3e-0f15-4ef6-b3ac-d8babb6dd90e",
                          "parentUUID": "26d03a25-6d92-4128-92ae-fcda9bbcc5a7",
                          "isHook": false,
                          "skipped": false
                        },
                        {
                          "title": "returns TRUE if livingSituation.NONE is TRUE and preparerType is third-party-veteran",
                          "fullTitle": "formConfig page.depends functions otherReasonsChapter page.depends otherReasonsThirdPartyVeteranPage.depends returns TRUE if livingSituation.NONE is TRUE and preparerType is third-party-veteran",
                          "timedOut": false,
                          "duration": 0,
                          "state": "passed",
                          "speed": "fast",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "(0, _chai.expect)(depends({\n  livingSituation: {\n    NONE: true\n  },\n  preparerType: _constants.PREPARER_TYPES.THIRD_PARTY_VETERAN\n})).to.be.true;",
                          "err": {},
                          "uuid": "c7fecb25-4600-4834-9ad6-8fef2a52171e",
                          "parentUUID": "26d03a25-6d92-4128-92ae-fcda9bbcc5a7",
                          "isHook": false,
                          "skipped": false
                        }
                      ],
                      "suites": [],
                      "passes": [
                        "ad546a72-78b9-4557-b5a6-699e76c3b26b",
                        "51521f3e-0f15-4ef6-b3ac-d8babb6dd90e",
                        "c7fecb25-4600-4834-9ad6-8fef2a52171e"
                      ],
                      "failures": [],
                      "pending": [],
                      "skipped": [],
                      "duration": 0,
                      "root": false,
                      "rootEmpty": false,
                      "_timeout": 10000
                    },
                    {
                      "uuid": "dcc049c8-2dad-4ec6-a291-ca34fec602fd",
                      "title": "otherReasonsThirdPartyNonVeteranPage.depends",
                      "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/20-10207/tests/unit/config/form.unit.spec.js",
                      "file": "/src/applications/simple-forms/20-10207/tests/unit/config/form.unit.spec.js",
                      "beforeHooks": [],
                      "afterHooks": [],
                      "tests": [
                        {
                          "title": "returns FALSE if livingSituation.NONE is FALSE",
                          "fullTitle": "formConfig page.depends functions otherReasonsChapter page.depends otherReasonsThirdPartyNonVeteranPage.depends returns FALSE if livingSituation.NONE is FALSE",
                          "timedOut": false,
                          "duration": 0,
                          "state": "passed",
                          "speed": "fast",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "(0, _chai.expect)(depends({\n  livingSituation: {\n    NONE: false\n  }\n})).to.be.false;",
                          "err": {},
                          "uuid": "6719f0c2-4dd8-43e5-b1fa-1202a5a80f42",
                          "parentUUID": "dcc049c8-2dad-4ec6-a291-ca34fec602fd",
                          "isHook": false,
                          "skipped": false
                        },
                        {
                          "title": "returns FALSE if preparerType is veteran, non-veteran, or third-party-veteran",
                          "fullTitle": "formConfig page.depends functions otherReasonsChapter page.depends otherReasonsThirdPartyNonVeteranPage.depends returns FALSE if preparerType is veteran, non-veteran, or third-party-veteran",
                          "timedOut": false,
                          "duration": 0,
                          "state": "passed",
                          "speed": "fast",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "(0, _chai.expect)(depends({\n  livingSituation: {\n    NONE: true\n  },\n  preparerType: _constants.PREPARER_TYPES.VETERAN\n})).to.be.false;\n(0, _chai.expect)(depends({\n  livingSituation: {\n    NONE: true\n  },\n  preparerType: _constants.PREPARER_TYPES.NON_VETERAN\n})).to.be.false;\n(0, _chai.expect)(depends({\n  livingSituation: {\n    NONE: true\n  },\n  preparerType: _constants.PREPARER_TYPES.THIRD_PARTY_VETERAN\n})).to.be.false;",
                          "err": {},
                          "uuid": "9ddae863-ad75-41b1-bf5f-ea1c77f84b50",
                          "parentUUID": "dcc049c8-2dad-4ec6-a291-ca34fec602fd",
                          "isHook": false,
                          "skipped": false
                        },
                        {
                          "title": "returns TRUE if livingSituation.NONE is TRUE and preparerType is third-party-non-veteran",
                          "fullTitle": "formConfig page.depends functions otherReasonsChapter page.depends otherReasonsThirdPartyNonVeteranPage.depends returns TRUE if livingSituation.NONE is TRUE and preparerType is third-party-non-veteran",
                          "timedOut": false,
                          "duration": 0,
                          "state": "passed",
                          "speed": "fast",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "(0, _chai.expect)(depends({\n  livingSituation: {\n    NONE: true\n  },\n  preparerType: _constants.PREPARER_TYPES.THIRD_PARTY_NON_VETERAN\n})).to.be.true;",
                          "err": {},
                          "uuid": "542efd92-c83f-4d1b-899f-31dbba67dfd1",
                          "parentUUID": "dcc049c8-2dad-4ec6-a291-ca34fec602fd",
                          "isHook": false,
                          "skipped": false
                        }
                      ],
                      "suites": [],
                      "passes": [
                        "6719f0c2-4dd8-43e5-b1fa-1202a5a80f42",
                        "9ddae863-ad75-41b1-bf5f-ea1c77f84b50",
                        "542efd92-c83f-4d1b-899f-31dbba67dfd1"
                      ],
                      "failures": [],
                      "pending": [],
                      "skipped": [],
                      "duration": 0,
                      "root": false,
                      "rootEmpty": false,
                      "_timeout": 10000
                    },
                    {
                      "uuid": "9c1dff20-8bf7-4235-a2f4-abfc1305f756",
                      "title": "otherReasonsHomelessPage.depends",
                      "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/20-10207/tests/unit/config/form.unit.spec.js",
                      "file": "/src/applications/simple-forms/20-10207/tests/unit/config/form.unit.spec.js",
                      "beforeHooks": [],
                      "afterHooks": [],
                      "tests": [
                        {
                          "title": "returns FALSE if livingSituation.NONE is TRUE",
                          "fullTitle": "formConfig page.depends functions otherReasonsChapter page.depends otherReasonsHomelessPage.depends returns FALSE if livingSituation.NONE is TRUE",
                          "timedOut": false,
                          "duration": 0,
                          "state": "passed",
                          "speed": "fast",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "(0, _chai.expect)(depends({\n  livingSituation: {\n    NONE: true\n  }\n})).to.be.false;",
                          "err": {},
                          "uuid": "82dcb120-f9b9-4ea3-9408-bf52127fe7c6",
                          "parentUUID": "9c1dff20-8bf7-4235-a2f4-abfc1305f756",
                          "isHook": false,
                          "skipped": false
                        },
                        {
                          "title": "returns TRUE if livingSituation.NONE is FALSE and preparerType is veteran or non-veteran",
                          "fullTitle": "formConfig page.depends functions otherReasonsChapter page.depends otherReasonsHomelessPage.depends returns TRUE if livingSituation.NONE is FALSE and preparerType is veteran or non-veteran",
                          "timedOut": false,
                          "duration": 0,
                          "state": "passed",
                          "speed": "fast",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "(0, _chai.expect)(depends({\n  livingSituation: {\n    NONE: false\n  },\n  preparerType: _constants.PREPARER_TYPES.VETERAN\n})).to.be.true;\n(0, _chai.expect)(depends({\n  livingSituation: {\n    NONE: false\n  },\n  preparerType: _constants.PREPARER_TYPES.NON_VETERAN\n})).to.be.true;",
                          "err": {},
                          "uuid": "2cb0fdf9-8c36-4ddd-8239-8f92b44b7ff4",
                          "parentUUID": "9c1dff20-8bf7-4235-a2f4-abfc1305f756",
                          "isHook": false,
                          "skipped": false
                        },
                        {
                          "title": "returns FALSE if livingSituation.NONE is FALSE and preparerType is third-party-veteran or third-party-non-veteran",
                          "fullTitle": "formConfig page.depends functions otherReasonsChapter page.depends otherReasonsHomelessPage.depends returns FALSE if livingSituation.NONE is FALSE and preparerType is third-party-veteran or third-party-non-veteran",
                          "timedOut": false,
                          "duration": 0,
                          "state": "passed",
                          "speed": "fast",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "(0, _chai.expect)(depends({\n  livingSituation: {\n    NONE: false\n  },\n  preparerType: _constants.PREPARER_TYPES.THIRD_PARTY_VETERAN\n})).to.be.false;\n(0, _chai.expect)(depends({\n  livingSituation: {\n    NONE: false\n  },\n  preparerType: _constants.PREPARER_TYPES.THIRD_PARTY_NON_VETERAN\n})).to.be.false;",
                          "err": {},
                          "uuid": "3d659956-6651-482a-834e-1fc1bc2e7eab",
                          "parentUUID": "9c1dff20-8bf7-4235-a2f4-abfc1305f756",
                          "isHook": false,
                          "skipped": false
                        }
                      ],
                      "suites": [],
                      "passes": [
                        "82dcb120-f9b9-4ea3-9408-bf52127fe7c6",
                        "2cb0fdf9-8c36-4ddd-8239-8f92b44b7ff4",
                        "3d659956-6651-482a-834e-1fc1bc2e7eab"
                      ],
                      "failures": [],
                      "pending": [],
                      "skipped": [],
                      "duration": 0,
                      "root": false,
                      "rootEmpty": false,
                      "_timeout": 10000
                    },
                    {
                      "uuid": "48cdac23-ea60-4ed2-a03c-de1ac1bdf238",
                      "title": "otherReasonsHomelessThirdPartyVeteranPage.depends",
                      "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/20-10207/tests/unit/config/form.unit.spec.js",
                      "file": "/src/applications/simple-forms/20-10207/tests/unit/config/form.unit.spec.js",
                      "beforeHooks": [],
                      "afterHooks": [],
                      "tests": [
                        {
                          "title": "returns FALSE if livingSituation.NONE is TRUE",
                          "fullTitle": "formConfig page.depends functions otherReasonsChapter page.depends otherReasonsHomelessThirdPartyVeteranPage.depends returns FALSE if livingSituation.NONE is TRUE",
                          "timedOut": false,
                          "duration": 0,
                          "state": "passed",
                          "speed": "fast",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "(0, _chai.expect)(depends({\n  livingSituation: {\n    NONE: true\n  }\n})).to.be.false;",
                          "err": {},
                          "uuid": "9f6bfb6d-e301-454b-96d0-22ecc39e800f",
                          "parentUUID": "48cdac23-ea60-4ed2-a03c-de1ac1bdf238",
                          "isHook": false,
                          "skipped": false
                        },
                        {
                          "title": "returns FALSE if preparerType is veteran, non-veteran, or third-party-non-veteran",
                          "fullTitle": "formConfig page.depends functions otherReasonsChapter page.depends otherReasonsHomelessThirdPartyVeteranPage.depends returns FALSE if preparerType is veteran, non-veteran, or third-party-non-veteran",
                          "timedOut": false,
                          "duration": 0,
                          "state": "passed",
                          "speed": "fast",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "(0, _chai.expect)(depends({\n  livingSituation: {\n    NONE: false\n  },\n  preparerType: _constants.PREPARER_TYPES.VETERAN\n})).to.be.false;\n(0, _chai.expect)(depends({\n  livingSituation: {\n    NONE: false\n  },\n  preparerType: _constants.PREPARER_TYPES.NON_VETERAN\n})).to.be.false;\n(0, _chai.expect)(depends({\n  livingSituation: {\n    NONE: false\n  },\n  preparerType: _constants.PREPARER_TYPES.THIRD_PARTY_NON_VETERAN\n})).to.be.false;",
                          "err": {},
                          "uuid": "18284ab5-691f-4375-b83b-b05c1f2b7e20",
                          "parentUUID": "48cdac23-ea60-4ed2-a03c-de1ac1bdf238",
                          "isHook": false,
                          "skipped": false
                        },
                        {
                          "title": "returns TRUE if livingSituation.NONE is FALSE and preparerType is third-party-veteran",
                          "fullTitle": "formConfig page.depends functions otherReasonsChapter page.depends otherReasonsHomelessThirdPartyVeteranPage.depends returns TRUE if livingSituation.NONE is FALSE and preparerType is third-party-veteran",
                          "timedOut": false,
                          "duration": 0,
                          "state": "passed",
                          "speed": "fast",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "(0, _chai.expect)(depends({\n  livingSituation: {\n    NONE: false\n  },\n  preparerType: _constants.PREPARER_TYPES.THIRD_PARTY_VETERAN\n})).to.be.true;",
                          "err": {},
                          "uuid": "f10d8699-b620-47cb-80f6-92172ff8e26f",
                          "parentUUID": "48cdac23-ea60-4ed2-a03c-de1ac1bdf238",
                          "isHook": false,
                          "skipped": false
                        }
                      ],
                      "suites": [],
                      "passes": [
                        "9f6bfb6d-e301-454b-96d0-22ecc39e800f",
                        "18284ab5-691f-4375-b83b-b05c1f2b7e20",
                        "f10d8699-b620-47cb-80f6-92172ff8e26f"
                      ],
                      "failures": [],
                      "pending": [],
                      "skipped": [],
                      "duration": 0,
                      "root": false,
                      "rootEmpty": false,
                      "_timeout": 10000
                    },
                    {
                      "uuid": "c3b2e94e-cda5-477a-8e2b-4d840979c26b",
                      "title": "otherReasonsHomelessThirdPartyNonVeteranPage.depends",
                      "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/20-10207/tests/unit/config/form.unit.spec.js",
                      "file": "/src/applications/simple-forms/20-10207/tests/unit/config/form.unit.spec.js",
                      "beforeHooks": [],
                      "afterHooks": [],
                      "tests": [
                        {
                          "title": "returns FALSE if livingSituation.NONE is TRUE",
                          "fullTitle": "formConfig page.depends functions otherReasonsChapter page.depends otherReasonsHomelessThirdPartyNonVeteranPage.depends returns FALSE if livingSituation.NONE is TRUE",
                          "timedOut": false,
                          "duration": 0,
                          "state": "passed",
                          "speed": "fast",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "(0, _chai.expect)(depends({\n  livingSituation: {\n    NONE: true\n  }\n})).to.be.false;",
                          "err": {},
                          "uuid": "f49bab86-500a-452d-a85b-bc5fadefd5d3",
                          "parentUUID": "c3b2e94e-cda5-477a-8e2b-4d840979c26b",
                          "isHook": false,
                          "skipped": false
                        },
                        {
                          "title": "returns FALSE if preparerType is veteran, non-veteran, or third-party-veteran",
                          "fullTitle": "formConfig page.depends functions otherReasonsChapter page.depends otherReasonsHomelessThirdPartyNonVeteranPage.depends returns FALSE if preparerType is veteran, non-veteran, or third-party-veteran",
                          "timedOut": false,
                          "duration": 0,
                          "state": "passed",
                          "speed": "fast",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "(0, _chai.expect)(depends({\n  livingSituation: {\n    NONE: false\n  },\n  preparerType: _constants.PREPARER_TYPES.VETERAN\n})).to.be.false;\n(0, _chai.expect)(depends({\n  livingSituation: {\n    NONE: false\n  },\n  preparerType: _constants.PREPARER_TYPES.NON_VETERAN\n})).to.be.false;\n(0, _chai.expect)(depends({\n  livingSituation: {\n    NONE: false\n  },\n  preparerType: _constants.PREPARER_TYPES.THIRD_PARTY_VETERAN\n})).to.be.false;",
                          "err": {},
                          "uuid": "0fbb5f95-3707-4e2f-b9a8-f9fe17b42d77",
                          "parentUUID": "c3b2e94e-cda5-477a-8e2b-4d840979c26b",
                          "isHook": false,
                          "skipped": false
                        },
                        {
                          "title": "returns TRUE if livingSituation.NONE is FALSE and preparerType is third-party-non-veteran",
                          "fullTitle": "formConfig page.depends functions otherReasonsChapter page.depends otherReasonsHomelessThirdPartyNonVeteranPage.depends returns TRUE if livingSituation.NONE is FALSE and preparerType is third-party-non-veteran",
                          "timedOut": false,
                          "duration": 0,
                          "state": "passed",
                          "speed": "fast",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "(0, _chai.expect)(depends({\n  livingSituation: {\n    NONE: false\n  },\n  preparerType: _constants.PREPARER_TYPES.THIRD_PARTY_NON_VETERAN\n})).to.be.true;",
                          "err": {},
                          "uuid": "2f9ffeb2-6da1-4fad-96ae-53b85cf9565b",
                          "parentUUID": "c3b2e94e-cda5-477a-8e2b-4d840979c26b",
                          "isHook": false,
                          "skipped": false
                        }
                      ],
                      "suites": [],
                      "passes": [
                        "f49bab86-500a-452d-a85b-bc5fadefd5d3",
                        "0fbb5f95-3707-4e2f-b9a8-f9fe17b42d77",
                        "2f9ffeb2-6da1-4fad-96ae-53b85cf9565b"
                      ],
                      "failures": [],
                      "pending": [],
                      "skipped": [],
                      "duration": 0,
                      "root": false,
                      "rootEmpty": false,
                      "_timeout": 10000
                    }
                  ],
                  "passes": [],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "6db2b95b-99d5-4fc2-90b1-8b57ed25b013",
                  "title": "evidenceChapter page.depends",
                  "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/20-10207/tests/unit/config/form.unit.spec.js",
                  "file": "/src/applications/simple-forms/20-10207/tests/unit/config/form.unit.spec.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [],
                  "suites": [
                    {
                      "uuid": "db92ea81-8caa-4b2a-b6c2-b469ebb9f6e4",
                      "title": "financialHardshipPage.depends",
                      "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/20-10207/tests/unit/config/form.unit.spec.js",
                      "file": "/src/applications/simple-forms/20-10207/tests/unit/config/form.unit.spec.js",
                      "beforeHooks": [],
                      "afterHooks": [],
                      "tests": [
                        {
                          "title": "returns TRUE if otherReasons.FINANCIAL_HARDSHIP is TRUE",
                          "fullTitle": "formConfig page.depends functions evidenceChapter page.depends financialHardshipPage.depends returns TRUE if otherReasons.FINANCIAL_HARDSHIP is TRUE",
                          "timedOut": false,
                          "duration": 0,
                          "state": "passed",
                          "speed": "fast",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "(0, _chai.expect)(depends({\n  otherReasons: {\n    FINANCIAL_HARDSHIP: true\n  }\n})).to.be.true;",
                          "err": {},
                          "uuid": "e69b9cd0-38ed-4a44-be91-0278473d22ff",
                          "parentUUID": "db92ea81-8caa-4b2a-b6c2-b469ebb9f6e4",
                          "isHook": false,
                          "skipped": false
                        },
                        {
                          "title": "returns FALSE if otherReasons.FINANCIAL_HARDSHIP is FALSE",
                          "fullTitle": "formConfig page.depends functions evidenceChapter page.depends financialHardshipPage.depends returns FALSE if otherReasons.FINANCIAL_HARDSHIP is FALSE",
                          "timedOut": false,
                          "duration": 0,
                          "state": "passed",
                          "speed": "fast",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "(0, _chai.expect)(depends({\n  otherReasons: {\n    FINANCIAL_HARDSHIP: false\n  }\n})).to.be.false;",
                          "err": {},
                          "uuid": "42fe3b64-de75-4892-9d2d-7fa5c7c58efb",
                          "parentUUID": "db92ea81-8caa-4b2a-b6c2-b469ebb9f6e4",
                          "isHook": false,
                          "skipped": false
                        }
                      ],
                      "suites": [],
                      "passes": [
                        "e69b9cd0-38ed-4a44-be91-0278473d22ff",
                        "42fe3b64-de75-4892-9d2d-7fa5c7c58efb"
                      ],
                      "failures": [],
                      "pending": [],
                      "skipped": [],
                      "duration": 0,
                      "root": false,
                      "rootEmpty": false,
                      "_timeout": 10000
                    },
                    {
                      "uuid": "e4a100d9-bc97-4d50-967c-92b4bc34343e",
                      "title": "terminalIllnessPage.depends",
                      "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/20-10207/tests/unit/config/form.unit.spec.js",
                      "file": "/src/applications/simple-forms/20-10207/tests/unit/config/form.unit.spec.js",
                      "beforeHooks": [],
                      "afterHooks": [],
                      "tests": [
                        {
                          "title": "returns TRUE if otherReasons.TERMINAL_ILLNESS is TRUE",
                          "fullTitle": "formConfig page.depends functions evidenceChapter page.depends terminalIllnessPage.depends returns TRUE if otherReasons.TERMINAL_ILLNESS is TRUE",
                          "timedOut": false,
                          "duration": 0,
                          "state": "passed",
                          "speed": "fast",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "(0, _chai.expect)(depends({\n  otherReasons: {\n    TERMINAL_ILLNESS: true\n  }\n})).to.be.true;",
                          "err": {},
                          "uuid": "b4016a34-d335-49d2-a337-dcb4c93f5930",
                          "parentUUID": "e4a100d9-bc97-4d50-967c-92b4bc34343e",
                          "isHook": false,
                          "skipped": false
                        },
                        {
                          "title": "returns FALSE if otherReasons.TERMINAL_ILLNESS is FALSE",
                          "fullTitle": "formConfig page.depends functions evidenceChapter page.depends terminalIllnessPage.depends returns FALSE if otherReasons.TERMINAL_ILLNESS is FALSE",
                          "timedOut": false,
                          "duration": 0,
                          "state": "passed",
                          "speed": "fast",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "(0, _chai.expect)(depends({\n  otherReasons: {\n    TERMINAL_ILLNESS: false\n  }\n})).to.be.false;",
                          "err": {},
                          "uuid": "53149d61-ffa6-45fa-96aa-788bed19ba34",
                          "parentUUID": "e4a100d9-bc97-4d50-967c-92b4bc34343e",
                          "isHook": false,
                          "skipped": false
                        }
                      ],
                      "suites": [],
                      "passes": [
                        "b4016a34-d335-49d2-a337-dcb4c93f5930",
                        "53149d61-ffa6-45fa-96aa-788bed19ba34"
                      ],
                      "failures": [],
                      "pending": [],
                      "skipped": [],
                      "duration": 0,
                      "root": false,
                      "rootEmpty": false,
                      "_timeout": 10000
                    },
                    {
                      "uuid": "80103326-a65d-4114-afc9-350af8748e8c",
                      "title": "alsPage.depends",
                      "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/20-10207/tests/unit/config/form.unit.spec.js",
                      "file": "/src/applications/simple-forms/20-10207/tests/unit/config/form.unit.spec.js",
                      "beforeHooks": [],
                      "afterHooks": [],
                      "tests": [
                        {
                          "title": "returns TRUE if otherReasons.ALS is TRUE",
                          "fullTitle": "formConfig page.depends functions evidenceChapter page.depends alsPage.depends returns TRUE if otherReasons.ALS is TRUE",
                          "timedOut": false,
                          "duration": 0,
                          "state": "passed",
                          "speed": "fast",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "(0, _chai.expect)(depends({\n  otherReasons: {\n    ALS: true\n  }\n})).to.be.true;",
                          "err": {},
                          "uuid": "e736150b-15ff-440b-96ae-cd82d21c2810",
                          "parentUUID": "80103326-a65d-4114-afc9-350af8748e8c",
                          "isHook": false,
                          "skipped": false
                        },
                        {
                          "title": "returns FALSE if otherReasons.ALS is FALSE",
                          "fullTitle": "formConfig page.depends functions evidenceChapter page.depends alsPage.depends returns FALSE if otherReasons.ALS is FALSE",
                          "timedOut": false,
                          "duration": 0,
                          "state": "passed",
                          "speed": "fast",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "(0, _chai.expect)(depends({\n  otherReasons: {\n    ALS: false\n  }\n})).to.be.false;",
                          "err": {},
                          "uuid": "ed8dd67f-195e-4fac-80a5-0532b776e945",
                          "parentUUID": "80103326-a65d-4114-afc9-350af8748e8c",
                          "isHook": false,
                          "skipped": false
                        }
                      ],
                      "suites": [],
                      "passes": [
                        "e736150b-15ff-440b-96ae-cd82d21c2810",
                        "ed8dd67f-195e-4fac-80a5-0532b776e945"
                      ],
                      "failures": [],
                      "pending": [],
                      "skipped": [],
                      "duration": 0,
                      "root": false,
                      "rootEmpty": false,
                      "_timeout": 10000
                    },
                    {
                      "uuid": "7b674c2c-655f-44f9-b67e-b18b3ddee681",
                      "title": "vsiPage.depends",
                      "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/20-10207/tests/unit/config/form.unit.spec.js",
                      "file": "/src/applications/simple-forms/20-10207/tests/unit/config/form.unit.spec.js",
                      "beforeHooks": [],
                      "afterHooks": [],
                      "tests": [
                        {
                          "title": "returns TRUE if otherReasons.VSI_SI is TRUE",
                          "fullTitle": "formConfig page.depends functions evidenceChapter page.depends vsiPage.depends returns TRUE if otherReasons.VSI_SI is TRUE",
                          "timedOut": false,
                          "duration": 0,
                          "state": "passed",
                          "speed": "fast",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "(0, _chai.expect)(depends({\n  otherReasons: {\n    VSI_SI: true\n  }\n})).to.be.true;",
                          "err": {},
                          "uuid": "788bbdad-073f-483d-b863-fbc851cae892",
                          "parentUUID": "7b674c2c-655f-44f9-b67e-b18b3ddee681",
                          "isHook": false,
                          "skipped": false
                        },
                        {
                          "title": "returns FALSE if otherReasons.VSI_SI is FALSE",
                          "fullTitle": "formConfig page.depends functions evidenceChapter page.depends vsiPage.depends returns FALSE if otherReasons.VSI_SI is FALSE",
                          "timedOut": false,
                          "duration": 0,
                          "state": "passed",
                          "speed": "fast",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "(0, _chai.expect)(depends({\n  otherReasons: {\n    VSI_SI: false\n  }\n})).to.be.false;",
                          "err": {},
                          "uuid": "5318c9b0-91aa-4b88-ae13-593ac8c0edc2",
                          "parentUUID": "7b674c2c-655f-44f9-b67e-b18b3ddee681",
                          "isHook": false,
                          "skipped": false
                        }
                      ],
                      "suites": [],
                      "passes": [
                        "788bbdad-073f-483d-b863-fbc851cae892",
                        "5318c9b0-91aa-4b88-ae13-593ac8c0edc2"
                      ],
                      "failures": [],
                      "pending": [],
                      "skipped": [],
                      "duration": 0,
                      "root": false,
                      "rootEmpty": false,
                      "_timeout": 10000
                    },
                    {
                      "uuid": "09f62925-905b-4ee7-97dc-3cc80f599158",
                      "title": "powConfinementPage.depends",
                      "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/20-10207/tests/unit/config/form.unit.spec.js",
                      "file": "/src/applications/simple-forms/20-10207/tests/unit/config/form.unit.spec.js",
                      "beforeHooks": [],
                      "afterHooks": [],
                      "tests": [
                        {
                          "title": "returns TRUE if otherReasons.FORMER_POW is TRUE",
                          "fullTitle": "formConfig page.depends functions evidenceChapter page.depends powConfinementPage.depends returns TRUE if otherReasons.FORMER_POW is TRUE",
                          "timedOut": false,
                          "duration": 0,
                          "state": "passed",
                          "speed": "fast",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "(0, _chai.expect)(depends({\n  otherReasons: {\n    FORMER_POW: true\n  }\n})).to.be.true;",
                          "err": {},
                          "uuid": "5b0f419c-6352-4765-bd36-8c128dce0610",
                          "parentUUID": "09f62925-905b-4ee7-97dc-3cc80f599158",
                          "isHook": false,
                          "skipped": false
                        },
                        {
                          "title": "returns FALSE if otherReasons.FORMER_POW is FALSE",
                          "fullTitle": "formConfig page.depends functions evidenceChapter page.depends powConfinementPage.depends returns FALSE if otherReasons.FORMER_POW is FALSE",
                          "timedOut": false,
                          "duration": 0,
                          "state": "passed",
                          "speed": "fast",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "(0, _chai.expect)(depends({\n  otherReasons: {\n    FORMER_POW: false\n  }\n})).to.be.false;",
                          "err": {},
                          "uuid": "b8edc9e6-8f3b-449d-a5bf-6b8d8c5726f8",
                          "parentUUID": "09f62925-905b-4ee7-97dc-3cc80f599158",
                          "isHook": false,
                          "skipped": false
                        }
                      ],
                      "suites": [],
                      "passes": [
                        "5b0f419c-6352-4765-bd36-8c128dce0610",
                        "b8edc9e6-8f3b-449d-a5bf-6b8d8c5726f8"
                      ],
                      "failures": [],
                      "pending": [],
                      "skipped": [],
                      "duration": 0,
                      "root": false,
                      "rootEmpty": false,
                      "_timeout": 10000
                    },
                    {
                      "uuid": "0b699603-92e5-4c79-ac4b-7cafa5816263",
                      "title": "powConfinement2Page.depends",
                      "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/20-10207/tests/unit/config/form.unit.spec.js",
                      "file": "/src/applications/simple-forms/20-10207/tests/unit/config/form.unit.spec.js",
                      "beforeHooks": [],
                      "afterHooks": [],
                      "tests": [
                        {
                          "title": "returns TRUE if otherReasons.FORMER_POW & powMultipleConfinements are TRUE",
                          "fullTitle": "formConfig page.depends functions evidenceChapter page.depends powConfinement2Page.depends returns TRUE if otherReasons.FORMER_POW & powMultipleConfinements are TRUE",
                          "timedOut": false,
                          "duration": 0,
                          "state": "passed",
                          "speed": "fast",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "(0, _chai.expect)(depends({\n  otherReasons: {\n    FORMER_POW: true\n  },\n  powMultipleConfinements: true\n})).to.be.true;",
                          "err": {},
                          "uuid": "b39b611e-8191-4e52-b0c5-7cf086a39e55",
                          "parentUUID": "0b699603-92e5-4c79-ac4b-7cafa5816263",
                          "isHook": false,
                          "skipped": false
                        },
                        {
                          "title": "returns FALSE if otherReasons.FORMER_POW or powMultipleConfinements is FALSE",
                          "fullTitle": "formConfig page.depends functions evidenceChapter page.depends powConfinement2Page.depends returns FALSE if otherReasons.FORMER_POW or powMultipleConfinements is FALSE",
                          "timedOut": false,
                          "duration": 0,
                          "state": "passed",
                          "speed": "fast",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "(0, _chai.expect)(depends({\n  otherReasons: {\n    FORMER_POW: false\n  },\n  powMultipleConfinements: true\n})).to.be.false;\n(0, _chai.expect)(depends({\n  otherReasons: {\n    FORMER_POW: true\n  },\n  powMultipleConfinements: false\n})).to.be.false;",
                          "err": {},
                          "uuid": "87368fab-9b9f-4cd3-ba4c-163232c8c109",
                          "parentUUID": "0b699603-92e5-4c79-ac4b-7cafa5816263",
                          "isHook": false,
                          "skipped": false
                        }
                      ],
                      "suites": [],
                      "passes": [
                        "b39b611e-8191-4e52-b0c5-7cf086a39e55",
                        "87368fab-9b9f-4cd3-ba4c-163232c8c109"
                      ],
                      "failures": [],
                      "pending": [],
                      "skipped": [],
                      "duration": 0,
                      "root": false,
                      "rootEmpty": false,
                      "_timeout": 10000
                    },
                    {
                      "uuid": "be58b0af-4461-4a07-8668-7c3efb6b11f8",
                      "title": "powDocumentsPage.depends",
                      "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/20-10207/tests/unit/config/form.unit.spec.js",
                      "file": "/src/applications/simple-forms/20-10207/tests/unit/config/form.unit.spec.js",
                      "beforeHooks": [],
                      "afterHooks": [],
                      "tests": [
                        {
                          "title": "returns TRUE if otherReasons.FORMER_POW is TRUE",
                          "fullTitle": "formConfig page.depends functions evidenceChapter page.depends powDocumentsPage.depends returns TRUE if otherReasons.FORMER_POW is TRUE",
                          "timedOut": false,
                          "duration": 0,
                          "state": "passed",
                          "speed": "fast",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "(0, _chai.expect)(depends({\n  otherReasons: {\n    FORMER_POW: true\n  }\n})).to.be.true;",
                          "err": {},
                          "uuid": "fbe1c67a-45e1-45a7-b54e-8fe92c001fc5",
                          "parentUUID": "be58b0af-4461-4a07-8668-7c3efb6b11f8",
                          "isHook": false,
                          "skipped": false
                        },
                        {
                          "title": "returns FALSE if otherReasons.FORMER_POW is FALSE",
                          "fullTitle": "formConfig page.depends functions evidenceChapter page.depends powDocumentsPage.depends returns FALSE if otherReasons.FORMER_POW is FALSE",
                          "timedOut": false,
                          "duration": 0,
                          "state": "passed",
                          "speed": "fast",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "(0, _chai.expect)(depends({\n  otherReasons: {\n    FORMER_POW: false\n  }\n})).to.be.false;",
                          "err": {},
                          "uuid": "f0dae552-79a3-4686-a1f7-fce66c72e3f3",
                          "parentUUID": "be58b0af-4461-4a07-8668-7c3efb6b11f8",
                          "isHook": false,
                          "skipped": false
                        }
                      ],
                      "suites": [],
                      "passes": [
                        "fbe1c67a-45e1-45a7-b54e-8fe92c001fc5",
                        "f0dae552-79a3-4686-a1f7-fce66c72e3f3"
                      ],
                      "failures": [],
                      "pending": [],
                      "skipped": [],
                      "duration": 0,
                      "root": false,
                      "rootEmpty": false,
                      "_timeout": 10000
                    },
                    {
                      "uuid": "d7c25928-acf4-4c92-b5dd-38a4ec32f782",
                      "title": "medalAwardPage.depends",
                      "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/20-10207/tests/unit/config/form.unit.spec.js",
                      "file": "/src/applications/simple-forms/20-10207/tests/unit/config/form.unit.spec.js",
                      "beforeHooks": [],
                      "afterHooks": [],
                      "tests": [
                        {
                          "title": "returns TRUE if otherReasons.MEDAL_AWARD is TRUE",
                          "fullTitle": "formConfig page.depends functions evidenceChapter page.depends medalAwardPage.depends returns TRUE if otherReasons.MEDAL_AWARD is TRUE",
                          "timedOut": false,
                          "duration": 0,
                          "state": "passed",
                          "speed": "fast",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "(0, _chai.expect)(depends({\n  otherReasons: {\n    MEDAL_AWARD: true\n  }\n})).to.be.true;",
                          "err": {},
                          "uuid": "264ae524-f850-480d-800d-52102fc5e46f",
                          "parentUUID": "d7c25928-acf4-4c92-b5dd-38a4ec32f782",
                          "isHook": false,
                          "skipped": false
                        },
                        {
                          "title": "returns FALSE if otherReasons.MEDAL_AWARD is FALSE",
                          "fullTitle": "formConfig page.depends functions evidenceChapter page.depends medalAwardPage.depends returns FALSE if otherReasons.MEDAL_AWARD is FALSE",
                          "timedOut": false,
                          "duration": 0,
                          "state": "passed",
                          "speed": "fast",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "(0, _chai.expect)(depends({\n  otherReasons: {\n    MEDAL_AWARD: false\n  }\n})).to.be.false;",
                          "err": {},
                          "uuid": "3ba51926-d838-4770-9166-e89eb3f2545b",
                          "parentUUID": "d7c25928-acf4-4c92-b5dd-38a4ec32f782",
                          "isHook": false,
                          "skipped": false
                        }
                      ],
                      "suites": [],
                      "passes": [
                        "264ae524-f850-480d-800d-52102fc5e46f",
                        "3ba51926-d838-4770-9166-e89eb3f2545b"
                      ],
                      "failures": [],
                      "pending": [],
                      "skipped": [],
                      "duration": 0,
                      "root": false,
                      "rootEmpty": false,
                      "_timeout": 10000
                    }
                  ],
                  "passes": [],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                },
                {
                  "uuid": "63a7f78d-6310-46e2-b5b2-f3109add8215",
                  "title": "medicalTreatmentChapter page.depends",
                  "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/20-10207/tests/unit/config/form.unit.spec.js",
                  "file": "/src/applications/simple-forms/20-10207/tests/unit/config/form.unit.spec.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [],
                  "suites": [
                    {
                      "uuid": "2b37be2d-1c56-4abe-abea-fcca665f19b0",
                      "title": "medicalTreatmentPage.depends",
                      "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/20-10207/tests/unit/config/form.unit.spec.js",
                      "file": "/src/applications/simple-forms/20-10207/tests/unit/config/form.unit.spec.js",
                      "beforeHooks": [],
                      "afterHooks": [],
                      "tests": [
                        {
                          "title": "returns TRUE if preparerType is veteran or non-veteran",
                          "fullTitle": "formConfig page.depends functions medicalTreatmentChapter page.depends medicalTreatmentPage.depends returns TRUE if preparerType is veteran or non-veteran",
                          "timedOut": false,
                          "duration": 0,
                          "state": "passed",
                          "speed": "fast",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "(0, _chai.expect)(depends({\n  preparerType: _constants.PREPARER_TYPES.VETERAN\n})).to.be.true;\n(0, _chai.expect)(depends({\n  preparerType: _constants.PREPARER_TYPES.NON_VETERAN\n})).to.be.true;",
                          "err": {},
                          "uuid": "6bf23d29-710f-472d-96e7-69f79cc27e0b",
                          "parentUUID": "2b37be2d-1c56-4abe-abea-fcca665f19b0",
                          "isHook": false,
                          "skipped": false
                        },
                        {
                          "title": "returns FALSE if preparerType is third-party-veteran or third-party-non-veteran",
                          "fullTitle": "formConfig page.depends functions medicalTreatmentChapter page.depends medicalTreatmentPage.depends returns FALSE if preparerType is third-party-veteran or third-party-non-veteran",
                          "timedOut": false,
                          "duration": 0,
                          "state": "passed",
                          "speed": "fast",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "(0, _chai.expect)(depends({\n  preparerType: _constants.PREPARER_TYPES.THIRD_PARTY_VETERAN\n})).to.be.false;\n(0, _chai.expect)(depends({\n  preparerType: _constants.PREPARER_TYPES.THIRD_PARTY_NON_VETERAN\n})).to.be.false;",
                          "err": {},
                          "uuid": "6d8d70bc-63e4-4e84-9c1c-cf5944ea81c0",
                          "parentUUID": "2b37be2d-1c56-4abe-abea-fcca665f19b0",
                          "isHook": false,
                          "skipped": false
                        }
                      ],
                      "suites": [],
                      "passes": [
                        "6bf23d29-710f-472d-96e7-69f79cc27e0b",
                        "6d8d70bc-63e4-4e84-9c1c-cf5944ea81c0"
                      ],
                      "failures": [],
                      "pending": [],
                      "skipped": [],
                      "duration": 0,
                      "root": false,
                      "rootEmpty": false,
                      "_timeout": 10000
                    },
                    {
                      "uuid": "ce1e2a93-9ea4-4a9e-8dcc-8378d6573e32",
                      "title": "medicalTreatmentThirdPartyVeteranPage.depends",
                      "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/20-10207/tests/unit/config/form.unit.spec.js",
                      "file": "/src/applications/simple-forms/20-10207/tests/unit/config/form.unit.spec.js",
                      "beforeHooks": [],
                      "afterHooks": [],
                      "tests": [
                        {
                          "title": "returns FALSE if preparerType is veteran, non-veteran, or third-party-non-veteran",
                          "fullTitle": "formConfig page.depends functions medicalTreatmentChapter page.depends medicalTreatmentThirdPartyVeteranPage.depends returns FALSE if preparerType is veteran, non-veteran, or third-party-non-veteran",
                          "timedOut": false,
                          "duration": 0,
                          "state": "passed",
                          "speed": "fast",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "(0, _chai.expect)(depends({\n  preparerType: _constants.PREPARER_TYPES.VETERAN\n})).to.be.false;\n(0, _chai.expect)(depends({\n  preparerType: _constants.PREPARER_TYPES.NON_VETERAN\n})).to.be.false;\n(0, _chai.expect)(depends({\n  preparerType: _constants.PREPARER_TYPES.THIRD_PARTY_NON_VETERAN\n})).to.be.false;",
                          "err": {},
                          "uuid": "b2086614-8eeb-4556-abbb-a3d672b83f62",
                          "parentUUID": "ce1e2a93-9ea4-4a9e-8dcc-8378d6573e32",
                          "isHook": false,
                          "skipped": false
                        },
                        {
                          "title": "returns TRUE if preparerType is third-party-veteran",
                          "fullTitle": "formConfig page.depends functions medicalTreatmentChapter page.depends medicalTreatmentThirdPartyVeteranPage.depends returns TRUE if preparerType is third-party-veteran",
                          "timedOut": false,
                          "duration": 0,
                          "state": "passed",
                          "speed": "fast",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "(0, _chai.expect)(depends({\n  preparerType: _constants.PREPARER_TYPES.THIRD_PARTY_VETERAN\n})).to.be.true;",
                          "err": {},
                          "uuid": "52372748-9f59-4e44-87d0-75deab881809",
                          "parentUUID": "ce1e2a93-9ea4-4a9e-8dcc-8378d6573e32",
                          "isHook": false,
                          "skipped": false
                        }
                      ],
                      "suites": [],
                      "passes": [
                        "b2086614-8eeb-4556-abbb-a3d672b83f62",
                        "52372748-9f59-4e44-87d0-75deab881809"
                      ],
                      "failures": [],
                      "pending": [],
                      "skipped": [],
                      "duration": 0,
                      "root": false,
                      "rootEmpty": false,
                      "_timeout": 10000
                    },
                    {
                      "uuid": "6710d2c5-c3ac-4e7b-beb9-c00108499832",
                      "title": "medicalTreatmentThirdPartyNonVeteranPage.depends",
                      "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/20-10207/tests/unit/config/form.unit.spec.js",
                      "file": "/src/applications/simple-forms/20-10207/tests/unit/config/form.unit.spec.js",
                      "beforeHooks": [],
                      "afterHooks": [],
                      "tests": [
                        {
                          "title": "returns FALSE if preparerType is veteran, non-veteran, or third-party-veteran",
                          "fullTitle": "formConfig page.depends functions medicalTreatmentChapter page.depends medicalTreatmentThirdPartyNonVeteranPage.depends returns FALSE if preparerType is veteran, non-veteran, or third-party-veteran",
                          "timedOut": false,
                          "duration": 0,
                          "state": "passed",
                          "speed": "fast",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "(0, _chai.expect)(depends({\n  preparerType: _constants.PREPARER_TYPES.VETERAN\n})).to.be.false;\n(0, _chai.expect)(depends({\n  preparerType: _constants.PREPARER_TYPES.NON_VETERAN\n})).to.be.false;\n(0, _chai.expect)(depends({\n  preparerType: _constants.PREPARER_TYPES.THIRD_PARTY_VETERAN\n})).to.be.false;",
                          "err": {},
                          "uuid": "c843ca09-ee82-4639-a2f3-e6f607b6d104",
                          "parentUUID": "6710d2c5-c3ac-4e7b-beb9-c00108499832",
                          "isHook": false,
                          "skipped": false
                        },
                        {
                          "title": "returns TRUE if preparerType is third-party-non-veteran",
                          "fullTitle": "formConfig page.depends functions medicalTreatmentChapter page.depends medicalTreatmentThirdPartyNonVeteranPage.depends returns TRUE if preparerType is third-party-non-veteran",
                          "timedOut": false,
                          "duration": 0,
                          "state": "passed",
                          "speed": "fast",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "(0, _chai.expect)(depends({\n  preparerType: _constants.PREPARER_TYPES.THIRD_PARTY_NON_VETERAN\n})).to.be.true;",
                          "err": {},
                          "uuid": "2d38494a-4afe-4b14-a59f-780d54388036",
                          "parentUUID": "6710d2c5-c3ac-4e7b-beb9-c00108499832",
                          "isHook": false,
                          "skipped": false
                        }
                      ],
                      "suites": [],
                      "passes": [
                        "c843ca09-ee82-4639-a2f3-e6f607b6d104",
                        "2d38494a-4afe-4b14-a59f-780d54388036"
                      ],
                      "failures": [],
                      "pending": [],
                      "skipped": [],
                      "duration": 0,
                      "root": false,
                      "rootEmpty": false,
                      "_timeout": 10000
                    }
                  ],
                  "passes": [],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                }
              ],
              "passes": [],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "54e1ee34-3d28-4546-aa2c-3804236ed7ac",
              "title": "statementOfTruth fullNamePaths",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/20-10207/tests/unit/config/form.unit.spec.js",
              "file": "/src/applications/simple-forms/20-10207/tests/unit/config/form.unit.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "returns veteranFullName path for preparerType veteran",
                  "fullTitle": "formConfig statementOfTruth fullNamePaths returns veteranFullName path for preparerType veteran",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)(pathFn(mockFormDataVet)).to.equal('veteranFullName');",
                  "err": {},
                  "uuid": "9e1ad065-20a0-44bc-8964-791fd53f24cf",
                  "parentUUID": "54e1ee34-3d28-4546-aa2c-3804236ed7ac",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "returns preparerFullName path for preparerType non-veteran",
                  "fullTitle": "formConfig statementOfTruth fullNamePaths returns preparerFullName path for preparerType non-veteran",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)(pathFn(mockFormDataNonVet)).to.equal('nonVeteranFullName');",
                  "err": {},
                  "uuid": "764622ba-f9a2-45e1-80be-256fb68d3862",
                  "parentUUID": "54e1ee34-3d28-4546-aa2c-3804236ed7ac",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "returns thirdPartyFullName path for preparerType third-party-veteran",
                  "fullTitle": "formConfig statementOfTruth fullNamePaths returns thirdPartyFullName path for preparerType third-party-veteran",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)(pathFn(mockFormData3rdPtyVet)).to.equal('thirdPartyFullName');",
                  "err": {},
                  "uuid": "4551281b-ce39-4a76-a8b8-61b55edaf494",
                  "parentUUID": "54e1ee34-3d28-4546-aa2c-3804236ed7ac",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "returns thirdPartyFullName path for preparerType third-party-non-veteran",
                  "fullTitle": "formConfig statementOfTruth fullNamePaths returns thirdPartyFullName path for preparerType third-party-non-veteran",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)(pathFn(mockFormData3rdPtyNonVet)).to.equal('thirdPartyFullName');",
                  "err": {},
                  "uuid": "f7eee7b5-dcc6-477b-8fe3-5dc9c7eda12e",
                  "parentUUID": "54e1ee34-3d28-4546-aa2c-3804236ed7ac",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "9e1ad065-20a0-44bc-8964-791fd53f24cf",
                "764622ba-f9a2-45e1-80be-256fb68d3862",
                "4551281b-ce39-4a76-a8b8-61b55edaf494",
                "f7eee7b5-dcc6-477b-8fe3-5dc9c7eda12e"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            }
          ],
          "passes": [
            "e8b58d4d-e01d-4978-85cd-82504ed1be2c",
            "57db996d-4f74-4ec3-8534-3745f4727364"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "e40b2c10-bb38-4216-8409-dddf77e759a6",
          "title": "transformForSubmit",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/20-10207/tests/unit/config/submit-transformer.unit.spec.js",
          "file": "/src/applications/simple-forms/20-10207/tests/unit/config/submit-transformer.unit.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "26517669-2d89-42bd-85a4-e03782584d5a",
              "title": "name-fields truncation for PDF",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/20-10207/tests/unit/config/submit-transformer.unit.spec.js",
              "file": "/src/applications/simple-forms/20-10207/tests/unit/config/submit-transformer.unit.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "truncates veteran name-fields",
                  "fullTitle": "transformForSubmit name-fields truncation for PDF truncates veteran name-fields",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var data = {\n  data: _objectSpread(_objectSpread({}, _veteran.default.data), {}, {\n    veteranFullName: fullNameLong\n  })\n};\nvar transformedData = _objectSpread(_objectSpread({}, _veteran.default.data), {}, {\n  veteranFullName: fullNameTruncated,\n  formNumber: '20-10207'\n});\ndelete transformedData['view:hasReceivedMedicalTreatment'];\nvar transformedResult = JSON.parse((0, _submitTransformer.default)(_form.default, data));\n(0, _chai.expect)(transformedResult).to.deep.equal(transformedData);",
                  "err": {},
                  "uuid": "52e15317-1114-4f0a-a54d-816621ac768d",
                  "parentUUID": "26517669-2d89-42bd-85a4-e03782584d5a",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "truncates non-veteran name-fields",
                  "fullTitle": "transformForSubmit name-fields truncation for PDF truncates non-veteran name-fields",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var data = {\n  data: _objectSpread(_objectSpread({}, _nonVeteran.default.data), {}, {\n    nonVeteranFullName: fullNameLong\n  })\n};\nvar transformedData = _objectSpread(_objectSpread({}, _nonVeteran.default.data), {}, {\n  nonVeteranFullName: fullNameTruncated,\n  formNumber: '20-10207'\n});\ndelete transformedData['view:hasReceivedMedicalTreatment'];\nvar transformedResult = JSON.parse((0, _submitTransformer.default)(_form.default, data));\n(0, _chai.expect)(transformedResult).to.deep.equal(transformedData);",
                  "err": {},
                  "uuid": "9e829e49-5ffd-4a5c-b093-7bdee4aa6f84",
                  "parentUUID": "26517669-2d89-42bd-85a4-e03782584d5a",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "52e15317-1114-4f0a-a54d-816621ac768d",
                "9e829e49-5ffd-4a5c-b093-7bdee4aa6f84"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 5,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "07d5d909-1faf-4b10-a3d1-1d6eedde159d",
              "title": "third-party data removal",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/20-10207/tests/unit/config/submit-transformer.unit.spec.js",
              "file": "/src/applications/simple-forms/20-10207/tests/unit/config/submit-transformer.unit.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "removes third-party data for veteran preparerType",
                  "fullTitle": "transformForSubmit third-party data removal removes third-party data for veteran preparerType",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var data = {\n  data: _objectSpread(_objectSpread({}, _veteran.default.data), thirdPartyData)\n};\nvar transformedData = _objectSpread(_objectSpread({}, _veteran.default.data), {}, {\n  formNumber: '20-10207'\n});\ndelete transformedData['view:hasReceivedMedicalTreatment'];\nvar transformedResult = JSON.parse((0, _submitTransformer.default)(_form.default, data));\n(0, _chai.expect)(transformedResult).to.deep.equal(transformedData);",
                  "err": {},
                  "uuid": "388cc24e-e471-467e-a290-5855e64371cb",
                  "parentUUID": "07d5d909-1faf-4b10-a3d1-1d6eedde159d",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "removes third-party data for non-veteran preparerType",
                  "fullTitle": "transformForSubmit third-party data removal removes third-party data for non-veteran preparerType",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var data = {\n  data: _objectSpread(_objectSpread({}, _nonVeteran.default.data), thirdPartyData)\n};\nvar transformedData = _objectSpread(_objectSpread({}, _nonVeteran.default.data), {}, {\n  formNumber: '20-10207'\n});\ndelete transformedData['view:hasReceivedMedicalTreatment'];\nvar transformedResult = JSON.parse((0, _submitTransformer.default)(_form.default, data));\n(0, _chai.expect)(transformedResult).to.deep.equal(transformedData);",
                  "err": {},
                  "uuid": "536c74a7-b7cb-4572-9815-8505a3114d17",
                  "parentUUID": "07d5d909-1faf-4b10-a3d1-1d6eedde159d",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "retains third-party data for third-party-veteran preparerType",
                  "fullTitle": "transformForSubmit third-party data removal retains third-party data for third-party-veteran preparerType",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var transformedData = _objectSpread(_objectSpread({}, _thirdPartyVeteran.default.data), {}, {\n  formNumber: '20-10207'\n});\ndelete transformedData['view:hasReceivedMedicalTreatment'];\nvar transformedResult = JSON.parse((0, _submitTransformer.default)(_form.default, _thirdPartyVeteran.default));\n(0, _chai.expect)(transformedResult).to.deep.equal(transformedData);",
                  "err": {},
                  "uuid": "b1491c9b-c16a-453f-91d1-f5ce2e82ed83",
                  "parentUUID": "07d5d909-1faf-4b10-a3d1-1d6eedde159d",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "retains third-party data for third-party-non-veteran preparerType",
                  "fullTitle": "transformForSubmit third-party data removal retains third-party data for third-party-non-veteran preparerType",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var transformedData = _objectSpread(_objectSpread({}, _thirdPartyNonVeteran.default.data), {}, {\n  formNumber: '20-10207'\n});\ndelete transformedData['view:hasReceivedMedicalTreatment'];\nvar transformedResult = JSON.parse((0, _submitTransformer.default)(_form.default, _thirdPartyNonVeteran.default));\n(0, _chai.expect)(transformedResult).to.deep.equal(transformedData);",
                  "err": {},
                  "uuid": "a1b1fd09-c2cb-4fed-b04c-937f4a72788d",
                  "parentUUID": "07d5d909-1faf-4b10-a3d1-1d6eedde159d",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "388cc24e-e471-467e-a290-5855e64371cb",
                "536c74a7-b7cb-4572-9815-8505a3114d17",
                "b1491c9b-c16a-453f-91d1-f5ce2e82ed83",
                "a1b1fd09-c2cb-4fed-b04c-937f4a72788d"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 9,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "f95003ae-fc60-46af-9297-22274059c58d",
              "title": "address-fields truncation for PDF",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/20-10207/tests/unit/config/submit-transformer.unit.spec.js",
              "file": "/src/applications/simple-forms/20-10207/tests/unit/config/submit-transformer.unit.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "truncates veteran address-fields",
                  "fullTitle": "transformForSubmit address-fields truncation for PDF truncates veteran address-fields",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var data = {\n  data: _objectSpread(_objectSpread({}, _veteran.default.data), {}, {\n    veteranMailingAddress: addressLong\n  })\n};\nvar transformedData = _objectSpread(_objectSpread({}, _veteran.default.data), {}, {\n  veteranMailingAddress: addressTruncated,\n  formNumber: '20-10207'\n});\ndelete transformedData['view:hasReceivedMedicalTreatment'];\nvar transformedResult = JSON.parse((0, _submitTransformer.default)(_form.default, data));\n(0, _chai.expect)(transformedResult).to.deep.equal(transformedData);",
                  "err": {},
                  "uuid": "f41cc324-6330-4547-8fbd-f0511e5b6360",
                  "parentUUID": "f95003ae-fc60-46af-9297-22274059c58d",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "truncates non-veteran address-fields",
                  "fullTitle": "transformForSubmit address-fields truncation for PDF truncates non-veteran address-fields",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var data = {\n  data: _objectSpread(_objectSpread({}, _nonVeteran.default.data), {}, {\n    nonVeteranMailingAddress: addressLong\n  })\n};\nvar transformedData = _objectSpread(_objectSpread({}, _nonVeteran.default.data), {}, {\n  nonVeteranMailingAddress: addressTruncated,\n  formNumber: '20-10207'\n});\ndelete transformedData['view:hasReceivedMedicalTreatment'];\nvar transformedResult = JSON.parse((0, _submitTransformer.default)(_form.default, data));\n(0, _chai.expect)(transformedResult).to.deep.equal(transformedData);",
                  "err": {},
                  "uuid": "4fb73115-254d-4368-9216-f0affa271147",
                  "parentUUID": "f95003ae-fc60-46af-9297-22274059c58d",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "f41cc324-6330-4547-8fbd-f0511e5b6360",
                "4fb73115-254d-4368-9216-f0affa271147"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 3,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "64b5f6f5-96cf-4d82-a612-85abbf9feed8",
              "title": "otherHousingRisks removal",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/20-10207/tests/unit/config/submit-transformer.unit.spec.js",
              "file": "/src/applications/simple-forms/20-10207/tests/unit/config/submit-transformer.unit.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "removes otherHousingRisks data when livingSituation.OTHER_RISK is not selected",
                  "fullTitle": "transformForSubmit otherHousingRisks removal removes otherHousingRisks data when livingSituation.OTHER_RISK is not selected",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var data = {\n  data: _objectSpread(_objectSpread({}, _veteran.default.data), {}, {\n    otherHousingRisks: 'Other housing risks data'\n  })\n};\nvar transformedData = _objectSpread(_objectSpread({}, _veteran.default.data), {}, {\n  formNumber: '20-10207'\n});\ndelete transformedData['view:hasReceivedMedicalTreatment'];\nvar transformedResult = JSON.parse((0, _submitTransformer.default)(_form.default, data));\n(0, _chai.expect)(transformedResult).to.deep.equal(transformedData);",
                  "err": {},
                  "uuid": "988f8ba8-564e-425b-a2ba-19d6c9f0a6c5",
                  "parentUUID": "64b5f6f5-96cf-4d82-a612-85abbf9feed8",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "988f8ba8-564e-425b-a2ba-19d6c9f0a6c5"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "fcdf9dda-d156-4a69-a2cf-32db576a0c96",
              "title": "unneeded other-reasons evidence removal",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/20-10207/tests/unit/config/submit-transformer.unit.spec.js",
              "file": "/src/applications/simple-forms/20-10207/tests/unit/config/submit-transformer.unit.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "removes unneeded evidence data",
                  "fullTitle": "transformForSubmit unneeded other-reasons evidence removal removes unneeded evidence data",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var otherRiskVet = _veteran.default;\notherRiskVet.data.livingSituation = {\n  OTHER_RISK: true\n};\ndelete otherRiskVet.data.veteranMailingAddress;\nvar otherReasonsOver85 = {\n  ALS: false,\n  FINANCIAL_HARDSHIP: false,\n  FORMER_POW: false,\n  MEDAL_AWARD: false,\n  OVER_85: true,\n  TERMINAL_ILLNESS: false,\n  VSI_SI: false\n};\nvar data = {\n  data: _objectSpread(_objectSpread({}, otherRiskVet.data), {}, {\n    otherReasons: otherReasonsOver85\n  }, unneededEvidence)\n};\nvar transformedData = _objectSpread(_objectSpread({}, otherRiskVet.data), {}, {\n  otherReasons: otherReasonsOver85,\n  formNumber: '20-10207'\n});\ndelete transformedData['view:hasReceivedMedicalTreatment'];\nvar transformedResult = JSON.parse((0, _submitTransformer.default)(_form.default, data));\n(0, _chai.expect)(transformedResult).to.deep.equal(transformedData);",
                  "err": {},
                  "uuid": "99c20dc4-b559-4626-a8bc-4bb5ca780c52",
                  "parentUUID": "fcdf9dda-d156-4a69-a2cf-32db576a0c96",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "99c20dc4-b559-4626-a8bc-4bb5ca780c52"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "38c6eb4c-03fd-40bf-b72b-1574ba214935",
          "title": "ConfirmationPage",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/20-10207/tests/unit/containers/ConfirmationPage.unit.spec.jsx",
          "file": "/src/applications/simple-forms/20-10207/tests/unit/containers/ConfirmationPage.unit.spec.jsx",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"ConfirmationPage\"",
              "fullTitle": "ConfirmationPage \"before each\" hook in \"ConfirmationPage\"",
              "timedOut": false,
              "duration": 12,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "wrapper = mountPage();",
              "err": {},
              "uuid": "ff3351c5-466e-4c54-9f99-44f44c6fd44d",
              "parentUUID": "38c6eb4c-03fd-40bf-b72b-1574ba214935",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after each\" hook in \"ConfirmationPage\"",
              "fullTitle": "ConfirmationPage \"after each\" hook in \"ConfirmationPage\"",
              "timedOut": false,
              "duration": 2,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "if (wrapper) {\n  wrapper.unmount();\n}\n(0, _react2.cleanup)();",
              "err": {},
              "uuid": "e09e1bba-d9d0-4713-9152-cda493fe1a19",
              "parentUUID": "38c6eb4c-03fd-40bf-b72b-1574ba214935",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "passes the correct props to ConfirmationPageView",
              "fullTitle": "ConfirmationPage passes the correct props to ConfirmationPageView",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var confirmationViewProps = wrapper.find('ConfirmationView').props();\n(0, _chai.expect)(confirmationViewProps.submitDate).to.equal(submitDate);\n(0, _chai.expect)(confirmationViewProps.confirmationNumber).to.equal('1234567890');",
              "err": {},
              "uuid": "f93ea75f-b3fe-42ee-8788-de44d9522463",
              "parentUUID": "38c6eb4c-03fd-40bf-b72b-1574ba214935",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should select form from state when state.form is defined",
              "fullTitle": "ConfirmationPage should select form from state when state.form is defined",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, _chai.expect)(wrapper.text()).to.include((0, _dateFns.format)(submitDate, 'MMMM d, yyyy'));\n(0, _chai.expect)(wrapper.text()).to.include('1234');",
              "err": {},
              "uuid": "ef373565-5588-4c5e-918e-150149d6e66d",
              "parentUUID": "38c6eb4c-03fd-40bf-b72b-1574ba214935",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should throw error when state.form is undefined",
              "fullTitle": "ConfirmationPage should throw error when state.form is undefined",
              "timedOut": false,
              "duration": 6,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var errorWrapper;\n(0, _chai.expect)(function () {\n  errorWrapper = mountPage({});\n}).to.throw();\nif (errorWrapper) {\n  errorWrapper.unmount();\n}",
              "err": {},
              "uuid": "83f8072b-269c-430b-bf1d-d1ca0689761a",
              "parentUUID": "38c6eb4c-03fd-40bf-b72b-1574ba214935",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f93ea75f-b3fe-42ee-8788-de44d9522463",
            "ef373565-5588-4c5e-918e-150149d6e66d",
            "83f8072b-269c-430b-bf1d-d1ca0689761a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 9,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "67989aa7-3f18-4039-b74d-e559046b33f8",
          "title": "IntroductionPage",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/20-10207/tests/unit/containers/IntroductionPage.unit.spec.jsx",
          "file": "/src/applications/simple-forms/20-10207/tests/unit/containers/IntroductionPage.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "renders successfully",
              "fullTitle": "IntroductionPage renders successfully",
              "timedOut": false,
              "duration": 14,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var mockStore = generateStore();\nvar _render = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_IntroductionPage.default, props))),\n  container = _render.container;\n(0, _chai.expect)(container).to.exist;",
              "err": {},
              "uuid": "1f9572be-cc5b-49b6-8307-c5babd66955b",
              "parentUUID": "67989aa7-3f18-4039-b74d-e559046b33f8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "renders the correct title and subtitle",
              "fullTitle": "IntroductionPage renders the correct title and subtitle",
              "timedOut": false,
              "duration": 16,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var mockStore = generateStore();\nvar _render2 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_IntroductionPage.default, props))),\n  getByText = _render2.getByText;\n(0, _chai.expect)(getByText(_constants.TITLE)).to.exist;\n(0, _chai.expect)(getByText(_constants.SUBTITLE)).to.exist;",
              "err": {},
              "uuid": "63bcb483-ab8e-45b0-9eea-729b536d5c2f",
              "parentUUID": "67989aa7-3f18-4039-b74d-e559046b33f8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "renders <LOA3 content if user is logged in and not id-verified",
              "fullTitle": "IntroductionPage renders <LOA3 content if user is logged in and not id-verified",
              "timedOut": false,
              "duration": 19,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var mockStore = generateStore({\n  loggedIn: true,\n  loaCurrent: 1\n});\nvar _render3 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_IntroductionPage.default, props))),\n  container = _render3.container;\nvar userNotVerifiedDiv = container.querySelector('[data-testid=verifyIdAlert]');\nvar sipAlert = container.querySelector('va-alert[status=info]');\nvar verifyAlert = container.querySelector('va-alert-sign-in');\n(0, _chai.expect)(userNotVerifiedDiv).to.exist;\n(0, _chai.expect)(verifyAlert).to.exist;\n(0, _chai.expect)(sipAlert).to.not.exist;",
              "err": {},
              "uuid": "20550761-0ed5-4f4a-9e37-58ee14634df6",
              "parentUUID": "67989aa7-3f18-4039-b74d-e559046b33f8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "renders LOA3 content if user is logged-in and id-verified",
              "fullTitle": "IntroductionPage renders LOA3 content if user is logged-in and id-verified",
              "timedOut": false,
              "duration": 20,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var mockStore = generateStore({\n  loggedIn: true\n});\nvar _render4 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_IntroductionPage.default, props))),\n  container = _render4.container;\nvar userNotVerifiedDiv = container.querySelector('[data-testid=verifyIdAlert]');\nvar sipAlert = container.querySelector('va-alert[status=info]');\n(0, _chai.expect)(userNotVerifiedDiv).to.not.exist;\n(0, _chai.expect)(sipAlert).to.exist;",
              "err": {},
              "uuid": "9543c308-11d6-42f8-a668-b41b7d9d57bf",
              "parentUUID": "67989aa7-3f18-4039-b74d-e559046b33f8",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "1f9572be-cc5b-49b6-8307-c5babd66955b",
            "63bcb483-ab8e-45b0-9eea-729b536d5c2f",
            "20550761-0ed5-4f4a-9e37-58ee14634df6",
            "9543c308-11d6-42f8-a668-b41b7d9d57bf"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 69,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "fb080cc3-4151-4fee-8675-03335523885c",
          "title": "getMockData",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/20-10207/tests/unit/helpers.unit.spec.js",
          "file": "/src/applications/simple-forms/20-10207/tests/unit/helpers.unit.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should return mockData if mockData is truthy and isLocalhost returns true and window.Cypress is falsy",
              "fullTitle": "getMockData should return mockData if mockData is truthy and isLocalhost returns true and window.Cypress is falsy",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var mockData = {\n  key: 'value'\n};\nvar isLocalhost = function isLocalhost() {\n  return true;\n};\nglobal.window = {\n  Cypress: undefined\n};\nvar result = (0, _helpers.getMockData)(mockData, isLocalhost);\n(0, _chai.expect)(result).to.deep.equal(mockData);",
              "err": {},
              "uuid": "be0954c6-9cb2-4ee6-8d84-23b031ad1551",
              "parentUUID": "fb080cc3-4151-4fee-8675-03335523885c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return undefined if mockData is falsy",
              "fullTitle": "getMockData should return undefined if mockData is falsy",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var mockData = null;\nvar isLocalhost = function isLocalhost() {\n  return true;\n};\nglobal.window = {\n  Cypress: undefined\n};\nvar result = (0, _helpers.getMockData)(mockData, isLocalhost);\n(0, _chai.expect)(result).to.be.undefined;",
              "err": {},
              "uuid": "c49c91ce-bce5-46ad-b4dc-2db6929f075b",
              "parentUUID": "fb080cc3-4151-4fee-8675-03335523885c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return undefined if isLocalhost returns false",
              "fullTitle": "getMockData should return undefined if isLocalhost returns false",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var mockData = {\n  key: 'value'\n};\nvar isLocalhost = function isLocalhost() {\n  return false;\n};\nglobal.window = {\n  Cypress: undefined\n};\nvar result = (0, _helpers.getMockData)(mockData, isLocalhost);\n(0, _chai.expect)(result).to.be.undefined;",
              "err": {},
              "uuid": "f0d7856e-5726-43cd-94d2-068b4ebddbc4",
              "parentUUID": "fb080cc3-4151-4fee-8675-03335523885c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return undefined if window.Cypress is truthy",
              "fullTitle": "getMockData should return undefined if window.Cypress is truthy",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var mockData = {\n  key: 'value'\n};\nvar isLocalhost = function isLocalhost() {\n  return true;\n};\nglobal.window = {\n  Cypress: 'exists'\n};\nvar result = (0, _helpers.getMockData)(mockData, isLocalhost);\n(0, _chai.expect)(result).to.be.undefined;",
              "err": {},
              "uuid": "d056bb8d-7c6c-49c9-a971-10ae3ca39cdb",
              "parentUUID": "fb080cc3-4151-4fee-8675-03335523885c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "be0954c6-9cb2-4ee6-8d84-23b031ad1551",
            "c49c91ce-bce5-46ad-b4dc-2db6929f075b",
            "f0d7856e-5726-43cd-94d2-068b4ebddbc4",
            "d056bb8d-7c6c-49c9-a971-10ae3ca39cdb"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "50445ee4-57e3-434b-9a68-22764056d281",
          "title": "getPreparerString()",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/20-10207/tests/unit/helpers.unit.spec.js",
          "file": "/src/applications/simple-forms/20-10207/tests/unit/helpers.unit.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "returns correct string for preparerType",
              "fullTitle": "getPreparerString() returns correct string for preparerType",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, _chai.expect)((0, _helpers.getPreparerString)(_constants.PREPARER_TYPES.THIRD_PARTY_VETERAN)).to.equal('Veteran’s');\n(0, _chai.expect)((0, _helpers.getPreparerString)(_constants.PREPARER_TYPES.THIRD_PARTY_NON_VETERAN)).to.equal('Claimant’s');\n(0, _chai.expect)((0, _helpers.getPreparerString)(_constants.PREPARER_TYPES.VETERAN)).to.equal('Your');\n(0, _chai.expect)((0, _helpers.getPreparerString)(_constants.PREPARER_TYPES.NON_VETERAN)).to.equal('Your');",
              "err": {},
              "uuid": "5118ba86-d0a6-4933-a011-7815054e7309",
              "parentUUID": "50445ee4-57e3-434b-9a68-22764056d281",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "5118ba86-d0a6-4933-a011-7815054e7309"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "b571d3f9-edfb-44e4-995b-2a49c66c7bb9",
          "title": "getPersonalInformationChapterTitle()",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/20-10207/tests/unit/helpers.unit.spec.js",
          "file": "/src/applications/simple-forms/20-10207/tests/unit/helpers.unit.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "returns correct chapter-title for preparerType",
              "fullTitle": "getPersonalInformationChapterTitle() returns correct chapter-title for preparerType",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, _chai.expect)((0, _helpers.getPersonalInformationChapterTitle)({\n  preparerType: _constants.PREPARER_TYPES.VETERAN\n})).to.equal(\"Your \".concat(titleEnding));\n(0, _chai.expect)((0, _helpers.getPersonalInformationChapterTitle)({\n  preparerType: _constants.PREPARER_TYPES.THIRD_PARTY_VETERAN\n})).to.equal(\"Veteran\\u2019s \".concat(titleEnding));\n(0, _chai.expect)((0, _helpers.getPersonalInformationChapterTitle)({\n  preparerType: _constants.PREPARER_TYPES.THIRD_PARTY_NON_VETERAN\n})).to.equal(\"Claimant\\u2019s \".concat(titleEnding));",
              "err": {},
              "uuid": "fde7106d-00d4-40c0-a0b6-126cf75a005d",
              "parentUUID": "b571d3f9-edfb-44e4-995b-2a49c66c7bb9",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "fde7106d-00d4-40c0-a0b6-126cf75a005d"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "9d219b3b-3bde-474a-9b04-1bb4eeeb251d",
          "title": "getNameAndDobPageTitle()",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/20-10207/tests/unit/helpers.unit.spec.js",
          "file": "/src/applications/simple-forms/20-10207/tests/unit/helpers.unit.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "returns correct page-title for preparerType",
              "fullTitle": "getNameAndDobPageTitle() returns correct page-title for preparerType",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, _chai.expect)((0, _helpers.getNameAndDobPageTitle)({\n  preparerType: _constants.PREPARER_TYPES.VETERAN\n})).to.equal(\"Your \".concat(titleEnding));\n(0, _chai.expect)((0, _helpers.getNameAndDobPageTitle)({\n  preparerType: _constants.PREPARER_TYPES.NON_VETERAN\n})).to.equal(\"Your \".concat(titleEnding));\n(0, _chai.expect)((0, _helpers.getNameAndDobPageTitle)({\n  preparerType: _constants.PREPARER_TYPES.THIRD_PARTY_VETERAN\n})).to.equal(\"Veteran\\u2019s \".concat(titleEnding));\n(0, _chai.expect)((0, _helpers.getNameAndDobPageTitle)({\n  preparerType: _constants.PREPARER_TYPES.THIRD_PARTY_NON_VETERAN\n})).to.equal(\"Claimant\\u2019s \".concat(titleEnding));",
              "err": {},
              "uuid": "3b28693f-1c79-43b0-a82b-2e5c14d21a18",
              "parentUUID": "9d219b3b-3bde-474a-9b04-1bb4eeeb251d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "3b28693f-1c79-43b0-a82b-2e5c14d21a18"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "da83046f-5f36-4a3a-acb4-6127aede6273",
          "title": "getNameAndDobPageDescription()",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/20-10207/tests/unit/helpers.unit.spec.js",
          "file": "/src/applications/simple-forms/20-10207/tests/unit/helpers.unit.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "returns correct page-description for preparerType",
              "fullTitle": "getNameAndDobPageDescription() returns correct page-description for preparerType",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, _chai.expect)((0, _helpers.getNameAndDobPageDescription)({\n  preparerType: _constants.PREPARER_TYPES.VETERAN\n})).to.equal('Please provide your information as the Veteran.');\n(0, _chai.expect)((0, _helpers.getNameAndDobPageDescription)({\n  preparerType: _constants.PREPARER_TYPES.NON_VETERAN\n})).to.equal('Please provide your information as the person with the claim.');\n(0, _chai.expect)((0, _helpers.getNameAndDobPageDescription)({\n  preparerType: _constants.PREPARER_TYPES.THIRD_PARTY_VETERAN\n})).to.equal('Please provide the Veteran’s information.');\n(0, _chai.expect)((0, _helpers.getNameAndDobPageDescription)({\n  preparerType: _constants.PREPARER_TYPES.THIRD_PARTY_NON_VETERAN\n})).to.equal('Please provide information on the person with the claim (also called the claimant).');",
              "err": {},
              "uuid": "2a5f7231-1b59-4aaa-a540-628cb6a36127",
              "parentUUID": "da83046f-5f36-4a3a-acb4-6127aede6273",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "2a5f7231-1b59-4aaa-a540-628cb6a36127"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "9011864f-8457-40b6-851f-bb15b3b5c14b",
          "title": "getIdentityInfoPageTitle()",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/20-10207/tests/unit/helpers.unit.spec.js",
          "file": "/src/applications/simple-forms/20-10207/tests/unit/helpers.unit.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "returns correct page-title for preparerType",
              "fullTitle": "getIdentityInfoPageTitle() returns correct page-title for preparerType",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, _chai.expect)((0, _helpers.getIdentityInfoPageTitle)({\n  preparerType: _constants.PREPARER_TYPES.VETERAN\n})).to.equal(\"Your \".concat(titleEnding));\n(0, _chai.expect)((0, _helpers.getIdentityInfoPageTitle)({\n  preparerType: _constants.PREPARER_TYPES.NON_VETERAN\n})).to.equal(\"Your \".concat(titleEnding));\n(0, _chai.expect)((0, _helpers.getIdentityInfoPageTitle)({\n  preparerType: _constants.PREPARER_TYPES.THIRD_PARTY_VETERAN\n})).to.equal(\"Veteran\\u2019s \".concat(titleEnding));\n(0, _chai.expect)((0, _helpers.getIdentityInfoPageTitle)({\n  preparerType: _constants.PREPARER_TYPES.THIRD_PARTY_NON_VETERAN\n})).to.equal(\"Claimant\\u2019s \".concat(titleEnding));",
              "err": {},
              "uuid": "c87d39a2-940f-40f8-9d08-3e11251c5246",
              "parentUUID": "9011864f-8457-40b6-851f-bb15b3b5c14b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "c87d39a2-940f-40f8-9d08-3e11251c5246"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "02ad3bfb-36e3-403e-890a-9ac3510c820a",
          "title": "getVeteranIdentityInfoPageTitle()",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/20-10207/tests/unit/helpers.unit.spec.js",
          "file": "/src/applications/simple-forms/20-10207/tests/unit/helpers.unit.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "returns correct page-title for preparerType",
              "fullTitle": "getVeteranIdentityInfoPageTitle() returns correct page-title for preparerType",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, _chai.expect)((0, _helpers.getVeteranIdentityInfoPageTitle)({\n  preparerType: _constants.PREPARER_TYPES.VETERAN\n})).to.equal(\"Your \".concat(titleEnding));\n(0, _chai.expect)((0, _helpers.getVeteranIdentityInfoPageTitle)({\n  preparerType: _constants.PREPARER_TYPES.NON_VETERAN\n})).to.equal(\"Veteran\\u2019s \".concat(titleEnding));\n(0, _chai.expect)((0, _helpers.getVeteranIdentityInfoPageTitle)({\n  preparerType: _constants.PREPARER_TYPES.THIRD_PARTY_VETERAN\n})).to.equal(\"Veteran\\u2019s \".concat(titleEnding));\n(0, _chai.expect)((0, _helpers.getVeteranIdentityInfoPageTitle)({\n  preparerType: _constants.PREPARER_TYPES.THIRD_PARTY_NON_VETERAN\n})).to.equal(\"Veteran\\u2019s \".concat(titleEnding));",
              "err": {},
              "uuid": "3b42888e-f11a-4e4d-beaf-1a4e752c98af",
              "parentUUID": "02ad3bfb-36e3-403e-890a-9ac3510c820a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "3b42888e-f11a-4e4d-beaf-1a4e752c98af"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "efaf061b-0bfb-4786-ba97-a50d48e3378b",
          "title": "getLivingSituationChapterTitle()",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/20-10207/tests/unit/helpers.unit.spec.js",
          "file": "/src/applications/simple-forms/20-10207/tests/unit/helpers.unit.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "returns correct chapter-title for preparerType",
              "fullTitle": "getLivingSituationChapterTitle() returns correct chapter-title for preparerType",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, _chai.expect)((0, _helpers.getLivingSituationChapterTitle)({\n  preparerType: _constants.PREPARER_TYPES.VETERAN\n})).to.equal(\"Your \".concat(titleEnding));\n(0, _chai.expect)((0, _helpers.getLivingSituationChapterTitle)({\n  preparerType: _constants.PREPARER_TYPES.NON_VETERAN\n})).to.equal(\"Your \".concat(titleEnding));\n(0, _chai.expect)((0, _helpers.getLivingSituationChapterTitle)({\n  preparerType: _constants.PREPARER_TYPES.THIRD_PARTY_VETERAN\n})).to.equal(\"Veteran\\u2019s \".concat(titleEnding));\n(0, _chai.expect)((0, _helpers.getLivingSituationChapterTitle)({\n  preparerType: _constants.PREPARER_TYPES.THIRD_PARTY_NON_VETERAN\n})).to.equal(\"Claimant\\u2019s \".concat(titleEnding));",
              "err": {},
              "uuid": "f7b25798-c0fa-4549-aa8b-957def7e6d2c",
              "parentUUID": "efaf061b-0bfb-4786-ba97-a50d48e3378b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f7b25798-c0fa-4549-aa8b-957def7e6d2c"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "32ad3ec5-3ecb-427e-97db-bf68af3d7461",
          "title": "validateLivingSituation()",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/20-10207/tests/unit/helpers.unit.spec.js",
          "file": "/src/applications/simple-forms/20-10207/tests/unit/helpers.unit.spec.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"validateLivingSituation()\"",
              "fullTitle": "validateLivingSituation() \"before each\" hook in \"validateLivingSituation()\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "errors = {\n  livingSituation: {\n    addError: _sinon.default.spy()\n  }\n};",
              "err": {},
              "uuid": "2798361b-6000-498f-bd17-b66f65895a7d",
              "parentUUID": "32ad3ec5-3ecb-427e-97db-bf68af3d7461",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": "adds an error if \"NONE\" is selected with other options",
              "fullTitle": "validateLivingSituation() adds an error if \"NONE\" is selected with other options",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var livingSituation = {\n  NONE: true,\n  OTHER: true\n};\nvar fieldsVet = {\n  livingSituation: livingSituation,\n  preparerType: _constants.PREPARER_TYPES.VETERAN\n};\nvar fieldsNonVet = {\n  livingSituation: livingSituation,\n  preparerType: _constants.PREPARER_TYPES.NON_VETERAN\n};\nvar fields3rdPtyVet = {\n  livingSituation: livingSituation,\n  preparerType: _constants.PREPARER_TYPES.THIRD_PARTY_VETERAN\n};\nvar fields3rdPtyNonVet = {\n  livingSituation: livingSituation,\n  preparerType: _constants.PREPARER_TYPES.THIRD_PARTY_NON_VETERAN\n};\n(0, _helpers.validateLivingSituation)(errors, fieldsVet);\n(0, _chai.expect)(errors.livingSituation.addError.calledOnce).to.be.true;\n(0, _chai.expect)(errors.livingSituation.addError.calledWith('If none of these situations apply to you, unselect the other options you selected')).to.be.true;\nerrors.livingSituation.addError.reset();\n(0, _helpers.validateLivingSituation)(errors, fieldsNonVet);\n(0, _chai.expect)(errors.livingSituation.addError.calledOnce).to.be.true;\n(0, _chai.expect)(errors.livingSituation.addError.calledWith('If none of these situations apply to you, unselect the other options you selected')).to.be.true;\nerrors.livingSituation.addError.reset();\n(0, _helpers.validateLivingSituation)(errors, fields3rdPtyVet);\n(0, _chai.expect)(errors.livingSituation.addError.calledOnce).to.be.true;\n(0, _chai.expect)(errors.livingSituation.addError.calledWith('If none of these situations apply to the Veteran, unselect the other options you selected')).to.be.true;\nerrors.livingSituation.addError.reset();\n(0, _helpers.validateLivingSituation)(errors, fields3rdPtyNonVet);\n(0, _chai.expect)(errors.livingSituation.addError.calledOnce).to.be.true;\n(0, _chai.expect)(errors.livingSituation.addError.calledWith('If none of these situations apply to the Claimant, unselect the other options you selected')).to.be.true;\nerrors.livingSituation.addError.reset();",
              "err": {},
              "uuid": "be92b1f1-6a2d-4acc-8281-c03948e58fdc",
              "parentUUID": "32ad3ec5-3ecb-427e-97db-bf68af3d7461",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "doesn’t add an error if \"NONE\" is the only option selected",
              "fullTitle": "validateLivingSituation() doesn’t add an error if \"NONE\" is the only option selected",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var fields = {\n  livingSituation: {\n    NONE: true\n  },\n  preparerType: _constants.PREPARER_TYPES.THIRD_PARTY_NON_VETERAN\n};\n(0, _helpers.validateLivingSituation)(errors, fields);\n(0, _chai.expect)(errors.livingSituation.addError.called).to.be.false;",
              "err": {},
              "uuid": "66b69fcb-f777-466e-842f-d597e8b49c10",
              "parentUUID": "32ad3ec5-3ecb-427e-97db-bf68af3d7461",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "doesn’t add an error if \"NONE\" is not selected",
              "fullTitle": "validateLivingSituation() doesn’t add an error if \"NONE\" is not selected",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var fields = {\n  livingSituation: {\n    OTHER: true\n  },\n  preparerType: _constants.PREPARER_TYPES.THIRD_PARTY_NON_VETERAN\n};\n(0, _helpers.validateLivingSituation)(errors, fields);\n(0, _chai.expect)(errors.livingSituation.addError.called).to.be.false;",
              "err": {},
              "uuid": "6e5a4e5f-29ce-424b-99eb-c90802b8bfe1",
              "parentUUID": "32ad3ec5-3ecb-427e-97db-bf68af3d7461",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "be92b1f1-6a2d-4acc-8281-c03948e58fdc",
            "66b69fcb-f777-466e-842f-d597e8b49c10",
            "6e5a4e5f-29ce-424b-99eb-c90802b8bfe1"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "0229c3a6-6fd7-4029-ab54-23d7fbcd2416",
          "title": "getContactInfoChapterTitle()",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/20-10207/tests/unit/helpers.unit.spec.js",
          "file": "/src/applications/simple-forms/20-10207/tests/unit/helpers.unit.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "returns correct chapter-title for preparerType",
              "fullTitle": "getContactInfoChapterTitle() returns correct chapter-title for preparerType",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, _chai.expect)((0, _helpers.getContactInfoChapterTitle)({\n  preparerType: _constants.PREPARER_TYPES.VETERAN\n})).to.equal(\"Your \".concat(titleEnding));\n(0, _chai.expect)((0, _helpers.getContactInfoChapterTitle)({\n  preparerType: _constants.PREPARER_TYPES.NON_VETERAN\n})).to.equal(\"Your \".concat(titleEnding));\n(0, _chai.expect)((0, _helpers.getContactInfoChapterTitle)({\n  preparerType: _constants.PREPARER_TYPES.THIRD_PARTY_VETERAN\n})).to.equal(\"Veteran\\u2019s \".concat(titleEnding));\n(0, _chai.expect)((0, _helpers.getContactInfoChapterTitle)({\n  preparerType: _constants.PREPARER_TYPES.THIRD_PARTY_NON_VETERAN\n})).to.equal(\"Claimant\\u2019s \".concat(titleEnding));",
              "err": {},
              "uuid": "b4d36caf-4770-47c0-8da7-b1131c2eb71a",
              "parentUUID": "0229c3a6-6fd7-4029-ab54-23d7fbcd2416",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "b4d36caf-4770-47c0-8da7-b1131c2eb71a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "8462dd83-360e-4f99-b66b-a6c5bdcfe359",
          "title": "getMailindAddressPageTitle()",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/20-10207/tests/unit/helpers.unit.spec.js",
          "file": "/src/applications/simple-forms/20-10207/tests/unit/helpers.unit.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "returns correct page-title for preparerType",
              "fullTitle": "getMailindAddressPageTitle() returns correct page-title for preparerType",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, _chai.expect)((0, _helpers.getMailindAddressPageTitle)({\n  preparerType: _constants.PREPARER_TYPES.VETERAN\n})).to.equal(\"Your \".concat(titleEnding));\n(0, _chai.expect)((0, _helpers.getMailindAddressPageTitle)({\n  preparerType: _constants.PREPARER_TYPES.NON_VETERAN\n})).to.equal(\"Your \".concat(titleEnding));\n(0, _chai.expect)((0, _helpers.getMailindAddressPageTitle)({\n  preparerType: _constants.PREPARER_TYPES.THIRD_PARTY_VETERAN\n})).to.equal(\"Veteran\\u2019s \".concat(titleEnding));\n(0, _chai.expect)((0, _helpers.getMailindAddressPageTitle)({\n  preparerType: _constants.PREPARER_TYPES.THIRD_PARTY_NON_VETERAN\n})).to.equal(\"Claimant\\u2019s \".concat(titleEnding));",
              "err": {},
              "uuid": "1a168cdf-cb09-426a-bb9d-7664f3abac60",
              "parentUUID": "8462dd83-360e-4f99-b66b-a6c5bdcfe359",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "1a168cdf-cb09-426a-bb9d-7664f3abac60"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "4d047f72-9379-43a8-b12b-78543a86a335",
          "title": "getPhoneAndEmailPageTitle()",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/20-10207/tests/unit/helpers.unit.spec.js",
          "file": "/src/applications/simple-forms/20-10207/tests/unit/helpers.unit.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "returns correct page-title for preparerType",
              "fullTitle": "getPhoneAndEmailPageTitle() returns correct page-title for preparerType",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, _chai.expect)((0, _helpers.getPhoneAndEmailPageTitle)({\n  preparerType: _constants.PREPARER_TYPES.VETERAN\n})).to.equal(\"Your \".concat(titleEnding));\n(0, _chai.expect)((0, _helpers.getPhoneAndEmailPageTitle)({\n  preparerType: _constants.PREPARER_TYPES.NON_VETERAN\n})).to.equal(\"Your \".concat(titleEnding));\n(0, _chai.expect)((0, _helpers.getPhoneAndEmailPageTitle)({\n  preparerType: _constants.PREPARER_TYPES.THIRD_PARTY_VETERAN\n})).to.equal(\"Veteran\\u2019s \".concat(titleEnding));\n(0, _chai.expect)((0, _helpers.getPhoneAndEmailPageTitle)({\n  preparerType: _constants.PREPARER_TYPES.THIRD_PARTY_NON_VETERAN\n})).to.equal(\"Claimant\\u2019s \".concat(titleEnding));",
              "err": {},
              "uuid": "592954cf-b5f7-4dc8-b733-3b4b36ec4bda",
              "parentUUID": "4d047f72-9379-43a8-b12b-78543a86a335",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "592954cf-b5f7-4dc8-b733-3b4b36ec4bda"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "3291085e-58af-4266-b09c-2ef29e322979",
          "title": "getPhoneAndEmailPageEmailHint",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/20-10207/tests/unit/helpers.unit.spec.js",
          "file": "/src/applications/simple-forms/20-10207/tests/unit/helpers.unit.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "returns correct hint for preparerType",
              "fullTitle": "getPhoneAndEmailPageEmailHint returns correct hint for preparerType",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, _chai.expect)((0, _helpers.getPhoneAndEmailPageEmailHint)({\n  preparerType: _constants.PREPARER_TYPES.VETERAN\n})).to.include('send you notifications about your');\n(0, _chai.expect)((0, _helpers.getPhoneAndEmailPageEmailHint)({\n  preparerType: _constants.PREPARER_TYPES.NON_VETERAN\n})).to.include('send you notifications about your');\n(0, _chai.expect)((0, _helpers.getPhoneAndEmailPageEmailHint)({\n  preparerType: _constants.PREPARER_TYPES.THIRD_PARTY_VETERAN\n})).to.include('send you or the Veteran notifications about the');\n(0, _chai.expect)((0, _helpers.getPhoneAndEmailPageEmailHint)({\n  preparerType: _constants.PREPARER_TYPES.THIRD_PARTY_NON_VETERAN\n})).to.include('send you or the claimant notifications about the');",
              "err": {},
              "uuid": "7eb702f8-0157-460d-82ba-3c6c253ccf52",
              "parentUUID": "3291085e-58af-4266-b09c-2ef29e322979",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "7eb702f8-0157-460d-82ba-3c6c253ccf52"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "0d32d1c3-8bd4-4a54-bd25-13cecd0dcce0",
          "title": "createPayload()",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/20-10207/tests/unit/helpers.unit.spec.js",
          "file": "/src/applications/simple-forms/20-10207/tests/unit/helpers.unit.spec.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"createPayload()\"",
              "fullTitle": "createPayload() \"before each\" hook in \"createPayload()\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "mockFile = new File([''], 'filename');\nformId = '1234';",
              "err": {},
              "uuid": "1bb4665b-cfb9-434c-bf47-6ac38a19bf6e",
              "parentUUID": "0d32d1c3-8bd4-4a54-bd25-13cecd0dcce0",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": "should create a FormData instance with form_id and file",
              "fullTitle": "createPayload() should create a FormData instance with form_id and file",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var payload = (0, _helpers.createPayload)(mockFile, formId);\n(0, _chai.expect)(payload.get('form_id')).to.equal(formId);\n(0, _chai.expect)(payload.get('file')).to.equal(mockFile);",
              "err": {},
              "uuid": "70d6bf20-e5fd-4d70-8f22-73da3bd50f0c",
              "parentUUID": "0d32d1c3-8bd4-4a54-bd25-13cecd0dcce0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should append password to FormData if provided",
              "fullTitle": "createPayload() should append password to FormData if provided",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var password = 'password';\nvar payload = (0, _helpers.createPayload)(mockFile, formId, password);\n(0, _chai.expect)(payload.get('form_id')).to.equal(formId);\n(0, _chai.expect)(payload.get('file')).to.equal(mockFile);\n(0, _chai.expect)(payload.get('password')).to.equal(password);",
              "err": {},
              "uuid": "cfd72349-543a-44c2-ba74-588010764333",
              "parentUUID": "0d32d1c3-8bd4-4a54-bd25-13cecd0dcce0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should not append password to FormData if not provided",
              "fullTitle": "createPayload() should not append password to FormData if not provided",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var payload = (0, _helpers.createPayload)(mockFile, formId);\n(0, _chai.expect)(payload.get('form_id')).to.equal(formId);\n(0, _chai.expect)(payload.get('file')).to.equal(mockFile);\n(0, _chai.expect)(payload.get('password')).to.be.null;",
              "err": {},
              "uuid": "465ce085-a6ac-424b-bb82-68aae3f61cba",
              "parentUUID": "0d32d1c3-8bd4-4a54-bd25-13cecd0dcce0",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "70d6bf20-e5fd-4d70-8f22-73da3bd50f0c",
            "cfd72349-543a-44c2-ba74-588010764333",
            "465ce085-a6ac-424b-bb82-68aae3f61cba"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "8aac25e4-7dee-45b0-bb8b-68ef506d171a",
          "title": "parseResponse",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/20-10207/tests/unit/helpers.unit.spec.js",
          "file": "/src/applications/simple-forms/20-10207/tests/unit/helpers.unit.spec.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"parseResponse\"",
              "fullTitle": "parseResponse \"before each\" hook in \"parseResponse\"",
              "timedOut": false,
              "duration": 1,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "clock = _lolex.default.install({\n  shouldAdvanceTime: true,\n  advanceTimeDelta: 20,\n  toFake: ['setTimeout', 'clearTimeout', 'setImmediate', 'clearImmediate']\n});\nvar ul = document.createElement('ul');\nul.className = 'schemaform-file-list';\nvar li = document.createElement('li');\nli.textContent = 'name';\nul.appendChild(li);\ndocument.body.appendChild(ul);",
              "err": {},
              "uuid": "0bc7b450-e370-4860-b05c-f9129a9913c6",
              "parentUUID": "8aac25e4-7dee-45b0-bb8b-68ef506d171a",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after each\" hook in \"parseResponse\"",
              "fullTitle": "parseResponse \"after each\" hook in \"parseResponse\"",
              "timedOut": false,
              "duration": 1,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "if (clock) {\n  clock.uninstall();\n}\ndocument.body.innerHTML = '';",
              "err": {},
              "uuid": "a74be068-335a-4173-a197-60dc4f554d5d",
              "parentUUID": "8aac25e4-7dee-45b0-bb8b-68ef506d171a",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "parses the response and focuses the file card",
              "fullTitle": "parseResponse parses the response and focuses the file card",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var data = {\n  attributes: {\n    name: 'name',\n    confirmationCode: '1234'\n  }\n};\nvar result = (0, _helpers.parseResponse)({\n  data: data\n});\n(0, _chai.expect)(result).to.deep.equal({\n  name: data.attributes.name,\n  confirmationCode: data.attributes.confirmationCode\n});",
              "err": {},
              "uuid": "a74d5c2a-e5a4-4dcf-a33c-aaca0237e436",
              "parentUUID": "8aac25e4-7dee-45b0-bb8b-68ef506d171a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a74d5c2a-e5a4-4dcf-a33c-aaca0237e436"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "148f5304-3c7d-4902-8766-0875695d1524",
          "title": "dateOfDeathValidation()",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/20-10207/tests/unit/helpers.unit.spec.js",
          "file": "/src/applications/simple-forms/20-10207/tests/unit/helpers.unit.spec.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"dateOfDeathValidation()\"",
              "fullTitle": "dateOfDeathValidation() \"before each\" hook in \"dateOfDeathValidation()\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "errors = {\n  veteranDateOfDeath: {\n    addError: _sinon.default.spy()\n  }\n};\nfields = {\n  veteranDateOfBirth: '2020-01-01',\n  veteranDateOfDeath: '2019-01-01'\n};",
              "err": {},
              "uuid": "03c57e5c-ac6b-48aa-b865-a946940c6f95",
              "parentUUID": "148f5304-3c7d-4902-8766-0875695d1524",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": "adds an error if date of death is before date of birth",
              "fullTitle": "dateOfDeathValidation() adds an error if date of death is before date of birth",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, _helpers.dateOfDeathValidation)(errors, fields);\n(0, _chai.expect)(errors.veteranDateOfDeath.addError.calledOnce).to.be.true;\n(0, _chai.expect)(errors.veteranDateOfDeath.addError.calledWith('Provide a date that is after the date of birth')).to.be.true;",
              "err": {},
              "uuid": "bd71f0ed-c86d-4898-8ef1-4904d20620ce",
              "parentUUID": "148f5304-3c7d-4902-8766-0875695d1524",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "doesn’t add an error if date of death is after date of birth",
              "fullTitle": "dateOfDeathValidation() doesn’t add an error if date of death is after date of birth",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "fields.veteranDateOfDeath = '2021-01-01';\n(0, _helpers.dateOfDeathValidation)(errors, fields);\n(0, _chai.expect)(errors.veteranDateOfDeath.addError.called).to.be.false;",
              "err": {},
              "uuid": "84d6b41f-02ef-49b5-b66d-13421da8b5cd",
              "parentUUID": "148f5304-3c7d-4902-8766-0875695d1524",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "bd71f0ed-c86d-4898-8ef1-4904d20620ce",
            "84d6b41f-02ef-49b5-b66d-13421da8b5cd"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "9b20e0c6-2f63-4af9-8ff0-711f2f4fbf22",
          "title": "powConfinementDateRangeValidation()",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/20-10207/tests/unit/helpers.unit.spec.js",
          "file": "/src/applications/simple-forms/20-10207/tests/unit/helpers.unit.spec.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"powConfinementDateRangeValidation()\"",
              "fullTitle": "powConfinementDateRangeValidation() \"before each\" hook in \"powConfinementDateRangeValidation()\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "errors = {\n  powConfinementEndDate: {\n    addError: _sinon.default.spy()\n  }\n};\nfields = {\n  powConfinementStartDate: '2020-01-01',\n  powConfinementEndDate: '2019-01-01'\n};",
              "err": {},
              "uuid": "c692e6e2-c329-4975-9285-8e6f5586015e",
              "parentUUID": "9b20e0c6-2f63-4af9-8ff0-711f2f4fbf22",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": "adds an error if end date is before start date",
              "fullTitle": "powConfinementDateRangeValidation() adds an error if end date is before start date",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, _helpers.powConfinementDateRangeValidation)(errors, fields);\n(0, _chai.expect)(errors.powConfinementEndDate.addError.calledOnce).to.be.true;\n(0, _chai.expect)(errors.powConfinementEndDate.addError.calledWith('The end date must be after the start date')).to.be.true;",
              "err": {},
              "uuid": "98667bc4-44bc-4129-b4a4-1e9b73397b23",
              "parentUUID": "9b20e0c6-2f63-4af9-8ff0-711f2f4fbf22",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "doesn’t add an error if end date is after start date",
              "fullTitle": "powConfinementDateRangeValidation() doesn’t add an error if end date is after start date",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "fields.powConfinementEndDate = '2021-01-01';\n(0, _helpers.powConfinementDateRangeValidation)(errors, fields);\n(0, _chai.expect)(errors.powConfinementEndDate.addError.called).to.be.false;",
              "err": {},
              "uuid": "bff834e5-1d14-41e5-b9d5-375367b78f5d",
              "parentUUID": "9b20e0c6-2f63-4af9-8ff0-711f2f4fbf22",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "98667bc4-44bc-4129-b4a4-1e9b73397b23",
            "bff834e5-1d14-41e5-b9d5-375367b78f5d"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "7f780455-95b0-4dd3-86c1-a45c1a24bc4a",
          "title": "powConfinement2DateRangeValidation()",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/20-10207/tests/unit/helpers.unit.spec.js",
          "file": "/src/applications/simple-forms/20-10207/tests/unit/helpers.unit.spec.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"powConfinement2DateRangeValidation()\"",
              "fullTitle": "powConfinement2DateRangeValidation() \"before each\" hook in \"powConfinement2DateRangeValidation()\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "errors = {\n  powConfinement2EndDate: {\n    addError: _sinon.default.spy()\n  }\n};\nfields = {\n  powConfinement2StartDate: '2020-01-01',\n  powConfinement2EndDate: '2019-01-01'\n};",
              "err": {},
              "uuid": "ea6df990-ff7a-48ce-85b3-df1487f1bb51",
              "parentUUID": "7f780455-95b0-4dd3-86c1-a45c1a24bc4a",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": "adds an error if end date is before start date",
              "fullTitle": "powConfinement2DateRangeValidation() adds an error if end date is before start date",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, _helpers.powConfinement2DateRangeValidation)(errors, fields);\n(0, _chai.expect)(errors.powConfinement2EndDate.addError.calledOnce).to.be.true;\n(0, _chai.expect)(errors.powConfinement2EndDate.addError.calledWith('The end date must be after the start date')).to.be.true;",
              "err": {},
              "uuid": "e96b7ac1-0e88-452e-a960-59cc58cca381",
              "parentUUID": "7f780455-95b0-4dd3-86c1-a45c1a24bc4a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "doesn’t add an error if end date is after start date",
              "fullTitle": "powConfinement2DateRangeValidation() doesn’t add an error if end date is after start date",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "fields.powConfinement2EndDate = '2021-01-01';\n(0, _helpers.powConfinement2DateRangeValidation)(errors, fields);\n(0, _chai.expect)(errors.powConfinement2EndDate.addError.called).to.be.false;",
              "err": {},
              "uuid": "d515013d-d293-471a-8db4-742c2f5af419",
              "parentUUID": "7f780455-95b0-4dd3-86c1-a45c1a24bc4a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "e96b7ac1-0e88-452e-a960-59cc58cca381",
            "d515013d-d293-471a-8db4-742c2f5af419"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "2bd6ef96-896e-4fed-828b-9edc7025d9e6",
          "title": "statementOfTruthFullNamePath()",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/20-10207/tests/unit/helpers.unit.spec.js",
          "file": "/src/applications/simple-forms/20-10207/tests/unit/helpers.unit.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "returns correct path for preparerType",
              "fullTitle": "statementOfTruthFullNamePath() returns correct path for preparerType",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, _chai.expect)((0, _helpers.statementOfTruthFullNamePath)({\n  formData: {\n    preparerType: _constants.PREPARER_TYPES.VETERAN\n  }\n})).to.equal('veteranFullName');\n(0, _chai.expect)((0, _helpers.statementOfTruthFullNamePath)({\n  formData: {\n    preparerType: _constants.PREPARER_TYPES.NON_VETERAN\n  }\n})).to.equal('nonVeteranFullName');\n(0, _chai.expect)((0, _helpers.statementOfTruthFullNamePath)({\n  formData: {\n    preparerType: _constants.PREPARER_TYPES.THIRD_PARTY_VETERAN\n  }\n})).to.equal('thirdPartyFullName');\n(0, _chai.expect)((0, _helpers.statementOfTruthFullNamePath)({\n  formData: {\n    preparerType: _constants.PREPARER_TYPES.THIRD_PARTY_NON_VETERAN\n  }\n})).to.equal('thirdPartyFullName');",
              "err": {},
              "uuid": "d27e3255-67cc-4989-be18-f547495f9f78",
              "parentUUID": "2bd6ef96-896e-4fed-828b-9edc7025d9e6",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "d27e3255-67cc-4989-be18-f547495f9f78"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "41ef15c7-e15e-485b-9e89-951c3227d6e0",
          "title": "evidenceConfinementHintUpdateUiSchema",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/20-10207/tests/unit/helpers.unit.spec.js",
          "file": "/src/applications/simple-forms/20-10207/tests/unit/helpers.unit.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "returns the correct hint string depending on preparer type",
              "fullTitle": "evidenceConfinementHintUpdateUiSchema returns the correct hint string depending on preparer type",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var beganEndedString = 'began';\nvar formData = {\n  preparerType: _constants.PREPARER_TYPES.VETERAN\n};\n(0, _chai.expect)((0, _helpers.evidenceConfinementHintUpdateUiSchema)({\n  formData: formData,\n  beganEndedString: beganEndedString\n})['ui:options'].hint).to.equal(\"Tell us the dates your confinement \".concat(beganEndedString, \" as a prisoner of war.\"));\nformData.preparerType = _constants.PREPARER_TYPES.NON_VETERAN;\n(0, _chai.expect)((0, _helpers.evidenceConfinementHintUpdateUiSchema)({\n  formData: formData,\n  beganEndedString: beganEndedString\n})['ui:options'].hint).to.equal(\"Tell us the dates your confinement \".concat(beganEndedString, \" as a prisoner of war.\"));\nformData.preparerType = _constants.PREPARER_TYPES.THIRD_PARTY_VETERAN;\n(0, _chai.expect)((0, _helpers.evidenceConfinementHintUpdateUiSchema)({\n  formData: formData,\n  beganEndedString: beganEndedString\n})['ui:options'].hint).to.equal(\"Tell us the dates the Veteran\\u2019s confinement \".concat(beganEndedString, \" as a prisoner of war.\"));\nformData.preparerType = _constants.PREPARER_TYPES.THIRD_PARTY_NON_VETERAN;\n(0, _chai.expect)((0, _helpers.evidenceConfinementHintUpdateUiSchema)({\n  formData: formData,\n  beganEndedString: beganEndedString\n})['ui:options'].hint).to.equal(\"Tell us the dates the claimant\\u2019s confinement \".concat(beganEndedString, \" as a prisoner of war.\"));",
              "err": {},
              "uuid": "75fdc8e1-6406-4b73-b885-ad6997e85492",
              "parentUUID": "41ef15c7-e15e-485b-9e89-951c3227d6e0",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "75fdc8e1-6406-4b73-b885-ad6997e85492"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "170a4588-f1df-49e0-80d1-40f7f0d0cde4",
          "title": "nonVeteranIdInfo",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/20-10207/tests/unit/pages/nonVeteranIdInfo.unit.spec.js",
          "file": "/src/applications/simple-forms/20-10207/tests/unit/pages/nonVeteranIdInfo.unit.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "calls getIdentityInfoPageTitle with formData when titleUI is called",
              "fullTitle": "nonVeteranIdInfo calls getIdentityInfoPageTitle with formData when titleUI is called",
              "timedOut": false,
              "duration": 4,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var formDataNonVet = {\n  preparerType: _constants.PREPARER_TYPES.NON_VETERAN\n};\nvar stub = _sinon.default.stub(helpers, 'getIdentityInfoPageTitle');\n// Render the component with the test data\nvar TitleComponent = _nonVeteranIdInfo.default.uiSchema['ui:title'];\nvar wrapper = (0, _enzyme.mount)(/*#__PURE__*/_react.default.createElement(TitleComponent, {\n  formData: formDataNonVet\n}));\n// Check if the stub was called with the correct data\n(0, _chai.expect)(stub.calledWith(formDataNonVet)).to.be.true;\n// Unmount the component\nwrapper.unmount();\n// Restore the original function\nstub.restore();",
              "err": {},
              "uuid": "07b55905-9855-449c-9ef7-c0655ebd55cf",
              "parentUUID": "170a4588-f1df-49e0-80d1-40f7f0d0cde4",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "07b55905-9855-449c-9ef7-c0655ebd55cf"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 4,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "05bc78af-74b3-4ebc-bf58-f211fe30caad",
          "title": "nonVeteranNameAndDateofBirth",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/20-10207/tests/unit/pages/nonVeteranNameAndDateofBirth.unit.spec.js",
          "file": "/src/applications/simple-forms/20-10207/tests/unit/pages/nonVeteranNameAndDateofBirth.unit.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "calls getNameAndDobPageTitle and getNameAndDobPageDescription with formData when titleUI is called",
              "fullTitle": "nonVeteranNameAndDateofBirth calls getNameAndDobPageTitle and getNameAndDobPageDescription with formData when titleUI is called",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var formDataNonVet = {\n  preparerType: _constants.PREPARER_TYPES.NON_VETERAN\n};\nvar stubTitle = _sinon.default.stub(helpers, 'getNameAndDobPageTitle');\nvar stubDescription = _sinon.default.stub(helpers, 'getNameAndDobPageDescription');\n// Render the component with the test data\nvar TitleComponent = _nonVeteranNameAndDateOfBirth.default.uiSchema['ui:title'];\nvar wrapper = (0, _enzyme.mount)(/*#__PURE__*/_react.default.createElement(TitleComponent, {\n  formData: formDataNonVet\n}));\n// Check if the stubs were called with the correct data\n(0, _chai.expect)(stubTitle.calledWith(formDataNonVet)).to.be.true;\n(0, _chai.expect)(stubDescription.calledWith(formDataNonVet)).to.be.true;\n// Unmount the component\nwrapper.unmount();\n// Restore the original functions\nstubTitle.restore();\nstubDescription.restore();",
              "err": {},
              "uuid": "c3cac7d5-1dac-453a-9b92-ba2d66975bc4",
              "parentUUID": "05bc78af-74b3-4ebc-bf58-f211fe30caad",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "c3cac7d5-1dac-453a-9b92-ba2d66975bc4"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "c886d099-68a2-4de3-b2a4-14e9e3f37ddb",
          "title": "nonVeteranPhoneAndEmail",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/20-10207/tests/unit/pages/nonVeteranPhoneAndEmail.unit.spec.js",
          "file": "/src/applications/simple-forms/20-10207/tests/unit/pages/nonVeteranPhoneAndEmail.unit.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "calls getPhoneAndEmailPageTitle with formData when titleUI is called",
              "fullTitle": "nonVeteranPhoneAndEmail calls getPhoneAndEmailPageTitle with formData when titleUI is called",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var formDataNonVet = {\n  preparerType: _constants.PREPARER_TYPES.NON_VETERAN\n};\nvar stub = _sinon.default.stub(helpers, 'getPhoneAndEmailPageTitle');\n// Render the component with the test data\nvar TitleComponent = _nonVeteranPhoneAndEmail.default.uiSchema['ui:title'];\nvar wrapper = (0, _enzyme.mount)(/*#__PURE__*/_react.default.createElement(TitleComponent, {\n  formData: formDataNonVet\n}));\n// Check if the stub was called with the correct data\n(0, _chai.expect)(stub.calledWith(formDataNonVet)).to.be.true;\n// Unmount the component\nwrapper.unmount();\n// Restore the original function\nstub.restore();",
              "err": {},
              "uuid": "c5bca7ac-7771-4bb0-84f2-c9eca1a4771b",
              "parentUUID": "c886d099-68a2-4de3-b2a4-14e9e3f37ddb",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "c5bca7ac-7771-4bb0-84f2-c9eca1a4771b"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "6162281c-a029-4324-88e7-5362a060a84c",
          "title": "Claimant's point of contact page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/20-10207/tests/unit/pages/nonVeteranPointOfContact.unit.spec.js",
          "file": "/src/applications/simple-forms/20-10207/tests/unit/pages/nonVeteranPointOfContact.unit.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should have appropriate number of web components",
              "fullTitle": "Claimant's point of contact page should have appropriate number of web components",
              "timedOut": false,
              "duration": 7,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps3 = getProps(),\n  mockStore = _getProps3.mockStore;\nvar _render3 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render3.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypesWebComponents)).to.have.lengthOf(expectedNumberOfFields);",
              "err": {},
              "uuid": "54653e7e-2d4e-437e-95d8-a8db9de14b53",
              "parentUUID": "6162281c-a029-4324-88e7-5362a060a84c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "54653e7e-2d4e-437e-95d8-a8db9de14b53"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 7,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "6d9c4e76-74bd-48f2-acd2-e7a65821f0a5",
          "title": "Claimant's point of contact page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/20-10207/tests/unit/pages/nonVeteranPointOfContact.unit.spec.js",
          "file": "/src/applications/simple-forms/20-10207/tests/unit/pages/nonVeteranPointOfContact.unit.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should show the correct number of errors on submit for web components",
              "fullTitle": "Claimant's point of contact page should show the correct number of errors on submit for web components",
              "timedOut": false,
              "duration": 19,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps4 = getProps(),\n  mockStore = _getProps4.mockStore;\nvar _render4 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render4.container,\n  getByRole = _render4.getByRole;\ngetByRole('button', {\n  name: /submit/i\n}).click();\nvar nodes = Array.from(container.querySelectorAll(\"\".concat(expectedFieldTypesWebComponents, \", \").concat(wrapperWebComponents)));\nvar errors = nodes.filter(function (node) {\n  return node.error;\n});\n(0, _chai.expect)(errors).to.have.lengthOf(expectedNumberOfErrors);",
              "err": {},
              "uuid": "01688ab3-09d3-4583-b704-adf6bf7118bc",
              "parentUUID": "6d9c4e76-74bd-48f2-acd2-e7a65821f0a5",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "01688ab3-09d3-4583-b704-adf6bf7118bc"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 19,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "772da96a-e93d-423a-800f-fe95235facb8",
          "title": "Claimant's point of contact page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/20-10207/tests/unit/pages/nonVeteranPointOfContact.unit.spec.js",
          "file": "/src/applications/simple-forms/20-10207/tests/unit/pages/nonVeteranPointOfContact.unit.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should have appropriate number of fields",
              "fullTitle": "Claimant's point of contact page should have appropriate number of fields",
              "timedOut": false,
              "duration": 5,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps = getProps(),\n  mockStore = _getProps.mockStore;\nvar _render = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypes)).to.have.lengthOf(expectedNumberOfFields);",
              "err": {},
              "uuid": "7a922dc6-138f-45a0-bad9-f1837de10240",
              "parentUUID": "772da96a-e93d-423a-800f-fe95235facb8",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "7a922dc6-138f-45a0-bad9-f1837de10240"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 5,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "fc6338d0-1994-430f-9c88-04f13dca0220",
          "title": "Claimant's point of contact page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/20-10207/tests/unit/pages/nonVeteranPointOfContact.unit.spec.js",
          "file": "/src/applications/simple-forms/20-10207/tests/unit/pages/nonVeteranPointOfContact.unit.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should show the correct number of errors on submit",
              "fullTitle": "Claimant's point of contact page should show the correct number of errors on submit",
              "timedOut": false,
              "duration": 18,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps2 = getProps(),\n  mockStore = _getProps2.mockStore;\nvar _render2 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  getByRole = _render2.getByRole,\n  queryAllByRole = _render2.queryAllByRole;\ngetByRole('button', {\n  name: /submit/i\n}).click();\nvar errors = queryAllByRole('alert');\n(0, _chai.expect)(errors).to.have.lengthOf(expectedNumberOfErrors);",
              "err": {},
              "uuid": "150360a1-fee3-4813-9d07-254bdb5a2413",
              "parentUUID": "fc6338d0-1994-430f-9c88-04f13dca0220",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "150360a1-fee3-4813-9d07-254bdb5a2413"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 18,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "d2f68d04-d7b8-4577-b916-e323ec48db3f",
          "title": "Your point of contact page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/20-10207/tests/unit/pages/pointOfContact.unit.spec.js",
          "file": "/src/applications/simple-forms/20-10207/tests/unit/pages/pointOfContact.unit.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should have appropriate number of web components",
              "fullTitle": "Your point of contact page should have appropriate number of web components",
              "timedOut": false,
              "duration": 5,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps3 = getProps(),\n  mockStore = _getProps3.mockStore;\nvar _render3 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render3.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypesWebComponents)).to.have.lengthOf(expectedNumberOfFields);",
              "err": {},
              "uuid": "b3e61bd1-fc7c-4fe1-9cd8-cc1d5a19911f",
              "parentUUID": "d2f68d04-d7b8-4577-b916-e323ec48db3f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "b3e61bd1-fc7c-4fe1-9cd8-cc1d5a19911f"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 5,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "e947b23a-1a8a-479c-99cd-39382142e1bf",
          "title": "Your point of contact page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/20-10207/tests/unit/pages/pointOfContact.unit.spec.js",
          "file": "/src/applications/simple-forms/20-10207/tests/unit/pages/pointOfContact.unit.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should show the correct number of errors on submit for web components",
              "fullTitle": "Your point of contact page should show the correct number of errors on submit for web components",
              "timedOut": false,
              "duration": 15,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps4 = getProps(),\n  mockStore = _getProps4.mockStore;\nvar _render4 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render4.container,\n  getByRole = _render4.getByRole;\ngetByRole('button', {\n  name: /submit/i\n}).click();\nvar nodes = Array.from(container.querySelectorAll(\"\".concat(expectedFieldTypesWebComponents, \", \").concat(wrapperWebComponents)));\nvar errors = nodes.filter(function (node) {\n  return node.error;\n});\n(0, _chai.expect)(errors).to.have.lengthOf(expectedNumberOfErrors);",
              "err": {},
              "uuid": "e2ee6160-4295-4594-b60d-f8b5af2eb8f4",
              "parentUUID": "e947b23a-1a8a-479c-99cd-39382142e1bf",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "e2ee6160-4295-4594-b60d-f8b5af2eb8f4"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 15,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "f9b18bdf-3790-41c3-aa14-543d1ba7f948",
          "title": "Your point of contact page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/20-10207/tests/unit/pages/pointOfContact.unit.spec.js",
          "file": "/src/applications/simple-forms/20-10207/tests/unit/pages/pointOfContact.unit.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should show the correct number of errors on submit for web components",
              "fullTitle": "Your point of contact page should show the correct number of errors on submit for web components",
              "timedOut": false,
              "duration": 19,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps4 = getProps(),\n  mockStore = _getProps4.mockStore;\nvar _render4 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render4.container,\n  getByRole = _render4.getByRole;\ngetByRole('button', {\n  name: /submit/i\n}).click();\nvar nodes = Array.from(container.querySelectorAll(\"\".concat(expectedFieldTypesWebComponents, \", \").concat(wrapperWebComponents)));\nvar errors = nodes.filter(function (node) {\n  return node.error;\n});\n(0, _chai.expect)(errors).to.have.lengthOf(expectedNumberOfErrors);",
              "err": {},
              "uuid": "bbbd5e99-2325-4e86-a08c-bf456d541153",
              "parentUUID": "f9b18bdf-3790-41c3-aa14-543d1ba7f948",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "bbbd5e99-2325-4e86-a08c-bf456d541153"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 19,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "ac662bb6-c750-41d8-bb52-b5238e39adf2",
          "title": "Your point of contact page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/20-10207/tests/unit/pages/pointOfContact.unit.spec.js",
          "file": "/src/applications/simple-forms/20-10207/tests/unit/pages/pointOfContact.unit.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should have appropriate number of fields",
              "fullTitle": "Your point of contact page should have appropriate number of fields",
              "timedOut": false,
              "duration": 7,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps = getProps(),\n  mockStore = _getProps.mockStore;\nvar _render = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypes)).to.have.lengthOf(expectedNumberOfFields);",
              "err": {},
              "uuid": "38c2267c-ee67-4030-a590-aeb5c1724afc",
              "parentUUID": "ac662bb6-c750-41d8-bb52-b5238e39adf2",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "38c2267c-ee67-4030-a590-aeb5c1724afc"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 7,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "257c6f8e-8eec-46ef-8ae8-af207f32b123",
          "title": "Your point of contact page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/20-10207/tests/unit/pages/pointOfContact.unit.spec.js",
          "file": "/src/applications/simple-forms/20-10207/tests/unit/pages/pointOfContact.unit.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should show the correct number of errors on submit",
              "fullTitle": "Your point of contact page should show the correct number of errors on submit",
              "timedOut": false,
              "duration": 19,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps2 = getProps(),\n  mockStore = _getProps2.mockStore;\nvar _render2 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  getByRole = _render2.getByRole,\n  queryAllByRole = _render2.queryAllByRole;\ngetByRole('button', {\n  name: /submit/i\n}).click();\nvar errors = queryAllByRole('alert');\n(0, _chai.expect)(errors).to.have.lengthOf(expectedNumberOfErrors);",
              "err": {},
              "uuid": "00ebb62b-d070-4d62-b313-8f10dadbd9a0",
              "parentUUID": "257c6f8e-8eec-46ef-8ae8-af207f32b123",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "00ebb62b-d070-4d62-b313-8f10dadbd9a0"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 19,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "a62eedc5-0c20-46ef-9602-f80a42665662",
          "title": "veteranIdInfo",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/20-10207/tests/unit/pages/veteranIdInfo.unit.spec.js",
          "file": "/src/applications/simple-forms/20-10207/tests/unit/pages/veteranIdInfo.unit.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "calls getVeteranIdentityInfoPageTitle with formData when titleUI is called",
              "fullTitle": "veteranIdInfo calls getVeteranIdentityInfoPageTitle with formData when titleUI is called",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var formDataVet = {\n  preparerType: _constants.PREPARER_TYPES.VETERAN\n};\nvar stub = _sinon.default.stub(helpers, 'getVeteranIdentityInfoPageTitle');\n// Render the component with the test data\nvar TitleComponent = _veteranIdInfo.default.uiSchema['ui:title'];\nvar wrapper = (0, _enzyme.mount)(/*#__PURE__*/_react.default.createElement(TitleComponent, {\n  formData: formDataVet\n}));\n// Check if the stub was called with the correct data\n(0, _chai.expect)(stub.calledWith(formDataVet)).to.be.true;\n// Unmount the component\nwrapper.unmount();\n// Restore the original function\nstub.restore();",
              "err": {},
              "uuid": "a8ef188c-6593-44e5-bc0a-2838d75d700f",
              "parentUUID": "a62eedc5-0c20-46ef-9602-f80a42665662",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a8ef188c-6593-44e5-bc0a-2838d75d700f"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "88e0fa64-ac8d-4c06-a9f1-667459412035",
          "title": "veteranNameAndDateofBirth",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/20-10207/tests/unit/pages/veteranNameAndDateofBirth.unit.spec.js",
          "file": "/src/applications/simple-forms/20-10207/tests/unit/pages/veteranNameAndDateofBirth.unit.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "calls getNameAndDobPageTitle and getNameAndDobPageDescription with formData when titleUI is called",
              "fullTitle": "veteranNameAndDateofBirth calls getNameAndDobPageTitle and getNameAndDobPageDescription with formData when titleUI is called",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var formDataVet = {\n  preparerType: _constants.PREPARER_TYPES.VETERAN\n};\nvar stubTitle = _sinon.default.stub(helpers, 'getNameAndDobPageTitle');\nvar stubDescription = _sinon.default.stub(helpers, 'getNameAndDobPageDescription');\n// Render the component with the test data\nvar TitleComponent = _veteranNameAndDateofBirth.default.uiSchema['ui:title'];\nvar wrapper = (0, _enzyme.mount)(/*#__PURE__*/_react.default.createElement(TitleComponent, {\n  formData: formDataVet\n}));\n// Check if the stubs were called with the correct data\n(0, _chai.expect)(stubTitle.calledWith(formDataVet)).to.be.true;\n(0, _chai.expect)(stubDescription.calledWith(formDataVet)).to.be.true;\n// Unmount the component\nwrapper.unmount();\n// Restore the original functions\nstubTitle.restore();\nstubDescription.restore();",
              "err": {},
              "uuid": "8b82e350-e59e-420b-b1f5-c835081f7ded",
              "parentUUID": "88e0fa64-ac8d-4c06-a9f1-667459412035",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "8b82e350-e59e-420b-b1f5-c835081f7ded"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "f96af0fb-53a8-4a44-afbe-6712f04d469b",
          "title": "veteranPhoneAndEmail",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/20-10207/tests/unit/pages/veteranPhoneAndEmail.unit.spec.js",
          "file": "/src/applications/simple-forms/20-10207/tests/unit/pages/veteranPhoneAndEmail.unit.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "calls getPhoneAndEmailPageTitle with formData when titleUI is called",
              "fullTitle": "veteranPhoneAndEmail calls getPhoneAndEmailPageTitle with formData when titleUI is called",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var formDataVet = {\n  preparerType: _constants.PREPARER_TYPES.VETERAN\n};\nvar stub = _sinon.default.stub(helpers, 'getPhoneAndEmailPageTitle');\n// Render the component with the test data\nvar TitleComponent = _veteranPhoneAndEmail.default.uiSchema['ui:title'];\nvar wrapper = (0, _enzyme.mount)(/*#__PURE__*/_react.default.createElement(TitleComponent, {\n  formData: formDataVet\n}));\n// Check if the stub was called with the correct data\n(0, _chai.expect)(stub.calledWith(formDataVet)).to.be.true;\n// Unmount the component\nwrapper.unmount();\n// Restore the original function\nstub.restore();",
              "err": {},
              "uuid": "5ab83609-e4dc-40eb-a635-2bed10f15d8f",
              "parentUUID": "f96af0fb-53a8-4a44-afbe-6712f04d469b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "5ab83609-e4dc-40eb-a635-2bed10f15d8f"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "fc162cae-e198-461d-a11e-eba8a06aee4e",
          "title": "Veteran's point of contact page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/20-10207/tests/unit/pages/veteranPointOfContact.unit.spec.js",
          "file": "/src/applications/simple-forms/20-10207/tests/unit/pages/veteranPointOfContact.unit.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should have appropriate number of web components",
              "fullTitle": "Veteran's point of contact page should have appropriate number of web components",
              "timedOut": false,
              "duration": 6,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps3 = getProps(),\n  mockStore = _getProps3.mockStore;\nvar _render3 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render3.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypesWebComponents)).to.have.lengthOf(expectedNumberOfFields);",
              "err": {},
              "uuid": "3655bbd7-9675-456a-9d8b-ed69ce77dd19",
              "parentUUID": "fc162cae-e198-461d-a11e-eba8a06aee4e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "3655bbd7-9675-456a-9d8b-ed69ce77dd19"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 6,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "25e30522-fa6c-4507-a55c-d5bae7cf01a2",
          "title": "Veteran's point of contact page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/20-10207/tests/unit/pages/veteranPointOfContact.unit.spec.js",
          "file": "/src/applications/simple-forms/20-10207/tests/unit/pages/veteranPointOfContact.unit.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should show the correct number of errors on submit for web components",
              "fullTitle": "Veteran's point of contact page should show the correct number of errors on submit for web components",
              "timedOut": false,
              "duration": 15,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps4 = getProps(),\n  mockStore = _getProps4.mockStore;\nvar _render4 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render4.container,\n  getByRole = _render4.getByRole;\ngetByRole('button', {\n  name: /submit/i\n}).click();\nvar nodes = Array.from(container.querySelectorAll(\"\".concat(expectedFieldTypesWebComponents, \", \").concat(wrapperWebComponents)));\nvar errors = nodes.filter(function (node) {\n  return node.error;\n});\n(0, _chai.expect)(errors).to.have.lengthOf(expectedNumberOfErrors);",
              "err": {},
              "uuid": "b81dc7bd-bbb2-4d56-9cae-210a485efeb0",
              "parentUUID": "25e30522-fa6c-4507-a55c-d5bae7cf01a2",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "b81dc7bd-bbb2-4d56-9cae-210a485efeb0"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 15,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "25b7605d-e992-4b0d-8d9c-8ef1092933cb",
          "title": "Veteran's point of contact page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/20-10207/tests/unit/pages/veteranPointOfContact.unit.spec.js",
          "file": "/src/applications/simple-forms/20-10207/tests/unit/pages/veteranPointOfContact.unit.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should have appropriate number of fields",
              "fullTitle": "Veteran's point of contact page should have appropriate number of fields",
              "timedOut": false,
              "duration": 5,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps = getProps(),\n  mockStore = _getProps.mockStore;\nvar _render = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypes)).to.have.lengthOf(expectedNumberOfFields);",
              "err": {},
              "uuid": "614b0b90-7434-4275-ada0-2ed32e323db7",
              "parentUUID": "25b7605d-e992-4b0d-8d9c-8ef1092933cb",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "614b0b90-7434-4275-ada0-2ed32e323db7"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 5,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "0f3ff593-665a-4c79-a215-3545febc8851",
          "title": "Veteran's point of contact page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/20-10207/tests/unit/pages/veteranPointOfContact.unit.spec.js",
          "file": "/src/applications/simple-forms/20-10207/tests/unit/pages/veteranPointOfContact.unit.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should show the correct number of errors on submit",
              "fullTitle": "Veteran's point of contact page should show the correct number of errors on submit",
              "timedOut": false,
              "duration": 19,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps2 = getProps(),\n  mockStore = _getProps2.mockStore;\nvar _render2 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  getByRole = _render2.getByRole,\n  queryAllByRole = _render2.queryAllByRole;\ngetByRole('button', {\n  name: /submit/i\n}).click();\nvar errors = queryAllByRole('alert');\n(0, _chai.expect)(errors).to.have.lengthOf(expectedNumberOfErrors);",
              "err": {},
              "uuid": "b18ffeae-aede-4c61-a91a-a23d9fe567c0",
              "parentUUID": "0f3ff593-665a-4c79-a215-3545febc8851",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "b18ffeae-aede-4c61-a91a-a23d9fe567c0"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 19,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "1d92a9e5-2ac6-4018-85bf-da52cc3e6d7e",
          "title": "form config options",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/21-0845/tests/config/form.unit.spec.jsx",
          "file": "/src/applications/simple-forms/21-0845/tests/config/form.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should use the correct full name path in the statement of truth for a veteran",
              "fullTitle": "form config options should use the correct full name path in the statement of truth for a veteran",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var formData = {\n  authorizerType: _constants.AUTHORIZER_TYPES.VETERAN\n};\nvar path = _form.default.preSubmitInfo.statementOfTruth.fullNamePath(formData);\n(0, _chai.expect)(path).to.eq('veteranFullName');",
              "err": {},
              "uuid": "54de0340-cd0c-480f-9d07-66e99abeaa40",
              "parentUUID": "1d92a9e5-2ac6-4018-85bf-da52cc3e6d7e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should use the correct full name path in the statement of truth for a non veteran",
              "fullTitle": "form config options should use the correct full name path in the statement of truth for a non veteran",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var formData = {\n  authorizerType: _constants.AUTHORIZER_TYPES.NON_VETERAN\n};\nvar path = _form.default.preSubmitInfo.statementOfTruth.fullNamePath(formData);\n(0, _chai.expect)(path).to.eq('authorizerFullName');",
              "err": {},
              "uuid": "f196ea90-9835-49f6-951b-acc6a5d05c61",
              "parentUUID": "1d92a9e5-2ac6-4018-85bf-da52cc3e6d7e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should show correct title for veteran personal info for a veteran",
              "fullTitle": "form config options should show correct title for veteran personal info for a veteran",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var formData = {\n  authorizerType: _constants.AUTHORIZER_TYPES.VETERAN\n};\nvar title = _form.default.chapters.veteranPersonalInfoChapter.title({\n  formData: formData\n});\n(0, _chai.expect)(title).to.eq('Your personal information');",
              "err": {},
              "uuid": "e0e42faa-cae7-4033-86a5-83f6870d6687",
              "parentUUID": "1d92a9e5-2ac6-4018-85bf-da52cc3e6d7e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should show correct title for veteran personal info for a non veteran",
              "fullTitle": "form config options should show correct title for veteran personal info for a non veteran",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var formData = {\n  authorizerType: _constants.AUTHORIZER_TYPES.NON_VETERAN\n};\nvar title = _form.default.chapters.veteranPersonalInfoChapter.title({\n  formData: formData\n});\n(0, _chai.expect)(title).to.eq('Veteran’s personal information');",
              "err": {},
              "uuid": "76664ca3-5331-490d-8e8f-2b48698922ef",
              "parentUUID": "1d92a9e5-2ac6-4018-85bf-da52cc3e6d7e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should show correct title for veteran identification info for a veteran",
              "fullTitle": "form config options should show correct title for veteran identification info for a veteran",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var formData = {\n  authorizerType: _constants.AUTHORIZER_TYPES.VETERAN\n};\nvar title = _form.default.chapters.veteranIdentificationInfoChapter.title({\n  formData: formData\n});\n(0, _chai.expect)(title).to.eq('Your identification information');",
              "err": {},
              "uuid": "c27fe53d-0093-4607-8e28-2e2567364b10",
              "parentUUID": "1d92a9e5-2ac6-4018-85bf-da52cc3e6d7e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should show correct title for veteran identification info for a non veteran",
              "fullTitle": "form config options should show correct title for veteran identification info for a non veteran",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var formData = {\n  authorizerType: _constants.AUTHORIZER_TYPES.NON_VETERAN\n};\nvar title = _form.default.chapters.veteranIdentificationInfoChapter.title({\n  formData: formData\n});\n(0, _chai.expect)(title).to.eq('Veteran’s identification information');",
              "err": {},
              "uuid": "a3b73498-7aef-4448-9fe3-6d10eb6bccf3",
              "parentUUID": "1d92a9e5-2ac6-4018-85bf-da52cc3e6d7e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should show correct title for security info for a veteran",
              "fullTitle": "form config options should show correct title for security info for a veteran",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var formData = {\n  authorizerType: _constants.AUTHORIZER_TYPES.VETERAN\n};\nvar title = _form.default.chapters.securityInfoChapter.title({\n  formData: formData\n});\n(0, _chai.expect)(title).to.eq('Security information');",
              "err": {},
              "uuid": "aebfc7b1-f022-412e-8f88-1d33033d85b4",
              "parentUUID": "1d92a9e5-2ac6-4018-85bf-da52cc3e6d7e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should show correct title for security info for a non veteran",
              "fullTitle": "form config options should show correct title for security info for a non veteran",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var formData = {\n  authorizerType: _constants.AUTHORIZER_TYPES.NON_VETERAN\n};\nvar title = _form.default.chapters.securityInfoChapter.title({\n  formData: formData\n});\n(0, _chai.expect)(title).to.eq('Security question');",
              "err": {},
              "uuid": "e0927e53-58a9-444d-b877-5f4537f329a0",
              "parentUUID": "1d92a9e5-2ac6-4018-85bf-da52cc3e6d7e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "54de0340-cd0c-480f-9d07-66e99abeaa40",
            "f196ea90-9835-49f6-951b-acc6a5d05c61",
            "e0e42faa-cae7-4033-86a5-83f6870d6687",
            "76664ca3-5331-490d-8e8f-2b48698922ef",
            "c27fe53d-0093-4607-8e28-2e2567364b10",
            "a3b73498-7aef-4448-9fe3-6d10eb6bccf3",
            "aebfc7b1-f022-412e-8f88-1d33033d85b4",
            "e0927e53-58a9-444d-b877-5f4537f329a0"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "24329f79-bbfc-4e6a-aa21-e6f9d735f02f",
          "title": "should perform a scroll correctly",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/21-0845/tests/config/helpers.unit.spec.jsx",
          "file": "/src/applications/simple-forms/21-0845/tests/config/helpers.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should perform a scroll correctly",
              "fullTitle": "should perform a scroll correctly should perform a scroll correctly",
              "timedOut": false,
              "duration": 107,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); });",
              "err": {},
              "uuid": "d8ec09ca-677d-44ae-ba03-1cc431656c45",
              "parentUUID": "24329f79-bbfc-4e6a-aa21-e6f9d735f02f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "d8ec09ca-677d-44ae-ba03-1cc431656c45"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 107,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "b2bc902d-e570-4161-8a94-7ba794a4a4ed",
          "title": "ConfirmationPage",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/21-0845/tests/containers/ConfirmationPage.unit.spec.jsx",
          "file": "/src/applications/simple-forms/21-0845/tests/containers/ConfirmationPage.unit.spec.jsx",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"ConfirmationPage\"",
              "fullTitle": "ConfirmationPage \"before each\" hook in \"ConfirmationPage\"",
              "timedOut": false,
              "duration": 8,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "store = mockStore(initialState);\nwrapper = (0, _enzyme.mount)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n  store: store\n}, /*#__PURE__*/_react.default.createElement(_ConfirmationPage.default, {\n  route: {\n    formConfig: _form.default\n  }\n})));",
              "err": {},
              "uuid": "66f766b1-26b4-4872-bfae-0447def62853",
              "parentUUID": "b2bc902d-e570-4161-8a94-7ba794a4a4ed",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after each\" hook in \"ConfirmationPage\"",
              "fullTitle": "ConfirmationPage \"after each\" hook in \"ConfirmationPage\"",
              "timedOut": false,
              "duration": 1,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "if (wrapper) {\n  wrapper.unmount();\n}\n(0, _react2.cleanup)();",
              "err": {},
              "uuid": "f2e9b276-d4f2-4c5d-b5f2-9e62800eecc1",
              "parentUUID": "b2bc902d-e570-4161-8a94-7ba794a4a4ed",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "passes the correct props to ConfirmationPageView",
              "fullTitle": "ConfirmationPage passes the correct props to ConfirmationPageView",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var confirmationViewProps = wrapper.find('ConfirmationView').props();\n(0, _chai.expect)(confirmationViewProps.submitDate).to.equal('2022-01-01T00:00:00Z');\n(0, _chai.expect)(confirmationViewProps.confirmationNumber).to.equal('1234567890');",
              "err": {},
              "uuid": "84bfe3ba-e6ed-4d44-baf9-720c663adf05",
              "parentUUID": "b2bc902d-e570-4161-8a94-7ba794a4a4ed",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should select form from state when state.form is defined",
              "fullTitle": "ConfirmationPage should select form from state when state.form is defined",
              "timedOut": false,
              "duration": 12,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var submitDate = new Date();\nvar mockInitialState = {\n  form: _objectSpread(_objectSpread({}, (0, _helpers.createInitialState)(_form.default)), {}, {\n    data: _authTypeVet.default,\n    submission: {\n      timestamp: submitDate,\n      response: {\n        confirmationNumber: '1234'\n      }\n    }\n  })\n};\nvar mockDefinedState = (0, _redux.createStore)(function () {\n  return mockInitialState;\n});\nvar definedWrapper = (0, _enzyme.mount)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n  store: mockDefinedState\n}, /*#__PURE__*/_react.default.createElement(_ConfirmationPage.default, {\n  route: {\n    formConfig: _form.default\n  }\n})));\n(0, _chai.expect)(definedWrapper.text()).to.include((0, _dateFns.format)(submitDate, 'MMMM d, yyyy'));\n// expect(definedWrapper.text()).to.include('1234');\ndefinedWrapper.unmount();",
              "err": {},
              "uuid": "d35af330-3c54-4c90-a1ac-eca33b666036",
              "parentUUID": "b2bc902d-e570-4161-8a94-7ba794a4a4ed",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should throw error when state.form is undefined",
              "fullTitle": "ConfirmationPage should throw error when state.form is undefined",
              "timedOut": false,
              "duration": 5,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var mockEmptyState = {};\nvar mockEmptyStore = (0, _redux.createStore)(function () {\n  return mockEmptyState;\n});\nvar errorWrapper;\n(0, _chai.expect)(function () {\n  errorWrapper = (0, _enzyme.mount)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockEmptyStore\n  }, /*#__PURE__*/_react.default.createElement(_ConfirmationPage.default, {\n    route: {\n      formConfig: _form.default\n    }\n  })));\n}).to.throw();\nif (errorWrapper) {\n  errorWrapper.unmount();\n}",
              "err": {},
              "uuid": "18a3d8b2-204a-447f-acc6-5d70ccdc2b10",
              "parentUUID": "b2bc902d-e570-4161-8a94-7ba794a4a4ed",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "84bfe3ba-e6ed-4d44-baf9-720c663adf05",
            "d35af330-3c54-4c90-a1ac-eca33b666036",
            "18a3d8b2-204a-447f-acc6-5d70ccdc2b10"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 18,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "37816a8a-421c-4729-a347-b39965049ed9",
          "title": "IntroductionPage",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/21-0845/tests/containers/IntroductionPage.unit.spec.jsx",
          "file": "/src/applications/simple-forms/21-0845/tests/containers/IntroductionPage.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should render",
              "fullTitle": "IntroductionPage should render",
              "timedOut": false,
              "duration": 5,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var mockStore = generateStore();\nvar _render = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_IntroductionPage.default, props))),\n  container = _render.container;\n(0, _chai.expect)(container).to.exist;",
              "err": {},
              "uuid": "3c13e750-9985-496a-9e29-c541c09e9bf2",
              "parentUUID": "37816a8a-421c-4729-a347-b39965049ed9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should render the va-alert-sign-in for LOA1 users",
              "fullTitle": "IntroductionPage should render the va-alert-sign-in for LOA1 users",
              "timedOut": false,
              "duration": 7,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var mockStore = generateStore({\n  loggedIn: true,\n  loaCurrent: 1\n});\nvar _render2 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_IntroductionPage.default, {\n    route: props.route\n  }))),\n  container = _render2.container;\n(0, _chai.expect)(container.querySelector('va-alert-sign-in')).to.exist;",
              "err": {},
              "uuid": "37292654-e910-4fce-adfd-a00aab661dd3",
              "parentUUID": "37816a8a-421c-4729-a347-b39965049ed9",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "3c13e750-9985-496a-9e29-c541c09e9bf2",
            "37292654-e910-4fce-adfd-a00aab661dd3"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 12,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "60531c55-a66e-4093-9946-f32e5803310e",
          "title": "Authorizer’s address page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/21-0845/tests/pages/authorizerAddress.unit.spec.jsx",
          "file": "/src/applications/simple-forms/21-0845/tests/pages/authorizerAddress.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should have appropriate number of web components",
              "fullTitle": "Authorizer’s address page should have appropriate number of web components",
              "timedOut": false,
              "duration": 33,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps3 = getProps(),\n  mockStore = _getProps3.mockStore;\nvar _render3 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render3.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypesWebComponents)).to.have.lengthOf(expectedNumberOfFields);",
              "err": {},
              "uuid": "e492fb6e-0beb-40da-a46f-ccac8de94442",
              "parentUUID": "60531c55-a66e-4093-9946-f32e5803310e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "e492fb6e-0beb-40da-a46f-ccac8de94442"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 33,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "ab93d863-469c-4dce-a459-cefe26938e41",
          "title": "Authorizer’s address page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/21-0845/tests/pages/authorizerAddress.unit.spec.jsx",
          "file": "/src/applications/simple-forms/21-0845/tests/pages/authorizerAddress.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should show the correct number of errors on submit for web components",
              "fullTitle": "Authorizer’s address page should show the correct number of errors on submit for web components",
              "timedOut": false,
              "duration": 68,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps4 = getProps(),\n  mockStore = _getProps4.mockStore;\nvar _render4 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render4.container,\n  getByRole = _render4.getByRole;\ngetByRole('button', {\n  name: /submit/i\n}).click();\nvar nodes = Array.from(container.querySelectorAll(\"\".concat(expectedFieldTypesWebComponents, \", \").concat(wrapperWebComponents)));\nvar errors = nodes.filter(function (node) {\n  return node.error;\n});\n(0, _chai.expect)(errors).to.have.lengthOf(expectedNumberOfErrors);",
              "err": {},
              "uuid": "19d27176-756a-4457-8fe5-557bf01875ba",
              "parentUUID": "ab93d863-469c-4dce-a459-cefe26938e41",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "19d27176-756a-4457-8fe5-557bf01875ba"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 68,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "86d10df8-dc45-4872-bceb-096f6d0ab718",
          "title": "Authorizer’s address - custom-street2-label",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/21-0845/tests/pages/authorizerAddress.unit.spec.jsx",
          "file": "/src/applications/simple-forms/21-0845/tests/pages/authorizerAddress.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "renders street2 custom-label",
              "fullTitle": "Authorizer’s address - custom-street2-label renders street2 custom-label",
              "timedOut": false,
              "duration": 28,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var screen = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  definitions: defaultDefinitions,\n  schema: schema,\n  data: _authTypeNonVet.default.data,\n  formData: _authTypeNonVet.default.data,\n  uiSchema: uiSchema\n}));\nvar street2Input = screen.container.querySelector('va-text-input[name=\"root_authorizerAddress_street2\"]');\nvar street2InputLabel = street2Input.getAttribute('label');\n(0, _chai.expect)(street2InputLabel).to.equal('Apartment or unit number');",
              "err": {},
              "uuid": "b8d8bc51-a476-4061-a925-05f444105a62",
              "parentUUID": "86d10df8-dc45-4872-bceb-096f6d0ab718",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "b8d8bc51-a476-4061-a925-05f444105a62"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 28,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "c46ac2a5-3f1e-44bb-ba39-386350d6328d",
          "title": "Your contact information page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/21-0845/tests/pages/authorizerContactInfo.unit.spec.jsx",
          "file": "/src/applications/simple-forms/21-0845/tests/pages/authorizerContactInfo.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should have appropriate number of fields",
              "fullTitle": "Your contact information page should have appropriate number of fields",
              "timedOut": false,
              "duration": 4,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps = getProps(),\n  mockStore = _getProps.mockStore;\nvar _render = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypes)).to.have.lengthOf(expectedNumberOfFields);",
              "err": {},
              "uuid": "9a3c8d16-6a9d-4176-bb92-28ea98ab19de",
              "parentUUID": "c46ac2a5-3f1e-44bb-ba39-386350d6328d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "9a3c8d16-6a9d-4176-bb92-28ea98ab19de"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 4,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "a1f09de0-8926-4514-b115-cce85d7c32ca",
          "title": "Your contact information page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/21-0845/tests/pages/authorizerContactInfo.unit.spec.jsx",
          "file": "/src/applications/simple-forms/21-0845/tests/pages/authorizerContactInfo.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should show the correct number of errors on submit",
              "fullTitle": "Your contact information page should show the correct number of errors on submit",
              "timedOut": false,
              "duration": 13,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps2 = getProps(),\n  mockStore = _getProps2.mockStore;\nvar _render2 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  getByRole = _render2.getByRole,\n  queryAllByRole = _render2.queryAllByRole;\ngetByRole('button', {\n  name: /submit/i\n}).click();\nvar errors = queryAllByRole('alert');\n(0, _chai.expect)(errors).to.have.lengthOf(expectedNumberOfErrors);",
              "err": {},
              "uuid": "13bdf128-0c7d-4df9-9da2-5860c4d81d80",
              "parentUUID": "a1f09de0-8926-4514-b115-cce85d7c32ca",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "13bdf128-0c7d-4df9-9da2-5860c4d81d80"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 13,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "f805654f-e219-4818-a6b8-c1cb99c860bd",
          "title": "Your contact information page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/21-0845/tests/pages/authorizerContactInfo.unit.spec.jsx",
          "file": "/src/applications/simple-forms/21-0845/tests/pages/authorizerContactInfo.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should have appropriate number of web components",
              "fullTitle": "Your contact information page should have appropriate number of web components",
              "timedOut": false,
              "duration": 4,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps3 = getProps(),\n  mockStore = _getProps3.mockStore;\nvar _render3 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render3.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypesWebComponents)).to.have.lengthOf(expectedNumberOfFields);",
              "err": {},
              "uuid": "5ef6d7ac-c557-49ef-9414-42e2a3f58391",
              "parentUUID": "f805654f-e219-4818-a6b8-c1cb99c860bd",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "5ef6d7ac-c557-49ef-9414-42e2a3f58391"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 4,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "345ea539-e25b-4810-8cec-a4783ec4073a",
          "title": "Your contact information page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/21-0845/tests/pages/authorizerContactInfo.unit.spec.jsx",
          "file": "/src/applications/simple-forms/21-0845/tests/pages/authorizerContactInfo.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should show the correct number of errors on submit for web components",
              "fullTitle": "Your contact information page should show the correct number of errors on submit for web components",
              "timedOut": false,
              "duration": 11,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps4 = getProps(),\n  mockStore = _getProps4.mockStore;\nvar _render4 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render4.container,\n  getByRole = _render4.getByRole;\ngetByRole('button', {\n  name: /submit/i\n}).click();\nvar nodes = Array.from(container.querySelectorAll(\"\".concat(expectedFieldTypesWebComponents, \", \").concat(wrapperWebComponents)));\nvar errors = nodes.filter(function (node) {\n  return node.error;\n});\n(0, _chai.expect)(errors).to.have.lengthOf(expectedNumberOfErrors);",
              "err": {},
              "uuid": "a728dad0-5592-4423-9c26-ec69b49a65b3",
              "parentUUID": "345ea539-e25b-4810-8cec-a4783ec4073a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a728dad0-5592-4423-9c26-ec69b49a65b3"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 11,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "5fcf49ef-b4f4-4e91-820b-912d70c6b957",
          "title": "Your personal information page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/21-0845/tests/pages/authorizerPersonalInfo.unit.spec.jsx",
          "file": "/src/applications/simple-forms/21-0845/tests/pages/authorizerPersonalInfo.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should have appropriate number of fields",
              "fullTitle": "Your personal information page should have appropriate number of fields",
              "timedOut": false,
              "duration": 8,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps = getProps(),\n  mockStore = _getProps.mockStore;\nvar _render = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypes)).to.have.lengthOf(expectedNumberOfFields);",
              "err": {},
              "uuid": "a64acf54-1f76-42f6-9417-a930da2349c4",
              "parentUUID": "5fcf49ef-b4f4-4e91-820b-912d70c6b957",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a64acf54-1f76-42f6-9417-a930da2349c4"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 8,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "4d71bda9-9fb1-4fa2-a565-9bc8da1af55b",
          "title": "Your personal information page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/21-0845/tests/pages/authorizerPersonalInfo.unit.spec.jsx",
          "file": "/src/applications/simple-forms/21-0845/tests/pages/authorizerPersonalInfo.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should show the correct number of errors on submit",
              "fullTitle": "Your personal information page should show the correct number of errors on submit",
              "timedOut": false,
              "duration": 21,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps2 = getProps(),\n  mockStore = _getProps2.mockStore;\nvar _render2 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  getByRole = _render2.getByRole,\n  queryAllByRole = _render2.queryAllByRole;\ngetByRole('button', {\n  name: /submit/i\n}).click();\nvar errors = queryAllByRole('alert');\n(0, _chai.expect)(errors).to.have.lengthOf(expectedNumberOfErrors);",
              "err": {},
              "uuid": "9c6820bc-b18d-4ae0-b9fe-2e6f48004fb4",
              "parentUUID": "4d71bda9-9fb1-4fa2-a565-9bc8da1af55b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "9c6820bc-b18d-4ae0-b9fe-2e6f48004fb4"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 21,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "85fffe83-a744-46c0-a719-3609bc443048",
          "title": "Who’s submitting this authorization? page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/21-0845/tests/pages/authorizerType.unit.spec.jsx",
          "file": "/src/applications/simple-forms/21-0845/tests/pages/authorizerType.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should have appropriate number of web components",
              "fullTitle": "Who’s submitting this authorization? page should have appropriate number of web components",
              "timedOut": false,
              "duration": 4,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps3 = getProps(),\n  mockStore = _getProps3.mockStore;\nvar _render3 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render3.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypesWebComponents)).to.have.lengthOf(expectedNumberOfFields);",
              "err": {},
              "uuid": "bc1f3788-e550-4e84-86fc-6f22b8801386",
              "parentUUID": "85fffe83-a744-46c0-a719-3609bc443048",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "bc1f3788-e550-4e84-86fc-6f22b8801386"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 4,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "259efc2e-8edc-4827-8a00-152f26e29b84",
          "title": "Who’s submitting this authorization? page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/21-0845/tests/pages/authorizerType.unit.spec.jsx",
          "file": "/src/applications/simple-forms/21-0845/tests/pages/authorizerType.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should show the correct number of errors on submit for web components",
              "fullTitle": "Who’s submitting this authorization? page should show the correct number of errors on submit for web components",
              "timedOut": false,
              "duration": 12,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps4 = getProps(),\n  mockStore = _getProps4.mockStore;\nvar _render4 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render4.container,\n  getByRole = _render4.getByRole;\ngetByRole('button', {\n  name: /submit/i\n}).click();\nvar nodes = Array.from(container.querySelectorAll(\"\".concat(expectedFieldTypesWebComponents, \", \").concat(wrapperWebComponents)));\nvar errors = nodes.filter(function (node) {\n  return node.error;\n});\n(0, _chai.expect)(errors).to.have.lengthOf(expectedNumberOfErrors);",
              "err": {},
              "uuid": "0cda6df3-6757-4eb8-8766-03b4e198db81",
              "parentUUID": "259efc2e-8edc-4827-8a00-152f26e29b84",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "0cda6df3-6757-4eb8-8766-03b4e198db81"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 12,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "381d30a0-52ce-470f-bc6f-8696208f1c77",
          "title": "Who’s submitting this authorization? - hideFormNavProgress",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/21-0845/tests/pages/authorizerType.unit.spec.jsx",
          "file": "/src/applications/simple-forms/21-0845/tests/pages/authorizerType.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "renders page with header & progressbar hidden",
              "fullTitle": "Who’s submitting this authorization? - hideFormNavProgress renders page with header & progressbar hidden",
              "timedOut": false,
              "duration": 7,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var screen = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  definitions: defaultDefinitions,\n  schema: schema,\n  data: _authTypeNonVet.default.data,\n  formData: _authTypeNonVet.default.data,\n  uiSchema: uiSchema\n}));\n(0, _chai.expect)(screen.queryAllByRole('progressbar')).to.be.empty;\n(0, _chai.expect)(screen.queryAllByTestId('navFormHeader')).to.be.empty;",
              "err": {},
              "uuid": "c2d94a85-dedd-4e0d-ad55-bb225f023fab",
              "parentUUID": "381d30a0-52ce-470f-bc6f-8696208f1c77",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "c2d94a85-dedd-4e0d-ad55-bb225f023fab"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 7,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "795d6428-d8ee-4606-a028-3b9d0333bd58",
          "title": "Information scope page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/21-0845/tests/pages/infoScope.unit.spec.jsx",
          "file": "/src/applications/simple-forms/21-0845/tests/pages/infoScope.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should have appropriate number of web components",
              "fullTitle": "Information scope page should have appropriate number of web components",
              "timedOut": false,
              "duration": 4,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps3 = getProps(),\n  mockStore = _getProps3.mockStore;\nvar _render3 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render3.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypesWebComponents)).to.have.lengthOf(expectedNumberOfFields);",
              "err": {},
              "uuid": "eb22511d-3a8b-4258-886c-e80eabeefd37",
              "parentUUID": "795d6428-d8ee-4606-a028-3b9d0333bd58",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "eb22511d-3a8b-4258-886c-e80eabeefd37"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 4,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "e62b637b-fb5f-44ca-8498-2a06df493ae7",
          "title": "Information scope page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/21-0845/tests/pages/infoScope.unit.spec.jsx",
          "file": "/src/applications/simple-forms/21-0845/tests/pages/infoScope.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should show the correct number of errors on submit for web components",
              "fullTitle": "Information scope page should show the correct number of errors on submit for web components",
              "timedOut": false,
              "duration": 11,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps4 = getProps(),\n  mockStore = _getProps4.mockStore;\nvar _render4 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render4.container,\n  getByRole = _render4.getByRole;\ngetByRole('button', {\n  name: /submit/i\n}).click();\nvar nodes = Array.from(container.querySelectorAll(\"\".concat(expectedFieldTypesWebComponents, \", \").concat(wrapperWebComponents)));\nvar errors = nodes.filter(function (node) {\n  return node.error;\n});\n(0, _chai.expect)(errors).to.have.lengthOf(expectedNumberOfErrors);",
              "err": {},
              "uuid": "4dda8dec-314e-4a08-a134-4e06c62acfd9",
              "parentUUID": "e62b637b-fb5f-44ca-8498-2a06df493ae7",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "4dda8dec-314e-4a08-a134-4e06c62acfd9"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 11,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "90daf3eb-9fcc-4085-9c7c-a09f46b3407d",
          "title": "Limited information page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/21-0845/tests/pages/limitedInfo.unit.spec.jsx",
          "file": "/src/applications/simple-forms/21-0845/tests/pages/limitedInfo.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should have appropriate number of web components",
              "fullTitle": "Limited information page should have appropriate number of web components",
              "timedOut": false,
              "duration": 5,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps3 = getProps(),\n  mockStore = _getProps3.mockStore;\nvar _render3 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render3.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypesWebComponents)).to.have.lengthOf(expectedNumberOfFields);",
              "err": {},
              "uuid": "180b224e-fc52-42ea-af33-d51c1b7c1f5b",
              "parentUUID": "90daf3eb-9fcc-4085-9c7c-a09f46b3407d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "180b224e-fc52-42ea-af33-d51c1b7c1f5b"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 5,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "f2fb7cb6-0fdb-4ba8-9f75-36f226968a14",
          "title": "Limited information page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/21-0845/tests/pages/limitedInfo.unit.spec.jsx",
          "file": "/src/applications/simple-forms/21-0845/tests/pages/limitedInfo.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should show the correct number of errors on submit for web components",
              "fullTitle": "Limited information page should show the correct number of errors on submit for web components",
              "timedOut": false,
              "duration": 15,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps4 = getProps(),\n  mockStore = _getProps4.mockStore;\nvar _render4 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render4.container,\n  getByRole = _render4.getByRole;\ngetByRole('button', {\n  name: /submit/i\n}).click();\nvar nodes = Array.from(container.querySelectorAll(\"\".concat(expectedFieldTypesWebComponents, \", \").concat(wrapperWebComponents)));\nvar errors = nodes.filter(function (node) {\n  return node.error;\n});\n(0, _chai.expect)(errors).to.have.lengthOf(expectedNumberOfErrors);",
              "err": {},
              "uuid": "b7af72dc-38ec-4d04-9f2e-926960419234",
              "parentUUID": "f2fb7cb6-0fdb-4ba8-9f75-36f226968a14",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "b7af72dc-38ec-4d04-9f2e-926960419234"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 15,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "0beaa0da-9416-4c47-bf67-7e97461ed823",
          "title": "Organization’s address page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/21-0845/tests/pages/organizationAddress.unit.spec.jsx",
          "file": "/src/applications/simple-forms/21-0845/tests/pages/organizationAddress.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should have appropriate number of web components",
              "fullTitle": "Organization’s address page should have appropriate number of web components",
              "timedOut": false,
              "duration": 26,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps3 = getProps(),\n  mockStore = _getProps3.mockStore;\nvar _render3 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render3.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypesWebComponents)).to.have.lengthOf(expectedNumberOfFields);",
              "err": {},
              "uuid": "3f237f3d-f9b5-439c-b7fc-3db13cbbd93d",
              "parentUUID": "0beaa0da-9416-4c47-bf67-7e97461ed823",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "3f237f3d-f9b5-439c-b7fc-3db13cbbd93d"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 26,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "19d1324a-27fa-49d6-9246-76984e3647f7",
          "title": "Organization’s address page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/21-0845/tests/pages/organizationAddress.unit.spec.jsx",
          "file": "/src/applications/simple-forms/21-0845/tests/pages/organizationAddress.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should show the correct number of errors on submit for web components",
              "fullTitle": "Organization’s address page should show the correct number of errors on submit for web components",
              "timedOut": false,
              "duration": 79,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps4 = getProps(),\n  mockStore = _getProps4.mockStore;\nvar _render4 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render4.container,\n  getByRole = _render4.getByRole;\ngetByRole('button', {\n  name: /submit/i\n}).click();\nvar nodes = Array.from(container.querySelectorAll(\"\".concat(expectedFieldTypesWebComponents, \", \").concat(wrapperWebComponents)));\nvar errors = nodes.filter(function (node) {\n  return node.error;\n});\n(0, _chai.expect)(errors).to.have.lengthOf(expectedNumberOfErrors);",
              "err": {},
              "uuid": "5e26f5b4-9740-45fc-a557-0f00d1d6ad40",
              "parentUUID": "19d1324a-27fa-49d6-9246-76984e3647f7",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "5e26f5b4-9740-45fc-a557-0f00d1d6ad40"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 79,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "83c67d32-eb5e-4cb3-8b9f-f08f20aec780",
          "title": "Organization’s address - custom-street2-label",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/21-0845/tests/pages/organizationAddress.unit.spec.jsx",
          "file": "/src/applications/simple-forms/21-0845/tests/pages/organizationAddress.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "renders street2 custom-label",
              "fullTitle": "Organization’s address - custom-street2-label renders street2 custom-label",
              "timedOut": false,
              "duration": 27,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var screen = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  definitions: defaultDefinitions,\n  schema: schema,\n  data: _authTypeVet.default.data,\n  formData: _authTypeVet.default.data,\n  uiSchema: uiSchema\n}));\nvar countrySelect = screen.container.querySelector('va-select[name=\"root_organizationAddress_country\"]');\nvar countrySelectLabel = countrySelect.getAttribute('label');\nvar streetInput = screen.container.querySelector('va-text-input[name=\"root_organizationAddress_street\"]');\nvar streetInputLabel = streetInput.getAttribute('label');\nvar street2Input = screen.container.querySelector('va-text-input[name=\"root_organizationAddress_street2\"]');\nvar street2InputLabel = street2Input.getAttribute('label');\n(0, _chai.expect)(countrySelectLabel).to.equal('Organization’s country');\n(0, _chai.expect)(streetInputLabel).to.equal('Organization’s street address');\n(0, _chai.expect)(street2InputLabel).to.equal('Apartment or unit number');",
              "err": {},
              "uuid": "51257264-7d52-40ef-be09-2c8cfc7ffc00",
              "parentUUID": "83c67d32-eb5e-4cb3-8b9f-f08f20aec780",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "51257264-7d52-40ef-be09-2c8cfc7ffc00"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 27,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "887f29db-15d1-4f62-90f5-f51d93b131a0",
          "title": "Organization’s name page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/21-0845/tests/pages/organizationName.unit.spec.jsx",
          "file": "/src/applications/simple-forms/21-0845/tests/pages/organizationName.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should have appropriate number of web components",
              "fullTitle": "Organization’s name page should have appropriate number of web components",
              "timedOut": false,
              "duration": 4,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps3 = getProps(),\n  mockStore = _getProps3.mockStore;\nvar _render3 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render3.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypesWebComponents)).to.have.lengthOf(expectedNumberOfFields);",
              "err": {},
              "uuid": "58ac81d5-1db3-4a16-82a2-cc5a742b9c33",
              "parentUUID": "887f29db-15d1-4f62-90f5-f51d93b131a0",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "58ac81d5-1db3-4a16-82a2-cc5a742b9c33"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 4,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "c183da3c-87a1-4bd5-859f-e3cc9bfedf77",
          "title": "Organization’s name page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/21-0845/tests/pages/organizationName.unit.spec.jsx",
          "file": "/src/applications/simple-forms/21-0845/tests/pages/organizationName.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should show the correct number of errors on submit for web components",
              "fullTitle": "Organization’s name page should show the correct number of errors on submit for web components",
              "timedOut": false,
              "duration": 13,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps4 = getProps(),\n  mockStore = _getProps4.mockStore;\nvar _render4 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render4.container,\n  getByRole = _render4.getByRole;\ngetByRole('button', {\n  name: /submit/i\n}).click();\nvar nodes = Array.from(container.querySelectorAll(\"\".concat(expectedFieldTypesWebComponents, \", \").concat(wrapperWebComponents)));\nvar errors = nodes.filter(function (node) {\n  return node.error;\n});\n(0, _chai.expect)(errors).to.have.lengthOf(expectedNumberOfErrors);",
              "err": {},
              "uuid": "7edcbed1-f408-4ba4-bd90-350b0a7d5270",
              "parentUUID": "c183da3c-87a1-4bd5-859f-e3cc9bfedf77",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "7edcbed1-f408-4ba4-bd90-350b0a7d5270"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 13,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "5f58e312-95e9-4bba-98a5-55a196e47402",
          "title": "Organization’s representatives page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/21-0845/tests/pages/organizationReps.unit.spec.jsx",
          "file": "/src/applications/simple-forms/21-0845/tests/pages/organizationReps.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should have appropriate number of web components",
              "fullTitle": "Organization’s representatives page should have appropriate number of web components",
              "timedOut": false,
              "duration": 4,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps3 = getProps(),\n  mockStore = _getProps3.mockStore;\nvar _render3 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render3.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypesWebComponents)).to.have.lengthOf(expectedNumberOfFields);",
              "err": {},
              "uuid": "4ab51886-1b45-4d25-a539-607fd43e0e2c",
              "parentUUID": "5f58e312-95e9-4bba-98a5-55a196e47402",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "4ab51886-1b45-4d25-a539-607fd43e0e2c"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 4,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "6c07040c-a2f6-489b-ab85-9475d1f2e2a9",
          "title": "Organization’s representatives page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/21-0845/tests/pages/organizationReps.unit.spec.jsx",
          "file": "/src/applications/simple-forms/21-0845/tests/pages/organizationReps.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should show the correct number of errors on submit for web components",
              "fullTitle": "Organization’s representatives page should show the correct number of errors on submit for web components",
              "timedOut": false,
              "duration": 15,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps4 = getProps(),\n  mockStore = _getProps4.mockStore;\nvar _render4 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render4.container,\n  getByRole = _render4.getByRole;\ngetByRole('button', {\n  name: /submit/i\n}).click();\nvar nodes = Array.from(container.querySelectorAll(\"\".concat(expectedFieldTypesWebComponents, \", \").concat(wrapperWebComponents)));\nvar errors = nodes.filter(function (node) {\n  return node.error;\n});\n(0, _chai.expect)(errors).to.have.lengthOf(expectedNumberOfErrors);",
              "err": {},
              "uuid": "f1ee6367-daf8-4fc4-a7b2-ecb9f36fcf4a",
              "parentUUID": "6c07040c-a2f6-489b-ab85-9475d1f2e2a9",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f1ee6367-daf8-4fc4-a7b2-ecb9f36fcf4a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 15,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "3fb484d9-c200-4a29-9c56-901cf78af349",
          "title": "Person’s address page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/21-0845/tests/pages/personAddress.unit.spec.jsx",
          "file": "/src/applications/simple-forms/21-0845/tests/pages/personAddress.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should have appropriate number of web components",
              "fullTitle": "Person’s address page should have appropriate number of web components",
              "timedOut": false,
              "duration": 26,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps3 = getProps(),\n  mockStore = _getProps3.mockStore;\nvar _render3 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render3.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypesWebComponents)).to.have.lengthOf(expectedNumberOfFields);",
              "err": {},
              "uuid": "5399e7b3-1ddf-489f-9a51-9bfcd5419b8f",
              "parentUUID": "3fb484d9-c200-4a29-9c56-901cf78af349",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "5399e7b3-1ddf-489f-9a51-9bfcd5419b8f"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 26,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "7a749a61-9ff9-4bb3-8142-fedbd115edc1",
          "title": "Person’s address page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/21-0845/tests/pages/personAddress.unit.spec.jsx",
          "file": "/src/applications/simple-forms/21-0845/tests/pages/personAddress.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should show the correct number of errors on submit for web components",
              "fullTitle": "Person’s address page should show the correct number of errors on submit for web components",
              "timedOut": false,
              "duration": 67,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps4 = getProps(),\n  mockStore = _getProps4.mockStore;\nvar _render4 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render4.container,\n  getByRole = _render4.getByRole;\ngetByRole('button', {\n  name: /submit/i\n}).click();\nvar nodes = Array.from(container.querySelectorAll(\"\".concat(expectedFieldTypesWebComponents, \", \").concat(wrapperWebComponents)));\nvar errors = nodes.filter(function (node) {\n  return node.error;\n});\n(0, _chai.expect)(errors).to.have.lengthOf(expectedNumberOfErrors);",
              "err": {},
              "uuid": "9101aa3e-8fde-4d9c-a09e-34fdc4520772",
              "parentUUID": "7a749a61-9ff9-4bb3-8142-fedbd115edc1",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "9101aa3e-8fde-4d9c-a09e-34fdc4520772"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 67,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "56dde203-70d4-43e9-b790-55ae0f55afe0",
          "title": "Person’s address - custom-street2-label",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/21-0845/tests/pages/personAddress.unit.spec.jsx",
          "file": "/src/applications/simple-forms/21-0845/tests/pages/personAddress.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "renders street2 custom-label",
              "fullTitle": "Person’s address - custom-street2-label renders street2 custom-label",
              "timedOut": false,
              "duration": 21,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var screen = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  definitions: defaultDefinitions,\n  schema: schema,\n  data: _authTypeVet.default.data,\n  formData: _authTypeVet.default.data,\n  uiSchema: uiSchema\n}));\nvar street2Input = screen.container.querySelector('va-text-input[name=\"root_personAddress_street2\"]');\nvar street2InputLabel = street2Input.getAttribute('label');\n(0, _chai.expect)(street2InputLabel).to.equal('Apartment or unit number');",
              "err": {},
              "uuid": "c75c9db4-d97b-4dc0-93aa-3a2b14aec0fa",
              "parentUUID": "56dde203-70d4-43e9-b790-55ae0f55afe0",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "c75c9db4-d97b-4dc0-93aa-3a2b14aec0fa"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 21,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "4fdbdf17-f2fb-4df7-afb5-0af6836d6f82",
          "title": "Person’s name page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/21-0845/tests/pages/personName.unit.spec.jsx",
          "file": "/src/applications/simple-forms/21-0845/tests/pages/personName.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should have appropriate number of web components",
              "fullTitle": "Person’s name page should have appropriate number of web components",
              "timedOut": false,
              "duration": 5,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps3 = getProps(),\n  mockStore = _getProps3.mockStore;\nvar _render3 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render3.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypesWebComponents)).to.have.lengthOf(expectedNumberOfFields);",
              "err": {},
              "uuid": "3791ba58-0057-40b6-af01-250e9b8f8b1a",
              "parentUUID": "4fdbdf17-f2fb-4df7-afb5-0af6836d6f82",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "3791ba58-0057-40b6-af01-250e9b8f8b1a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 5,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "6f2d2371-6207-4958-810d-1dc1f57a5cd8",
          "title": "Person’s name page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/21-0845/tests/pages/personName.unit.spec.jsx",
          "file": "/src/applications/simple-forms/21-0845/tests/pages/personName.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should show the correct number of errors on submit for web components",
              "fullTitle": "Person’s name page should show the correct number of errors on submit for web components",
              "timedOut": false,
              "duration": 15,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps4 = getProps(),\n  mockStore = _getProps4.mockStore;\nvar _render4 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render4.container,\n  getByRole = _render4.getByRole;\ngetByRole('button', {\n  name: /submit/i\n}).click();\nvar nodes = Array.from(container.querySelectorAll(\"\".concat(expectedFieldTypesWebComponents, \", \").concat(wrapperWebComponents)));\nvar errors = nodes.filter(function (node) {\n  return node.error;\n});\n(0, _chai.expect)(errors).to.have.lengthOf(expectedNumberOfErrors);",
              "err": {},
              "uuid": "930c9234-96e1-4c6d-a0ae-2106f40a3ad0",
              "parentUUID": "6f2d2371-6207-4958-810d-1dc1f57a5cd8",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "930c9234-96e1-4c6d-a0ae-2106f40a3ad0"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 15,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "1afae6c7-5b1c-4d92-bd9e-6320b6ca961e",
          "title": "Release duration page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/21-0845/tests/pages/releaseDuration.unit.spec.jsx",
          "file": "/src/applications/simple-forms/21-0845/tests/pages/releaseDuration.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should have appropriate number of web components",
              "fullTitle": "Release duration page should have appropriate number of web components",
              "timedOut": false,
              "duration": 4,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps3 = getProps(),\n  mockStore = _getProps3.mockStore;\nvar _render3 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render3.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypesWebComponents)).to.have.lengthOf(expectedNumberOfFields);",
              "err": {},
              "uuid": "f58f3d0b-43f5-4eb1-9dde-2ba837e5224f",
              "parentUUID": "1afae6c7-5b1c-4d92-bd9e-6320b6ca961e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f58f3d0b-43f5-4eb1-9dde-2ba837e5224f"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 4,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "1f5bd65e-a99c-48be-b7b2-238256e2097f",
          "title": "Release duration page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/21-0845/tests/pages/releaseDuration.unit.spec.jsx",
          "file": "/src/applications/simple-forms/21-0845/tests/pages/releaseDuration.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should show the correct number of errors on submit for web components",
              "fullTitle": "Release duration page should show the correct number of errors on submit for web components",
              "timedOut": false,
              "duration": 11,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps4 = getProps(),\n  mockStore = _getProps4.mockStore;\nvar _render4 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render4.container,\n  getByRole = _render4.getByRole;\ngetByRole('button', {\n  name: /submit/i\n}).click();\nvar nodes = Array.from(container.querySelectorAll(\"\".concat(expectedFieldTypesWebComponents, \", \").concat(wrapperWebComponents)));\nvar errors = nodes.filter(function (node) {\n  return node.error;\n});\n(0, _chai.expect)(errors).to.have.lengthOf(expectedNumberOfErrors);",
              "err": {},
              "uuid": "0d97e144-e1dd-459f-8679-1cd12509372a",
              "parentUUID": "1f5bd65e-a99c-48be-b7b2-238256e2097f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "0d97e144-e1dd-459f-8679-1cd12509372a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 11,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "3bc60ce5-d0ca-45e0-804c-a24d55d8c333",
          "title": "Release end date page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/21-0845/tests/pages/releaseEndDate.unit.spec.jsx",
          "file": "/src/applications/simple-forms/21-0845/tests/pages/releaseEndDate.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should have appropriate number of web components",
              "fullTitle": "Release end date page should have appropriate number of web components",
              "timedOut": false,
              "duration": 4,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps3 = getProps(),\n  mockStore = _getProps3.mockStore;\nvar _render3 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render3.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypesWebComponents)).to.have.lengthOf(expectedNumberOfFields);",
              "err": {},
              "uuid": "0f31a90d-67f2-4434-94c0-160a229ed856",
              "parentUUID": "3bc60ce5-d0ca-45e0-804c-a24d55d8c333",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "0f31a90d-67f2-4434-94c0-160a229ed856"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 4,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "9426299f-95fa-4ac9-97f9-522c79d4f527",
          "title": "Release end date page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/21-0845/tests/pages/releaseEndDate.unit.spec.jsx",
          "file": "/src/applications/simple-forms/21-0845/tests/pages/releaseEndDate.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should show the correct number of errors on submit for web components",
              "fullTitle": "Release end date page should show the correct number of errors on submit for web components",
              "timedOut": false,
              "duration": 10,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps4 = getProps(),\n  mockStore = _getProps4.mockStore;\nvar _render4 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render4.container,\n  getByRole = _render4.getByRole;\ngetByRole('button', {\n  name: /submit/i\n}).click();\nvar nodes = Array.from(container.querySelectorAll(\"\".concat(expectedFieldTypesWebComponents, \", \").concat(wrapperWebComponents)));\nvar errors = nodes.filter(function (node) {\n  return node.error;\n});\n(0, _chai.expect)(errors).to.have.lengthOf(expectedNumberOfErrors);",
              "err": {},
              "uuid": "bc161c83-d906-493b-9db8-0dda1b377ad1",
              "parentUUID": "9426299f-95fa-4ac9-97f9-522c79d4f527",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "bc161c83-d906-493b-9db8-0dda1b377ad1"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 10,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "014d5cfa-7f26-4c9f-b7d3-ed87551acde6",
          "title": "Security answer page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/21-0845/tests/pages/securityAnswer.unit.spec.jsx",
          "file": "/src/applications/simple-forms/21-0845/tests/pages/securityAnswer.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should have appropriate number of fields",
              "fullTitle": "Security answer page should have appropriate number of fields",
              "timedOut": false,
              "duration": 3,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps = getProps(),\n  mockStore = _getProps.mockStore;\nvar _render = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypes)).to.have.lengthOf(expectedNumberOfFields);",
              "err": {},
              "uuid": "067f8ea5-f11d-4ef4-854c-957fe673d701",
              "parentUUID": "014d5cfa-7f26-4c9f-b7d3-ed87551acde6",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "067f8ea5-f11d-4ef4-854c-957fe673d701"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "2cc25f79-7d2f-4e61-bc36-461395f9d244",
          "title": "Security answer page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/21-0845/tests/pages/securityAnswer.unit.spec.jsx",
          "file": "/src/applications/simple-forms/21-0845/tests/pages/securityAnswer.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should show the correct number of errors on submit",
              "fullTitle": "Security answer page should show the correct number of errors on submit",
              "timedOut": false,
              "duration": 14,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps2 = getProps(),\n  mockStore = _getProps2.mockStore;\nvar _render2 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  getByRole = _render2.getByRole,\n  queryAllByRole = _render2.queryAllByRole;\ngetByRole('button', {\n  name: /submit/i\n}).click();\nvar errors = queryAllByRole('alert');\n(0, _chai.expect)(errors).to.have.lengthOf(expectedNumberOfErrors);",
              "err": {},
              "uuid": "8e19aabc-0757-4250-b89e-0d5e6a600c66",
              "parentUUID": "2cc25f79-7d2f-4e61-bc36-461395f9d244",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "8e19aabc-0757-4250-b89e-0d5e6a600c66"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 14,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "e5bba724-7814-4c04-baac-463e8bdf18fd",
          "title": "Security answer - dynamic-field-label",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/21-0845/tests/pages/securityAnswer.unit.spec.jsx",
          "file": "/src/applications/simple-forms/21-0845/tests/pages/securityAnswer.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "renders dynamic-field-label - motherBirthplace",
              "fullTitle": "Security answer - dynamic-field-label renders dynamic-field-label - motherBirthplace",
              "timedOut": false,
              "duration": 4,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "mockData.securityQuestion = questionValue;\nvar screen = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  definitions: defaultDefinitions,\n  schema: schema,\n  data: mockData,\n  formData: mockData,\n  uiSchema: uiSchema\n}));\n(0, _chai.expect)(screen.container.querySelector('legend > h3')).to.include.text(_constants.SECURITY_QUESTIONS[(0, _utils.camelCaseToSnakeAllCaps)(questionValue)]);",
              "err": {},
              "uuid": "780a9114-f99e-4ca4-97aa-f3e0097b8164",
              "parentUUID": "e5bba724-7814-4c04-baac-463e8bdf18fd",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "renders dynamic-field-label - highSchoolName",
              "fullTitle": "Security answer - dynamic-field-label renders dynamic-field-label - highSchoolName",
              "timedOut": false,
              "duration": 4,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "mockData.securityQuestion = questionValue;\nvar screen = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  definitions: defaultDefinitions,\n  schema: schema,\n  data: mockData,\n  formData: mockData,\n  uiSchema: uiSchema\n}));\n(0, _chai.expect)(screen.container.querySelector('legend > h3')).to.include.text(_constants.SECURITY_QUESTIONS[(0, _utils.camelCaseToSnakeAllCaps)(questionValue)]);",
              "err": {},
              "uuid": "e27dda00-cd48-4887-9eb6-4a66e857dbcd",
              "parentUUID": "e5bba724-7814-4c04-baac-463e8bdf18fd",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "renders dynamic-field-label - firstPetName",
              "fullTitle": "Security answer - dynamic-field-label renders dynamic-field-label - firstPetName",
              "timedOut": false,
              "duration": 3,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "mockData.securityQuestion = questionValue;\nvar screen = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  definitions: defaultDefinitions,\n  schema: schema,\n  data: mockData,\n  formData: mockData,\n  uiSchema: uiSchema\n}));\n(0, _chai.expect)(screen.container.querySelector('legend > h3')).to.include.text(_constants.SECURITY_QUESTIONS[(0, _utils.camelCaseToSnakeAllCaps)(questionValue)]);",
              "err": {},
              "uuid": "677c1bfc-7fce-407d-a651-ee3acd0d9ca7",
              "parentUUID": "e5bba724-7814-4c04-baac-463e8bdf18fd",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "renders dynamic-field-label - favoriteTeacherName",
              "fullTitle": "Security answer - dynamic-field-label renders dynamic-field-label - favoriteTeacherName",
              "timedOut": false,
              "duration": 3,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "mockData.securityQuestion = questionValue;\nvar screen = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  definitions: defaultDefinitions,\n  schema: schema,\n  data: mockData,\n  formData: mockData,\n  uiSchema: uiSchema\n}));\n(0, _chai.expect)(screen.container.querySelector('legend > h3')).to.include.text(_constants.SECURITY_QUESTIONS[(0, _utils.camelCaseToSnakeAllCaps)(questionValue)]);",
              "err": {},
              "uuid": "637fcd9e-10e4-4e66-ab64-01cee7f57156",
              "parentUUID": "e5bba724-7814-4c04-baac-463e8bdf18fd",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "renders dynamic-field-label - fatherMiddleName",
              "fullTitle": "Security answer - dynamic-field-label renders dynamic-field-label - fatherMiddleName",
              "timedOut": false,
              "duration": 3,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "mockData.securityQuestion = questionValue;\nvar screen = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  definitions: defaultDefinitions,\n  schema: schema,\n  data: mockData,\n  formData: mockData,\n  uiSchema: uiSchema\n}));\n(0, _chai.expect)(screen.container.querySelector('legend > h3')).to.include.text(_constants.SECURITY_QUESTIONS[(0, _utils.camelCaseToSnakeAllCaps)(questionValue)]);",
              "err": {},
              "uuid": "bff663d7-e292-4590-a264-64345e5eee99",
              "parentUUID": "e5bba724-7814-4c04-baac-463e8bdf18fd",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "780a9114-f99e-4ca4-97aa-f3e0097b8164",
            "e27dda00-cd48-4887-9eb6-4a66e857dbcd",
            "677c1bfc-7fce-407d-a651-ee3acd0d9ca7",
            "637fcd9e-10e4-4e66-ab64-01cee7f57156",
            "bff663d7-e292-4590-a264-64345e5eee99"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 17,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "71bcc751-c03a-492c-b145-c35733a31637",
          "title": "Security question page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/21-0845/tests/pages/securityQuestion.unit.spec.jsx",
          "file": "/src/applications/simple-forms/21-0845/tests/pages/securityQuestion.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should have appropriate number of web components",
              "fullTitle": "Security question page should have appropriate number of web components",
              "timedOut": false,
              "duration": 3,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps3 = getProps(),\n  mockStore = _getProps3.mockStore;\nvar _render3 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render3.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypesWebComponents)).to.have.lengthOf(expectedNumberOfFields);",
              "err": {},
              "uuid": "a96bc533-8741-4219-9bd8-f085c32f65c2",
              "parentUUID": "71bcc751-c03a-492c-b145-c35733a31637",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a96bc533-8741-4219-9bd8-f085c32f65c2"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "74b8eca6-d0d3-4c3b-bd56-26af826fdc03",
          "title": "Security question page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/21-0845/tests/pages/securityQuestion.unit.spec.jsx",
          "file": "/src/applications/simple-forms/21-0845/tests/pages/securityQuestion.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should show the correct number of errors on submit for web components",
              "fullTitle": "Security question page should show the correct number of errors on submit for web components",
              "timedOut": false,
              "duration": 14,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps4 = getProps(),\n  mockStore = _getProps4.mockStore;\nvar _render4 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render4.container,\n  getByRole = _render4.getByRole;\ngetByRole('button', {\n  name: /submit/i\n}).click();\nvar nodes = Array.from(container.querySelectorAll(\"\".concat(expectedFieldTypesWebComponents, \", \").concat(wrapperWebComponents)));\nvar errors = nodes.filter(function (node) {\n  return node.error;\n});\n(0, _chai.expect)(errors).to.have.lengthOf(expectedNumberOfErrors);",
              "err": {},
              "uuid": "9685e0a9-291a-423f-88c3-85de80966f00",
              "parentUUID": "74b8eca6-d0d3-4c3b-bd56-26af826fdc03",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "9685e0a9-291a-423f-88c3-85de80966f00"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 14,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "fe82c05f-9533-479c-818b-1e5aadbdb659",
          "title": "Third-party type page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/21-0845/tests/pages/thirdPartyType.unit.spec.jsx",
          "file": "/src/applications/simple-forms/21-0845/tests/pages/thirdPartyType.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should have appropriate number of web components",
              "fullTitle": "Third-party type page should have appropriate number of web components",
              "timedOut": false,
              "duration": 3,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps3 = getProps(),\n  mockStore = _getProps3.mockStore;\nvar _render3 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render3.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypesWebComponents)).to.have.lengthOf(expectedNumberOfFields);",
              "err": {},
              "uuid": "d6b38135-cb0c-40e3-8d45-379042f5e265",
              "parentUUID": "fe82c05f-9533-479c-818b-1e5aadbdb659",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "d6b38135-cb0c-40e3-8d45-379042f5e265"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "c2b966be-fde1-4059-b7ae-82006402de61",
          "title": "Third-party type page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/21-0845/tests/pages/thirdPartyType.unit.spec.jsx",
          "file": "/src/applications/simple-forms/21-0845/tests/pages/thirdPartyType.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should show the correct number of errors on submit for web components",
              "fullTitle": "Third-party type page should show the correct number of errors on submit for web components",
              "timedOut": false,
              "duration": 11,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps4 = getProps(),\n  mockStore = _getProps4.mockStore;\nvar _render4 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render4.container,\n  getByRole = _render4.getByRole;\ngetByRole('button', {\n  name: /submit/i\n}).click();\nvar nodes = Array.from(container.querySelectorAll(\"\".concat(expectedFieldTypesWebComponents, \", \").concat(wrapperWebComponents)));\nvar errors = nodes.filter(function (node) {\n  return node.error;\n});\n(0, _chai.expect)(errors).to.have.lengthOf(expectedNumberOfErrors);",
              "err": {},
              "uuid": "004cb37d-a43d-4d33-bd31-1c218565693c",
              "parentUUID": "c2b966be-fde1-4059-b7ae-82006402de61",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "004cb37d-a43d-4d33-bd31-1c218565693c"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 11,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "982c6d4e-b637-4bb4-b4f7-e09ac74f15cd",
          "title": "Your contact information page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/21-0845/tests/pages/veteranContactInfo.unit.spec.jsx",
          "file": "/src/applications/simple-forms/21-0845/tests/pages/veteranContactInfo.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should have appropriate number of fields",
              "fullTitle": "Your contact information page should have appropriate number of fields",
              "timedOut": false,
              "duration": 4,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps = getProps(),\n  mockStore = _getProps.mockStore;\nvar _render = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypes)).to.have.lengthOf(expectedNumberOfFields);",
              "err": {},
              "uuid": "78897c75-bad0-4977-8226-cd7feab48f7f",
              "parentUUID": "982c6d4e-b637-4bb4-b4f7-e09ac74f15cd",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "78897c75-bad0-4977-8226-cd7feab48f7f"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 4,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "43c06af7-e0b5-4798-9ef6-6f188308a380",
          "title": "Your contact information page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/21-0845/tests/pages/veteranContactInfo.unit.spec.jsx",
          "file": "/src/applications/simple-forms/21-0845/tests/pages/veteranContactInfo.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should show the correct number of errors on submit",
              "fullTitle": "Your contact information page should show the correct number of errors on submit",
              "timedOut": false,
              "duration": 12,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps2 = getProps(),\n  mockStore = _getProps2.mockStore;\nvar _render2 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  getByRole = _render2.getByRole,\n  queryAllByRole = _render2.queryAllByRole;\ngetByRole('button', {\n  name: /submit/i\n}).click();\nvar errors = queryAllByRole('alert');\n(0, _chai.expect)(errors).to.have.lengthOf(expectedNumberOfErrors);",
              "err": {},
              "uuid": "bbcf77fc-d3c0-45f8-b5b5-a2c7261e4019",
              "parentUUID": "43c06af7-e0b5-4798-9ef6-6f188308a380",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "bbcf77fc-d3c0-45f8-b5b5-a2c7261e4019"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 12,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "fdcef93d-d6d8-4ddf-a3a2-685fb6ce667d",
          "title": "Your contact information page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/21-0845/tests/pages/veteranContactInfo.unit.spec.jsx",
          "file": "/src/applications/simple-forms/21-0845/tests/pages/veteranContactInfo.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should have appropriate number of web components",
              "fullTitle": "Your contact information page should have appropriate number of web components",
              "timedOut": false,
              "duration": 4,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps3 = getProps(),\n  mockStore = _getProps3.mockStore;\nvar _render3 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render3.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypesWebComponents)).to.have.lengthOf(expectedNumberOfFields);",
              "err": {},
              "uuid": "d0b486ed-00cd-40cc-b024-667baa760e41",
              "parentUUID": "fdcef93d-d6d8-4ddf-a3a2-685fb6ce667d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "d0b486ed-00cd-40cc-b024-667baa760e41"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 4,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "0e3bfeef-5cdd-453f-bd99-afe668bf68a4",
          "title": "Your contact information page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/21-0845/tests/pages/veteranContactInfo.unit.spec.jsx",
          "file": "/src/applications/simple-forms/21-0845/tests/pages/veteranContactInfo.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should show the correct number of errors on submit for web components",
              "fullTitle": "Your contact information page should show the correct number of errors on submit for web components",
              "timedOut": false,
              "duration": 12,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps4 = getProps(),\n  mockStore = _getProps4.mockStore;\nvar _render4 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render4.container,\n  getByRole = _render4.getByRole;\ngetByRole('button', {\n  name: /submit/i\n}).click();\nvar nodes = Array.from(container.querySelectorAll(\"\".concat(expectedFieldTypesWebComponents, \", \").concat(wrapperWebComponents)));\nvar errors = nodes.filter(function (node) {\n  return node.error;\n});\n(0, _chai.expect)(errors).to.have.lengthOf(expectedNumberOfErrors);",
              "err": {},
              "uuid": "93dcbff7-06c6-4f2b-9b02-7bd732d6c740",
              "parentUUID": "0e3bfeef-5cdd-453f-bd99-afe668bf68a4",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "93dcbff7-06c6-4f2b-9b02-7bd732d6c740"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 12,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "dd4f001e-e428-46f4-8788-ab887668c337",
          "title": "Veteran’s identification information page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/21-0845/tests/pages/veteranIdInfo.unit.spec.jsx",
          "file": "/src/applications/simple-forms/21-0845/tests/pages/veteranIdInfo.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should have appropriate number of fields",
              "fullTitle": "Veteran’s identification information page should have appropriate number of fields",
              "timedOut": false,
              "duration": 5,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps = getProps(),\n  mockStore = _getProps.mockStore;\nvar _render = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypes)).to.have.lengthOf(expectedNumberOfFields);",
              "err": {},
              "uuid": "02344308-f628-4c4e-b1b3-de8877901f00",
              "parentUUID": "dd4f001e-e428-46f4-8788-ab887668c337",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "02344308-f628-4c4e-b1b3-de8877901f00"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 5,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "9824b899-f7f1-4340-b358-d54b3533bcca",
          "title": "Veteran’s identification information page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/21-0845/tests/pages/veteranIdInfo.unit.spec.jsx",
          "file": "/src/applications/simple-forms/21-0845/tests/pages/veteranIdInfo.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should show the correct number of errors on submit",
              "fullTitle": "Veteran’s identification information page should show the correct number of errors on submit",
              "timedOut": false,
              "duration": 17,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps2 = getProps(),\n  mockStore = _getProps2.mockStore;\nvar _render2 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  getByRole = _render2.getByRole,\n  queryAllByRole = _render2.queryAllByRole;\ngetByRole('button', {\n  name: /submit/i\n}).click();\nvar errors = queryAllByRole('alert');\n(0, _chai.expect)(errors).to.have.lengthOf(expectedNumberOfErrors);",
              "err": {},
              "uuid": "72a5bd6b-0411-4d6a-bcdf-5fed0cf28d89",
              "parentUUID": "9824b899-f7f1-4340-b358-d54b3533bcca",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "72a5bd6b-0411-4d6a-bcdf-5fed0cf28d89"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 17,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "1ae2b686-ffa9-4340-9988-ca8baf38945a",
          "title": "Veteran’s personal information page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/21-0845/tests/pages/veteranPersonalInfo.unit.spec.jsx",
          "file": "/src/applications/simple-forms/21-0845/tests/pages/veteranPersonalInfo.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should have appropriate number of web components",
              "fullTitle": "Veteran’s personal information page should have appropriate number of web components",
              "timedOut": false,
              "duration": 6,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps3 = getProps(),\n  mockStore = _getProps3.mockStore;\nvar _render3 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render3.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypesWebComponents)).to.have.lengthOf(expectedNumberOfFields);",
              "err": {},
              "uuid": "a698d333-4c55-427d-a5fc-8331cddcde42",
              "parentUUID": "1ae2b686-ffa9-4340-9988-ca8baf38945a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a698d333-4c55-427d-a5fc-8331cddcde42"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 6,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "aee44d9c-24cb-4cb0-beb1-8e634c782f53",
          "title": "Veteran’s personal information page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/21-0845/tests/pages/veteranPersonalInfo.unit.spec.jsx",
          "file": "/src/applications/simple-forms/21-0845/tests/pages/veteranPersonalInfo.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should show the correct number of errors on submit for web components",
              "fullTitle": "Veteran’s personal information page should show the correct number of errors on submit for web components",
              "timedOut": false,
              "duration": 14,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps4 = getProps(),\n  mockStore = _getProps4.mockStore;\nvar _render4 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render4.container,\n  getByRole = _render4.getByRole;\ngetByRole('button', {\n  name: /submit/i\n}).click();\nvar nodes = Array.from(container.querySelectorAll(\"\".concat(expectedFieldTypesWebComponents, \", \").concat(wrapperWebComponents)));\nvar errors = nodes.filter(function (node) {\n  return node.error;\n});\n(0, _chai.expect)(errors).to.have.lengthOf(expectedNumberOfErrors);",
              "err": {},
              "uuid": "5ff5b832-d5e4-4da7-82c2-90e8f407ac60",
              "parentUUID": "aee44d9c-24cb-4cb0-beb1-8e634c782f53",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "5ff5b832-d5e4-4da7-82c2-90e8f407ac60"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 14,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "e31812eb-1422-4cff-8559-401f305cefdf",
          "title": "getFullNameString",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/21-0845/tests/utils.unit.spec.js",
          "file": "/src/applications/simple-forms/21-0845/tests/utils.unit.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Returns the full name when a middle name is provided",
              "fullTitle": "getFullNameString Returns the full name when a middle name is provided",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var fullName = {\n  first: 'John',\n  middle: 'Doe',\n  last: 'Smith'\n};\n(0, _chai.expect)((0, _utils.getFullNameString)(fullName)).to.equal('John Doe Smith');",
              "err": {},
              "uuid": "5b3aa9ac-f8d3-4e96-9f71-e6743dce7706",
              "parentUUID": "e31812eb-1422-4cff-8559-401f305cefdf",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Returns the full name when no middle name is provided",
              "fullTitle": "getFullNameString Returns the full name when no middle name is provided",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var fullName = {\n  first: 'John',\n  last: 'Smith'\n};\n(0, _chai.expect)((0, _utils.getFullNameString)(fullName)).to.equal('John Smith');",
              "err": {},
              "uuid": "f18315e4-078c-4f82-ac0b-7d12d48466e8",
              "parentUUID": "e31812eb-1422-4cff-8559-401f305cefdf",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "5b3aa9ac-f8d3-4e96-9f71-e6743dce7706",
            "f18315e4-078c-4f82-ac0b-7d12d48466e8"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "99e76fb5-0e55-410b-a253-dec67d0af7ef",
          "title": "camelCaseToSnakeAllCaps",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/21-0845/tests/utils.unit.spec.js",
          "file": "/src/applications/simple-forms/21-0845/tests/utils.unit.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Converts camelCase to SNAKE_CASE",
              "fullTitle": "camelCaseToSnakeAllCaps Converts camelCase to SNAKE_CASE",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var input = 'camelCaseString';\n(0, _chai.expect)((0, _utils.camelCaseToSnakeAllCaps)(input)).to.equal('CAMEL_CASE_STRING');",
              "err": {},
              "uuid": "31ce9f02-986b-45f6-95dd-1678964a5a2a",
              "parentUUID": "99e76fb5-0e55-410b-a253-dec67d0af7ef",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Handles single words",
              "fullTitle": "camelCaseToSnakeAllCaps Handles single words",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var input = 'word';\n(0, _chai.expect)((0, _utils.camelCaseToSnakeAllCaps)(input)).to.equal('WORD');",
              "err": {},
              "uuid": "b82d5955-e977-4883-8378-0c4695b150d4",
              "parentUUID": "99e76fb5-0e55-410b-a253-dec67d0af7ef",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Handles empty strings",
              "fullTitle": "camelCaseToSnakeAllCaps Handles empty strings",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var input = '';\n(0, _chai.expect)((0, _utils.camelCaseToSnakeAllCaps)(input)).to.equal('');",
              "err": {},
              "uuid": "97f3dc3d-4b1d-4640-a4b1-78457dedfd24",
              "parentUUID": "99e76fb5-0e55-410b-a253-dec67d0af7ef",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Handles strings with no camel casing",
              "fullTitle": "camelCaseToSnakeAllCaps Handles strings with no camel casing",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var input = 'nocamelcasing';\n(0, _chai.expect)((0, _utils.camelCaseToSnakeAllCaps)(input)).to.equal('NOCAMELCASING');",
              "err": {},
              "uuid": "877b6371-13c2-4212-b70c-6d0cff1756d0",
              "parentUUID": "99e76fb5-0e55-410b-a253-dec67d0af7ef",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "31ce9f02-986b-45f6-95dd-1678964a5a2a",
            "b82d5955-e977-4883-8378-0c4695b150d4",
            "97f3dc3d-4b1d-4640-a4b1-78457dedfd24",
            "877b6371-13c2-4212-b70c-6d0cff1756d0"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "3fefc28e-b555-4240-b8cd-257bf977e997",
          "title": "snakeAllCapsToCamelCase",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/21-0845/tests/utils.unit.spec.js",
          "file": "/src/applications/simple-forms/21-0845/tests/utils.unit.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Converts SNAKE_CASE to camelCase",
              "fullTitle": "snakeAllCapsToCamelCase Converts SNAKE_CASE to camelCase",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var input = 'SNAKE_CASE_STRING';\n(0, _chai.expect)((0, _utils.snakeAllCapsToCamelCase)(input)).to.equal('snakeCaseString');",
              "err": {},
              "uuid": "45c13f63-25eb-4e51-974d-8a8ec7937fc0",
              "parentUUID": "3fefc28e-b555-4240-b8cd-257bf977e997",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Handles single words",
              "fullTitle": "snakeAllCapsToCamelCase Handles single words",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var input = 'WORD';\n(0, _chai.expect)((0, _utils.snakeAllCapsToCamelCase)(input)).to.equal('word');",
              "err": {},
              "uuid": "45006cbf-5e32-4ec7-b3f8-0d24cf997456",
              "parentUUID": "3fefc28e-b555-4240-b8cd-257bf977e997",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Handles empty strings",
              "fullTitle": "snakeAllCapsToCamelCase Handles empty strings",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var input = '';\n(0, _chai.expect)((0, _utils.snakeAllCapsToCamelCase)(input)).to.equal('');",
              "err": {},
              "uuid": "d8801bef-8bdb-481c-aa14-d898a7644c6a",
              "parentUUID": "3fefc28e-b555-4240-b8cd-257bf977e997",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Handles strings with no snake casing",
              "fullTitle": "snakeAllCapsToCamelCase Handles strings with no snake casing",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var input = 'NOSNAKECASING';\n(0, _chai.expect)((0, _utils.snakeAllCapsToCamelCase)(input)).to.equal('nosnakecasing');",
              "err": {},
              "uuid": "c53f2dfc-933f-43ef-8eb7-d32e7fef841b",
              "parentUUID": "3fefc28e-b555-4240-b8cd-257bf977e997",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "45c13f63-25eb-4e51-974d-8a8ec7937fc0",
            "45006cbf-5e32-4ec7-b3f8-0d24cf997456",
            "d8801bef-8bdb-481c-aa14-d898a7644c6a",
            "c53f2dfc-933f-43ef-8eb7-d32e7fef841b"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "5fc498e2-d70f-4b26-9dfc-eab441a1fc00",
          "title": "getLabelsFromConstants",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/21-0845/tests/utils.unit.spec.js",
          "file": "/src/applications/simple-forms/21-0845/tests/utils.unit.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should convert SNAKE_CASE keys to camelCase",
              "fullTitle": "getLabelsFromConstants should convert SNAKE_CASE keys to camelCase",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var constants = {\n  KEY_A: 'Value A',\n  KEY_B: 'Value B',\n  KEY_C: 'Value C'\n};\nvar expected = {\n  keyA: 'Value A',\n  keyB: 'Value B',\n  keyC: 'Value C'\n};\n(0, _chai.expect)((0, _utils.getLabelsFromConstants)(constants)).to.deep.equal(expected);",
              "err": {},
              "uuid": "a21aabe4-55fc-43ac-9730-f9dae2d1aa6f",
              "parentUUID": "5fc498e2-d70f-4b26-9dfc-eab441a1fc00",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should handle empty objects",
              "fullTitle": "getLabelsFromConstants should handle empty objects",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var constants = {};\nvar expected = {};\n(0, _chai.expect)((0, _utils.getLabelsFromConstants)(constants)).to.deep.equal(expected);",
              "err": {},
              "uuid": "b30c2f97-1f1d-4c2d-890b-3f2811fc4af5",
              "parentUUID": "5fc498e2-d70f-4b26-9dfc-eab441a1fc00",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a21aabe4-55fc-43ac-9730-f9dae2d1aa6f",
            "b30c2f97-1f1d-4c2d-890b-3f2811fc4af5"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "62b77277-7bef-4fbf-be60-12ecac8e6bb2",
          "title": "getEnumsFromConstants",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/21-0845/tests/utils.unit.spec.js",
          "file": "/src/applications/simple-forms/21-0845/tests/utils.unit.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should convert SNAKE_CASE keys to an array of camelCase strings",
              "fullTitle": "getEnumsFromConstants should convert SNAKE_CASE keys to an array of camelCase strings",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var constants = {\n  KEY_A: 'Value A',\n  KEY_B: 'Value B',\n  KEY_C: 'Value C'\n};\nvar expected = ['keyA', 'keyB', 'keyC'];\n(0, _chai.expect)((0, _utils.getEnumsFromConstants)(constants)).to.deep.equal(expected);",
              "err": {},
              "uuid": "7fda2cda-61e7-49c3-a843-16d6f9a3fa4a",
              "parentUUID": "62b77277-7bef-4fbf-be60-12ecac8e6bb2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should handle empty objects",
              "fullTitle": "getEnumsFromConstants should handle empty objects",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var constants = {};\nvar expected = [];\n(0, _chai.expect)((0, _utils.getEnumsFromConstants)(constants)).to.deep.equal(expected);",
              "err": {},
              "uuid": "87ed178b-42d6-4164-8a63-35650e02b801",
              "parentUUID": "62b77277-7bef-4fbf-be60-12ecac8e6bb2",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "7fda2cda-61e7-49c3-a843-16d6f9a3fa4a",
            "87ed178b-42d6-4164-8a63-35650e02b801"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "7c64e0dc-b737-4e20-a34f-af1a4abfec3b",
          "title": "ITFStatusLoadingIndicatorPage",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/21-0966/tests/components/ITFStatusLoadingIndicatorPage.unit.spec.jsx",
          "file": "/src/applications/simple-forms/21-0966/tests/components/ITFStatusLoadingIndicatorPage.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [
            {
              "title": "\"after each\" hook: cleanup in \"ITFStatusLoadingIndicatorPage\"",
              "fullTitle": "ITFStatusLoadingIndicatorPage \"after each\" hook: cleanup in \"ITFStatusLoadingIndicatorPage\"",
              "timedOut": false,
              "duration": 1,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "mountedContainers.forEach(cleanupAtContainer);",
              "err": {},
              "uuid": "f66bea25-1c8f-4964-b865-bc2a4d78dfae",
              "parentUUID": "7c64e0dc-b737-4e20-a34f-af1a4abfec3b",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "renders without crashing",
              "fullTitle": "ITFStatusLoadingIndicatorPage renders without crashing",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, _react2.render)(/*#__PURE__*/_react.default.createElement(_ITFStatusLoadingIndicatorPage.default, null));",
              "err": {},
              "uuid": "4802a11f-f886-4659-af44-d5c6a509283f",
              "parentUUID": "7c64e0dc-b737-4e20-a34f-af1a4abfec3b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "4802a11f-f886-4659-af44-d5c6a509283f"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "b11ec24e-cc97-4de5-9aa0-c74daefbd33d",
          "title": "form helper functions",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/21-0966/tests/config/helpers.unit.spec.js",
          "file": "/src/applications/simple-forms/21-0966/tests/config/helpers.unit.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "test defaults for helper functions",
              "fullTitle": "form helper functions test defaults for helper functions",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, _chai.expect)((0, _helpers.preparerIsVeteran)()).to.equal(false);\n(0, _chai.expect)((0, _helpers.preparerIsSurvivingDependent)()).to.equal(false);\n(0, _chai.expect)((0, _helpers.preparerIsThirdPartyToTheVeteran)()).to.equal(false);\n(0, _chai.expect)((0, _helpers.preparerIsThirdPartyToASurvivingDependent)()).to.equal(false);\n(0, _chai.expect)((0, _helpers.preparerIsThirdParty)()).to.equal(false);\n(0, _chai.expect)((0, _helpers.benefitSelectionChapterTitle)()).to.match(/Your benefit selection/i);\n(0, _chai.expect)((0, _helpers.hasActiveCompensationITF)()).to.equal(false);\n(0, _chai.expect)((0, _helpers.hasActivePensionITF)()).to.equal(false);\n(0, _chai.expect)((0, _helpers.noActiveITF)()).to.equal(true);\n(0, _chai.expect)((0, _helpers.hasVeteranPrefill)()).to.equal(false);\n(0, _chai.expect)((0, _helpers.statementOfTruthFullNamePath)()).to.equal('survivingDependentFullName');\n(0, _chai.expect)((0, _helpers.survivingDependentPersonalInformationChapterTitle)()).to.match(/Your personal information/i);\n(0, _chai.expect)((0, _helpers.survivingDependentContactInformationChapterTitle)()).to.match(/Your contact information/i);\n(0, _chai.expect)((0, _helpers.veteranPersonalInformationChapterTitle)()).to.match(/Veteran’s personal information/i);\n(0, _chai.expect)((0, _helpers.veteranContactInformationChapterTitle)()).to.match(/Veteran’s contact information/i);",
              "err": {},
              "uuid": "dedd536b-f065-4ad4-82df-c21673293ba6",
              "parentUUID": "b11ec24e-cc97-4de5-9aa0-c74daefbd33d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "provides the correct information for a veteran",
              "fullTitle": "form helper functions provides the correct information for a veteran",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var formData = {\n  preparerIdentification: 'VETERAN'\n};\n(0, _chai.expect)((0, _helpers.preparerIsVeteran)({\n  formData: formData\n})).to.equal(true);\n(0, _chai.expect)((0, _helpers.preparerIsSurvivingDependent)({\n  formData: formData\n})).to.equal(false);\n(0, _chai.expect)((0, _helpers.preparerIsThirdPartyToTheVeteran)({\n  formData: formData\n})).to.equal(false);\n(0, _chai.expect)((0, _helpers.preparerIsThirdPartyToASurvivingDependent)({\n  formData: formData\n})).to.equal(false);\n(0, _chai.expect)((0, _helpers.preparerIsThirdParty)({\n  formData: formData\n})).to.equal(false);\n(0, _chai.expect)((0, _helpers.benefitSelectionChapterTitle)({\n  formData: formData\n})).to.match(/Your/i);\n(0, _chai.expect)((0, _helpers.survivingDependentPersonalInformationChapterTitle)({\n  formData: formData\n})).to.match(/Your/i);\n(0, _chai.expect)((0, _helpers.survivingDependentContactInformationChapterTitle)({\n  formData: formData\n})).to.match(/Your/i);\n(0, _chai.expect)((0, _helpers.veteranPersonalInformationChapterTitle)({\n  formData: formData\n})).to.match(/Your/i);\n(0, _chai.expect)((0, _helpers.veteranContactInformationChapterTitle)({\n  formData: formData\n})).to.match(/Your/i);",
              "err": {},
              "uuid": "2a0ccaf8-bef9-45aa-8b32-e99937438869",
              "parentUUID": "b11ec24e-cc97-4de5-9aa0-c74daefbd33d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "provides the correct information for a surviving dependent",
              "fullTitle": "form helper functions provides the correct information for a surviving dependent",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var formData = {\n  preparerIdentification: 'SURVIVING_DEPENDENT'\n};\n(0, _chai.expect)((0, _helpers.preparerIsVeteran)({\n  formData: formData\n})).to.equal(false);\n(0, _chai.expect)((0, _helpers.preparerIsSurvivingDependent)({\n  formData: formData\n})).to.equal(true);\n(0, _chai.expect)((0, _helpers.preparerIsThirdPartyToTheVeteran)({\n  formData: formData\n})).to.equal(false);\n(0, _chai.expect)((0, _helpers.preparerIsThirdPartyToASurvivingDependent)({\n  formData: formData\n})).to.equal(false);\n(0, _chai.expect)((0, _helpers.preparerIsThirdParty)({\n  formData: formData\n})).to.equal(false);\n(0, _chai.expect)((0, _helpers.benefitSelectionChapterTitle)({\n  formData: formData\n})).to.match(/Your/i);\n(0, _chai.expect)((0, _helpers.survivingDependentPersonalInformationChapterTitle)({\n  formData: formData\n})).to.match(/Your/i);\n(0, _chai.expect)((0, _helpers.survivingDependentContactInformationChapterTitle)({\n  formData: formData\n})).to.match(/Your/i);\n(0, _chai.expect)((0, _helpers.veteranPersonalInformationChapterTitle)({\n  formData: formData\n})).to.match(/Veteran/i);\n(0, _chai.expect)((0, _helpers.veteranContactInformationChapterTitle)({\n  formData: formData\n})).to.match(/Veteran/i);",
              "err": {},
              "uuid": "f83891b7-a483-4c09-af0b-3683c1379b92",
              "parentUUID": "b11ec24e-cc97-4de5-9aa0-c74daefbd33d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "provides the correct information for a third party to the veteran",
              "fullTitle": "form helper functions provides the correct information for a third party to the veteran",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var formData = {\n  preparerIdentification: 'THIRD_PARTY_VETERAN'\n};\n(0, _chai.expect)((0, _helpers.preparerIsVeteran)({\n  formData: formData\n})).to.equal(false);\n(0, _chai.expect)((0, _helpers.preparerIsSurvivingDependent)({\n  formData: formData\n})).to.equal(false);\n(0, _chai.expect)((0, _helpers.preparerIsThirdPartyToTheVeteran)({\n  formData: formData\n})).to.equal(true);\n(0, _chai.expect)((0, _helpers.preparerIsThirdPartyToASurvivingDependent)({\n  formData: formData\n})).to.equal(false);\n(0, _chai.expect)((0, _helpers.preparerIsThirdParty)({\n  formData: formData\n})).to.equal(true);\n(0, _chai.expect)((0, _helpers.benefitSelectionChapterTitle)({\n  formData: formData\n})).to.match(/Veteran/i);\n(0, _chai.expect)((0, _helpers.survivingDependentPersonalInformationChapterTitle)({\n  formData: formData\n})).to.match(/Veteran/i);\n(0, _chai.expect)((0, _helpers.survivingDependentContactInformationChapterTitle)({\n  formData: formData\n})).to.match(/Veteran/i);\n(0, _chai.expect)((0, _helpers.veteranPersonalInformationChapterTitle)({\n  formData: formData\n})).to.match(/Veteran/i);\n(0, _chai.expect)((0, _helpers.veteranContactInformationChapterTitle)({\n  formData: formData\n})).to.match(/Veteran/i);",
              "err": {},
              "uuid": "f0ea7dc7-1c6b-456d-8450-8d05b9ce04de",
              "parentUUID": "b11ec24e-cc97-4de5-9aa0-c74daefbd33d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "provides the correct information for a third party to the surviving dependent",
              "fullTitle": "form helper functions provides the correct information for a third party to the surviving dependent",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var formData = {\n  preparerIdentification: 'THIRD_PARTY_SURVIVING_DEPENDENT'\n};\n(0, _chai.expect)((0, _helpers.preparerIsVeteran)({\n  formData: formData\n})).to.equal(false);\n(0, _chai.expect)((0, _helpers.preparerIsSurvivingDependent)({\n  formData: formData\n})).to.equal(false);\n(0, _chai.expect)((0, _helpers.preparerIsThirdPartyToTheVeteran)({\n  formData: formData\n})).to.equal(false);\n(0, _chai.expect)((0, _helpers.preparerIsThirdPartyToASurvivingDependent)({\n  formData: formData\n})).to.equal(true);\n(0, _chai.expect)((0, _helpers.preparerIsThirdParty)({\n  formData: formData\n})).to.equal(true);\n(0, _chai.expect)((0, _helpers.benefitSelectionChapterTitle)({\n  formData: formData\n})).to.match(/Claimant/i);\n(0, _chai.expect)((0, _helpers.survivingDependentPersonalInformationChapterTitle)({\n  formData: formData\n})).to.match(/Claimant/i);\n(0, _chai.expect)((0, _helpers.survivingDependentContactInformationChapterTitle)({\n  formData: formData\n})).to.match(/Claimant/i);\n(0, _chai.expect)((0, _helpers.veteranPersonalInformationChapterTitle)({\n  formData: formData\n})).to.match(/Veteran/i);\n(0, _chai.expect)((0, _helpers.veteranContactInformationChapterTitle)({\n  formData: formData\n})).to.match(/Veteran/i);",
              "err": {},
              "uuid": "2ba64330-2c1f-4f42-8e81-d188c59c6a72",
              "parentUUID": "b11ec24e-cc97-4de5-9aa0-c74daefbd33d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "provides a reasonble default",
              "fullTitle": "form helper functions provides a reasonble default",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var formData = {\n  preparerIdentification: ''\n};\n(0, _chai.expect)((0, _helpers.preparerIsVeteran)({\n  formData: formData\n})).to.equal(false);\n(0, _chai.expect)((0, _helpers.preparerIsSurvivingDependent)({\n  formData: formData\n})).to.equal(false);\n(0, _chai.expect)((0, _helpers.preparerIsThirdPartyToTheVeteran)({\n  formData: formData\n})).to.equal(false);\n(0, _chai.expect)((0, _helpers.preparerIsThirdPartyToASurvivingDependent)({\n  formData: formData\n})).to.equal(false);\n(0, _chai.expect)((0, _helpers.preparerIsThirdParty)({\n  formData: formData\n})).to.equal(false);\n(0, _chai.expect)((0, _helpers.benefitSelectionChapterTitle)({\n  formData: formData\n})).to.match(/Your/i);\n(0, _chai.expect)((0, _helpers.survivingDependentPersonalInformationChapterTitle)({\n  formData: formData\n})).to.match(/Your/i);\n(0, _chai.expect)((0, _helpers.survivingDependentContactInformationChapterTitle)({\n  formData: formData\n})).to.match(/Your/i);\n(0, _chai.expect)((0, _helpers.veteranPersonalInformationChapterTitle)({\n  formData: formData\n})).to.match(/Veteran/i);",
              "err": {},
              "uuid": "8c83eac5-e153-4b27-99f0-3109f35824ac",
              "parentUUID": "b11ec24e-cc97-4de5-9aa0-c74daefbd33d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "returns true for ITF functions when ITF formData values are present and false when values are empty objects",
              "fullTitle": "form helper functions returns true for ITF functions when ITF formData values are present and false when values are empty objects",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var formData = {\n  'view:activeCompensationITF': {\n    expirationDate: '2025-01-30T17:56:30.512Z',\n    status: 'active'\n  },\n  'view:activePensionITF': {}\n};\n(0, _chai.expect)((0, _helpers.hasActiveCompensationITF)({\n  formData: formData\n})).to.equal(true);\n(0, _chai.expect)((0, _helpers.hasActivePensionITF)({\n  formData: formData\n})).to.equal(false);\n(0, _chai.expect)((0, _helpers.noActiveITF)({\n  formData: formData\n})).to.equal(false);\nformData['view:activeCompensationITF'] = {};\nformData['view:activePensionITF'] = {\n  expirationDate: '2025-01-30T17:56:30.512Z',\n  status: 'active'\n};\n(0, _chai.expect)((0, _helpers.hasActiveCompensationITF)({\n  formData: formData\n})).to.equal(false);\n(0, _chai.expect)((0, _helpers.hasActivePensionITF)({\n  formData: formData\n})).to.equal(true);\n(0, _chai.expect)((0, _helpers.noActiveITF)({\n  formData: formData\n})).to.equal(false);",
              "err": {},
              "uuid": "aa7861af-2f51-48a4-a2da-400e81d94d41",
              "parentUUID": "b11ec24e-cc97-4de5-9aa0-c74daefbd33d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "returns true for noActiveITF when there are no active ITFs",
              "fullTitle": "form helper functions returns true for noActiveITF when there are no active ITFs",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var formData = {\n  'view:activeCompensationITF': {},\n  'view:activePensionITF': {}\n};\n(0, _chai.expect)((0, _helpers.noActiveITF)({\n  formData: formData\n})).to.equal(true);",
              "err": {},
              "uuid": "8400e44f-f337-4d1e-b70e-e60a912113b7",
              "parentUUID": "b11ec24e-cc97-4de5-9aa0-c74daefbd33d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [
            {
              "uuid": "0d58e45c-59a9-45e5-9adc-ef5d90759402",
              "title": "shouldSeeVeteranBenefitSelection",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/21-0966/tests/config/helpers.unit.spec.js",
              "file": "/src/applications/simple-forms/21-0966/tests/config/helpers.unit.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "returns true when veteran has no active ITFs",
                  "fullTitle": "form helper functions shouldSeeVeteranBenefitSelection returns true when veteran has no active ITFs",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var formData = {\n  preparerIdentification: 'VETERAN'\n};\n(0, _chai.expect)((0, _helpers.shouldSeeVeteranBenefitSelection)({\n  formData: formData\n})).to.equal(true);",
                  "err": {},
                  "uuid": "2199feec-329a-4448-98e8-cfaec7d3e758",
                  "parentUUID": "0d58e45c-59a9-45e5-9adc-ef5d90759402",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "returns false when veteran has active ITFs",
                  "fullTitle": "form helper functions shouldSeeVeteranBenefitSelection returns false when veteran has active ITFs",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var formData = {\n  preparerIdentification: 'VETERAN',\n  'view:activeCompensationITF': {\n    status: 'active'\n  }\n};\n(0, _chai.expect)((0, _helpers.shouldSeeVeteranBenefitSelection)({\n  formData: formData\n})).to.equal(false);",
                  "err": {},
                  "uuid": "48a69426-6f20-4e91-830f-23f7a3acffd1",
                  "parentUUID": "0d58e45c-59a9-45e5-9adc-ef5d90759402",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "returns false when non-veteran",
                  "fullTitle": "form helper functions shouldSeeVeteranBenefitSelection returns false when non-veteran",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var formData = {\n  preparerIdentification: 'THIRD_PARTY_SURVIVING_DEPENDENT'\n};\n(0, _chai.expect)((0, _helpers.shouldSeeVeteranBenefitSelection)({\n  formData: formData\n})).to.equal(false);",
                  "err": {},
                  "uuid": "0f4a633e-f48f-466b-86d7-faff43d4776a",
                  "parentUUID": "0d58e45c-59a9-45e5-9adc-ef5d90759402",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "2199feec-329a-4448-98e8-cfaec7d3e758",
                "48a69426-6f20-4e91-830f-23f7a3acffd1",
                "0f4a633e-f48f-466b-86d7-faff43d4776a"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "e2ee2986-b368-4a83-8fe6-d283418702a2",
              "title": "shouldSeeVeteranBenefitSelectionCompensation",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/21-0966/tests/config/helpers.unit.spec.js",
              "file": "/src/applications/simple-forms/21-0966/tests/config/helpers.unit.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "returns true when veteran has active Pension ITFs",
                  "fullTitle": "form helper functions shouldSeeVeteranBenefitSelectionCompensation returns true when veteran has active Pension ITFs",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var formData = {\n  preparerIdentification: 'VETERAN',\n  'view:activePensionITF': {\n    status: 'active'\n  }\n};\n(0, _chai.expect)((0, _helpers.shouldSeeVeteranBenefitSelectionCompensation)({\n  formData: formData\n})).to.equal(true);",
                  "err": {},
                  "uuid": "52cc6346-6627-49d4-ae3d-8494da903065",
                  "parentUUID": "e2ee2986-b368-4a83-8fe6-d283418702a2",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "returns false when veteran has no active ITFs",
                  "fullTitle": "form helper functions shouldSeeVeteranBenefitSelectionCompensation returns false when veteran has no active ITFs",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var formData = {\n  preparerIdentification: 'VETERAN'\n};\n(0, _chai.expect)((0, _helpers.shouldSeeVeteranBenefitSelectionCompensation)({\n  formData: formData\n})).to.equal(false);",
                  "err": {},
                  "uuid": "3c7ce0d9-abf4-4a10-9a45-db68a4ef879e",
                  "parentUUID": "e2ee2986-b368-4a83-8fe6-d283418702a2",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "returns false when non-veteran",
                  "fullTitle": "form helper functions shouldSeeVeteranBenefitSelectionCompensation returns false when non-veteran",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var formData = {\n  preparerIdentification: 'THIRD_PARTY_SURVIVING_DEPENDENT'\n};\n(0, _chai.expect)((0, _helpers.shouldSeeVeteranBenefitSelectionCompensation)({\n  formData: formData\n})).to.equal(false);",
                  "err": {},
                  "uuid": "d3890f46-f28c-4631-acaa-d0d1c71fa282",
                  "parentUUID": "e2ee2986-b368-4a83-8fe6-d283418702a2",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "52cc6346-6627-49d4-ae3d-8494da903065",
                "3c7ce0d9-abf4-4a10-9a45-db68a4ef879e",
                "d3890f46-f28c-4631-acaa-d0d1c71fa282"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "966b74ac-b953-4dbf-8d17-f3a798045a7f",
              "title": "shouldSeeVeteranBenefitSelectionPension",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/21-0966/tests/config/helpers.unit.spec.js",
              "file": "/src/applications/simple-forms/21-0966/tests/config/helpers.unit.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "returns true when veteran has active Compensation ITFs",
                  "fullTitle": "form helper functions shouldSeeVeteranBenefitSelectionPension returns true when veteran has active Compensation ITFs",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var formData = {\n  preparerIdentification: 'VETERAN',\n  'view:activeCompensationITF': {\n    status: 'active'\n  }\n};\n(0, _chai.expect)((0, _helpers.shouldSeeVeteranBenefitSelectionPension)({\n  formData: formData\n})).to.equal(true);",
                  "err": {},
                  "uuid": "9e8cdc0d-0aac-44ad-b2c3-f5d27bef3047",
                  "parentUUID": "966b74ac-b953-4dbf-8d17-f3a798045a7f",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "returns false when veteran has no active ITFs",
                  "fullTitle": "form helper functions shouldSeeVeteranBenefitSelectionPension returns false when veteran has no active ITFs",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var formData = {\n  preparerIdentification: 'VETERAN'\n};\n(0, _chai.expect)((0, _helpers.shouldSeeVeteranBenefitSelectionPension)({\n  formData: formData\n})).to.equal(false);",
                  "err": {},
                  "uuid": "2fc0b155-5ed3-45c7-9bab-f9a56208b021",
                  "parentUUID": "966b74ac-b953-4dbf-8d17-f3a798045a7f",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "returns false when non-veteran",
                  "fullTitle": "form helper functions shouldSeeVeteranBenefitSelectionPension returns false when non-veteran",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var formData = {\n  preparerIdentification: 'THIRD_PARTY_SURVIVING_DEPENDENT'\n};\n(0, _chai.expect)((0, _helpers.shouldSeeVeteranBenefitSelectionPension)({\n  formData: formData\n})).to.equal(false);",
                  "err": {},
                  "uuid": "5eb8a62b-1415-4265-b3c0-8a6c863b0f60",
                  "parentUUID": "966b74ac-b953-4dbf-8d17-f3a798045a7f",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "9e8cdc0d-0aac-44ad-b2c3-f5d27bef3047",
                "2fc0b155-5ed3-45c7-9bab-f9a56208b021",
                "5eb8a62b-1415-4265-b3c0-8a6c863b0f60"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "34a6aeb1-5e39-4344-9c50-1eae8767dbe4",
              "title": "preparerIsSurvivingDependentOrThirdPartyToSurvivingDependent",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/21-0966/tests/config/helpers.unit.spec.js",
              "file": "/src/applications/simple-forms/21-0966/tests/config/helpers.unit.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "returns true when preparer is surviving dependent",
                  "fullTitle": "form helper functions preparerIsSurvivingDependentOrThirdPartyToSurvivingDependent returns true when preparer is surviving dependent",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var formData = {\n  preparerIdentification: _constants.preparerIdentifications.survivingDependent\n};\n(0, _chai.expect)((0, _helpers.preparerIsSurvivingDependentOrThirdPartyToSurvivingDependent)({\n  formData: formData\n})).to.equal(true);",
                  "err": {},
                  "uuid": "890ceec8-375f-4757-8669-6c99eeba2697",
                  "parentUUID": "34a6aeb1-5e39-4344-9c50-1eae8767dbe4",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "returns true when preparer is third party to surviving dependent",
                  "fullTitle": "form helper functions preparerIsSurvivingDependentOrThirdPartyToSurvivingDependent returns true when preparer is third party to surviving dependent",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var formData = {\n  preparerIdentification: _constants.preparerIdentifications.thirdPartySurvivingDependent\n};\n(0, _chai.expect)((0, _helpers.preparerIsSurvivingDependentOrThirdPartyToSurvivingDependent)({\n  formData: formData\n})).to.equal(true);",
                  "err": {},
                  "uuid": "d8665a74-21f3-47c0-a43b-a63aae64a045",
                  "parentUUID": "34a6aeb1-5e39-4344-9c50-1eae8767dbe4",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "returns false when preparer is not third party or third party to surviving dependent",
                  "fullTitle": "form helper functions preparerIsSurvivingDependentOrThirdPartyToSurvivingDependent returns false when preparer is not third party or third party to surviving dependent",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var formData = {\n  preparerIdentification: _constants.preparerIdentifications.veteran\n};\n(0, _chai.expect)((0, _helpers.preparerIsSurvivingDependentOrThirdPartyToSurvivingDependent)({\n  formData: formData\n})).to.equal(false);",
                  "err": {},
                  "uuid": "ba4c63f4-35dc-427b-8dc9-0ca6e4d26817",
                  "parentUUID": "34a6aeb1-5e39-4344-9c50-1eae8767dbe4",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "890ceec8-375f-4757-8669-6c99eeba2697",
                "d8665a74-21f3-47c0-a43b-a63aae64a045",
                "ba4c63f4-35dc-427b-8dc9-0ca6e4d26817"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "368ddeb5-078e-45a2-a43c-d6674d53a742",
              "title": "preparerIsVeteranAndHasPrefill",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/21-0966/tests/config/helpers.unit.spec.js",
              "file": "/src/applications/simple-forms/21-0966/tests/config/helpers.unit.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "returns true when preparer is veteran and has prefill",
                  "fullTitle": "form helper functions preparerIsVeteranAndHasPrefill returns true when preparer is veteran and has prefill",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var formData = {\n  preparerIdentification: _constants.preparerIdentifications.veteran,\n  'view:veteranPrefillStore': {\n    fullName: {\n      first: 'Marty',\n      last: 'McFly'\n    },\n    ssn: '111519551',\n    dateOfBirth: '1955-11-15'\n  }\n};\n(0, _chai.expect)((0, _helpers.preparerIsVeteranAndHasPrefill)({\n  formData: formData\n})).to.equal(true);",
                  "err": {},
                  "uuid": "4d295b94-40de-449c-a0ed-09e037f4b40e",
                  "parentUUID": "368ddeb5-078e-45a2-a43c-d6674d53a742",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "returns false when preparer is veteran and does not have prefill",
                  "fullTitle": "form helper functions preparerIsVeteranAndHasPrefill returns false when preparer is veteran and does not have prefill",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var formData = {\n  preparerIdentification: _constants.preparerIdentifications.veteran\n};\n(0, _chai.expect)((0, _helpers.preparerIsVeteranAndHasPrefill)({\n  formData: formData\n})).to.equal(false);",
                  "err": {},
                  "uuid": "ff0e570b-5d91-4518-a6bb-8a83d69bb7c9",
                  "parentUUID": "368ddeb5-078e-45a2-a43c-d6674d53a742",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "returns false when preparer is not veteran and has prefill",
                  "fullTitle": "form helper functions preparerIsVeteranAndHasPrefill returns false when preparer is not veteran and has prefill",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var formData = {\n  preparerIdentification: _constants.preparerIdentifications.thirdPartySurvivingDependent,\n  'view:veteranPrefillStore': {\n    fullName: {\n      first: 'Marty',\n      last: 'McFly'\n    },\n    ssn: '111519551',\n    dateOfBirth: '1955-11-15'\n  }\n};\n(0, _chai.expect)((0, _helpers.preparerIsVeteranAndHasPrefill)({\n  formData: formData\n})).to.equal(false);",
                  "err": {},
                  "uuid": "872749a5-e598-4cee-8f35-2c1b9bde514e",
                  "parentUUID": "368ddeb5-078e-45a2-a43c-d6674d53a742",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "4d295b94-40de-449c-a0ed-09e037f4b40e",
                "ff0e570b-5d91-4518-a6bb-8a83d69bb7c9",
                "872749a5-e598-4cee-8f35-2c1b9bde514e"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "e2b22aaf-bdf3-4988-9280-ffc14150b5d6",
              "title": "shouldSeeVeteranPersonalInformation",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/21-0966/tests/config/helpers.unit.spec.js",
              "file": "/src/applications/simple-forms/21-0966/tests/config/helpers.unit.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "returns true if preparer is third party to veteran",
                  "fullTitle": "form helper functions shouldSeeVeteranPersonalInformation returns true if preparer is third party to veteran",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var formData = {\n  preparerIdentification: _constants.preparerIdentifications.thirdPartyVeteran\n};\n(0, _chai.expect)((0, _helpers.shouldSeeVeteranPersonalInformation)({\n  formData: formData\n})).to.equal(true);",
                  "err": {},
                  "uuid": "7fe9c1d3-a9d7-4121-8e18-75e99834248e",
                  "parentUUID": "e2b22aaf-bdf3-4988-9280-ffc14150b5d6",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "returns true if preparer is veteran and does not have prefill",
                  "fullTitle": "form helper functions shouldSeeVeteranPersonalInformation returns true if preparer is veteran and does not have prefill",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var formData = {\n  preparerIdentification: _constants.preparerIdentifications.veteran\n};\n(0, _chai.expect)((0, _helpers.shouldSeeVeteranPersonalInformation)({\n  formData: formData\n})).to.equal(true);",
                  "err": {},
                  "uuid": "def9f5ef-5cf2-436f-9918-52442efcc2de",
                  "parentUUID": "e2b22aaf-bdf3-4988-9280-ffc14150b5d6",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "returns false if preparer is veteran and has prefill",
                  "fullTitle": "form helper functions shouldSeeVeteranPersonalInformation returns false if preparer is veteran and has prefill",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var formData = {\n  preparerIdentification: _constants.preparerIdentifications.veteran,\n  'view:veteranPrefillStore': {\n    fullName: {\n      first: 'Marty',\n      last: 'McFly'\n    },\n    ssn: '111519551',\n    dateOfBirth: '1955-11-15'\n  }\n};\n(0, _chai.expect)((0, _helpers.shouldSeeVeteranPersonalInformation)({\n  formData: formData\n})).to.equal(false);",
                  "err": {},
                  "uuid": "3cdbacea-9ccb-4bff-9533-3d51a9fc467b",
                  "parentUUID": "e2b22aaf-bdf3-4988-9280-ffc14150b5d6",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "returns false if preparer is not veteran or third party to veteran",
                  "fullTitle": "form helper functions shouldSeeVeteranPersonalInformation returns false if preparer is not veteran or third party to veteran",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var formData = {\n  preparerIdentification: _constants.preparerIdentifications.thirdPartySurvivingDependent\n};\n(0, _chai.expect)((0, _helpers.shouldSeeVeteranPersonalInformation)({\n  formData: formData\n})).to.equal(false);",
                  "err": {},
                  "uuid": "9b27cf21-2d27-4763-a4ce-f7c86e7c777f",
                  "parentUUID": "e2b22aaf-bdf3-4988-9280-ffc14150b5d6",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "7fe9c1d3-a9d7-4121-8e18-75e99834248e",
                "def9f5ef-5cf2-436f-9918-52442efcc2de",
                "3cdbacea-9ccb-4bff-9533-3d51a9fc467b",
                "9b27cf21-2d27-4763-a4ce-f7c86e7c777f"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "81e0147d-be88-4ee3-b80d-70216fe524ea",
              "title": "shouldSeeVeteranIdentificationInformation",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/21-0966/tests/config/helpers.unit.spec.js",
              "file": "/src/applications/simple-forms/21-0966/tests/config/helpers.unit.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "returns true if preparer is not veteran",
                  "fullTitle": "form helper functions shouldSeeVeteranIdentificationInformation returns true if preparer is not veteran",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var formData = {\n  preparerIdentification: _constants.preparerIdentifications.thirdPartyVeteran\n};\n(0, _chai.expect)((0, _helpers.shouldSeeVeteranIdentificationInformation)({\n  formData: formData\n})).to.equal(true);",
                  "err": {},
                  "uuid": "9a95b682-f1f2-4388-a6d5-8b7eee19b9a2",
                  "parentUUID": "81e0147d-be88-4ee3-b80d-70216fe524ea",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "returns true if preparer is veteran and does not have prefill",
                  "fullTitle": "form helper functions shouldSeeVeteranIdentificationInformation returns true if preparer is veteran and does not have prefill",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var formData = {\n  preparerIdentification: _constants.preparerIdentifications.veteran\n};\n(0, _chai.expect)((0, _helpers.shouldSeeVeteranIdentificationInformation)({\n  formData: formData\n})).to.equal(true);",
                  "err": {},
                  "uuid": "39ce3972-5a61-477e-a068-26e7cea5c765",
                  "parentUUID": "81e0147d-be88-4ee3-b80d-70216fe524ea",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "returns false if preparer is veteran and has prefill",
                  "fullTitle": "form helper functions shouldSeeVeteranIdentificationInformation returns false if preparer is veteran and has prefill",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var formData = {\n  preparerIdentification: _constants.preparerIdentifications.veteran,\n  'view:veteranPrefillStore': {\n    fullName: {\n      first: 'Marty',\n      last: 'McFly'\n    },\n    ssn: '111519551',\n    dateOfBirth: '1955-11-15'\n  }\n};\n(0, _chai.expect)((0, _helpers.shouldSeeVeteranIdentificationInformation)({\n  formData: formData\n})).to.equal(false);",
                  "err": {},
                  "uuid": "4098c717-6073-486f-93b4-f8d7943a0c81",
                  "parentUUID": "81e0147d-be88-4ee3-b80d-70216fe524ea",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "9a95b682-f1f2-4388-a6d5-8b7eee19b9a2",
                "39ce3972-5a61-477e-a068-26e7cea5c765",
                "4098c717-6073-486f-93b4-f8d7943a0c81"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "2f2f3af7-e151-4597-a947-c15a8d0172c8",
              "title": "getting the Intents to File mid-form",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/21-0966/tests/config/helpers.unit.spec.js",
              "file": "/src/applications/simple-forms/21-0966/tests/config/helpers.unit.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "uses goNextPath when user is not a veteran",
                  "fullTitle": "form helper functions getting the Intents to File mid-form uses goNextPath when user is not a veteran",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var goPath = _sinon.default.spy();\nvar goNextPath = _sinon.default.spy();\nvar setFormData = _sinon.default.spy();\nvar formData = {\n  preparerIdentification: 'not-a-veteran'\n};\n(0, _helpers.getIntentsToFile)({\n  formData: formData,\n  goPath: goPath,\n  goNextPath: goNextPath,\n  setFormData: setFormData\n});\n(0, _chai.expect)(goNextPath.called).to.eq(true);\n(0, _chai.expect)(goPath.called).to.eq(false);\n(0, _chai.expect)(setFormData.called).to.eq(false);",
                  "err": {},
                  "uuid": "56e27415-8d30-42e3-929c-b2c81712e78e",
                  "parentUUID": "2f2f3af7-e151-4597-a947-c15a8d0172c8",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [
                {
                  "uuid": "88facbf5-a72f-447d-9642-547219269679",
                  "title": "user is a veteran",
                  "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/21-0966/tests/config/helpers.unit.spec.js",
                  "file": "/src/applications/simple-forms/21-0966/tests/config/helpers.unit.spec.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "uses goPath",
                      "fullTitle": "form helper functions getting the Intents to File mid-form user is a veteran uses goPath",
                      "timedOut": false,
                      "duration": 0,
                      "state": "pending",
                      "speed": null,
                      "pass": false,
                      "fail": false,
                      "pending": true,
                      "context": null,
                      "code": "",
                      "err": {},
                      "uuid": "95eb2a94-991e-4ec1-9587-9a8c66a2ef38",
                      "parentUUID": "88facbf5-a72f-447d-9642-547219269679",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "sets the form data after the call",
                      "fullTitle": "form helper functions getting the Intents to File mid-form user is a veteran sets the form data after the call",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "slow",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "var compensationIntent = {};\nvar pensionIntent = {};\nvar goPath = _sinon.default.spy();\nvar goNextPath = _sinon.default.spy();\nvar setFormData = _sinon.default.spy();\nvar formData = {\n  preparerIdentification: _constants.preparerIdentifications.veteran\n};\n(0, _helpers.goPathAfterGettingITF)({\n  compensationIntent: compensationIntent,\n  pensionIntent: pensionIntent\n}, formData, goPath, goNextPath, setFormData);\n(0, _chai.expect)(setFormData.called).to.eq(true);",
                      "err": {},
                      "uuid": "3eb48750-38ad-425c-846b-543435831143",
                      "parentUUID": "88facbf5-a72f-447d-9642-547219269679",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [
                    {
                      "uuid": "720fb3e9-f0d7-4d2c-9896-8f2e639a968d",
                      "title": "vet has active compensation and pension ITFs",
                      "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/21-0966/tests/config/helpers.unit.spec.js",
                      "file": "/src/applications/simple-forms/21-0966/tests/config/helpers.unit.spec.js",
                      "beforeHooks": [],
                      "afterHooks": [],
                      "tests": [
                        {
                          "title": "sets the form data after the call",
                          "fullTitle": "form helper functions getting the Intents to File mid-form user is a veteran vet has active compensation and pension ITFs sets the form data after the call",
                          "timedOut": false,
                          "duration": 1,
                          "state": "passed",
                          "speed": "slow",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "var compensationIntent = {\n  status: 'active'\n};\nvar pensionIntent = {\n  status: 'active'\n};\nvar goPath = _sinon.default.spy();\nvar goNextPath = _sinon.default.spy();\nvar setFormData = _sinon.default.spy();\nvar formData = {\n  preparerIdentification: _constants.preparerIdentifications.veteran\n};\n(0, _helpers.goPathAfterGettingITF)({\n  compensationIntent: compensationIntent,\n  pensionIntent: pensionIntent\n}, formData, goPath, goNextPath, setFormData);\n(0, _chai.expect)(goPath.calledWith('confirmation')).to.eq(true);",
                          "err": {},
                          "uuid": "4741c6f9-ec48-41ea-b7f1-4487593f0360",
                          "parentUUID": "720fb3e9-f0d7-4d2c-9896-8f2e639a968d",
                          "isHook": false,
                          "skipped": false
                        }
                      ],
                      "suites": [],
                      "passes": [
                        "4741c6f9-ec48-41ea-b7f1-4487593f0360"
                      ],
                      "failures": [],
                      "pending": [],
                      "skipped": [],
                      "duration": 1,
                      "root": false,
                      "rootEmpty": false,
                      "_timeout": 10000
                    },
                    {
                      "uuid": "0eab6f85-281a-4a3c-a009-9be2829ea855",
                      "title": "vet has active compensation ITF",
                      "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/21-0966/tests/config/helpers.unit.spec.js",
                      "file": "/src/applications/simple-forms/21-0966/tests/config/helpers.unit.spec.js",
                      "beforeHooks": [],
                      "afterHooks": [],
                      "tests": [
                        {
                          "title": "sets the form data after the call",
                          "fullTitle": "form helper functions getting the Intents to File mid-form user is a veteran vet has active compensation ITF sets the form data after the call",
                          "timedOut": false,
                          "duration": 0,
                          "state": "passed",
                          "speed": "fast",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "var compensationIntent = {\n  status: 'active'\n};\nvar pensionIntent = {};\nvar goPath = _sinon.default.spy();\nvar goNextPath = _sinon.default.spy();\nvar setFormData = _sinon.default.spy();\nvar formData = {\n  preparerIdentification: _constants.preparerIdentifications.veteran\n};\n(0, _helpers.goPathAfterGettingITF)({\n  compensationIntent: compensationIntent,\n  pensionIntent: pensionIntent\n}, formData, goPath, goNextPath, setFormData);\n(0, _chai.expect)(goPath.calledWith('veteran-benefit-selection-pension')).to.eq(true);",
                          "err": {},
                          "uuid": "c3727d58-47b0-4d1c-9790-a2de796efa9b",
                          "parentUUID": "0eab6f85-281a-4a3c-a009-9be2829ea855",
                          "isHook": false,
                          "skipped": false
                        }
                      ],
                      "suites": [],
                      "passes": [
                        "c3727d58-47b0-4d1c-9790-a2de796efa9b"
                      ],
                      "failures": [],
                      "pending": [],
                      "skipped": [],
                      "duration": 0,
                      "root": false,
                      "rootEmpty": false,
                      "_timeout": 10000
                    },
                    {
                      "uuid": "448207b6-74e0-4e64-a09b-fddcc46a2798",
                      "title": "vet has active pension ITF",
                      "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/21-0966/tests/config/helpers.unit.spec.js",
                      "file": "/src/applications/simple-forms/21-0966/tests/config/helpers.unit.spec.js",
                      "beforeHooks": [],
                      "afterHooks": [],
                      "tests": [
                        {
                          "title": "sets the form data after the call",
                          "fullTitle": "form helper functions getting the Intents to File mid-form user is a veteran vet has active pension ITF sets the form data after the call",
                          "timedOut": false,
                          "duration": 0,
                          "state": "passed",
                          "speed": "fast",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "var compensationIntent = {};\nvar pensionIntent = {\n  status: 'active'\n};\nvar goPath = _sinon.default.spy();\nvar goNextPath = _sinon.default.spy();\nvar setFormData = _sinon.default.spy();\nvar formData = {\n  preparerIdentification: _constants.preparerIdentifications.veteran\n};\n(0, _helpers.goPathAfterGettingITF)({\n  compensationIntent: compensationIntent,\n  pensionIntent: pensionIntent\n}, formData, goPath, goNextPath, setFormData);\n(0, _chai.expect)(goPath.calledWith('veteran-benefit-selection-compensation')).to.eq(true);",
                          "err": {},
                          "uuid": "0d3d3bd2-cb4f-41e5-9535-3c42d01f46b3",
                          "parentUUID": "448207b6-74e0-4e64-a09b-fddcc46a2798",
                          "isHook": false,
                          "skipped": false
                        }
                      ],
                      "suites": [],
                      "passes": [
                        "0d3d3bd2-cb4f-41e5-9535-3c42d01f46b3"
                      ],
                      "failures": [],
                      "pending": [],
                      "skipped": [],
                      "duration": 0,
                      "root": false,
                      "rootEmpty": false,
                      "_timeout": 10000
                    },
                    {
                      "uuid": "96ee455d-870e-4ccd-8370-adf764e04d0c",
                      "title": "vet has no active ITFs",
                      "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/21-0966/tests/config/helpers.unit.spec.js",
                      "file": "/src/applications/simple-forms/21-0966/tests/config/helpers.unit.spec.js",
                      "beforeHooks": [],
                      "afterHooks": [],
                      "tests": [
                        {
                          "title": "sets the form data after the call",
                          "fullTitle": "form helper functions getting the Intents to File mid-form user is a veteran vet has no active ITFs sets the form data after the call",
                          "timedOut": false,
                          "duration": 1,
                          "state": "passed",
                          "speed": "slow",
                          "pass": true,
                          "fail": false,
                          "pending": false,
                          "context": null,
                          "code": "var compensationIntent = {};\nvar pensionIntent = {};\nvar goPath = _sinon.default.spy();\nvar goNextPath = _sinon.default.spy();\nvar setFormData = _sinon.default.spy();\nvar formData = {\n  preparerIdentification: _constants.preparerIdentifications.veteran\n};\n(0, _helpers.goPathAfterGettingITF)({\n  compensationIntent: compensationIntent,\n  pensionIntent: pensionIntent\n}, formData, goPath, goNextPath, setFormData);\n(0, _chai.expect)(goNextPath.called).to.eq(true);",
                          "err": {},
                          "uuid": "a63682cd-87c4-4ea0-a8e3-14b8a4133324",
                          "parentUUID": "96ee455d-870e-4ccd-8370-adf764e04d0c",
                          "isHook": false,
                          "skipped": false
                        }
                      ],
                      "suites": [],
                      "passes": [
                        "a63682cd-87c4-4ea0-a8e3-14b8a4133324"
                      ],
                      "failures": [],
                      "pending": [],
                      "skipped": [],
                      "duration": 1,
                      "root": false,
                      "rootEmpty": false,
                      "_timeout": 10000
                    }
                  ],
                  "passes": [
                    "3eb48750-38ad-425c-846b-543435831143"
                  ],
                  "failures": [],
                  "pending": [
                    "95eb2a94-991e-4ec1-9587-9a8c66a2ef38"
                  ],
                  "skipped": [],
                  "duration": 1,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 10000
                }
              ],
              "passes": [
                "56e27415-8d30-42e3-929c-b2c81712e78e"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "50789f0d-8286-485f-a7f4-bbe48b8a5367",
              "title": "navigates to the correct page based on form data",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/21-0966/tests/config/helpers.unit.spec.js",
              "file": "/src/applications/simple-forms/21-0966/tests/config/helpers.unit.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "uses goNextPath when benefitSelectionPension is true",
                  "fullTitle": "form helper functions navigates to the correct page based on form data uses goNextPath when benefitSelectionPension is true",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var goPath = _sinon.default.spy();\nvar goNextPath = _sinon.default.spy();\nvar formData = {\n  benefitSelectionPension: true\n};\n(0, _helpers.bypassFormCheck)('benefitSelectionPension', {\n  formData: formData,\n  goPath: goPath,\n  goNextPath: goNextPath\n});\n(0, _chai.expect)(goNextPath.called).to.eq(true);\n(0, _chai.expect)(goPath.called).to.eq(false);",
                  "err": {},
                  "uuid": "39f7c980-5f3e-40a2-a8ed-33bc363f583b",
                  "parentUUID": "50789f0d-8286-485f-a7f4-bbe48b8a5367",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "uses goPath when benefitSelectionPension is not true",
                  "fullTitle": "form helper functions navigates to the correct page based on form data uses goPath when benefitSelectionPension is not true",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var goPath = _sinon.default.spy();\nvar goNextPath = _sinon.default.spy();\nvar formData = {};\n(0, _helpers.bypassFormCheck)('benefitSelectionPension', {\n  formData: formData,\n  goPath: goPath,\n  goNextPath: goNextPath\n});\n(0, _chai.expect)(goPath.called).to.eq(true);\n(0, _chai.expect)(goNextPath.called).to.eq(false);",
                  "err": {},
                  "uuid": "d46d13c9-9df3-4148-bd32-40d1f769dcb4",
                  "parentUUID": "50789f0d-8286-485f-a7f4-bbe48b8a5367",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "uses goNextPath when benefitSelectionCompensation is true",
                  "fullTitle": "form helper functions navigates to the correct page based on form data uses goNextPath when benefitSelectionCompensation is true",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var goPath = _sinon.default.spy();\nvar goNextPath = _sinon.default.spy();\nvar formData = {\n  benefitSelectionCompensation: true\n};\n(0, _helpers.bypassFormCheck)('benefitSelectionCompensation', {\n  formData: formData,\n  goPath: goPath,\n  goNextPath: goNextPath\n});\n(0, _chai.expect)(goNextPath.called).to.eq(true);\n(0, _chai.expect)(goPath.called).to.eq(false);",
                  "err": {},
                  "uuid": "133a79f0-13d8-4e71-a05f-a3e058d58a5e",
                  "parentUUID": "50789f0d-8286-485f-a7f4-bbe48b8a5367",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "uses goPath when benefitSelectionCompensation is not true",
                  "fullTitle": "form helper functions navigates to the correct page based on form data uses goPath when benefitSelectionCompensation is not true",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var goPath = _sinon.default.spy();\nvar goNextPath = _sinon.default.spy();\nvar formData = {};\n(0, _helpers.bypassFormCheck)('benefitSelectionCompensation', {\n  formData: formData,\n  goPath: goPath,\n  goNextPath: goNextPath\n});\n(0, _chai.expect)(goPath.called).to.eq(true);\n(0, _chai.expect)(goNextPath.called).to.eq(false);",
                  "err": {},
                  "uuid": "3d146412-e23d-4543-8ec6-1992c3de4b07",
                  "parentUUID": "50789f0d-8286-485f-a7f4-bbe48b8a5367",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "39f7c980-5f3e-40a2-a8ed-33bc363f583b",
                "d46d13c9-9df3-4148-bd32-40d1f769dcb4",
                "133a79f0-13d8-4e71-a05f-a3e058d58a5e",
                "3d146412-e23d-4543-8ec6-1992c3de4b07"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            }
          ],
          "passes": [
            "dedd536b-f065-4ad4-82df-c21673293ba6",
            "2a0ccaf8-bef9-45aa-8b32-e99937438869",
            "f83891b7-a483-4c09-af0b-3683c1379b92",
            "f0ea7dc7-1c6b-456d-8450-8d05b9ce04de",
            "2ba64330-2c1f-4f42-8e81-d188c59c6a72",
            "8c83eac5-e153-4b27-99f0-3109f35824ac",
            "aa7861af-2f51-48a4-a2da-400e81d94d41",
            "8400e44f-f337-4d1e-b70e-e60a912113b7"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 5,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "37477192-fc36-406b-a588-cbf668c66231",
          "title": "hasVeteranPrefill",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/21-0966/tests/config/helpers.unit.spec.js",
          "file": "/src/applications/simple-forms/21-0966/tests/config/helpers.unit.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "returns true when veteran prefill data is present",
              "fullTitle": "hasVeteranPrefill returns true when veteran prefill data is present",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var formData = {\n  'view:veteranPrefillStore': {\n    fullName: {\n      first: 'Marty',\n      last: 'McFly'\n    },\n    ssn: '111519551',\n    dateOfBirth: '1955-11-15'\n  }\n};\n(0, _chai.expect)((0, _helpers.hasVeteranPrefill)({\n  formData: formData\n})).to.be.true;",
              "err": {},
              "uuid": "b51c5e2e-1914-4b31-9327-ac7c37c7643e",
              "parentUUID": "37477192-fc36-406b-a588-cbf668c66231",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "returns false when any part of the veteran prefill data is absent",
              "fullTitle": "hasVeteranPrefill returns false when any part of the veteran prefill data is absent",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var formData = {\n  'view:veteranPrefillStore': {\n    fullName: {\n      first: 'Marty',\n      last: 'McFly'\n    },\n    dateOfBirth: '1955-11-15'\n  }\n};\n(0, _chai.expect)((0, _helpers.hasVeteranPrefill)({\n  formData: formData\n})).to.be.false;",
              "err": {},
              "uuid": "56c558a1-bbb0-45e9-a898-0e06b2070528",
              "parentUUID": "37477192-fc36-406b-a588-cbf668c66231",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "b51c5e2e-1914-4b31-9327-ac7c37c7643e",
            "56c558a1-bbb0-45e9-a898-0e06b2070528"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "3279278c-a600-40c4-ba0b-937eea0c82c3",
          "title": "initializeFormDataWithPreparerIdentificationAndPrefill",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/21-0966/tests/config/helpers.unit.spec.js",
          "file": "/src/applications/simple-forms/21-0966/tests/config/helpers.unit.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "returns an initialized formData object with preparerIdentification selection and prefill data",
              "fullTitle": "initializeFormDataWithPreparerIdentificationAndPrefill returns an initialized formData object with preparerIdentification selection and prefill data",
              "timedOut": false,
              "duration": 15,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var veteranPrefillStore = {\n  fullName: {\n    first: 'John',\n    last: 'Dude'\n  },\n  ssn: '111223333',\n  dateOfBirth: '2000-10-10'\n};\n(0, _chai.expect)((0, _helpers.initializeFormDataWithPreparerIdentificationAndPrefill)(_constants.preparerIdentifications.veteran, veteranPrefillStore)).to.deep.equal(_objectSpread(_objectSpread({}, (0, _exportsFile.createInitialState)(_form.default).data), {}, {\n  preparerIdentification: _constants.preparerIdentifications.veteran,\n  'view:veteranPrefillStore': veteranPrefillStore\n}));",
              "err": {},
              "uuid": "c3a7e559-9400-47c2-93e0-00510d9468d7",
              "parentUUID": "3279278c-a600-40c4-ba0b-937eea0c82c3",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "c3a7e559-9400-47c2-93e0-00510d9468d7"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 15,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "d84d559c-efa0-42cd-951a-f99c02617db6",
          "title": "statementOfTruthFullNamePath",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/21-0966/tests/config/helpers.unit.spec.js",
          "file": "/src/applications/simple-forms/21-0966/tests/config/helpers.unit.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "returns the required signature formData path for third parties",
              "fullTitle": "statementOfTruthFullNamePath returns the required signature formData path for third parties",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var formData = {\n  preparerIdentification: _constants.preparerIdentifications.thirdPartyVeteran\n};\n(0, _chai.expect)((0, _helpers.statementOfTruthFullNamePath)({\n  formData: formData\n})).to.equal('thirdPartyPreparerFullName');\nformData.preparerIdentification = _constants.preparerIdentifications.thirdPartySurvivingDependent;\n(0, _chai.expect)((0, _helpers.statementOfTruthFullNamePath)({\n  formData: formData\n})).to.equal('thirdPartyPreparerFullName');",
              "err": {},
              "uuid": "6ef3b6c7-688f-498a-b870-7a8a72955337",
              "parentUUID": "d84d559c-efa0-42cd-951a-f99c02617db6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "returns the required signature formData path for veterans",
              "fullTitle": "statementOfTruthFullNamePath returns the required signature formData path for veterans",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var formData = {\n  preparerIdentification: _constants.preparerIdentifications.veteran\n};\n(0, _chai.expect)((0, _helpers.statementOfTruthFullNamePath)({\n  formData: formData\n})).to.equal('veteranFullName');",
              "err": {},
              "uuid": "ce6412d0-c536-44d9-a6af-ed94cdf9d054",
              "parentUUID": "d84d559c-efa0-42cd-951a-f99c02617db6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "returns the required signature formData path for veterans with prefill",
              "fullTitle": "statementOfTruthFullNamePath returns the required signature formData path for veterans with prefill",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var formData = {\n  preparerIdentification: _constants.preparerIdentifications.veteran,\n  'view:veteranPrefillStore': {\n    fullName: {\n      first: 'Cheesy',\n      last: 'Grits'\n    },\n    dateOfBirth: '1995-12-21',\n    ssn: '555221111'\n  }\n};\n(0, _chai.expect)((0, _helpers.statementOfTruthFullNamePath)({\n  formData: formData\n})).to.equal('view:veteranPrefillStore.fullName');",
              "err": {},
              "uuid": "0641f284-98dc-4070-a5cd-c1cc3e82a173",
              "parentUUID": "d84d559c-efa0-42cd-951a-f99c02617db6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "returns the required signature formData path for non-third party surviving dependents",
              "fullTitle": "statementOfTruthFullNamePath returns the required signature formData path for non-third party surviving dependents",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var formData = {\n  preparerIdentification: _constants.preparerIdentifications.survivingDependent\n};\n(0, _chai.expect)((0, _helpers.statementOfTruthFullNamePath)({\n  formData: formData\n})).to.equal('survivingDependentFullName');",
              "err": {},
              "uuid": "eb7aa018-f5bf-40b2-b9c4-8bda35c93490",
              "parentUUID": "d84d559c-efa0-42cd-951a-f99c02617db6",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "6ef3b6c7-688f-498a-b870-7a8a72955337",
            "ce6412d0-c536-44d9-a6af-ed94cdf9d054",
            "0641f284-98dc-4070-a5cd-c1cc3e82a173",
            "eb7aa018-f5bf-40b2-b9c4-8bda35c93490"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "6bf7f755-6f0a-40d6-aec0-ec70f44d3b41",
          "title": "Confirmation Page helper functions",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/21-0966/tests/config/helpers.unit.spec.js",
          "file": "/src/applications/simple-forms/21-0966/tests/config/helpers.unit.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "determines if the form flow was bypassed to go directly to the confirmation page",
              "fullTitle": "Confirmation Page helper functions determines if the form flow was bypassed to go directly to the confirmation page",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var formData = {\n  benefitSelection: {}\n};\n(0, _chai.expect)((0, _helpers.confirmationPageFormBypassed)(formData)).to.be.true;\nformData.benefitSelection[_constants.veteranBenefits.COMPENSATION] = true;\n(0, _chai.expect)((0, _helpers.confirmationPageFormBypassed)(formData)).to.be.false;",
              "err": {},
              "uuid": "94156813-2539-46e5-a5d8-f03d64f5b288",
              "parentUUID": "6bf7f755-6f0a-40d6-aec0-ec70f44d3b41",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "returns the correct alert status depending on if the form was bypassed",
              "fullTitle": "Confirmation Page helper functions returns the correct alert status depending on if the form was bypassed",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var formData = {\n  benefitSelection: {}\n};\n(0, _chai.expect)((0, _helpers.confirmationPageFormBypassed)(formData)).to.be.true;\n(0, _chai.expect)((0, _helpers.confirmationPageAlertStatus)(formData)).to.equal('warning');\nformData.benefitSelection[_constants.veteranBenefits.PENSION] = true;\n(0, _chai.expect)((0, _helpers.confirmationPageFormBypassed)(formData)).to.be.false;\n(0, _chai.expect)((0, _helpers.confirmationPageAlertStatus)(formData)).to.equal('success');",
              "err": {},
              "uuid": "2c2e2576-4d75-494a-9866-9f23285523a0",
              "parentUUID": "6bf7f755-6f0a-40d6-aec0-ec70f44d3b41",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "returns the correct alert headline depending on if the form was bypassed",
              "fullTitle": "Confirmation Page helper functions returns the correct alert headline depending on if the form was bypassed",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var formData = {\n  benefitSelection: {}\n};\n(0, _chai.expect)((0, _helpers.confirmationPageFormBypassed)(formData)).to.be.true;\n(0, _chai.expect)((0, _helpers.confirmationPageAlertHeadline)(formData)).to.equal('You already have an intent to file on record');\nformData.benefitSelection[_constants.survivingDependentBenefits.SURVIVOR] = true;\n(0, _chai.expect)((0, _helpers.confirmationPageFormBypassed)(formData)).to.be.false;\n(0, _chai.expect)((0, _helpers.confirmationPageAlertHeadline)(formData)).to.equal('You’ve submitted your intent to file');",
              "err": {},
              "uuid": "39465183-3b0b-4e06-85c8-9b7f1c6c6a0a",
              "parentUUID": "6bf7f755-6f0a-40d6-aec0-ec70f44d3b41",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "return the correct alert paragraph depending on the formData",
              "fullTitle": "Confirmation Page helper functions return the correct alert paragraph depending on the formData",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var formData = {\n  benefitSelection: {},\n  'view:activeCompensationITF': {\n    expirationDate: '2025-01-30T17:56:30.512Z'\n  },\n  'view:activePensionITF': {\n    expirationDate: '2025-01-30T17:56:30.512Z'\n  }\n};\n(0, _chai.expect)((0, _helpers.confirmationPageFormBypassed)(formData)).to.be.true;\n(0, _chai.expect)((0, _helpers.confirmationPageAlertParagraph)(formData)).to.equal('Our records show that you already have an intent to file for disability compensation and for pension claims.');\nformData['view:activePensionITF'] = {};\n(0, _chai.expect)((0, _helpers.confirmationPageFormBypassed)(formData)).to.be.true;\n(0, _chai.expect)((0, _helpers.confirmationPageAlertParagraph)(formData)).to.equal('Our records show that you already have an intent to file for disability compensation and it will expire on January 30, 2025.');\nformData['view:activePensionITF'] = {\n  expirationDate: '2025-01-30T17:56:30.512Z'\n};\nformData['view:activeCompensationITF'] = {};\n(0, _chai.expect)((0, _helpers.confirmationPageFormBypassed)(formData)).to.be.true;\n(0, _chai.expect)((0, _helpers.confirmationPageAlertParagraph)(formData)).to.equal('Our records show that you already have an intent to file for pension claims and it will expire on January 30, 2025.');\nformData['view:activePensionITF'] = {};\nformData.benefitSelection[_constants.veteranBenefits.COMPENSATION] = true;\n(0, _chai.expect)((0, _helpers.confirmationPageFormBypassed)(formData)).to.be.false;\n(0, _chai.expect)((0, _helpers.confirmationPageAlertParagraph)(formData)).to.equal('It may take us a few days to process your intent to file for disability compensation. Then you’ll have 1 year to file your claim.');\nformData.benefitSelection[_constants.veteranBenefits.PENSION] = true;\n(0, _chai.expect)((0, _helpers.confirmationPageAlertParagraph)(formData)).to.equal('It may take us a few days to process your intent to file for disability compensation and for pension claims. Then you’ll have 1 year to file your claim.');\nformData.benefitSelection[_constants.veteranBenefits.COMPENSATION] = false;\n(0, _chai.expect)((0, _helpers.confirmationPageAlertParagraph)(formData)).to.equal('It may take us a few days to process your intent to file for pension claims. Then you’ll have 1 year to file your claim.');\nformData.benefitSelection[_constants.veteranBenefits.PENSION] = false;\nformData.benefitSelection[_constants.survivingDependentBenefits.SURVIVOR] = true;\n(0, _chai.expect)((0, _helpers.confirmationPageAlertParagraph)(formData)).to.equal('It may take us a few days to process your intent to file for pension claims for survivors. Then you’ll have 1 year to file your claim.');\nformData.benefitSelection[_constants.survivingDependentBenefits.SURVIVOR] = false;\n(0, _chai.expect)((0, _helpers.confirmationPageAlertParagraph)(formData)).to.equal('It may take us a few days to process your intent to file. Then you’ll have 1 year to file your claim.');",
              "err": {},
              "uuid": "70f0f6c6-17f9-4321-b053-477d319a9909",
              "parentUUID": "6bf7f755-6f0a-40d6-aec0-ec70f44d3b41",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "returns the correct next steps paragraph or null depending on the formData",
              "fullTitle": "Confirmation Page helper functions returns the correct next steps paragraph or null depending on the formData",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var formData = {\n  benefitSelection: {},\n  'view:activeCompensationITF': {\n    expirationDate: '2025-01-30T17:56:30.512Z'\n  },\n  'view:activePensionITF': {\n    expirationDate: '2025-01-30T17:56:30.512Z'\n  }\n};\n(0, _chai.expect)((0, _helpers.confirmationPageFormBypassed)(formData)).to.be.true;\n(0, _chai.expect)((0, _helpers.confirmationPageNextStepsParagraph)(formData)).to.contain('disability compensation');\n(0, _chai.expect)((0, _helpers.confirmationPageNextStepsParagraph)(formData)).to.contain('pension claims');\nformData['view:activePensionITF'] = {};\n(0, _chai.expect)((0, _helpers.confirmationPageFormBypassed)(formData)).to.be.true;\n(0, _chai.expect)((0, _helpers.confirmationPageNextStepsParagraph)(formData)).to.contain('disability compensation');\nformData['view:activePensionITF'] = {\n  expirationDate: '2025-01-30T17:56:30.512Z'\n};\nformData['view:activeCompensationITF'] = {};\n(0, _chai.expect)((0, _helpers.confirmationPageFormBypassed)(formData)).to.be.true;\n(0, _chai.expect)((0, _helpers.confirmationPageNextStepsParagraph)(formData)).to.contain('pension claims');\nformData['view:activePensionITF'] = {};\nformData.benefitSelection[_constants.veteranBenefits.COMPENSATION] = true;\n(0, _chai.expect)((0, _helpers.confirmationPageFormBypassed)(formData)).to.be.false;\n(0, _chai.expect)((0, _helpers.confirmationPageNextStepsParagraph)(formData)).to.contain('disability compensation');\nformData.benefitSelection[_constants.veteranBenefits.COMPENSATION] = false;\nformData.benefitSelection[_constants.veteranBenefits.PENSION] = true;\n(0, _chai.expect)((0, _helpers.confirmationPageFormBypassed)(formData)).to.be.false;\n(0, _chai.expect)((0, _helpers.confirmationPageNextStepsParagraph)(formData)).to.contain('pension claims');\nformData.benefitSelection[_constants.veteranBenefits.PENSION] = false;\nformData.benefitSelection[_constants.survivingDependentBenefits.SURVIVOR] = true;\n(0, _chai.expect)((0, _helpers.confirmationPageFormBypassed)(formData)).to.be.false;\n(0, _chai.expect)((0, _helpers.confirmationPageNextStepsParagraph)(formData)).to.contain('pension claims for survivors');\nformData.benefitSelection[_constants.veteranBenefits.COMPENSATION] = true;\n(0, _chai.expect)((0, _helpers.confirmationPageFormBypassed)(formData)).to.be.false;\n(0, _chai.expect)((0, _helpers.confirmationPageNextStepsParagraph)(formData)).to.be.null;",
              "err": {},
              "uuid": "1200b9fc-0765-47ad-bba9-7a57db1aa1a2",
              "parentUUID": "6bf7f755-6f0a-40d6-aec0-ec70f44d3b41",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "94156813-2539-46e5-a5d8-f03d64f5b288",
            "2c2e2576-4d75-494a-9866-9f23285523a0",
            "39465183-3b0b-4e06-85c8-9b7f1c6c6a0a",
            "70f0f6c6-17f9-4321-b053-477d319a9909",
            "1200b9fc-0765-47ad-bba9-7a57db1aa1a2"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "7026db83-f10e-4957-84e7-6a7dacc141b8",
          "title": "Confirmation page V2",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/21-0966/tests/containers/ConfirmationPage.unit.spec.jsx",
          "file": "/src/applications/simple-forms/21-0966/tests/containers/ConfirmationPage.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "it should show status success and the correct name of person for a veteran submitting for the first time (benefits claims)",
              "fullTitle": "Confirmation page V2 it should show status success and the correct name of person for a veteran submitting for the first time (benefits claims)",
              "timedOut": false,
              "duration": 17,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _render = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore(STORE_VETERAN_FIRST_TIME_BENEFITS_CLAIMS)\n  }, /*#__PURE__*/_react.default.createElement(_ConfirmationPage.default, {\n    route: {\n      formConfig: _form.default\n    }\n  }))),\n  container = _render.container,\n  getByText = _render.getByText;\n(0, _chai.expect)(container.querySelector('va-alert')).to.have.attr('status', 'success');\ngetByText(/Jack/);\ngetByText(/Your form submission was successful on/);\ngetByText(/You have until/);\n(0, _chai.expect)(container.querySelector('va-link-action[text=\"Complete your pension claim\"]')).to.exist;\n(0, _chai.expect)(container.querySelector('va-link-action[text=\"Complete your disability compensation claim\"]')).to.exist;",
              "err": {},
              "uuid": "63caab8c-2acf-43f1-bff9-7727fb2ce545",
              "parentUUID": "7026db83-f10e-4957-84e7-6a7dacc141b8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "it should show status success and the correct name of person for a veteran submitting for the first time (benefits intake)",
              "fullTitle": "Confirmation page V2 it should show status success and the correct name of person for a veteran submitting for the first time (benefits intake)",
              "timedOut": false,
              "duration": 14,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _render2 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore(STORE_VETERAN_FIRST_TIME_BENEFITS_INTAKE)\n  }, /*#__PURE__*/_react.default.createElement(_ConfirmationPage.default, {\n    route: {\n      formConfig: _form.default\n    }\n  }))),\n  container = _render2.container,\n  getByText = _render2.getByText;\n(0, _chai.expect)(container.querySelector('va-alert')).to.have.attr('status', 'success');\ngetByText(/Jack/);\ngetByText(/Form submission started on/);\ngetByText(/It can take up to 30 days/);\ngetByText(/After we review your form/);\n(0, _chai.expect)(container.querySelector('va-link-action[text=\"Complete your pension claim\"]')).to.exist;\n(0, _chai.expect)(container.querySelector('va-link-action[text=\"Complete your disability compensation claim\"]')).to.exist;",
              "err": {},
              "uuid": "8e62b34b-0107-4f4a-9872-c9aac6297475",
              "parentUUID": "7026db83-f10e-4957-84e7-6a7dacc141b8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "it should show status success and the correct name of person for a survivor submitting for the first time (benefits claims)",
              "fullTitle": "Confirmation page V2 it should show status success and the correct name of person for a survivor submitting for the first time (benefits claims)",
              "timedOut": false,
              "duration": 14,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _render3 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore(STORE_SURVIVOR_FIRST_TIME_BENEFITS_CLAIMS)\n  }, /*#__PURE__*/_react.default.createElement(_ConfirmationPage.default, {\n    route: {\n      formConfig: _form.default\n    }\n  }))),\n  container = _render3.container,\n  getByText = _render3.getByText;\n(0, _chai.expect)(container.querySelector('va-alert')).to.have.attr('status', 'success');\ngetByText(/Alternate/);\ngetByText(/Your form submission was successful on/);\ngetByText(/You have until/);\n(0, _chai.expect)(container.querySelector('va-link-action[text=\"Complete your pension for survivors claim\"]')).to.exist;",
              "err": {},
              "uuid": "58150f69-a3df-42a7-baaf-e77589bbf824",
              "parentUUID": "7026db83-f10e-4957-84e7-6a7dacc141b8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "it should show status success and the correct name of person for a survivor submitting for the first time (benefits intake)",
              "fullTitle": "Confirmation page V2 it should show status success and the correct name of person for a survivor submitting for the first time (benefits intake)",
              "timedOut": false,
              "duration": 19,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _render4 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore(STORE_SURVIVOR_FIRST_TIME_BENEFITS_INTAKE)\n  }, /*#__PURE__*/_react.default.createElement(_ConfirmationPage.default, {\n    route: {\n      formConfig: _form.default\n    }\n  }))),\n  container = _render4.container,\n  getByText = _render4.getByText;\n(0, _chai.expect)(container.querySelector('va-alert')).to.have.attr('status', 'success');\ngetByText(/Alternate/);\ngetByText(/Form submission started on/);\ngetByText(/It can take up to 30 days/);\ngetByText(/After we review your form/);\n(0, _chai.expect)(container.querySelector('va-link-action[text=\"Complete your pension for survivors claim\"]')).to.exist;",
              "err": {},
              "uuid": "8264ac2d-9ed7-499a-9764-65898a206ec0",
              "parentUUID": "7026db83-f10e-4957-84e7-6a7dacc141b8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "it should show status success and the correct name of person for a veteran submitting for the second time (benefits claims)",
              "fullTitle": "Confirmation page V2 it should show status success and the correct name of person for a veteran submitting for the second time (benefits claims)",
              "timedOut": false,
              "duration": 13,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _render5 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore(STORE_VETERAN_EXISTING_BENEFITS_CLAIMS)\n  }, /*#__PURE__*/_react.default.createElement(_ConfirmationPage.default, {\n    route: {\n      formConfig: _form.default\n    }\n  }))),\n  container = _render5.container,\n  getByText = _render5.getByText;\n(0, _chai.expect)(container.querySelector('va-alert')).to.have.attr('status', 'success');\ngetByText(/Jack/);\ngetByText(/Your form submission was successful on/);\ngetByText(/You have until/);\n(0, _chai.expect)(container.querySelector('va-link-action[text=\"Complete your pension claim\"]')).to.exist;\n(0, _chai.expect)(container.querySelector('va-link-action[text=\"Complete your disability compensation claim\"]')).to.exist;",
              "err": {},
              "uuid": "7f601c67-59de-4b2c-be0f-49cde01b9cb0",
              "parentUUID": "7026db83-f10e-4957-84e7-6a7dacc141b8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "it should show status success and the correct name of person for a survivor submitting for the second time (benefits intake)",
              "fullTitle": "Confirmation page V2 it should show status success and the correct name of person for a survivor submitting for the second time (benefits intake)",
              "timedOut": false,
              "duration": 15,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _render6 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore(STORE_SURVIVOR_EXISTING_BENEFITS_INTAKE)\n  }, /*#__PURE__*/_react.default.createElement(_ConfirmationPage.default, {\n    route: {\n      formConfig: _form.default\n    }\n  }))),\n  container = _render6.container,\n  getByText = _render6.getByText;\n(0, _chai.expect)(container.querySelector('va-alert')).to.have.attr('status', 'success');\ngetByText(/Alternate/);\ngetByText(/Form submission started on/);\ngetByText(/It can take up to 30 days/);\ngetByText(/After we review your form/);\n(0, _chai.expect)(container.querySelector('va-link-action[text=\"Complete your pension for survivors claim\"]')).to.exist;",
              "err": {},
              "uuid": "b00e09f9-e93e-408e-aede-8d81fc693539",
              "parentUUID": "7026db83-f10e-4957-84e7-6a7dacc141b8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return correct getNextStepsActionsPlaceholders for a veteran with new benefits",
              "fullTitle": "Confirmation page V2 should return correct getNextStepsActionsPlaceholders for a veteran with new benefits",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var formData = {\n  benefitSelection: {\n    compensation: true,\n    pension: true\n  }\n};\nvar placeholders = (0, _ConfirmationPage.getNextStepsActionsPlaceholders)(formData);\n(0, _chai.expect)(placeholders.actionsNew).to.deep.equal(['compensation', 'pension']);\n(0, _chai.expect)(placeholders.actionsExisting).to.deep.equal([]);",
              "err": {},
              "uuid": "fea47543-00e1-42f5-bfde-163bc082c0a7",
              "parentUUID": "7026db83-f10e-4957-84e7-6a7dacc141b8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return correct getNextStepsActionsPlaceholders for a veteran with mixed benefits",
              "fullTitle": "Confirmation page V2 should return correct getNextStepsActionsPlaceholders for a veteran with mixed benefits",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var formData = {\n  benefitSelection: {\n    pension: true\n  },\n  'view:activeCompensationITF': responseExisting.compensationIntent\n};\nvar placeholders = (0, _ConfirmationPage.getNextStepsActionsPlaceholders)(formData);\n(0, _chai.expect)(placeholders.actionsNew).to.deep.equal(['pension']);\n(0, _chai.expect)(placeholders.actionsExisting).to.deep.equal(['compensation']);",
              "err": {},
              "uuid": "511a0237-65fe-4cd4-bf27-65ea94616184",
              "parentUUID": "7026db83-f10e-4957-84e7-6a7dacc141b8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return correct getNextStepsActionsPlaceholders for a veteran with existing benefits",
              "fullTitle": "Confirmation page V2 should return correct getNextStepsActionsPlaceholders for a veteran with existing benefits",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var formData = {\n  benefitSelection: {},\n  'view:activePensionITF': responseExisting.pensionIntent,\n  'view:activeCompensationITF': responseExisting.compensationIntent\n};\nvar placeholders = (0, _ConfirmationPage.getNextStepsActionsPlaceholders)(formData);\n(0, _chai.expect)(placeholders.actionsNew).to.deep.equal([]);\n(0, _chai.expect)(placeholders.actionsExisting).to.deep.equal(['compensation', 'pension']);",
              "err": {},
              "uuid": "765ee0df-2349-4883-a3d8-e9520a5799bf",
              "parentUUID": "7026db83-f10e-4957-84e7-6a7dacc141b8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return correct getNextStepsActionsPlaceholders for a survivor",
              "fullTitle": "Confirmation page V2 should return correct getNextStepsActionsPlaceholders for a survivor",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var formData = {\n  benefitSelection: {\n    survivor: true\n  },\n  'view:activePensionITF': responseExisting.pensionIntent,\n  'view:activeCompensationITF': responseExisting.compensationIntent\n};\nvar placeholders = (0, _ConfirmationPage.getNextStepsActionsPlaceholders)(formData);\n(0, _chai.expect)(placeholders.actionsNew).to.deep.equal(['survivor']);\n(0, _chai.expect)(placeholders.actionsExisting).to.deep.equal(['compensation', 'pension']);",
              "err": {},
              "uuid": "20b6aa14-dd11-4bb8-9bf2-808fd7559d65",
              "parentUUID": "7026db83-f10e-4957-84e7-6a7dacc141b8",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "63caab8c-2acf-43f1-bff9-7727fb2ce545",
            "8e62b34b-0107-4f4a-9872-c9aac6297475",
            "58150f69-a3df-42a7-baaf-e77589bbf824",
            "8264ac2d-9ed7-499a-9764-65898a206ec0",
            "7f601c67-59de-4b2c-be0f-49cde01b9cb0",
            "b00e09f9-e93e-408e-aede-8d81fc693539",
            "fea47543-00e1-42f5-bfde-163bc082c0a7",
            "511a0237-65fe-4cd4-bf27-65ea94616184",
            "765ee0df-2349-4883-a3d8-e9520a5799bf",
            "20b6aa14-dd11-4bb8-9bf2-808fd7559d65"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 94,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "92f07ff7-4fea-49b5-a62e-0f34c010c4b8",
          "title": "Confirmation page V1",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/21-0966/tests/containers/ConfirmationPage.unit.spec.jsx",
          "file": "/src/applications/simple-forms/21-0966/tests/containers/ConfirmationPage.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "it should show status success and the correct name of person for a veteran submitting for the first time",
              "fullTitle": "Confirmation page V1 it should show status success and the correct name of person for a veteran submitting for the first time",
              "timedOut": false,
              "duration": 6,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _render7 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore(STORE_VETERAN_FIRST_TIME)\n  }, /*#__PURE__*/_react.default.createElement(_ConfirmationPage.default, null))),\n  container = _render7.container,\n  getByText = _render7.getByText;\n(0, _chai.expect)(container.querySelector('va-alert')).to.have.attr('status', 'success');\ngetByText(/Jack W Veteran/);\ncontainer.querySelector('va-link-action[text=\"Complete your pension claim\"]');\ncontainer.querySelector('va-link-action[text=\"Complete your disability compensation claim\"]');",
              "err": {},
              "uuid": "bb6c8f1c-35a6-4548-ae82-db7df17cc66b",
              "parentUUID": "92f07ff7-4fea-49b5-a62e-0f34c010c4b8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "it should show status success and the correct name of person for a survivor submitting for the first time",
              "fullTitle": "Confirmation page V1 it should show status success and the correct name of person for a survivor submitting for the first time",
              "timedOut": false,
              "duration": 4,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _render8 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore(STORE_SURVIVOR_FIRST_TIME)\n  }, /*#__PURE__*/_react.default.createElement(_ConfirmationPage.default, null))),\n  container = _render8.container,\n  getByText = _render8.getByText;\n(0, _chai.expect)(container.querySelector('va-alert')).to.have.attr('status', 'success');\ngetByText(/Jack W Veteran/);\ncontainer.querySelector('va-link-action[text=\"Complete your pension for survivors claim\"]');",
              "err": {},
              "uuid": "a377d56a-371a-4032-af35-7c614ed58368",
              "parentUUID": "92f07ff7-4fea-49b5-a62e-0f34c010c4b8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "it should show status success and the correct name of person for a veteran submitting for a second time",
              "fullTitle": "Confirmation page V1 it should show status success and the correct name of person for a veteran submitting for a second time",
              "timedOut": false,
              "duration": 4,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _render9 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore(STORE_VETERAN_EXISTING)\n  }, /*#__PURE__*/_react.default.createElement(_ConfirmationPage.default, null))),\n  container = _render9.container,\n  getByText = _render9.getByText;\n(0, _chai.expect)(container.querySelector('va-alert')).to.have.attr('status', 'success');\ngetByText(/Jack W Veteran/);\ncontainer.querySelector('va-link-action[text=\"Complete your pension claim\"]');\ncontainer.querySelector('va-link-action[text=\"Complete your disability compensation claim\"]');",
              "err": {},
              "uuid": "10957a47-155b-4938-a79b-961b0013e45b",
              "parentUUID": "92f07ff7-4fea-49b5-a62e-0f34c010c4b8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "it should show status success and the correct name of person for a survivor submitting for a second time",
              "fullTitle": "Confirmation page V1 it should show status success and the correct name of person for a survivor submitting for a second time",
              "timedOut": false,
              "duration": 4,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _render10 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore(STORE_SURVIVOR_EXISTING)\n  }, /*#__PURE__*/_react.default.createElement(_ConfirmationPage.default, null))),\n  container = _render10.container,\n  getByText = _render10.getByText;\n(0, _chai.expect)(container.querySelector('va-alert')).to.have.attr('status', 'success');\ngetByText(/Jack W Veteran/);\ncontainer.querySelector('va-link-action[text=\"Complete your pension for survivors claim\"]');",
              "err": {},
              "uuid": "ac415426-6678-4e3e-bec7-0e4d5fe289b1",
              "parentUUID": "92f07ff7-4fea-49b5-a62e-0f34c010c4b8",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "bb6c8f1c-35a6-4548-ae82-db7df17cc66b",
            "a377d56a-371a-4032-af35-7c614ed58368",
            "10957a47-155b-4938-a79b-961b0013e45b",
            "ac415426-6678-4e3e-bec7-0e4d5fe289b1"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 18,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "2cf88469-4c7c-45b8-9f9e-95ef1b2a2e09",
          "title": "IntroductionPage",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/21-0966/tests/containers/IntroductionPage.unit.spec.jsx",
          "file": "/src/applications/simple-forms/21-0966/tests/containers/IntroductionPage.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should render",
              "fullTitle": "IntroductionPage should render",
              "timedOut": false,
              "duration": 5,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var mockStore = generateStore();\nvar _render = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_IntroductionPage.default, props))),\n  container = _render.container;\n(0, _chai.expect)(container).to.exist;",
              "err": {},
              "uuid": "db7bf6b1-faf0-46f7-9630-9eafe0f4beb1",
              "parentUUID": "2cf88469-4c7c-45b8-9f9e-95ef1b2a2e09",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should render the va-alert-sign-in for LOA1 users",
              "fullTitle": "IntroductionPage should render the va-alert-sign-in for LOA1 users",
              "timedOut": false,
              "duration": 7,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var mockStore = generateStore({\n  loggedIn: true,\n  loaCurrent: 1\n});\nvar _render2 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_IntroductionPage.default, {\n    route: props.route\n  }))),\n  container = _render2.container;\n(0, _chai.expect)(container.querySelector('va-alert-sign-in')).to.exist;",
              "err": {},
              "uuid": "60549dad-cd72-4190-96bd-a024dda1aa4f",
              "parentUUID": "2cf88469-4c7c-45b8-9f9e-95ef1b2a2e09",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "db7bf6b1-faf0-46f7-9630-9eafe0f4beb1",
            "60549dad-cd72-4190-96bd-a024dda1aa4f"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 12,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "c3bd6702-8a6e-45f2-bbc7-2ba66ed15ef1",
          "title": "Preparer identification information page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/21-0966/tests/pages/confirmVeteranPersonalInformation.unit.spec.jsx",
          "file": "/src/applications/simple-forms/21-0966/tests/pages/confirmVeteranPersonalInformation.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should have appropriate number of web components",
              "fullTitle": "Preparer identification information page should have appropriate number of web components",
              "timedOut": false,
              "duration": 4,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps3 = getProps(),\n  mockStore = _getProps3.mockStore;\nvar _render3 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render3.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypesWebComponents)).to.have.lengthOf(expectedNumberOfFields);",
              "err": {},
              "uuid": "ce548ee5-ccb8-4f2c-ab4d-28914eaf68f6",
              "parentUUID": "c3bd6702-8a6e-45f2-bbc7-2ba66ed15ef1",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "ce548ee5-ccb8-4f2c-ab4d-28914eaf68f6"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 4,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "618fcbde-db25-4fbe-9461-e5d083a804f1",
          "title": "Preparer identification information page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/21-0966/tests/pages/confirmVeteranPersonalInformation.unit.spec.jsx",
          "file": "/src/applications/simple-forms/21-0966/tests/pages/confirmVeteranPersonalInformation.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should show the correct number of errors on submit for web components",
              "fullTitle": "Preparer identification information page should show the correct number of errors on submit for web components",
              "timedOut": false,
              "duration": 11,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps4 = getProps(),\n  mockStore = _getProps4.mockStore;\nvar _render4 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render4.container,\n  getByRole = _render4.getByRole;\ngetByRole('button', {\n  name: /submit/i\n}).click();\nvar nodes = Array.from(container.querySelectorAll(\"\".concat(expectedFieldTypesWebComponents, \", \").concat(wrapperWebComponents)));\nvar errors = nodes.filter(function (node) {\n  return node.error;\n});\n(0, _chai.expect)(errors).to.have.lengthOf(expectedNumberOfErrors);",
              "err": {},
              "uuid": "97a08e53-372b-4c9a-813d-c863d978fc47",
              "parentUUID": "618fcbde-db25-4fbe-9461-e5d083a804f1",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "97a08e53-372b-4c9a-813d-c863d978fc47"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 11,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "c2b4bca9-16fa-4473-b642-1dc0511805fe",
          "title": "Preparer identification information page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/21-0966/tests/pages/preparerIdentificationInformation.unit.spec.jsx",
          "file": "/src/applications/simple-forms/21-0966/tests/pages/preparerIdentificationInformation.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should have appropriate number of web components",
              "fullTitle": "Preparer identification information page should have appropriate number of web components",
              "timedOut": false,
              "duration": 5,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps3 = getProps(),\n  mockStore = _getProps3.mockStore;\nvar _render3 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render3.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypesWebComponents)).to.have.lengthOf(expectedNumberOfFields);",
              "err": {},
              "uuid": "6bf498a1-4c2f-4dfd-91a9-8ed619d01918",
              "parentUUID": "c2b4bca9-16fa-4473-b642-1dc0511805fe",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "6bf498a1-4c2f-4dfd-91a9-8ed619d01918"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 5,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "e3b3b3f0-9070-47ed-934d-a2e38ce7ce82",
          "title": "Preparer identification information page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/21-0966/tests/pages/preparerIdentificationInformation.unit.spec.jsx",
          "file": "/src/applications/simple-forms/21-0966/tests/pages/preparerIdentificationInformation.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should show the correct number of errors on submit for web components",
              "fullTitle": "Preparer identification information page should show the correct number of errors on submit for web components",
              "timedOut": false,
              "duration": 13,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps4 = getProps(),\n  mockStore = _getProps4.mockStore;\nvar _render4 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render4.container,\n  getByRole = _render4.getByRole;\ngetByRole('button', {\n  name: /submit/i\n}).click();\nvar nodes = Array.from(container.querySelectorAll(\"\".concat(expectedFieldTypesWebComponents, \", \").concat(wrapperWebComponents)));\nvar errors = nodes.filter(function (node) {\n  return node.error;\n});\n(0, _chai.expect)(errors).to.have.lengthOf(expectedNumberOfErrors);",
              "err": {},
              "uuid": "9c5d567a-1daf-4568-8adc-fdd310979963",
              "parentUUID": "e3b3b3f0-9070-47ed-934d-a2e38ce7ce82",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "9c5d567a-1daf-4568-8adc-fdd310979963"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 13,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "b2399051-dfcd-453a-981e-a00a1dc8d446",
          "title": "Email address page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/21-0966/tests/pages/reviewVeteranEmailAddress.unit.spec.jsx",
          "file": "/src/applications/simple-forms/21-0966/tests/pages/reviewVeteranEmailAddress.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should have appropriate number of web components",
              "fullTitle": "Email address page should have appropriate number of web components",
              "timedOut": false,
              "duration": 3,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps3 = getProps(),\n  mockStore = _getProps3.mockStore;\nvar _render3 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render3.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypesWebComponents)).to.have.lengthOf(expectedNumberOfFields);",
              "err": {},
              "uuid": "0c616078-90e8-4fbb-869b-b95a92928f81",
              "parentUUID": "b2399051-dfcd-453a-981e-a00a1dc8d446",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "0c616078-90e8-4fbb-869b-b95a92928f81"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "3b8fe798-7ee7-43e3-8bca-2602e04606e6",
          "title": "Email address page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/21-0966/tests/pages/reviewVeteranEmailAddress.unit.spec.jsx",
          "file": "/src/applications/simple-forms/21-0966/tests/pages/reviewVeteranEmailAddress.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should show the correct number of errors on submit for web components",
              "fullTitle": "Email address page should show the correct number of errors on submit for web components",
              "timedOut": false,
              "duration": 11,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps4 = getProps(),\n  mockStore = _getProps4.mockStore;\nvar _render4 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render4.container,\n  getByRole = _render4.getByRole;\ngetByRole('button', {\n  name: /submit/i\n}).click();\nvar nodes = Array.from(container.querySelectorAll(\"\".concat(expectedFieldTypesWebComponents, \", \").concat(wrapperWebComponents)));\nvar errors = nodes.filter(function (node) {\n  return node.error;\n});\n(0, _chai.expect)(errors).to.have.lengthOf(expectedNumberOfErrors);",
              "err": {},
              "uuid": "1691f0bb-f2a4-40a6-b654-82ae8a203adf",
              "parentUUID": "3b8fe798-7ee7-43e3-8bca-2602e04606e6",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "1691f0bb-f2a4-40a6-b654-82ae8a203adf"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 11,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "1c6c2b60-8425-4022-b065-11ae80f91daa",
          "title": "Surviving dependent benefit selection page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/21-0966/tests/pages/survivingDependentBenefitSelection.unit.spec.jsx",
          "file": "/src/applications/simple-forms/21-0966/tests/pages/survivingDependentBenefitSelection.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should have appropriate number of web components",
              "fullTitle": "Surviving dependent benefit selection page should have appropriate number of web components",
              "timedOut": false,
              "duration": 5,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps3 = getProps(),\n  mockStore = _getProps3.mockStore;\nvar _render3 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render3.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypesWebComponents)).to.have.lengthOf(expectedNumberOfFields);",
              "err": {},
              "uuid": "f98e0401-8d41-458c-86e2-02a527e120e5",
              "parentUUID": "1c6c2b60-8425-4022-b065-11ae80f91daa",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f98e0401-8d41-458c-86e2-02a527e120e5"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 5,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "f2f0e352-85d3-4eb7-a0ee-b5ce19999093",
          "title": "Surviving dependent benefit selection page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/21-0966/tests/pages/survivingDependentBenefitSelection.unit.spec.jsx",
          "file": "/src/applications/simple-forms/21-0966/tests/pages/survivingDependentBenefitSelection.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should show the correct number of errors on submit for web components",
              "fullTitle": "Surviving dependent benefit selection page should show the correct number of errors on submit for web components",
              "timedOut": false,
              "duration": 12,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps4 = getProps(),\n  mockStore = _getProps4.mockStore;\nvar _render4 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render4.container,\n  getByRole = _render4.getByRole;\ngetByRole('button', {\n  name: /submit/i\n}).click();\nvar nodes = Array.from(container.querySelectorAll(\"\".concat(expectedFieldTypesWebComponents, \", \").concat(wrapperWebComponents)));\nvar errors = nodes.filter(function (node) {\n  return node.error;\n});\n(0, _chai.expect)(errors).to.have.lengthOf(expectedNumberOfErrors);",
              "err": {},
              "uuid": "70004522-96b0-47d6-900c-4e2e3d6f7d52",
              "parentUUID": "f2f0e352-85d3-4eb7-a0ee-b5ce19999093",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "70004522-96b0-47d6-900c-4e2e3d6f7d52"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 12,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "fb007c9d-f421-4cfd-8a90-7fcb90bbe951",
          "title": "Preparer identification page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/21-0966/tests/pages/survivingDependentIdentification.unit.spec.jsx",
          "file": "/src/applications/simple-forms/21-0966/tests/pages/survivingDependentIdentification.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should have appropriate number of web components",
              "fullTitle": "Preparer identification page should have appropriate number of web components",
              "timedOut": false,
              "duration": 3,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps3 = getProps(),\n  mockStore = _getProps3.mockStore;\nvar _render3 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render3.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypesWebComponents)).to.have.lengthOf(expectedNumberOfFields);",
              "err": {},
              "uuid": "38d5367d-4c9a-41dd-af4f-deb76355798a",
              "parentUUID": "fb007c9d-f421-4cfd-8a90-7fcb90bbe951",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "38d5367d-4c9a-41dd-af4f-deb76355798a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "713d848e-9caa-4c8c-bf16-85f702a2d96c",
          "title": "Preparer identification page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/21-0966/tests/pages/survivingDependentIdentification.unit.spec.jsx",
          "file": "/src/applications/simple-forms/21-0966/tests/pages/survivingDependentIdentification.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should show the correct number of errors on submit for web components",
              "fullTitle": "Preparer identification page should show the correct number of errors on submit for web components",
              "timedOut": false,
              "duration": 10,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps4 = getProps(),\n  mockStore = _getProps4.mockStore;\nvar _render4 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render4.container,\n  getByRole = _render4.getByRole;\ngetByRole('button', {\n  name: /submit/i\n}).click();\nvar nodes = Array.from(container.querySelectorAll(\"\".concat(expectedFieldTypesWebComponents, \", \").concat(wrapperWebComponents)));\nvar errors = nodes.filter(function (node) {\n  return node.error;\n});\n(0, _chai.expect)(errors).to.have.lengthOf(expectedNumberOfErrors);",
              "err": {},
              "uuid": "5bc4cb58-8e95-4966-b8fa-4e39a774bdc2",
              "parentUUID": "713d848e-9caa-4c8c-bf16-85f702a2d96c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "5bc4cb58-8e95-4966-b8fa-4e39a774bdc2"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 10,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "9f6d8c92-2743-429e-95ab-e391e5ebf33e",
          "title": "Mailing address page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/21-0966/tests/pages/survivingDependentMailingAddress.unit.spec.jsx",
          "file": "/src/applications/simple-forms/21-0966/tests/pages/survivingDependentMailingAddress.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should have appropriate number of web components",
              "fullTitle": "Mailing address page should have appropriate number of web components",
              "timedOut": false,
              "duration": 20,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps3 = getProps(),\n  mockStore = _getProps3.mockStore;\nvar _render3 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render3.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypesWebComponents)).to.have.lengthOf(expectedNumberOfFields);",
              "err": {},
              "uuid": "0fcebe23-e983-4cda-b1c0-44902c508acc",
              "parentUUID": "9f6d8c92-2743-429e-95ab-e391e5ebf33e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "0fcebe23-e983-4cda-b1c0-44902c508acc"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 20,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "9d883722-a2ca-483b-b238-c484f71b717b",
          "title": "Mailing address page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/21-0966/tests/pages/survivingDependentMailingAddress.unit.spec.jsx",
          "file": "/src/applications/simple-forms/21-0966/tests/pages/survivingDependentMailingAddress.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should show the correct number of errors on submit for web components",
              "fullTitle": "Mailing address page should show the correct number of errors on submit for web components",
              "timedOut": false,
              "duration": 69,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps4 = getProps(),\n  mockStore = _getProps4.mockStore;\nvar _render4 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render4.container,\n  getByRole = _render4.getByRole;\ngetByRole('button', {\n  name: /submit/i\n}).click();\nvar nodes = Array.from(container.querySelectorAll(\"\".concat(expectedFieldTypesWebComponents, \", \").concat(wrapperWebComponents)));\nvar errors = nodes.filter(function (node) {\n  return node.error;\n});\n(0, _chai.expect)(errors).to.have.lengthOf(expectedNumberOfErrors);",
              "err": {},
              "uuid": "e2c5d0ba-e5b7-454a-9268-e42c9603ff2d",
              "parentUUID": "9d883722-a2ca-483b-b238-c484f71b717b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "e2c5d0ba-e5b7-454a-9268-e42c9603ff2d"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 69,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "796ff327-192c-4a95-80b7-797b6d09e16e",
          "title": "Preparer personal information page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/21-0966/tests/pages/survivingDependentPersonalInformation.unit.spec.jsx",
          "file": "/src/applications/simple-forms/21-0966/tests/pages/survivingDependentPersonalInformation.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should have appropriate number of web components",
              "fullTitle": "Preparer personal information page should have appropriate number of web components",
              "timedOut": false,
              "duration": 6,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps3 = getProps(),\n  mockStore = _getProps3.mockStore;\nvar _render3 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render3.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypesWebComponents)).to.have.lengthOf(expectedNumberOfFields);",
              "err": {},
              "uuid": "8541776f-5b60-4151-80ba-74021a63246d",
              "parentUUID": "796ff327-192c-4a95-80b7-797b6d09e16e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "8541776f-5b60-4151-80ba-74021a63246d"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 6,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "8316b673-72df-4257-af7d-8e906469c7fd",
          "title": "Preparer personal information page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/21-0966/tests/pages/survivingDependentPersonalInformation.unit.spec.jsx",
          "file": "/src/applications/simple-forms/21-0966/tests/pages/survivingDependentPersonalInformation.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should show the correct number of errors on submit for web components",
              "fullTitle": "Preparer personal information page should show the correct number of errors on submit for web components",
              "timedOut": false,
              "duration": 23,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps4 = getProps(),\n  mockStore = _getProps4.mockStore;\nvar _render4 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render4.container,\n  getByRole = _render4.getByRole;\ngetByRole('button', {\n  name: /submit/i\n}).click();\nvar nodes = Array.from(container.querySelectorAll(\"\".concat(expectedFieldTypesWebComponents, \", \").concat(wrapperWebComponents)));\nvar errors = nodes.filter(function (node) {\n  return node.error;\n});\n(0, _chai.expect)(errors).to.have.lengthOf(expectedNumberOfErrors);",
              "err": {},
              "uuid": "e38ac914-bb6f-4490-a416-eeb360b46e55",
              "parentUUID": "8316b673-72df-4257-af7d-8e906469c7fd",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "e38ac914-bb6f-4490-a416-eeb360b46e55"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 23,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "4470bbef-6016-4f8a-b482-dd67b4626572",
          "title": "Phone and email address page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/21-0966/tests/pages/survivingDependentPhoneAndEmailAddress.unit.spec.jsx",
          "file": "/src/applications/simple-forms/21-0966/tests/pages/survivingDependentPhoneAndEmailAddress.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should have appropriate number of web components",
              "fullTitle": "Phone and email address page should have appropriate number of web components",
              "timedOut": false,
              "duration": 4,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps3 = getProps(),\n  mockStore = _getProps3.mockStore;\nvar _render3 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render3.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypesWebComponents)).to.have.lengthOf(expectedNumberOfFields);",
              "err": {},
              "uuid": "faac13e5-249d-43c0-ac8a-b5ef5925c291",
              "parentUUID": "4470bbef-6016-4f8a-b482-dd67b4626572",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "faac13e5-249d-43c0-ac8a-b5ef5925c291"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 4,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "038aab15-9c31-4465-afdf-bf2e01212820",
          "title": "Phone and email address page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/21-0966/tests/pages/survivingDependentPhoneAndEmailAddress.unit.spec.jsx",
          "file": "/src/applications/simple-forms/21-0966/tests/pages/survivingDependentPhoneAndEmailAddress.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should show the correct number of errors on submit for web components",
              "fullTitle": "Phone and email address page should show the correct number of errors on submit for web components",
              "timedOut": false,
              "duration": 14,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps4 = getProps(),\n  mockStore = _getProps4.mockStore;\nvar _render4 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render4.container,\n  getByRole = _render4.getByRole;\ngetByRole('button', {\n  name: /submit/i\n}).click();\nvar nodes = Array.from(container.querySelectorAll(\"\".concat(expectedFieldTypesWebComponents, \", \").concat(wrapperWebComponents)));\nvar errors = nodes.filter(function (node) {\n  return node.error;\n});\n(0, _chai.expect)(errors).to.have.lengthOf(expectedNumberOfErrors);",
              "err": {},
              "uuid": "a777463b-aede-4ac0-af43-43e56c5587ea",
              "parentUUID": "038aab15-9c31-4465-afdf-bf2e01212820",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a777463b-aede-4ac0-af43-43e56c5587ea"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 14,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "34de9cd3-539b-42ea-878e-5dfc311dbeb3",
          "title": "Relationship to veteran page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/21-0966/tests/pages/survivingDependentRelationshipToVeteran.unit.spec.jsx",
          "file": "/src/applications/simple-forms/21-0966/tests/pages/survivingDependentRelationshipToVeteran.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should have appropriate number of web components",
              "fullTitle": "Relationship to veteran page should have appropriate number of web components",
              "timedOut": false,
              "duration": 3,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps3 = getProps(),\n  mockStore = _getProps3.mockStore;\nvar _render3 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render3.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypesWebComponents)).to.have.lengthOf(expectedNumberOfFields);",
              "err": {},
              "uuid": "e5bebd86-4179-4e0d-b656-b06c8b12ff45",
              "parentUUID": "34de9cd3-539b-42ea-878e-5dfc311dbeb3",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "e5bebd86-4179-4e0d-b656-b06c8b12ff45"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "0a7bce0b-ea04-4a80-b7f0-809d55270d28",
          "title": "Relationship to veteran page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/21-0966/tests/pages/survivingDependentRelationshipToVeteran.unit.spec.jsx",
          "file": "/src/applications/simple-forms/21-0966/tests/pages/survivingDependentRelationshipToVeteran.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should show the correct number of errors on submit for web components",
              "fullTitle": "Relationship to veteran page should show the correct number of errors on submit for web components",
              "timedOut": false,
              "duration": 13,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps4 = getProps(),\n  mockStore = _getProps4.mockStore;\nvar _render4 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render4.container,\n  getByRole = _render4.getByRole;\ngetByRole('button', {\n  name: /submit/i\n}).click();\nvar nodes = Array.from(container.querySelectorAll(\"\".concat(expectedFieldTypesWebComponents, \", \").concat(wrapperWebComponents)));\nvar errors = nodes.filter(function (node) {\n  return node.error;\n});\n(0, _chai.expect)(errors).to.have.lengthOf(expectedNumberOfErrors);",
              "err": {},
              "uuid": "bd247964-4257-41aa-b077-2b5220753b8d",
              "parentUUID": "0a7bce0b-ea04-4a80-b7f0-809d55270d28",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "bd247964-4257-41aa-b077-2b5220753b8d"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 13,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "1456191e-bdfc-4786-b765-72ad8c2a21be",
          "title": "Veteran personal information page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/21-0966/tests/pages/survivingDependentVeteranPersonalInformation.unit.spec.jsx",
          "file": "/src/applications/simple-forms/21-0966/tests/pages/survivingDependentVeteranPersonalInformation.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should have appropriate number of web components",
              "fullTitle": "Veteran personal information page should have appropriate number of web components",
              "timedOut": false,
              "duration": 6,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps3 = getProps(),\n  mockStore = _getProps3.mockStore;\nvar _render3 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render3.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypesWebComponents)).to.have.lengthOf(expectedNumberOfFields);",
              "err": {},
              "uuid": "0ec306e6-f5d8-4f1f-a001-05ab96caf698",
              "parentUUID": "1456191e-bdfc-4786-b765-72ad8c2a21be",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "0ec306e6-f5d8-4f1f-a001-05ab96caf698"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 6,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "f95da2e1-04f9-42ff-8edc-829faddf67d5",
          "title": "Veteran personal information page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/21-0966/tests/pages/survivingDependentVeteranPersonalInformation.unit.spec.jsx",
          "file": "/src/applications/simple-forms/21-0966/tests/pages/survivingDependentVeteranPersonalInformation.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should show the correct number of errors on submit for web components",
              "fullTitle": "Veteran personal information page should show the correct number of errors on submit for web components",
              "timedOut": false,
              "duration": 16,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps4 = getProps(),\n  mockStore = _getProps4.mockStore;\nvar _render4 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render4.container,\n  getByRole = _render4.getByRole;\ngetByRole('button', {\n  name: /submit/i\n}).click();\nvar nodes = Array.from(container.querySelectorAll(\"\".concat(expectedFieldTypesWebComponents, \", \").concat(wrapperWebComponents)));\nvar errors = nodes.filter(function (node) {\n  return node.error;\n});\n(0, _chai.expect)(errors).to.have.lengthOf(expectedNumberOfErrors);",
              "err": {},
              "uuid": "3bc069c7-657a-4790-929e-7e0b45220def",
              "parentUUID": "f95da2e1-04f9-42ff-8edc-829faddf67d5",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "3bc069c7-657a-4790-929e-7e0b45220def"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 16,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "ca394a20-e514-4919-8010-fbf33fab23b9",
          "title": "Preparer name page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/21-0966/tests/pages/thirdPartyPreparerName.unit.spec.jsx",
          "file": "/src/applications/simple-forms/21-0966/tests/pages/thirdPartyPreparerName.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should have appropriate number of web components",
              "fullTitle": "Preparer name page should have appropriate number of web components",
              "timedOut": false,
              "duration": 5,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps3 = getProps(),\n  mockStore = _getProps3.mockStore;\nvar _render3 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render3.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypesWebComponents)).to.have.lengthOf(expectedNumberOfFields);",
              "err": {},
              "uuid": "dfbfc66c-8466-4430-aad0-ef1076a68436",
              "parentUUID": "ca394a20-e514-4919-8010-fbf33fab23b9",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "dfbfc66c-8466-4430-aad0-ef1076a68436"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 5,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "f83f3214-a89f-479f-83e7-d418ccf0aa13",
          "title": "Preparer name page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/21-0966/tests/pages/thirdPartyPreparerName.unit.spec.jsx",
          "file": "/src/applications/simple-forms/21-0966/tests/pages/thirdPartyPreparerName.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should show the correct number of errors on submit for web components",
              "fullTitle": "Preparer name page should show the correct number of errors on submit for web components",
              "timedOut": false,
              "duration": 15,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps4 = getProps(),\n  mockStore = _getProps4.mockStore;\nvar _render4 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render4.container,\n  getByRole = _render4.getByRole;\ngetByRole('button', {\n  name: /submit/i\n}).click();\nvar nodes = Array.from(container.querySelectorAll(\"\".concat(expectedFieldTypesWebComponents, \", \").concat(wrapperWebComponents)));\nvar errors = nodes.filter(function (node) {\n  return node.error;\n});\n(0, _chai.expect)(errors).to.have.lengthOf(expectedNumberOfErrors);",
              "err": {},
              "uuid": "2213c7d5-8397-4e7f-a477-f692e8054812",
              "parentUUID": "f83f3214-a89f-479f-83e7-d418ccf0aa13",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "2213c7d5-8397-4e7f-a477-f692e8054812"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 15,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "88c36d75-1c92-4d8a-a65d-534f1bd30215",
          "title": "Third party preparer role page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/21-0966/tests/pages/thirdPartyPreparerRole.unit.spec.jsx",
          "file": "/src/applications/simple-forms/21-0966/tests/pages/thirdPartyPreparerRole.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should have appropriate number of web components",
              "fullTitle": "Third party preparer role page should have appropriate number of web components",
              "timedOut": false,
              "duration": 6,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps3 = getProps(),\n  mockStore = _getProps3.mockStore;\nvar _render3 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render3.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypesWebComponents)).to.have.lengthOf(expectedNumberOfFields);",
              "err": {},
              "uuid": "8d9ac8c5-dc1a-4891-b2b4-4d3601629708",
              "parentUUID": "88c36d75-1c92-4d8a-a65d-534f1bd30215",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "8d9ac8c5-dc1a-4891-b2b4-4d3601629708"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 6,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "79a179da-b13a-44c9-88f2-7162dc83ef48",
          "title": "Third party preparer role page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/21-0966/tests/pages/thirdPartyPreparerRole.unit.spec.jsx",
          "file": "/src/applications/simple-forms/21-0966/tests/pages/thirdPartyPreparerRole.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should show the correct number of errors on submit for web components",
              "fullTitle": "Third party preparer role page should show the correct number of errors on submit for web components",
              "timedOut": false,
              "duration": 12,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps4 = getProps(),\n  mockStore = _getProps4.mockStore;\nvar _render4 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render4.container,\n  getByRole = _render4.getByRole;\ngetByRole('button', {\n  name: /submit/i\n}).click();\nvar nodes = Array.from(container.querySelectorAll(\"\".concat(expectedFieldTypesWebComponents, \", \").concat(wrapperWebComponents)));\nvar errors = nodes.filter(function (node) {\n  return node.error;\n});\n(0, _chai.expect)(errors).to.have.lengthOf(expectedNumberOfErrors);",
              "err": {},
              "uuid": "a82b0956-2624-4e7d-84a6-b32c8f9d2dd1",
              "parentUUID": "79a179da-b13a-44c9-88f2-7162dc83ef48",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a82b0956-2624-4e7d-84a6-b32c8f9d2dd1"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 12,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "18281df8-659c-4a54-adb8-c2e974a3dcfa",
          "title": "Surviving dependent benefit selection page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/21-0966/tests/pages/thirdPartySurvivingDependentBenefitSelection.unit.spec.jsx",
          "file": "/src/applications/simple-forms/21-0966/tests/pages/thirdPartySurvivingDependentBenefitSelection.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should have appropriate number of web components",
              "fullTitle": "Surviving dependent benefit selection page should have appropriate number of web components",
              "timedOut": false,
              "duration": 3,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps3 = getProps(),\n  mockStore = _getProps3.mockStore;\nvar _render3 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render3.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypesWebComponents)).to.have.lengthOf(expectedNumberOfFields);",
              "err": {},
              "uuid": "f8257795-d417-4355-a675-a3d8952388a1",
              "parentUUID": "18281df8-659c-4a54-adb8-c2e974a3dcfa",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f8257795-d417-4355-a675-a3d8952388a1"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "6f2fe83a-78ee-4b39-bc38-2ef65cc2d2c3",
          "title": "Surviving dependent benefit selection page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/21-0966/tests/pages/thirdPartySurvivingDependentBenefitSelection.unit.spec.jsx",
          "file": "/src/applications/simple-forms/21-0966/tests/pages/thirdPartySurvivingDependentBenefitSelection.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should show the correct number of errors on submit for web components",
              "fullTitle": "Surviving dependent benefit selection page should show the correct number of errors on submit for web components",
              "timedOut": false,
              "duration": 10,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps4 = getProps(),\n  mockStore = _getProps4.mockStore;\nvar _render4 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render4.container,\n  getByRole = _render4.getByRole;\ngetByRole('button', {\n  name: /submit/i\n}).click();\nvar nodes = Array.from(container.querySelectorAll(\"\".concat(expectedFieldTypesWebComponents, \", \").concat(wrapperWebComponents)));\nvar errors = nodes.filter(function (node) {\n  return node.error;\n});\n(0, _chai.expect)(errors).to.have.lengthOf(expectedNumberOfErrors);",
              "err": {},
              "uuid": "d4acc772-7879-412a-a031-d67655293b29",
              "parentUUID": "6f2fe83a-78ee-4b39-bc38-2ef65cc2d2c3",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "d4acc772-7879-412a-a031-d67655293b29"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 10,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "b73424fb-695e-4eb9-abf8-35a882527ddd",
          "title": "Relationship to veteran page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/21-0966/tests/pages/thirdPartySurvivingDependentRelationshipToVeteran.unit.spec.jsx",
          "file": "/src/applications/simple-forms/21-0966/tests/pages/thirdPartySurvivingDependentRelationshipToVeteran.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should have appropriate number of web components",
              "fullTitle": "Relationship to veteran page should have appropriate number of web components",
              "timedOut": false,
              "duration": 4,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps3 = getProps(),\n  mockStore = _getProps3.mockStore;\nvar _render3 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render3.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypesWebComponents)).to.have.lengthOf(expectedNumberOfFields);",
              "err": {},
              "uuid": "c5c1b4d9-7e88-45ef-ba27-c2bcdd16932e",
              "parentUUID": "b73424fb-695e-4eb9-abf8-35a882527ddd",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "c5c1b4d9-7e88-45ef-ba27-c2bcdd16932e"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 4,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "43867834-99be-44ce-83f5-00e70fe54775",
          "title": "Relationship to veteran page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/21-0966/tests/pages/thirdPartySurvivingDependentRelationshipToVeteran.unit.spec.jsx",
          "file": "/src/applications/simple-forms/21-0966/tests/pages/thirdPartySurvivingDependentRelationshipToVeteran.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should show the correct number of errors on submit for web components",
              "fullTitle": "Relationship to veteran page should show the correct number of errors on submit for web components",
              "timedOut": false,
              "duration": 11,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps4 = getProps(),\n  mockStore = _getProps4.mockStore;\nvar _render4 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render4.container,\n  getByRole = _render4.getByRole;\ngetByRole('button', {\n  name: /submit/i\n}).click();\nvar nodes = Array.from(container.querySelectorAll(\"\".concat(expectedFieldTypesWebComponents, \", \").concat(wrapperWebComponents)));\nvar errors = nodes.filter(function (node) {\n  return node.error;\n});\n(0, _chai.expect)(errors).to.have.lengthOf(expectedNumberOfErrors);",
              "err": {},
              "uuid": "0435f709-ec44-4a36-9e77-64ee6fac6274",
              "parentUUID": "43867834-99be-44ce-83f5-00e70fe54775",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "0435f709-ec44-4a36-9e77-64ee6fac6274"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 11,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "3548d941-4062-48f8-957a-a8e016d18151",
          "title": "Veteran personal information page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/21-0966/tests/pages/thirdPartySurvivingDependentVeteranPersonalInformation.unit.spec.jsx",
          "file": "/src/applications/simple-forms/21-0966/tests/pages/thirdPartySurvivingDependentVeteranPersonalInformation.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should have appropriate number of web components",
              "fullTitle": "Veteran personal information page should have appropriate number of web components",
              "timedOut": false,
              "duration": 5,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps3 = getProps(),\n  mockStore = _getProps3.mockStore;\nvar _render3 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render3.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypesWebComponents)).to.have.lengthOf(expectedNumberOfFields);",
              "err": {},
              "uuid": "636d6fa4-1090-4470-9b77-edd036be8c1b",
              "parentUUID": "3548d941-4062-48f8-957a-a8e016d18151",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "636d6fa4-1090-4470-9b77-edd036be8c1b"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 5,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "965494c8-c9ca-470b-b856-d8c3051c1981",
          "title": "Veteran personal information page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/21-0966/tests/pages/thirdPartySurvivingDependentVeteranPersonalInformation.unit.spec.jsx",
          "file": "/src/applications/simple-forms/21-0966/tests/pages/thirdPartySurvivingDependentVeteranPersonalInformation.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should show the correct number of errors on submit for web components",
              "fullTitle": "Veteran personal information page should show the correct number of errors on submit for web components",
              "timedOut": false,
              "duration": 15,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps4 = getProps(),\n  mockStore = _getProps4.mockStore;\nvar _render4 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render4.container,\n  getByRole = _render4.getByRole;\ngetByRole('button', {\n  name: /submit/i\n}).click();\nvar nodes = Array.from(container.querySelectorAll(\"\".concat(expectedFieldTypesWebComponents, \", \").concat(wrapperWebComponents)));\nvar errors = nodes.filter(function (node) {\n  return node.error;\n});\n(0, _chai.expect)(errors).to.have.lengthOf(expectedNumberOfErrors);",
              "err": {},
              "uuid": "7a776788-8487-487f-b248-b92c1fcf8c73",
              "parentUUID": "965494c8-c9ca-470b-b856-d8c3051c1981",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "7a776788-8487-487f-b248-b92c1fcf8c73"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 15,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "b81d1fba-a134-43c6-989c-561b86749015",
          "title": "Veteran benefit selection page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/21-0966/tests/pages/thirdPartyVeteranBenefitSelection.unit.spec.jsx",
          "file": "/src/applications/simple-forms/21-0966/tests/pages/thirdPartyVeteranBenefitSelection.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should have appropriate number of web components",
              "fullTitle": "Veteran benefit selection page should have appropriate number of web components",
              "timedOut": false,
              "duration": 4,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps3 = getProps(),\n  mockStore = _getProps3.mockStore;\nvar _render3 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render3.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypesWebComponents)).to.have.lengthOf(expectedNumberOfFields);",
              "err": {},
              "uuid": "9b59d9cd-45d2-4efa-ab42-4ee9fafb48a8",
              "parentUUID": "b81d1fba-a134-43c6-989c-561b86749015",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "9b59d9cd-45d2-4efa-ab42-4ee9fafb48a8"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 4,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "ea9334c1-ab67-423f-86e4-87c4329bfd67",
          "title": "Veteran benefit selection page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/21-0966/tests/pages/thirdPartyVeteranBenefitSelection.unit.spec.jsx",
          "file": "/src/applications/simple-forms/21-0966/tests/pages/thirdPartyVeteranBenefitSelection.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should show the correct number of errors on submit for web components",
              "fullTitle": "Veteran benefit selection page should show the correct number of errors on submit for web components",
              "timedOut": false,
              "duration": 12,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps4 = getProps(),\n  mockStore = _getProps4.mockStore;\nvar _render4 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render4.container,\n  getByRole = _render4.getByRole;\ngetByRole('button', {\n  name: /submit/i\n}).click();\nvar nodes = Array.from(container.querySelectorAll(\"\".concat(expectedFieldTypesWebComponents, \", \").concat(wrapperWebComponents)));\nvar errors = nodes.filter(function (node) {\n  return node.error;\n});\n(0, _chai.expect)(errors).to.have.lengthOf(expectedNumberOfErrors);",
              "err": {},
              "uuid": "077fd067-92d6-4d4c-b775-7563de19bb0b",
              "parentUUID": "ea9334c1-ab67-423f-86e4-87c4329bfd67",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "077fd067-92d6-4d4c-b775-7563de19bb0b"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 12,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "e4987afd-9a19-4621-bb55-2cc3ac36a680",
          "title": "Veteran benefit selection page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/21-0966/tests/pages/veteranBenefitSelection.unit.spec.jsx",
          "file": "/src/applications/simple-forms/21-0966/tests/pages/veteranBenefitSelection.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should have appropriate number of web components",
              "fullTitle": "Veteran benefit selection page should have appropriate number of web components",
              "timedOut": false,
              "duration": 4,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps3 = getProps(),\n  mockStore = _getProps3.mockStore;\nvar _render3 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render3.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypesWebComponents)).to.have.lengthOf(expectedNumberOfFields);",
              "err": {},
              "uuid": "c5dca9fe-1808-4d95-a8ac-17e8d0b4a268",
              "parentUUID": "e4987afd-9a19-4621-bb55-2cc3ac36a680",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "c5dca9fe-1808-4d95-a8ac-17e8d0b4a268"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 4,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "d6669a0d-6989-46a8-911c-71d6cf0b56de",
          "title": "Veteran benefit selection page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/21-0966/tests/pages/veteranBenefitSelection.unit.spec.jsx",
          "file": "/src/applications/simple-forms/21-0966/tests/pages/veteranBenefitSelection.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should show the correct number of errors on submit for web components",
              "fullTitle": "Veteran benefit selection page should show the correct number of errors on submit for web components",
              "timedOut": false,
              "duration": 10,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps4 = getProps(),\n  mockStore = _getProps4.mockStore;\nvar _render4 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render4.container,\n  getByRole = _render4.getByRole;\ngetByRole('button', {\n  name: /submit/i\n}).click();\nvar nodes = Array.from(container.querySelectorAll(\"\".concat(expectedFieldTypesWebComponents, \", \").concat(wrapperWebComponents)));\nvar errors = nodes.filter(function (node) {\n  return node.error;\n});\n(0, _chai.expect)(errors).to.have.lengthOf(expectedNumberOfErrors);",
              "err": {},
              "uuid": "3372c3ab-09c4-446f-ae6a-0a8b95e706e6",
              "parentUUID": "d6669a0d-6989-46a8-911c-71d6cf0b56de",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "3372c3ab-09c4-446f-ae6a-0a8b95e706e6"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 10,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "645f514a-fc37-428b-989a-d3de769b144a",
          "title": "Veteran benefit selection compensation page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/21-0966/tests/pages/veteranBenefitSelectionCompensation.unit.spec.jsx",
          "file": "/src/applications/simple-forms/21-0966/tests/pages/veteranBenefitSelectionCompensation.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should have appropriate number of web components",
              "fullTitle": "Veteran benefit selection compensation page should have appropriate number of web components",
              "timedOut": false,
              "duration": 4,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps3 = getProps(),\n  mockStore = _getProps3.mockStore;\nvar _render3 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render3.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypesWebComponents)).to.have.lengthOf(expectedNumberOfFields);",
              "err": {},
              "uuid": "d1e337ec-f4ba-4b73-b36f-8dbb3d0d168c",
              "parentUUID": "645f514a-fc37-428b-989a-d3de769b144a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "d1e337ec-f4ba-4b73-b36f-8dbb3d0d168c"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 4,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "dd9aabcf-16b4-4cb1-8058-21addef63ec5",
          "title": "Veteran benefit selection compensation page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/21-0966/tests/pages/veteranBenefitSelectionCompensation.unit.spec.jsx",
          "file": "/src/applications/simple-forms/21-0966/tests/pages/veteranBenefitSelectionCompensation.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should show the correct number of errors on submit for web components",
              "fullTitle": "Veteran benefit selection compensation page should show the correct number of errors on submit for web components",
              "timedOut": false,
              "duration": 11,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps4 = getProps(),\n  mockStore = _getProps4.mockStore;\nvar _render4 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render4.container,\n  getByRole = _render4.getByRole;\ngetByRole('button', {\n  name: /submit/i\n}).click();\nvar nodes = Array.from(container.querySelectorAll(\"\".concat(expectedFieldTypesWebComponents, \", \").concat(wrapperWebComponents)));\nvar errors = nodes.filter(function (node) {\n  return node.error;\n});\n(0, _chai.expect)(errors).to.have.lengthOf(expectedNumberOfErrors);",
              "err": {},
              "uuid": "7e92405b-29f5-4336-affc-102773326b9f",
              "parentUUID": "dd9aabcf-16b4-4cb1-8058-21addef63ec5",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "7e92405b-29f5-4336-affc-102773326b9f"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 11,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "5a981aff-3820-49d8-9a79-a434d362235b",
          "title": "Veteran benefit selection pension page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/21-0966/tests/pages/veteranBenefitSelectionPension.unit.spec.jsx",
          "file": "/src/applications/simple-forms/21-0966/tests/pages/veteranBenefitSelectionPension.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should have appropriate number of web components",
              "fullTitle": "Veteran benefit selection pension page should have appropriate number of web components",
              "timedOut": false,
              "duration": 3,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps3 = getProps(),\n  mockStore = _getProps3.mockStore;\nvar _render3 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render3.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypesWebComponents)).to.have.lengthOf(expectedNumberOfFields);",
              "err": {},
              "uuid": "84ffe112-7e5a-4ad0-866a-24c4aa219928",
              "parentUUID": "5a981aff-3820-49d8-9a79-a434d362235b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "84ffe112-7e5a-4ad0-866a-24c4aa219928"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "f714e9d0-12e1-4c12-89d1-318e68693381",
          "title": "Veteran benefit selection pension page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/21-0966/tests/pages/veteranBenefitSelectionPension.unit.spec.jsx",
          "file": "/src/applications/simple-forms/21-0966/tests/pages/veteranBenefitSelectionPension.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should show the correct number of errors on submit for web components",
              "fullTitle": "Veteran benefit selection pension page should show the correct number of errors on submit for web components",
              "timedOut": false,
              "duration": 10,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps4 = getProps(),\n  mockStore = _getProps4.mockStore;\nvar _render4 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render4.container,\n  getByRole = _render4.getByRole;\ngetByRole('button', {\n  name: /submit/i\n}).click();\nvar nodes = Array.from(container.querySelectorAll(\"\".concat(expectedFieldTypesWebComponents, \", \").concat(wrapperWebComponents)));\nvar errors = nodes.filter(function (node) {\n  return node.error;\n});\n(0, _chai.expect)(errors).to.have.lengthOf(expectedNumberOfErrors);",
              "err": {},
              "uuid": "1fc9c242-7236-4b42-86fa-3fce74c045c9",
              "parentUUID": "f714e9d0-12e1-4c12-89d1-318e68693381",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "1fc9c242-7236-4b42-86fa-3fce74c045c9"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 10,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "84e47def-d00b-46ce-a3df-9171ab68345c",
          "title": "Veteran idenfitication information page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/21-0966/tests/pages/veteranIdentificationInformation.unit.spec.jsx",
          "file": "/src/applications/simple-forms/21-0966/tests/pages/veteranIdentificationInformation.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should have appropriate number of web components",
              "fullTitle": "Veteran idenfitication information page should have appropriate number of web components",
              "timedOut": false,
              "duration": 4,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps3 = getProps(),\n  mockStore = _getProps3.mockStore;\nvar _render3 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render3.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypesWebComponents)).to.have.lengthOf(expectedNumberOfFields);",
              "err": {},
              "uuid": "08dab365-5033-443a-994e-ca0da4a2a675",
              "parentUUID": "84e47def-d00b-46ce-a3df-9171ab68345c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "08dab365-5033-443a-994e-ca0da4a2a675"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 4,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "109d28f8-d85b-4407-b73a-07ee7e122866",
          "title": "Veteran idenfitication information page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/21-0966/tests/pages/veteranIdentificationInformation.unit.spec.jsx",
          "file": "/src/applications/simple-forms/21-0966/tests/pages/veteranIdentificationInformation.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should show the correct number of errors on submit for web components",
              "fullTitle": "Veteran idenfitication information page should show the correct number of errors on submit for web components",
              "timedOut": false,
              "duration": 13,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps4 = getProps(),\n  mockStore = _getProps4.mockStore;\nvar _render4 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render4.container,\n  getByRole = _render4.getByRole;\ngetByRole('button', {\n  name: /submit/i\n}).click();\nvar nodes = Array.from(container.querySelectorAll(\"\".concat(expectedFieldTypesWebComponents, \", \").concat(wrapperWebComponents)));\nvar errors = nodes.filter(function (node) {\n  return node.error;\n});\n(0, _chai.expect)(errors).to.have.lengthOf(expectedNumberOfErrors);",
              "err": {},
              "uuid": "5b4c100e-f57a-4428-9cad-1a05d9d30e2d",
              "parentUUID": "109d28f8-d85b-4407-b73a-07ee7e122866",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "5b4c100e-f57a-4428-9cad-1a05d9d30e2d"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 13,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "ae63c437-2252-4464-b18a-d8fd55f64349",
          "title": "Mailing address page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/21-0966/tests/pages/veteranMailingAddress.unit.spec.jsx",
          "file": "/src/applications/simple-forms/21-0966/tests/pages/veteranMailingAddress.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should have appropriate number of web components",
              "fullTitle": "Mailing address page should have appropriate number of web components",
              "timedOut": false,
              "duration": 17,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps3 = getProps(),\n  mockStore = _getProps3.mockStore;\nvar _render3 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render3.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypesWebComponents)).to.have.lengthOf(expectedNumberOfFields);",
              "err": {},
              "uuid": "5f23fe38-90d0-4a5e-84c8-bea9fe06f8e6",
              "parentUUID": "ae63c437-2252-4464-b18a-d8fd55f64349",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "5f23fe38-90d0-4a5e-84c8-bea9fe06f8e6"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 17,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "b4e3f6fb-0451-4ce9-b991-8356c89a6d27",
          "title": "Mailing address page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/21-0966/tests/pages/veteranMailingAddress.unit.spec.jsx",
          "file": "/src/applications/simple-forms/21-0966/tests/pages/veteranMailingAddress.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should show the correct number of errors on submit for web components",
              "fullTitle": "Mailing address page should show the correct number of errors on submit for web components",
              "timedOut": false,
              "duration": 61,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps4 = getProps(),\n  mockStore = _getProps4.mockStore;\nvar _render4 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render4.container,\n  getByRole = _render4.getByRole;\ngetByRole('button', {\n  name: /submit/i\n}).click();\nvar nodes = Array.from(container.querySelectorAll(\"\".concat(expectedFieldTypesWebComponents, \", \").concat(wrapperWebComponents)));\nvar errors = nodes.filter(function (node) {\n  return node.error;\n});\n(0, _chai.expect)(errors).to.have.lengthOf(expectedNumberOfErrors);",
              "err": {},
              "uuid": "a7eaa0b6-6c0e-4390-9327-5144fc682390",
              "parentUUID": "b4e3f6fb-0451-4ce9-b991-8356c89a6d27",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a7eaa0b6-6c0e-4390-9327-5144fc682390"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 61,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "5f888828-38bc-48d9-b368-215559a2a1b5",
          "title": "Veteran personal information page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/21-0966/tests/pages/veteranPersonalInformation.unit.spec.jsx",
          "file": "/src/applications/simple-forms/21-0966/tests/pages/veteranPersonalInformation.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should have appropriate number of web components",
              "fullTitle": "Veteran personal information page should have appropriate number of web components",
              "timedOut": false,
              "duration": 5,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps3 = getProps(),\n  mockStore = _getProps3.mockStore;\nvar _render3 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render3.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypesWebComponents)).to.have.lengthOf(expectedNumberOfFields);",
              "err": {},
              "uuid": "4e3a3d3e-de2c-4c63-a8b1-7b22223e5cdd",
              "parentUUID": "5f888828-38bc-48d9-b368-215559a2a1b5",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "4e3a3d3e-de2c-4c63-a8b1-7b22223e5cdd"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 5,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "5dcf5037-f313-4ba9-b249-9671ac7c86da",
          "title": "Veteran personal information page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/21-0966/tests/pages/veteranPersonalInformation.unit.spec.jsx",
          "file": "/src/applications/simple-forms/21-0966/tests/pages/veteranPersonalInformation.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should show the correct number of errors on submit for web components",
              "fullTitle": "Veteran personal information page should show the correct number of errors on submit for web components",
              "timedOut": false,
              "duration": 14,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps4 = getProps(),\n  mockStore = _getProps4.mockStore;\nvar _render4 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render4.container,\n  getByRole = _render4.getByRole;\ngetByRole('button', {\n  name: /submit/i\n}).click();\nvar nodes = Array.from(container.querySelectorAll(\"\".concat(expectedFieldTypesWebComponents, \", \").concat(wrapperWebComponents)));\nvar errors = nodes.filter(function (node) {\n  return node.error;\n});\n(0, _chai.expect)(errors).to.have.lengthOf(expectedNumberOfErrors);",
              "err": {},
              "uuid": "9a8cc7fe-181e-4464-912d-7f24cc79aec4",
              "parentUUID": "5dcf5037-f313-4ba9-b249-9671ac7c86da",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "9a8cc7fe-181e-4464-912d-7f24cc79aec4"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 14,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "cba882b7-9414-47a2-8bbd-bf51d2886dc1",
          "title": "Phone and email address page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/21-0966/tests/pages/veteranPhoneAndEmailAddress.unit.spec.jsx",
          "file": "/src/applications/simple-forms/21-0966/tests/pages/veteranPhoneAndEmailAddress.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should have appropriate number of web components",
              "fullTitle": "Phone and email address page should have appropriate number of web components",
              "timedOut": false,
              "duration": 4,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps3 = getProps(),\n  mockStore = _getProps3.mockStore;\nvar _render3 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render3.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypesWebComponents)).to.have.lengthOf(expectedNumberOfFields);",
              "err": {},
              "uuid": "88c3166a-ef8d-425b-84c3-b8a773b26f5e",
              "parentUUID": "cba882b7-9414-47a2-8bbd-bf51d2886dc1",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "88c3166a-ef8d-425b-84c3-b8a773b26f5e"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 4,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "40beaeaa-1c84-4429-9278-4c83f6967c87",
          "title": "Phone and email address page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/21-0966/tests/pages/veteranPhoneAndEmailAddress.unit.spec.jsx",
          "file": "/src/applications/simple-forms/21-0966/tests/pages/veteranPhoneAndEmailAddress.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should show the correct number of errors on submit for web components",
              "fullTitle": "Phone and email address page should show the correct number of errors on submit for web components",
              "timedOut": false,
              "duration": 13,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps4 = getProps(),\n  mockStore = _getProps4.mockStore;\nvar _render4 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render4.container,\n  getByRole = _render4.getByRole;\ngetByRole('button', {\n  name: /submit/i\n}).click();\nvar nodes = Array.from(container.querySelectorAll(\"\".concat(expectedFieldTypesWebComponents, \", \").concat(wrapperWebComponents)));\nvar errors = nodes.filter(function (node) {\n  return node.error;\n});\n(0, _chai.expect)(errors).to.have.lengthOf(expectedNumberOfErrors);",
              "err": {},
              "uuid": "a7188b1c-00d3-4ac5-a17f-89f176940313",
              "parentUUID": "40beaeaa-1c84-4429-9278-4c83f6967c87",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a7188b1c-00d3-4ac5-a17f-89f176940313"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 13,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "76f98b0e-d0ef-4930-97a0-eb733c5f5397",
          "title": "helper functions",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/21-0972/tests/config/helpers.unit.spec.js",
          "file": "/src/applications/simple-forms/21-0972/tests/config/helpers.unit.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "provides the correct information for a veteran",
              "fullTitle": "helper functions provides the correct information for a veteran",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var formData = {\n  claimantIdentification: 'VETERAN'\n};\n(0, _chai.expect)((0, _helpers.claimantIsVeteran)({\n  formData: formData\n})).to.equal(true);\n(0, _chai.expect)((0, _helpers.claimantIsSpouse)({\n  formData: formData\n})).to.equal(false);\n(0, _chai.expect)((0, _helpers.claimantIsParent)({\n  formData: formData\n})).to.equal(false);\n(0, _chai.expect)((0, _helpers.claimantIsChild)({\n  formData: formData\n})).to.equal(false);\n(0, _chai.expect)((0, _helpers.claimantIsNotVeteran)({\n  formData: formData\n})).to.equal(false);\n(0, _chai.expect)((0, _helpers.getClaimantIdentificationText)(formData)).to.match(/veteran/i);\n(0, _chai.expect)((0, _helpers.claimantPersonalInformationTitle)({\n  formData: formData\n})).to.match(/veteran/i);\n(0, _chai.expect)((0, _helpers.claimantSsnTitle)({\n  formData: formData\n})).to.match(/veteran/i);\n(0, _chai.expect)((0, _helpers.claimantAddressTitle)({\n  formData: formData\n})).to.match(/veteran/i);\n(0, _chai.expect)((0, _helpers.claimantContactInformationTitle)({\n  formData: formData\n})).to.match(/veteran/i);",
              "err": {},
              "uuid": "1f2c8763-53a6-490b-a8f9-f3d48d679d9c",
              "parentUUID": "76f98b0e-d0ef-4930-97a0-eb733c5f5397",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "provides the correct information for a spouse",
              "fullTitle": "helper functions provides the correct information for a spouse",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var formData = {\n  claimantIdentification: 'SPOUSE'\n};\n(0, _chai.expect)((0, _helpers.claimantIsVeteran)({\n  formData: formData\n})).to.equal(false);\n(0, _chai.expect)((0, _helpers.claimantIsSpouse)({\n  formData: formData\n})).to.equal(true);\n(0, _chai.expect)((0, _helpers.claimantIsParent)({\n  formData: formData\n})).to.equal(false);\n(0, _chai.expect)((0, _helpers.claimantIsChild)({\n  formData: formData\n})).to.equal(false);\n(0, _chai.expect)((0, _helpers.claimantIsNotVeteran)({\n  formData: formData\n})).to.equal(true);\n(0, _chai.expect)((0, _helpers.getClaimantIdentificationText)(formData)).to.match(/spouse/i);\n(0, _chai.expect)((0, _helpers.claimantPersonalInformationTitle)({\n  formData: formData\n})).to.match(/spouse/i);\n(0, _chai.expect)((0, _helpers.claimantSsnTitle)({\n  formData: formData\n})).to.match(/spouse/i);\n(0, _chai.expect)((0, _helpers.claimantAddressTitle)({\n  formData: formData\n})).to.match(/spouse/i);\n(0, _chai.expect)((0, _helpers.claimantContactInformationTitle)({\n  formData: formData\n})).to.match(/spouse/i);",
              "err": {},
              "uuid": "e5d07e49-6bca-407b-86d9-c289751a354c",
              "parentUUID": "76f98b0e-d0ef-4930-97a0-eb733c5f5397",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "provides the correct information for a parent",
              "fullTitle": "helper functions provides the correct information for a parent",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var formData = {\n  claimantIdentification: 'PARENT'\n};\n(0, _chai.expect)((0, _helpers.claimantIsVeteran)({\n  formData: formData\n})).to.equal(false);\n(0, _chai.expect)((0, _helpers.claimantIsSpouse)({\n  formData: formData\n})).to.equal(false);\n(0, _chai.expect)((0, _helpers.claimantIsParent)({\n  formData: formData\n})).to.equal(true);\n(0, _chai.expect)((0, _helpers.claimantIsChild)({\n  formData: formData\n})).to.equal(false);\n(0, _chai.expect)((0, _helpers.claimantIsNotVeteran)({\n  formData: formData\n})).to.equal(true);\n(0, _chai.expect)((0, _helpers.getClaimantIdentificationText)(formData)).to.match(/parent/i);\n(0, _chai.expect)((0, _helpers.claimantPersonalInformationTitle)({\n  formData: formData\n})).to.match(/parent/i);\n(0, _chai.expect)((0, _helpers.claimantSsnTitle)({\n  formData: formData\n})).to.match(/parent/i);\n(0, _chai.expect)((0, _helpers.claimantAddressTitle)({\n  formData: formData\n})).to.match(/parent/i);\n(0, _chai.expect)((0, _helpers.claimantContactInformationTitle)({\n  formData: formData\n})).to.match(/parent/i);",
              "err": {},
              "uuid": "d3656e34-0921-45dd-9d61-143d614525cc",
              "parentUUID": "76f98b0e-d0ef-4930-97a0-eb733c5f5397",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "provides the correct information for a child",
              "fullTitle": "helper functions provides the correct information for a child",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var formData = {\n  claimantIdentification: 'CHILD'\n};\n(0, _chai.expect)((0, _helpers.claimantIsVeteran)({\n  formData: formData\n})).to.equal(false);\n(0, _chai.expect)((0, _helpers.claimantIsSpouse)({\n  formData: formData\n})).to.equal(false);\n(0, _chai.expect)((0, _helpers.claimantIsParent)({\n  formData: formData\n})).to.equal(false);\n(0, _chai.expect)((0, _helpers.claimantIsChild)({\n  formData: formData\n})).to.equal(true);\n(0, _chai.expect)((0, _helpers.claimantIsNotVeteran)({\n  formData: formData\n})).to.equal(true);\n(0, _chai.expect)((0, _helpers.getClaimantIdentificationText)(formData)).to.match(/child/i);\n(0, _chai.expect)((0, _helpers.claimantPersonalInformationTitle)({\n  formData: formData\n})).to.match(/child/i);\n(0, _chai.expect)((0, _helpers.claimantSsnTitle)({\n  formData: formData\n})).to.match(/child/i);\n(0, _chai.expect)((0, _helpers.claimantAddressTitle)({\n  formData: formData\n})).to.match(/child/i);\n(0, _chai.expect)((0, _helpers.claimantContactInformationTitle)({\n  formData: formData\n})).to.match(/child/i);",
              "err": {},
              "uuid": "b437ed80-5466-49f0-b6f8-9b8fc5d78d70",
              "parentUUID": "76f98b0e-d0ef-4930-97a0-eb733c5f5397",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "1f2c8763-53a6-490b-a8f9-f3d48d679d9c",
            "e5d07e49-6bca-407b-86d9-c289751a354c",
            "d3656e34-0921-45dd-9d61-143d614525cc",
            "b437ed80-5466-49f0-b6f8-9b8fc5d78d70"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "1bb4a496-3bd5-4b78-ad75-a238b667df10",
          "title": "transformForSubmit",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/21-0972/tests/config/submit-transformer.unit.spec.js",
          "file": "/src/applications/simple-forms/21-0972/tests/config/submit-transformer.unit.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should transform json correctly",
              "fullTitle": "transformForSubmit should transform json correctly",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var data = {\n  data: _maximalTest.default\n};\nvar transformedResult = JSON.parse((0, _submitTransformer.default)(_form.default, data));\n(0, _chai.expect)(transformedResult).to.deep.equal(_maximalTest2.default);",
              "err": {},
              "uuid": "10348e3d-70ee-4442-aa5e-e89c3f5106de",
              "parentUUID": "1bb4a496-3bd5-4b78-ad75-a238b667df10",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "10348e3d-70ee-4442-aa5e-e89c3f5106de"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "2163e435-c63c-4be5-947e-914f3f497a54",
          "title": "Confirmation page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/21-0972/tests/containers/ConfirmationPage.unit.spec.jsx",
          "file": "/src/applications/simple-forms/21-0972/tests/containers/ConfirmationPage.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "it should show status success and the correct name of person",
              "fullTitle": "Confirmation page it should show status success and the correct name of person",
              "timedOut": false,
              "duration": 13,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _render = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore(storeBase)\n  }, /*#__PURE__*/_react.default.createElement(_ConfirmationPage.default, {\n    route: {\n      formConfig: _form.default\n    }\n  }))),\n  container = _render.container,\n  getByText = _render.getByText;\n(0, _chai.expect)(container.querySelector('va-alert')).to.have.attr('status', 'success');\ngetByText('Arthur');\ngetByText('Preparer');",
              "err": {},
              "uuid": "9f3fc438-30b5-461f-9bc2-dba5d2fb6041",
              "parentUUID": "2163e435-c63c-4be5-947e-914f3f497a54",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "9f3fc438-30b5-461f-9bc2-dba5d2fb6041"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 13,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "328b8a33-6fa9-4865-9409-67760c077a2c",
          "title": "IntroductionPage",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/21-0972/tests/containers/IntroductionPage.unit.spec.jsx",
          "file": "/src/applications/simple-forms/21-0972/tests/containers/IntroductionPage.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should render",
              "fullTitle": "IntroductionPage should render",
              "timedOut": false,
              "duration": 4,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _render = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_IntroductionPage.default, props))),\n  container = _render.container;\n(0, _chai.expect)(container).to.exist;",
              "err": {},
              "uuid": "1399456e-6dca-4aa7-aad9-26b114f88ff4",
              "parentUUID": "328b8a33-6fa9-4865-9409-67760c077a2c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "1399456e-6dca-4aa7-aad9-26b114f88ff4"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 4,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "08a5fce8-2a33-433b-a17a-07b929d8a005",
          "title": "additional information page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/21-0972/tests/pages/additionalInformation.unit.spec.jsx",
          "file": "/src/applications/simple-forms/21-0972/tests/pages/additionalInformation.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should have appropriate number of web components",
              "fullTitle": "additional information page should have appropriate number of web components",
              "timedOut": false,
              "duration": 3,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps3 = getProps(),\n  mockStore = _getProps3.mockStore;\nvar _render3 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render3.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypesWebComponents)).to.have.lengthOf(expectedNumberOfFields);",
              "err": {},
              "uuid": "97ed24f8-15e5-4728-83a2-d91ffac8a1da",
              "parentUUID": "08a5fce8-2a33-433b-a17a-07b929d8a005",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "97ed24f8-15e5-4728-83a2-d91ffac8a1da"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "9835dba8-b5f5-4a59-848c-5350c077d96b",
          "title": "additional information page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/21-0972/tests/pages/additionalInformation.unit.spec.jsx",
          "file": "/src/applications/simple-forms/21-0972/tests/pages/additionalInformation.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should show the correct number of errors on submit for web components",
              "fullTitle": "additional information page should show the correct number of errors on submit for web components",
              "timedOut": false,
              "duration": 8,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps4 = getProps(),\n  mockStore = _getProps4.mockStore;\nvar _render4 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render4.container,\n  getByRole = _render4.getByRole;\ngetByRole('button', {\n  name: /submit/i\n}).click();\nvar nodes = Array.from(container.querySelectorAll(\"\".concat(expectedFieldTypesWebComponents, \", \").concat(wrapperWebComponents)));\nvar errors = nodes.filter(function (node) {\n  return node.error;\n});\n(0, _chai.expect)(errors).to.have.lengthOf(expectedNumberOfErrors);",
              "err": {},
              "uuid": "16470d97-6a41-4636-a6be-044e74f9deea",
              "parentUUID": "9835dba8-b5f5-4a59-848c-5350c077d96b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "16470d97-6a41-4636-a6be-044e74f9deea"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 8,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "f6d52b9f-d836-4c3a-983d-53c63708b0cf",
          "title": "claimant address page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/21-0972/tests/pages/claimantAddress.unit.spec.jsx",
          "file": "/src/applications/simple-forms/21-0972/tests/pages/claimantAddress.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should have appropriate number of web components",
              "fullTitle": "claimant address page should have appropriate number of web components",
              "timedOut": false,
              "duration": 17,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps3 = getProps(),\n  mockStore = _getProps3.mockStore;\nvar _render3 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render3.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypesWebComponents)).to.have.lengthOf(expectedNumberOfFields);",
              "err": {},
              "uuid": "f8ba9da0-309d-4343-98e7-16d6538543f2",
              "parentUUID": "f6d52b9f-d836-4c3a-983d-53c63708b0cf",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f8ba9da0-309d-4343-98e7-16d6538543f2"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 17,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "308387e8-f7d4-4588-bbc9-9c3e0fd560e2",
          "title": "claimant address page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/21-0972/tests/pages/claimantAddress.unit.spec.jsx",
          "file": "/src/applications/simple-forms/21-0972/tests/pages/claimantAddress.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should show the correct number of errors on submit for web components",
              "fullTitle": "claimant address page should show the correct number of errors on submit for web components",
              "timedOut": false,
              "duration": 59,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps4 = getProps(),\n  mockStore = _getProps4.mockStore;\nvar _render4 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render4.container,\n  getByRole = _render4.getByRole;\ngetByRole('button', {\n  name: /submit/i\n}).click();\nvar nodes = Array.from(container.querySelectorAll(\"\".concat(expectedFieldTypesWebComponents, \", \").concat(wrapperWebComponents)));\nvar errors = nodes.filter(function (node) {\n  return node.error;\n});\n(0, _chai.expect)(errors).to.have.lengthOf(expectedNumberOfErrors);",
              "err": {},
              "uuid": "f92d2f01-6a29-4519-9d40-581485b80a6d",
              "parentUUID": "308387e8-f7d4-4588-bbc9-9c3e0fd560e2",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f92d2f01-6a29-4519-9d40-581485b80a6d"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 59,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "5938b46b-6815-4a46-9a59-be8b8697165a",
          "title": "claimant contact information page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/21-0972/tests/pages/claimantContactInformation.unit.spec.jsx",
          "file": "/src/applications/simple-forms/21-0972/tests/pages/claimantContactInformation.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should have appropriate number of web components",
              "fullTitle": "claimant contact information page should have appropriate number of web components",
              "timedOut": false,
              "duration": 6,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps3 = getProps(),\n  mockStore = _getProps3.mockStore;\nvar _render3 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render3.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypesWebComponents)).to.have.lengthOf(expectedNumberOfFields);",
              "err": {},
              "uuid": "cf8f6d1e-e195-41bb-b767-58712b81353f",
              "parentUUID": "5938b46b-6815-4a46-9a59-be8b8697165a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "cf8f6d1e-e195-41bb-b767-58712b81353f"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 6,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "5bb262a7-a174-4671-90b8-bd1d76238401",
          "title": "claimant contact information page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/21-0972/tests/pages/claimantContactInformation.unit.spec.jsx",
          "file": "/src/applications/simple-forms/21-0972/tests/pages/claimantContactInformation.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should show the correct number of errors on submit for web components",
              "fullTitle": "claimant contact information page should show the correct number of errors on submit for web components",
              "timedOut": false,
              "duration": 11,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps4 = getProps(),\n  mockStore = _getProps4.mockStore;\nvar _render4 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render4.container,\n  getByRole = _render4.getByRole;\ngetByRole('button', {\n  name: /submit/i\n}).click();\nvar nodes = Array.from(container.querySelectorAll(\"\".concat(expectedFieldTypesWebComponents, \", \").concat(wrapperWebComponents)));\nvar errors = nodes.filter(function (node) {\n  return node.error;\n});\n(0, _chai.expect)(errors).to.have.lengthOf(expectedNumberOfErrors);",
              "err": {},
              "uuid": "96fb61d0-0696-420c-8f0a-b15f296cda7c",
              "parentUUID": "5bb262a7-a174-4671-90b8-bd1d76238401",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "96fb61d0-0696-420c-8f0a-b15f296cda7c"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 11,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "fdcfd046-31df-4ac3-833a-41b1941b953b",
          "title": "claimant identification page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/21-0972/tests/pages/claimantIdentification.unit.spec.jsx",
          "file": "/src/applications/simple-forms/21-0972/tests/pages/claimantIdentification.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should have appropriate number of web components",
              "fullTitle": "claimant identification page should have appropriate number of web components",
              "timedOut": false,
              "duration": 3,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps3 = getProps(),\n  mockStore = _getProps3.mockStore;\nvar _render3 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render3.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypesWebComponents)).to.have.lengthOf(expectedNumberOfFields);",
              "err": {},
              "uuid": "8dbd8b88-0051-40fa-ac80-30a9a3a5abef",
              "parentUUID": "fdcfd046-31df-4ac3-833a-41b1941b953b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "8dbd8b88-0051-40fa-ac80-30a9a3a5abef"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "fe9773a2-ee58-494c-83c8-00891907951b",
          "title": "claimant identification page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/21-0972/tests/pages/claimantIdentification.unit.spec.jsx",
          "file": "/src/applications/simple-forms/21-0972/tests/pages/claimantIdentification.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should show the correct number of errors on submit for web components",
              "fullTitle": "claimant identification page should show the correct number of errors on submit for web components",
              "timedOut": false,
              "duration": 9,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps4 = getProps(),\n  mockStore = _getProps4.mockStore;\nvar _render4 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render4.container,\n  getByRole = _render4.getByRole;\ngetByRole('button', {\n  name: /submit/i\n}).click();\nvar nodes = Array.from(container.querySelectorAll(\"\".concat(expectedFieldTypesWebComponents, \", \").concat(wrapperWebComponents)));\nvar errors = nodes.filter(function (node) {\n  return node.error;\n});\n(0, _chai.expect)(errors).to.have.lengthOf(expectedNumberOfErrors);",
              "err": {},
              "uuid": "0a0b4b3d-30a6-41a7-adf5-7f5700655c0c",
              "parentUUID": "fe9773a2-ee58-494c-83c8-00891907951b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "0a0b4b3d-30a6-41a7-adf5-7f5700655c0c"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 9,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "c4238852-ce71-492d-98fb-eaa398d5984c",
          "title": "claimant personal information page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/21-0972/tests/pages/claimantPersonalnformation.unit.spec.jsx",
          "file": "/src/applications/simple-forms/21-0972/tests/pages/claimantPersonalnformation.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should have appropriate number of web components",
              "fullTitle": "claimant personal information page should have appropriate number of web components",
              "timedOut": false,
              "duration": 4,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps3 = getProps(),\n  mockStore = _getProps3.mockStore;\nvar _render3 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render3.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypesWebComponents)).to.have.lengthOf(expectedNumberOfFields);",
              "err": {},
              "uuid": "28c347da-6676-408e-b6bd-aec0dc3b888c",
              "parentUUID": "c4238852-ce71-492d-98fb-eaa398d5984c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "28c347da-6676-408e-b6bd-aec0dc3b888c"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 4,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "f076b806-cc3c-4ef1-85b9-aa3cb6598217",
          "title": "claimant personal information page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/21-0972/tests/pages/claimantPersonalnformation.unit.spec.jsx",
          "file": "/src/applications/simple-forms/21-0972/tests/pages/claimantPersonalnformation.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should show the correct number of errors on submit for web components",
              "fullTitle": "claimant personal information page should show the correct number of errors on submit for web components",
              "timedOut": false,
              "duration": 14,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps4 = getProps(),\n  mockStore = _getProps4.mockStore;\nvar _render4 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render4.container,\n  getByRole = _render4.getByRole;\ngetByRole('button', {\n  name: /submit/i\n}).click();\nvar nodes = Array.from(container.querySelectorAll(\"\".concat(expectedFieldTypesWebComponents, \", \").concat(wrapperWebComponents)));\nvar errors = nodes.filter(function (node) {\n  return node.error;\n});\n(0, _chai.expect)(errors).to.have.lengthOf(expectedNumberOfErrors);",
              "err": {},
              "uuid": "6baf50c7-157e-438a-998a-6b8a9b502e65",
              "parentUUID": "f076b806-cc3c-4ef1-85b9-aa3cb6598217",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "6baf50c7-157e-438a-998a-6b8a9b502e65"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 14,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "8c88e147-7edf-4042-8978-42999b4c0d5d",
          "title": "claimant ssn page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/21-0972/tests/pages/claimantSsn.unit.spec.jsx",
          "file": "/src/applications/simple-forms/21-0972/tests/pages/claimantSsn.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should have appropriate number of web components",
              "fullTitle": "claimant ssn page should have appropriate number of web components",
              "timedOut": false,
              "duration": 3,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps3 = getProps(),\n  mockStore = _getProps3.mockStore;\nvar _render3 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render3.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypesWebComponents)).to.have.lengthOf(expectedNumberOfFields);",
              "err": {},
              "uuid": "eeb3e328-1356-4385-8e49-bc9ae89cb636",
              "parentUUID": "8c88e147-7edf-4042-8978-42999b4c0d5d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "eeb3e328-1356-4385-8e49-bc9ae89cb636"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "8f6449bb-f04e-43f6-974c-06542d9c9575",
          "title": "claimant ssn page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/21-0972/tests/pages/claimantSsn.unit.spec.jsx",
          "file": "/src/applications/simple-forms/21-0972/tests/pages/claimantSsn.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should show the correct number of errors on submit for web components",
              "fullTitle": "claimant ssn page should show the correct number of errors on submit for web components",
              "timedOut": false,
              "duration": 9,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps4 = getProps(),\n  mockStore = _getProps4.mockStore;\nvar _render4 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render4.container,\n  getByRole = _render4.getByRole;\ngetByRole('button', {\n  name: /submit/i\n}).click();\nvar nodes = Array.from(container.querySelectorAll(\"\".concat(expectedFieldTypesWebComponents, \", \").concat(wrapperWebComponents)));\nvar errors = nodes.filter(function (node) {\n  return node.error;\n});\n(0, _chai.expect)(errors).to.have.lengthOf(expectedNumberOfErrors);",
              "err": {},
              "uuid": "0786c23f-127c-4a21-9eb2-e257b8bcc347",
              "parentUUID": "8f6449bb-f04e-43f6-974c-06542d9c9575",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "0786c23f-127c-4a21-9eb2-e257b8bcc347"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 9,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "b6f39ce0-9761-48f7-a99a-845c27a3167e",
          "title": "preparer address page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/21-0972/tests/pages/preparerAddress.unit.spec.jsx",
          "file": "/src/applications/simple-forms/21-0972/tests/pages/preparerAddress.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should have appropriate number of web components",
              "fullTitle": "preparer address page should have appropriate number of web components",
              "timedOut": false,
              "duration": 19,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps3 = getProps(),\n  mockStore = _getProps3.mockStore;\nvar _render3 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render3.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypesWebComponents)).to.have.lengthOf(expectedNumberOfFields);",
              "err": {},
              "uuid": "1332a407-5051-4e76-8ea6-c5b97435174d",
              "parentUUID": "b6f39ce0-9761-48f7-a99a-845c27a3167e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "1332a407-5051-4e76-8ea6-c5b97435174d"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 19,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "3b235658-e47f-49f2-957e-b854f817a69d",
          "title": "preparer address page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/21-0972/tests/pages/preparerAddress.unit.spec.jsx",
          "file": "/src/applications/simple-forms/21-0972/tests/pages/preparerAddress.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should show the correct number of errors on submit for web components",
              "fullTitle": "preparer address page should show the correct number of errors on submit for web components",
              "timedOut": false,
              "duration": 57,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps4 = getProps(),\n  mockStore = _getProps4.mockStore;\nvar _render4 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render4.container,\n  getByRole = _render4.getByRole;\ngetByRole('button', {\n  name: /submit/i\n}).click();\nvar nodes = Array.from(container.querySelectorAll(\"\".concat(expectedFieldTypesWebComponents, \", \").concat(wrapperWebComponents)));\nvar errors = nodes.filter(function (node) {\n  return node.error;\n});\n(0, _chai.expect)(errors).to.have.lengthOf(expectedNumberOfErrors);",
              "err": {},
              "uuid": "67266e5c-7966-4c2f-b553-0a3e5b20ec12",
              "parentUUID": "3b235658-e47f-49f2-957e-b854f817a69d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "67266e5c-7966-4c2f-b553-0a3e5b20ec12"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 57,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "f82aed2c-a298-49bc-ab1e-ef2d61ce0893",
          "title": "preparer contact information page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/21-0972/tests/pages/preparerContactInformation.unit.spec.jsx",
          "file": "/src/applications/simple-forms/21-0972/tests/pages/preparerContactInformation.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should have appropriate number of web components",
              "fullTitle": "preparer contact information page should have appropriate number of web components",
              "timedOut": false,
              "duration": 4,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps3 = getProps(),\n  mockStore = _getProps3.mockStore;\nvar _render3 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render3.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypesWebComponents)).to.have.lengthOf(expectedNumberOfFields);",
              "err": {},
              "uuid": "d5d7b09a-46d9-408e-b9ec-eaaefd5b4582",
              "parentUUID": "f82aed2c-a298-49bc-ab1e-ef2d61ce0893",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "d5d7b09a-46d9-408e-b9ec-eaaefd5b4582"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 4,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "0ae545bf-a9f3-4b83-96d2-d7cd21229204",
          "title": "preparer contact information page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/21-0972/tests/pages/preparerContactInformation.unit.spec.jsx",
          "file": "/src/applications/simple-forms/21-0972/tests/pages/preparerContactInformation.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should show the correct number of errors on submit for web components",
              "fullTitle": "preparer contact information page should show the correct number of errors on submit for web components",
              "timedOut": false,
              "duration": 16,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps4 = getProps(),\n  mockStore = _getProps4.mockStore;\nvar _render4 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render4.container,\n  getByRole = _render4.getByRole;\ngetByRole('button', {\n  name: /submit/i\n}).click();\nvar nodes = Array.from(container.querySelectorAll(\"\".concat(expectedFieldTypesWebComponents, \", \").concat(wrapperWebComponents)));\nvar errors = nodes.filter(function (node) {\n  return node.error;\n});\n(0, _chai.expect)(errors).to.have.lengthOf(expectedNumberOfErrors);",
              "err": {},
              "uuid": "41c93ac8-789f-4b01-a4aa-887975b18b86",
              "parentUUID": "0ae545bf-a9f3-4b83-96d2-d7cd21229204",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "41c93ac8-789f-4b01-a4aa-887975b18b86"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 16,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "305c5b84-47fe-42d3-ab8e-b4ab6eec95fa",
          "title": "preparer personal information page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/21-0972/tests/pages/preparerPersonalInformation.unit.spec.jsx",
          "file": "/src/applications/simple-forms/21-0972/tests/pages/preparerPersonalInformation.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should have appropriate number of web components",
              "fullTitle": "preparer personal information page should have appropriate number of web components",
              "timedOut": false,
              "duration": 5,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps3 = getProps(),\n  mockStore = _getProps3.mockStore;\nvar _render3 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render3.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypesWebComponents)).to.have.lengthOf(expectedNumberOfFields);",
              "err": {},
              "uuid": "d61e4b73-ec7c-4e6d-aa79-fa80a46e1759",
              "parentUUID": "305c5b84-47fe-42d3-ab8e-b4ab6eec95fa",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "d61e4b73-ec7c-4e6d-aa79-fa80a46e1759"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 5,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "1d6e466b-ff8e-49a0-ab35-e80c153535b4",
          "title": "preparer personal information page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/21-0972/tests/pages/preparerPersonalInformation.unit.spec.jsx",
          "file": "/src/applications/simple-forms/21-0972/tests/pages/preparerPersonalInformation.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should show the correct number of errors on submit for web components",
              "fullTitle": "preparer personal information page should show the correct number of errors on submit for web components",
              "timedOut": false,
              "duration": 15,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps4 = getProps(),\n  mockStore = _getProps4.mockStore;\nvar _render4 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render4.container,\n  getByRole = _render4.getByRole;\ngetByRole('button', {\n  name: /submit/i\n}).click();\nvar nodes = Array.from(container.querySelectorAll(\"\".concat(expectedFieldTypesWebComponents, \", \").concat(wrapperWebComponents)));\nvar errors = nodes.filter(function (node) {\n  return node.error;\n});\n(0, _chai.expect)(errors).to.have.lengthOf(expectedNumberOfErrors);",
              "err": {},
              "uuid": "9418a9dc-1f38-4ff2-b34d-b8a9bbf752e8",
              "parentUUID": "1d6e466b-ff8e-49a0-ab35-e80c153535b4",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "9418a9dc-1f38-4ff2-b34d-b8a9bbf752e8"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 15,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "f3b84486-6932-4f5d-9545-526f0d7a4034",
          "title": "preparer qualifications 1 page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/21-0972/tests/pages/preparerQualifications1.unit.spec.jsx",
          "file": "/src/applications/simple-forms/21-0972/tests/pages/preparerQualifications1.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should have appropriate number of web components",
              "fullTitle": "preparer qualifications 1 page should have appropriate number of web components",
              "timedOut": false,
              "duration": 4,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps3 = getProps(),\n  mockStore = _getProps3.mockStore;\nvar _render3 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render3.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypesWebComponents)).to.have.lengthOf(expectedNumberOfFields);",
              "err": {},
              "uuid": "28548dd1-20d9-49a5-9c5c-3707534194cb",
              "parentUUID": "f3b84486-6932-4f5d-9545-526f0d7a4034",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "28548dd1-20d9-49a5-9c5c-3707534194cb"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 4,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "cde7b5cb-d9d0-4ee1-854e-927f672c568c",
          "title": "preparer qualifications 1 page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/21-0972/tests/pages/preparerQualifications1.unit.spec.jsx",
          "file": "/src/applications/simple-forms/21-0972/tests/pages/preparerQualifications1.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should show the correct number of errors on submit for web components",
              "fullTitle": "preparer qualifications 1 page should show the correct number of errors on submit for web components",
              "timedOut": false,
              "duration": 13,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps4 = getProps(),\n  mockStore = _getProps4.mockStore;\nvar _render4 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render4.container,\n  getByRole = _render4.getByRole;\ngetByRole('button', {\n  name: /submit/i\n}).click();\nvar nodes = Array.from(container.querySelectorAll(\"\".concat(expectedFieldTypesWebComponents, \", \").concat(wrapperWebComponents)));\nvar errors = nodes.filter(function (node) {\n  return node.error;\n});\n(0, _chai.expect)(errors).to.have.lengthOf(expectedNumberOfErrors);",
              "err": {},
              "uuid": "f764a5a5-33e9-48ec-bbe4-e9c276fc274d",
              "parentUUID": "cde7b5cb-d9d0-4ee1-854e-927f672c568c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f764a5a5-33e9-48ec-bbe4-e9c276fc274d"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 13,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "c48226ba-fb79-43ba-95d1-0fff4013358c",
          "title": "preparer qualifications 1 page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/21-0972/tests/pages/preparerQualifications1.unit.spec.jsx",
          "file": "/src/applications/simple-forms/21-0972/tests/pages/preparerQualifications1.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should have appropriate number of web components",
              "fullTitle": "preparer qualifications 1 page should have appropriate number of web components",
              "timedOut": false,
              "duration": 4,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps3 = getProps(),\n  mockStore = _getProps3.mockStore;\nvar _render3 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render3.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypesWebComponents)).to.have.lengthOf(expectedNumberOfFields);",
              "err": {},
              "uuid": "05d9e840-9012-49d7-8553-9bec32bfdeb0",
              "parentUUID": "c48226ba-fb79-43ba-95d1-0fff4013358c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "05d9e840-9012-49d7-8553-9bec32bfdeb0"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 4,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "952d9556-a2dc-4792-87b7-57f2bad9f539",
          "title": "preparer qualifications 1 page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/21-0972/tests/pages/preparerQualifications1.unit.spec.jsx",
          "file": "/src/applications/simple-forms/21-0972/tests/pages/preparerQualifications1.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should show the correct number of errors on submit for web components",
              "fullTitle": "preparer qualifications 1 page should show the correct number of errors on submit for web components",
              "timedOut": false,
              "duration": 13,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps4 = getProps(),\n  mockStore = _getProps4.mockStore;\nvar _render4 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render4.container,\n  getByRole = _render4.getByRole;\ngetByRole('button', {\n  name: /submit/i\n}).click();\nvar nodes = Array.from(container.querySelectorAll(\"\".concat(expectedFieldTypesWebComponents, \", \").concat(wrapperWebComponents)));\nvar errors = nodes.filter(function (node) {\n  return node.error;\n});\n(0, _chai.expect)(errors).to.have.lengthOf(expectedNumberOfErrors);",
              "err": {},
              "uuid": "a0a6d338-35bb-43e9-b0d6-c3fa8ca64338",
              "parentUUID": "952d9556-a2dc-4792-87b7-57f2bad9f539",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a0a6d338-35bb-43e9-b0d6-c3fa8ca64338"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 13,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "c472aed6-4e33-4330-b8a7-1f2b9d4c26a4",
          "title": "preparer qualifications 1 page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/21-0972/tests/pages/preparerQualifications1.unit.spec.jsx",
          "file": "/src/applications/simple-forms/21-0972/tests/pages/preparerQualifications1.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should have appropriate number of web components",
              "fullTitle": "preparer qualifications 1 page should have appropriate number of web components",
              "timedOut": false,
              "duration": 3,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps3 = getProps(),\n  mockStore = _getProps3.mockStore;\nvar _render3 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render3.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypesWebComponents)).to.have.lengthOf(expectedNumberOfFields);",
              "err": {},
              "uuid": "9b61d14e-bf6e-4438-be3e-f371193f04a0",
              "parentUUID": "c472aed6-4e33-4330-b8a7-1f2b9d4c26a4",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "9b61d14e-bf6e-4438-be3e-f371193f04a0"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "d4201b15-5bd7-4e4e-a0c1-50c46a74635b",
          "title": "preparer qualifications 1 page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/21-0972/tests/pages/preparerQualifications1.unit.spec.jsx",
          "file": "/src/applications/simple-forms/21-0972/tests/pages/preparerQualifications1.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should show the correct number of errors on submit for web components",
              "fullTitle": "preparer qualifications 1 page should show the correct number of errors on submit for web components",
              "timedOut": false,
              "duration": 13,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps4 = getProps(),\n  mockStore = _getProps4.mockStore;\nvar _render4 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render4.container,\n  getByRole = _render4.getByRole;\ngetByRole('button', {\n  name: /submit/i\n}).click();\nvar nodes = Array.from(container.querySelectorAll(\"\".concat(expectedFieldTypesWebComponents, \", \").concat(wrapperWebComponents)));\nvar errors = nodes.filter(function (node) {\n  return node.error;\n});\n(0, _chai.expect)(errors).to.have.lengthOf(expectedNumberOfErrors);",
              "err": {},
              "uuid": "121e6dd8-282e-4850-9e6a-f07f249d44fe",
              "parentUUID": "d4201b15-5bd7-4e4e-a0c1-50c46a74635b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "121e6dd8-282e-4850-9e6a-f07f249d44fe"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 13,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "0c7b235e-5379-411d-81bf-b4b5a57757f6",
          "title": "preparer qualifications 1 page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/21-0972/tests/pages/preparerQualifications1.unit.spec.jsx",
          "file": "/src/applications/simple-forms/21-0972/tests/pages/preparerQualifications1.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should have appropriate number of web components",
              "fullTitle": "preparer qualifications 1 page should have appropriate number of web components",
              "timedOut": false,
              "duration": 3,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps3 = getProps(),\n  mockStore = _getProps3.mockStore;\nvar _render3 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render3.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypesWebComponents)).to.have.lengthOf(expectedNumberOfFields);",
              "err": {},
              "uuid": "88777eff-6815-4bd8-943c-59846e5f7258",
              "parentUUID": "0c7b235e-5379-411d-81bf-b4b5a57757f6",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "88777eff-6815-4bd8-943c-59846e5f7258"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "9004fca1-7188-43e7-bec1-905fc6834d68",
          "title": "preparer qualifications 1 page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/21-0972/tests/pages/preparerQualifications1.unit.spec.jsx",
          "file": "/src/applications/simple-forms/21-0972/tests/pages/preparerQualifications1.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should show the correct number of errors on submit for web components",
              "fullTitle": "preparer qualifications 1 page should show the correct number of errors on submit for web components",
              "timedOut": false,
              "duration": 10,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps4 = getProps(),\n  mockStore = _getProps4.mockStore;\nvar _render4 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render4.container,\n  getByRole = _render4.getByRole;\ngetByRole('button', {\n  name: /submit/i\n}).click();\nvar nodes = Array.from(container.querySelectorAll(\"\".concat(expectedFieldTypesWebComponents, \", \").concat(wrapperWebComponents)));\nvar errors = nodes.filter(function (node) {\n  return node.error;\n});\n(0, _chai.expect)(errors).to.have.lengthOf(expectedNumberOfErrors);",
              "err": {},
              "uuid": "729e8170-54e0-4700-8145-91c63723369d",
              "parentUUID": "9004fca1-7188-43e7-bec1-905fc6834d68",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "729e8170-54e0-4700-8145-91c63723369d"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 10,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "c773a191-9098-4674-88d4-6dca185d4e3d",
          "title": "preparer qualifications 2 page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/21-0972/tests/pages/preparerQualifications2.unit.spec.jsx",
          "file": "/src/applications/simple-forms/21-0972/tests/pages/preparerQualifications2.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should have appropriate number of web components",
              "fullTitle": "preparer qualifications 2 page should have appropriate number of web components",
              "timedOut": false,
              "duration": 4,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps3 = getProps(),\n  mockStore = _getProps3.mockStore;\nvar _render3 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render3.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypesWebComponents)).to.have.lengthOf(expectedNumberOfFields);",
              "err": {},
              "uuid": "3ca082dd-78c7-4a69-ad9a-8f7f45ff0562",
              "parentUUID": "c773a191-9098-4674-88d4-6dca185d4e3d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "3ca082dd-78c7-4a69-ad9a-8f7f45ff0562"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 4,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "3469537e-6dad-4fea-9307-71adb78f3101",
          "title": "preparer qualifications 2 page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/21-0972/tests/pages/preparerQualifications2.unit.spec.jsx",
          "file": "/src/applications/simple-forms/21-0972/tests/pages/preparerQualifications2.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should show the correct number of errors on submit for web components",
              "fullTitle": "preparer qualifications 2 page should show the correct number of errors on submit for web components",
              "timedOut": false,
              "duration": 11,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps4 = getProps(),\n  mockStore = _getProps4.mockStore;\nvar _render4 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render4.container,\n  getByRole = _render4.getByRole;\ngetByRole('button', {\n  name: /submit/i\n}).click();\nvar nodes = Array.from(container.querySelectorAll(\"\".concat(expectedFieldTypesWebComponents, \", \").concat(wrapperWebComponents)));\nvar errors = nodes.filter(function (node) {\n  return node.error;\n});\n(0, _chai.expect)(errors).to.have.lengthOf(expectedNumberOfErrors);",
              "err": {},
              "uuid": "c1daf0a7-eec5-4757-b66e-b803f91801fa",
              "parentUUID": "3469537e-6dad-4fea-9307-71adb78f3101",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "c1daf0a7-eec5-4757-b66e-b803f91801fa"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 11,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "1e4c99f2-4365-49c2-a16a-3e200f9bac09",
          "title": "veteran identification information 1 page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/21-0972/tests/pages/veteranIdentificationInformation1.unit.spec.jsx",
          "file": "/src/applications/simple-forms/21-0972/tests/pages/veteranIdentificationInformation1.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should have appropriate number of web components",
              "fullTitle": "veteran identification information 1 page should have appropriate number of web components",
              "timedOut": false,
              "duration": 4,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps3 = getProps(),\n  mockStore = _getProps3.mockStore;\nvar _render3 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render3.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypesWebComponents)).to.have.lengthOf(expectedNumberOfFields);",
              "err": {},
              "uuid": "e09850dd-1575-4d83-972f-531be68045d3",
              "parentUUID": "1e4c99f2-4365-49c2-a16a-3e200f9bac09",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "e09850dd-1575-4d83-972f-531be68045d3"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 4,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "17b0d1f0-0e81-4e43-b36b-45ac426a2368",
          "title": "veteran identification information 1 page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/21-0972/tests/pages/veteranIdentificationInformation1.unit.spec.jsx",
          "file": "/src/applications/simple-forms/21-0972/tests/pages/veteranIdentificationInformation1.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should show the correct number of errors on submit for web components",
              "fullTitle": "veteran identification information 1 page should show the correct number of errors on submit for web components",
              "timedOut": false,
              "duration": 10,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps4 = getProps(),\n  mockStore = _getProps4.mockStore;\nvar _render4 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render4.container,\n  getByRole = _render4.getByRole;\ngetByRole('button', {\n  name: /submit/i\n}).click();\nvar nodes = Array.from(container.querySelectorAll(\"\".concat(expectedFieldTypesWebComponents, \", \").concat(wrapperWebComponents)));\nvar errors = nodes.filter(function (node) {\n  return node.error;\n});\n(0, _chai.expect)(errors).to.have.lengthOf(expectedNumberOfErrors);",
              "err": {},
              "uuid": "e512efd9-4a33-4443-a9f1-d6800fa57dc7",
              "parentUUID": "17b0d1f0-0e81-4e43-b36b-45ac426a2368",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "e512efd9-4a33-4443-a9f1-d6800fa57dc7"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 10,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "cbb9ad74-b0ba-4821-833f-927e885a6d08",
          "title": "veteran identification information 2 page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/21-0972/tests/pages/veteranIdentificationInformation2.unit.spec.jsx",
          "file": "/src/applications/simple-forms/21-0972/tests/pages/veteranIdentificationInformation2.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should have appropriate number of web components",
              "fullTitle": "veteran identification information 2 page should have appropriate number of web components",
              "timedOut": false,
              "duration": 4,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps3 = getProps(),\n  mockStore = _getProps3.mockStore;\nvar _render3 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render3.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypesWebComponents)).to.have.lengthOf(expectedNumberOfFields);",
              "err": {},
              "uuid": "ca6da442-aa96-45fe-aa33-4dd831d3781f",
              "parentUUID": "cbb9ad74-b0ba-4821-833f-927e885a6d08",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "ca6da442-aa96-45fe-aa33-4dd831d3781f"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 4,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "3b328e85-5a95-41dd-9fc5-9ad8d6f59191",
          "title": "veteran identification information 2 page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/21-0972/tests/pages/veteranIdentificationInformation2.unit.spec.jsx",
          "file": "/src/applications/simple-forms/21-0972/tests/pages/veteranIdentificationInformation2.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should show the correct number of errors on submit for web components",
              "fullTitle": "veteran identification information 2 page should show the correct number of errors on submit for web components",
              "timedOut": false,
              "duration": 11,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps4 = getProps(),\n  mockStore = _getProps4.mockStore;\nvar _render4 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render4.container,\n  getByRole = _render4.getByRole;\ngetByRole('button', {\n  name: /submit/i\n}).click();\nvar nodes = Array.from(container.querySelectorAll(\"\".concat(expectedFieldTypesWebComponents, \", \").concat(wrapperWebComponents)));\nvar errors = nodes.filter(function (node) {\n  return node.error;\n});\n(0, _chai.expect)(errors).to.have.lengthOf(expectedNumberOfErrors);",
              "err": {},
              "uuid": "d4f7aa4a-8a27-4b10-88c9-3da2207794f6",
              "parentUUID": "3b328e85-5a95-41dd-9fc5-9ad8d6f59191",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "d4f7aa4a-8a27-4b10-88c9-3da2207794f6"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 11,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "2da295b1-7b9b-4c2a-9cae-ca4499910607",
          "title": "veteran personal information page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/21-0972/tests/pages/veteranPersonalInformation.unit.spec.jsx",
          "file": "/src/applications/simple-forms/21-0972/tests/pages/veteranPersonalInformation.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should have appropriate number of web components",
              "fullTitle": "veteran personal information page should have appropriate number of web components",
              "timedOut": false,
              "duration": 5,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps3 = getProps(),\n  mockStore = _getProps3.mockStore;\nvar _render3 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render3.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypesWebComponents)).to.have.lengthOf(expectedNumberOfFields);",
              "err": {},
              "uuid": "b4b027b5-2e22-4b37-b48a-c6dfd10ea70c",
              "parentUUID": "2da295b1-7b9b-4c2a-9cae-ca4499910607",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "b4b027b5-2e22-4b37-b48a-c6dfd10ea70c"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 5,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "c77ed8f0-f49a-4446-90c8-f44e6d44cdcf",
          "title": "veteran personal information page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/21-0972/tests/pages/veteranPersonalInformation.unit.spec.jsx",
          "file": "/src/applications/simple-forms/21-0972/tests/pages/veteranPersonalInformation.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should show the correct number of errors on submit for web components",
              "fullTitle": "veteran personal information page should show the correct number of errors on submit for web components",
              "timedOut": false,
              "duration": 17,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps4 = getProps(),\n  mockStore = _getProps4.mockStore;\nvar _render4 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render4.container,\n  getByRole = _render4.getByRole;\ngetByRole('button', {\n  name: /submit/i\n}).click();\nvar nodes = Array.from(container.querySelectorAll(\"\".concat(expectedFieldTypesWebComponents, \", \").concat(wrapperWebComponents)));\nvar errors = nodes.filter(function (node) {\n  return node.error;\n});\n(0, _chai.expect)(errors).to.have.lengthOf(expectedNumberOfErrors);",
              "err": {},
              "uuid": "cd416726-be1e-4118-8a7d-f99d79b83874",
              "parentUUID": "c77ed8f0-f49a-4446-90c8-f44e6d44cdcf",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "cd416726-be1e-4118-8a7d-f99d79b83874"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 17,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "1a9acaea-cea7-4f79-9cc2-ee0a70ac8941",
          "title": "form config options",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/21-10210/tests/config/form.unit.spec.js",
          "file": "/src/applications/simple-forms/21-10210/tests/config/form.unit.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should scroll and show text correctly",
              "fullTitle": "form config options should scroll and show text correctly",
              "timedOut": false,
              "duration": 7,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps = getProps(),\n  mockStore = _getProps.mockStore;\nvar _formConfig$chapters$ = _form.default.chapters.statementInfoChapter.pages.claimOwnershipPage,\n  schema = _formConfig$chapters$.schema,\n  uiSchema = _formConfig$chapters$.uiSchema,\n  scrollAndFocusTarget = _formConfig$chapters$.scrollAndFocusTarget;\nvar _render = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: _form.default.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: {},\n    formData: {}\n  }))),\n  getByText = _render.getByText;\nscrollAndFocusTarget();\n(0, _chai.expect)(getByText('Are you submitting this statement to support your claim or someone else’s claim?')).to.exist;",
              "err": {},
              "uuid": "2ea3543a-6b36-4a52-9546-b6613f2e524b",
              "parentUUID": "1a9acaea-cea7-4f79-9cc2-ee0a70ac8941",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should show titles correctly conditionally claimantPersonalInfoChapter",
              "fullTitle": "form config options should show titles correctly conditionally claimantPersonalInfoChapter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var title = _form.default.chapters.claimantPersonalInfoChapter.title;\nvar titleText = title({\n  formData: {\n    claimOwnership: 'self',\n    claimantType: 'non-veteran'\n  }\n});\n(0, _chai.expect)(titleText).to.equal('Your personal information');\ntitleText = title({\n  formData: {\n    claimOwnership: 'third-party',\n    claimantType: 'non-veteran'\n  }\n});\n(0, _chai.expect)(titleText).to.equal('Claimant’s personal information');",
              "err": {},
              "uuid": "8814ca3a-a104-464c-99cb-218af5296ed6",
              "parentUUID": "1a9acaea-cea7-4f79-9cc2-ee0a70ac8941",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should show titles correctly conditionally claimantIdInfoChapter",
              "fullTitle": "form config options should show titles correctly conditionally claimantIdInfoChapter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var title = _form.default.chapters.claimantIdInfoChapter.title;\nvar titleText = title({\n  formData: {\n    claimOwnership: 'self',\n    claimantType: 'non-veteran'\n  }\n});\n(0, _chai.expect)(titleText).to.equal('Your identification information');\ntitleText = title({\n  formData: {\n    claimOwnership: 'third-party',\n    claimantType: 'non-veteran'\n  }\n});\n(0, _chai.expect)(titleText).to.equal('Claimant’s identification information');",
              "err": {},
              "uuid": "35f8002f-6940-441a-a779-832e0c3741fe",
              "parentUUID": "1a9acaea-cea7-4f79-9cc2-ee0a70ac8941",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should show titles correctly conditionally claimantAddrInfoChapter",
              "fullTitle": "form config options should show titles correctly conditionally claimantAddrInfoChapter",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var title = _form.default.chapters.claimantAddrInfoChapter.title;\nvar titleText = title({\n  formData: {\n    claimOwnership: 'self',\n    claimantType: 'non-veteran'\n  }\n});\n(0, _chai.expect)(titleText).to.equal('Your mailing address');\ntitleText = title({\n  formData: {\n    claimOwnership: 'third-party',\n    claimantType: 'non-veteran'\n  }\n});\n(0, _chai.expect)(titleText).to.equal('Claimant’s mailing address');",
              "err": {},
              "uuid": "8999d265-b6e5-4076-8bd3-00a1768ea21a",
              "parentUUID": "1a9acaea-cea7-4f79-9cc2-ee0a70ac8941",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should show titles correctly conditionally claimantContactInfoChapter",
              "fullTitle": "form config options should show titles correctly conditionally claimantContactInfoChapter",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var title = _form.default.chapters.claimantContactInfoChapter.title;\nvar titleText = title({\n  formData: {\n    claimOwnership: 'self',\n    claimantType: 'non-veteran'\n  }\n});\n(0, _chai.expect)(titleText).to.equal('Your contact information');\ntitleText = title({\n  formData: {\n    claimOwnership: 'third-party',\n    claimantType: 'non-veteran'\n  }\n});\n(0, _chai.expect)(titleText).to.equal('Claimant’s contact information');",
              "err": {},
              "uuid": "f094345e-a4aa-40d4-8e1b-0c106ed5b363",
              "parentUUID": "1a9acaea-cea7-4f79-9cc2-ee0a70ac8941",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should show titles correctly conditionally veteranPersonalInfoChapter",
              "fullTitle": "form config options should show titles correctly conditionally veteranPersonalInfoChapter",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var title = _form.default.chapters.veteranPersonalInfoChapter.title;\nvar titleText = title({\n  formData: {\n    claimOwnership: 'self',\n    claimantType: 'veteran'\n  }\n});\n(0, _chai.expect)(titleText).to.equal('Your personal information');\ntitleText = title({\n  formData: {\n    claimOwnership: 'self',\n    claimantType: 'non-veteran'\n  }\n});\n(0, _chai.expect)(titleText).to.equal('Veteran’s personal information');",
              "err": {},
              "uuid": "936804d5-2a03-4694-a890-4e185d30a554",
              "parentUUID": "1a9acaea-cea7-4f79-9cc2-ee0a70ac8941",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should show titles correctly conditionally veteranIdentificationInfo",
              "fullTitle": "form config options should show titles correctly conditionally veteranIdentificationInfo",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var title = _form.default.chapters.veteranIdentificationInfo.title;\nvar titleText = title({\n  formData: {\n    claimOwnership: 'self',\n    claimantType: 'veteran'\n  }\n});\n(0, _chai.expect)(titleText).to.equal('Your identification information');\ntitleText = title({\n  formData: {\n    claimOwnership: 'self',\n    claimantType: 'non-veteran'\n  }\n});\n(0, _chai.expect)(titleText).to.equal('Veteran’s identification information');",
              "err": {},
              "uuid": "23079fc0-35a8-47a0-8847-7a79991b965e",
              "parentUUID": "1a9acaea-cea7-4f79-9cc2-ee0a70ac8941",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should show titles correctly conditionally veteranMailingAddressInfo",
              "fullTitle": "form config options should show titles correctly conditionally veteranMailingAddressInfo",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var title = _form.default.chapters.veteranMailingAddressInfo.title;\nvar titleText = title({\n  formData: {\n    claimOwnership: 'self',\n    claimantType: 'veteran'\n  }\n});\n(0, _chai.expect)(titleText).to.equal('Your mailing address');\ntitleText = title({\n  formData: {\n    claimOwnership: 'self',\n    claimantType: 'non-veteran'\n  }\n});\n(0, _chai.expect)(titleText).to.equal('Veteran’s mailing address');",
              "err": {},
              "uuid": "fa278b6d-82a1-478d-ad54-9c9f7b0641e5",
              "parentUUID": "1a9acaea-cea7-4f79-9cc2-ee0a70ac8941",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should show titles correctly conditionally veteranContactInfo",
              "fullTitle": "form config options should show titles correctly conditionally veteranContactInfo",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var title = _form.default.chapters.veteranContactInfo.title;\nvar titleText = title({\n  formData: {\n    claimOwnership: 'self',\n    claimantType: 'veteran'\n  }\n});\n(0, _chai.expect)(titleText).to.equal('Your contact information');\ntitleText = title({\n  formData: {\n    claimOwnership: 'self',\n    claimantType: 'non-veteran'\n  }\n});\n(0, _chai.expect)(titleText).to.equal('Veteran’s contact information');",
              "err": {},
              "uuid": "6bb9c5dd-e092-4786-a35a-5880c8dca429",
              "parentUUID": "1a9acaea-cea7-4f79-9cc2-ee0a70ac8941",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "2ea3543a-6b36-4a52-9546-b6613f2e524b",
            "8814ca3a-a104-464c-99cb-218af5296ed6",
            "35f8002f-6940-441a-a779-832e0c3741fe",
            "8999d265-b6e5-4076-8bd3-00a1768ea21a",
            "f094345e-a4aa-40d4-8e1b-0c106ed5b363",
            "936804d5-2a03-4694-a890-4e185d30a554",
            "23079fc0-35a8-47a0-8847-7a79991b965e",
            "fa278b6d-82a1-478d-ad54-9c9f7b0641e5",
            "6bb9c5dd-e092-4786-a35a-5880c8dca429"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 9,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "cabc8d3e-4244-4f35-906f-6ec57b4645e0",
          "title": "transformForSubmit",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/21-10210/tests/config/submit-transformer.unit.spec.js",
          "file": "/src/applications/simple-forms/21-10210/tests/config/submit-transformer.unit.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should transform json correctly",
              "fullTitle": "transformForSubmit should transform json correctly",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var transformedResult = JSON.parse((0, _submitTransformer.default)(_form.default, _flow.default));\n(0, _chai.expect)(transformedResult).to.deep.equal(_flow2.default);",
              "err": {},
              "uuid": "54ef1d3b-7ecb-44a1-9105-2637276ab4b4",
              "parentUUID": "cabc8d3e-4244-4f35-906f-6ec57b4645e0",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "54ef1d3b-7ecb-44a1-9105-2637276ab4b4"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "7e526c90-1afe-4003-8aaf-3f8a5c1d90be",
          "title": "Confirmation page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/21-10210/tests/containers/ConfirmationPage.unit.spec.jsx",
          "file": "/src/applications/simple-forms/21-10210/tests/containers/ConfirmationPage.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "it should show status success",
              "fullTitle": "Confirmation page it should show status success",
              "timedOut": false,
              "duration": 9,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _render = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore(storeBase)\n  }, /*#__PURE__*/_react.default.createElement(_ConfirmationPage.default, {\n    route: {\n      formConfig: _form.default\n    }\n  }))),\n  container = _render.container;\n(0, _chai.expect)(container.querySelector('va-alert')).to.have.attr('status', 'success');",
              "err": {},
              "uuid": "2dc2396a-6aad-4cc0-899e-ea62fd9f37fc",
              "parentUUID": "7e526c90-1afe-4003-8aaf-3f8a5c1d90be",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should show the witness name if it was a third party",
              "fullTitle": "Confirmation page should show the witness name if it was a third party",
              "timedOut": false,
              "duration": 9,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var store = _objectSpread({}, storeBase);\nstore.form.data.claimOwnership = _constants.CLAIM_OWNERSHIPS.THIRD_PARTY;\nstore.form.data.claimantType = _constants.CLAIMANT_TYPES.VETERAN;\nvar _render2 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore(store)\n  }, /*#__PURE__*/_react.default.createElement(_ConfirmationPage.default, {\n    route: {\n      formConfig: _form.default\n    }\n  }))),\n  getByText = _render2.getByText;\ngetByText(/Jack/);\ngetByText(/Witness/);",
              "err": {},
              "uuid": "7e9d598e-aca2-4547-a966-4bdc927ea31b",
              "parentUUID": "7e526c90-1afe-4003-8aaf-3f8a5c1d90be",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should show the witness name if it was a third party 2",
              "fullTitle": "Confirmation page should show the witness name if it was a third party 2",
              "timedOut": false,
              "duration": 11,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var store = _objectSpread({}, storeBase);\nstore.form.data.claimOwnership = _constants.CLAIM_OWNERSHIPS.THIRD_PARTY;\nstore.form.data.claimantType = _constants.CLAIMANT_TYPES.NON_VETERAN;\nvar _render3 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore(store)\n  }, /*#__PURE__*/_react.default.createElement(_ConfirmationPage.default, {\n    route: {\n      formConfig: _form.default\n    }\n  }))),\n  getByText = _render3.getByText;\ngetByText(/Jack/);\ngetByText(/Witness/);",
              "err": {},
              "uuid": "72d92aa8-dc61-4b99-8865-10bf11d9a64d",
              "parentUUID": "7e526c90-1afe-4003-8aaf-3f8a5c1d90be",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should show the claimant name if it is a self claim but a nonveteran",
              "fullTitle": "Confirmation page should show the claimant name if it is a self claim but a nonveteran",
              "timedOut": false,
              "duration": 10,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var store = _objectSpread({}, storeBase);\nstore.form.data.claimOwnership = _constants.CLAIM_OWNERSHIPS.SELF;\nstore.form.data.claimantType = _constants.CLAIMANT_TYPES.NON_VETERAN;\nvar _render4 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore(store)\n  }, /*#__PURE__*/_react.default.createElement(_ConfirmationPage.default, {\n    route: {\n      formConfig: _form.default\n    }\n  }))),\n  getByText = _render4.getByText;\ngetByText(/Joe/);\ngetByText(/Claimant/);",
              "err": {},
              "uuid": "1acbf012-c41b-42b1-8501-daf114439f0a",
              "parentUUID": "7e526c90-1afe-4003-8aaf-3f8a5c1d90be",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should show the veteran name if it is a self claim",
              "fullTitle": "Confirmation page should show the veteran name if it is a self claim",
              "timedOut": false,
              "duration": 8,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var store = _objectSpread({}, storeBase);\nstore.form.data.claimOwnership = _constants.CLAIM_OWNERSHIPS.SELF;\nstore.form.data.claimantType = _constants.CLAIMANT_TYPES.VETERAN;\nvar _render5 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore(store)\n  }, /*#__PURE__*/_react.default.createElement(_ConfirmationPage.default, {\n    route: {\n      formConfig: _form.default\n    }\n  }))),\n  getByText = _render5.getByText,\n  getAllByText = _render5.getAllByText;\ngetByText(/John/);\ngetAllByText(/Veteran/);",
              "err": {},
              "uuid": "84b2eb4d-ab44-4726-8cd0-9852d5f14208",
              "parentUUID": "7e526c90-1afe-4003-8aaf-3f8a5c1d90be",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "2dc2396a-6aad-4cc0-899e-ea62fd9f37fc",
            "7e9d598e-aca2-4547-a966-4bdc927ea31b",
            "72d92aa8-dc61-4b99-8865-10bf11d9a64d",
            "1acbf012-c41b-42b1-8501-daf114439f0a",
            "84b2eb4d-ab44-4726-8cd0-9852d5f14208"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 47,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "0cd1e2f9-a129-4897-8eae-e59e910c4f9a",
          "title": "IntroductionPage",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/21-10210/tests/containers/IntroductionPage.unit.spec.jsx",
          "file": "/src/applications/simple-forms/21-10210/tests/containers/IntroductionPage.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should render",
              "fullTitle": "IntroductionPage should render",
              "timedOut": false,
              "duration": 3,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _render = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_IntroductionPage.default, props))),\n  container = _render.container;\n(0, _chai.expect)(container).to.exist;",
              "err": {},
              "uuid": "5f6b402c-ef73-4453-9799-27d1df4a5217",
              "parentUUID": "0cd1e2f9-a129-4897-8eae-e59e910c4f9a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "5f6b402c-ef73-4453-9799-27d1df4a5217"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "02ab5291-2b34-4af1-8f2a-07b494d83e78",
          "title": "Claimant’s mailing address page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/21-10210/tests/pages/claimantAddrInfo.unit.spec.jsx",
          "file": "/src/applications/simple-forms/21-10210/tests/pages/claimantAddrInfo.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should have appropriate number of web components",
              "fullTitle": "Claimant’s mailing address page should have appropriate number of web components",
              "timedOut": false,
              "duration": 23,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps3 = getProps(),\n  mockStore = _getProps3.mockStore;\nvar _render3 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render3.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypesWebComponents)).to.have.lengthOf(expectedNumberOfFields);",
              "err": {},
              "uuid": "e6064ac0-99c5-4485-b499-d03ab2c08f61",
              "parentUUID": "02ab5291-2b34-4af1-8f2a-07b494d83e78",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "e6064ac0-99c5-4485-b499-d03ab2c08f61"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 23,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "8087d87f-9b2c-4d60-a151-2fd6b964cdd1",
          "title": "Claimant’s mailing address page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/21-10210/tests/pages/claimantAddrInfo.unit.spec.jsx",
          "file": "/src/applications/simple-forms/21-10210/tests/pages/claimantAddrInfo.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should show the correct number of errors on submit for web components",
              "fullTitle": "Claimant’s mailing address page should show the correct number of errors on submit for web components",
              "timedOut": false,
              "duration": 68,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps4 = getProps(),\n  mockStore = _getProps4.mockStore;\nvar _render4 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render4.container,\n  getByRole = _render4.getByRole;\ngetByRole('button', {\n  name: /submit/i\n}).click();\nvar nodes = Array.from(container.querySelectorAll(\"\".concat(expectedFieldTypesWebComponents, \", \").concat(wrapperWebComponents)));\nvar errors = nodes.filter(function (node) {\n  return node.error;\n});\n(0, _chai.expect)(errors).to.have.lengthOf(expectedNumberOfErrors);",
              "err": {},
              "uuid": "7b700c46-b601-40d3-9f32-143c0678d689",
              "parentUUID": "8087d87f-9b2c-4d60-a151-2fd6b964cdd1",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "7b700c46-b601-40d3-9f32-143c0678d689"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 68,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "1c802b90-f59f-4d29-abde-8fcbaeeded94",
          "title": "Claimant’s contact information page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/21-10210/tests/pages/claimantContInfo.unit.spec.jsx",
          "file": "/src/applications/simple-forms/21-10210/tests/pages/claimantContInfo.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should have appropriate number of fields",
              "fullTitle": "Claimant’s contact information page should have appropriate number of fields",
              "timedOut": false,
              "duration": 5,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps = getProps(),\n  mockStore = _getProps.mockStore;\nvar _render = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypes)).to.have.lengthOf(expectedNumberOfFields);",
              "err": {},
              "uuid": "2411f3a5-637b-4a69-bfa7-d00694930faa",
              "parentUUID": "1c802b90-f59f-4d29-abde-8fcbaeeded94",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "2411f3a5-637b-4a69-bfa7-d00694930faa"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 5,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "28b2defa-af22-4886-a406-5265197d02c2",
          "title": "Claimant’s contact information page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/21-10210/tests/pages/claimantContInfo.unit.spec.jsx",
          "file": "/src/applications/simple-forms/21-10210/tests/pages/claimantContInfo.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should show the correct number of errors on submit",
              "fullTitle": "Claimant’s contact information page should show the correct number of errors on submit",
              "timedOut": false,
              "duration": 16,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps2 = getProps(),\n  mockStore = _getProps2.mockStore;\nvar _render2 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  getByRole = _render2.getByRole,\n  queryAllByRole = _render2.queryAllByRole;\ngetByRole('button', {\n  name: /submit/i\n}).click();\nvar errors = queryAllByRole('alert');\n(0, _chai.expect)(errors).to.have.lengthOf(expectedNumberOfErrors);",
              "err": {},
              "uuid": "283fa1d4-1577-41b1-be9e-6f7507889208",
              "parentUUID": "28b2defa-af22-4886-a406-5265197d02c2",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "283fa1d4-1577-41b1-be9e-6f7507889208"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 16,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "fbd1bcbd-d1fe-4db3-a396-96ef7be8ff52",
          "title": "Claimant’s identification information page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/21-10210/tests/pages/claimantIdInfo.unit.spec.jsx",
          "file": "/src/applications/simple-forms/21-10210/tests/pages/claimantIdInfo.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should have appropriate number of fields",
              "fullTitle": "Claimant’s identification information page should have appropriate number of fields",
              "timedOut": false,
              "duration": 4,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps = getProps(),\n  mockStore = _getProps.mockStore;\nvar _render = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypes)).to.have.lengthOf(expectedNumberOfFields);",
              "err": {},
              "uuid": "f6965ef3-7bab-4d94-b9bb-fba11963a2c6",
              "parentUUID": "fbd1bcbd-d1fe-4db3-a396-96ef7be8ff52",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f6965ef3-7bab-4d94-b9bb-fba11963a2c6"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 4,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "0594882e-3113-4e37-b450-7c4028491777",
          "title": "Claimant’s identification information page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/21-10210/tests/pages/claimantIdInfo.unit.spec.jsx",
          "file": "/src/applications/simple-forms/21-10210/tests/pages/claimantIdInfo.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should show the correct number of errors on submit",
              "fullTitle": "Claimant’s identification information page should show the correct number of errors on submit",
              "timedOut": false,
              "duration": 18,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps2 = getProps(),\n  mockStore = _getProps2.mockStore;\nvar _render2 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  getByRole = _render2.getByRole,\n  queryAllByRole = _render2.queryAllByRole;\ngetByRole('button', {\n  name: /submit/i\n}).click();\nvar errors = queryAllByRole('alert');\n(0, _chai.expect)(errors).to.have.lengthOf(expectedNumberOfErrors);",
              "err": {},
              "uuid": "df9d29ca-ec81-4464-9267-76274ac2141a",
              "parentUUID": "0594882e-3113-4e37-b450-7c4028491777",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "df9d29ca-ec81-4464-9267-76274ac2141a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 18,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "ffc1ab07-b907-4892-bb49-cae80a6259f7",
          "title": "Claimant’s personal information page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/21-10210/tests/pages/claimantPersInfo.unit.spec.jsx",
          "file": "/src/applications/simple-forms/21-10210/tests/pages/claimantPersInfo.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should have appropriate number of fields",
              "fullTitle": "Claimant’s personal information page should have appropriate number of fields",
              "timedOut": false,
              "duration": 14,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps = getProps(),\n  mockStore = _getProps.mockStore;\nvar _render = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypes)).to.have.lengthOf(expectedNumberOfFields);",
              "err": {},
              "uuid": "c39799d1-8842-45a5-9520-1d660b70bbb9",
              "parentUUID": "ffc1ab07-b907-4892-bb49-cae80a6259f7",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "c39799d1-8842-45a5-9520-1d660b70bbb9"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 14,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "f6030f9c-4504-4ad0-a8af-02c2d6923228",
          "title": "Claimant’s personal information page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/21-10210/tests/pages/claimantPersInfo.unit.spec.jsx",
          "file": "/src/applications/simple-forms/21-10210/tests/pages/claimantPersInfo.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should show the correct number of errors on submit",
              "fullTitle": "Claimant’s personal information page should show the correct number of errors on submit",
              "timedOut": false,
              "duration": 31,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps2 = getProps(),\n  mockStore = _getProps2.mockStore;\nvar _render2 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  getByRole = _render2.getByRole,\n  queryAllByRole = _render2.queryAllByRole;\ngetByRole('button', {\n  name: /submit/i\n}).click();\nvar errors = queryAllByRole('alert');\n(0, _chai.expect)(errors).to.have.lengthOf(expectedNumberOfErrors);",
              "err": {},
              "uuid": "5114172d-c17c-40ba-b028-1e094aeee8ef",
              "parentUUID": "f6030f9c-4504-4ad0-a8af-02c2d6923228",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "5114172d-c17c-40ba-b028-1e094aeee8ef"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 31,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "e32bc68a-06fe-402c-aacd-1d1dbbe0fb77",
          "title": "Claimant type page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/21-10210/tests/pages/claimantType.unit.spec.jsx",
          "file": "/src/applications/simple-forms/21-10210/tests/pages/claimantType.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should have appropriate number of fields",
              "fullTitle": "Claimant type page should have appropriate number of fields",
              "timedOut": false,
              "duration": 4,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps = getProps(),\n  mockStore = _getProps.mockStore;\nvar _render = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypes)).to.have.lengthOf(expectedNumberOfFields);",
              "err": {},
              "uuid": "1093da4b-7d48-4460-ada7-8b1e1262e8ad",
              "parentUUID": "e32bc68a-06fe-402c-aacd-1d1dbbe0fb77",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "1093da4b-7d48-4460-ada7-8b1e1262e8ad"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 4,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "59da7237-b99a-42b1-aeab-9c5561fffb0b",
          "title": "Claimant type page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/21-10210/tests/pages/claimantType.unit.spec.jsx",
          "file": "/src/applications/simple-forms/21-10210/tests/pages/claimantType.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should show the correct number of errors on submit",
              "fullTitle": "Claimant type page should show the correct number of errors on submit",
              "timedOut": false,
              "duration": 14,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps2 = getProps(),\n  mockStore = _getProps2.mockStore;\nvar _render2 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  getByRole = _render2.getByRole,\n  queryAllByRole = _render2.queryAllByRole;\ngetByRole('button', {\n  name: /submit/i\n}).click();\nvar errors = queryAllByRole('alert');\n(0, _chai.expect)(errors).to.have.lengthOf(expectedNumberOfErrors);",
              "err": {},
              "uuid": "8501c57f-451b-41ea-b035-52f283f9af12",
              "parentUUID": "59da7237-b99a-42b1-aeab-9c5561fffb0b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "8501c57f-451b-41ea-b035-52f283f9af12"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 14,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "3df452a9-4a59-4531-92c6-6af045e57642",
          "title": "Claim ownership page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/21-10210/tests/pages/claimOwnership.unit.spec.jsx",
          "file": "/src/applications/simple-forms/21-10210/tests/pages/claimOwnership.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should have appropriate number of fields",
              "fullTitle": "Claim ownership page should have appropriate number of fields",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps = getProps(),\n  mockStore = _getProps.mockStore;\nvar _render = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypes)).to.have.lengthOf(expectedNumberOfFields);",
              "err": {},
              "uuid": "8e1df927-6231-42b6-8b43-fa0016884bf1",
              "parentUUID": "3df452a9-4a59-4531-92c6-6af045e57642",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "8e1df927-6231-42b6-8b43-fa0016884bf1"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "36f95b12-bccf-483d-9702-d84588fe97ba",
          "title": "Claim ownership page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/21-10210/tests/pages/claimOwnership.unit.spec.jsx",
          "file": "/src/applications/simple-forms/21-10210/tests/pages/claimOwnership.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should show the correct number of errors on submit",
              "fullTitle": "Claim ownership page should show the correct number of errors on submit",
              "timedOut": false,
              "duration": 14,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps2 = getProps(),\n  mockStore = _getProps2.mockStore;\nvar _render2 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  getByRole = _render2.getByRole,\n  queryAllByRole = _render2.queryAllByRole;\ngetByRole('button', {\n  name: /submit/i\n}).click();\nvar errors = queryAllByRole('alert');\n(0, _chai.expect)(errors).to.have.lengthOf(expectedNumberOfErrors);",
              "err": {},
              "uuid": "44cbc48d-b1a4-482c-8223-63c578a13a7d",
              "parentUUID": "36f95b12-bccf-483d-9702-d84588fe97ba",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "44cbc48d-b1a4-482c-8223-63c578a13a7d"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 14,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "4b25b4c6-bdbd-4676-985c-b17f43787ee9",
          "title": "Your statement page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/21-10210/tests/pages/statementA.unit.spec.jsx",
          "file": "/src/applications/simple-forms/21-10210/tests/pages/statementA.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should have appropriate number of fields",
              "fullTitle": "Your statement page should have appropriate number of fields",
              "timedOut": false,
              "duration": 4,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps = getProps(),\n  mockStore = _getProps.mockStore;\nvar _render = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypes)).to.have.lengthOf(expectedNumberOfFields);",
              "err": {},
              "uuid": "100d33f7-fc80-40d1-b0af-41cf66fa0110",
              "parentUUID": "4b25b4c6-bdbd-4676-985c-b17f43787ee9",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "100d33f7-fc80-40d1-b0af-41cf66fa0110"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 4,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "31b811d8-d223-4b1b-ae5a-8a06c21899c8",
          "title": "Your statement page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/21-10210/tests/pages/statementA.unit.spec.jsx",
          "file": "/src/applications/simple-forms/21-10210/tests/pages/statementA.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should show the correct number of errors on submit",
              "fullTitle": "Your statement page should show the correct number of errors on submit",
              "timedOut": false,
              "duration": 12,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps2 = getProps(),\n  mockStore = _getProps2.mockStore;\nvar _render2 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  getByRole = _render2.getByRole,\n  queryAllByRole = _render2.queryAllByRole;\ngetByRole('button', {\n  name: /submit/i\n}).click();\nvar errors = queryAllByRole('alert');\n(0, _chai.expect)(errors).to.have.lengthOf(expectedNumberOfErrors);",
              "err": {},
              "uuid": "67f37380-c418-4147-92f9-0d4d630134ae",
              "parentUUID": "31b811d8-d223-4b1b-ae5a-8a06c21899c8",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "67f37380-c418-4147-92f9-0d4d630134ae"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 12,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "c1012843-803b-4ee7-ab2f-6210ec3b65c4",
          "title": "Your statement page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/21-10210/tests/pages/statementB.unit.spec.jsx",
          "file": "/src/applications/simple-forms/21-10210/tests/pages/statementB.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should have appropriate number of fields",
              "fullTitle": "Your statement page should have appropriate number of fields",
              "timedOut": false,
              "duration": 3,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps = getProps(),\n  mockStore = _getProps.mockStore;\nvar _render = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypes)).to.have.lengthOf(expectedNumberOfFields);",
              "err": {},
              "uuid": "98b29342-c0f0-4734-8ee7-8ef102c0b7ca",
              "parentUUID": "c1012843-803b-4ee7-ab2f-6210ec3b65c4",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "98b29342-c0f0-4734-8ee7-8ef102c0b7ca"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "57798b53-a4ce-4aa4-8455-4a1be2c05b86",
          "title": "Your statement page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/21-10210/tests/pages/statementB.unit.spec.jsx",
          "file": "/src/applications/simple-forms/21-10210/tests/pages/statementB.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should show the correct number of errors on submit",
              "fullTitle": "Your statement page should show the correct number of errors on submit",
              "timedOut": false,
              "duration": 12,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps2 = getProps(),\n  mockStore = _getProps2.mockStore;\nvar _render2 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  getByRole = _render2.getByRole,\n  queryAllByRole = _render2.queryAllByRole;\ngetByRole('button', {\n  name: /submit/i\n}).click();\nvar errors = queryAllByRole('alert');\n(0, _chai.expect)(errors).to.have.lengthOf(expectedNumberOfErrors);",
              "err": {},
              "uuid": "490eac0c-e8d9-46b7-a299-8152fc9aadc2",
              "parentUUID": "57798b53-a4ce-4aa4-8455-4a1be2c05b86",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "490eac0c-e8d9-46b7-a299-8152fc9aadc2"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 12,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "99b37a0b-c41c-43e0-a502-412a93b5a22f",
          "title": "Your statement page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/21-10210/tests/pages/statementC.unit.spec.jsx",
          "file": "/src/applications/simple-forms/21-10210/tests/pages/statementC.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should have appropriate number of fields",
              "fullTitle": "Your statement page should have appropriate number of fields",
              "timedOut": false,
              "duration": 3,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps = getProps(),\n  mockStore = _getProps.mockStore;\nvar _render = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypes)).to.have.lengthOf(expectedNumberOfFields);",
              "err": {},
              "uuid": "17a09054-8c12-4d18-aed0-f67e698695c6",
              "parentUUID": "99b37a0b-c41c-43e0-a502-412a93b5a22f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "17a09054-8c12-4d18-aed0-f67e698695c6"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "06021b5c-baa8-4116-9322-d7e624180174",
          "title": "Your statement page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/21-10210/tests/pages/statementC.unit.spec.jsx",
          "file": "/src/applications/simple-forms/21-10210/tests/pages/statementC.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should show the correct number of errors on submit",
              "fullTitle": "Your statement page should show the correct number of errors on submit",
              "timedOut": false,
              "duration": 15,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps2 = getProps(),\n  mockStore = _getProps2.mockStore;\nvar _render2 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  getByRole = _render2.getByRole,\n  queryAllByRole = _render2.queryAllByRole;\ngetByRole('button', {\n  name: /submit/i\n}).click();\nvar errors = queryAllByRole('alert');\n(0, _chai.expect)(errors).to.have.lengthOf(expectedNumberOfErrors);",
              "err": {},
              "uuid": "0e98e10c-3f6f-4fad-97d4-b4b2d2e16b4c",
              "parentUUID": "06021b5c-baa8-4116-9322-d7e624180174",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "0e98e10c-3f6f-4fad-97d4-b4b2d2e16b4c"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 15,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "a00db6a3-fac0-4672-9421-50baf11f3944",
          "title": "Veteran’s mailing address page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/21-10210/tests/pages/vetAddrInfo.unit.spec.jsx",
          "file": "/src/applications/simple-forms/21-10210/tests/pages/vetAddrInfo.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should have appropriate number of web components",
              "fullTitle": "Veteran’s mailing address page should have appropriate number of web components",
              "timedOut": false,
              "duration": 22,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps3 = getProps(),\n  mockStore = _getProps3.mockStore;\nvar _render3 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render3.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypesWebComponents)).to.have.lengthOf(expectedNumberOfFields);",
              "err": {},
              "uuid": "dadf8a7d-a22b-4027-8498-457c3ee727ae",
              "parentUUID": "a00db6a3-fac0-4672-9421-50baf11f3944",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "dadf8a7d-a22b-4027-8498-457c3ee727ae"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 22,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "715130ef-6126-4e7b-b3ce-28a282e0c893",
          "title": "Veteran’s mailing address page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/21-10210/tests/pages/vetAddrInfo.unit.spec.jsx",
          "file": "/src/applications/simple-forms/21-10210/tests/pages/vetAddrInfo.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should show the correct number of errors on submit for web components",
              "fullTitle": "Veteran’s mailing address page should show the correct number of errors on submit for web components",
              "timedOut": false,
              "duration": 137,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps4 = getProps(),\n  mockStore = _getProps4.mockStore;\nvar _render4 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render4.container,\n  getByRole = _render4.getByRole;\ngetByRole('button', {\n  name: /submit/i\n}).click();\nvar nodes = Array.from(container.querySelectorAll(\"\".concat(expectedFieldTypesWebComponents, \", \").concat(wrapperWebComponents)));\nvar errors = nodes.filter(function (node) {\n  return node.error;\n});\n(0, _chai.expect)(errors).to.have.lengthOf(expectedNumberOfErrors);",
              "err": {},
              "uuid": "9de762f5-cf6b-480c-b4bd-105371fe7c16",
              "parentUUID": "715130ef-6126-4e7b-b3ce-28a282e0c893",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "9de762f5-cf6b-480c-b4bd-105371fe7c16"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 137,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "db5ba32b-ec04-4ba1-9ee5-5667cc8a19fd",
          "title": "Veteran’s contact information page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/21-10210/tests/pages/vetContInfo.unit.spec.jsx",
          "file": "/src/applications/simple-forms/21-10210/tests/pages/vetContInfo.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should have appropriate number of fields",
              "fullTitle": "Veteran’s contact information page should have appropriate number of fields",
              "timedOut": false,
              "duration": 7,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps = getProps(),\n  mockStore = _getProps.mockStore;\nvar _render = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypes)).to.have.lengthOf(expectedNumberOfFields);",
              "err": {},
              "uuid": "ecfa167e-8499-4e8b-ad62-01af44122796",
              "parentUUID": "db5ba32b-ec04-4ba1-9ee5-5667cc8a19fd",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "ecfa167e-8499-4e8b-ad62-01af44122796"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 7,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "7ab47edf-7ccf-428b-8546-36b1c9e3715f",
          "title": "Veteran’s contact information page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/21-10210/tests/pages/vetContInfo.unit.spec.jsx",
          "file": "/src/applications/simple-forms/21-10210/tests/pages/vetContInfo.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should show the correct number of errors on submit",
              "fullTitle": "Veteran’s contact information page should show the correct number of errors on submit",
              "timedOut": false,
              "duration": 17,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps2 = getProps(),\n  mockStore = _getProps2.mockStore;\nvar _render2 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  getByRole = _render2.getByRole,\n  queryAllByRole = _render2.queryAllByRole;\ngetByRole('button', {\n  name: /submit/i\n}).click();\nvar errors = queryAllByRole('alert');\n(0, _chai.expect)(errors).to.have.lengthOf(expectedNumberOfErrors);",
              "err": {},
              "uuid": "b0c63a75-ec07-4a2c-8ffe-93fc36aae86e",
              "parentUUID": "7ab47edf-7ccf-428b-8546-36b1c9e3715f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "b0c63a75-ec07-4a2c-8ffe-93fc36aae86e"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 17,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "6265e609-ae8a-445a-852d-aaa925fb3df3",
          "title": "Veteran’s identification information page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/21-10210/tests/pages/vetIdInfo.unit.spec.jsx",
          "file": "/src/applications/simple-forms/21-10210/tests/pages/vetIdInfo.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should have appropriate number of fields",
              "fullTitle": "Veteran’s identification information page should have appropriate number of fields",
              "timedOut": false,
              "duration": 5,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps = getProps(),\n  mockStore = _getProps.mockStore;\nvar _render = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypes)).to.have.lengthOf(expectedNumberOfFields);",
              "err": {},
              "uuid": "4e3fa0c4-8c13-47a9-a20a-9b2ba1be1a53",
              "parentUUID": "6265e609-ae8a-445a-852d-aaa925fb3df3",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "4e3fa0c4-8c13-47a9-a20a-9b2ba1be1a53"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 5,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "6813d841-b977-4dcb-a3e8-e6b8ec11cd74",
          "title": "Veteran’s identification information page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/21-10210/tests/pages/vetIdInfo.unit.spec.jsx",
          "file": "/src/applications/simple-forms/21-10210/tests/pages/vetIdInfo.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should show the correct number of errors on submit",
              "fullTitle": "Veteran’s identification information page should show the correct number of errors on submit",
              "timedOut": false,
              "duration": 18,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps2 = getProps(),\n  mockStore = _getProps2.mockStore;\nvar _render2 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  getByRole = _render2.getByRole,\n  queryAllByRole = _render2.queryAllByRole;\ngetByRole('button', {\n  name: /submit/i\n}).click();\nvar errors = queryAllByRole('alert');\n(0, _chai.expect)(errors).to.have.lengthOf(expectedNumberOfErrors);",
              "err": {},
              "uuid": "e1b539a7-f5c3-4cd1-9802-29e0f6d986cc",
              "parentUUID": "6813d841-b977-4dcb-a3e8-e6b8ec11cd74",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "e1b539a7-f5c3-4cd1-9802-29e0f6d986cc"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 18,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "681b6399-9c9b-4f4c-8393-4c680323f821",
          "title": "Veteran’s personal information page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/21-10210/tests/pages/vetPersInfo.unit.spec.jsx",
          "file": "/src/applications/simple-forms/21-10210/tests/pages/vetPersInfo.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should have appropriate number of fields",
              "fullTitle": "Veteran’s personal information page should have appropriate number of fields",
              "timedOut": false,
              "duration": 11,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps = getProps(),\n  mockStore = _getProps.mockStore;\nvar _render = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypes)).to.have.lengthOf(expectedNumberOfFields);",
              "err": {},
              "uuid": "07978e76-f707-4b07-add6-60153cda90f7",
              "parentUUID": "681b6399-9c9b-4f4c-8393-4c680323f821",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "07978e76-f707-4b07-add6-60153cda90f7"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 11,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "031b1d75-c3c7-4236-bcb0-9e3373f1e774",
          "title": "Veteran’s personal information page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/21-10210/tests/pages/vetPersInfo.unit.spec.jsx",
          "file": "/src/applications/simple-forms/21-10210/tests/pages/vetPersInfo.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should show the correct number of errors on submit",
              "fullTitle": "Veteran’s personal information page should show the correct number of errors on submit",
              "timedOut": false,
              "duration": 28,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps2 = getProps(),\n  mockStore = _getProps2.mockStore;\nvar _render2 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  getByRole = _render2.getByRole,\n  queryAllByRole = _render2.queryAllByRole;\ngetByRole('button', {\n  name: /submit/i\n}).click();\nvar errors = queryAllByRole('alert');\n(0, _chai.expect)(errors).to.have.lengthOf(expectedNumberOfErrors);",
              "err": {},
              "uuid": "213cc6e6-dee8-45c5-be74-3730c4becd90",
              "parentUUID": "031b1d75-c3c7-4236-bcb0-9e3373f1e774",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "213cc6e6-dee8-45c5-be74-3730c4becd90"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 28,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "021ede07-10c4-484c-b835-ae94dadf8896",
          "title": "Witness’ contact information page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/21-10210/tests/pages/witnessContInfo.unit.spec.jsx",
          "file": "/src/applications/simple-forms/21-10210/tests/pages/witnessContInfo.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should have appropriate number of fields",
              "fullTitle": "Witness’ contact information page should have appropriate number of fields",
              "timedOut": false,
              "duration": 4,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps = getProps(),\n  mockStore = _getProps.mockStore;\nvar _render = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypes)).to.have.lengthOf(expectedNumberOfFields);",
              "err": {},
              "uuid": "aa5fe3ac-7f7f-4dcf-8b2f-1cf1ad371be2",
              "parentUUID": "021ede07-10c4-484c-b835-ae94dadf8896",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "aa5fe3ac-7f7f-4dcf-8b2f-1cf1ad371be2"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 4,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "cd700a06-8797-4b37-adae-d57e20001654",
          "title": "Witness’ contact information page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/21-10210/tests/pages/witnessContInfo.unit.spec.jsx",
          "file": "/src/applications/simple-forms/21-10210/tests/pages/witnessContInfo.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should show the correct number of errors on submit",
              "fullTitle": "Witness’ contact information page should show the correct number of errors on submit",
              "timedOut": false,
              "duration": 18,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps2 = getProps(),\n  mockStore = _getProps2.mockStore;\nvar _render2 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  getByRole = _render2.getByRole,\n  queryAllByRole = _render2.queryAllByRole;\ngetByRole('button', {\n  name: /submit/i\n}).click();\nvar errors = queryAllByRole('alert');\n(0, _chai.expect)(errors).to.have.lengthOf(expectedNumberOfErrors);",
              "err": {},
              "uuid": "b7006497-d4cb-4b5c-84eb-1fbc7e92a35a",
              "parentUUID": "cd700a06-8797-4b37-adae-d57e20001654",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "b7006497-d4cb-4b5c-84eb-1fbc7e92a35a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 18,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "79f29704-eb15-484b-9978-747c98fc3225",
          "title": "Witness other relationship page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/21-10210/tests/pages/witnessOtherRelationship.unit.spec.jsx",
          "file": "/src/applications/simple-forms/21-10210/tests/pages/witnessOtherRelationship.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should have appropriate number of fields",
              "fullTitle": "Witness other relationship page should have appropriate number of fields",
              "timedOut": false,
              "duration": 3,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps = getProps(),\n  mockStore = _getProps.mockStore;\nvar _render = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypes)).to.have.lengthOf(expectedNumberOfFields);",
              "err": {},
              "uuid": "53beff68-445d-46d1-b53e-7ecbc65ae818",
              "parentUUID": "79f29704-eb15-484b-9978-747c98fc3225",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "53beff68-445d-46d1-b53e-7ecbc65ae818"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "8cd3ef45-6f5b-483a-b256-9d069df477d5",
          "title": "Witness other relationship page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/21-10210/tests/pages/witnessOtherRelationship.unit.spec.jsx",
          "file": "/src/applications/simple-forms/21-10210/tests/pages/witnessOtherRelationship.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should show the correct number of errors on submit",
              "fullTitle": "Witness other relationship page should show the correct number of errors on submit",
              "timedOut": false,
              "duration": 12,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps2 = getProps(),\n  mockStore = _getProps2.mockStore;\nvar _render2 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  getByRole = _render2.getByRole,\n  queryAllByRole = _render2.queryAllByRole;\ngetByRole('button', {\n  name: /submit/i\n}).click();\nvar errors = queryAllByRole('alert');\n(0, _chai.expect)(errors).to.have.lengthOf(expectedNumberOfErrors);",
              "err": {},
              "uuid": "cabf88dd-20a0-47af-b5e5-4ce37751b2ea",
              "parentUUID": "8cd3ef45-6f5b-483a-b256-9d069df477d5",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "cabf88dd-20a0-47af-b5e5-4ce37751b2ea"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 12,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "87c77d8f-dd87-40b7-b648-cdac8aba9884",
          "title": "Witness’ personal information page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/21-10210/tests/pages/witnessPersInfo.unit.spec.jsx",
          "file": "/src/applications/simple-forms/21-10210/tests/pages/witnessPersInfo.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should have appropriate number of fields",
              "fullTitle": "Witness’ personal information page should have appropriate number of fields",
              "timedOut": false,
              "duration": 7,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps = getProps(),\n  mockStore = _getProps.mockStore;\nvar _render = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypes)).to.have.lengthOf(expectedNumberOfFields);",
              "err": {},
              "uuid": "4f7f19cf-c335-4568-858a-a6e0ed265d65",
              "parentUUID": "87c77d8f-dd87-40b7-b648-cdac8aba9884",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "4f7f19cf-c335-4568-858a-a6e0ed265d65"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 7,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "d61a5a7b-894e-44f0-9320-ebb75a6e7d5a",
          "title": "Witness’ personal information page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/21-10210/tests/pages/witnessPersInfo.unit.spec.jsx",
          "file": "/src/applications/simple-forms/21-10210/tests/pages/witnessPersInfo.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should show the correct number of errors on submit",
              "fullTitle": "Witness’ personal information page should show the correct number of errors on submit",
              "timedOut": false,
              "duration": 26,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps2 = getProps(),\n  mockStore = _getProps2.mockStore;\nvar _render2 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  getByRole = _render2.getByRole,\n  queryAllByRole = _render2.queryAllByRole;\ngetByRole('button', {\n  name: /submit/i\n}).click();\nvar errors = queryAllByRole('alert');\n(0, _chai.expect)(errors).to.have.lengthOf(expectedNumberOfErrors);",
              "err": {},
              "uuid": "b43a29fe-9573-43e9-bc7c-7f561faf63d0",
              "parentUUID": "d61a5a7b-894e-44f0-9320-ebb75a6e7d5a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "b43a29fe-9573-43e9-bc7c-7f561faf63d0"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 26,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "929f2c17-dd99-420c-8b1f-9314a8758e1d",
          "title": "getFullNamePath for statement of truth",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/21-10210/tests/utils.unit.spec.js",
          "file": "/src/applications/simple-forms/21-10210/tests/utils.unit.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "is a claimant if it's for themselves but not a veteran",
              "fullTitle": "getFullNamePath for statement of truth is a claimant if it's for themselves but not a veteran",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var formData = {\n  claimOwnership: _constants.CLAIM_OWNERSHIPS.SELF,\n  claimantType: _constants.CLAIMANT_TYPES.NON_VETERAN\n};\n(0, _chai.expect)((0, _utils.getFullNamePath)(formData)).to.deep.equal('claimantFullName');",
              "err": {},
              "uuid": "86412119-2d43-40fd-b2da-3a9b8b4c54df",
              "parentUUID": "929f2c17-dd99-420c-8b1f-9314a8758e1d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "is a witness if it's a third party",
              "fullTitle": "getFullNamePath for statement of truth is a witness if it's a third party",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var formData = {\n  claimOwnership: _constants.CLAIM_OWNERSHIPS.THIRD_PARTY,\n  claimantType: _constants.CLAIMANT_TYPES.VETERAN\n};\n(0, _chai.expect)((0, _utils.getFullNamePath)(formData)).to.deep.equal('witnessFullName');",
              "err": {},
              "uuid": "0187402f-a76b-4182-95c0-69672370b86f",
              "parentUUID": "929f2c17-dd99-420c-8b1f-9314a8758e1d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "is a veteran if it's for themselves and is a veteran",
              "fullTitle": "getFullNamePath for statement of truth is a veteran if it's for themselves and is a veteran",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var formData = {\n  claimOwnership: _constants.CLAIM_OWNERSHIPS.SELF,\n  claimantType: _constants.CLAIMANT_TYPES.VETERAN\n};\n(0, _chai.expect)((0, _utils.getFullNamePath)(formData)).to.deep.equal('veteranFullName');",
              "err": {},
              "uuid": "855d075b-4259-4b3d-be63-ce904d3c915b",
              "parentUUID": "929f2c17-dd99-420c-8b1f-9314a8758e1d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "86412119-2d43-40fd-b2da-3a9b8b4c54df",
            "0187402f-a76b-4182-95c0-69672370b86f",
            "855d075b-4259-4b3d-be63-ce904d3c915b"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "e1eec440-1a92-4082-a618-d78710b10698",
          "title": "witnessHasOtherRelationship",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/21-10210/tests/utils.unit.spec.js",
          "file": "/src/applications/simple-forms/21-10210/tests/utils.unit.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should return the correct value if they have specified other relationship",
              "fullTitle": "witnessHasOtherRelationship should return the correct value if they have specified other relationship",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var formData = {\n  claimOwnership: _constants.CLAIM_OWNERSHIPS.THIRD_PARTY,\n  witnessRelationshipToClaimant: _constants.OTHER_RELATIONSHIP\n};\n(0, _chai.expect)((0, _utils.witnessHasOtherRelationship)(formData)).to.deep.equal(true);",
              "err": {},
              "uuid": "fe5afb8b-8f0e-40d6-a1d4-9e7bc1ea3055",
              "parentUUID": "e1eec440-1a92-4082-a618-d78710b10698",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "fe5afb8b-8f0e-40d6-a1d4-9e7bc1ea3055"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "1caf7a8a-647e-413e-882e-7af696d3bb53",
          "title": "getFocusSelectorFromPath",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/21-10210/tests/utils.unit.spec.js",
          "file": "/src/applications/simple-forms/21-10210/tests/utils.unit.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should use custom path for claim-ownership or claimant-type",
              "fullTitle": "getFocusSelectorFromPath should use custom path for claim-ownership or claimant-type",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var pathname = '/claim-ownership';\n(0, _chai.expect)((0, _utils.getFocusSelectorFromPath)(pathname)).to.deep.equal('#main .schemaform-first-field legend');",
              "err": {},
              "uuid": "0fc8c54c-3d35-4004-b80d-34d8e73ac815",
              "parentUUID": "1caf7a8a-647e-413e-882e-7af696d3bb53",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should use default selector for other cases",
              "fullTitle": "getFocusSelectorFromPath should use default selector for other cases",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var pathname = '/something-else';\n(0, _chai.expect)((0, _utils.getFocusSelectorFromPath)(pathname)).to.deep.equal(_ui.defaultFocusSelector);",
              "err": {},
              "uuid": "55ae31f8-bae3-4b9c-a1e4-c25f7d99b1e8",
              "parentUUID": "1caf7a8a-647e-413e-882e-7af696d3bb53",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "0fc8c54c-3d35-4004-b80d-34d8e73ac815",
            "55ae31f8-bae3-4b9c-a1e4-c25f7d99b1e8"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "c130ae97-ea51-468b-8b81-3076690b1801",
          "title": "formConfig",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/21-4138/tests/unit/config/form.unit.spec.js",
          "file": "/src/applications/simple-forms/21-4138/tests/unit/config/form.unit.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should be an object",
              "fullTitle": "formConfig should be an object",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, _chai.expect)(_form.default).to.be.an('object');",
              "err": {},
              "uuid": "d20c0c19-51f5-44c6-9add-954e9c9259d3",
              "parentUUID": "c130ae97-ea51-468b-8b81-3076690b1801",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should have a rootUrl property",
              "fullTitle": "formConfig should have a rootUrl property",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, _chai.expect)(_form.default).to.have.property('rootUrl');\n(0, _chai.expect)(_form.default.rootUrl).to.be.a('string');",
              "err": {},
              "uuid": "43eb2759-628b-4df5-a8be-6e069014f2b4",
              "parentUUID": "c130ae97-ea51-468b-8b81-3076690b1801",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [
            {
              "uuid": "8d72f4df-d169-4d99-9fc3-d4259af92f23",
              "title": "chapters",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/21-4138/tests/unit/config/form.unit.spec.js",
              "file": "/src/applications/simple-forms/21-4138/tests/unit/config/form.unit.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should be an object",
                  "fullTitle": "formConfig chapters should be an object",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)(_form.default.chapters).to.be.an('object');",
                  "err": {},
                  "uuid": "3c6b7c55-960d-4fe1-8185-0facdc1f41e0",
                  "parentUUID": "8d72f4df-d169-4d99-9fc3-d4259af92f23",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "3c6b7c55-960d-4fe1-8185-0facdc1f41e0"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            }
          ],
          "passes": [
            "d20c0c19-51f5-44c6-9add-954e9c9259d3",
            "43eb2759-628b-4df5-a8be-6e069014f2b4"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "b7680cdd-e41d-4903-af02-661bfa9ececc",
          "title": "There’s a better way to tell us you disagree with a decision page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/21-4138/tests/unit/pages/decisionReview.unit.spec.js",
          "file": "/src/applications/simple-forms/21-4138/tests/unit/pages/decisionReview.unit.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should have appropriate number of web components",
              "fullTitle": "There’s a better way to tell us you disagree with a decision page should have appropriate number of web components",
              "timedOut": false,
              "duration": 3,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps3 = getProps(),\n  mockStore = _getProps3.mockStore;\nvar _render3 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render3.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypesWebComponents)).to.have.lengthOf(expectedNumberOfFields);",
              "err": {},
              "uuid": "bac971f2-01c8-4e21-a452-7d0f0910ca9b",
              "parentUUID": "b7680cdd-e41d-4903-af02-661bfa9ececc",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "bac971f2-01c8-4e21-a452-7d0f0910ca9b"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "a7d09c23-5d01-40bd-bfb0-05794f5ded7b",
          "title": "There’s a better way to tell us you disagree with a decision page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/21-4138/tests/unit/pages/decisionReview.unit.spec.js",
          "file": "/src/applications/simple-forms/21-4138/tests/unit/pages/decisionReview.unit.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should show the correct number of errors on submit for web components",
              "fullTitle": "There’s a better way to tell us you disagree with a decision page should show the correct number of errors on submit for web components",
              "timedOut": false,
              "duration": 10,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps4 = getProps(),\n  mockStore = _getProps4.mockStore;\nvar _render4 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render4.container,\n  getByRole = _render4.getByRole;\ngetByRole('button', {\n  name: /submit/i\n}).click();\nvar nodes = Array.from(container.querySelectorAll(\"\".concat(expectedFieldTypesWebComponents, \", \").concat(wrapperWebComponents)));\nvar errors = nodes.filter(function (node) {\n  return node.error;\n});\n(0, _chai.expect)(errors).to.have.lengthOf(expectedNumberOfErrors);",
              "err": {},
              "uuid": "b7fd4fb3-7e51-46ba-b3de-9e1fb0e05792",
              "parentUUID": "a7d09c23-5d01-40bd-bfb0-05794f5ded7b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "b7fd4fb3-7e51-46ba-b3de-9e1fb0e05792"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 10,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "e269cd6c-e749-4c31-a89f-11087c3cb472",
          "title": "There’s a better way to tell us you disagree with a decision page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/21-4138/tests/unit/pages/decisionReview.unit.spec.js",
          "file": "/src/applications/simple-forms/21-4138/tests/unit/pages/decisionReview.unit.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should have appropriate number of fields",
              "fullTitle": "There’s a better way to tell us you disagree with a decision page should have appropriate number of fields",
              "timedOut": false,
              "duration": 4,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps = getProps(),\n  mockStore = _getProps.mockStore;\nvar _render = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypes)).to.have.lengthOf(expectedNumberOfFields);",
              "err": {},
              "uuid": "8ee619d5-b81d-4a39-b10f-8575ca158b82",
              "parentUUID": "e269cd6c-e749-4c31-a89f-11087c3cb472",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "8ee619d5-b81d-4a39-b10f-8575ca158b82"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 4,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "b90c85e4-9b1c-4b4d-a9f2-c6c7853aca25",
          "title": "There’s a better way to tell us you disagree with a decision page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/21-4138/tests/unit/pages/decisionReview.unit.spec.js",
          "file": "/src/applications/simple-forms/21-4138/tests/unit/pages/decisionReview.unit.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should show the correct number of errors on submit",
              "fullTitle": "There’s a better way to tell us you disagree with a decision page should show the correct number of errors on submit",
              "timedOut": false,
              "duration": 13,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps2 = getProps(),\n  mockStore = _getProps2.mockStore;\nvar _render2 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  getByRole = _render2.getByRole,\n  queryAllByRole = _render2.queryAllByRole;\ngetByRole('button', {\n  name: /submit/i\n}).click();\nvar errors = queryAllByRole('alert');\n(0, _chai.expect)(errors).to.have.lengthOf(expectedNumberOfErrors);",
              "err": {},
              "uuid": "55d73797-9d71-4c9c-8f11-50a683e5607e",
              "parentUUID": "b90c85e4-9b1c-4b4d-a9f2-c6c7853aca25",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "55d73797-9d71-4c9c-8f11-50a683e5607e"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 13,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "2a5c87ba-da25-4e16-810a-b3102bbfb4bb",
          "title": "Identification information page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/21-4138/tests/unit/pages/identificationInfo.unit.spec.js",
          "file": "/src/applications/simple-forms/21-4138/tests/unit/pages/identificationInfo.unit.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should have appropriate number of web components",
              "fullTitle": "Identification information page should have appropriate number of web components",
              "timedOut": false,
              "duration": 4,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps3 = getProps(),\n  mockStore = _getProps3.mockStore;\nvar _render3 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render3.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypesWebComponents)).to.have.lengthOf(expectedNumberOfFields);",
              "err": {},
              "uuid": "1b60b811-b9b3-416e-a740-952525664525",
              "parentUUID": "2a5c87ba-da25-4e16-810a-b3102bbfb4bb",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "1b60b811-b9b3-416e-a740-952525664525"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 4,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "91112e13-5584-42ff-a771-8ef936b6d5ae",
          "title": "Identification information page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/21-4138/tests/unit/pages/identificationInfo.unit.spec.js",
          "file": "/src/applications/simple-forms/21-4138/tests/unit/pages/identificationInfo.unit.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should show the correct number of errors on submit for web components",
              "fullTitle": "Identification information page should show the correct number of errors on submit for web components",
              "timedOut": false,
              "duration": 14,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps4 = getProps(),\n  mockStore = _getProps4.mockStore;\nvar _render4 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render4.container,\n  getByRole = _render4.getByRole;\ngetByRole('button', {\n  name: /submit/i\n}).click();\nvar nodes = Array.from(container.querySelectorAll(\"\".concat(expectedFieldTypesWebComponents, \", \").concat(wrapperWebComponents)));\nvar errors = nodes.filter(function (node) {\n  return node.error;\n});\n(0, _chai.expect)(errors).to.have.lengthOf(expectedNumberOfErrors);",
              "err": {},
              "uuid": "6b6fe3ec-bf73-47a0-ba36-8c2d75635d42",
              "parentUUID": "91112e13-5584-42ff-a771-8ef936b6d5ae",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "6b6fe3ec-bf73-47a0-ba36-8c2d75635d42"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 14,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "8a2d0165-fdee-4abe-b007-15c2c010b920",
          "title": "Identification information page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/21-4138/tests/unit/pages/identificationInfo.unit.spec.js",
          "file": "/src/applications/simple-forms/21-4138/tests/unit/pages/identificationInfo.unit.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should have appropriate number of fields",
              "fullTitle": "Identification information page should have appropriate number of fields",
              "timedOut": false,
              "duration": 4,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps = getProps(),\n  mockStore = _getProps.mockStore;\nvar _render = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypes)).to.have.lengthOf(expectedNumberOfFields);",
              "err": {},
              "uuid": "bbb5b459-bdad-4256-9f0a-71be2bfc6ddc",
              "parentUUID": "8a2d0165-fdee-4abe-b007-15c2c010b920",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "bbb5b459-bdad-4256-9f0a-71be2bfc6ddc"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 4,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "3118cf9a-2213-45ca-8334-9587f05840d6",
          "title": "Identification information page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/21-4138/tests/unit/pages/identificationInfo.unit.spec.js",
          "file": "/src/applications/simple-forms/21-4138/tests/unit/pages/identificationInfo.unit.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should show the correct number of errors on submit",
              "fullTitle": "Identification information page should show the correct number of errors on submit",
              "timedOut": false,
              "duration": 14,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps2 = getProps(),\n  mockStore = _getProps2.mockStore;\nvar _render2 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  getByRole = _render2.getByRole,\n  queryAllByRole = _render2.queryAllByRole;\ngetByRole('button', {\n  name: /submit/i\n}).click();\nvar errors = queryAllByRole('alert');\n(0, _chai.expect)(errors).to.have.lengthOf(expectedNumberOfErrors);",
              "err": {},
              "uuid": "b20db8c9-f91c-46cf-98e1-5edefcc87cf9",
              "parentUUID": "3118cf9a-2213-45ca-8334-9587f05840d6",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "b20db8c9-f91c-46cf-98e1-5edefcc87cf9"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 14,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "954dabbd-22f2-469d-8511-e27c4860252f",
          "title": "There's a better way to submit your statement page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/21-4138/tests/unit/pages/layOrWitness.unit.spec.js",
          "file": "/src/applications/simple-forms/21-4138/tests/unit/pages/layOrWitness.unit.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should have appropriate number of web components",
              "fullTitle": "There's a better way to submit your statement page should have appropriate number of web components",
              "timedOut": false,
              "duration": 4,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps3 = getProps(),\n  mockStore = _getProps3.mockStore;\nvar _render3 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render3.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypesWebComponents)).to.have.lengthOf(expectedNumberOfFields);",
              "err": {},
              "uuid": "82b35a80-e42c-4788-ae24-fec6036a2e80",
              "parentUUID": "954dabbd-22f2-469d-8511-e27c4860252f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "82b35a80-e42c-4788-ae24-fec6036a2e80"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 4,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "71dfcf99-6c15-402f-a39e-f809e3e34b67",
          "title": "There's a better way to submit your statement page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/21-4138/tests/unit/pages/layOrWitness.unit.spec.js",
          "file": "/src/applications/simple-forms/21-4138/tests/unit/pages/layOrWitness.unit.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should show the correct number of errors on submit for web components",
              "fullTitle": "There's a better way to submit your statement page should show the correct number of errors on submit for web components",
              "timedOut": false,
              "duration": 10,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps4 = getProps(),\n  mockStore = _getProps4.mockStore;\nvar _render4 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render4.container,\n  getByRole = _render4.getByRole;\ngetByRole('button', {\n  name: /submit/i\n}).click();\nvar nodes = Array.from(container.querySelectorAll(\"\".concat(expectedFieldTypesWebComponents, \", \").concat(wrapperWebComponents)));\nvar errors = nodes.filter(function (node) {\n  return node.error;\n});\n(0, _chai.expect)(errors).to.have.lengthOf(expectedNumberOfErrors);",
              "err": {},
              "uuid": "93f0ddf1-e952-4c32-b1ae-4ac447ae2494",
              "parentUUID": "71dfcf99-6c15-402f-a39e-f809e3e34b67",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "93f0ddf1-e952-4c32-b1ae-4ac447ae2494"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 10,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "c2fd2591-2815-44ac-80fc-259a636d9e45",
          "title": "There's a better way to submit your statement page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/21-4138/tests/unit/pages/layOrWitness.unit.spec.js",
          "file": "/src/applications/simple-forms/21-4138/tests/unit/pages/layOrWitness.unit.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should have appropriate number of fields",
              "fullTitle": "There's a better way to submit your statement page should have appropriate number of fields",
              "timedOut": false,
              "duration": 3,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps = getProps(),\n  mockStore = _getProps.mockStore;\nvar _render = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypes)).to.have.lengthOf(expectedNumberOfFields);",
              "err": {},
              "uuid": "10e9dde9-22be-45f2-9b4f-c487196099e6",
              "parentUUID": "c2fd2591-2815-44ac-80fc-259a636d9e45",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "10e9dde9-22be-45f2-9b4f-c487196099e6"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "6532bf07-8f30-44ee-bea9-044818c452ba",
          "title": "There's a better way to submit your statement page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/21-4138/tests/unit/pages/layOrWitness.unit.spec.js",
          "file": "/src/applications/simple-forms/21-4138/tests/unit/pages/layOrWitness.unit.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should show the correct number of errors on submit",
              "fullTitle": "There's a better way to submit your statement page should show the correct number of errors on submit",
              "timedOut": false,
              "duration": 11,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps2 = getProps(),\n  mockStore = _getProps2.mockStore;\nvar _render2 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  getByRole = _render2.getByRole,\n  queryAllByRole = _render2.queryAllByRole;\ngetByRole('button', {\n  name: /submit/i\n}).click();\nvar errors = queryAllByRole('alert');\n(0, _chai.expect)(errors).to.have.lengthOf(expectedNumberOfErrors);",
              "err": {},
              "uuid": "0b39a54f-8128-4cf9-9e4c-ed1613e829e3",
              "parentUUID": "6532bf07-8f30-44ee-bea9-044818c452ba",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "0b39a54f-8128-4cf9-9e4c-ed1613e829e3"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 11,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "684e7a23-bdf7-4264-84bf-c9a2ad0be4a7",
          "title": "Mailing address page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/21-4138/tests/unit/pages/mailingAddress.unit.spec.js",
          "file": "/src/applications/simple-forms/21-4138/tests/unit/pages/mailingAddress.unit.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should have appropriate number of web components",
              "fullTitle": "Mailing address page should have appropriate number of web components",
              "timedOut": false,
              "duration": 17,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps3 = getProps(),\n  mockStore = _getProps3.mockStore;\nvar _render3 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render3.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypesWebComponents)).to.have.lengthOf(expectedNumberOfFields);",
              "err": {},
              "uuid": "f5b93882-4673-4247-a69e-7426dbcf0c7d",
              "parentUUID": "684e7a23-bdf7-4264-84bf-c9a2ad0be4a7",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f5b93882-4673-4247-a69e-7426dbcf0c7d"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 17,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "a65e9776-f6c3-4ef9-afc3-96563bf58a84",
          "title": "Mailing address page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/21-4138/tests/unit/pages/mailingAddress.unit.spec.js",
          "file": "/src/applications/simple-forms/21-4138/tests/unit/pages/mailingAddress.unit.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should show the correct number of errors on submit for web components",
              "fullTitle": "Mailing address page should show the correct number of errors on submit for web components",
              "timedOut": false,
              "duration": 60,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps4 = getProps(),\n  mockStore = _getProps4.mockStore;\nvar _render4 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render4.container,\n  getByRole = _render4.getByRole;\ngetByRole('button', {\n  name: /submit/i\n}).click();\nvar nodes = Array.from(container.querySelectorAll(\"\".concat(expectedFieldTypesWebComponents, \", \").concat(wrapperWebComponents)));\nvar errors = nodes.filter(function (node) {\n  return node.error;\n});\n(0, _chai.expect)(errors).to.have.lengthOf(expectedNumberOfErrors);",
              "err": {},
              "uuid": "f2ddc6de-f99b-478f-baab-7215f0af1edd",
              "parentUUID": "a65e9776-f6c3-4ef9-afc3-96563bf58a84",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f2ddc6de-f99b-478f-baab-7215f0af1edd"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 60,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "2646941a-4fdc-4411-95af-2dd12ba0fbad",
          "title": "Mailing address page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/21-4138/tests/unit/pages/mailingAddress.unit.spec.js",
          "file": "/src/applications/simple-forms/21-4138/tests/unit/pages/mailingAddress.unit.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should have appropriate number of fields",
              "fullTitle": "Mailing address page should have appropriate number of fields",
              "timedOut": false,
              "duration": 18,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps = getProps(),\n  mockStore = _getProps.mockStore;\nvar _render = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypes)).to.have.lengthOf(expectedNumberOfFields);",
              "err": {},
              "uuid": "42c49dc6-e2e6-4009-8ae3-1ed1320c85b3",
              "parentUUID": "2646941a-4fdc-4411-95af-2dd12ba0fbad",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "42c49dc6-e2e6-4009-8ae3-1ed1320c85b3"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 18,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "f3ede797-b3f5-4b5e-8137-011fbb0529e9",
          "title": "Mailing address page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/21-4138/tests/unit/pages/mailingAddress.unit.spec.js",
          "file": "/src/applications/simple-forms/21-4138/tests/unit/pages/mailingAddress.unit.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should show the correct number of errors on submit",
              "fullTitle": "Mailing address page should show the correct number of errors on submit",
              "timedOut": false,
              "duration": 96,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps2 = getProps(),\n  mockStore = _getProps2.mockStore;\nvar _render2 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  getByRole = _render2.getByRole,\n  queryAllByRole = _render2.queryAllByRole;\ngetByRole('button', {\n  name: /submit/i\n}).click();\nvar errors = queryAllByRole('alert');\n(0, _chai.expect)(errors).to.have.lengthOf(expectedNumberOfErrors);",
              "err": {},
              "uuid": "dc2ca075-f17b-4746-bbee-8cbcab570492",
              "parentUUID": "f3ede797-b3f5-4b5e-8137-011fbb0529e9",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "dc2ca075-f17b-4746-bbee-8cbcab570492"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 96,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "3f27ccd4-637a-4bf9-acd7-d77183722b40",
          "title": "There's a better way to submit new evidence page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/21-4138/tests/unit/pages/newEvidence.unit.spec.js",
          "file": "/src/applications/simple-forms/21-4138/tests/unit/pages/newEvidence.unit.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should have appropriate number of web components",
              "fullTitle": "There's a better way to submit new evidence page should have appropriate number of web components",
              "timedOut": false,
              "duration": 3,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps3 = getProps(),\n  mockStore = _getProps3.mockStore;\nvar _render3 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render3.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypesWebComponents)).to.have.lengthOf(expectedNumberOfFields);",
              "err": {},
              "uuid": "a192d40a-bcbe-410c-b29f-fa59f96e98da",
              "parentUUID": "3f27ccd4-637a-4bf9-acd7-d77183722b40",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a192d40a-bcbe-410c-b29f-fa59f96e98da"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "038f88f0-310e-4e22-b815-ac18c5c19bce",
          "title": "There's a better way to submit new evidence page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/21-4138/tests/unit/pages/newEvidence.unit.spec.js",
          "file": "/src/applications/simple-forms/21-4138/tests/unit/pages/newEvidence.unit.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should show the correct number of errors on submit for web components",
              "fullTitle": "There's a better way to submit new evidence page should show the correct number of errors on submit for web components",
              "timedOut": false,
              "duration": 10,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps4 = getProps(),\n  mockStore = _getProps4.mockStore;\nvar _render4 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render4.container,\n  getByRole = _render4.getByRole;\ngetByRole('button', {\n  name: /submit/i\n}).click();\nvar nodes = Array.from(container.querySelectorAll(\"\".concat(expectedFieldTypesWebComponents, \", \").concat(wrapperWebComponents)));\nvar errors = nodes.filter(function (node) {\n  return node.error;\n});\n(0, _chai.expect)(errors).to.have.lengthOf(expectedNumberOfErrors);",
              "err": {},
              "uuid": "92725c04-1cfb-490d-9c6e-9079b6bd2c58",
              "parentUUID": "038f88f0-310e-4e22-b815-ac18c5c19bce",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "92725c04-1cfb-490d-9c6e-9079b6bd2c58"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 10,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "16f38c6d-3926-4d62-b732-b2841eb6c59a",
          "title": "There's a better way to submit new evidence page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/21-4138/tests/unit/pages/newEvidence.unit.spec.js",
          "file": "/src/applications/simple-forms/21-4138/tests/unit/pages/newEvidence.unit.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should have appropriate number of fields",
              "fullTitle": "There's a better way to submit new evidence page should have appropriate number of fields",
              "timedOut": false,
              "duration": 3,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps = getProps(),\n  mockStore = _getProps.mockStore;\nvar _render = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypes)).to.have.lengthOf(expectedNumberOfFields);",
              "err": {},
              "uuid": "19ceb863-063b-41fc-8877-942144fe6eb0",
              "parentUUID": "16f38c6d-3926-4d62-b732-b2841eb6c59a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "19ceb863-063b-41fc-8877-942144fe6eb0"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "33cc58b3-72cf-4f86-bf95-3e321cab1782",
          "title": "There's a better way to submit new evidence page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/21-4138/tests/unit/pages/newEvidence.unit.spec.js",
          "file": "/src/applications/simple-forms/21-4138/tests/unit/pages/newEvidence.unit.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should show the correct number of errors on submit",
              "fullTitle": "There's a better way to submit new evidence page should show the correct number of errors on submit",
              "timedOut": false,
              "duration": 13,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps2 = getProps(),\n  mockStore = _getProps2.mockStore;\nvar _render2 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  getByRole = _render2.getByRole,\n  queryAllByRole = _render2.queryAllByRole;\ngetByRole('button', {\n  name: /submit/i\n}).click();\nvar errors = queryAllByRole('alert');\n(0, _chai.expect)(errors).to.have.lengthOf(expectedNumberOfErrors);",
              "err": {},
              "uuid": "58bec0f8-8302-4c34-9b9f-e4f14e1d9e7a",
              "parentUUID": "33cc58b3-72cf-4f86-bf95-3e321cab1782",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "58bec0f8-8302-4c34-9b9f-e4f14e1d9e7a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 13,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "6d30fd83-e8c2-4e6c-a026-1850a7604a14",
          "title": "There's a better way for you to ask for a decision review page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/21-4138/tests/unit/pages/noticeOfDisagreement.unit.spec.js",
          "file": "/src/applications/simple-forms/21-4138/tests/unit/pages/noticeOfDisagreement.unit.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should have appropriate number of web components",
              "fullTitle": "There's a better way for you to ask for a decision review page should have appropriate number of web components",
              "timedOut": false,
              "duration": 3,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps3 = getProps(),\n  mockStore = _getProps3.mockStore;\nvar _render3 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render3.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypesWebComponents)).to.have.lengthOf(expectedNumberOfFields);",
              "err": {},
              "uuid": "ce133644-8cff-4a03-a029-a808a39b2824",
              "parentUUID": "6d30fd83-e8c2-4e6c-a026-1850a7604a14",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "ce133644-8cff-4a03-a029-a808a39b2824"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "e0248a3a-e0f2-43ce-b6a5-5cc286ed5aa3",
          "title": "There's a better way for you to ask for a decision review page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/21-4138/tests/unit/pages/noticeOfDisagreement.unit.spec.js",
          "file": "/src/applications/simple-forms/21-4138/tests/unit/pages/noticeOfDisagreement.unit.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should show the correct number of errors on submit for web components",
              "fullTitle": "There's a better way for you to ask for a decision review page should show the correct number of errors on submit for web components",
              "timedOut": false,
              "duration": 13,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps4 = getProps(),\n  mockStore = _getProps4.mockStore;\nvar _render4 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render4.container,\n  getByRole = _render4.getByRole;\ngetByRole('button', {\n  name: /submit/i\n}).click();\nvar nodes = Array.from(container.querySelectorAll(\"\".concat(expectedFieldTypesWebComponents, \", \").concat(wrapperWebComponents)));\nvar errors = nodes.filter(function (node) {\n  return node.error;\n});\n(0, _chai.expect)(errors).to.have.lengthOf(expectedNumberOfErrors);",
              "err": {},
              "uuid": "9ab8e9ad-25be-4ea1-b511-1caa577b71ff",
              "parentUUID": "e0248a3a-e0f2-43ce-b6a5-5cc286ed5aa3",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "9ab8e9ad-25be-4ea1-b511-1caa577b71ff"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 13,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "133c83b1-e1cf-467f-80f5-df2b0e696f51",
          "title": "There's a better way for you to ask for a decision review page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/21-4138/tests/unit/pages/noticeOfDisagreement.unit.spec.js",
          "file": "/src/applications/simple-forms/21-4138/tests/unit/pages/noticeOfDisagreement.unit.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should have appropriate number of fields",
              "fullTitle": "There's a better way for you to ask for a decision review page should have appropriate number of fields",
              "timedOut": false,
              "duration": 3,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps = getProps(),\n  mockStore = _getProps.mockStore;\nvar _render = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypes)).to.have.lengthOf(expectedNumberOfFields);",
              "err": {},
              "uuid": "b94a4c4b-7168-4fb1-ba55-4c1117d15dd5",
              "parentUUID": "133c83b1-e1cf-467f-80f5-df2b0e696f51",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "b94a4c4b-7168-4fb1-ba55-4c1117d15dd5"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "ed957516-6860-45e4-8a06-3cbdb7886541",
          "title": "There's a better way for you to ask for a decision review page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/21-4138/tests/unit/pages/noticeOfDisagreement.unit.spec.js",
          "file": "/src/applications/simple-forms/21-4138/tests/unit/pages/noticeOfDisagreement.unit.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should show the correct number of errors on submit",
              "fullTitle": "There's a better way for you to ask for a decision review page should show the correct number of errors on submit",
              "timedOut": false,
              "duration": 15,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps2 = getProps(),\n  mockStore = _getProps2.mockStore;\nvar _render2 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  getByRole = _render2.getByRole,\n  queryAllByRole = _render2.queryAllByRole;\ngetByRole('button', {\n  name: /submit/i\n}).click();\nvar errors = queryAllByRole('alert');\n(0, _chai.expect)(errors).to.have.lengthOf(expectedNumberOfErrors);",
              "err": {},
              "uuid": "1b12724c-90bf-4005-9d3b-15624dbc2298",
              "parentUUID": "ed957516-6860-45e4-8a06-3cbdb7886541",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "1b12724c-90bf-4005-9d3b-15624dbc2298"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 15,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "eaab4f77-83d7-4135-ba49-4227ed46bed1",
          "title": "There's a better way for you to ask for a decision review page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/21-4138/tests/unit/pages/noticeOfDisagreement.unit.spec.js",
          "file": "/src/applications/simple-forms/21-4138/tests/unit/pages/noticeOfDisagreement.unit.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should have appropriate number of web components",
              "fullTitle": "There's a better way for you to ask for a decision review page should have appropriate number of web components",
              "timedOut": false,
              "duration": 3,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps3 = getProps(),\n  mockStore = _getProps3.mockStore;\nvar _render3 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render3.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypesWebComponents)).to.have.lengthOf(expectedNumberOfFields);",
              "err": {},
              "uuid": "239c782a-3488-4a10-9099-c5fda424ebe8",
              "parentUUID": "eaab4f77-83d7-4135-ba49-4227ed46bed1",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "239c782a-3488-4a10-9099-c5fda424ebe8"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "ca7cdccc-3405-474a-a838-9537ab9db222",
          "title": "There's a better way for you to ask for a decision review page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/21-4138/tests/unit/pages/noticeOfDisagreement.unit.spec.js",
          "file": "/src/applications/simple-forms/21-4138/tests/unit/pages/noticeOfDisagreement.unit.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should show the correct number of errors on submit for web components",
              "fullTitle": "There's a better way for you to ask for a decision review page should show the correct number of errors on submit for web components",
              "timedOut": false,
              "duration": 13,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps4 = getProps(),\n  mockStore = _getProps4.mockStore;\nvar _render4 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render4.container,\n  getByRole = _render4.getByRole;\ngetByRole('button', {\n  name: /submit/i\n}).click();\nvar nodes = Array.from(container.querySelectorAll(\"\".concat(expectedFieldTypesWebComponents, \", \").concat(wrapperWebComponents)));\nvar errors = nodes.filter(function (node) {\n  return node.error;\n});\n(0, _chai.expect)(errors).to.have.lengthOf(expectedNumberOfErrors);",
              "err": {},
              "uuid": "a96b81bd-e5e3-480a-b491-96cda313b16c",
              "parentUUID": "ca7cdccc-3405-474a-a838-9537ab9db222",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a96b81bd-e5e3-480a-b491-96cda313b16c"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 13,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "7f7dfddc-cd77-4a0f-b937-58e793c34d98",
          "title": "There's a better way for you to ask for a decision review page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/21-4138/tests/unit/pages/noticeOfDisagreement.unit.spec.js",
          "file": "/src/applications/simple-forms/21-4138/tests/unit/pages/noticeOfDisagreement.unit.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should have appropriate number of fields",
              "fullTitle": "There's a better way for you to ask for a decision review page should have appropriate number of fields",
              "timedOut": false,
              "duration": 3,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps = getProps(),\n  mockStore = _getProps.mockStore;\nvar _render = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypes)).to.have.lengthOf(expectedNumberOfFields);",
              "err": {},
              "uuid": "74ecaaf8-e8fa-4aaf-a074-785284dec240",
              "parentUUID": "7f7dfddc-cd77-4a0f-b937-58e793c34d98",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "74ecaaf8-e8fa-4aaf-a074-785284dec240"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "a1d0ed9d-3d37-4eef-97dd-c2565d5572ac",
          "title": "There's a better way for you to ask for a decision review page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/21-4138/tests/unit/pages/noticeOfDisagreement.unit.spec.js",
          "file": "/src/applications/simple-forms/21-4138/tests/unit/pages/noticeOfDisagreement.unit.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should show the correct number of errors on submit",
              "fullTitle": "There's a better way for you to ask for a decision review page should show the correct number of errors on submit",
              "timedOut": false,
              "duration": 17,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps2 = getProps(),\n  mockStore = _getProps2.mockStore;\nvar _render2 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  getByRole = _render2.getByRole,\n  queryAllByRole = _render2.queryAllByRole;\ngetByRole('button', {\n  name: /submit/i\n}).click();\nvar errors = queryAllByRole('alert');\n(0, _chai.expect)(errors).to.have.lengthOf(expectedNumberOfErrors);",
              "err": {},
              "uuid": "58b6ad39-c496-496d-8351-a16703434511",
              "parentUUID": "a1d0ed9d-3d37-4eef-97dd-c2565d5572ac",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "58b6ad39-c496-496d-8351-a16703434511"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 17,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "371b71ee-281d-497f-9bd4-6a58fca2a73d",
          "title": "There's a better way for you to ask for a decision review page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/21-4138/tests/unit/pages/noticeOfDisagreement.unit.spec.js",
          "file": "/src/applications/simple-forms/21-4138/tests/unit/pages/noticeOfDisagreement.unit.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should have appropriate number of web components",
              "fullTitle": "There's a better way for you to ask for a decision review page should have appropriate number of web components",
              "timedOut": false,
              "duration": 4,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps3 = getProps(),\n  mockStore = _getProps3.mockStore;\nvar _render3 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render3.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypesWebComponents)).to.have.lengthOf(expectedNumberOfFields);",
              "err": {},
              "uuid": "567b11b0-cf15-476b-bdb6-142603bdc016",
              "parentUUID": "371b71ee-281d-497f-9bd4-6a58fca2a73d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "567b11b0-cf15-476b-bdb6-142603bdc016"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 4,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "aa755e94-35cd-4d27-9acd-0035daf9fa90",
          "title": "There's a better way for you to ask for a decision review page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/21-4138/tests/unit/pages/noticeOfDisagreement.unit.spec.js",
          "file": "/src/applications/simple-forms/21-4138/tests/unit/pages/noticeOfDisagreement.unit.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should show the correct number of errors on submit for web components",
              "fullTitle": "There's a better way for you to ask for a decision review page should show the correct number of errors on submit for web components",
              "timedOut": false,
              "duration": 12,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps4 = getProps(),\n  mockStore = _getProps4.mockStore;\nvar _render4 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render4.container,\n  getByRole = _render4.getByRole;\ngetByRole('button', {\n  name: /submit/i\n}).click();\nvar nodes = Array.from(container.querySelectorAll(\"\".concat(expectedFieldTypesWebComponents, \", \").concat(wrapperWebComponents)));\nvar errors = nodes.filter(function (node) {\n  return node.error;\n});\n(0, _chai.expect)(errors).to.have.lengthOf(expectedNumberOfErrors);",
              "err": {},
              "uuid": "cc53aa7f-a093-4f87-b787-6ca544926d6c",
              "parentUUID": "aa755e94-35cd-4d27-9acd-0035daf9fa90",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "cc53aa7f-a093-4f87-b787-6ca544926d6c"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 12,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "9ac890c5-2f81-4b4f-826e-a00e08dbd2ad",
          "title": "There's a better way for you to ask for a decision review page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/21-4138/tests/unit/pages/noticeOfDisagreement.unit.spec.js",
          "file": "/src/applications/simple-forms/21-4138/tests/unit/pages/noticeOfDisagreement.unit.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should have appropriate number of fields",
              "fullTitle": "There's a better way for you to ask for a decision review page should have appropriate number of fields",
              "timedOut": false,
              "duration": 3,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps = getProps(),\n  mockStore = _getProps.mockStore;\nvar _render = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypes)).to.have.lengthOf(expectedNumberOfFields);",
              "err": {},
              "uuid": "113345a3-6c1e-4f6f-8a05-313bb3bc5559",
              "parentUUID": "9ac890c5-2f81-4b4f-826e-a00e08dbd2ad",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "113345a3-6c1e-4f6f-8a05-313bb3bc5559"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "89228563-9f91-48c4-bb4f-833ecbd38e25",
          "title": "There's a better way for you to ask for a decision review page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/21-4138/tests/unit/pages/noticeOfDisagreement.unit.spec.js",
          "file": "/src/applications/simple-forms/21-4138/tests/unit/pages/noticeOfDisagreement.unit.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should show the correct number of errors on submit",
              "fullTitle": "There's a better way for you to ask for a decision review page should show the correct number of errors on submit",
              "timedOut": false,
              "duration": 14,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps2 = getProps(),\n  mockStore = _getProps2.mockStore;\nvar _render2 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  getByRole = _render2.getByRole,\n  queryAllByRole = _render2.queryAllByRole;\ngetByRole('button', {\n  name: /submit/i\n}).click();\nvar errors = queryAllByRole('alert');\n(0, _chai.expect)(errors).to.have.lengthOf(expectedNumberOfErrors);",
              "err": {},
              "uuid": "010d9548-1f36-4fb3-b528-e5f508ad8f56",
              "parentUUID": "89228563-9f91-48c4-bb4f-833ecbd38e25",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "010d9548-1f36-4fb3-b528-e5f508ad8f56"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 14,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "3b81e2f9-13a3-4e34-9d72-9c3dbf553309",
          "title": "There's a better way for you to ask for a decision review page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/21-4138/tests/unit/pages/noticeOfDisagreement.unit.spec.js",
          "file": "/src/applications/simple-forms/21-4138/tests/unit/pages/noticeOfDisagreement.unit.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should have appropriate number of web components",
              "fullTitle": "There's a better way for you to ask for a decision review page should have appropriate number of web components",
              "timedOut": false,
              "duration": 4,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps3 = getProps(),\n  mockStore = _getProps3.mockStore;\nvar _render3 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render3.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypesWebComponents)).to.have.lengthOf(expectedNumberOfFields);",
              "err": {},
              "uuid": "ed67456b-cae0-4c93-b6b2-b45a5fd9c890",
              "parentUUID": "3b81e2f9-13a3-4e34-9d72-9c3dbf553309",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "ed67456b-cae0-4c93-b6b2-b45a5fd9c890"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 4,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "85829c91-8097-4e84-8632-cba473a40703",
          "title": "There's a better way for you to ask for a decision review page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/21-4138/tests/unit/pages/noticeOfDisagreement.unit.spec.js",
          "file": "/src/applications/simple-forms/21-4138/tests/unit/pages/noticeOfDisagreement.unit.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should show the correct number of errors on submit for web components",
              "fullTitle": "There's a better way for you to ask for a decision review page should show the correct number of errors on submit for web components",
              "timedOut": false,
              "duration": 12,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps4 = getProps(),\n  mockStore = _getProps4.mockStore;\nvar _render4 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render4.container,\n  getByRole = _render4.getByRole;\ngetByRole('button', {\n  name: /submit/i\n}).click();\nvar nodes = Array.from(container.querySelectorAll(\"\".concat(expectedFieldTypesWebComponents, \", \").concat(wrapperWebComponents)));\nvar errors = nodes.filter(function (node) {\n  return node.error;\n});\n(0, _chai.expect)(errors).to.have.lengthOf(expectedNumberOfErrors);",
              "err": {},
              "uuid": "ea86900b-6184-44aa-9c71-44d5c27c998c",
              "parentUUID": "85829c91-8097-4e84-8632-cba473a40703",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "ea86900b-6184-44aa-9c71-44d5c27c998c"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 12,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "6fc5c23b-c9a2-448e-9c0c-686b98ed054d",
          "title": "There's a better way for you to ask for a decision review page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/21-4138/tests/unit/pages/noticeOfDisagreement.unit.spec.js",
          "file": "/src/applications/simple-forms/21-4138/tests/unit/pages/noticeOfDisagreement.unit.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should have appropriate number of fields",
              "fullTitle": "There's a better way for you to ask for a decision review page should have appropriate number of fields",
              "timedOut": false,
              "duration": 3,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps = getProps(),\n  mockStore = _getProps.mockStore;\nvar _render = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypes)).to.have.lengthOf(expectedNumberOfFields);",
              "err": {},
              "uuid": "94808d76-ac80-41a9-a12b-06097f9b795f",
              "parentUUID": "6fc5c23b-c9a2-448e-9c0c-686b98ed054d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "94808d76-ac80-41a9-a12b-06097f9b795f"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "822cbbf7-9875-4e8d-854c-ee378dcef3e2",
          "title": "There's a better way for you to ask for a decision review page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/21-4138/tests/unit/pages/noticeOfDisagreement.unit.spec.js",
          "file": "/src/applications/simple-forms/21-4138/tests/unit/pages/noticeOfDisagreement.unit.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should show the correct number of errors on submit",
              "fullTitle": "There's a better way for you to ask for a decision review page should show the correct number of errors on submit",
              "timedOut": false,
              "duration": 15,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps2 = getProps(),\n  mockStore = _getProps2.mockStore;\nvar _render2 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  getByRole = _render2.getByRole,\n  queryAllByRole = _render2.queryAllByRole;\ngetByRole('button', {\n  name: /submit/i\n}).click();\nvar errors = queryAllByRole('alert');\n(0, _chai.expect)(errors).to.have.lengthOf(expectedNumberOfErrors);",
              "err": {},
              "uuid": "60acdab3-34ea-4214-8601-654b2e4b3e65",
              "parentUUID": "822cbbf7-9875-4e8d-854c-ee378dcef3e2",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "60acdab3-34ea-4214-8601-654b2e4b3e65"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 15,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "f4a4cfb1-bbc2-4834-8bed-801a98d33510",
          "title": "Name and date of birth page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/21-4138/tests/unit/pages/personalInformation.unit.spec.js",
          "file": "/src/applications/simple-forms/21-4138/tests/unit/pages/personalInformation.unit.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should have appropriate number of web components",
              "fullTitle": "Name and date of birth page should have appropriate number of web components",
              "timedOut": false,
              "duration": 5,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps3 = getProps(),\n  mockStore = _getProps3.mockStore;\nvar _render3 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render3.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypesWebComponents)).to.have.lengthOf(expectedNumberOfFields);",
              "err": {},
              "uuid": "c8ae90eb-2663-4703-be27-d62d6cf3adac",
              "parentUUID": "f4a4cfb1-bbc2-4834-8bed-801a98d33510",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "c8ae90eb-2663-4703-be27-d62d6cf3adac"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 5,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "2180a545-70fb-4fcc-939a-326e4ff79d1f",
          "title": "Name and date of birth page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/21-4138/tests/unit/pages/personalInformation.unit.spec.js",
          "file": "/src/applications/simple-forms/21-4138/tests/unit/pages/personalInformation.unit.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should show the correct number of errors on submit for web components",
              "fullTitle": "Name and date of birth page should show the correct number of errors on submit for web components",
              "timedOut": false,
              "duration": 17,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps4 = getProps(),\n  mockStore = _getProps4.mockStore;\nvar _render4 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render4.container,\n  getByRole = _render4.getByRole;\ngetByRole('button', {\n  name: /submit/i\n}).click();\nvar nodes = Array.from(container.querySelectorAll(\"\".concat(expectedFieldTypesWebComponents, \", \").concat(wrapperWebComponents)));\nvar errors = nodes.filter(function (node) {\n  return node.error;\n});\n(0, _chai.expect)(errors).to.have.lengthOf(expectedNumberOfErrors);",
              "err": {},
              "uuid": "734817f6-65c9-40ac-9f5e-a173758c791f",
              "parentUUID": "2180a545-70fb-4fcc-939a-326e4ff79d1f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "734817f6-65c9-40ac-9f5e-a173758c791f"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 17,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "9c4f129d-3026-4bf4-904d-3c4221cdd43c",
          "title": "Name and date of birth page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/21-4138/tests/unit/pages/personalInformation.unit.spec.js",
          "file": "/src/applications/simple-forms/21-4138/tests/unit/pages/personalInformation.unit.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should have appropriate number of fields",
              "fullTitle": "Name and date of birth page should have appropriate number of fields",
              "timedOut": false,
              "duration": 5,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps = getProps(),\n  mockStore = _getProps.mockStore;\nvar _render = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypes)).to.have.lengthOf(expectedNumberOfFields);",
              "err": {},
              "uuid": "fffbd5b9-b87c-42be-8cbd-892ded08f276",
              "parentUUID": "9c4f129d-3026-4bf4-904d-3c4221cdd43c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "fffbd5b9-b87c-42be-8cbd-892ded08f276"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 5,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "c6df596f-1fed-4165-92f2-b2dbf01ee4e4",
          "title": "Name and date of birth page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/21-4138/tests/unit/pages/personalInformation.unit.spec.js",
          "file": "/src/applications/simple-forms/21-4138/tests/unit/pages/personalInformation.unit.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should show the correct number of errors on submit",
              "fullTitle": "Name and date of birth page should show the correct number of errors on submit",
              "timedOut": false,
              "duration": 19,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps2 = getProps(),\n  mockStore = _getProps2.mockStore;\nvar _render2 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  getByRole = _render2.getByRole,\n  queryAllByRole = _render2.queryAllByRole;\ngetByRole('button', {\n  name: /submit/i\n}).click();\nvar errors = queryAllByRole('alert');\n(0, _chai.expect)(errors).to.have.lengthOf(expectedNumberOfErrors);",
              "err": {},
              "uuid": "90df276f-3dbf-47a4-970a-1885ab5ae8f4",
              "parentUUID": "c6df596f-1fed-4165-92f2-b2dbf01ee4e4",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "90df276f-3dbf-47a4-970a-1885ab5ae8f4"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 19,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "f95096de-1992-484b-9f79-cf41cfad913b",
          "title": "Phone and email address page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/21-4138/tests/unit/pages/phoneAndEmail.unit.spec.js",
          "file": "/src/applications/simple-forms/21-4138/tests/unit/pages/phoneAndEmail.unit.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should have appropriate number of web components",
              "fullTitle": "Phone and email address page should have appropriate number of web components",
              "timedOut": false,
              "duration": 3,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps3 = getProps(),\n  mockStore = _getProps3.mockStore;\nvar _render3 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render3.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypesWebComponents)).to.have.lengthOf(expectedNumberOfFields);",
              "err": {},
              "uuid": "4329545d-d06c-481b-9306-31833f2197a9",
              "parentUUID": "f95096de-1992-484b-9f79-cf41cfad913b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "4329545d-d06c-481b-9306-31833f2197a9"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "27695395-8f3d-4f59-9da3-b8a43cfa3a3e",
          "title": "Phone and email address page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/21-4138/tests/unit/pages/phoneAndEmail.unit.spec.js",
          "file": "/src/applications/simple-forms/21-4138/tests/unit/pages/phoneAndEmail.unit.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should show the correct number of errors on submit for web components",
              "fullTitle": "Phone and email address page should show the correct number of errors on submit for web components",
              "timedOut": false,
              "duration": 11,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps4 = getProps(),\n  mockStore = _getProps4.mockStore;\nvar _render4 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render4.container,\n  getByRole = _render4.getByRole;\ngetByRole('button', {\n  name: /submit/i\n}).click();\nvar nodes = Array.from(container.querySelectorAll(\"\".concat(expectedFieldTypesWebComponents, \", \").concat(wrapperWebComponents)));\nvar errors = nodes.filter(function (node) {\n  return node.error;\n});\n(0, _chai.expect)(errors).to.have.lengthOf(expectedNumberOfErrors);",
              "err": {},
              "uuid": "0a202a48-889b-455d-b554-3505669d8683",
              "parentUUID": "27695395-8f3d-4f59-9da3-b8a43cfa3a3e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "0a202a48-889b-455d-b554-3505669d8683"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 11,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "87d3a619-2930-43ab-9c7d-d01839fb29b5",
          "title": "Phone and email address page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/21-4138/tests/unit/pages/phoneAndEmail.unit.spec.js",
          "file": "/src/applications/simple-forms/21-4138/tests/unit/pages/phoneAndEmail.unit.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should have appropriate number of fields",
              "fullTitle": "Phone and email address page should have appropriate number of fields",
              "timedOut": false,
              "duration": 3,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps = getProps(),\n  mockStore = _getProps.mockStore;\nvar _render = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypes)).to.have.lengthOf(expectedNumberOfFields);",
              "err": {},
              "uuid": "6d0bf16b-b99e-4901-b13d-13bbc5c71301",
              "parentUUID": "87d3a619-2930-43ab-9c7d-d01839fb29b5",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "6d0bf16b-b99e-4901-b13d-13bbc5c71301"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "b108e566-0ac8-4041-8bfc-a616ba019e19",
          "title": "Phone and email address page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/21-4138/tests/unit/pages/phoneAndEmail.unit.spec.js",
          "file": "/src/applications/simple-forms/21-4138/tests/unit/pages/phoneAndEmail.unit.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should show the correct number of errors on submit",
              "fullTitle": "Phone and email address page should show the correct number of errors on submit",
              "timedOut": false,
              "duration": 13,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps2 = getProps(),\n  mockStore = _getProps2.mockStore;\nvar _render2 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  getByRole = _render2.getByRole,\n  queryAllByRole = _render2.queryAllByRole;\ngetByRole('button', {\n  name: /submit/i\n}).click();\nvar errors = queryAllByRole('alert');\n(0, _chai.expect)(errors).to.have.lengthOf(expectedNumberOfErrors);",
              "err": {},
              "uuid": "03501437-c9be-40c5-99ba-e342e035137c",
              "parentUUID": "b108e566-0ac8-4041-8bfc-a616ba019e19",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "03501437-c9be-40c5-99ba-e342e035137c"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 13,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "06c4bd38-8d9e-4d15-b23a-ecb88139b854",
          "title": "There’s a better way to tell us you need priority processing page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/21-4138/tests/unit/pages/priorityProcessing.unit.spec.js",
          "file": "/src/applications/simple-forms/21-4138/tests/unit/pages/priorityProcessing.unit.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should have appropriate number of web components",
              "fullTitle": "There’s a better way to tell us you need priority processing page should have appropriate number of web components",
              "timedOut": false,
              "duration": 3,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps3 = getProps(),\n  mockStore = _getProps3.mockStore;\nvar _render3 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render3.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypesWebComponents)).to.have.lengthOf(expectedNumberOfFields);",
              "err": {},
              "uuid": "30c9af12-38f3-48c2-94f7-bb9db68d4515",
              "parentUUID": "06c4bd38-8d9e-4d15-b23a-ecb88139b854",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "30c9af12-38f3-48c2-94f7-bb9db68d4515"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "f54bc6fa-d5f2-46dd-a27c-11b391fd71b9",
          "title": "There’s a better way to tell us you need priority processing page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/21-4138/tests/unit/pages/priorityProcessing.unit.spec.js",
          "file": "/src/applications/simple-forms/21-4138/tests/unit/pages/priorityProcessing.unit.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should show the correct number of errors on submit for web components",
              "fullTitle": "There’s a better way to tell us you need priority processing page should show the correct number of errors on submit for web components",
              "timedOut": false,
              "duration": 12,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps4 = getProps(),\n  mockStore = _getProps4.mockStore;\nvar _render4 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render4.container,\n  getByRole = _render4.getByRole;\ngetByRole('button', {\n  name: /submit/i\n}).click();\nvar nodes = Array.from(container.querySelectorAll(\"\".concat(expectedFieldTypesWebComponents, \", \").concat(wrapperWebComponents)));\nvar errors = nodes.filter(function (node) {\n  return node.error;\n});\n(0, _chai.expect)(errors).to.have.lengthOf(expectedNumberOfErrors);",
              "err": {},
              "uuid": "81ce6639-cd3d-4ad6-a2d6-068ab5c1ef61",
              "parentUUID": "f54bc6fa-d5f2-46dd-a27c-11b391fd71b9",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "81ce6639-cd3d-4ad6-a2d6-068ab5c1ef61"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 12,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "6574b6ce-4cc8-4247-956b-c7ebb4fff886",
          "title": "There’s a better way to tell us you need priority processing page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/21-4138/tests/unit/pages/priorityProcessing.unit.spec.js",
          "file": "/src/applications/simple-forms/21-4138/tests/unit/pages/priorityProcessing.unit.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should have appropriate number of fields",
              "fullTitle": "There’s a better way to tell us you need priority processing page should have appropriate number of fields",
              "timedOut": false,
              "duration": 3,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps = getProps(),\n  mockStore = _getProps.mockStore;\nvar _render = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypes)).to.have.lengthOf(expectedNumberOfFields);",
              "err": {},
              "uuid": "963ec39d-5539-40f0-bb4e-ef087e303fea",
              "parentUUID": "6574b6ce-4cc8-4247-956b-c7ebb4fff886",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "963ec39d-5539-40f0-bb4e-ef087e303fea"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "409f646d-e5a0-43ca-a8f6-f507da1e4c06",
          "title": "There’s a better way to tell us you need priority processing page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/21-4138/tests/unit/pages/priorityProcessing.unit.spec.js",
          "file": "/src/applications/simple-forms/21-4138/tests/unit/pages/priorityProcessing.unit.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should show the correct number of errors on submit",
              "fullTitle": "There’s a better way to tell us you need priority processing page should show the correct number of errors on submit",
              "timedOut": false,
              "duration": 18,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps2 = getProps(),\n  mockStore = _getProps2.mockStore;\nvar _render2 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  getByRole = _render2.getByRole,\n  queryAllByRole = _render2.queryAllByRole;\ngetByRole('button', {\n  name: /submit/i\n}).click();\nvar errors = queryAllByRole('alert');\n(0, _chai.expect)(errors).to.have.lengthOf(expectedNumberOfErrors);",
              "err": {},
              "uuid": "88702d03-8018-48cc-b756-09d460ff62f1",
              "parentUUID": "409f646d-e5a0-43ca-a8f6-f507da1e4c06",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "88702d03-8018-48cc-b756-09d460ff62f1"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 18,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "7f2cd485-0df0-4a1f-9725-a429ece21aa5",
          "title": "There's a better way to request your personal records page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/21-4138/tests/unit/pages/recordsRequest.unit.spec.js",
          "file": "/src/applications/simple-forms/21-4138/tests/unit/pages/recordsRequest.unit.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should have appropriate number of web components",
              "fullTitle": "There's a better way to request your personal records page should have appropriate number of web components",
              "timedOut": false,
              "duration": 3,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps3 = getProps(),\n  mockStore = _getProps3.mockStore;\nvar _render3 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render3.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypesWebComponents)).to.have.lengthOf(expectedNumberOfFields);",
              "err": {},
              "uuid": "0ec466a8-e1f4-450e-8851-c369b7b1d6c3",
              "parentUUID": "7f2cd485-0df0-4a1f-9725-a429ece21aa5",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "0ec466a8-e1f4-450e-8851-c369b7b1d6c3"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "e4551593-ab09-4404-a5ce-3660e3e9b5de",
          "title": "There's a better way to request your personal records page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/21-4138/tests/unit/pages/recordsRequest.unit.spec.js",
          "file": "/src/applications/simple-forms/21-4138/tests/unit/pages/recordsRequest.unit.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should show the correct number of errors on submit for web components",
              "fullTitle": "There's a better way to request your personal records page should show the correct number of errors on submit for web components",
              "timedOut": false,
              "duration": 11,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps4 = getProps(),\n  mockStore = _getProps4.mockStore;\nvar _render4 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render4.container,\n  getByRole = _render4.getByRole;\ngetByRole('button', {\n  name: /submit/i\n}).click();\nvar nodes = Array.from(container.querySelectorAll(\"\".concat(expectedFieldTypesWebComponents, \", \").concat(wrapperWebComponents)));\nvar errors = nodes.filter(function (node) {\n  return node.error;\n});\n(0, _chai.expect)(errors).to.have.lengthOf(expectedNumberOfErrors);",
              "err": {},
              "uuid": "7c1e5876-b13e-4a07-a409-67fee41adc16",
              "parentUUID": "e4551593-ab09-4404-a5ce-3660e3e9b5de",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "7c1e5876-b13e-4a07-a409-67fee41adc16"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 11,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "28746d16-4e74-420c-8548-eb9ed12a6fc1",
          "title": "There's a better way to request your personal records page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/21-4138/tests/unit/pages/recordsRequest.unit.spec.js",
          "file": "/src/applications/simple-forms/21-4138/tests/unit/pages/recordsRequest.unit.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should have appropriate number of fields",
              "fullTitle": "There's a better way to request your personal records page should have appropriate number of fields",
              "timedOut": false,
              "duration": 3,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps = getProps(),\n  mockStore = _getProps.mockStore;\nvar _render = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypes)).to.have.lengthOf(expectedNumberOfFields);",
              "err": {},
              "uuid": "6f3f5084-9d70-4825-b1ba-2d5473ca4038",
              "parentUUID": "28746d16-4e74-420c-8548-eb9ed12a6fc1",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "6f3f5084-9d70-4825-b1ba-2d5473ca4038"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "bba7358a-c857-4e0a-861f-1fc425eb5e81",
          "title": "There's a better way to request your personal records page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/21-4138/tests/unit/pages/recordsRequest.unit.spec.js",
          "file": "/src/applications/simple-forms/21-4138/tests/unit/pages/recordsRequest.unit.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should show the correct number of errors on submit",
              "fullTitle": "There's a better way to request your personal records page should show the correct number of errors on submit",
              "timedOut": false,
              "duration": 13,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps2 = getProps(),\n  mockStore = _getProps2.mockStore;\nvar _render2 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  getByRole = _render2.getByRole,\n  queryAllByRole = _render2.queryAllByRole;\ngetByRole('button', {\n  name: /submit/i\n}).click();\nvar errors = queryAllByRole('alert');\n(0, _chai.expect)(errors).to.have.lengthOf(expectedNumberOfErrors);",
              "err": {},
              "uuid": "8d2bf732-3eda-4cb3-9ed5-d57486cda492",
              "parentUUID": "bba7358a-c857-4e0a-861f-1fc425eb5e81",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "8d2bf732-3eda-4cb3-9ed5-d57486cda492"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 13,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "00f41f1e-4335-405b-b6fa-97e651a192a6",
          "title": "Provide your statement page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/21-4138/tests/unit/pages/statement.unit.spec.js",
          "file": "/src/applications/simple-forms/21-4138/tests/unit/pages/statement.unit.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should have appropriate number of web components",
              "fullTitle": "Provide your statement page should have appropriate number of web components",
              "timedOut": false,
              "duration": 3,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps3 = getProps(),\n  mockStore = _getProps3.mockStore;\nvar _render3 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render3.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypesWebComponents)).to.have.lengthOf(expectedNumberOfFields);",
              "err": {},
              "uuid": "7f9a76b8-3812-4752-9220-8baa49ca2303",
              "parentUUID": "00f41f1e-4335-405b-b6fa-97e651a192a6",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "7f9a76b8-3812-4752-9220-8baa49ca2303"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "c844f8e4-af19-4cfc-9559-c613237622d5",
          "title": "Provide your statement page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/21-4138/tests/unit/pages/statement.unit.spec.js",
          "file": "/src/applications/simple-forms/21-4138/tests/unit/pages/statement.unit.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should show the correct number of errors on submit for web components",
              "fullTitle": "Provide your statement page should show the correct number of errors on submit for web components",
              "timedOut": false,
              "duration": 11,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps4 = getProps(),\n  mockStore = _getProps4.mockStore;\nvar _render4 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render4.container,\n  getByRole = _render4.getByRole;\ngetByRole('button', {\n  name: /submit/i\n}).click();\nvar nodes = Array.from(container.querySelectorAll(\"\".concat(expectedFieldTypesWebComponents, \", \").concat(wrapperWebComponents)));\nvar errors = nodes.filter(function (node) {\n  return node.error;\n});\n(0, _chai.expect)(errors).to.have.lengthOf(expectedNumberOfErrors);",
              "err": {},
              "uuid": "af1381ac-f629-4f5e-a3ac-c0925728b79a",
              "parentUUID": "c844f8e4-af19-4cfc-9559-c613237622d5",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "af1381ac-f629-4f5e-a3ac-c0925728b79a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 11,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "e68b7c24-89fb-4f30-819e-3dc3619b7f6b",
          "title": "Provide your statement page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/21-4138/tests/unit/pages/statement.unit.spec.js",
          "file": "/src/applications/simple-forms/21-4138/tests/unit/pages/statement.unit.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should have appropriate number of fields",
              "fullTitle": "Provide your statement page should have appropriate number of fields",
              "timedOut": false,
              "duration": 3,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps = getProps(),\n  mockStore = _getProps.mockStore;\nvar _render = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypes)).to.have.lengthOf(expectedNumberOfFields);",
              "err": {},
              "uuid": "ef755436-868f-4cfb-857d-c655df8cf900",
              "parentUUID": "e68b7c24-89fb-4f30-819e-3dc3619b7f6b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "ef755436-868f-4cfb-857d-c655df8cf900"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "28967b72-1cd6-4b72-9d88-262ba6bdc737",
          "title": "Provide your statement page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/21-4138/tests/unit/pages/statement.unit.spec.js",
          "file": "/src/applications/simple-forms/21-4138/tests/unit/pages/statement.unit.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should show the correct number of errors on submit",
              "fullTitle": "Provide your statement page should show the correct number of errors on submit",
              "timedOut": false,
              "duration": 12,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps2 = getProps(),\n  mockStore = _getProps2.mockStore;\nvar _render2 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  getByRole = _render2.getByRole,\n  queryAllByRole = _render2.queryAllByRole;\ngetByRole('button', {\n  name: /submit/i\n}).click();\nvar errors = queryAllByRole('alert');\n(0, _chai.expect)(errors).to.have.lengthOf(expectedNumberOfErrors);",
              "err": {},
              "uuid": "16f21572-e97f-4b94-be62-292fd67f4292",
              "parentUUID": "28967b72-1cd6-4b72-9d88-262ba6bdc737",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "16f21572-e97f-4b94-be62-292fd67f4292"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 12,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "373c08a8-044d-48af-a262-855091e43530",
          "title": "What would you like to do? page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/21-4138/tests/unit/pages/statementType.unit.spec.js",
          "file": "/src/applications/simple-forms/21-4138/tests/unit/pages/statementType.unit.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should have appropriate number of web components",
              "fullTitle": "What would you like to do? page should have appropriate number of web components",
              "timedOut": false,
              "duration": 4,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps3 = getProps(),\n  mockStore = _getProps3.mockStore;\nvar _render3 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render3.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypesWebComponents)).to.have.lengthOf(expectedNumberOfFields);",
              "err": {},
              "uuid": "4ab879db-fd4d-44f2-b05c-466bbd14e389",
              "parentUUID": "373c08a8-044d-48af-a262-855091e43530",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "4ab879db-fd4d-44f2-b05c-466bbd14e389"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 4,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "e768e3e8-1d64-452c-9fc8-3e1bf86da643",
          "title": "What would you like to do? page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/21-4138/tests/unit/pages/statementType.unit.spec.js",
          "file": "/src/applications/simple-forms/21-4138/tests/unit/pages/statementType.unit.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should show the correct number of errors on submit for web components",
              "fullTitle": "What would you like to do? page should show the correct number of errors on submit for web components",
              "timedOut": false,
              "duration": 15,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps4 = getProps(),\n  mockStore = _getProps4.mockStore;\nvar _render4 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render4.container,\n  getByRole = _render4.getByRole;\ngetByRole('button', {\n  name: /submit/i\n}).click();\nvar nodes = Array.from(container.querySelectorAll(\"\".concat(expectedFieldTypesWebComponents, \", \").concat(wrapperWebComponents)));\nvar errors = nodes.filter(function (node) {\n  return node.error;\n});\n(0, _chai.expect)(errors).to.have.lengthOf(expectedNumberOfErrors);",
              "err": {},
              "uuid": "4e8f1cf3-dce7-42fe-92f3-62455e45d0ff",
              "parentUUID": "e768e3e8-1d64-452c-9fc8-3e1bf86da643",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "4e8f1cf3-dce7-42fe-92f3-62455e45d0ff"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 15,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "c5de4121-ac6f-4ec6-8469-cc97568b9429",
          "title": "What would you like to do? page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/21-4138/tests/unit/pages/statementType.unit.spec.js",
          "file": "/src/applications/simple-forms/21-4138/tests/unit/pages/statementType.unit.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should have appropriate number of fields",
              "fullTitle": "What would you like to do? page should have appropriate number of fields",
              "timedOut": false,
              "duration": 4,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps = getProps(),\n  mockStore = _getProps.mockStore;\nvar _render = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypes)).to.have.lengthOf(expectedNumberOfFields);",
              "err": {},
              "uuid": "332aee6e-4b29-41bc-8710-b87af20ab0f9",
              "parentUUID": "c5de4121-ac6f-4ec6-8469-cc97568b9429",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "332aee6e-4b29-41bc-8710-b87af20ab0f9"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 4,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "6d953c04-8bfa-4652-88a5-c44207b1bffc",
          "title": "What would you like to do? page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/21-4138/tests/unit/pages/statementType.unit.spec.js",
          "file": "/src/applications/simple-forms/21-4138/tests/unit/pages/statementType.unit.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should show the correct number of errors on submit",
              "fullTitle": "What would you like to do? page should show the correct number of errors on submit",
              "timedOut": false,
              "duration": 16,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps2 = getProps(),\n  mockStore = _getProps2.mockStore;\nvar _render2 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  getByRole = _render2.getByRole,\n  queryAllByRole = _render2.queryAllByRole;\ngetByRole('button', {\n  name: /submit/i\n}).click();\nvar errors = queryAllByRole('alert');\n(0, _chai.expect)(errors).to.have.lengthOf(expectedNumberOfErrors);",
              "err": {},
              "uuid": "78104211-4d29-4f9f-8250-c710df218cd3",
              "parentUUID": "6d953c04-8bfa-4652-88a5-c44207b1bffc",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "78104211-4d29-4f9f-8250-c710df218cd3"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 16,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "f20cc221-ed91-4e9f-9c0d-aca3ff2c8852",
          "title": "RecordField",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/21-4142/tests/unit/components/RecordField.unit.spec.jsx",
          "file": "/src/applications/simple-forms/21-4142/tests/unit/components/RecordField.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should render",
              "fullTitle": "RecordField should render",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var formData = {\n  providerFacilityName: 'Test Facility'\n};\nvar _render = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_RecordField.default, {\n    formData: formData\n  })),\n  getByText = _render.getByText;\ngetByText('Test Facility');",
              "err": {},
              "uuid": "fc9cf7bd-0cce-493e-a78d-d330dbe3371f",
              "parentUUID": "f20cc221-ed91-4e9f-9c0d-aca3ff2c8852",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "fc9cf7bd-0cce-493e-a78d-d330dbe3371f"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "76221066-27fe-4477-b4f5-826afc1fe219",
          "title": "ConfirmationPage",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/21-4142/tests/unit/containers/ConfirmationPage.unit.spec.jsx",
          "file": "/src/applications/simple-forms/21-4142/tests/unit/containers/ConfirmationPage.unit.spec.jsx",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"ConfirmationPage\"",
              "fullTitle": "ConfirmationPage \"before each\" hook in \"ConfirmationPage\"",
              "timedOut": false,
              "duration": 5,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "wrapper = mountPage(initialState);",
              "err": {},
              "uuid": "14cc7406-ac84-4d70-95d0-7b0520b72ae0",
              "parentUUID": "76221066-27fe-4477-b4f5-826afc1fe219",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after each\" hook in \"ConfirmationPage\"",
              "fullTitle": "ConfirmationPage \"after each\" hook in \"ConfirmationPage\"",
              "timedOut": false,
              "duration": 1,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "if (wrapper) {\n  wrapper.unmount();\n}\n(0, _react2.cleanup)();",
              "err": {},
              "uuid": "8a71fbc6-2456-4a20-a43d-8f1def7d8e07",
              "parentUUID": "76221066-27fe-4477-b4f5-826afc1fe219",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "passes the correct props to ConfirmationPageView",
              "fullTitle": "ConfirmationPage passes the correct props to ConfirmationPageView",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var confirmationViewProps = wrapper.find('ConfirmationView').props();\n(0, _chai.expect)(confirmationViewProps.submitDate).to.equal(submitDate);\n(0, _chai.expect)(confirmationViewProps.confirmationNumber).to.equal('1234567890');",
              "err": {},
              "uuid": "5d99d8e6-6dfa-4822-be9e-e542d7e6a633",
              "parentUUID": "76221066-27fe-4477-b4f5-826afc1fe219",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should select form from state when state.form is defined",
              "fullTitle": "ConfirmationPage should select form from state when state.form is defined",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, _chai.expect)(wrapper.text()).to.include((0, _dateFns.format)(submitDate, 'MMMM d, yyyy'));\n(0, _chai.expect)(wrapper.text()).to.include('1234');",
              "err": {},
              "uuid": "1fd8e44a-0dbf-4cf3-8b88-e81d970042dc",
              "parentUUID": "76221066-27fe-4477-b4f5-826afc1fe219",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should throw error when state.form is undefined",
              "fullTitle": "ConfirmationPage should throw error when state.form is undefined",
              "timedOut": false,
              "duration": 5,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var errorWrapper;\n(0, _chai.expect)(function () {\n  errorWrapper = mountPage({});\n}).to.throw();\nif (errorWrapper) {\n  errorWrapper.unmount();\n}",
              "err": {},
              "uuid": "66a4d174-d19a-490d-9329-380e96c9dd07",
              "parentUUID": "76221066-27fe-4477-b4f5-826afc1fe219",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "5d99d8e6-6dfa-4822-be9e-e542d7e6a633",
            "1fd8e44a-0dbf-4cf3-8b88-e81d970042dc",
            "66a4d174-d19a-490d-9329-380e96c9dd07"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 6,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "ca355427-11e0-4e97-9eb3-95d187f17407",
          "title": "IntroductionPage",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/21-4142/tests/unit/containers/IntroductionPage.unit.spec.jsx",
          "file": "/src/applications/simple-forms/21-4142/tests/unit/containers/IntroductionPage.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should render",
              "fullTitle": "IntroductionPage should render",
              "timedOut": false,
              "duration": 4,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var mockStore = generateStore();\nvar _render = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_IntroductionPage.default, props))),\n  container = _render.container;\n(0, _chai.expect)(container).to.exist;",
              "err": {},
              "uuid": "13965ef4-17c4-4999-9eb6-a51cc0664c19",
              "parentUUID": "ca355427-11e0-4e97-9eb3-95d187f17407",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should render the va-alert-sign-in for LOA1 users",
              "fullTitle": "IntroductionPage should render the va-alert-sign-in for LOA1 users",
              "timedOut": false,
              "duration": 8,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var mockStore = generateStore({\n  loggedIn: true,\n  loaCurrent: 1\n});\nvar _render2 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_IntroductionPage.default, {\n    route: props.route\n  }))),\n  container = _render2.container;\n(0, _chai.expect)(container.querySelector('va-alert-sign-in')).to.exist;",
              "err": {},
              "uuid": "39acb69d-4f3b-4d64-a455-2fea2180643c",
              "parentUUID": "ca355427-11e0-4e97-9eb3-95d187f17407",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "13965ef4-17c4-4999-9eb6-a51cc0664c19",
            "39acb69d-4f3b-4d64-a455-2fea2180643c"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 12,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "b40396f1-90d6-4bbe-a303-a85cae3c490b",
          "title": "authorization page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/21-4142/tests/unit/pages/authorization.unit.spec.jsx",
          "file": "/src/applications/simple-forms/21-4142/tests/unit/pages/authorization.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should have appropriate number of fields",
              "fullTitle": "authorization page should have appropriate number of fields",
              "timedOut": false,
              "duration": 5,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps = getProps(),\n  mockStore = _getProps.mockStore;\nvar _render = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypes)).to.have.lengthOf(expectedNumberOfFields);",
              "err": {},
              "uuid": "a412e9ac-be8e-4355-a6ad-af5e5b3d998a",
              "parentUUID": "b40396f1-90d6-4bbe-a303-a85cae3c490b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a412e9ac-be8e-4355-a6ad-af5e5b3d998a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 5,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "f40cadc8-75e1-44df-ab2b-e47674fbbed8",
          "title": "authorization page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/21-4142/tests/unit/pages/authorization.unit.spec.jsx",
          "file": "/src/applications/simple-forms/21-4142/tests/unit/pages/authorization.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should show the correct number of errors on submit",
              "fullTitle": "authorization page should show the correct number of errors on submit",
              "timedOut": false,
              "duration": 22,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps2 = getProps(),\n  mockStore = _getProps2.mockStore;\nvar _render2 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  getByRole = _render2.getByRole,\n  queryAllByRole = _render2.queryAllByRole;\ngetByRole('button', {\n  name: /submit/i\n}).click();\nvar errors = queryAllByRole('alert');\n(0, _chai.expect)(errors).to.have.lengthOf(expectedNumberOfErrors);",
              "err": {},
              "uuid": "0a4d75d0-a709-4894-8d5a-062ab956fee4",
              "parentUUID": "f40cadc8-75e1-44df-ab2b-e47674fbbed8",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "0a4d75d0-a709-4894-8d5a-062ab956fee4"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 22,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "e133921d-2e47-43ab-a1fa-1769716f7742",
          "title": "contact information 1 page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/21-4142/tests/unit/pages/contactInformation1.unit.spec.jsx",
          "file": "/src/applications/simple-forms/21-4142/tests/unit/pages/contactInformation1.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should have appropriate number of fields",
              "fullTitle": "contact information 1 page should have appropriate number of fields",
              "timedOut": false,
              "duration": 25,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps = getProps(),\n  mockStore = _getProps.mockStore;\nvar _render = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypes)).to.have.lengthOf(expectedNumberOfFields);",
              "err": {},
              "uuid": "6b0eef32-8f2b-4022-918f-f9ca7eca2f19",
              "parentUUID": "e133921d-2e47-43ab-a1fa-1769716f7742",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "6b0eef32-8f2b-4022-918f-f9ca7eca2f19"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 25,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "67770a83-3a05-4f92-9f48-85017c36574c",
          "title": "contact information 1 page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/21-4142/tests/unit/pages/contactInformation1.unit.spec.jsx",
          "file": "/src/applications/simple-forms/21-4142/tests/unit/pages/contactInformation1.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should show the correct number of errors on submit",
              "fullTitle": "contact information 1 page should show the correct number of errors on submit",
              "timedOut": false,
              "duration": 90,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps2 = getProps(),\n  mockStore = _getProps2.mockStore;\nvar _render2 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  getByRole = _render2.getByRole,\n  queryAllByRole = _render2.queryAllByRole;\ngetByRole('button', {\n  name: /submit/i\n}).click();\nvar errors = queryAllByRole('alert');\n(0, _chai.expect)(errors).to.have.lengthOf(expectedNumberOfErrors);",
              "err": {},
              "uuid": "d6ad9db2-39ea-4294-9083-3ee9cd64ec89",
              "parentUUID": "67770a83-3a05-4f92-9f48-85017c36574c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "d6ad9db2-39ea-4294-9083-3ee9cd64ec89"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 90,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "20f37018-947d-4d30-85d7-d5ea2cfec70d",
          "title": "contact information 2 page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/21-4142/tests/unit/pages/contactInformation2.unit.spec.jsx",
          "file": "/src/applications/simple-forms/21-4142/tests/unit/pages/contactInformation2.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should have appropriate number of fields",
              "fullTitle": "contact information 2 page should have appropriate number of fields",
              "timedOut": false,
              "duration": 4,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps = getProps(),\n  mockStore = _getProps.mockStore;\nvar _render = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypes)).to.have.lengthOf(expectedNumberOfFields);",
              "err": {},
              "uuid": "17fc3173-18d5-4c72-aee8-27f0664aca2d",
              "parentUUID": "20f37018-947d-4d30-85d7-d5ea2cfec70d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "17fc3173-18d5-4c72-aee8-27f0664aca2d"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 4,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "a0002731-a7dd-4f87-a283-829d0dc7e8c7",
          "title": "contact information 2 page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/21-4142/tests/unit/pages/contactInformation2.unit.spec.jsx",
          "file": "/src/applications/simple-forms/21-4142/tests/unit/pages/contactInformation2.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should show the correct number of errors on submit",
              "fullTitle": "contact information 2 page should show the correct number of errors on submit",
              "timedOut": false,
              "duration": 11,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps2 = getProps(),\n  mockStore = _getProps2.mockStore;\nvar _render2 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  getByRole = _render2.getByRole,\n  queryAllByRole = _render2.queryAllByRole;\ngetByRole('button', {\n  name: /submit/i\n}).click();\nvar errors = queryAllByRole('alert');\n(0, _chai.expect)(errors).to.have.lengthOf(expectedNumberOfErrors);",
              "err": {},
              "uuid": "eeda76d3-90bb-49cf-909b-86c39f7808e4",
              "parentUUID": "a0002731-a7dd-4f87-a283-829d0dc7e8c7",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "eeda76d3-90bb-49cf-909b-86c39f7808e4"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 11,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "c3406e31-6714-483f-aaac-ea3e9853bfd0",
          "title": "contact information 2 page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/21-4142/tests/unit/pages/contactInformation2.unit.spec.jsx",
          "file": "/src/applications/simple-forms/21-4142/tests/unit/pages/contactInformation2.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should have appropriate number of web components",
              "fullTitle": "contact information 2 page should have appropriate number of web components",
              "timedOut": false,
              "duration": 4,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps3 = getProps(),\n  mockStore = _getProps3.mockStore;\nvar _render3 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render3.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypesWebComponents)).to.have.lengthOf(expectedNumberOfFields);",
              "err": {},
              "uuid": "a76541b8-bffe-4f14-8087-966b1a892f5f",
              "parentUUID": "c3406e31-6714-483f-aaac-ea3e9853bfd0",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a76541b8-bffe-4f14-8087-966b1a892f5f"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 4,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "fc769bb5-d847-4616-bfca-d0c6f42ade0f",
          "title": "contact information 2 page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/21-4142/tests/unit/pages/contactInformation2.unit.spec.jsx",
          "file": "/src/applications/simple-forms/21-4142/tests/unit/pages/contactInformation2.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should show the correct number of errors on submit for web components",
              "fullTitle": "contact information 2 page should show the correct number of errors on submit for web components",
              "timedOut": false,
              "duration": 11,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps4 = getProps(),\n  mockStore = _getProps4.mockStore;\nvar _render4 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render4.container,\n  getByRole = _render4.getByRole;\ngetByRole('button', {\n  name: /submit/i\n}).click();\nvar nodes = Array.from(container.querySelectorAll(\"\".concat(expectedFieldTypesWebComponents, \", \").concat(wrapperWebComponents)));\nvar errors = nodes.filter(function (node) {\n  return node.error;\n});\n(0, _chai.expect)(errors).to.have.lengthOf(expectedNumberOfErrors);",
              "err": {},
              "uuid": "3d6b076b-8b9f-4ebc-b9b7-01f0e45abf6d",
              "parentUUID": "fc769bb5-d847-4616-bfca-d0c6f42ade0f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "3d6b076b-8b9f-4ebc-b9b7-01f0e45abf6d"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 11,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "c5828912-0a94-4b24-bebd-80fac1ad6ec3",
          "title": "limitations page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/21-4142/tests/unit/pages/limitations.unit.spec.jsx",
          "file": "/src/applications/simple-forms/21-4142/tests/unit/pages/limitations.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should have appropriate number of fields",
              "fullTitle": "limitations page should have appropriate number of fields",
              "timedOut": false,
              "duration": 3,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps = getProps(),\n  mockStore = _getProps.mockStore;\nvar _render = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypes)).to.have.lengthOf(expectedNumberOfFields);",
              "err": {},
              "uuid": "7f19471c-c7fc-47ba-a74b-629be8875f39",
              "parentUUID": "c5828912-0a94-4b24-bebd-80fac1ad6ec3",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "7f19471c-c7fc-47ba-a74b-629be8875f39"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "7d95f277-8322-4518-87d4-860187a1c762",
          "title": "limitations page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/21-4142/tests/unit/pages/limitations.unit.spec.jsx",
          "file": "/src/applications/simple-forms/21-4142/tests/unit/pages/limitations.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should show the correct number of errors on submit",
              "fullTitle": "limitations page should show the correct number of errors on submit",
              "timedOut": false,
              "duration": 10,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps2 = getProps(),\n  mockStore = _getProps2.mockStore;\nvar _render2 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  getByRole = _render2.getByRole,\n  queryAllByRole = _render2.queryAllByRole;\ngetByRole('button', {\n  name: /submit/i\n}).click();\nvar errors = queryAllByRole('alert');\n(0, _chai.expect)(errors).to.have.lengthOf(expectedNumberOfErrors);",
              "err": {},
              "uuid": "c5b01c75-7b03-448d-b272-e3aa9b5c5903",
              "parentUUID": "7d95f277-8322-4518-87d4-860187a1c762",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "c5b01c75-7b03-448d-b272-e3aa9b5c5903"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 10,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "9832a3ce-2042-4241-a4ee-ea9074dac004",
          "title": "patient identification 1 page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/21-4142/tests/unit/pages/patientIdentification1.unit.spec.jsx",
          "file": "/src/applications/simple-forms/21-4142/tests/unit/pages/patientIdentification1.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should have appropriate number of fields",
              "fullTitle": "patient identification 1 page should have appropriate number of fields",
              "timedOut": false,
              "duration": 4,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps = getProps(),\n  mockStore = _getProps.mockStore;\nvar _render = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypes)).to.have.lengthOf(expectedNumberOfFields);",
              "err": {},
              "uuid": "1a24a22d-525b-40cf-89fe-fca602452b7c",
              "parentUUID": "9832a3ce-2042-4241-a4ee-ea9074dac004",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "1a24a22d-525b-40cf-89fe-fca602452b7c"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 4,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "cf9653e4-cfd2-450c-8d92-1183bbf2833f",
          "title": "patient identification 1 page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/21-4142/tests/unit/pages/patientIdentification1.unit.spec.jsx",
          "file": "/src/applications/simple-forms/21-4142/tests/unit/pages/patientIdentification1.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should show the correct number of errors on submit",
              "fullTitle": "patient identification 1 page should show the correct number of errors on submit",
              "timedOut": false,
              "duration": 17,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps2 = getProps(),\n  mockStore = _getProps2.mockStore;\nvar _render2 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  getByRole = _render2.getByRole,\n  queryAllByRole = _render2.queryAllByRole;\ngetByRole('button', {\n  name: /submit/i\n}).click();\nvar errors = queryAllByRole('alert');\n(0, _chai.expect)(errors).to.have.lengthOf(expectedNumberOfErrors);",
              "err": {},
              "uuid": "8ffd5f66-ab28-4db6-80bd-0dc2a682523f",
              "parentUUID": "cf9653e4-cfd2-450c-8d92-1183bbf2833f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "8ffd5f66-ab28-4db6-80bd-0dc2a682523f"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 17,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "5283590a-69eb-4138-9582-4ad5b39e8666",
          "title": "patient identification 2 page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/21-4142/tests/unit/pages/patientIdentification2.unit.spec.jsx",
          "file": "/src/applications/simple-forms/21-4142/tests/unit/pages/patientIdentification2.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should have appropriate number of fields",
              "fullTitle": "patient identification 2 page should have appropriate number of fields",
              "timedOut": false,
              "duration": 8,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps = getProps(),\n  mockStore = _getProps.mockStore;\nvar _render = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypes)).to.have.lengthOf(expectedNumberOfFields);",
              "err": {},
              "uuid": "89a1e7e6-fc83-4930-b06d-ee1bc0825047",
              "parentUUID": "5283590a-69eb-4138-9582-4ad5b39e8666",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "89a1e7e6-fc83-4930-b06d-ee1bc0825047"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 8,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "5985db3d-03db-4849-8269-ab539a8ad78e",
          "title": "patient identification 2 page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/21-4142/tests/unit/pages/patientIdentification2.unit.spec.jsx",
          "file": "/src/applications/simple-forms/21-4142/tests/unit/pages/patientIdentification2.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should show the correct number of errors on submit",
              "fullTitle": "patient identification 2 page should show the correct number of errors on submit",
              "timedOut": false,
              "duration": 25,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps2 = getProps(),\n  mockStore = _getProps2.mockStore;\nvar _render2 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  getByRole = _render2.getByRole,\n  queryAllByRole = _render2.queryAllByRole;\ngetByRole('button', {\n  name: /submit/i\n}).click();\nvar errors = queryAllByRole('alert');\n(0, _chai.expect)(errors).to.have.lengthOf(expectedNumberOfErrors);",
              "err": {},
              "uuid": "2b5279d0-2227-431d-8d7e-e96ecae8b7eb",
              "parentUUID": "5985db3d-03db-4849-8269-ab539a8ad78e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "2b5279d0-2227-431d-8d7e-e96ecae8b7eb"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 25,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "a9a73c6c-97cd-41a5-96ec-8e7a5e0496b4",
          "title": "personal information 1 page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/21-4142/tests/unit/pages/personalInformation1.unit.spec.jsx",
          "file": "/src/applications/simple-forms/21-4142/tests/unit/pages/personalInformation1.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should have appropriate number of fields",
              "fullTitle": "personal information 1 page should have appropriate number of fields",
              "timedOut": false,
              "duration": 9,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps = getProps(),\n  mockStore = _getProps.mockStore;\nvar _render = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypes)).to.have.lengthOf(expectedNumberOfFields);",
              "err": {},
              "uuid": "79b4ca5e-6674-45a5-82a0-b10d6bf7db58",
              "parentUUID": "a9a73c6c-97cd-41a5-96ec-8e7a5e0496b4",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "79b4ca5e-6674-45a5-82a0-b10d6bf7db58"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 9,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "ef3c247f-ac71-4ef4-a64e-946378f68167",
          "title": "personal information 1 page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/21-4142/tests/unit/pages/personalInformation1.unit.spec.jsx",
          "file": "/src/applications/simple-forms/21-4142/tests/unit/pages/personalInformation1.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should show the correct number of errors on submit",
              "fullTitle": "personal information 1 page should show the correct number of errors on submit",
              "timedOut": false,
              "duration": 37,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps2 = getProps(),\n  mockStore = _getProps2.mockStore;\nvar _render2 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  getByRole = _render2.getByRole,\n  queryAllByRole = _render2.queryAllByRole;\ngetByRole('button', {\n  name: /submit/i\n}).click();\nvar errors = queryAllByRole('alert');\n(0, _chai.expect)(errors).to.have.lengthOf(expectedNumberOfErrors);",
              "err": {},
              "uuid": "47f6f467-a27d-4df5-83ff-f8e82cbd6762",
              "parentUUID": "ef3c247f-ac71-4ef4-a64e-946378f68167",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "47f6f467-a27d-4df5-83ff-f8e82cbd6762"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 37,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "fb2cb96a-be48-40a8-a06e-a2c6548a77bd",
          "title": "personal information 2 page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/21-4142/tests/unit/pages/personalInformation2.unit.spec.jsx",
          "file": "/src/applications/simple-forms/21-4142/tests/unit/pages/personalInformation2.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should have appropriate number of fields",
              "fullTitle": "personal information 2 page should have appropriate number of fields",
              "timedOut": false,
              "duration": 6,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps = getProps(),\n  mockStore = _getProps.mockStore;\nvar _render = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypes)).to.have.lengthOf(expectedNumberOfFields);",
              "err": {},
              "uuid": "ac140e0b-f009-4784-a449-554a8be95774",
              "parentUUID": "fb2cb96a-be48-40a8-a06e-a2c6548a77bd",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "ac140e0b-f009-4784-a449-554a8be95774"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 6,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "0f66c073-4bba-4ba7-96ef-21fffad46b06",
          "title": "personal information 2 page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/21-4142/tests/unit/pages/personalInformation2.unit.spec.jsx",
          "file": "/src/applications/simple-forms/21-4142/tests/unit/pages/personalInformation2.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should show the correct number of errors on submit",
              "fullTitle": "personal information 2 page should show the correct number of errors on submit",
              "timedOut": false,
              "duration": 17,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps2 = getProps(),\n  mockStore = _getProps2.mockStore;\nvar _render2 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  getByRole = _render2.getByRole,\n  queryAllByRole = _render2.queryAllByRole;\ngetByRole('button', {\n  name: /submit/i\n}).click();\nvar errors = queryAllByRole('alert');\n(0, _chai.expect)(errors).to.have.lengthOf(expectedNumberOfErrors);",
              "err": {},
              "uuid": "35c1c05e-5a73-4e9b-89a6-7ee46f79e9bc",
              "parentUUID": "0f66c073-4bba-4ba7-96ef-21fffad46b06",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "35c1c05e-5a73-4e9b-89a6-7ee46f79e9bc"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 17,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "0ff4a3f4-bd21-4b2f-b391-14b4c951cdf5",
          "title": "preparer address 1 page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/21-4142/tests/unit/pages/preparerAddress1.unit.spec.jsx",
          "file": "/src/applications/simple-forms/21-4142/tests/unit/pages/preparerAddress1.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should have appropriate number of fields",
              "fullTitle": "preparer address 1 page should have appropriate number of fields",
              "timedOut": false,
              "duration": 5,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps = getProps(),\n  mockStore = _getProps.mockStore;\nvar _render = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypes)).to.have.lengthOf(expectedNumberOfFields);",
              "err": {},
              "uuid": "248bbbf4-5b82-40ee-912d-20e3e57dd7ee",
              "parentUUID": "0ff4a3f4-bd21-4b2f-b391-14b4c951cdf5",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "248bbbf4-5b82-40ee-912d-20e3e57dd7ee"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 5,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "9abbdeb0-f4ca-42d9-a90d-acd705395f69",
          "title": "preparer address 1 page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/21-4142/tests/unit/pages/preparerAddress1.unit.spec.jsx",
          "file": "/src/applications/simple-forms/21-4142/tests/unit/pages/preparerAddress1.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should show the correct number of errors on submit",
              "fullTitle": "preparer address 1 page should show the correct number of errors on submit",
              "timedOut": false,
              "duration": 17,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps2 = getProps(),\n  mockStore = _getProps2.mockStore;\nvar _render2 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  getByRole = _render2.getByRole,\n  queryAllByRole = _render2.queryAllByRole;\ngetByRole('button', {\n  name: /submit/i\n}).click();\nvar errors = queryAllByRole('alert');\n(0, _chai.expect)(errors).to.have.lengthOf(expectedNumberOfErrors);",
              "err": {},
              "uuid": "cc8c803a-196c-41f8-9859-a9c3cf078656",
              "parentUUID": "9abbdeb0-f4ca-42d9-a90d-acd705395f69",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "cc8c803a-196c-41f8-9859-a9c3cf078656"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 17,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "e3560bb8-3457-4a5a-a367-51ea2d37b7ae",
          "title": "preparer address 2 page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/21-4142/tests/unit/pages/preparerAddress2.unit.spec.jsx",
          "file": "/src/applications/simple-forms/21-4142/tests/unit/pages/preparerAddress2.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should have appropriate number of fields",
              "fullTitle": "preparer address 2 page should have appropriate number of fields",
              "timedOut": false,
              "duration": 28,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps = getProps(),\n  mockStore = _getProps.mockStore;\nvar _render = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypes)).to.have.lengthOf(expectedNumberOfFields);",
              "err": {},
              "uuid": "48b3c61a-19c9-4f2b-9024-cad0ad57a572",
              "parentUUID": "e3560bb8-3457-4a5a-a367-51ea2d37b7ae",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "48b3c61a-19c9-4f2b-9024-cad0ad57a572"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 28,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "55c66855-ce57-4c42-ba73-7050577790ff",
          "title": "preparer address 2 page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/21-4142/tests/unit/pages/preparerAddress2.unit.spec.jsx",
          "file": "/src/applications/simple-forms/21-4142/tests/unit/pages/preparerAddress2.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should show the correct number of errors on submit",
              "fullTitle": "preparer address 2 page should show the correct number of errors on submit",
              "timedOut": false,
              "duration": 109,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps2 = getProps(),\n  mockStore = _getProps2.mockStore;\nvar _render2 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  getByRole = _render2.getByRole,\n  queryAllByRole = _render2.queryAllByRole;\ngetByRole('button', {\n  name: /submit/i\n}).click();\nvar errors = queryAllByRole('alert');\n(0, _chai.expect)(errors).to.have.lengthOf(expectedNumberOfErrors);",
              "err": {},
              "uuid": "db8849b2-5488-46f8-bc81-9c59e70c28ce",
              "parentUUID": "55c66855-ce57-4c42-ba73-7050577790ff",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "db8849b2-5488-46f8-bc81-9c59e70c28ce"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 109,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "3fb19687-7640-482d-814d-29d1f738ff43",
          "title": "preparer identification page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/21-4142/tests/unit/pages/preparerIdentification.unit.spec.jsx",
          "file": "/src/applications/simple-forms/21-4142/tests/unit/pages/preparerIdentification.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should have appropriate number of fields",
              "fullTitle": "preparer identification page should have appropriate number of fields",
              "timedOut": false,
              "duration": 6,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps = getProps(),\n  mockStore = _getProps.mockStore;\nvar _render = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypes)).to.have.lengthOf(expectedNumberOfFields);",
              "err": {},
              "uuid": "4f2b199d-c073-43e3-a576-3c9554383197",
              "parentUUID": "3fb19687-7640-482d-814d-29d1f738ff43",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "4f2b199d-c073-43e3-a576-3c9554383197"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 6,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "b6a3cb19-6499-4d68-84e0-62b5d54ad568",
          "title": "preparer identification page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/21-4142/tests/unit/pages/preparerIdentification.unit.spec.jsx",
          "file": "/src/applications/simple-forms/21-4142/tests/unit/pages/preparerIdentification.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should show the correct number of errors on submit",
              "fullTitle": "preparer identification page should show the correct number of errors on submit",
              "timedOut": false,
              "duration": 19,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps2 = getProps(),\n  mockStore = _getProps2.mockStore;\nvar _render2 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  getByRole = _render2.getByRole,\n  queryAllByRole = _render2.queryAllByRole;\ngetByRole('button', {\n  name: /submit/i\n}).click();\nvar errors = queryAllByRole('alert');\n(0, _chai.expect)(errors).to.have.lengthOf(expectedNumberOfErrors);",
              "err": {},
              "uuid": "ba6f9648-0d44-427b-8185-efc468962e9d",
              "parentUUID": "b6a3cb19-6499-4d68-84e0-62b5d54ad568",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "ba6f9648-0d44-427b-8185-efc468962e9d"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 19,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "421c5b79-cafe-465a-9fe0-3f99e4e297f5",
          "title": "preparer personal information - direct relative page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/21-4142/tests/unit/pages/preparerPersonalInformation.unit.spec.jsx",
          "file": "/src/applications/simple-forms/21-4142/tests/unit/pages/preparerPersonalInformation.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should have appropriate number of fields",
              "fullTitle": "preparer personal information - direct relative page should have appropriate number of fields",
              "timedOut": false,
              "duration": 6,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps = getProps(),\n  mockStore = _getProps.mockStore;\nvar _render = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypes)).to.have.lengthOf(expectedNumberOfFields);",
              "err": {},
              "uuid": "f0442ee1-0f0f-44ad-aa5e-e772d2d81ffb",
              "parentUUID": "421c5b79-cafe-465a-9fe0-3f99e4e297f5",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f0442ee1-0f0f-44ad-aa5e-e772d2d81ffb"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 6,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "e18589f8-bf36-415b-a3ac-198537dd2562",
          "title": "preparer personal information - third party page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/21-4142/tests/unit/pages/preparerPersonalInformation.unit.spec.jsx",
          "file": "/src/applications/simple-forms/21-4142/tests/unit/pages/preparerPersonalInformation.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should have appropriate number of fields",
              "fullTitle": "preparer personal information - third party page should have appropriate number of fields",
              "timedOut": false,
              "duration": 8,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps = getProps(),\n  mockStore = _getProps.mockStore;\nvar _render = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypes)).to.have.lengthOf(expectedNumberOfFields);",
              "err": {},
              "uuid": "0474dd2b-ef37-467b-8afc-609df58ea47c",
              "parentUUID": "e18589f8-bf36-415b-a3ac-198537dd2562",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "0474dd2b-ef37-467b-8afc-609df58ea47c"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 8,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "fccf4e4b-3ce9-415d-91d6-c1dab209f27f",
          "title": "preparer personal information - direct relative page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/21-4142/tests/unit/pages/preparerPersonalInformation.unit.spec.jsx",
          "file": "/src/applications/simple-forms/21-4142/tests/unit/pages/preparerPersonalInformation.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should show the correct number of errors on submit",
              "fullTitle": "preparer personal information - direct relative page should show the correct number of errors on submit",
              "timedOut": false,
              "duration": 22,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps2 = getProps(),\n  mockStore = _getProps2.mockStore;\nvar _render2 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  getByRole = _render2.getByRole,\n  queryAllByRole = _render2.queryAllByRole;\ngetByRole('button', {\n  name: /submit/i\n}).click();\nvar errors = queryAllByRole('alert');\n(0, _chai.expect)(errors).to.have.lengthOf(expectedNumberOfErrors);",
              "err": {},
              "uuid": "277bbc79-0e88-418a-82d3-a8476568aca2",
              "parentUUID": "fccf4e4b-3ce9-415d-91d6-c1dab209f27f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "277bbc79-0e88-418a-82d3-a8476568aca2"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 22,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "7fc98226-6cab-4471-b2a5-92b5d00ca6d0",
          "title": "preparer personal information - third party page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/21-4142/tests/unit/pages/preparerPersonalInformation.unit.spec.jsx",
          "file": "/src/applications/simple-forms/21-4142/tests/unit/pages/preparerPersonalInformation.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should show the correct number of errors on submit",
              "fullTitle": "preparer personal information - third party page should show the correct number of errors on submit",
              "timedOut": false,
              "duration": 29,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps2 = getProps(),\n  mockStore = _getProps2.mockStore;\nvar _render2 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  getByRole = _render2.getByRole,\n  queryAllByRole = _render2.queryAllByRole;\ngetByRole('button', {\n  name: /submit/i\n}).click();\nvar errors = queryAllByRole('alert');\n(0, _chai.expect)(errors).to.have.lengthOf(expectedNumberOfErrors);",
              "err": {},
              "uuid": "a25f3512-8726-4a98-9822-983afea9c034",
              "parentUUID": "7fc98226-6cab-4471-b2a5-92b5d00ca6d0",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a25f3512-8726-4a98-9822-983afea9c034"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 29,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "5c1cebd3-0fac-438b-b8c3-bed12082d348",
          "title": "records requested page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/21-4142/tests/unit/pages/recordsRequested.unit.spec.jsx",
          "file": "/src/applications/simple-forms/21-4142/tests/unit/pages/recordsRequested.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should have appropriate number of fields",
              "fullTitle": "records requested page should have appropriate number of fields",
              "timedOut": false,
              "duration": 35,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps = getProps(),\n  mockStore = _getProps.mockStore;\nvar _render = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypes)).to.have.lengthOf(expectedNumberOfFields);",
              "err": {},
              "uuid": "d4985897-42c4-4439-9e60-aefec861c2a3",
              "parentUUID": "5c1cebd3-0fac-438b-b8c3-bed12082d348",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "d4985897-42c4-4439-9e60-aefec861c2a3"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 35,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "225c3417-c7f0-4b35-99fc-a0670df3965c",
          "title": "records requested page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/21-4142/tests/unit/pages/recordsRequested.unit.spec.jsx",
          "file": "/src/applications/simple-forms/21-4142/tests/unit/pages/recordsRequested.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should show the correct number of errors on submit",
              "fullTitle": "records requested page should show the correct number of errors on submit",
              "timedOut": false,
              "duration": 148,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps2 = getProps(),\n  mockStore = _getProps2.mockStore;\nvar _render2 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  getByRole = _render2.getByRole,\n  queryAllByRole = _render2.queryAllByRole;\ngetByRole('button', {\n  name: /submit/i\n}).click();\nvar errors = queryAllByRole('alert');\n(0, _chai.expect)(errors).to.have.lengthOf(expectedNumberOfErrors);",
              "err": {},
              "uuid": "8822960f-f1bd-4deb-9489-7fd614ac3b1b",
              "parentUUID": "225c3417-c7f0-4b35-99fc-a0670df3965c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "8822960f-f1bd-4deb-9489-7fd614ac3b1b"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 148,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "29bf0887-781e-41ff-9736-86d956ebdbca",
          "title": "ConfirmationPage",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/21P-0847/tests/containers/ConfirmationPage.unit.spec.jsx",
          "file": "/src/applications/simple-forms/21P-0847/tests/containers/ConfirmationPage.unit.spec.jsx",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"ConfirmationPage\"",
              "fullTitle": "ConfirmationPage \"before each\" hook in \"ConfirmationPage\"",
              "timedOut": false,
              "duration": 11,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "store = mockStore(initialState);\nwrapper = (0, _enzyme.mount)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n  store: store\n}, /*#__PURE__*/_react.default.createElement(_ConfirmationPage.default, {\n  route: {\n    formConfig: _form.default\n  }\n})));",
              "err": {},
              "uuid": "103cc404-8800-4bfe-a043-001df439fa57",
              "parentUUID": "29bf0887-781e-41ff-9736-86d956ebdbca",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after each\" hook in \"ConfirmationPage\"",
              "fullTitle": "ConfirmationPage \"after each\" hook in \"ConfirmationPage\"",
              "timedOut": false,
              "duration": 1,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "if (wrapper) {\n  wrapper.unmount();\n}\n(0, _react2.cleanup)();",
              "err": {},
              "uuid": "d0f0dd74-142e-4f92-93ec-bfe4933af36d",
              "parentUUID": "29bf0887-781e-41ff-9736-86d956ebdbca",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "passes the correct props to ConfirmationPageView",
              "fullTitle": "ConfirmationPage passes the correct props to ConfirmationPageView",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var confirmationViewProps = wrapper.find('ConfirmationView').props();\n(0, _chai.expect)(confirmationViewProps.submitDate).to.equal('2022-01-01T00:00:00Z');\n(0, _chai.expect)(confirmationViewProps.confirmationNumber).to.equal('1234567890');",
              "err": {},
              "uuid": "b15d2a48-c447-494c-93fa-9ce86f7059d5",
              "parentUUID": "29bf0887-781e-41ff-9736-86d956ebdbca",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should select form from state when state.form is defined",
              "fullTitle": "ConfirmationPage should select form from state when state.form is defined",
              "timedOut": false,
              "duration": 15,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var submitDate = new Date();\nvar mockInitialState = {\n  form: _objectSpread(_objectSpread({}, (0, _helpers.createInitialState)(_form.default)), {}, {\n    submission: {\n      timestamp: submitDate,\n      response: {\n        confirmationNumber: '1234'\n      }\n    },\n    data: _maximalTest.default\n  })\n};\nvar mockDefinedState = (0, _redux.createStore)(function () {\n  return mockInitialState;\n});\nvar definedWrapper = (0, _enzyme.mount)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n  store: mockDefinedState\n}, /*#__PURE__*/_react.default.createElement(_ConfirmationPage.default, {\n  route: {\n    formConfig: _form.default\n  }\n})));\n(0, _chai.expect)(definedWrapper.text()).to.include((0, _dateFns.format)(submitDate, 'MMMM d, yyyy'));\n(0, _chai.expect)(definedWrapper.text()).to.include('1234');\ndefinedWrapper.unmount();",
              "err": {},
              "uuid": "feb33dd8-814c-448e-b544-024d3dfb68f1",
              "parentUUID": "29bf0887-781e-41ff-9736-86d956ebdbca",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should throw error when state.form is undefined",
              "fullTitle": "ConfirmationPage should throw error when state.form is undefined",
              "timedOut": false,
              "duration": 5,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var mockEmptyState = {};\nvar mockEmptyStore = (0, _redux.createStore)(function () {\n  return mockEmptyState;\n});\nvar errorWrapper;\n(0, _chai.expect)(function () {\n  errorWrapper = (0, _enzyme.mount)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockEmptyStore\n  }, /*#__PURE__*/_react.default.createElement(_ConfirmationPage.default, {\n    route: {\n      formConfig: _form.default\n    }\n  })));\n}).to.throw();\nif (errorWrapper) {\n  errorWrapper.unmount();\n}",
              "err": {},
              "uuid": "dba81696-8ee6-42a5-bdc8-2d0bb1ad478e",
              "parentUUID": "29bf0887-781e-41ff-9736-86d956ebdbca",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "b15d2a48-c447-494c-93fa-9ce86f7059d5",
            "feb33dd8-814c-448e-b544-024d3dfb68f1",
            "dba81696-8ee6-42a5-bdc8-2d0bb1ad478e"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 22,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "07ca686a-575a-4d0c-8152-065f695ed4a1",
          "title": "IntroductionPage",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/21P-0847/tests/containers/IntroductionPage.unit.spec.jsx",
          "file": "/src/applications/simple-forms/21P-0847/tests/containers/IntroductionPage.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should render",
              "fullTitle": "IntroductionPage should render",
              "timedOut": false,
              "duration": 4,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _render = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_IntroductionPage.default, props))),\n  container = _render.container;\n(0, _chai.expect)(container).to.exist;",
              "err": {},
              "uuid": "8a29564c-1f58-46c3-adb4-18713b9ef00c",
              "parentUUID": "07ca686a-575a-4d0c-8152-065f695ed4a1",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "8a29564c-1f58-46c3-adb4-18713b9ef00c"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 4,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "283adc28-2da5-4d4e-838f-9b7313105b1a",
          "title": "additional information page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/21P-0847/tests/pages/additionalInformation.unit.spec.jsx",
          "file": "/src/applications/simple-forms/21P-0847/tests/pages/additionalInformation.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should have appropriate number of web components",
              "fullTitle": "additional information page should have appropriate number of web components",
              "timedOut": false,
              "duration": 3,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps3 = getProps(),\n  mockStore = _getProps3.mockStore;\nvar _render3 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render3.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypesWebComponents)).to.have.lengthOf(expectedNumberOfFields);",
              "err": {},
              "uuid": "3f02fdf3-a8c4-4ff6-85c9-661b3b6392d3",
              "parentUUID": "283adc28-2da5-4d4e-838f-9b7313105b1a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "3f02fdf3-a8c4-4ff6-85c9-661b3b6392d3"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "5c006bdd-f4e4-4c38-9977-9bf9fe5002dd",
          "title": "additional information page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/21P-0847/tests/pages/additionalInformation.unit.spec.jsx",
          "file": "/src/applications/simple-forms/21P-0847/tests/pages/additionalInformation.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should show the correct number of errors on submit for web components",
              "fullTitle": "additional information page should show the correct number of errors on submit for web components",
              "timedOut": false,
              "duration": 10,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps4 = getProps(),\n  mockStore = _getProps4.mockStore;\nvar _render4 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render4.container,\n  getByRole = _render4.getByRole;\ngetByRole('button', {\n  name: /submit/i\n}).click();\nvar nodes = Array.from(container.querySelectorAll(\"\".concat(expectedFieldTypesWebComponents, \", \").concat(wrapperWebComponents)));\nvar errors = nodes.filter(function (node) {\n  return node.error;\n});\n(0, _chai.expect)(errors).to.have.lengthOf(expectedNumberOfErrors);",
              "err": {},
              "uuid": "75695e94-44c5-45c1-9757-f805b1a643db",
              "parentUUID": "5c006bdd-f4e4-4c38-9977-9bf9fe5002dd",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "75695e94-44c5-45c1-9757-f805b1a643db"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 10,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "a6713ecd-1dd1-4215-80b0-4d6f635f888d",
          "title": "deceased claimant personal information page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/21P-0847/tests/pages/deceasedClaimantPersonalInformation.unit.spec.jsx",
          "file": "/src/applications/simple-forms/21P-0847/tests/pages/deceasedClaimantPersonalInformation.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should have appropriate number of web components",
              "fullTitle": "deceased claimant personal information page should have appropriate number of web components",
              "timedOut": false,
              "duration": 5,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps3 = getProps(),\n  mockStore = _getProps3.mockStore;\nvar _render3 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render3.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypesWebComponents)).to.have.lengthOf(expectedNumberOfFields);",
              "err": {},
              "uuid": "fc41c983-1961-46ca-847a-336f8e936822",
              "parentUUID": "a6713ecd-1dd1-4215-80b0-4d6f635f888d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "fc41c983-1961-46ca-847a-336f8e936822"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 5,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "7eea0e06-126f-40fc-b272-55ea26912844",
          "title": "deceased claimant personal information page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/21P-0847/tests/pages/deceasedClaimantPersonalInformation.unit.spec.jsx",
          "file": "/src/applications/simple-forms/21P-0847/tests/pages/deceasedClaimantPersonalInformation.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should show the correct number of errors on submit for web components",
              "fullTitle": "deceased claimant personal information page should show the correct number of errors on submit for web components",
              "timedOut": false,
              "duration": 15,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps4 = getProps(),\n  mockStore = _getProps4.mockStore;\nvar _render4 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render4.container,\n  getByRole = _render4.getByRole;\ngetByRole('button', {\n  name: /submit/i\n}).click();\nvar nodes = Array.from(container.querySelectorAll(\"\".concat(expectedFieldTypesWebComponents, \", \").concat(wrapperWebComponents)));\nvar errors = nodes.filter(function (node) {\n  return node.error;\n});\n(0, _chai.expect)(errors).to.have.lengthOf(expectedNumberOfErrors);",
              "err": {},
              "uuid": "ed5271a1-0755-4b97-856b-cecf3b97d14b",
              "parentUUID": "7eea0e06-126f-40fc-b272-55ea26912844",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "ed5271a1-0755-4b97-856b-cecf3b97d14b"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 15,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "4fa39e5a-e1bc-4a34-8971-5195da561fca",
          "title": "preparer address page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/21P-0847/tests/pages/preparerAddress.unit.spec.jsx",
          "file": "/src/applications/simple-forms/21P-0847/tests/pages/preparerAddress.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should have appropriate number of web components",
              "fullTitle": "preparer address page should have appropriate number of web components",
              "timedOut": false,
              "duration": 18,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps3 = getProps(),\n  mockStore = _getProps3.mockStore;\nvar _render3 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render3.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypesWebComponents)).to.have.lengthOf(expectedNumberOfFields);",
              "err": {},
              "uuid": "bc18850d-f445-49a2-b9be-997c2dc5bfff",
              "parentUUID": "4fa39e5a-e1bc-4a34-8971-5195da561fca",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "bc18850d-f445-49a2-b9be-997c2dc5bfff"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 18,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "4015577b-05a4-4b0b-81f8-4050a4074754",
          "title": "preparer address page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/21P-0847/tests/pages/preparerAddress.unit.spec.jsx",
          "file": "/src/applications/simple-forms/21P-0847/tests/pages/preparerAddress.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should show the correct number of errors on submit for web components",
              "fullTitle": "preparer address page should show the correct number of errors on submit for web components",
              "timedOut": false,
              "duration": 63,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps4 = getProps(),\n  mockStore = _getProps4.mockStore;\nvar _render4 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render4.container,\n  getByRole = _render4.getByRole;\ngetByRole('button', {\n  name: /submit/i\n}).click();\nvar nodes = Array.from(container.querySelectorAll(\"\".concat(expectedFieldTypesWebComponents, \", \").concat(wrapperWebComponents)));\nvar errors = nodes.filter(function (node) {\n  return node.error;\n});\n(0, _chai.expect)(errors).to.have.lengthOf(expectedNumberOfErrors);",
              "err": {},
              "uuid": "a6b74dff-c27c-40aa-9a90-8a34e9ff849c",
              "parentUUID": "4015577b-05a4-4b0b-81f8-4050a4074754",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a6b74dff-c27c-40aa-9a90-8a34e9ff849c"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 63,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "b52a1193-1753-4af3-82d3-3c161d7342ae",
          "title": "preparer contact information page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/21P-0847/tests/pages/preparerContactInformation.unit.spec.jsx",
          "file": "/src/applications/simple-forms/21P-0847/tests/pages/preparerContactInformation.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should have appropriate number of web components",
              "fullTitle": "preparer contact information page should have appropriate number of web components",
              "timedOut": false,
              "duration": 4,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps3 = getProps(),\n  mockStore = _getProps3.mockStore;\nvar _render3 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render3.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypesWebComponents)).to.have.lengthOf(expectedNumberOfFields);",
              "err": {},
              "uuid": "ac901e15-1f89-472e-9202-fde7431c5e29",
              "parentUUID": "b52a1193-1753-4af3-82d3-3c161d7342ae",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "ac901e15-1f89-472e-9202-fde7431c5e29"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 4,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "c6e5a06f-0eeb-4443-9b91-71120ec6e2e0",
          "title": "preparer contact information page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/21P-0847/tests/pages/preparerContactInformation.unit.spec.jsx",
          "file": "/src/applications/simple-forms/21P-0847/tests/pages/preparerContactInformation.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should show the correct number of errors on submit for web components",
              "fullTitle": "preparer contact information page should show the correct number of errors on submit for web components",
              "timedOut": false,
              "duration": 13,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps4 = getProps(),\n  mockStore = _getProps4.mockStore;\nvar _render4 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render4.container,\n  getByRole = _render4.getByRole;\ngetByRole('button', {\n  name: /submit/i\n}).click();\nvar nodes = Array.from(container.querySelectorAll(\"\".concat(expectedFieldTypesWebComponents, \", \").concat(wrapperWebComponents)));\nvar errors = nodes.filter(function (node) {\n  return node.error;\n});\n(0, _chai.expect)(errors).to.have.lengthOf(expectedNumberOfErrors);",
              "err": {},
              "uuid": "758e31ce-6f4b-49ca-b337-6300496213b1",
              "parentUUID": "c6e5a06f-0eeb-4443-9b91-71120ec6e2e0",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "758e31ce-6f4b-49ca-b337-6300496213b1"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 13,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "cb70b848-1756-4ec6-bdab-46545816801e",
          "title": "preparer identification information page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/21P-0847/tests/pages/preparerIdentificationInformation.unit.spec.jsx",
          "file": "/src/applications/simple-forms/21P-0847/tests/pages/preparerIdentificationInformation.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should have appropriate number of web components",
              "fullTitle": "preparer identification information page should have appropriate number of web components",
              "timedOut": false,
              "duration": 3,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps3 = getProps(),\n  mockStore = _getProps3.mockStore;\nvar _render3 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render3.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypesWebComponents)).to.have.lengthOf(expectedNumberOfFields);",
              "err": {},
              "uuid": "5fcfb1f0-046d-46e4-900b-ccde572afceb",
              "parentUUID": "cb70b848-1756-4ec6-bdab-46545816801e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "5fcfb1f0-046d-46e4-900b-ccde572afceb"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "ca1072f7-233f-4e75-8df4-b70bedc90b25",
          "title": "preparer identification information page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/21P-0847/tests/pages/preparerIdentificationInformation.unit.spec.jsx",
          "file": "/src/applications/simple-forms/21P-0847/tests/pages/preparerIdentificationInformation.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should show the correct number of errors on submit for web components",
              "fullTitle": "preparer identification information page should show the correct number of errors on submit for web components",
              "timedOut": false,
              "duration": 9,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps4 = getProps(),\n  mockStore = _getProps4.mockStore;\nvar _render4 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render4.container,\n  getByRole = _render4.getByRole;\ngetByRole('button', {\n  name: /submit/i\n}).click();\nvar nodes = Array.from(container.querySelectorAll(\"\".concat(expectedFieldTypesWebComponents, \", \").concat(wrapperWebComponents)));\nvar errors = nodes.filter(function (node) {\n  return node.error;\n});\n(0, _chai.expect)(errors).to.have.lengthOf(expectedNumberOfErrors);",
              "err": {},
              "uuid": "d4a02260-5fbd-4d3f-bc95-8d2f4d3893d5",
              "parentUUID": "ca1072f7-233f-4e75-8df4-b70bedc90b25",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "d4a02260-5fbd-4d3f-bc95-8d2f4d3893d5"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 9,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "17567bae-6cd4-4094-b526-8be1bea63888",
          "title": "preparer personal information page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/21P-0847/tests/pages/preparerPersonalInformation.unit.spec.jsx",
          "file": "/src/applications/simple-forms/21P-0847/tests/pages/preparerPersonalInformation.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should have appropriate number of web components",
              "fullTitle": "preparer personal information page should have appropriate number of web components",
              "timedOut": false,
              "duration": 5,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps3 = getProps(),\n  mockStore = _getProps3.mockStore;\nvar _render3 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render3.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypesWebComponents)).to.have.lengthOf(expectedNumberOfFields);",
              "err": {},
              "uuid": "adf9bf8e-6f19-4c2d-9e83-6eb25eaf2d22",
              "parentUUID": "17567bae-6cd4-4094-b526-8be1bea63888",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "adf9bf8e-6f19-4c2d-9e83-6eb25eaf2d22"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 5,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "64264b38-b001-44c3-840e-c10ac63348ca",
          "title": "preparer personal information page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/21P-0847/tests/pages/preparerPersonalInformation.unit.spec.jsx",
          "file": "/src/applications/simple-forms/21P-0847/tests/pages/preparerPersonalInformation.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should show the correct number of errors on submit for web components",
              "fullTitle": "preparer personal information page should show the correct number of errors on submit for web components",
              "timedOut": false,
              "duration": 12,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps4 = getProps(),\n  mockStore = _getProps4.mockStore;\nvar _render4 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render4.container,\n  getByRole = _render4.getByRole;\ngetByRole('button', {\n  name: /submit/i\n}).click();\nvar nodes = Array.from(container.querySelectorAll(\"\".concat(expectedFieldTypesWebComponents, \", \").concat(wrapperWebComponents)));\nvar errors = nodes.filter(function (node) {\n  return node.error;\n});\n(0, _chai.expect)(errors).to.have.lengthOf(expectedNumberOfErrors);",
              "err": {},
              "uuid": "6cacf641-7c50-43ab-9d3e-ad5f6762775c",
              "parentUUID": "64264b38-b001-44c3-840e-c10ac63348ca",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "6cacf641-7c50-43ab-9d3e-ad5f6762775c"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 12,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "95e09584-f133-46e4-956d-705fd570f1a1",
          "title": "relationship to deceased claimant page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/21P-0847/tests/pages/relationshipToDeceasedClaimant.unit.spec.jsx",
          "file": "/src/applications/simple-forms/21P-0847/tests/pages/relationshipToDeceasedClaimant.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should have appropriate number of web components",
              "fullTitle": "relationship to deceased claimant page should have appropriate number of web components",
              "timedOut": false,
              "duration": 4,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps3 = getProps(),\n  mockStore = _getProps3.mockStore;\nvar _render3 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render3.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypesWebComponents)).to.have.lengthOf(expectedNumberOfFields);",
              "err": {},
              "uuid": "79da3f7e-3f8a-4681-86a0-bf8a9d6c1181",
              "parentUUID": "95e09584-f133-46e4-956d-705fd570f1a1",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "79da3f7e-3f8a-4681-86a0-bf8a9d6c1181"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 4,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "a00b47a3-17f6-47ca-b1be-d74a86d1afde",
          "title": "relationship to deceased claimant page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/21P-0847/tests/pages/relationshipToDeceasedClaimant.unit.spec.jsx",
          "file": "/src/applications/simple-forms/21P-0847/tests/pages/relationshipToDeceasedClaimant.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should show the correct number of errors on submit for web components",
              "fullTitle": "relationship to deceased claimant page should show the correct number of errors on submit for web components",
              "timedOut": false,
              "duration": 11,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps4 = getProps(),\n  mockStore = _getProps4.mockStore;\nvar _render4 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render4.container,\n  getByRole = _render4.getByRole;\ngetByRole('button', {\n  name: /submit/i\n}).click();\nvar nodes = Array.from(container.querySelectorAll(\"\".concat(expectedFieldTypesWebComponents, \", \").concat(wrapperWebComponents)));\nvar errors = nodes.filter(function (node) {\n  return node.error;\n});\n(0, _chai.expect)(errors).to.have.lengthOf(expectedNumberOfErrors);",
              "err": {},
              "uuid": "880f2d23-ba17-4502-ad53-16cb5b27fb3a",
              "parentUUID": "a00b47a3-17f6-47ca-b1be-d74a86d1afde",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "880f2d23-ba17-4502-ad53-16cb5b27fb3a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 11,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "65cc7449-25d4-476c-84e4-1f9a2501b46d",
          "title": "veteran identification information page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/21P-0847/tests/pages/veteranIdentificationInformation.unit.spec.jsx",
          "file": "/src/applications/simple-forms/21P-0847/tests/pages/veteranIdentificationInformation.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should have appropriate number of web components",
              "fullTitle": "veteran identification information page should have appropriate number of web components",
              "timedOut": false,
              "duration": 4,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps3 = getProps(),\n  mockStore = _getProps3.mockStore;\nvar _render3 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render3.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypesWebComponents)).to.have.lengthOf(expectedNumberOfFields);",
              "err": {},
              "uuid": "4592fc3d-e058-4a9b-8434-4001f672967d",
              "parentUUID": "65cc7449-25d4-476c-84e4-1f9a2501b46d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "4592fc3d-e058-4a9b-8434-4001f672967d"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 4,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "9c9707ce-8353-43d0-89f4-a9969ce9a61f",
          "title": "veteran identification information page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/21P-0847/tests/pages/veteranIdentificationInformation.unit.spec.jsx",
          "file": "/src/applications/simple-forms/21P-0847/tests/pages/veteranIdentificationInformation.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should show the correct number of errors on submit for web components",
              "fullTitle": "veteran identification information page should show the correct number of errors on submit for web components",
              "timedOut": false,
              "duration": 12,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps4 = getProps(),\n  mockStore = _getProps4.mockStore;\nvar _render4 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render4.container,\n  getByRole = _render4.getByRole;\ngetByRole('button', {\n  name: /submit/i\n}).click();\nvar nodes = Array.from(container.querySelectorAll(\"\".concat(expectedFieldTypesWebComponents, \", \").concat(wrapperWebComponents)));\nvar errors = nodes.filter(function (node) {\n  return node.error;\n});\n(0, _chai.expect)(errors).to.have.lengthOf(expectedNumberOfErrors);",
              "err": {},
              "uuid": "e1fcd25a-6832-4e82-b4d1-4af255b763c9",
              "parentUUID": "9c9707ce-8353-43d0-89f4-a9969ce9a61f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "e1fcd25a-6832-4e82-b4d1-4af255b763c9"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 12,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "c5ff52a2-6df5-4e0c-a070-cd7159efb145",
          "title": "transformForSubmit",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/26-4555/tests/config/submit-transformer.unit.spec.js",
          "file": "/src/applications/simple-forms/26-4555/tests/config/submit-transformer.unit.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should transform json correctly",
              "fullTitle": "transformForSubmit should transform json correctly",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var transformedResult = JSON.parse((0, _submitTransformer.default)(_form.default, _maximalTest.default));\n(0, _chai.expect)(transformedResult).to.deep.equal(_maximalTest2.default);",
              "err": {},
              "uuid": "c7edc8e4-90fb-42fc-8f83-ad8f86e4b2d0",
              "parentUUID": "c5ff52a2-6df5-4e0c-a070-cd7159efb145",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "c7edc8e4-90fb-42fc-8f83-ad8f86e4b2d0"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "d7c7277e-9fd1-43d8-8b9b-77a6a89f9446",
          "title": "ConfirmationPage",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/26-4555/tests/containers/ConfirmationPage.unit.spec.jsx",
          "file": "/src/applications/simple-forms/26-4555/tests/containers/ConfirmationPage.unit.spec.jsx",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"ConfirmationPage\"",
              "fullTitle": "ConfirmationPage \"before each\" hook in \"ConfirmationPage\"",
              "timedOut": false,
              "duration": 3,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "store = mockStore(initialState);\nwrapper = (0, _enzyme.mount)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n  store: store\n}, /*#__PURE__*/_react.default.createElement(_ConfirmationPage.default, {\n  route: {\n    formConfig: _form.default\n  }\n})));",
              "err": {},
              "uuid": "dc52d992-0e61-40c7-be1e-6cee2ebb02bd",
              "parentUUID": "d7c7277e-9fd1-43d8-8b9b-77a6a89f9446",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after each\" hook in \"ConfirmationPage\"",
              "fullTitle": "ConfirmationPage \"after each\" hook in \"ConfirmationPage\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "if (wrapper) {\n  wrapper.unmount();\n}\n(0, _react2.cleanup)();",
              "err": {},
              "uuid": "faca1f6f-d37f-43d2-82c3-a0cb216af779",
              "parentUUID": "d7c7277e-9fd1-43d8-8b9b-77a6a89f9446",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "passes the correct props to ConfirmationPageView",
              "fullTitle": "ConfirmationPage passes the correct props to ConfirmationPageView",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var confirmationViewProps = wrapper.find('ConfirmationView').props();\n(0, _chai.expect)(confirmationViewProps.submitDate).to.equal('2022-01-01T00:00:00Z');\n(0, _chai.expect)(confirmationViewProps.confirmationNumber).to.equal('1234567890');",
              "err": {},
              "uuid": "b965babe-1e05-4839-a750-f5262f85caf3",
              "parentUUID": "d7c7277e-9fd1-43d8-8b9b-77a6a89f9446",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should select form from state when state.form is defined",
              "fullTitle": "ConfirmationPage should select form from state when state.form is defined",
              "timedOut": false,
              "duration": 7,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var submitDate = new Date();\nvar mockInitialState = {\n  form: _objectSpread(_objectSpread({}, (0, _helpers.createInitialState)(_form.default)), {}, {\n    testData: _maximalTest.default,\n    submission: {\n      timestamp: submitDate,\n      response: {\n        referenceNumber: '1234'\n      }\n    }\n  })\n};\nvar mockDefinedState = (0, _redux.createStore)(function () {\n  return mockInitialState;\n});\nvar definedWrapper = (0, _enzyme.mount)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n  store: mockDefinedState\n}, /*#__PURE__*/_react.default.createElement(_ConfirmationPage.default, {\n  route: {\n    formConfig: _form.default\n  }\n})));\n(0, _chai.expect)(definedWrapper.text()).to.include((0, _dateFns.format)(submitDate, 'MMMM d, yyyy'));\n(0, _chai.expect)(definedWrapper.text()).to.include('1234');\ndefinedWrapper.unmount();",
              "err": {},
              "uuid": "ca318891-5e4f-42c7-8dd3-fb5663723b2f",
              "parentUUID": "d7c7277e-9fd1-43d8-8b9b-77a6a89f9446",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should throw error when state.form is undefined",
              "fullTitle": "ConfirmationPage should throw error when state.form is undefined",
              "timedOut": false,
              "duration": 14,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var mockEmptyState = {};\nvar mockEmptyStore = (0, _redux.createStore)(function () {\n  return mockEmptyState;\n});\nvar errorWrapper;\n(0, _chai.expect)(function () {\n  errorWrapper = (0, _enzyme.mount)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockEmptyStore\n  }, /*#__PURE__*/_react.default.createElement(_ConfirmationPage.default, {\n    route: {\n      formConfig: _form.default\n    }\n  })));\n}).to.throw();\nif (errorWrapper) {\n  errorWrapper.unmount();\n}",
              "err": {},
              "uuid": "e60b3fb0-9a42-4534-9a10-6c89bcc0997c",
              "parentUUID": "d7c7277e-9fd1-43d8-8b9b-77a6a89f9446",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "b965babe-1e05-4839-a750-f5262f85caf3",
            "ca318891-5e4f-42c7-8dd3-fb5663723b2f",
            "e60b3fb0-9a42-4534-9a10-6c89bcc0997c"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 22,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "0d513288-a29b-4be1-87bf-05cd912c7687",
          "title": "IntroductionPage",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/26-4555/tests/containers/IntroductionPage.unit.spec.jsx",
          "file": "/src/applications/simple-forms/26-4555/tests/containers/IntroductionPage.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should render",
              "fullTitle": "IntroductionPage should render",
              "timedOut": false,
              "duration": 3,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _render = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_IntroductionPage.default, props))),\n  container = _render.container;\n(0, _chai.expect)(container).to.exist;",
              "err": {},
              "uuid": "17e7c48b-6202-46f5-8e43-11b0c22fdfe2",
              "parentUUID": "0d513288-a29b-4be1-87bf-05cd912c7687",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "17e7c48b-6202-46f5-8e43-11b0c22fdfe2"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "8a071e0c-072d-4b4a-a54e-7541c2435c37",
          "title": "contact information page 1 page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/26-4555/tests/pages/contactInformation1.unit.spec.jsx",
          "file": "/src/applications/simple-forms/26-4555/tests/pages/contactInformation1.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should have appropriate number of web components",
              "fullTitle": "contact information page 1 page should have appropriate number of web components",
              "timedOut": false,
              "duration": 18,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps3 = getProps(),\n  mockStore = _getProps3.mockStore;\nvar _render3 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render3.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypesWebComponents)).to.have.lengthOf(expectedNumberOfFields);",
              "err": {},
              "uuid": "6c34c9b2-f704-471b-a4ed-bf380f33faf9",
              "parentUUID": "8a071e0c-072d-4b4a-a54e-7541c2435c37",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "6c34c9b2-f704-471b-a4ed-bf380f33faf9"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 18,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "e89d9f66-b837-4682-a495-29f2e044b4ba",
          "title": "contact information page 1 page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/26-4555/tests/pages/contactInformation1.unit.spec.jsx",
          "file": "/src/applications/simple-forms/26-4555/tests/pages/contactInformation1.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should show the correct number of errors on submit for web components",
              "fullTitle": "contact information page 1 page should show the correct number of errors on submit for web components",
              "timedOut": false,
              "duration": 58,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps4 = getProps(),\n  mockStore = _getProps4.mockStore;\nvar _render4 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render4.container,\n  getByRole = _render4.getByRole;\ngetByRole('button', {\n  name: /submit/i\n}).click();\nvar nodes = Array.from(container.querySelectorAll(\"\".concat(expectedFieldTypesWebComponents, \", \").concat(wrapperWebComponents)));\nvar errors = nodes.filter(function (node) {\n  return node.error;\n});\n(0, _chai.expect)(errors).to.have.lengthOf(expectedNumberOfErrors);",
              "err": {},
              "uuid": "183d90e2-d5e0-4a8a-8893-2de6c7bb33d5",
              "parentUUID": "e89d9f66-b837-4682-a495-29f2e044b4ba",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "183d90e2-d5e0-4a8a-8893-2de6c7bb33d5"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 58,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "2c2bcb5f-3ee7-4460-ba1f-65517735afa7",
          "title": "contact information page 1 page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/26-4555/tests/pages/contactInformation1.unit.spec.jsx",
          "file": "/src/applications/simple-forms/26-4555/tests/pages/contactInformation1.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should have appropriate number of fields",
              "fullTitle": "contact information page 1 page should have appropriate number of fields",
              "timedOut": false,
              "duration": 18,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps = getProps(),\n  mockStore = _getProps.mockStore;\nvar _render = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypes)).to.have.lengthOf(expectedNumberOfFields);",
              "err": {},
              "uuid": "8750351b-8ba4-4b91-bcc1-2dde2c1b1736",
              "parentUUID": "2c2bcb5f-3ee7-4460-ba1f-65517735afa7",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "8750351b-8ba4-4b91-bcc1-2dde2c1b1736"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 18,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "a408064c-004f-4e47-be03-bbd19049ef74",
          "title": "contact information page 1 page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/26-4555/tests/pages/contactInformation1.unit.spec.jsx",
          "file": "/src/applications/simple-forms/26-4555/tests/pages/contactInformation1.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should show the correct number of errors on submit",
              "fullTitle": "contact information page 1 page should show the correct number of errors on submit",
              "timedOut": false,
              "duration": 89,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps2 = getProps(),\n  mockStore = _getProps2.mockStore;\nvar _render2 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  getByRole = _render2.getByRole,\n  queryAllByRole = _render2.queryAllByRole;\ngetByRole('button', {\n  name: /submit/i\n}).click();\nvar errors = queryAllByRole('alert');\n(0, _chai.expect)(errors).to.have.lengthOf(expectedNumberOfErrors);",
              "err": {},
              "uuid": "a539900c-ef8d-44d8-87b8-047e39a914e8",
              "parentUUID": "a408064c-004f-4e47-be03-bbd19049ef74",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a539900c-ef8d-44d8-87b8-047e39a914e8"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 89,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "16cc75ca-0569-4b1e-b7d1-587cbbea7615",
          "title": "contact information page 2 page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/26-4555/tests/pages/contactInformation2.unit.spec.jsx",
          "file": "/src/applications/simple-forms/26-4555/tests/pages/contactInformation2.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should have appropriate number of web components",
              "fullTitle": "contact information page 2 page should have appropriate number of web components",
              "timedOut": false,
              "duration": 5,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps3 = getProps(),\n  mockStore = _getProps3.mockStore;\nvar _render3 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render3.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypesWebComponents)).to.have.lengthOf(expectedNumberOfFields);",
              "err": {},
              "uuid": "d444cbcc-c73c-443d-b45a-efc081d560da",
              "parentUUID": "16cc75ca-0569-4b1e-b7d1-587cbbea7615",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "d444cbcc-c73c-443d-b45a-efc081d560da"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 5,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "77af8f5b-b87f-403c-98da-4d9605dec85a",
          "title": "contact information page 2 page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/26-4555/tests/pages/contactInformation2.unit.spec.jsx",
          "file": "/src/applications/simple-forms/26-4555/tests/pages/contactInformation2.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should show the correct number of errors on submit for web components",
              "fullTitle": "contact information page 2 page should show the correct number of errors on submit for web components",
              "timedOut": false,
              "duration": 15,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps4 = getProps(),\n  mockStore = _getProps4.mockStore;\nvar _render4 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render4.container,\n  getByRole = _render4.getByRole;\ngetByRole('button', {\n  name: /submit/i\n}).click();\nvar nodes = Array.from(container.querySelectorAll(\"\".concat(expectedFieldTypesWebComponents, \", \").concat(wrapperWebComponents)));\nvar errors = nodes.filter(function (node) {\n  return node.error;\n});\n(0, _chai.expect)(errors).to.have.lengthOf(expectedNumberOfErrors);",
              "err": {},
              "uuid": "1c221ab3-9cb7-470d-92fe-233f7c0d57e2",
              "parentUUID": "77af8f5b-b87f-403c-98da-4d9605dec85a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "1c221ab3-9cb7-470d-92fe-233f7c0d57e2"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 15,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "dc9cdd87-0c25-4ab0-990e-393fb8bea653",
          "title": "contact information page 2 page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/26-4555/tests/pages/contactInformation2.unit.spec.jsx",
          "file": "/src/applications/simple-forms/26-4555/tests/pages/contactInformation2.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should have appropriate number of fields",
              "fullTitle": "contact information page 2 page should have appropriate number of fields",
              "timedOut": false,
              "duration": 4,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps = getProps(),\n  mockStore = _getProps.mockStore;\nvar _render = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypes)).to.have.lengthOf(expectedNumberOfFields);",
              "err": {},
              "uuid": "5fd1d20d-c122-443f-8bf7-845ed945c824",
              "parentUUID": "dc9cdd87-0c25-4ab0-990e-393fb8bea653",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "5fd1d20d-c122-443f-8bf7-845ed945c824"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 4,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "7a64b6f7-ed65-4364-8cae-02893f3f37f4",
          "title": "contact information page 2 page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/26-4555/tests/pages/contactInformation2.unit.spec.jsx",
          "file": "/src/applications/simple-forms/26-4555/tests/pages/contactInformation2.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should show the correct number of errors on submit",
              "fullTitle": "contact information page 2 page should show the correct number of errors on submit",
              "timedOut": false,
              "duration": 15,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps2 = getProps(),\n  mockStore = _getProps2.mockStore;\nvar _render2 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  getByRole = _render2.getByRole,\n  queryAllByRole = _render2.queryAllByRole;\ngetByRole('button', {\n  name: /submit/i\n}).click();\nvar errors = queryAllByRole('alert');\n(0, _chai.expect)(errors).to.have.lengthOf(expectedNumberOfErrors);",
              "err": {},
              "uuid": "f699f42a-9f2a-422e-9acd-1aa081d0e677",
              "parentUUID": "7a64b6f7-ed65-4364-8cae-02893f3f37f4",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f699f42a-9f2a-422e-9acd-1aa081d0e677"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 15,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "06493556-2f9b-4667-b8b4-c4e271cd8909",
          "title": "living situation page 1 page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/26-4555/tests/pages/livingSituation1.unit.spec.jsx",
          "file": "/src/applications/simple-forms/26-4555/tests/pages/livingSituation1.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should have appropriate number of web components",
              "fullTitle": "living situation page 1 page should have appropriate number of web components",
              "timedOut": false,
              "duration": 4,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps3 = getProps(),\n  mockStore = _getProps3.mockStore;\nvar _render3 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render3.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypesWebComponents)).to.have.lengthOf(expectedNumberOfFields);",
              "err": {},
              "uuid": "42adfb8a-b1ee-4418-a1ff-3522c84e1226",
              "parentUUID": "06493556-2f9b-4667-b8b4-c4e271cd8909",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "42adfb8a-b1ee-4418-a1ff-3522c84e1226"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 4,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "d337c785-3103-4223-a2b0-bb27625f6112",
          "title": "living situation page 1 page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/26-4555/tests/pages/livingSituation1.unit.spec.jsx",
          "file": "/src/applications/simple-forms/26-4555/tests/pages/livingSituation1.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should show the correct number of errors on submit for web components",
              "fullTitle": "living situation page 1 page should show the correct number of errors on submit for web components",
              "timedOut": false,
              "duration": 10,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps4 = getProps(),\n  mockStore = _getProps4.mockStore;\nvar _render4 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render4.container,\n  getByRole = _render4.getByRole;\ngetByRole('button', {\n  name: /submit/i\n}).click();\nvar nodes = Array.from(container.querySelectorAll(\"\".concat(expectedFieldTypesWebComponents, \", \").concat(wrapperWebComponents)));\nvar errors = nodes.filter(function (node) {\n  return node.error;\n});\n(0, _chai.expect)(errors).to.have.lengthOf(expectedNumberOfErrors);",
              "err": {},
              "uuid": "60555b87-baa7-42f2-bd11-6477bc10db0f",
              "parentUUID": "d337c785-3103-4223-a2b0-bb27625f6112",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "60555b87-baa7-42f2-bd11-6477bc10db0f"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 10,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "1a97c94c-5e4a-4cd5-9e0a-120b3bb24850",
          "title": "living situation page 1 page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/26-4555/tests/pages/livingSituation1.unit.spec.jsx",
          "file": "/src/applications/simple-forms/26-4555/tests/pages/livingSituation1.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should have appropriate number of fields",
              "fullTitle": "living situation page 1 page should have appropriate number of fields",
              "timedOut": false,
              "duration": 3,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps = getProps(),\n  mockStore = _getProps.mockStore;\nvar _render = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypes)).to.have.lengthOf(expectedNumberOfFields);",
              "err": {},
              "uuid": "ddfa1ff4-5005-4e1f-8477-0eed307092e5",
              "parentUUID": "1a97c94c-5e4a-4cd5-9e0a-120b3bb24850",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "ddfa1ff4-5005-4e1f-8477-0eed307092e5"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "dac1f638-1723-47da-bc99-1e8e20f439e7",
          "title": "living situation page 1 page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/26-4555/tests/pages/livingSituation1.unit.spec.jsx",
          "file": "/src/applications/simple-forms/26-4555/tests/pages/livingSituation1.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should show the correct number of errors on submit",
              "fullTitle": "living situation page 1 page should show the correct number of errors on submit",
              "timedOut": false,
              "duration": 13,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps2 = getProps(),\n  mockStore = _getProps2.mockStore;\nvar _render2 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  getByRole = _render2.getByRole,\n  queryAllByRole = _render2.queryAllByRole;\ngetByRole('button', {\n  name: /submit/i\n}).click();\nvar errors = queryAllByRole('alert');\n(0, _chai.expect)(errors).to.have.lengthOf(expectedNumberOfErrors);",
              "err": {},
              "uuid": "5aa80c4e-5129-4f66-b696-083cbb77e781",
              "parentUUID": "dac1f638-1723-47da-bc99-1e8e20f439e7",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "5aa80c4e-5129-4f66-b696-083cbb77e781"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 13,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "513a2132-b9a8-4cfb-8bb5-8df529229399",
          "title": "living situation page 2 page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/26-4555/tests/pages/livingSituation2.unit.spec.jsx",
          "file": "/src/applications/simple-forms/26-4555/tests/pages/livingSituation2.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should have appropriate number of web components",
              "fullTitle": "living situation page 2 page should have appropriate number of web components",
              "timedOut": false,
              "duration": 17,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps3 = getProps(),\n  mockStore = _getProps3.mockStore;\nvar _render3 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render3.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypesWebComponents)).to.have.lengthOf(expectedNumberOfFields);",
              "err": {},
              "uuid": "f71e4827-a2a7-4c12-9df4-8607367ee493",
              "parentUUID": "513a2132-b9a8-4cfb-8bb5-8df529229399",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f71e4827-a2a7-4c12-9df4-8607367ee493"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 17,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "4a6e5c24-016a-4be4-9e61-e37452a35263",
          "title": "living situation page 2 page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/26-4555/tests/pages/livingSituation2.unit.spec.jsx",
          "file": "/src/applications/simple-forms/26-4555/tests/pages/livingSituation2.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should show the correct number of errors on submit for web components",
              "fullTitle": "living situation page 2 page should show the correct number of errors on submit for web components",
              "timedOut": false,
              "duration": 58,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps4 = getProps(),\n  mockStore = _getProps4.mockStore;\nvar _render4 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render4.container,\n  getByRole = _render4.getByRole;\ngetByRole('button', {\n  name: /submit/i\n}).click();\nvar nodes = Array.from(container.querySelectorAll(\"\".concat(expectedFieldTypesWebComponents, \", \").concat(wrapperWebComponents)));\nvar errors = nodes.filter(function (node) {\n  return node.error;\n});\n(0, _chai.expect)(errors).to.have.lengthOf(expectedNumberOfErrors);",
              "err": {},
              "uuid": "4e547398-3bd9-4948-8671-52658ec922ee",
              "parentUUID": "4a6e5c24-016a-4be4-9e61-e37452a35263",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "4e547398-3bd9-4948-8671-52658ec922ee"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 58,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "cc33ce2a-379e-4bdf-8ecb-2573176cadbb",
          "title": "living situation page 2 page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/26-4555/tests/pages/livingSituation2.unit.spec.jsx",
          "file": "/src/applications/simple-forms/26-4555/tests/pages/livingSituation2.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should have appropriate number of fields",
              "fullTitle": "living situation page 2 page should have appropriate number of fields",
              "timedOut": false,
              "duration": 15,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps = getProps(),\n  mockStore = _getProps.mockStore;\nvar _render = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypes)).to.have.lengthOf(expectedNumberOfFields);",
              "err": {},
              "uuid": "0cc88174-6878-4971-9eb7-387391d3b896",
              "parentUUID": "cc33ce2a-379e-4bdf-8ecb-2573176cadbb",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "0cc88174-6878-4971-9eb7-387391d3b896"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 15,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "3ff9f390-ed3d-40b4-9d86-bed0ce786fda",
          "title": "living situation page 2 page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/26-4555/tests/pages/livingSituation2.unit.spec.jsx",
          "file": "/src/applications/simple-forms/26-4555/tests/pages/livingSituation2.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should show the correct number of errors on submit",
              "fullTitle": "living situation page 2 page should show the correct number of errors on submit",
              "timedOut": false,
              "duration": 82,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps2 = getProps(),\n  mockStore = _getProps2.mockStore;\nvar _render2 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  getByRole = _render2.getByRole,\n  queryAllByRole = _render2.queryAllByRole;\ngetByRole('button', {\n  name: /submit/i\n}).click();\nvar errors = queryAllByRole('alert');\n(0, _chai.expect)(errors).to.have.lengthOf(expectedNumberOfErrors);",
              "err": {},
              "uuid": "b5c32e10-d49d-4ede-a03a-155a1f776a8f",
              "parentUUID": "3ff9f390-ed3d-40b4-9d86-bed0ce786fda",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "b5c32e10-d49d-4ede-a03a-155a1f776a8f"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 82,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "50663176-f5b2-4f42-ad82-8d93ca5556e1",
          "title": "personal information page 1 page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/26-4555/tests/pages/personalInformation1.unit.spec.jsx",
          "file": "/src/applications/simple-forms/26-4555/tests/pages/personalInformation1.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should have appropriate number of web components",
              "fullTitle": "personal information page 1 page should have appropriate number of web components",
              "timedOut": false,
              "duration": 5,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps3 = getProps(),\n  mockStore = _getProps3.mockStore;\nvar _render3 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render3.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypesWebComponents)).to.have.lengthOf(expectedNumberOfFields);",
              "err": {},
              "uuid": "3439918c-8d02-42cd-b27b-f2f7c7add4ac",
              "parentUUID": "50663176-f5b2-4f42-ad82-8d93ca5556e1",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "3439918c-8d02-42cd-b27b-f2f7c7add4ac"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 5,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "0a84beac-43cd-4ac9-b748-4cf0acac2e05",
          "title": "personal information page 1 page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/26-4555/tests/pages/personalInformation1.unit.spec.jsx",
          "file": "/src/applications/simple-forms/26-4555/tests/pages/personalInformation1.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should show the correct number of errors on submit for web components",
              "fullTitle": "personal information page 1 page should show the correct number of errors on submit for web components",
              "timedOut": false,
              "duration": 14,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps4 = getProps(),\n  mockStore = _getProps4.mockStore;\nvar _render4 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render4.container,\n  getByRole = _render4.getByRole;\ngetByRole('button', {\n  name: /submit/i\n}).click();\nvar nodes = Array.from(container.querySelectorAll(\"\".concat(expectedFieldTypesWebComponents, \", \").concat(wrapperWebComponents)));\nvar errors = nodes.filter(function (node) {\n  return node.error;\n});\n(0, _chai.expect)(errors).to.have.lengthOf(expectedNumberOfErrors);",
              "err": {},
              "uuid": "ef642411-3b72-495c-8e7b-c8332b5446a6",
              "parentUUID": "0a84beac-43cd-4ac9-b748-4cf0acac2e05",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "ef642411-3b72-495c-8e7b-c8332b5446a6"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 14,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "5565422b-85ac-4419-9ff6-e61d734ca972",
          "title": "personal information page 1 page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/26-4555/tests/pages/personalInformation1.unit.spec.jsx",
          "file": "/src/applications/simple-forms/26-4555/tests/pages/personalInformation1.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should have appropriate number of fields",
              "fullTitle": "personal information page 1 page should have appropriate number of fields",
              "timedOut": false,
              "duration": 5,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps = getProps(),\n  mockStore = _getProps.mockStore;\nvar _render = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypes)).to.have.lengthOf(expectedNumberOfFields);",
              "err": {},
              "uuid": "4ef47fa0-32b3-48a0-81ca-1f4101cefc54",
              "parentUUID": "5565422b-85ac-4419-9ff6-e61d734ca972",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "4ef47fa0-32b3-48a0-81ca-1f4101cefc54"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 5,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "b2af7c32-9353-44c3-a5dc-b74f7d6f54ae",
          "title": "personal information page 1 page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/26-4555/tests/pages/personalInformation1.unit.spec.jsx",
          "file": "/src/applications/simple-forms/26-4555/tests/pages/personalInformation1.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should show the correct number of errors on submit",
              "fullTitle": "personal information page 1 page should show the correct number of errors on submit",
              "timedOut": false,
              "duration": 16,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps2 = getProps(),\n  mockStore = _getProps2.mockStore;\nvar _render2 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  getByRole = _render2.getByRole,\n  queryAllByRole = _render2.queryAllByRole;\ngetByRole('button', {\n  name: /submit/i\n}).click();\nvar errors = queryAllByRole('alert');\n(0, _chai.expect)(errors).to.have.lengthOf(expectedNumberOfErrors);",
              "err": {},
              "uuid": "50600a9a-2043-4870-8646-a6226146741b",
              "parentUUID": "b2af7c32-9353-44c3-a5dc-b74f7d6f54ae",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "50600a9a-2043-4870-8646-a6226146741b"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 16,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "527a5318-c592-4ddf-b403-cafd4bd60a90",
          "title": "personal information page 2 page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/26-4555/tests/pages/personalInformation2.unit.spec.jsx",
          "file": "/src/applications/simple-forms/26-4555/tests/pages/personalInformation2.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should have appropriate number of web components",
              "fullTitle": "personal information page 2 page should have appropriate number of web components",
              "timedOut": false,
              "duration": 8,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps3 = getProps(),\n  mockStore = _getProps3.mockStore;\nvar _render3 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render3.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypesWebComponents)).to.have.lengthOf(expectedNumberOfFields);",
              "err": {},
              "uuid": "a051c19b-3a1e-4103-ac5c-33736f1fd994",
              "parentUUID": "527a5318-c592-4ddf-b403-cafd4bd60a90",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a051c19b-3a1e-4103-ac5c-33736f1fd994"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 8,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "32963c3b-30b0-412e-aa4f-d53ee957290e",
          "title": "personal information page 2 page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/26-4555/tests/pages/personalInformation2.unit.spec.jsx",
          "file": "/src/applications/simple-forms/26-4555/tests/pages/personalInformation2.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should show the correct number of errors on submit for web components",
              "fullTitle": "personal information page 2 page should show the correct number of errors on submit for web components",
              "timedOut": false,
              "duration": 11,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps4 = getProps(),\n  mockStore = _getProps4.mockStore;\nvar _render4 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render4.container,\n  getByRole = _render4.getByRole;\ngetByRole('button', {\n  name: /submit/i\n}).click();\nvar nodes = Array.from(container.querySelectorAll(\"\".concat(expectedFieldTypesWebComponents, \", \").concat(wrapperWebComponents)));\nvar errors = nodes.filter(function (node) {\n  return node.error;\n});\n(0, _chai.expect)(errors).to.have.lengthOf(expectedNumberOfErrors);",
              "err": {},
              "uuid": "634aba55-d3be-4789-9926-9f09b31ec404",
              "parentUUID": "32963c3b-30b0-412e-aa4f-d53ee957290e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "634aba55-d3be-4789-9926-9f09b31ec404"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 11,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "04510926-69d8-403a-8489-937aad95fa0a",
          "title": "personal information page 2 page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/26-4555/tests/pages/personalInformation2.unit.spec.jsx",
          "file": "/src/applications/simple-forms/26-4555/tests/pages/personalInformation2.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should have appropriate number of fields",
              "fullTitle": "personal information page 2 page should have appropriate number of fields",
              "timedOut": false,
              "duration": 3,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps = getProps(),\n  mockStore = _getProps.mockStore;\nvar _render = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypes)).to.have.lengthOf(expectedNumberOfFields);",
              "err": {},
              "uuid": "1cd8e7da-d2f6-498d-a62a-8b59c34bace2",
              "parentUUID": "04510926-69d8-403a-8489-937aad95fa0a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "1cd8e7da-d2f6-498d-a62a-8b59c34bace2"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "8ccc60bf-aa5b-43e5-b69b-56e04f5c84c0",
          "title": "personal information page 2 page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/26-4555/tests/pages/personalInformation2.unit.spec.jsx",
          "file": "/src/applications/simple-forms/26-4555/tests/pages/personalInformation2.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should show the correct number of errors on submit",
              "fullTitle": "personal information page 2 page should show the correct number of errors on submit",
              "timedOut": false,
              "duration": 13,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps2 = getProps(),\n  mockStore = _getProps2.mockStore;\nvar _render2 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  getByRole = _render2.getByRole,\n  queryAllByRole = _render2.queryAllByRole;\ngetByRole('button', {\n  name: /submit/i\n}).click();\nvar errors = queryAllByRole('alert');\n(0, _chai.expect)(errors).to.have.lengthOf(expectedNumberOfErrors);",
              "err": {},
              "uuid": "169cdfd8-d889-4afd-94c9-cfcdeb32910c",
              "parentUUID": "8ccc60bf-aa5b-43e5-b69b-56e04f5c84c0",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "169cdfd8-d889-4afd-94c9-cfcdeb32910c"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 13,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "c4c4a66b-5357-4880-b23a-6bafe9f58a6a",
          "title": "previous SHA information page 1 page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/26-4555/tests/pages/previousHiApplication1.unit.spec.jsx",
          "file": "/src/applications/simple-forms/26-4555/tests/pages/previousHiApplication1.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should have appropriate number of web components",
              "fullTitle": "previous SHA information page 1 page should have appropriate number of web components",
              "timedOut": false,
              "duration": 4,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps3 = getProps(),\n  mockStore = _getProps3.mockStore;\nvar _render3 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render3.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypesWebComponents)).to.have.lengthOf(expectedNumberOfFields);",
              "err": {},
              "uuid": "81085ada-3d00-4eb7-ad5a-34fbca72e9c4",
              "parentUUID": "c4c4a66b-5357-4880-b23a-6bafe9f58a6a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "81085ada-3d00-4eb7-ad5a-34fbca72e9c4"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 4,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "9b491625-10e1-4bef-96d0-b466587c8284",
          "title": "previous SHA information page 1 page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/26-4555/tests/pages/previousHiApplication1.unit.spec.jsx",
          "file": "/src/applications/simple-forms/26-4555/tests/pages/previousHiApplication1.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should show the correct number of errors on submit for web components",
              "fullTitle": "previous SHA information page 1 page should show the correct number of errors on submit for web components",
              "timedOut": false,
              "duration": 11,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps4 = getProps(),\n  mockStore = _getProps4.mockStore;\nvar _render4 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render4.container,\n  getByRole = _render4.getByRole;\ngetByRole('button', {\n  name: /submit/i\n}).click();\nvar nodes = Array.from(container.querySelectorAll(\"\".concat(expectedFieldTypesWebComponents, \", \").concat(wrapperWebComponents)));\nvar errors = nodes.filter(function (node) {\n  return node.error;\n});\n(0, _chai.expect)(errors).to.have.lengthOf(expectedNumberOfErrors);",
              "err": {},
              "uuid": "024ae8b1-f225-43ef-88c2-66d3ddff78d3",
              "parentUUID": "9b491625-10e1-4bef-96d0-b466587c8284",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "024ae8b1-f225-43ef-88c2-66d3ddff78d3"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 11,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "6bd8e6f6-4254-447f-823b-00616a06a5d3",
          "title": "previous SHA information page 1 page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/26-4555/tests/pages/previousHiApplication1.unit.spec.jsx",
          "file": "/src/applications/simple-forms/26-4555/tests/pages/previousHiApplication1.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should have appropriate number of fields",
              "fullTitle": "previous SHA information page 1 page should have appropriate number of fields",
              "timedOut": false,
              "duration": 3,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps = getProps(),\n  mockStore = _getProps.mockStore;\nvar _render = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypes)).to.have.lengthOf(expectedNumberOfFields);",
              "err": {},
              "uuid": "cd3282e4-46bf-4726-8ad2-8f21652a1a05",
              "parentUUID": "6bd8e6f6-4254-447f-823b-00616a06a5d3",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "cd3282e4-46bf-4726-8ad2-8f21652a1a05"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "aae16aea-de84-4bd9-8347-9cc023f40f5b",
          "title": "previous SHA information page 1 page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/26-4555/tests/pages/previousHiApplication1.unit.spec.jsx",
          "file": "/src/applications/simple-forms/26-4555/tests/pages/previousHiApplication1.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should show the correct number of errors on submit",
              "fullTitle": "previous SHA information page 1 page should show the correct number of errors on submit",
              "timedOut": false,
              "duration": 13,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps2 = getProps(),\n  mockStore = _getProps2.mockStore;\nvar _render2 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  getByRole = _render2.getByRole,\n  queryAllByRole = _render2.queryAllByRole;\ngetByRole('button', {\n  name: /submit/i\n}).click();\nvar errors = queryAllByRole('alert');\n(0, _chai.expect)(errors).to.have.lengthOf(expectedNumberOfErrors);",
              "err": {},
              "uuid": "74bd3109-3e92-4600-9ba3-ed44755b4ce1",
              "parentUUID": "aae16aea-de84-4bd9-8347-9cc023f40f5b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "74bd3109-3e92-4600-9ba3-ed44755b4ce1"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 13,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "954e270c-54c6-4352-9926-f73d6a5ba63d",
          "title": "previous SHA information page 2 page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/26-4555/tests/pages/previousHiApplication2.unit.spec.jsx",
          "file": "/src/applications/simple-forms/26-4555/tests/pages/previousHiApplication2.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should have appropriate number of web components",
              "fullTitle": "previous SHA information page 2 page should have appropriate number of web components",
              "timedOut": false,
              "duration": 6,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps3 = getProps(),\n  mockStore = _getProps3.mockStore;\nvar _render3 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render3.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypesWebComponents)).to.have.lengthOf(expectedNumberOfFields);",
              "err": {},
              "uuid": "1815ca1e-d7af-46e7-8b33-af74ece47275",
              "parentUUID": "954e270c-54c6-4352-9926-f73d6a5ba63d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "1815ca1e-d7af-46e7-8b33-af74ece47275"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 6,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "2b943727-f079-4d99-bde0-37b640c04522",
          "title": "previous SHA information page 2 page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/26-4555/tests/pages/previousHiApplication2.unit.spec.jsx",
          "file": "/src/applications/simple-forms/26-4555/tests/pages/previousHiApplication2.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should show the correct number of errors on submit for web components",
              "fullTitle": "previous SHA information page 2 page should show the correct number of errors on submit for web components",
              "timedOut": false,
              "duration": 19,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps4 = getProps(),\n  mockStore = _getProps4.mockStore;\nvar _render4 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render4.container,\n  getByRole = _render4.getByRole;\ngetByRole('button', {\n  name: /submit/i\n}).click();\nvar nodes = Array.from(container.querySelectorAll(\"\".concat(expectedFieldTypesWebComponents, \", \").concat(wrapperWebComponents)));\nvar errors = nodes.filter(function (node) {\n  return node.error;\n});\n(0, _chai.expect)(errors).to.have.lengthOf(expectedNumberOfErrors);",
              "err": {},
              "uuid": "ebcbbd70-a553-4875-92e5-abafa0db8ded",
              "parentUUID": "2b943727-f079-4d99-bde0-37b640c04522",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "ebcbbd70-a553-4875-92e5-abafa0db8ded"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 19,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "6d927fec-086c-480f-a04f-33d0abf584d5",
          "title": "previous SHA information page 2 page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/26-4555/tests/pages/previousHiApplication2.unit.spec.jsx",
          "file": "/src/applications/simple-forms/26-4555/tests/pages/previousHiApplication2.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should have appropriate number of fields",
              "fullTitle": "previous SHA information page 2 page should have appropriate number of fields",
              "timedOut": false,
              "duration": 6,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps = getProps(),\n  mockStore = _getProps.mockStore;\nvar _render = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypes)).to.have.lengthOf(expectedNumberOfFields);",
              "err": {},
              "uuid": "6e9a94ae-7f54-4d9a-be24-b5a8a4f2d2a1",
              "parentUUID": "6d927fec-086c-480f-a04f-33d0abf584d5",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "6e9a94ae-7f54-4d9a-be24-b5a8a4f2d2a1"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 6,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "2c29edb8-a1bf-4c1d-850e-5bf45eef4e2b",
          "title": "previous SHA information page 2 page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/26-4555/tests/pages/previousHiApplication2.unit.spec.jsx",
          "file": "/src/applications/simple-forms/26-4555/tests/pages/previousHiApplication2.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should show the correct number of errors on submit",
              "fullTitle": "previous SHA information page 2 page should show the correct number of errors on submit",
              "timedOut": false,
              "duration": 25,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps2 = getProps(),\n  mockStore = _getProps2.mockStore;\nvar _render2 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  getByRole = _render2.getByRole,\n  queryAllByRole = _render2.queryAllByRole;\ngetByRole('button', {\n  name: /submit/i\n}).click();\nvar errors = queryAllByRole('alert');\n(0, _chai.expect)(errors).to.have.lengthOf(expectedNumberOfErrors);",
              "err": {},
              "uuid": "f75593cc-7ba5-429b-b067-f898da6b6075",
              "parentUUID": "2c29edb8-a1bf-4c1d-850e-5bf45eef4e2b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f75593cc-7ba5-429b-b067-f898da6b6075"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 25,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "d5c8303a-c12b-4fec-9282-21967910e4e0",
          "title": "previous SAH application 1 page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/26-4555/tests/pages/previousSahApplication1.unit.spec.jsx",
          "file": "/src/applications/simple-forms/26-4555/tests/pages/previousSahApplication1.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should have appropriate number of web components",
              "fullTitle": "previous SAH application 1 page should have appropriate number of web components",
              "timedOut": false,
              "duration": 3,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps3 = getProps(),\n  mockStore = _getProps3.mockStore;\nvar _render3 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render3.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypesWebComponents)).to.have.lengthOf(expectedNumberOfFields);",
              "err": {},
              "uuid": "a29d933b-35e1-42a6-b44b-9fd47da7a14d",
              "parentUUID": "d5c8303a-c12b-4fec-9282-21967910e4e0",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a29d933b-35e1-42a6-b44b-9fd47da7a14d"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "30903905-d779-4736-a11f-783075bf55bf",
          "title": "previous SAH application 1 page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/26-4555/tests/pages/previousSahApplication1.unit.spec.jsx",
          "file": "/src/applications/simple-forms/26-4555/tests/pages/previousSahApplication1.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should show the correct number of errors on submit for web components",
              "fullTitle": "previous SAH application 1 page should show the correct number of errors on submit for web components",
              "timedOut": false,
              "duration": 11,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps4 = getProps(),\n  mockStore = _getProps4.mockStore;\nvar _render4 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render4.container,\n  getByRole = _render4.getByRole;\ngetByRole('button', {\n  name: /submit/i\n}).click();\nvar nodes = Array.from(container.querySelectorAll(\"\".concat(expectedFieldTypesWebComponents, \", \").concat(wrapperWebComponents)));\nvar errors = nodes.filter(function (node) {\n  return node.error;\n});\n(0, _chai.expect)(errors).to.have.lengthOf(expectedNumberOfErrors);",
              "err": {},
              "uuid": "697375f1-6e53-4934-a274-cebb8439208e",
              "parentUUID": "30903905-d779-4736-a11f-783075bf55bf",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "697375f1-6e53-4934-a274-cebb8439208e"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 11,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "f27f9734-458c-4d8e-933d-c770ad3d8539",
          "title": "previous SAH application 1 page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/26-4555/tests/pages/previousSahApplication1.unit.spec.jsx",
          "file": "/src/applications/simple-forms/26-4555/tests/pages/previousSahApplication1.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should have appropriate number of fields",
              "fullTitle": "previous SAH application 1 page should have appropriate number of fields",
              "timedOut": false,
              "duration": 4,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps = getProps(),\n  mockStore = _getProps.mockStore;\nvar _render = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypes)).to.have.lengthOf(expectedNumberOfFields);",
              "err": {},
              "uuid": "3c957a38-d772-423b-a48e-496da22da86e",
              "parentUUID": "f27f9734-458c-4d8e-933d-c770ad3d8539",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "3c957a38-d772-423b-a48e-496da22da86e"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 4,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "767a7d88-57ae-482a-9482-086a1c6e362f",
          "title": "previous SAH application 1 page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/26-4555/tests/pages/previousSahApplication1.unit.spec.jsx",
          "file": "/src/applications/simple-forms/26-4555/tests/pages/previousSahApplication1.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should show the correct number of errors on submit",
              "fullTitle": "previous SAH application 1 page should show the correct number of errors on submit",
              "timedOut": false,
              "duration": 13,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps2 = getProps(),\n  mockStore = _getProps2.mockStore;\nvar _render2 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  getByRole = _render2.getByRole,\n  queryAllByRole = _render2.queryAllByRole;\ngetByRole('button', {\n  name: /submit/i\n}).click();\nvar errors = queryAllByRole('alert');\n(0, _chai.expect)(errors).to.have.lengthOf(expectedNumberOfErrors);",
              "err": {},
              "uuid": "7fe033a7-9d7b-480b-9f9e-231beb520a8f",
              "parentUUID": "767a7d88-57ae-482a-9482-086a1c6e362f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "7fe033a7-9d7b-480b-9f9e-231beb520a8f"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 13,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "258b9d24-d2aa-4c40-9040-75ee6bf7c3f6",
          "title": "previous SAH information page 2 page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/26-4555/tests/pages/previousSahApplication2.unit.spec.jsx",
          "file": "/src/applications/simple-forms/26-4555/tests/pages/previousSahApplication2.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should have appropriate number of web components",
              "fullTitle": "previous SAH information page 2 page should have appropriate number of web components",
              "timedOut": false,
              "duration": 6,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps3 = getProps(),\n  mockStore = _getProps3.mockStore;\nvar _render3 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render3.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypesWebComponents)).to.have.lengthOf(expectedNumberOfFields);",
              "err": {},
              "uuid": "aa4dcd3a-e183-4cf7-98ac-ad3bc76256cf",
              "parentUUID": "258b9d24-d2aa-4c40-9040-75ee6bf7c3f6",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "aa4dcd3a-e183-4cf7-98ac-ad3bc76256cf"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 6,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "b9c917e4-5174-4560-844d-b81a58055454",
          "title": "previous SAH information page 2 page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/26-4555/tests/pages/previousSahApplication2.unit.spec.jsx",
          "file": "/src/applications/simple-forms/26-4555/tests/pages/previousSahApplication2.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should show the correct number of errors on submit for web components",
              "fullTitle": "previous SAH information page 2 page should show the correct number of errors on submit for web components",
              "timedOut": false,
              "duration": 24,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps4 = getProps(),\n  mockStore = _getProps4.mockStore;\nvar _render4 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render4.container,\n  getByRole = _render4.getByRole;\ngetByRole('button', {\n  name: /submit/i\n}).click();\nvar nodes = Array.from(container.querySelectorAll(\"\".concat(expectedFieldTypesWebComponents, \", \").concat(wrapperWebComponents)));\nvar errors = nodes.filter(function (node) {\n  return node.error;\n});\n(0, _chai.expect)(errors).to.have.lengthOf(expectedNumberOfErrors);",
              "err": {},
              "uuid": "33225fff-5731-4043-9ad4-58950cfdbd87",
              "parentUUID": "b9c917e4-5174-4560-844d-b81a58055454",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "33225fff-5731-4043-9ad4-58950cfdbd87"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 24,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "07df3671-2735-4879-8307-a213b6c69fbc",
          "title": "previous SAH information page 2 page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/26-4555/tests/pages/previousSahApplication2.unit.spec.jsx",
          "file": "/src/applications/simple-forms/26-4555/tests/pages/previousSahApplication2.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should have appropriate number of fields",
              "fullTitle": "previous SAH information page 2 page should have appropriate number of fields",
              "timedOut": false,
              "duration": 7,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps = getProps(),\n  mockStore = _getProps.mockStore;\nvar _render = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypes)).to.have.lengthOf(expectedNumberOfFields);",
              "err": {},
              "uuid": "bb4a745f-cd9d-4c55-a953-7977629ccd70",
              "parentUUID": "07df3671-2735-4879-8307-a213b6c69fbc",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "bb4a745f-cd9d-4c55-a953-7977629ccd70"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 7,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "b9f0c420-314e-4b32-8e8d-be53f9f406c4",
          "title": "previous SAH information page 2 page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/26-4555/tests/pages/previousSahApplication2.unit.spec.jsx",
          "file": "/src/applications/simple-forms/26-4555/tests/pages/previousSahApplication2.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should show the correct number of errors on submit",
              "fullTitle": "previous SAH information page 2 page should show the correct number of errors on submit",
              "timedOut": false,
              "duration": 33,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps2 = getProps(),\n  mockStore = _getProps2.mockStore;\nvar _render2 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  getByRole = _render2.getByRole,\n  queryAllByRole = _render2.queryAllByRole;\ngetByRole('button', {\n  name: /submit/i\n}).click();\nvar errors = queryAllByRole('alert');\n(0, _chai.expect)(errors).to.have.lengthOf(expectedNumberOfErrors);",
              "err": {},
              "uuid": "1994fa11-8374-4176-adc2-13a5f1d5f7fd",
              "parentUUID": "b9f0c420-314e-4b32-8e8d-be53f9f406c4",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "1994fa11-8374-4176-adc2-13a5f1d5f7fd"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 33,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "851ae026-7100-440a-93eb-d674a202d4b9",
          "title": "remarks page page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/26-4555/tests/pages/remarks.unit.spec.jsx",
          "file": "/src/applications/simple-forms/26-4555/tests/pages/remarks.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should have appropriate number of web components",
              "fullTitle": "remarks page page should have appropriate number of web components",
              "timedOut": false,
              "duration": 12,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps3 = getProps(),\n  mockStore = _getProps3.mockStore;\nvar _render3 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render3.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypesWebComponents)).to.have.lengthOf(expectedNumberOfFields);",
              "err": {},
              "uuid": "7d9d5f81-26ea-44d0-88f5-cf0640694d4b",
              "parentUUID": "851ae026-7100-440a-93eb-d674a202d4b9",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "7d9d5f81-26ea-44d0-88f5-cf0640694d4b"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 12,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "89acd297-cb57-47d1-9fc2-f582b78997c4",
          "title": "remarks page page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/26-4555/tests/pages/remarks.unit.spec.jsx",
          "file": "/src/applications/simple-forms/26-4555/tests/pages/remarks.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should show the correct number of errors on submit for web components",
              "fullTitle": "remarks page page should show the correct number of errors on submit for web components",
              "timedOut": false,
              "duration": 15,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps4 = getProps(),\n  mockStore = _getProps4.mockStore;\nvar _render4 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render4.container,\n  getByRole = _render4.getByRole;\ngetByRole('button', {\n  name: /submit/i\n}).click();\nvar nodes = Array.from(container.querySelectorAll(\"\".concat(expectedFieldTypesWebComponents, \", \").concat(wrapperWebComponents)));\nvar errors = nodes.filter(function (node) {\n  return node.error;\n});\n(0, _chai.expect)(errors).to.have.lengthOf(expectedNumberOfErrors);",
              "err": {},
              "uuid": "89800361-f264-4766-be10-3de6aba23ed8",
              "parentUUID": "89acd297-cb57-47d1-9fc2-f582b78997c4",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "89800361-f264-4766-be10-3de6aba23ed8"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 15,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "196b44de-d411-455c-ae11-cadb6a0c0f33",
          "title": "remarks page page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/26-4555/tests/pages/remarks.unit.spec.jsx",
          "file": "/src/applications/simple-forms/26-4555/tests/pages/remarks.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should have appropriate number of fields",
              "fullTitle": "remarks page page should have appropriate number of fields",
              "timedOut": false,
              "duration": 5,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps = getProps(),\n  mockStore = _getProps.mockStore;\nvar _render = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypes)).to.have.lengthOf(expectedNumberOfFields);",
              "err": {},
              "uuid": "819c3eac-0bfd-46d9-bd72-f18ed0939362",
              "parentUUID": "196b44de-d411-455c-ae11-cadb6a0c0f33",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "819c3eac-0bfd-46d9-bd72-f18ed0939362"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 5,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "c21f99a1-4b2f-4bf4-9e49-a1f5573ad9f0",
          "title": "remarks page page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/26-4555/tests/pages/remarks.unit.spec.jsx",
          "file": "/src/applications/simple-forms/26-4555/tests/pages/remarks.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should show the correct number of errors on submit",
              "fullTitle": "remarks page page should show the correct number of errors on submit",
              "timedOut": false,
              "duration": 16,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps2 = getProps(),\n  mockStore = _getProps2.mockStore;\nvar _render2 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  getByRole = _render2.getByRole,\n  queryAllByRole = _render2.queryAllByRole;\ngetByRole('button', {\n  name: /submit/i\n}).click();\nvar errors = queryAllByRole('alert');\n(0, _chai.expect)(errors).to.have.lengthOf(expectedNumberOfErrors);",
              "err": {},
              "uuid": "c011d46e-eab0-4353-9eb0-8efe4665f0a4",
              "parentUUID": "c21f99a1-4b2f-4bf4-9e49-a1f5573ad9f0",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "c011d46e-eab0-4353-9eb0-8efe4665f0a4"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 16,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "327986d3-5b51-4f2f-b028-2df5e63d868a",
          "title": "Form route test",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/26-4555/tests/routes.unit.spec.js",
          "file": "/src/applications/simple-forms/26-4555/tests/routes.unit.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should redirect from the root to /introduction",
              "fullTitle": "Form route test should redirect from the root to /introduction",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var replace = _sinon.default.spy();\nonEnter(null, replace);\n(0, _chai.expect)(replace.calledWith('/introduction')).to.be.true;",
              "err": {},
              "uuid": "2ddac13d-97bb-417f-97aa-0a52fa6effc0",
              "parentUUID": "327986d3-5b51-4f2f-b028-2df5e63d868a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "2ddac13d-97bb-417f-97aa-0a52fa6effc0"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "8d039ff9-6869-480d-844b-9430e0bc4fa9",
          "title": "SupportingDocsViewField",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/40-0247/tests/unit/components/SupportingDocsViewField.unit.spec.jsx",
          "file": "/src/applications/simple-forms/40-0247/tests/unit/components/SupportingDocsViewField.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [
            {
              "title": "\"after each\" hook: cleanup in \"SupportingDocsViewField\"",
              "fullTitle": "SupportingDocsViewField \"after each\" hook: cleanup in \"SupportingDocsViewField\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "mountedContainers.forEach(cleanupAtContainer);",
              "err": {},
              "uuid": "b1942ba8-e6b4-453a-b8e1-fc525b66eece",
              "parentUUID": "8d039ff9-6869-480d-844b-9430e0bc4fa9",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "renders without crashing",
              "fullTitle": "SupportingDocsViewField renders without crashing",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, _react2.render)(/*#__PURE__*/_react.default.createElement(_SupportingDocsViewField.default, {\n  defaultEditButton: function defaultEditButton() {},\n  formData: {}\n}));",
              "err": {},
              "uuid": "22926c9f-63c9-473f-b9f7-b2df267a2a9e",
              "parentUUID": "8d039ff9-6869-480d-844b-9430e0bc4fa9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "renders the correct text",
              "fullTitle": "SupportingDocsViewField renders the correct text",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _render = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_SupportingDocsViewField.default, {\n    defaultEditButton: function defaultEditButton() {},\n    formData: {}\n  })),\n  getByText = _render.getByText;\n(0, _chai.expect)(getByText('Upload documents (preferably DD214)')).to.exist;",
              "err": {},
              "uuid": "47943036-f459-4df5-80e6-9414b9b6d214",
              "parentUUID": "8d039ff9-6869-480d-844b-9430e0bc4fa9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "renders the 4 list items if a file’s uploaded",
              "fullTitle": "SupportingDocsViewField renders the 4 list items if a file’s uploaded",
              "timedOut": false,
              "duration": 4,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var formData = {\n  veteranSupportingDocuments: [{\n    name: 'Document 1',\n    size: 100\n  }, {\n    name: 'Document 2',\n    size: 200\n  }]\n};\nvar _render2 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_SupportingDocsViewField.default, {\n    defaultEditButton: function defaultEditButton() {},\n    formData: formData\n  })),\n  getAllByRole = _render2.getAllByRole;\n(0, _chai.expect)(getAllByRole('listitem')).to.have.lengthOf(4);",
              "err": {},
              "uuid": "928d3b83-3511-4e53-9f4e-6f547195ccf4",
              "parentUUID": "8d039ff9-6869-480d-844b-9430e0bc4fa9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "renders only 2 list items if no file’s uploaded",
              "fullTitle": "SupportingDocsViewField renders only 2 list items if no file’s uploaded",
              "timedOut": false,
              "duration": 3,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _render3 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_SupportingDocsViewField.default, {\n    defaultEditButton: function defaultEditButton() {},\n    formData: {}\n  })),\n  queryAllByRole = _render3.queryAllByRole;\n(0, _chai.expect)(queryAllByRole('listitem')).to.have.lengthOf(2);",
              "err": {},
              "uuid": "4574ce34-67a1-4390-8f36-6eedb53fabb3",
              "parentUUID": "8d039ff9-6869-480d-844b-9430e0bc4fa9",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "22926c9f-63c9-473f-b9f7-b2df267a2a9e",
            "47943036-f459-4df5-80e6-9414b9b6d214",
            "928d3b83-3511-4e53-9f4e-6f547195ccf4",
            "4574ce34-67a1-4390-8f36-6eedb53fabb3"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 10,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "8f553006-c59a-4e78-811c-d8f410527c6c",
          "title": "form.js",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/40-0247/tests/unit/config/form.unit.spec.js",
          "file": "/src/applications/simple-forms/40-0247/tests/unit/config/form.unit.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "9aeedc3e-7280-4cf4-910e-3fc7326a2363",
              "title": "initialData prop",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/40-0247/tests/unit/config/form.unit.spec.js",
              "file": "/src/applications/simple-forms/40-0247/tests/unit/config/form.unit.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should use mock data when environment is localhost and not in Cypress",
                  "fullTitle": "form.js initialData prop should use mock data when environment is localhost and not in Cypress",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var mockData = {\n  foo: 'bar'\n};\nvar environment = {\n  isLocalhost: _sinon.default.stub().returns(true)\n};\nvar window = {\n  Cypress: undefined\n};\nvar initialData = _form.default.chapters.veteranPersonalInfoChapter.pages.veteranPersonalInfoPage.initialData;\nvar result = environment.isLocalhost() && !window.Cypress ? mockData : initialData;\n(0, _chai.expect)(result).equal(mockData);",
                  "err": {},
                  "uuid": "cd60b03c-55b7-48aa-a473-cbcf98d0d687",
                  "parentUUID": "9aeedc3e-7280-4cf4-910e-3fc7326a2363",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should not use mock data when environment is not localhost or in Cypress",
                  "fullTitle": "form.js initialData prop should not use mock data when environment is not localhost or in Cypress",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var mockData = {\n  foo: 'bar'\n};\nvar environment = {\n  isLocalhost: _sinon.default.stub().returns(false)\n};\nvar window = {\n  Cypress: true\n};\nvar initialData = _form.default.chapters.veteranPersonalInfoChapter.pages.veteranPersonalInfoPage.initialData;\nvar result = environment.isLocalhost() && !window.Cypress ? mockData : initialData;\n(0, _chai.expect)(result).equal(initialData);",
                  "err": {},
                  "uuid": "eba2e85b-dcae-40f6-91bd-6341f6815b0b",
                  "parentUUID": "9aeedc3e-7280-4cf4-910e-3fc7326a2363",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "cd60b03c-55b7-48aa-a473-cbcf98d0d687",
                "eba2e85b-dcae-40f6-91bd-6341f6815b0b"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "2295ad13-c0f4-4ce3-90a1-cc9d72767753",
          "title": "transformForSubmit",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/40-0247/tests/unit/config/submit-transformer.unit.spec.js",
          "file": "/src/applications/simple-forms/40-0247/tests/unit/config/submit-transformer.unit.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should transform json correctly",
              "fullTitle": "transformForSubmit should transform json correctly",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var data = {\n  data: _testData.default\n};\nvar transformedResult = JSON.parse((0, _submitTransformer.default)(_form.default, data));\n(0, _chai.expect)(transformedResult).to.deep.equal(transformedFixture);",
              "err": {},
              "uuid": "fa93a5bd-1043-4953-ac2f-e73a9dfccc37",
              "parentUUID": "2295ad13-c0f4-4ce3-90a1-cc9d72767753",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "fa93a5bd-1043-4953-ac2f-e73a9dfccc37"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "c08ebe21-e0f2-4cbc-bcb9-ec756e679c68",
          "title": "Confirmation page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/40-0247/tests/unit/containers/ConfirmationPage.unit.spec.jsx",
          "file": "/src/applications/simple-forms/40-0247/tests/unit/containers/ConfirmationPage.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should show status success and the correct name of applicant",
              "fullTitle": "Confirmation page should show status success and the correct name of applicant",
              "timedOut": false,
              "duration": 5,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _render = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore(storeBase)\n  }, /*#__PURE__*/_react.default.createElement(_ConfirmationPage.default, null))),\n  container = _render.container,\n  getByText = _render.getByText;\n(0, _chai.expect)(container.querySelector('va-alert')).to.have.attr('status', 'success');\ngetByText(fullNameStringRegex);",
              "err": {},
              "uuid": "031f1bcf-a4ca-42d0-a481-4f59a62151d0",
              "parentUUID": "c08ebe21-e0f2-4cbc-bcb9-ec756e679c68",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should handle missing submission response",
              "fullTitle": "Confirmation page should handle missing submission response",
              "timedOut": false,
              "duration": 3,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var storeWithMissingResponse = _objectSpread(_objectSpread({}, storeBase), {}, {\n  form: _objectSpread(_objectSpread({}, storeBase.form), {}, {\n    submission: _objectSpread(_objectSpread({}, storeBase.form.submission), {}, {\n      response: null\n    })\n  })\n});\nvar _render2 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore(storeWithMissingResponse)\n  }, /*#__PURE__*/_react.default.createElement(_ConfirmationPage.default, null))),\n  queryByText = _render2.queryByText;\n(0, _chai.expect)(queryByText(/123456/)).to.be.null;",
              "err": {},
              "uuid": "a0482a32-4b34-4774-9b84-ab687449fc8e",
              "parentUUID": "c08ebe21-e0f2-4cbc-bcb9-ec756e679c68",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should throw an error when state.form is empty",
              "fullTitle": "Confirmation page should throw an error when state.form is empty",
              "timedOut": false,
              "duration": 4,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var storeWithEmptyForm = _objectSpread(_objectSpread({}, storeBase), {}, {\n  form: {}\n});\n(0, _chai.expect)(function () {\n  (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore(storeWithEmptyForm)\n  }, /*#__PURE__*/_react.default.createElement(_ConfirmationPage.default, null)));\n}).to.throw();",
              "err": {},
              "uuid": "28970b1e-d569-433c-8f82-97ff945e68b2",
              "parentUUID": "c08ebe21-e0f2-4cbc-bcb9-ec756e679c68",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "031f1bcf-a4ca-42d0-a481-4f59a62151d0",
            "a0482a32-4b34-4774-9b84-ab687449fc8e",
            "28970b1e-d569-433c-8f82-97ff945e68b2"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 12,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "2acb1deb-6316-4771-bbfe-bba0d0631c90",
          "title": "IntroductionPage",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/40-0247/tests/unit/containers/IntroductionPage.unit.spec.jsx",
          "file": "/src/applications/simple-forms/40-0247/tests/unit/containers/IntroductionPage.unit.spec.jsx",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"IntroductionPage\"",
              "fullTitle": "IntroductionPage \"before each\" hook in \"IntroductionPage\"",
              "timedOut": false,
              "duration": 2,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _render = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_IntroductionPage.default, props))),\n  c = _render.container;\ncontainer = c;",
              "err": {},
              "uuid": "90b88179-0620-434d-89e8-9791f028d6c0",
              "parentUUID": "2acb1deb-6316-4771-bbfe-bba0d0631c90",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": "should render",
              "fullTitle": "IntroductionPage should render",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, _chai.expect)(container).to.exist;",
              "err": {},
              "uuid": "20db2538-0930-4348-8631-9cc47f2725c5",
              "parentUUID": "2acb1deb-6316-4771-bbfe-bba0d0631c90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should render v3-web-component process-list",
              "fullTitle": "IntroductionPage should render v3-web-component process-list",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, _chai.expect)(container.querySelector('va-process-list[uswds]')).to.exist;\n(0, _chai.expect)(container.querySelector('va-process-list-item[header]')).to.exist;",
              "err": {},
              "uuid": "3aa55cc8-2ad2-46e7-b743-3809d5370045",
              "parentUUID": "2acb1deb-6316-4771-bbfe-bba0d0631c90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should not render regular sign-in alert",
              "fullTitle": "IntroductionPage should not render regular sign-in alert",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, _chai.expect)(container.querySelector('.schemaform-sip-alert')).to.not.exist;",
              "err": {},
              "uuid": "3b325d95-fc9a-4523-bad1-ec370b35c5a0",
              "parentUUID": "2acb1deb-6316-4771-bbfe-bba0d0631c90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should render no-auth start-link",
              "fullTitle": "IntroductionPage should render no-auth start-link",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, _chai.expect)(container.querySelector('.no-auth-start-link')).to.exist;",
              "err": {},
              "uuid": "eaaba91c-eb09-43ed-8446-b04af929beb9",
              "parentUUID": "2acb1deb-6316-4771-bbfe-bba0d0631c90",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "20db2538-0930-4348-8631-9cc47f2725c5",
            "3aa55cc8-2ad2-46e7-b743-3809d5370045",
            "3b325d95-fc9a-4523-bad1-ec370b35c5a0",
            "eaaba91c-eb09-43ed-8446-b04af929beb9"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "feab9d9e-2d73-4b8b-a1bd-c36b4e480d10",
          "title": "trackNoAuthStartLinkClick",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/40-0247/tests/unit/helpers.unit.spec.js",
          "file": "/src/applications/simple-forms/40-0247/tests/unit/helpers.unit.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should call recordEvent with correct argument",
              "fullTitle": "trackNoAuthStartLinkClick should call recordEvent with correct argument",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var recordEventStub = _sinon.default.stub(recordEventModule, 'default');\n(0, _helpers.trackNoAuthStartLinkClick)();\n(0, _chai.expect)(recordEventStub.calledWith({\n  event: 'no-login-start-form'\n})).to.be.true;\nrecordEventStub.restore();",
              "err": {},
              "uuid": "9c26f331-9ac3-4541-b25b-57e759798a75",
              "parentUUID": "feab9d9e-2d73-4b8b-a1bd-c36b4e480d10",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "9c26f331-9ac3-4541-b25b-57e759798a75"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "7132ded3-9ccc-4197-a41d-34db2ac24c6d",
          "title": "getInitialData",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/40-0247/tests/unit/helpers.unit.spec.js",
          "file": "/src/applications/simple-forms/40-0247/tests/unit/helpers.unit.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "returns mockData if environment is localhost and Cypress is not running",
              "fullTitle": "getInitialData returns mockData if environment is localhost and Cypress is not running",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var mockData = {\n  foo: 'bar'\n};\nvar environment = {\n  isLocalhost: function isLocalhost() {\n    return true;\n  }\n};\nvar result = (0, _helpers.getInitialData)({\n  mockData: mockData,\n  environment: environment\n});\n(0, _chai.expect)(result).to.deep.equal(mockData);",
              "err": {},
              "uuid": "ff982c4a-916a-4794-b8df-b710a4f1ac4b",
              "parentUUID": "7132ded3-9ccc-4197-a41d-34db2ac24c6d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "returns undefined if environment is not localhost",
              "fullTitle": "getInitialData returns undefined if environment is not localhost",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var mockData = {\n  foo: 'bar'\n};\nvar environment = {\n  isLocalhost: function isLocalhost() {\n    return false;\n  }\n};\nvar result = (0, _helpers.getInitialData)({\n  mockData: mockData,\n  environment: environment\n});\n(0, _chai.expect)(result).to.be.undefined;",
              "err": {},
              "uuid": "f61cac6e-46e0-40bb-a1db-969b3fd405b1",
              "parentUUID": "7132ded3-9ccc-4197-a41d-34db2ac24c6d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "returns undefined if Cypress is running",
              "fullTitle": "getInitialData returns undefined if Cypress is running",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var mockData = {\n  foo: 'bar'\n};\nvar environment = {\n  isLocalhost: function isLocalhost() {\n    return true;\n  }\n};\nwindow.Cypress = true;\nvar result = (0, _helpers.getInitialData)({\n  mockData: mockData,\n  environment: environment\n});\n(0, _chai.expect)(result).to.be.undefined;\nwindow.Cypress = undefined;",
              "err": {},
              "uuid": "04682c48-5a71-4803-bc5b-3cbe6dac3529",
              "parentUUID": "7132ded3-9ccc-4197-a41d-34db2ac24c6d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "ff982c4a-916a-4794-b8df-b710a4f1ac4b",
            "f61cac6e-46e0-40bb-a1db-969b3fd405b1",
            "04682c48-5a71-4803-bc5b-3cbe6dac3529"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "73da8f61-de69-4682-8403-deeb95bb67f5",
          "title": "createPayload",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/40-0247/tests/unit/helpers.unit.spec.js",
          "file": "/src/applications/simple-forms/40-0247/tests/unit/helpers.unit.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should create a FormData object with the file and password (if provided)",
              "fullTitle": "createPayload should create a FormData object with the file and password (if provided)",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var file = new File(['test'], 'test.txt', {\n  type: 'text/plain'\n});\nvar formId = 'test-form';\nvar password = 'test-password';\nvar payload = (0, _helpers.createPayload)(file, formId, password);\n(0, _chai.expect)(payload.get('file')).to.equal(file);\n(0, _chai.expect)(payload.get('password')).to.equal(password);",
              "err": {},
              "uuid": "257b6baa-0247-4f08-9740-e321deac6a1d",
              "parentUUID": "73da8f61-de69-4682-8403-deeb95bb67f5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should create a FormData object with only the file if no password is provided",
              "fullTitle": "createPayload should create a FormData object with only the file if no password is provided",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var file = new File(['test'], 'test.txt', {\n  type: 'text/plain'\n});\nvar formId = 'test-form';\nvar payload = (0, _helpers.createPayload)(file, formId);\n(0, _chai.expect)(payload.get('file')).to.equal(file);\n(0, _chai.expect)(payload.get('password')).to.be.null;",
              "err": {},
              "uuid": "c89514b3-47ea-42aa-a79f-b3fa9a49c412",
              "parentUUID": "73da8f61-de69-4682-8403-deeb95bb67f5",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "257b6baa-0247-4f08-9740-e321deac6a1d",
            "c89514b3-47ea-42aa-a79f-b3fa9a49c412"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "b9c3b33d-cb0b-4db5-99e3-85c53feb6c79",
          "title": "parseResponse",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/40-0247/tests/unit/helpers.unit.spec.js",
          "file": "/src/applications/simple-forms/40-0247/tests/unit/helpers.unit.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should return an object with the name and confirmation code from the response",
              "fullTitle": "parseResponse should return an object with the name and confirmation code from the response",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var response = {\n  data: {\n    attributes: {\n      confirmationCode: 'test-guid',\n      name: 'test-file.txt'\n    }\n  }\n};\nvar result = (0, _helpers.parseResponse)(response);\n(0, _chai.expect)(result).to.deep.equal({\n  name: 'test-file.txt',\n  confirmationCode: 'test-guid'\n});",
              "err": {},
              "uuid": "1b993d6c-beb0-46f5-9a24-d38954980558",
              "parentUUID": "b9c3b33d-cb0b-4db5-99e3-85c53feb6c79",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "1b993d6c-beb0-46f5-9a24-d38954980558"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "2b702ef4-8bf2-48d2-8a2d-fdd2556bf6ea",
          "title": "dateOfDeathValidation",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/40-0247/tests/unit/helpers.unit.spec.js",
          "file": "/src/applications/simple-forms/40-0247/tests/unit/helpers.unit.spec.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"dateOfDeathValidation\"",
              "fullTitle": "dateOfDeathValidation \"before each\" hook in \"dateOfDeathValidation\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "errors = {\n  veteranDateOfDeath: {\n    addError: function addError(error) {\n      errors.veteranDateOfDeath.errors.push(error);\n    },\n    errors: []\n  }\n};",
              "err": {},
              "uuid": "8f24e066-e1bc-4ee2-abe3-05957891fdba",
              "parentUUID": "2b702ef4-8bf2-48d2-8a2d-fdd2556bf6ea",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": "should add an error if date of death is before date of birth",
              "fullTitle": "dateOfDeathValidation should add an error if date of death is before date of birth",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var fields = {\n  veteranDateOfBirth: '1950-01-01',\n  veteranDateOfDeath: '1940-01-01'\n};\n(0, _helpers.dateOfDeathValidation)(errors, fields);\n(0, _chai.expect)(errors.veteranDateOfDeath.errors).to.have.lengthOf(2);",
              "err": {},
              "uuid": "a789a1be-9b6d-43c8-a613-ebfc8ef11470",
              "parentUUID": "2b702ef4-8bf2-48d2-8a2d-fdd2556bf6ea",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should not add an error if date of death is after date of birth",
              "fullTitle": "dateOfDeathValidation should not add an error if date of death is after date of birth",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var fields = {\n  veteranDateOfBirth: '1950-01-01',\n  veteranDateOfDeath: '1960-01-01'\n};\n(0, _helpers.dateOfDeathValidation)(errors, fields);\n(0, _chai.expect)(errors.veteranDateOfDeath.errors).to.have.lengthOf(1);",
              "err": {},
              "uuid": "1e71fe4b-333a-4cf9-9292-d7c034168e4c",
              "parentUUID": "2b702ef4-8bf2-48d2-8a2d-fdd2556bf6ea",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should not add an error if date of death is the same as date of birth",
              "fullTitle": "dateOfDeathValidation should not add an error if date of death is the same as date of birth",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var fields = {\n  veteranDateOfBirth: '1950-01-01',\n  veteranDateOfDeath: '1950-01-01'\n};\n(0, _helpers.dateOfDeathValidation)(errors, fields);\n(0, _chai.expect)(errors.veteranDateOfDeath.errors).to.have.lengthOf(1);",
              "err": {},
              "uuid": "eedaf418-6343-452b-a66b-f572bf80f898",
              "parentUUID": "2b702ef4-8bf2-48d2-8a2d-fdd2556bf6ea",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a789a1be-9b6d-43c8-a613-ebfc8ef11470",
            "1e71fe4b-333a-4cf9-9292-d7c034168e4c",
            "eedaf418-6343-452b-a66b-f572bf80f898"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "19fcade0-eb18-4565-ae09-1029d4da6bf1",
          "title": "Additional certificates request page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/40-0247/tests/unit/pages/additionalCertificatesRequest.unit.spec.jsx",
          "file": "/src/applications/simple-forms/40-0247/tests/unit/pages/additionalCertificatesRequest.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should have appropriate number of web components",
              "fullTitle": "Additional certificates request page should have appropriate number of web components",
              "timedOut": false,
              "duration": 18,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps3 = getProps(),\n  mockStore = _getProps3.mockStore;\nvar _render3 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render3.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypesWebComponents)).to.have.lengthOf(expectedNumberOfFields);",
              "err": {},
              "uuid": "26c3776d-d7b1-4823-aefc-f7c5ee05219a",
              "parentUUID": "19fcade0-eb18-4565-ae09-1029d4da6bf1",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "26c3776d-d7b1-4823-aefc-f7c5ee05219a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 18,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "832ee24b-074a-4bab-b462-fae75cd544d0",
          "title": "Additional certificates request page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/40-0247/tests/unit/pages/additionalCertificatesRequest.unit.spec.jsx",
          "file": "/src/applications/simple-forms/40-0247/tests/unit/pages/additionalCertificatesRequest.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should show the correct number of errors on submit for web components",
              "fullTitle": "Additional certificates request page should show the correct number of errors on submit for web components",
              "timedOut": false,
              "duration": 54,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps4 = getProps(),\n  mockStore = _getProps4.mockStore;\nvar _render4 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render4.container,\n  getByRole = _render4.getByRole;\ngetByRole('button', {\n  name: /submit/i\n}).click();\nvar nodes = Array.from(container.querySelectorAll(\"\".concat(expectedFieldTypesWebComponents, \", \").concat(wrapperWebComponents)));\nvar errors = nodes.filter(function (node) {\n  return node.error;\n});\n(0, _chai.expect)(errors).to.have.lengthOf(expectedNumberOfErrors);",
              "err": {},
              "uuid": "95246701-4ff6-4a68-a541-048b5f5d235e",
              "parentUUID": "832ee24b-074a-4bab-b462-fae75cd544d0",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "95246701-4ff6-4a68-a541-048b5f5d235e"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 54,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "a8a916df-f66c-4148-8a14-41dc7ef17d65",
          "title": "Additional certificates - yes/no page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/40-0247/tests/unit/pages/additionalCertificatesYesNo.unit.spec.jsx",
          "file": "/src/applications/simple-forms/40-0247/tests/unit/pages/additionalCertificatesYesNo.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should have appropriate number of web components",
              "fullTitle": "Additional certificates - yes/no page should have appropriate number of web components",
              "timedOut": false,
              "duration": 3,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps3 = getProps(),\n  mockStore = _getProps3.mockStore;\nvar _render3 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render3.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypesWebComponents)).to.have.lengthOf(expectedNumberOfFields);",
              "err": {},
              "uuid": "06db8ea8-c4ea-41ba-be25-42840954bd8e",
              "parentUUID": "a8a916df-f66c-4148-8a14-41dc7ef17d65",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "06db8ea8-c4ea-41ba-be25-42840954bd8e"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "c9f427dd-19ad-4798-8a3a-d781ed1c0f27",
          "title": "Additional certificates - yes/no page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/40-0247/tests/unit/pages/additionalCertificatesYesNo.unit.spec.jsx",
          "file": "/src/applications/simple-forms/40-0247/tests/unit/pages/additionalCertificatesYesNo.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should show the correct number of errors on submit for web components",
              "fullTitle": "Additional certificates - yes/no page should show the correct number of errors on submit for web components",
              "timedOut": false,
              "duration": 10,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps4 = getProps(),\n  mockStore = _getProps4.mockStore;\nvar _render4 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render4.container,\n  getByRole = _render4.getByRole;\ngetByRole('button', {\n  name: /submit/i\n}).click();\nvar nodes = Array.from(container.querySelectorAll(\"\".concat(expectedFieldTypesWebComponents, \", \").concat(wrapperWebComponents)));\nvar errors = nodes.filter(function (node) {\n  return node.error;\n});\n(0, _chai.expect)(errors).to.have.lengthOf(expectedNumberOfErrors);",
              "err": {},
              "uuid": "ce8fecb6-db5c-4bfe-bd64-2bbf633e0517",
              "parentUUID": "c9f427dd-19ad-4798-8a3a-d781ed1c0f27",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "ce8fecb6-db5c-4bfe-bd64-2bbf633e0517"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 10,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "d80b8a51-e940-4098-ac76-015fe390a4b5",
          "title": "Applicant’s address page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/40-0247/tests/unit/pages/applicantAddress.unit.spec.jsx",
          "file": "/src/applications/simple-forms/40-0247/tests/unit/pages/applicantAddress.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should have appropriate number of web components",
              "fullTitle": "Applicant’s address page should have appropriate number of web components",
              "timedOut": false,
              "duration": 15,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps3 = getProps(),\n  mockStore = _getProps3.mockStore;\nvar _render3 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render3.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypesWebComponents)).to.have.lengthOf(expectedNumberOfFields);",
              "err": {},
              "uuid": "695ede34-6820-4158-ad52-5809be2eb439",
              "parentUUID": "d80b8a51-e940-4098-ac76-015fe390a4b5",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "695ede34-6820-4158-ad52-5809be2eb439"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 15,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "e194bd70-63e2-449c-88bd-ad6045707f21",
          "title": "Applicant’s address page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/40-0247/tests/unit/pages/applicantAddress.unit.spec.jsx",
          "file": "/src/applications/simple-forms/40-0247/tests/unit/pages/applicantAddress.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should show the correct number of errors on submit for web components",
              "fullTitle": "Applicant’s address page should show the correct number of errors on submit for web components",
              "timedOut": false,
              "duration": 52,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps4 = getProps(),\n  mockStore = _getProps4.mockStore;\nvar _render4 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render4.container,\n  getByRole = _render4.getByRole;\ngetByRole('button', {\n  name: /submit/i\n}).click();\nvar nodes = Array.from(container.querySelectorAll(\"\".concat(expectedFieldTypesWebComponents, \", \").concat(wrapperWebComponents)));\nvar errors = nodes.filter(function (node) {\n  return node.error;\n});\n(0, _chai.expect)(errors).to.have.lengthOf(expectedNumberOfErrors);",
              "err": {},
              "uuid": "afd05654-1235-4eee-ad84-31818c89214c",
              "parentUUID": "e194bd70-63e2-449c-88bd-ad6045707f21",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "afd05654-1235-4eee-ad84-31818c89214c"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 52,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "8774878a-bf9d-4bcd-987a-2c8186a44b6d",
          "title": "Applicant’s contact information page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/40-0247/tests/unit/pages/applicantContactInfo.unit.spec.jsx",
          "file": "/src/applications/simple-forms/40-0247/tests/unit/pages/applicantContactInfo.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should have appropriate number of web components",
              "fullTitle": "Applicant’s contact information page should have appropriate number of web components",
              "timedOut": false,
              "duration": 3,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps3 = getProps(),\n  mockStore = _getProps3.mockStore;\nvar _render3 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render3.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypesWebComponents)).to.have.lengthOf(expectedNumberOfFields);",
              "err": {},
              "uuid": "91a69a5b-f3ea-4aa5-b699-e9a0c9acd5c0",
              "parentUUID": "8774878a-bf9d-4bcd-987a-2c8186a44b6d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "91a69a5b-f3ea-4aa5-b699-e9a0c9acd5c0"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "0703184c-c1c4-4afa-8bce-7d76f95f645a",
          "title": "Applicant’s contact information page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/40-0247/tests/unit/pages/applicantContactInfo.unit.spec.jsx",
          "file": "/src/applications/simple-forms/40-0247/tests/unit/pages/applicantContactInfo.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should show the correct number of errors on submit for web components",
              "fullTitle": "Applicant’s contact information page should show the correct number of errors on submit for web components",
              "timedOut": false,
              "duration": 11,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps4 = getProps(),\n  mockStore = _getProps4.mockStore;\nvar _render4 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render4.container,\n  getByRole = _render4.getByRole;\ngetByRole('button', {\n  name: /submit/i\n}).click();\nvar nodes = Array.from(container.querySelectorAll(\"\".concat(expectedFieldTypesWebComponents, \", \").concat(wrapperWebComponents)));\nvar errors = nodes.filter(function (node) {\n  return node.error;\n});\n(0, _chai.expect)(errors).to.have.lengthOf(expectedNumberOfErrors);",
              "err": {},
              "uuid": "93db8396-0a09-4a33-9025-93578980509b",
              "parentUUID": "0703184c-c1c4-4afa-8bce-7d76f95f645a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "93db8396-0a09-4a33-9025-93578980509b"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 11,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "04686f1c-9cd2-4254-b56b-9ab8e3a1d8b2",
          "title": "Applicant’s personal information page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/40-0247/tests/unit/pages/applicantPersonalInfo.unit.spec.jsx",
          "file": "/src/applications/simple-forms/40-0247/tests/unit/pages/applicantPersonalInfo.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should have appropriate number of web components",
              "fullTitle": "Applicant’s personal information page should have appropriate number of web components",
              "timedOut": false,
              "duration": 4,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps3 = getProps(),\n  mockStore = _getProps3.mockStore;\nvar _render3 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render3.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypesWebComponents)).to.have.lengthOf(expectedNumberOfFields);",
              "err": {},
              "uuid": "8803bc66-06d8-4792-8a0b-10219c99cf3b",
              "parentUUID": "04686f1c-9cd2-4254-b56b-9ab8e3a1d8b2",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "8803bc66-06d8-4792-8a0b-10219c99cf3b"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 4,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "1d40875e-3a40-4c6f-8b80-c82729447f43",
          "title": "Applicant’s personal information page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/40-0247/tests/unit/pages/applicantPersonalInfo.unit.spec.jsx",
          "file": "/src/applications/simple-forms/40-0247/tests/unit/pages/applicantPersonalInfo.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should show the correct number of errors on submit for web components",
              "fullTitle": "Applicant’s personal information page should show the correct number of errors on submit for web components",
              "timedOut": false,
              "duration": 12,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps4 = getProps(),\n  mockStore = _getProps4.mockStore;\nvar _render4 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render4.container,\n  getByRole = _render4.getByRole;\ngetByRole('button', {\n  name: /submit/i\n}).click();\nvar nodes = Array.from(container.querySelectorAll(\"\".concat(expectedFieldTypesWebComponents, \", \").concat(wrapperWebComponents)));\nvar errors = nodes.filter(function (node) {\n  return node.error;\n});\n(0, _chai.expect)(errors).to.have.lengthOf(expectedNumberOfErrors);",
              "err": {},
              "uuid": "223c2e40-affd-4d24-97c3-00787962a9a6",
              "parentUUID": "1d40875e-3a40-4c6f-8b80-c82729447f43",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "223c2e40-affd-4d24-97c3-00787962a9a6"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 12,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "98de5224-c053-4fbc-bdcb-a8057fa39fb5",
          "title": "Certificates page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/40-0247/tests/unit/pages/certificates.unit.spec.jsx",
          "file": "/src/applications/simple-forms/40-0247/tests/unit/pages/certificates.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should have appropriate number of web components",
              "fullTitle": "Certificates page should have appropriate number of web components",
              "timedOut": false,
              "duration": 3,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps3 = getProps(),\n  mockStore = _getProps3.mockStore;\nvar _render3 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render3.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypesWebComponents)).to.have.lengthOf(expectedNumberOfFields);",
              "err": {},
              "uuid": "e267bd15-9d29-494a-ac8e-4db291f57707",
              "parentUUID": "98de5224-c053-4fbc-bdcb-a8057fa39fb5",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "e267bd15-9d29-494a-ac8e-4db291f57707"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "42045cf1-055b-48fb-b160-f15797980639",
          "title": "Certificates page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/40-0247/tests/unit/pages/certificates.unit.spec.jsx",
          "file": "/src/applications/simple-forms/40-0247/tests/unit/pages/certificates.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should show the correct number of errors on submit for web components",
              "fullTitle": "Certificates page should show the correct number of errors on submit for web components",
              "timedOut": false,
              "duration": 9,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps4 = getProps(),\n  mockStore = _getProps4.mockStore;\nvar _render4 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render4.container,\n  getByRole = _render4.getByRole;\ngetByRole('button', {\n  name: /submit/i\n}).click();\nvar nodes = Array.from(container.querySelectorAll(\"\".concat(expectedFieldTypesWebComponents, \", \").concat(wrapperWebComponents)));\nvar errors = nodes.filter(function (node) {\n  return node.error;\n});\n(0, _chai.expect)(errors).to.have.lengthOf(expectedNumberOfErrors);",
              "err": {},
              "uuid": "8b5a4b56-963e-47dd-abb5-4cd92e91b9e4",
              "parentUUID": "42045cf1-055b-48fb-b160-f15797980639",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "8b5a4b56-963e-47dd-abb5-4cd92e91b9e4"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 9,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "369664a4-40df-4a43-a1b4-14c8b7825226",
          "title": "Request type page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/40-0247/tests/unit/pages/requestType.unit.spec.jsx",
          "file": "/src/applications/simple-forms/40-0247/tests/unit/pages/requestType.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should have appropriate number of web components",
              "fullTitle": "Request type page should have appropriate number of web components",
              "timedOut": false,
              "duration": 3,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps3 = getProps(),\n  mockStore = _getProps3.mockStore;\nvar _render3 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render3.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypesWebComponents)).to.have.lengthOf(expectedNumberOfFields);",
              "err": {},
              "uuid": "7fa8d713-5f8f-45b2-830c-c4e20f013580",
              "parentUUID": "369664a4-40df-4a43-a1b4-14c8b7825226",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "7fa8d713-5f8f-45b2-830c-c4e20f013580"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "881298b7-e7c3-46cd-8955-b429179cd158",
          "title": "Request type page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/40-0247/tests/unit/pages/requestType.unit.spec.jsx",
          "file": "/src/applications/simple-forms/40-0247/tests/unit/pages/requestType.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should show the correct number of errors on submit for web components",
              "fullTitle": "Request type page should show the correct number of errors on submit for web components",
              "timedOut": false,
              "duration": 9,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps4 = getProps(),\n  mockStore = _getProps4.mockStore;\nvar _render4 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render4.container,\n  getByRole = _render4.getByRole;\ngetByRole('button', {\n  name: /submit/i\n}).click();\nvar nodes = Array.from(container.querySelectorAll(\"\".concat(expectedFieldTypesWebComponents, \", \").concat(wrapperWebComponents)));\nvar errors = nodes.filter(function (node) {\n  return node.error;\n});\n(0, _chai.expect)(errors).to.have.lengthOf(expectedNumberOfErrors);",
              "err": {},
              "uuid": "c1f3edf4-250e-4253-8b84-2ce285d61bfe",
              "parentUUID": "881298b7-e7c3-46cd-8955-b429179cd158",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "c1f3edf4-250e-4253-8b84-2ce285d61bfe"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 9,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "bd559cd9-4390-428a-b508-5b741231e0db",
          "title": "Veteran’s identification information page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/40-0247/tests/unit/pages/veteranIdInfo.unit.spec.jsx",
          "file": "/src/applications/simple-forms/40-0247/tests/unit/pages/veteranIdInfo.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should have appropriate number of web components",
              "fullTitle": "Veteran’s identification information page should have appropriate number of web components",
              "timedOut": false,
              "duration": 5,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps3 = getProps(),\n  mockStore = _getProps3.mockStore;\nvar _render3 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render3.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypesWebComponents)).to.have.lengthOf(expectedNumberOfFields);",
              "err": {},
              "uuid": "cb6daeee-535a-45cb-8a9c-df378af3213e",
              "parentUUID": "bd559cd9-4390-428a-b508-5b741231e0db",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "cb6daeee-535a-45cb-8a9c-df378af3213e"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 5,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "a2fc363b-cb8b-443b-a4cb-a3501f5acfed",
          "title": "Veteran’s identification information page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/40-0247/tests/unit/pages/veteranIdInfo.unit.spec.jsx",
          "file": "/src/applications/simple-forms/40-0247/tests/unit/pages/veteranIdInfo.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should show the correct number of errors on submit for web components",
              "fullTitle": "Veteran’s identification information page should show the correct number of errors on submit for web components",
              "timedOut": false,
              "duration": 10,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps4 = getProps(),\n  mockStore = _getProps4.mockStore;\nvar _render4 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render4.container,\n  getByRole = _render4.getByRole;\ngetByRole('button', {\n  name: /submit/i\n}).click();\nvar nodes = Array.from(container.querySelectorAll(\"\".concat(expectedFieldTypesWebComponents, \", \").concat(wrapperWebComponents)));\nvar errors = nodes.filter(function (node) {\n  return node.error;\n});\n(0, _chai.expect)(errors).to.have.lengthOf(expectedNumberOfErrors);",
              "err": {},
              "uuid": "0230e373-071c-4f7d-bcec-807d46ddba78",
              "parentUUID": "a2fc363b-cb8b-443b-a4cb-a3501f5acfed",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "0230e373-071c-4f7d-bcec-807d46ddba78"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 10,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "88f0f375-884b-4203-9454-79c0b363c47d",
          "title": "Veteran’s personal information page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/40-0247/tests/unit/pages/veteranPersonalInfo.unit.spec.jsx",
          "file": "/src/applications/simple-forms/40-0247/tests/unit/pages/veteranPersonalInfo.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should have appropriate number of web components",
              "fullTitle": "Veteran’s personal information page should have appropriate number of web components",
              "timedOut": false,
              "duration": 5,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps3 = getProps(),\n  mockStore = _getProps3.mockStore;\nvar _render3 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render3.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypesWebComponents)).to.have.lengthOf(expectedNumberOfFields);",
              "err": {},
              "uuid": "83164183-b7c6-48e4-af3e-9f2d70df4009",
              "parentUUID": "88f0f375-884b-4203-9454-79c0b363c47d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "83164183-b7c6-48e4-af3e-9f2d70df4009"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 5,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "4ca81f28-1a56-4b9c-8dab-b2a4ae3f547e",
          "title": "Veteran’s personal information page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/40-0247/tests/unit/pages/veteranPersonalInfo.unit.spec.jsx",
          "file": "/src/applications/simple-forms/40-0247/tests/unit/pages/veteranPersonalInfo.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should show the correct number of errors on submit for web components",
              "fullTitle": "Veteran’s personal information page should show the correct number of errors on submit for web components",
              "timedOut": false,
              "duration": 15,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps4 = getProps(),\n  mockStore = _getProps4.mockStore;\nvar _render4 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render4.container,\n  getByRole = _render4.getByRole;\ngetByRole('button', {\n  name: /submit/i\n}).click();\nvar nodes = Array.from(container.querySelectorAll(\"\".concat(expectedFieldTypesWebComponents, \", \").concat(wrapperWebComponents)));\nvar errors = nodes.filter(function (node) {\n  return node.error;\n});\n(0, _chai.expect)(errors).to.have.lengthOf(expectedNumberOfErrors);",
              "err": {},
              "uuid": "b5358396-3bc3-4911-88d4-d487d5491069",
              "parentUUID": "4ca81f28-1a56-4b9c-8dab-b2a4ae3f547e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "b5358396-3bc3-4911-88d4-d487d5491069"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 15,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "2e530ff9-7c9e-4c74-ac5a-033fd5004a90",
          "title": "Veteran’s supporting documentation page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/40-0247/tests/unit/pages/veteranSupportDocs.unit.spec.jsx",
          "file": "/src/applications/simple-forms/40-0247/tests/unit/pages/veteranSupportDocs.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should have appropriate number of fields",
              "fullTitle": "Veteran’s supporting documentation page should have appropriate number of fields",
              "timedOut": false,
              "duration": 9,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps = getProps(),\n  mockStore = _getProps.mockStore;\nvar _render = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypes)).to.have.lengthOf(expectedNumberOfFields);",
              "err": {},
              "uuid": "aad98909-c41a-4086-99c8-429fcd774af4",
              "parentUUID": "2e530ff9-7c9e-4c74-ac5a-033fd5004a90",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "aad98909-c41a-4086-99c8-429fcd774af4"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 9,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "1d903324-34b9-4a45-b39a-b8682c3841c7",
          "title": "Veteran’s supporting documentation page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/40-0247/tests/unit/pages/veteranSupportDocs.unit.spec.jsx",
          "file": "/src/applications/simple-forms/40-0247/tests/unit/pages/veteranSupportDocs.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should show the correct number of errors on submit",
              "fullTitle": "Veteran’s supporting documentation page should show the correct number of errors on submit",
              "timedOut": false,
              "duration": 19,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps2 = getProps(),\n  mockStore = _getProps2.mockStore;\nvar _render2 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  getByRole = _render2.getByRole,\n  queryAllByRole = _render2.queryAllByRole;\ngetByRole('button', {\n  name: /submit/i\n}).click();\nvar errors = queryAllByRole('alert');\n(0, _chai.expect)(errors).to.have.lengthOf(expectedNumberOfErrors);",
              "err": {},
              "uuid": "dbaf4010-fb24-4577-872a-ff519784d69a",
              "parentUUID": "1d903324-34b9-4a45-b39a-b8682c3841c7",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "dbaf4010-fb24-4577-872a-ff519784d69a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 19,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "8e3f47b7-3f08-4039-84b2-1eb26a0dfb71",
          "title": "CustomReviewTopContent",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/form-upload/tests/unit/components/CustomReviewTopContent.unit.spec.jsx",
          "file": "/src/applications/simple-forms/form-upload/tests/unit/components/CustomReviewTopContent.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "renders successfully",
              "fullTitle": "CustomReviewTopContent renders successfully",
              "timedOut": false,
              "duration": 9,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _subject = subject(),\n  container = _subject.container;\n(0, _chai.expect)(container).to.exist;",
              "err": {},
              "uuid": "55205be3-dfa0-4188-9c97-3d44792ff316",
              "parentUUID": "8e3f47b7-3f08-4039-84b2-1eb26a0dfb71",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "renders the correct headers",
              "fullTitle": "CustomReviewTopContent renders the correct headers",
              "timedOut": false,
              "duration": 6,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _subject7 = subject(),\n  getByText = _subject7.getByText;\n(0, _chai.expect)(getByText('Personal information')).to.exist;\n(0, _chai.expect)(getByText('Uploaded file')).to.exist;",
              "err": {},
              "uuid": "c9f109e9-9231-4af5-96c9-790d0219ea1b",
              "parentUUID": "8e3f47b7-3f08-4039-84b2-1eb26a0dfb71",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "renders the correct contact",
              "fullTitle": "CustomReviewTopContent renders the correct contact",
              "timedOut": false,
              "duration": 5,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _subject8 = subject(),\n  container = _subject8.container;\nvar phone = (0, _ui.$)('va-telephone', container);\n(0, _chai.expect)(phone).to.exist;\n(0, _chai.expect)(phone).to.have.attr('contact', '8008271000');",
              "err": {},
              "uuid": "237d55f3-1867-41b6-b62d-3e891f03ea07",
              "parentUUID": "8e3f47b7-3f08-4039-84b2-1eb26a0dfb71",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [
            {
              "uuid": "b3009aef-572c-4341-b198-7ddf6394cdab",
              "title": "renderFileInfo",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/form-upload/tests/unit/components/CustomReviewTopContent.unit.spec.jsx",
              "file": "/src/applications/simple-forms/form-upload/tests/unit/components/CustomReviewTopContent.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "renders the correct card",
                  "fullTitle": "CustomReviewTopContent renderFileInfo renders the correct card",
                  "timedOut": false,
                  "duration": 5,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var _subject2 = subject(),\n  container = _subject2.container;\nvar card = (0, _ui.$)('va-card', container);\n(0, _chai.expect)(card).to.exist;",
                  "err": {},
                  "uuid": "12885054-d292-4f96-8610-c6e87785c04c",
                  "parentUUID": "b3009aef-572c-4341-b198-7ddf6394cdab",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "renders the correct icon",
                  "fullTitle": "CustomReviewTopContent renderFileInfo renders the correct icon",
                  "timedOut": false,
                  "duration": 5,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var _subject3 = subject(),\n  container = _subject3.container;\nvar card = (0, _ui.$)('va-card', container);\nvar icon = (0, _ui.$)('va-icon', card);\n(0, _chai.expect)(icon).to.exist;\n(0, _chai.expect)(icon).to.have.attr('icon', 'file_present');",
                  "err": {},
                  "uuid": "48b573b7-23a6-4229-894a-236b43897ca7",
                  "parentUUID": "b3009aef-572c-4341-b198-7ddf6394cdab",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "renders the correct file data",
                  "fullTitle": "CustomReviewTopContent renderFileInfo renders the correct file data",
                  "timedOut": false,
                  "duration": 5,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var _subject4 = subject(),\n  getByText = _subject4.getByText;\n(0, _chai.expect)(getByText('test-file.png')).to.exist;\n(0, _chai.expect)(getByText('800 B')).to.exist;",
                  "err": {},
                  "uuid": "385fcc53-c7e6-402c-9198-9e6e288313d6",
                  "parentUUID": "b3009aef-572c-4341-b198-7ddf6394cdab",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "12885054-d292-4f96-8610-c6e87785c04c",
                "48b573b7-23a6-4229-894a-236b43897ca7",
                "385fcc53-c7e6-402c-9198-9e6e288313d6"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 15,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "5f31e0a7-ddd3-431a-94ba-1f7a8aa1c414",
              "title": "renderPersonalInfo",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/form-upload/tests/unit/components/CustomReviewTopContent.unit.spec.jsx",
              "file": "/src/applications/simple-forms/form-upload/tests/unit/components/CustomReviewTopContent.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "renders the correct personal data",
                  "fullTitle": "CustomReviewTopContent renderPersonalInfo renders the correct personal data",
                  "timedOut": false,
                  "duration": 7,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var _subject5 = subject(),\n  getByText = _subject5.getByText;\n(0, _chai.expect)(getByText('Name')).to.exist;\n(0, _chai.expect)(getByText('John Veteran')).to.exist;\n(0, _chai.expect)(getByText('Zip code')).to.exist;\n(0, _chai.expect)(getByText('55555')).to.exist;\n(0, _chai.expect)(getByText('Social security number')).to.exist;\n(0, _chai.expect)(getByText('●●●–●●–2345')).to.exist;",
                  "err": {},
                  "uuid": "9bfb365a-cea5-49e6-886c-741eeaef4c2e",
                  "parentUUID": "5f31e0a7-ddd3-431a-94ba-1f7a8aa1c414",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "9bfb365a-cea5-49e6-886c-741eeaef4c2e"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 7,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "7ca725f1-5241-4635-8a0f-d9df7b492361",
              "title": "renderContactInfo",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/form-upload/tests/unit/components/CustomReviewTopContent.unit.spec.jsx",
              "file": "/src/applications/simple-forms/form-upload/tests/unit/components/CustomReviewTopContent.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "renders phone number when provided",
                  "fullTitle": "CustomReviewTopContent renderContactInfo renders phone number when provided",
                  "timedOut": false,
                  "duration": 5,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var _subject6 = subject('with-phone-number'),\n  getByText = _subject6.getByText;\n(0, _chai.expect)(getByText('Phone number')).to.exist;\n(0, _chai.expect)(getByText('(123) 456-7890')).to.exist;",
                  "err": {},
                  "uuid": "6dbc4aae-bcd7-4c0b-a6bd-994e6905153c",
                  "parentUUID": "7ca725f1-5241-4635-8a0f-d9df7b492361",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "6dbc4aae-bcd7-4c0b-a6bd-994e6905153c"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 5,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            }
          ],
          "passes": [
            "55205be3-dfa0-4188-9c97-3d44792ff316",
            "c9f109e9-9231-4af5-96c9-790d0219ea1b",
            "237d55f3-1867-41b6-b62d-3e891f03ea07"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 20,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "a034b81a-1626-4e12-9fd1-799ce048e116",
          "title": "EditLink",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/form-upload/tests/unit/components/EditLink.unit.spec.jsx",
          "file": "/src/applications/simple-forms/form-upload/tests/unit/components/EditLink.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "renders successfully",
              "fullTitle": "EditLink renders successfully",
              "timedOut": false,
              "duration": 3,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _subject = subject(),\n  container = _subject.container;\n(0, _chai.expect)(container).to.exist;",
              "err": {},
              "uuid": "373bd138-f71f-4507-af71-6acedc290a05",
              "parentUUID": "a034b81a-1626-4e12-9fd1-799ce048e116",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "renders the correct label",
              "fullTitle": "EditLink renders the correct label",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _subject2 = subject(),\n  container = _subject2.container;\nvar link = (0, _ui.$)('va-link', container);\n(0, _chai.expect)(link).to.exist;\n(0, _chai.expect)(link).to.have.attr('text', 'Edit');",
              "err": {},
              "uuid": "0384cf2f-49d0-4093-aac1-a1b8b10ecbd7",
              "parentUUID": "a034b81a-1626-4e12-9fd1-799ce048e116",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "navigates on click",
              "fullTitle": "EditLink navigates on click",
              "timedOut": false,
              "duration": 10,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var pushSpy = _sinon.default.spy(history, 'push');\nvar _subject3 = subject(),\n  container = _subject3.container;\nvar link = container.querySelector('va-link');\n_userEvent.default.click(link);\n(0, _chai.expect)(pushSpy.calledOnce).to.be.true;\n(0, _chai.expect)(pushSpy.firstCall.args[0]).to.equal(URL);\npushSpy.restore();",
              "err": {},
              "uuid": "36b6ec52-d93d-4c26-9978-d23ce6e19b48",
              "parentUUID": "a034b81a-1626-4e12-9fd1-799ce048e116",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "373bd138-f71f-4507-af71-6acedc290a05",
            "0384cf2f-49d0-4093-aac1-a1b8b10ecbd7",
            "36b6ec52-d93d-4c26-9978-d23ce6e19b48"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 14,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "5c33e6a5-04c1-4872-95e3-f8afe3b24729",
          "title": "MUST_MATCH_ALERT",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/form-upload/tests/unit/config/constants.unit.spec.js",
          "file": "/src/applications/simple-forms/form-upload/tests/unit/config/constants.unit.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "displays prefill text if LOA is 3",
              "fullTitle": "MUST_MATCH_ALERT displays prefill text if LOA is 3",
              "timedOut": false,
              "duration": 5,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var formData = {\n  loa: 3\n};\nvar _render = (0, _react.render)(MUST_MATCH_ALERT('fake-variant', function () {}, formData)),\n  queryByText = _render.queryByText;\n(0, _chai.expect)(queryByText(textToFind)).to.be.visible;",
              "err": {},
              "uuid": "763ceaf2-e752-4120-8d31-01418334eacd",
              "parentUUID": "5c33e6a5-04c1-4872-95e3-f8afe3b24729",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "does not display prefill text if LOA is 3",
              "fullTitle": "MUST_MATCH_ALERT does not display prefill text if LOA is 3",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var formData = {\n  loa: 0\n};\nvar _render2 = (0, _react.render)(MUST_MATCH_ALERT('fake-variant', function () {}, formData)),\n  queryByText = _render2.queryByText;\n(0, _chai.expect)(queryByText(textToFind)).to.be.null;",
              "err": {},
              "uuid": "9016db7b-4e44-42b4-979c-5218697674c6",
              "parentUUID": "5c33e6a5-04c1-4872-95e3-f8afe3b24729",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "763ceaf2-e752-4120-8d31-01418334eacd",
            "9016db7b-4e44-42b4-979c-5218697674c6"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 7,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "2f3cb45d-0f39-420f-893e-5cc621c021de",
          "title": "FORM_UPLOAD_OCR_ALERT",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/form-upload/tests/unit/config/constants.unit.spec.js",
          "file": "/src/applications/simple-forms/form-upload/tests/unit/config/constants.unit.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "displays too_many_pages text if too_many_pages is in warnings",
              "fullTitle": "FORM_UPLOAD_OCR_ALERT displays too_many_pages text if too_many_pages is in warnings",
              "timedOut": false,
              "duration": 6,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _render3 = (0, _react.render)(FORM_UPLOAD_OCR_ALERT('form-number', 'pdf-download-url', function () {}, ['too_many_pages'])),\n  queryByText = _render3.queryByText;\n(0, _chai.expect)(queryByText('The file you uploaded has more pages than the form usually has.')).to.be.visible;",
              "err": {},
              "uuid": "bd44ebff-cef7-4654-8833-57e1f3b5b8c3",
              "parentUUID": "2f3cb45d-0f39-420f-893e-5cc621c021de",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "displays too_few_pages text if too_few_pages is in warnings",
              "fullTitle": "FORM_UPLOAD_OCR_ALERT displays too_few_pages text if too_few_pages is in warnings",
              "timedOut": false,
              "duration": 5,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _render4 = (0, _react.render)(FORM_UPLOAD_OCR_ALERT('form-number', 'pdf-download-url', function () {}, ['too_few_pages'])),\n  queryByText = _render4.queryByText;\n(0, _chai.expect)(queryByText('The file you uploaded has fewer pages than the original form.')).to.be.visible;",
              "err": {},
              "uuid": "fe8e5645-022c-424e-95c3-ef814b51b030",
              "parentUUID": "2f3cb45d-0f39-420f-893e-5cc621c021de",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "displays wrong_form text if wrong_form is in warnings",
              "fullTitle": "FORM_UPLOAD_OCR_ALERT displays wrong_form text if wrong_form is in warnings",
              "timedOut": false,
              "duration": 4,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _render5 = (0, _react.render)(FORM_UPLOAD_OCR_ALERT('form-number', 'pdf-download-url', function () {}, ['wrong_form'])),\n  queryByText = _render5.queryByText;\n(0, _chai.expect)(queryByText('The file you uploaded doesn’t look like a recent VA Form form-number.')).to.be.visible;",
              "err": {},
              "uuid": "77d56c44-4f58-4352-9ec4-d5dd6ab34a4b",
              "parentUUID": "2f3cb45d-0f39-420f-893e-5cc621c021de",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "displays no warning text if warnings is empty",
              "fullTitle": "FORM_UPLOAD_OCR_ALERT displays no warning text if warnings is empty",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _render6 = (0, _react.render)(FORM_UPLOAD_OCR_ALERT('form-number', 'pdf-download-url', function () {}, [])),\n  queryByText = _render6.queryByText;\n(0, _chai.expect)(queryByText('The file you uploaded has more pages than the form usually has.')).to.be.null;\n(0, _chai.expect)(queryByText('The file you uploaded has fewer pages than the original form.')).to.be.null;\n(0, _chai.expect)(queryByText('The file you uploaded doesn’t look like a recent VA Form form-number.')).to.be.null;",
              "err": {},
              "uuid": "3b9f7cd0-a9f4-4463-8cc1-4646d17da5e3",
              "parentUUID": "2f3cb45d-0f39-420f-893e-5cc621c021de",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "bd44ebff-cef7-4654-8833-57e1f3b5b8c3",
            "fe8e5645-022c-424e-95c3-ef814b51b030",
            "77d56c44-4f58-4352-9ec4-d5dd6ab34a4b",
            "3b9f7cd0-a9f4-4463-8cc1-4646d17da5e3"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 17,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "fa6ac797-ba4e-4c0e-adaf-7120d7caee56",
          "title": "FORM_UPLOAD_FILE_UPLOADING_ALERT",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/form-upload/tests/unit/config/constants.unit.spec.js",
          "file": "/src/applications/simple-forms/form-upload/tests/unit/config/constants.unit.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "displays",
              "fullTitle": "FORM_UPLOAD_FILE_UPLOADING_ALERT displays",
              "timedOut": false,
              "duration": 3,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _render7 = (0, _react.render)(FORM_UPLOAD_FILE_UPLOADING_ALERT(function () {})),\n  queryByText = _render7.queryByText;\n(0, _chai.expect)(queryByText(textToFind)).to.be.visible;",
              "err": {},
              "uuid": "17c92dcb-48fd-4a5b-ab83-ebb238964ce8",
              "parentUUID": "fa6ac797-ba4e-4c0e-adaf-7120d7caee56",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "17c92dcb-48fd-4a5b-ab83-ebb238964ce8"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "cc95b737-e80c-4864-9bb1-0207e69976d1",
          "title": "prefillTransformer",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/form-upload/tests/unit/config/prefill-transformer.unit.spec.js",
          "file": "/src/applications/simple-forms/form-upload/tests/unit/config/prefill-transformer.unit.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should transform json correctly",
              "fullTitle": "prefillTransformer should transform json correctly",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var formData = {\n  veteran: _veteran.default.data\n};\nvar transformedResult = (0, _prefillTransformer.default)(pages, formData, metadata, state);\n(0, _chai.expect)(transformedResult).to.deep.equal(_prefillTransformer2.default);",
              "err": {},
              "uuid": "11738579-b6a0-47c1-8a23-97da8dc9360d",
              "parentUUID": "cc95b737-e80c-4864-9bb1-0207e69976d1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "handles empty veteran",
              "fullTitle": "prefillTransformer handles empty veteran",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var formData = {};\nvar transformedResult = (0, _prefillTransformer.default)(pages, formData, metadata, state);\n(0, _chai.expect)(transformedResult).not.to.throw;",
              "err": {},
              "uuid": "6461bddb-d328-42c1-9bb6-ca8b466b0b94",
              "parentUUID": "cc95b737-e80c-4864-9bb1-0207e69976d1",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "11738579-b6a0-47c1-8a23-97da8dc9360d",
            "6461bddb-d328-42c1-9bb6-ca8b466b0b94"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "238441c0-5f1f-49a6-80ff-87e78ab1da48",
          "title": "transformForSubmit",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/form-upload/tests/unit/config/submit-transformer.unit.spec.js",
          "file": "/src/applications/simple-forms/form-upload/tests/unit/config/submit-transformer.unit.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should transform json correctly",
              "fullTitle": "transformForSubmit should transform json correctly",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var windowLocationStub = _sinon.default.stub(window, 'location').get(function () {\n  return {\n    pathname: 'upload/21-0779'\n  };\n});\nvar transformedResult = JSON.parse((0, _submitTransformer.default)(_form.default, _maximalTest.default));\n(0, _chai.expect)(transformedResult).to.deep.equal(_submitTransformer2.default);\nwindowLocationStub.restore();",
              "err": {},
              "uuid": "53bb6356-2fa8-4a40-bd89-f847fbc9ff21",
              "parentUUID": "238441c0-5f1f-49a6-80ff-87e78ab1da48",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "handles empty transformedData",
              "fullTitle": "transformForSubmit handles empty transformedData",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var windowLocationStub = _sinon.default.stub(window, 'location').get(function () {\n  return {\n    pathname: 'upload/21-0779'\n  };\n});\nvar transformedResult = JSON.parse((0, _submitTransformer.default)(_form.default, _minimalTest.default));\n(0, _chai.expect)(transformedResult).to.deep.equal(_minimalSubmitTransformer.default);\nwindowLocationStub.restore();",
              "err": {},
              "uuid": "e4d308c1-a0b7-4d49-80ca-1ac03766b274",
              "parentUUID": "238441c0-5f1f-49a6-80ff-87e78ab1da48",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "53bb6356-2fa8-4a40-bd89-f847fbc9ff21",
            "e4d308c1-a0b7-4d49-80ca-1ac03766b274"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "d2ccd155-be85-4510-9538-098184aa49c5",
          "title": "Confirmation page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/form-upload/tests/unit/containers/ConfirmationPage.unit.spec.jsx",
          "file": "/src/applications/simple-forms/form-upload/tests/unit/containers/ConfirmationPage.unit.spec.jsx",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"Confirmation page\"",
              "fullTitle": "Confirmation page \"before each\" hook in \"Confirmation page\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "window.location = new URL(TEST_URL);",
              "err": {},
              "uuid": "2184852f-5a09-42ea-80af-599f6d328080",
              "parentUUID": "d2ccd155-be85-4510-9538-098184aa49c5",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after each\" hook in \"Confirmation page\"",
              "fullTitle": "Confirmation page \"after each\" hook in \"Confirmation page\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, _react2.cleanup)();",
              "err": {},
              "uuid": "51d55346-d20e-422f-a981-2dc7e6b18811",
              "parentUUID": "d2ccd155-be85-4510-9538-098184aa49c5",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "throws error if state.form is undefined",
              "fullTitle": "Confirmation page throws error if state.form is undefined",
              "timedOut": false,
              "duration": 4,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var storeWithUndefinedForm = _objectSpread(_objectSpread({}, storeBase), {}, {\n  form: undefined\n});\n(0, _chai.expect)(function () {\n  (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore(storeWithUndefinedForm)\n  }, /*#__PURE__*/_react.default.createElement(_ConfirmationPage.default, null)));\n}).to.throw();",
              "err": {},
              "uuid": "50d7f868-07cb-4755-a3d2-0092ab7ab347",
              "parentUUID": "d2ccd155-be85-4510-9538-098184aa49c5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "shows status success and the correct name of applicant",
              "fullTitle": "Confirmation page shows status success and the correct name of applicant",
              "timedOut": false,
              "duration": 3,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _render = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore(storeBase)\n  }, /*#__PURE__*/_react.default.createElement(_ConfirmationPage.default, null))),\n  container = _render.container,\n  getByText = _render.getByText;\n(0, _chai.expect)(container.querySelector('va-alert')).to.have.attr('status', 'success');\ngetByText(fullNameStringRegex);",
              "err": {},
              "uuid": "171b8fce-d4a8-4ca0-93f0-2def32cdae1e",
              "parentUUID": "d2ccd155-be85-4510-9538-098184aa49c5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "handles missing submission response",
              "fullTitle": "Confirmation page handles missing submission response",
              "timedOut": false,
              "duration": 3,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var storeWithMissingResponse = _objectSpread(_objectSpread({}, storeBase), {}, {\n  form: _objectSpread(_objectSpread({}, storeBase.form), {}, {\n    submission: _objectSpread(_objectSpread({}, storeBase.form.submission), {}, {\n      response: null\n    })\n  })\n});\nvar _render2 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore(storeWithMissingResponse)\n  }, /*#__PURE__*/_react.default.createElement(_ConfirmationPage.default, null))),\n  queryByText = _render2.queryByText;\n(0, _chai.expect)(queryByText(/123456/)).to.be.null;",
              "err": {},
              "uuid": "53773dc9-0773-4984-9127-6aa28fdff164",
              "parentUUID": "d2ccd155-be85-4510-9538-098184aa49c5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "throws error when state.form is empty",
              "fullTitle": "Confirmation page throws error when state.form is empty",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var storeWithEmptyForm = _objectSpread(_objectSpread({}, storeBase), {}, {\n  form: {}\n});\n(0, _chai.expect)(function () {\n  (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore(storeWithEmptyForm)\n  }, /*#__PURE__*/_react.default.createElement(_ConfirmationPage.default, null)));\n}).to.throw();",
              "err": {},
              "uuid": "76ff2f7c-7104-47f1-80f5-43c1ffe9dedb",
              "parentUUID": "d2ccd155-be85-4510-9538-098184aa49c5",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "50d7f868-07cb-4755-a3d2-0092ab7ab347",
            "171b8fce-d4a8-4ca0-93f0-2def32cdae1e",
            "53773dc9-0773-4984-9127-6aa28fdff164",
            "76ff2f7c-7104-47f1-80f5-43c1ffe9dedb"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 12,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "52926c0b-c94b-4fd3-8acd-dda9ad9ee9a8",
          "title": "IntroductionPage",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/form-upload/tests/unit/containers/IntroductionPage.unit.spec.jsx",
          "file": "/src/applications/simple-forms/form-upload/tests/unit/containers/IntroductionPage.unit.spec.jsx",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"IntroductionPage\"",
              "fullTitle": "IntroductionPage \"before each\" hook in \"IntroductionPage\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "window.location = new URL(TEST_URL);",
              "err": {},
              "uuid": "1ad9e4ae-ab3e-4ab4-b0f3-80b4893b56a4",
              "parentUUID": "52926c0b-c94b-4fd3-8acd-dda9ad9ee9a8",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after each\" hook in \"IntroductionPage\"",
              "fullTitle": "IntroductionPage \"after each\" hook in \"IntroductionPage\"",
              "timedOut": false,
              "duration": 1,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, _react2.cleanup)();",
              "err": {},
              "uuid": "7bc810e8-602f-4ad0-835f-96c48771078f",
              "parentUUID": "52926c0b-c94b-4fd3-8acd-dda9ad9ee9a8",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "renders successfully",
              "fullTitle": "IntroductionPage renders successfully",
              "timedOut": false,
              "duration": 8,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "[true, false].forEach(function (loggedIn) {\n  var _render = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n      store: mockStore(loggedIn)\n    }, /*#__PURE__*/_react.default.createElement(_IntroductionPage.default, props))),\n    container = _render.container;\n  (0, _chai.expect)(container).to.exist;\n});",
              "err": {},
              "uuid": "67b60043-2860-4565-842b-dcaf4efee3c4",
              "parentUUID": "52926c0b-c94b-4fd3-8acd-dda9ad9ee9a8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "renders the correct title, subtitle",
              "fullTitle": "IntroductionPage renders the correct title, subtitle",
              "timedOut": false,
              "duration": 3,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getFormContent = (0, _helpers.getFormContent)(),\n  title = _getFormContent.title,\n  subTitle = _getFormContent.subTitle;\nvar _render2 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore()\n  }, /*#__PURE__*/_react.default.createElement(_IntroductionPage.default, props))),\n  getByText = _render2.getByText;\n(0, _chai.expect)(getByText(title)).to.exist;\n(0, _chai.expect)(getByText(subTitle)).to.exist;",
              "err": {},
              "uuid": "c29ae73f-5836-429b-bebf-05f2effdd4ad",
              "parentUUID": "52926c0b-c94b-4fd3-8acd-dda9ad9ee9a8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "opens the Login modal on click",
              "fullTitle": "IntroductionPage opens the Login modal on click",
              "timedOut": false,
              "duration": 5,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var dispatchSpy = _sinon.default.spy();\nvar _render3 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore(false, dispatchSpy)\n  }, /*#__PURE__*/_react.default.createElement(_IntroductionPage.default, props))),\n  container = _render3.container;\nvar button = container.querySelector('va-button');\n_userEvent.default.click(button);\n(0, _chai.expect)(dispatchSpy.calledOnce).to.be.true;",
              "err": {},
              "uuid": "36e6b211-4a7e-47a9-8626-f5bca7f20f66",
              "parentUUID": "52926c0b-c94b-4fd3-8acd-dda9ad9ee9a8",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "67b60043-2860-4565-842b-dcaf4efee3c4",
            "c29ae73f-5836-429b-bebf-05f2effdd4ad",
            "36e6b211-4a7e-47a9-8626-f5bca7f20f66"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 16,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "61c33f01-9a13-4761-9a95-d7bf13701e6e",
          "title": "Helpers",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/form-upload/tests/unit/helpers/index.unit.spec.js",
          "file": "/src/applications/simple-forms/form-upload/tests/unit/helpers/index.unit.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "88d99171-5757-422a-bb9d-67b56bb397b4",
              "title": "getFormNumber",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/form-upload/tests/unit/helpers/index.unit.spec.js",
              "file": "/src/applications/simple-forms/form-upload/tests/unit/helpers/index.unit.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "returns correct path when formNumber matches",
                  "fullTitle": "Helpers getFormNumber returns correct path when formNumber matches",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "global.window.location = {\n  pathname: '/find-forms/upload/21-0779/upload'\n};\n(0, _chai.expect)((0, _helpers.getFormNumber)()).to.eq('21-0779');",
                  "err": {},
                  "uuid": "e4969076-67e1-4595-96f9-1b13caf1c114",
                  "parentUUID": "88d99171-5757-422a-bb9d-67b56bb397b4",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "retains upper-case characters from formMappings",
                  "fullTitle": "Helpers getFormNumber retains upper-case characters from formMappings",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "global.window.location = {\n  pathname: '/find-forms/upload/21p-0518-1/upload'\n};\n(0, _chai.expect)((0, _helpers.getFormNumber)()).to.eq('21P-0518-1');",
                  "err": {},
                  "uuid": "17c25f53-a5c5-43d5-9871-a5aeafa91724",
                  "parentUUID": "88d99171-5757-422a-bb9d-67b56bb397b4",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "returns empty string when formNumber does not match",
                  "fullTitle": "Helpers getFormNumber returns empty string when formNumber does not match",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "global.window.location = {\n  pathname: 'find-forms/upload/fake-form/upload'\n};\n(0, _chai.expect)((0, _helpers.getFormNumber)()).to.eq('');",
                  "err": {},
                  "uuid": "dca407b1-1392-4455-917b-abf30fce102d",
                  "parentUUID": "88d99171-5757-422a-bb9d-67b56bb397b4",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "e4969076-67e1-4595-96f9-1b13caf1c114",
                "17c25f53-a5c5-43d5-9871-a5aeafa91724",
                "dca407b1-1392-4455-917b-abf30fce102d"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "37a384ce-3978-4d62-8f1a-c4da6d27ebc0",
              "title": "getFormContent",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/form-upload/tests/unit/helpers/index.unit.spec.js",
              "file": "/src/applications/simple-forms/form-upload/tests/unit/helpers/index.unit.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "returns appropriate content when the form number is mapped",
                  "fullTitle": "Helpers getFormContent returns appropriate content when the form number is mapped",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "global.window.location = {\n  pathname: 'find-forms/upload/21-0779/upload'\n};\n(0, _chai.expect)((0, _helpers.getFormContent)()).to.include({\n  title: 'Upload form 21-0779'\n});",
                  "err": {},
                  "uuid": "d6d04f07-ff8f-48e5-9214-d0410f9e9b3d",
                  "parentUUID": "37a384ce-3978-4d62-8f1a-c4da6d27ebc0",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "d6d04f07-ff8f-48e5-9214-d0410f9e9b3d"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "5c87c81e-75cc-49d2-8ff6-eb4968f0ba8f",
              "title": "getPdfDownloadUrl",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/form-upload/tests/unit/helpers/index.unit.spec.js",
              "file": "/src/applications/simple-forms/form-upload/tests/unit/helpers/index.unit.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "returns the url",
                  "fullTitle": "Helpers getPdfDownloadUrl returns the url",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)((0, _helpers.getPdfDownloadUrl)('21-0779')).to.eq('https://www.vba.va.gov/pubs/forms/VBA-21-0779-ARE.pdf');",
                  "err": {},
                  "uuid": "3de8effe-308a-4e47-bfce-3881120f149d",
                  "parentUUID": "5c87c81e-75cc-49d2-8ff6-eb4968f0ba8f",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "returns an empty string",
                  "fullTitle": "Helpers getPdfDownloadUrl returns an empty string",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)((0, _helpers.getPdfDownloadUrl)()).to.eq('');",
                  "err": {},
                  "uuid": "c5939213-b437-4680-a07a-9f8d225be9e8",
                  "parentUUID": "5c87c81e-75cc-49d2-8ff6-eb4968f0ba8f",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "3de8effe-308a-4e47-bfce-3881120f149d",
                "c5939213-b437-4680-a07a-9f8d225be9e8"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "bc58cc4e-4ee2-4812-aac7-082100ee208f",
              "title": "handleRouteChange",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/form-upload/tests/unit/helpers/index.unit.spec.js",
              "file": "/src/applications/simple-forms/form-upload/tests/unit/helpers/index.unit.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "pushes the href to history",
                  "fullTitle": "Helpers handleRouteChange pushes the href to history",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var fakeHref = 'fake-href';\nvar history = {\n  push: function push(_) {}\n};\nvar historySpy = _sinon.default.spy(history, 'push');\nvar route = {\n  detail: {\n    href: fakeHref\n  }\n};\n(0, _helpers.handleRouteChange)(route, history);\n(0, _chai.expect)(historySpy.calledWith(fakeHref)).to.be.true;",
                  "err": {},
                  "uuid": "ebc40bae-3c29-48cf-bae2-b2ad91216328",
                  "parentUUID": "bc58cc4e-4ee2-4812-aac7-082100ee208f",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "ebc40bae-3c29-48cf-bae2-b2ad91216328"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "b1659143-1560-441c-ab49-242a9c089a26",
              "title": "getFileSize",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/form-upload/tests/unit/helpers/index.unit.spec.js",
              "file": "/src/applications/simple-forms/form-upload/tests/unit/helpers/index.unit.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should be in bytes for values < 999",
                  "fullTitle": "Helpers getFileSize should be in bytes for values < 999",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)((0, _helpers.getFileSize)(998)).to.equal('998 B');",
                  "err": {},
                  "uuid": "50ae89f3-8f01-4567-b33b-cf15b24219f5",
                  "parentUUID": "b1659143-1560-441c-ab49-242a9c089a26",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should be in KB for values between a thousand and a million",
                  "fullTitle": "Helpers getFileSize should be in KB for values between a thousand and a million",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)((0, _helpers.getFileSize)(1024)).to.equal('1 KB');",
                  "err": {},
                  "uuid": "16809ce2-e98c-4c49-9f17-d7c70d72a5e9",
                  "parentUUID": "b1659143-1560-441c-ab49-242a9c089a26",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should be in MB for values greater than a million",
                  "fullTitle": "Helpers getFileSize should be in MB for values greater than a million",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)((0, _helpers.getFileSize)(2000000)).to.equal('2.0 MB');",
                  "err": {},
                  "uuid": "543e67a2-e2a3-4582-9c04-e99d57965521",
                  "parentUUID": "b1659143-1560-441c-ab49-242a9c089a26",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "50ae89f3-8f01-4567-b33b-cf15b24219f5",
                "16809ce2-e98c-4c49-9f17-d7c70d72a5e9",
                "543e67a2-e2a3-4582-9c04-e99d57965521"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "9b2712b7-e910-4306-bf00-b835ceb7dd1b",
              "title": "scrollAndFocusTarget",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/form-upload/tests/unit/helpers/index.unit.spec.js",
              "file": "/src/applications/simple-forms/form-upload/tests/unit/helpers/index.unit.spec.js",
              "beforeHooks": [
                {
                  "title": "\"before each\" hook in \"scrollAndFocusTarget\"",
                  "fullTitle": "Helpers scrollAndFocusTarget \"before each\" hook in \"scrollAndFocusTarget\"",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "scrollToSpy = _sinon.default.stub(scroller, 'scrollTo');",
                  "err": {},
                  "uuid": "2791c4e3-67d9-42d7-a46d-2ac2648a9778",
                  "parentUUID": "9b2712b7-e910-4306-bf00-b835ceb7dd1b",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [],
              "tests": [
                {
                  "title": "calls scrollTo",
                  "fullTitle": "Helpers scrollAndFocusTarget calls scrollTo",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _helpers.scrollAndFocusTarget)();\n(0, _chai.expect)(scrollToSpy.calledWith('topScrollElement')).to.be.true;",
                  "err": {},
                  "uuid": "b220e153-d2b3-42ae-85c6-d455093fff59",
                  "parentUUID": "9b2712b7-e910-4306-bf00-b835ceb7dd1b",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "b220e153-d2b3-42ae-85c6-d455093fff59"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "7a56da75-26ca-434c-9bcf-21f4a6958e9a",
              "title": "mask",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/form-upload/tests/unit/helpers/index.unit.spec.js",
              "file": "/src/applications/simple-forms/form-upload/tests/unit/helpers/index.unit.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return a masked string",
                  "fullTitle": "Helpers mask should return a masked string",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var node = (0, _enzyme.shallow)((0, _helpers.mask)('secret-stuf'));\n(0, _chai.expect)(node.text()).to.contain('●●●–●●–stuf');\nnode.unmount();",
                  "err": {},
                  "uuid": "0a0e542b-a510-4b9c-80d2-8150b2c03934",
                  "parentUUID": "7a56da75-26ca-434c-9bcf-21f4a6958e9a",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "0a0e542b-a510-4b9c-80d2-8150b2c03934"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "14df8dc1-a44a-46c4-8382-42a428fb7fff",
              "title": "onCloseAlert",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/form-upload/tests/unit/helpers/index.unit.spec.js",
              "file": "/src/applications/simple-forms/form-upload/tests/unit/helpers/index.unit.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "sets e.target.visible to false",
                  "fullTitle": "Helpers onCloseAlert sets e.target.visible to false",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var e = {\n  target: {\n    visible: true\n  }\n};\n(0, _helpers.onCloseAlert)(e);\n(0, _chai.expect)(e.target.visible).to.eq(false);",
                  "err": {},
                  "uuid": "67bc3be0-f126-4811-8369-89bf3366fa47",
                  "parentUUID": "14df8dc1-a44a-46c4-8382-42a428fb7fff",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "67bc3be0-f126-4811-8369-89bf3366fa47"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "3fd00feb-d2f7-40c8-a756-6a8e4386f4a3",
              "title": "getMockData",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/form-upload/tests/unit/helpers/index.unit.spec.js",
              "file": "/src/applications/simple-forms/form-upload/tests/unit/helpers/index.unit.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "returns the mockData",
                  "fullTitle": "Helpers getMockData returns the mockData",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)((0, _helpers.getMockData)(mockData, function () {\n  return true;\n})).to.eq(mockData);",
                  "err": {},
                  "uuid": "05e5dd61-e068-4f53-a7b0-540223900c10",
                  "parentUUID": "3fd00feb-d2f7-40c8-a756-6a8e4386f4a3",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "returns undefined",
                  "fullTitle": "Helpers getMockData returns undefined",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)((0, _helpers.getMockData)(mockData, function () {\n  return false;\n})).to.eq(undefined);",
                  "err": {},
                  "uuid": "fd9937c9-7604-4b70-b9bd-ba80521c068f",
                  "parentUUID": "3fd00feb-d2f7-40c8-a756-6a8e4386f4a3",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "05e5dd61-e068-4f53-a7b0-540223900c10",
                "fd9937c9-7604-4b70-b9bd-ba80521c068f"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "f792fe73-760e-4d45-b003-92a56519b3b1",
              "title": "formattedPhoneNumber",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/form-upload/tests/unit/helpers/index.unit.spec.js",
              "file": "/src/applications/simple-forms/form-upload/tests/unit/helpers/index.unit.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "formats the phone number",
                  "fullTitle": "Helpers formattedPhoneNumber formats the phone number",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)((0, _helpers.formattedPhoneNumber)('12345-67890')).to.eq('(123) 456-7890');",
                  "err": {},
                  "uuid": "31f44144-94c7-42b6-b058-e1177270a8ce",
                  "parentUUID": "f792fe73-760e-4d45-b003-92a56519b3b1",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "31f44144-94c7-42b6-b058-e1177270a8ce"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "4b005187-8e66-4d5c-b06d-f21fb1e185a1",
              "title": "onClickContinue",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/form-upload/tests/unit/helpers/index.unit.spec.js",
              "file": "/src/applications/simple-forms/form-upload/tests/unit/helpers/index.unit.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "sets continueClicked to true",
                  "fullTitle": "Helpers onClickContinue sets continueClicked to true",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var props = {\n  data: {\n    uploadedFile: {\n      name: 'uploading'\n    }\n  }\n};\nvar setContinueClicked = _sinon.default.spy();\n(0, _helpers.onClickContinue)(props, setContinueClicked);\n(0, _chai.expect)(setContinueClicked.calledOnce).to.be.true;",
                  "err": {},
                  "uuid": "79f7d108-18f7-4468-ad4d-d8b38b76468a",
                  "parentUUID": "4b005187-8e66-4d5c-b06d-f21fb1e185a1",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "calls onContinue if file is not currently uploading",
                  "fullTitle": "Helpers onClickContinue calls onContinue if file is not currently uploading",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var onContinue = _sinon.default.spy();\nvar props = {\n  data: {\n    uploadedFile: {\n      name: 'file-name'\n    }\n  },\n  onContinue: onContinue\n};\n(0, _helpers.onClickContinue)(props, function () {});\n(0, _chai.expect)(onContinue.calledOnce).to.be.true;",
                  "err": {},
                  "uuid": "9a976757-fcfe-4164-8548-0615d72fcc0c",
                  "parentUUID": "4b005187-8e66-4d5c-b06d-f21fb1e185a1",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "79f7d108-18f7-4468-ad4d-d8b38b76468a",
                "9a976757-fcfe-4164-8548-0615d72fcc0c"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "d144e64f-b325-4602-8d5a-259b261d7b23",
              "title": "getAlert",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/form-upload/tests/unit/helpers/index.unit.spec.js",
              "file": "/src/applications/simple-forms/form-upload/tests/unit/helpers/index.unit.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "displays the OCR alert if there are warnings",
                  "fullTitle": "Helpers getAlert displays the OCR alert if there are warnings",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var props = {\n  data: {\n    uploadedFile: {\n      warnings: ['warning']\n    }\n  }\n};\nvar continueClicked = false;\nvar stub = _sinon.default.stub(constants, 'FORM_UPLOAD_OCR_ALERT');\n(0, _helpers.getAlert)(props, continueClicked);\n(0, _chai.expect)(stub.calledOnce).to.be.true;",
                  "err": {},
                  "uuid": "675f2a1e-b0fb-4898-805f-843cae9b79b1",
                  "parentUUID": "d144e64f-b325-4602-8d5a-259b261d7b23",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "displays the uploading... alert if a file is still uploading and Continue was clicked",
                  "fullTitle": "Helpers getAlert displays the uploading... alert if a file is still uploading and Continue was clicked",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var props = {\n  data: {\n    uploadedFile: {\n      name: 'uploading'\n    }\n  }\n};\nvar continueClicked = true;\nvar stub = _sinon.default.stub(constants, 'FORM_UPLOAD_FILE_UPLOADING_ALERT');\n(0, _helpers.getAlert)(props, continueClicked);\n(0, _chai.expect)(stub.calledOnce).to.be.true;",
                  "err": {},
                  "uuid": "b8174d00-bcf2-4f3d-bbec-588fce3a8774",
                  "parentUUID": "d144e64f-b325-4602-8d5a-259b261d7b23",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "displays instructions alert if no warnings and not currently uploading",
                  "fullTitle": "Helpers getAlert displays instructions alert if no warnings and not currently uploading",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var props = {\n  data: {\n    uploadedFile: {}\n  }\n};\nvar continueClicked = false;\nvar stub = _sinon.default.stub(constants, 'FORM_UPLOAD_INSTRUCTION_ALERT');\n(0, _helpers.getAlert)(props, continueClicked);\n(0, _chai.expect)(stub.calledOnce).to.be.true;",
                  "err": {},
                  "uuid": "d7acda85-90d8-4716-9482-2ff2d8b451ab",
                  "parentUUID": "d144e64f-b325-4602-8d5a-259b261d7b23",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "675f2a1e-b0fb-4898-805f-843cae9b79b1",
                "b8174d00-bcf2-4f3d-bbec-588fce3a8774",
                "d7acda85-90d8-4716-9482-2ff2d8b451ab"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 3,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "816686d5-d4fd-443d-b737-5ea9414f71b9",
          "title": "CustomTopContent",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/form-upload/tests/unit/pages/helpers.unit.spec.jsx",
          "file": "/src/applications/simple-forms/form-upload/tests/unit/pages/helpers.unit.spec.jsx",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"CustomTopContent\"",
              "fullTitle": "CustomTopContent \"before each\" hook in \"CustomTopContent\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "window.location = new URL(TEST_URL);",
              "err": {},
              "uuid": "1146dfed-9bda-4f1a-b488-ddfb17634e84",
              "parentUUID": "816686d5-d4fd-443d-b737-5ea9414f71b9",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after each\" hook in \"CustomTopContent\"",
              "fullTitle": "CustomTopContent \"after each\" hook in \"CustomTopContent\"",
              "timedOut": false,
              "duration": 1,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, _react2.cleanup)();",
              "err": {},
              "uuid": "a81ff4df-997e-4001-855d-628e7a29ee87",
              "parentUUID": "816686d5-d4fd-443d-b737-5ea9414f71b9",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "renders successfully",
              "fullTitle": "CustomTopContent renders successfully",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _subject = subject(),\n  container = _subject.container;\n(0, _chai.expect)(container).to.exist;",
              "err": {},
              "uuid": "95804aed-9606-4389-86c1-c8274f6b5d54",
              "parentUUID": "816686d5-d4fd-443d-b737-5ea9414f71b9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "renders the correct breadcrumbs",
              "fullTitle": "CustomTopContent renders the correct breadcrumbs",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _subject2 = subject(),\n  container = _subject2.container;\nvar breadcrumbs = (0, _ui.$)('va-breadcrumbs', container);\n(0, _chai.expect)(breadcrumbs).to.exist;\n// TODO: Swap this commented bit back in when the static page works.\n// expect(breadcrumbs).to.have.attr(\n//   'breadcrumb-list',\n//   '[{\"href\":\"/\",\"label\":\"VA.gov home\"},{\"href\":\"/find-forms\",\"label\":\"Find a VA form\"},{\"href\":\"/find-forms/upload\",\"label\":\"Upload VA forms\"},{\"href\":\"/find-forms/upload/21-0779/introduction\",\"label\":\"Upload form 21-0779\"}]',\n// );\n(0, _chai.expect)(breadcrumbs).to.have.attr('breadcrumb-list', '[{\"href\":\"/\",\"label\":\"VA.gov home\"},{\"href\":\"/find-forms\",\"label\":\"Find a VA form\"},{\"href\":\"/find-forms/upload/21-0779/introduction\",\"label\":\"Upload form 21-0779\"}]');",
              "err": {},
              "uuid": "4a3a4c77-c37e-42db-ab84-0497e4ae5b54",
              "parentUUID": "816686d5-d4fd-443d-b737-5ea9414f71b9",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "95804aed-9606-4389-86c1-c8274f6b5d54",
            "4a3a4c77-c37e-42db-ab84-0497e4ae5b54"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "33d5dec2-34c2-405e-9bfb-591a5febbee8",
          "title": "NameAndZipCodePage",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/form-upload/tests/unit/pages/NameAndZipCodePage.unit.spec.jsx",
          "file": "/src/applications/simple-forms/form-upload/tests/unit/pages/NameAndZipCodePage.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "renders successfully",
              "fullTitle": "NameAndZipCodePage renders successfully",
              "timedOut": false,
              "duration": 5,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _subject = subject(),\n  container = _subject.container;\n(0, _chai.expect)(container).to.exist;",
              "err": {},
              "uuid": "06dbe482-9d96-44d5-9869-059893502bec",
              "parentUUID": "33d5dec2-34c2-405e-9bfb-591a5febbee8",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "06dbe482-9d96-44d5-9869-059893502bec"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 5,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "094dedd8-4272-4924-8d95-03e4ba5e5df3",
          "title": "UploadPage",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/form-upload/tests/unit/pages/UploadPage.unit.spec.jsx",
          "file": "/src/applications/simple-forms/form-upload/tests/unit/pages/UploadPage.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "renders successfully",
              "fullTitle": "UploadPage renders successfully",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _subject = subject(),\n  container = _subject.container;\n(0, _chai.expect)(container).to.exist;",
              "err": {},
              "uuid": "c792322c-9649-4e55-a02a-944175b8bd9a",
              "parentUUID": "094dedd8-4272-4924-8d95-03e4ba5e5df3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "updates the title when there are no warnings",
              "fullTitle": "UploadPage updates the title when there are no warnings",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var result = uiSchema.uploadedFile['ui:options'].updateUiSchema({});\n(0, _chai.expect)(result).to.deep.equal({\n  'ui:title': 'Upload form '\n});",
              "err": {},
              "uuid": "5fd6db9a-98b9-43b6-b906-274027e44181",
              "parentUUID": "094dedd8-4272-4924-8d95-03e4ba5e5df3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "updates the title when there are warnings",
              "fullTitle": "UploadPage updates the title when there are warnings",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var formData = {\n  uploadedFile: {\n    warnings: ['bad news']\n  }\n};\nvar result = uiSchema.uploadedFile['ui:options'].updateUiSchema(formData);\n(0, _chai.expect)(result).to.deep.equal({\n  'ui:title': 'form '\n});",
              "err": {},
              "uuid": "50e61da9-4b17-456e-8229-7c2694eb1540",
              "parentUUID": "094dedd8-4272-4924-8d95-03e4ba5e5df3",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "c792322c-9649-4e55-a02a-944175b8bd9a",
            "5fd6db9a-98b9-43b6-b906-274027e44181",
            "50e61da9-4b17-456e-8229-7c2694eb1540"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "82c25d17-3326-4037-ab72-c4a3bc62399b",
          "title": "VeteranIdentificationInformationPage",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/form-upload/tests/unit/pages/VeteranIdentificationInformationPage.unit.spec.jsx",
          "file": "/src/applications/simple-forms/form-upload/tests/unit/pages/VeteranIdentificationInformationPage.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "renders successfully",
              "fullTitle": "VeteranIdentificationInformationPage renders successfully",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _subject = subject(),\n  container = _subject.container;\n(0, _chai.expect)(container).to.exist;",
              "err": {},
              "uuid": "d777d356-fd01-48d2-b985-2527ea21b289",
              "parentUUID": "82c25d17-3326-4037-ab72-c4a3bc62399b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "d777d356-fd01-48d2-b985-2527ea21b289"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "2696058b-1d76-417f-8b3b-ece7401a1758",
          "title": "CompensationTypeDescription",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/mock-simple-forms-patterns/tests/components/formDescriptions.unit.spec.jsx",
          "file": "/src/applications/simple-forms/mock-simple-forms-patterns/tests/components/formDescriptions.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should render",
              "fullTitle": "CompensationTypeDescription should render",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _render = (0, _react.render)(_formDescriptions.CompensationTypeDescription),\n  container = _render.container;\nvar selector = container.querySelector('va-additional-info');\n(0, _chai.expect)(selector).to.exist;",
              "err": {},
              "uuid": "535c55cb-9abb-4d3f-a60b-3ed7414b6b68",
              "parentUUID": "2696058b-1d76-417f-8b3b-ece7401a1758",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "535c55cb-9abb-4d3f-a60b-3ed7414b6b68"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "efb73562-42c4-43db-aecc-02cc8b7a91db",
          "title": "ChildViewCard",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/mock-simple-forms-patterns/tests/components/viewElements.unit.spec.jsx",
          "file": "/src/applications/simple-forms/mock-simple-forms-patterns/tests/components/viewElements.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should render",
              "fullTitle": "ChildViewCard should render",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var formData = {\n  fullName: {\n    first: 'First',\n    last: 'Last'\n  }\n};\nvar _render = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_viewElements.ChildViewCard, {\n    formData: formData\n  })),\n  getByText = _render.getByText;\ngetByText('First Last');",
              "err": {},
              "uuid": "e58b4bf4-9f1e-400d-b6d2-5cf450b5f761",
              "parentUUID": "efb73562-42c4-43db-aecc-02cc8b7a91db",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "e58b4bf4-9f1e-400d-b6d2-5cf450b5f761"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "93dd014e-5661-4e14-93bc-92b02961edf6",
          "title": "ChildNameHeader",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/mock-simple-forms-patterns/tests/components/viewElements.unit.spec.jsx",
          "file": "/src/applications/simple-forms/mock-simple-forms-patterns/tests/components/viewElements.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should render",
              "fullTitle": "ChildNameHeader should render",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var formData = {\n  fullName: {\n    first: 'fiRSt',\n    last: 'LaST'\n  }\n};\nvar _render2 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_viewElements.ChildNameHeader, {\n    formData: formData\n  })),\n  getByText = _render2.getByText;\ngetByText('First Last');",
              "err": {},
              "uuid": "6307ad9b-0538-40d5-b579-16179d47e9a7",
              "parentUUID": "93dd014e-5661-4e14-93bc-92b02961edf6",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "6307ad9b-0538-40d5-b579-16179d47e9a7"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "239dac88-adf7-4324-854a-6106c405f5d0",
          "title": "FacilityDates",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/mock-simple-forms-patterns/tests/components/viewElements.unit.spec.jsx",
          "file": "/src/applications/simple-forms/mock-simple-forms-patterns/tests/components/viewElements.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should render",
              "fullTitle": "FacilityDates should render",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var formData = {\n  facilityName: 'Facility Name',\n  from: '2000-01-01',\n  to: '2000-01-02'\n};\nvar _render3 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_viewElements.FacilityDates, {\n    formData: formData\n  })),\n  getByText = _render3.getByText;\ngetByText('Facility Name');",
              "err": {},
              "uuid": "b78d8f87-0840-4292-aa4a-26317e52e568",
              "parentUUID": "239dac88-adf7-4324-854a-6106c405f5d0",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "b78d8f87-0840-4292-aa4a-26317e52e568"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "7d821461-6726-4e9c-a6c5-6a5f05e8d468",
          "title": "RecordHeading",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/mock-simple-forms-patterns/tests/components/viewElements.unit.spec.jsx",
          "file": "/src/applications/simple-forms/mock-simple-forms-patterns/tests/components/viewElements.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should render",
              "fullTitle": "RecordHeading should render",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var formData = {\n  name: 'Name'\n};\nvar _render4 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_viewElements.RecordHeading, {\n    formData: formData\n  })),\n  getByText = _render4.getByText;\ngetByText('Name');",
              "err": {},
              "uuid": "9da70fa9-2774-4a54-a5b4-a8973f9e1aaa",
              "parentUUID": "7d821461-6726-4e9c-a6c5-6a5f05e8d468",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "9da70fa9-2774-4a54-a5b4-a8973f9e1aaa"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "9f344b45-d59f-4c75-8fca-e9a2088c18f5",
          "title": "Confirmation page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/mock-simple-forms-patterns/tests/containers/ConfirmationPage.unit.spec.jsx",
          "file": "/src/applications/simple-forms/mock-simple-forms-patterns/tests/containers/ConfirmationPage.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "it should show status success and the correct name of person",
              "fullTitle": "Confirmation page it should show status success and the correct name of person",
              "timedOut": false,
              "duration": 4,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var route = {\n  formConfig: {\n    chapters: {\n      chapter1: {\n        title: 'Chapter 1',\n        pages: {\n          page1: {\n            title: 'Page 1',\n            schema: {},\n            uiSchema: {}\n          }\n        }\n      }\n    }\n  }\n};\nvar _render = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore(storeBase)\n  }, /*#__PURE__*/_react.default.createElement(_ConfirmationPage.default, {\n    route: route\n  }))),\n  container = _render.container;\n(0, _chai.expect)(container.querySelector('va-alert')).to.have.attr('status', 'success');",
              "err": {},
              "uuid": "37452c3f-753f-4ed1-8bca-456476ec2666",
              "parentUUID": "9f344b45-d59f-4c75-8fca-e9a2088c18f5",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "37452c3f-753f-4ed1-8bca-456476ec2666"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 4,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "af8f0063-daf0-428a-bd65-b0d5851a320b",
          "title": "IntroductionPage",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/mock-simple-forms-patterns/tests/containers/IntroductionPage.unit.spec.jsx",
          "file": "/src/applications/simple-forms/mock-simple-forms-patterns/tests/containers/IntroductionPage.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should render",
              "fullTitle": "IntroductionPage should render",
              "timedOut": false,
              "duration": 5,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _render = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_IntroductionPage.default, props))),\n  container = _render.container;\n(0, _chai.expect)(container).to.exist;",
              "err": {},
              "uuid": "304dc8e9-43d4-4e33-bdb1-6a9fc5b1fcbc",
              "parentUUID": "af8f0063-daf0-428a-bd65-b0d5851a320b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "304dc8e9-43d4-4e33-bdb1-6a9fc5b1fcbc"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 5,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "9b9bca46-10a6-420d-88b2-0523f44989c6",
          "title": "array multi page aggregate page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/mock-simple-forms-patterns/tests/pages/mockArrayMultiPageAggregateStart.unit.spec.jsx",
          "file": "/src/applications/simple-forms/mock-simple-forms-patterns/tests/pages/mockArrayMultiPageAggregateStart.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should have appropriate number of web components",
              "fullTitle": "array multi page aggregate page should have appropriate number of web components",
              "timedOut": false,
              "duration": 9,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps3 = getProps(),\n  mockStore = _getProps3.mockStore;\nvar _render3 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render3.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypesWebComponents)).to.have.lengthOf(expectedNumberOfFields);",
              "err": {},
              "uuid": "7f1f1466-7d89-4e90-88a9-1189c02ef647",
              "parentUUID": "9b9bca46-10a6-420d-88b2-0523f44989c6",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "7f1f1466-7d89-4e90-88a9-1189c02ef647"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 9,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "a2251baa-0613-4ebb-848f-e6c2efbd2660",
          "title": "array multi page aggregate page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/mock-simple-forms-patterns/tests/pages/mockArrayMultiPageAggregateStart.unit.spec.jsx",
          "file": "/src/applications/simple-forms/mock-simple-forms-patterns/tests/pages/mockArrayMultiPageAggregateStart.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should show the correct number of errors on submit for web components",
              "fullTitle": "array multi page aggregate page should show the correct number of errors on submit for web components",
              "timedOut": false,
              "duration": 36,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps4 = getProps(),\n  mockStore = _getProps4.mockStore;\nvar _render4 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render4.container,\n  getByRole = _render4.getByRole;\ngetByRole('button', {\n  name: /submit/i\n}).click();\nvar nodes = Array.from(container.querySelectorAll(\"\".concat(expectedFieldTypesWebComponents, \", \").concat(wrapperWebComponents)));\nvar errors = nodes.filter(function (node) {\n  return node.error;\n});\n(0, _chai.expect)(errors).to.have.lengthOf(expectedNumberOfErrors);",
              "err": {},
              "uuid": "9d9986fb-d795-483c-9edc-61aff1d142b3",
              "parentUUID": "a2251baa-0613-4ebb-848f-e6c2efbd2660",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "9d9986fb-d795-483c-9edc-61aff1d142b3"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 36,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "3fcc07ff-3505-4add-9a06-4b991fd33e7e",
          "title": "array multi page aggregate page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/mock-simple-forms-patterns/tests/pages/mockArrayMultiPageAggregateStart.unit.spec.jsx",
          "file": "/src/applications/simple-forms/mock-simple-forms-patterns/tests/pages/mockArrayMultiPageAggregateStart.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should have appropriate number of fields",
              "fullTitle": "array multi page aggregate page should have appropriate number of fields",
              "timedOut": false,
              "duration": 9,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps = getProps(),\n  mockStore = _getProps.mockStore;\nvar _render = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypes)).to.have.lengthOf(expectedNumberOfFields);",
              "err": {},
              "uuid": "ce124a17-3f8d-474a-a8bb-d726b40f1252",
              "parentUUID": "3fcc07ff-3505-4add-9a06-4b991fd33e7e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "ce124a17-3f8d-474a-a8bb-d726b40f1252"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 9,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "fb95b3e2-f356-4b58-9ccb-c4c0cdf817b7",
          "title": "array multi page aggregate page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/mock-simple-forms-patterns/tests/pages/mockArrayMultiPageAggregateStart.unit.spec.jsx",
          "file": "/src/applications/simple-forms/mock-simple-forms-patterns/tests/pages/mockArrayMultiPageAggregateStart.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should show the correct number of errors on submit",
              "fullTitle": "array multi page aggregate page should show the correct number of errors on submit",
              "timedOut": false,
              "duration": 29,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps2 = getProps(),\n  mockStore = _getProps2.mockStore;\nvar _render2 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  getByRole = _render2.getByRole,\n  queryAllByRole = _render2.queryAllByRole;\ngetByRole('button', {\n  name: /submit/i\n}).click();\nvar errors = queryAllByRole('alert');\n(0, _chai.expect)(errors).to.have.lengthOf(expectedNumberOfErrors);",
              "err": {},
              "uuid": "5c4663e4-617b-44ed-89ef-b037d619749f",
              "parentUUID": "fb95b3e2-f356-4b58-9ccb-c4c0cdf817b7",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "5c4663e4-617b-44ed-89ef-b037d619749f"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 29,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "dee38a4c-0ed4-4994-87cd-5201d910b4ec",
          "title": "array multi page builder summary page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/mock-simple-forms-patterns/tests/pages/mockArrayMultiPageBuilderSummary.unit.spec.jsx",
          "file": "/src/applications/simple-forms/mock-simple-forms-patterns/tests/pages/mockArrayMultiPageBuilderSummary.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should have appropriate number of web components",
              "fullTitle": "array multi page builder summary page should have appropriate number of web components",
              "timedOut": false,
              "duration": 5,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps3 = getProps(),\n  mockStore = _getProps3.mockStore;\nvar _render3 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render3.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypesWebComponents)).to.have.lengthOf(expectedNumberOfFields);",
              "err": {},
              "uuid": "3c85b8c6-845c-43c9-872c-cdfb26d5c3b0",
              "parentUUID": "dee38a4c-0ed4-4994-87cd-5201d910b4ec",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "3c85b8c6-845c-43c9-872c-cdfb26d5c3b0"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 5,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "ac078cc3-0ca1-44b0-be34-15de3b2b16ad",
          "title": "array multi page builder summary page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/mock-simple-forms-patterns/tests/pages/mockArrayMultiPageBuilderSummary.unit.spec.jsx",
          "file": "/src/applications/simple-forms/mock-simple-forms-patterns/tests/pages/mockArrayMultiPageBuilderSummary.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should show the correct number of errors on submit for web components",
              "fullTitle": "array multi page builder summary page should show the correct number of errors on submit for web components",
              "timedOut": false,
              "duration": 10,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps4 = getProps(),\n  mockStore = _getProps4.mockStore;\nvar _render4 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render4.container,\n  getByRole = _render4.getByRole;\ngetByRole('button', {\n  name: /submit/i\n}).click();\nvar nodes = Array.from(container.querySelectorAll(\"\".concat(expectedFieldTypesWebComponents, \", \").concat(wrapperWebComponents)));\nvar errors = nodes.filter(function (node) {\n  return node.error;\n});\n(0, _chai.expect)(errors).to.have.lengthOf(expectedNumberOfErrors);",
              "err": {},
              "uuid": "a79fab4e-6c73-467c-8363-84218ca93193",
              "parentUUID": "ac078cc3-0ca1-44b0-be34-15de3b2b16ad",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a79fab4e-6c73-467c-8363-84218ca93193"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 10,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "ac2cf7a7-dd8f-44fd-a9de-2c4ff8ddb0c0",
          "title": "array multi page builder summary page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/mock-simple-forms-patterns/tests/pages/mockArrayMultiPageBuilderSummary.unit.spec.jsx",
          "file": "/src/applications/simple-forms/mock-simple-forms-patterns/tests/pages/mockArrayMultiPageBuilderSummary.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should have appropriate number of fields",
              "fullTitle": "array multi page builder summary page should have appropriate number of fields",
              "timedOut": false,
              "duration": 3,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps = getProps(),\n  mockStore = _getProps.mockStore;\nvar _render = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypes)).to.have.lengthOf(expectedNumberOfFields);",
              "err": {},
              "uuid": "2dab1b51-88dc-409b-8a2f-5372e0c09604",
              "parentUUID": "ac2cf7a7-dd8f-44fd-a9de-2c4ff8ddb0c0",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "2dab1b51-88dc-409b-8a2f-5372e0c09604"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "6bf072b8-bca4-4ae0-a23e-bb2a4d7690aa",
          "title": "array multi page builder summary page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/mock-simple-forms-patterns/tests/pages/mockArrayMultiPageBuilderSummary.unit.spec.jsx",
          "file": "/src/applications/simple-forms/mock-simple-forms-patterns/tests/pages/mockArrayMultiPageBuilderSummary.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should show the correct number of errors on submit",
              "fullTitle": "array multi page builder summary page should show the correct number of errors on submit",
              "timedOut": false,
              "duration": 10,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps2 = getProps(),\n  mockStore = _getProps2.mockStore;\nvar _render2 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  getByRole = _render2.getByRole,\n  queryAllByRole = _render2.queryAllByRole;\ngetByRole('button', {\n  name: /submit/i\n}).click();\nvar errors = queryAllByRole('alert');\n(0, _chai.expect)(errors).to.have.lengthOf(expectedNumberOfErrors);",
              "err": {},
              "uuid": "61371e93-35fe-4d1b-a020-11b042a6dd20",
              "parentUUID": "6bf072b8-bca4-4ae0-a23e-bb2a4d7690aa",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "61371e93-35fe-4d1b-a020-11b042a6dd20"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 10,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "bd35927b-900a-4aab-889e-0b4f100dc8d6",
          "title": "array single page page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/mock-simple-forms-patterns/tests/pages/mockArraySinglePage.unit.spec.jsx",
          "file": "/src/applications/simple-forms/mock-simple-forms-patterns/tests/pages/mockArraySinglePage.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should have appropriate number of web components",
              "fullTitle": "array single page page should have appropriate number of web components",
              "timedOut": false,
              "duration": 11,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps3 = getProps(),\n  mockStore = _getProps3.mockStore;\nvar _render3 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render3.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypesWebComponents)).to.have.lengthOf(expectedNumberOfFields);",
              "err": {},
              "uuid": "5bc9b145-17ec-49d2-b866-b813e029aeb8",
              "parentUUID": "bd35927b-900a-4aab-889e-0b4f100dc8d6",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "5bc9b145-17ec-49d2-b866-b813e029aeb8"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 11,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "0d092e64-4ce4-482d-86d4-337f8a047613",
          "title": "array single page page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/mock-simple-forms-patterns/tests/pages/mockArraySinglePage.unit.spec.jsx",
          "file": "/src/applications/simple-forms/mock-simple-forms-patterns/tests/pages/mockArraySinglePage.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should show the correct number of errors on submit for web components",
              "fullTitle": "array single page page should show the correct number of errors on submit for web components",
              "timedOut": false,
              "duration": 35,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps4 = getProps(),\n  mockStore = _getProps4.mockStore;\nvar _render4 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render4.container,\n  getByRole = _render4.getByRole;\ngetByRole('button', {\n  name: /submit/i\n}).click();\nvar nodes = Array.from(container.querySelectorAll(\"\".concat(expectedFieldTypesWebComponents, \", \").concat(wrapperWebComponents)));\nvar errors = nodes.filter(function (node) {\n  return node.error;\n});\n(0, _chai.expect)(errors).to.have.lengthOf(expectedNumberOfErrors);",
              "err": {},
              "uuid": "40b2eca9-8e0d-4532-a01d-538bba0e2025",
              "parentUUID": "0d092e64-4ce4-482d-86d4-337f8a047613",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "40b2eca9-8e0d-4532-a01d-538bba0e2025"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 35,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "66fe9643-9318-4ba9-98c7-37d62a1aee3e",
          "title": "array single page page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/mock-simple-forms-patterns/tests/pages/mockArraySinglePage.unit.spec.jsx",
          "file": "/src/applications/simple-forms/mock-simple-forms-patterns/tests/pages/mockArraySinglePage.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should have appropriate number of fields",
              "fullTitle": "array single page page should have appropriate number of fields",
              "timedOut": false,
              "duration": 11,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps = getProps(),\n  mockStore = _getProps.mockStore;\nvar _render = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypes)).to.have.lengthOf(expectedNumberOfFields);",
              "err": {},
              "uuid": "1d120a2f-6780-4d9c-81cb-8f52889421b8",
              "parentUUID": "66fe9643-9318-4ba9-98c7-37d62a1aee3e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "1d120a2f-6780-4d9c-81cb-8f52889421b8"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 11,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "7787c82a-57bc-4c3d-8f34-415a0668581f",
          "title": "array single page page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/mock-simple-forms-patterns/tests/pages/mockArraySinglePage.unit.spec.jsx",
          "file": "/src/applications/simple-forms/mock-simple-forms-patterns/tests/pages/mockArraySinglePage.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should show the correct number of errors on submit",
              "fullTitle": "array single page page should show the correct number of errors on submit",
              "timedOut": false,
              "duration": 37,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps2 = getProps(),\n  mockStore = _getProps2.mockStore;\nvar _render2 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  getByRole = _render2.getByRole,\n  queryAllByRole = _render2.queryAllByRole;\ngetByRole('button', {\n  name: /submit/i\n}).click();\nvar errors = queryAllByRole('alert');\n(0, _chai.expect)(errors).to.have.lengthOf(expectedNumberOfErrors);",
              "err": {},
              "uuid": "48a65012-f18c-4676-8100-fe863b437062",
              "parentUUID": "7787c82a-57bc-4c3d-8f34-415a0668581f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "48a65012-f18c-4676-8100-fe863b437062"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 37,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "0b293a94-1bd9-4c50-ab14-e2dce7be57c5",
          "title": "mock checkbox and text input page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/mock-simple-forms-patterns/tests/pages/mockCheckboxAndTextInput.unit.spec.jsx",
          "file": "/src/applications/simple-forms/mock-simple-forms-patterns/tests/pages/mockCheckboxAndTextInput.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should have appropriate number of web components",
              "fullTitle": "mock checkbox and text input page should have appropriate number of web components",
              "timedOut": false,
              "duration": 5,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps3 = getProps(),\n  mockStore = _getProps3.mockStore;\nvar _render3 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render3.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypesWebComponents)).to.have.lengthOf(expectedNumberOfFields);",
              "err": {},
              "uuid": "8fe6e1fb-6d2d-4d78-bfea-579f92c1b41b",
              "parentUUID": "0b293a94-1bd9-4c50-ab14-e2dce7be57c5",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "8fe6e1fb-6d2d-4d78-bfea-579f92c1b41b"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 5,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "247b2bdb-6d24-4a39-9eab-9deb18d39b64",
          "title": "mock checkbox and text input page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/mock-simple-forms-patterns/tests/pages/mockCheckboxAndTextInput.unit.spec.jsx",
          "file": "/src/applications/simple-forms/mock-simple-forms-patterns/tests/pages/mockCheckboxAndTextInput.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should show the correct number of errors on submit for web components",
              "fullTitle": "mock checkbox and text input page should show the correct number of errors on submit for web components",
              "timedOut": false,
              "duration": 13,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps4 = getProps(),\n  mockStore = _getProps4.mockStore;\nvar _render4 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render4.container,\n  getByRole = _render4.getByRole;\ngetByRole('button', {\n  name: /submit/i\n}).click();\nvar nodes = Array.from(container.querySelectorAll(\"\".concat(expectedFieldTypesWebComponents, \", \").concat(wrapperWebComponents)));\nvar errors = nodes.filter(function (node) {\n  return node.error;\n});\n(0, _chai.expect)(errors).to.have.lengthOf(expectedNumberOfErrors);",
              "err": {},
              "uuid": "23c14595-af24-4b48-9182-0e69715bf28f",
              "parentUUID": "247b2bdb-6d24-4a39-9eab-9deb18d39b64",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "23c14595-af24-4b48-9182-0e69715bf28f"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 13,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "83f17462-f018-41e5-af1b-d2446e66748b",
          "title": "mock checkbox group page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/mock-simple-forms-patterns/tests/pages/mockCheckboxGroup.unit.spec.jsx",
          "file": "/src/applications/simple-forms/mock-simple-forms-patterns/tests/pages/mockCheckboxGroup.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should have appropriate number of web components",
              "fullTitle": "mock checkbox group page should have appropriate number of web components",
              "timedOut": false,
              "duration": 9,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps3 = getProps(),\n  mockStore = _getProps3.mockStore;\nvar _render3 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render3.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypesWebComponents)).to.have.lengthOf(expectedNumberOfFields);",
              "err": {},
              "uuid": "5fcc0808-05b2-471a-b6e0-be6f3fa98de2",
              "parentUUID": "83f17462-f018-41e5-af1b-d2446e66748b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "5fcc0808-05b2-471a-b6e0-be6f3fa98de2"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 9,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "722aea16-7bf2-4869-bfe5-87dbb2718868",
          "title": "mock checkbox group page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/mock-simple-forms-patterns/tests/pages/mockCheckboxGroup.unit.spec.jsx",
          "file": "/src/applications/simple-forms/mock-simple-forms-patterns/tests/pages/mockCheckboxGroup.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should show the correct number of errors on submit for web components",
              "fullTitle": "mock checkbox group page should show the correct number of errors on submit for web components",
              "timedOut": false,
              "duration": 16,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps4 = getProps(),\n  mockStore = _getProps4.mockStore;\nvar _render4 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render4.container,\n  getByRole = _render4.getByRole;\ngetByRole('button', {\n  name: /submit/i\n}).click();\nvar nodes = Array.from(container.querySelectorAll(\"\".concat(expectedFieldTypesWebComponents, \", \").concat(wrapperWebComponents)));\nvar errors = nodes.filter(function (node) {\n  return node.error;\n});\n(0, _chai.expect)(errors).to.have.lengthOf(expectedNumberOfErrors);",
              "err": {},
              "uuid": "7623e3eb-d279-4bff-bb08-cf8185313e3a",
              "parentUUID": "722aea16-7bf2-4869-bfe5-87dbb2718868",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "7623e3eb-d279-4bff-bb08-cf8185313e3a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 16,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "7b201a7f-6ae4-4577-9574-cbc5fa94bf55",
          "title": "mock checkbox group page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/mock-simple-forms-patterns/tests/pages/mockCheckboxGroup.unit.spec.jsx",
          "file": "/src/applications/simple-forms/mock-simple-forms-patterns/tests/pages/mockCheckboxGroup.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should have appropriate number of fields",
              "fullTitle": "mock checkbox group page should have appropriate number of fields",
              "timedOut": false,
              "duration": 5,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps = getProps(),\n  mockStore = _getProps.mockStore;\nvar _render = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypes)).to.have.lengthOf(expectedNumberOfFields);",
              "err": {},
              "uuid": "0866561b-bcc2-4658-9cff-fc0e01a28d50",
              "parentUUID": "7b201a7f-6ae4-4577-9574-cbc5fa94bf55",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "0866561b-bcc2-4658-9cff-fc0e01a28d50"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 5,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "40416dce-a39d-4434-8986-324ffd1a02ee",
          "title": "mock checkbox group page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/mock-simple-forms-patterns/tests/pages/mockCheckboxGroup.unit.spec.jsx",
          "file": "/src/applications/simple-forms/mock-simple-forms-patterns/tests/pages/mockCheckboxGroup.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should show the correct number of errors on submit",
              "fullTitle": "mock checkbox group page should show the correct number of errors on submit",
              "timedOut": false,
              "duration": 19,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps2 = getProps(),\n  mockStore = _getProps2.mockStore;\nvar _render2 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  getByRole = _render2.getByRole,\n  queryAllByRole = _render2.queryAllByRole;\ngetByRole('button', {\n  name: /submit/i\n}).click();\nvar errors = queryAllByRole('alert');\n(0, _chai.expect)(errors).to.have.lengthOf(expectedNumberOfErrors);",
              "err": {},
              "uuid": "0a1bd0b4-d9a7-40c7-91b7-b74f36415fb8",
              "parentUUID": "40416dce-a39d-4434-8986-324ffd1a02ee",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "0a1bd0b4-d9a7-40c7-91b7-b74f36415fb8"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 19,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "3e659003-655d-480f-b7ee-b95cda6a2636",
          "title": "mock date inputs page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/mock-simple-forms-patterns/tests/pages/mockDate.unit.spec.jsx",
          "file": "/src/applications/simple-forms/mock-simple-forms-patterns/tests/pages/mockDate.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should have appropriate number of web components",
              "fullTitle": "mock date inputs page should have appropriate number of web components",
              "timedOut": false,
              "duration": 8,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps3 = getProps(),\n  mockStore = _getProps3.mockStore;\nvar _render3 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render3.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypesWebComponents)).to.have.lengthOf(expectedNumberOfFields);",
              "err": {},
              "uuid": "0ec02648-2e02-4bf6-aad3-78a4d8eb4e7d",
              "parentUUID": "3e659003-655d-480f-b7ee-b95cda6a2636",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "0ec02648-2e02-4bf6-aad3-78a4d8eb4e7d"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 8,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "d9becfda-31a7-4eac-b27b-7cf7870792ff",
          "title": "mock date inputs page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/mock-simple-forms-patterns/tests/pages/mockDate.unit.spec.jsx",
          "file": "/src/applications/simple-forms/mock-simple-forms-patterns/tests/pages/mockDate.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should show the correct number of errors on submit for web components",
              "fullTitle": "mock date inputs page should show the correct number of errors on submit for web components",
              "timedOut": false,
              "duration": 21,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps4 = getProps(),\n  mockStore = _getProps4.mockStore;\nvar _render4 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render4.container,\n  getByRole = _render4.getByRole;\ngetByRole('button', {\n  name: /submit/i\n}).click();\nvar nodes = Array.from(container.querySelectorAll(\"\".concat(expectedFieldTypesWebComponents, \", \").concat(wrapperWebComponents)));\nvar errors = nodes.filter(function (node) {\n  return node.error;\n});\n(0, _chai.expect)(errors).to.have.lengthOf(expectedNumberOfErrors);",
              "err": {},
              "uuid": "d2d01c83-3400-46ef-a402-582b39fa14c7",
              "parentUUID": "d9becfda-31a7-4eac-b27b-7cf7870792ff",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "d2d01c83-3400-46ef-a402-582b39fa14c7"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 21,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "9c6a66bc-cf30-4c5a-99be-b83343ee916d",
          "title": "mock date inputs page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/mock-simple-forms-patterns/tests/pages/mockDate.unit.spec.jsx",
          "file": "/src/applications/simple-forms/mock-simple-forms-patterns/tests/pages/mockDate.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should have appropriate number of fields",
              "fullTitle": "mock date inputs page should have appropriate number of fields",
              "timedOut": false,
              "duration": 10,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps = getProps(),\n  mockStore = _getProps.mockStore;\nvar _render = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypes)).to.have.lengthOf(expectedNumberOfFields);",
              "err": {},
              "uuid": "2fe65a3e-3d3f-4214-9609-c68c5a386b66",
              "parentUUID": "9c6a66bc-cf30-4c5a-99be-b83343ee916d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "2fe65a3e-3d3f-4214-9609-c68c5a386b66"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 10,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "5ac004bf-15c8-4866-8267-206232ef0ddd",
          "title": "mock date inputs page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/mock-simple-forms-patterns/tests/pages/mockDate.unit.spec.jsx",
          "file": "/src/applications/simple-forms/mock-simple-forms-patterns/tests/pages/mockDate.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should show the correct number of errors on submit",
              "fullTitle": "mock date inputs page should show the correct number of errors on submit",
              "timedOut": false,
              "duration": 23,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps2 = getProps(),\n  mockStore = _getProps2.mockStore;\nvar _render2 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  getByRole = _render2.getByRole,\n  queryAllByRole = _render2.queryAllByRole;\ngetByRole('button', {\n  name: /submit/i\n}).click();\nvar errors = queryAllByRole('alert');\n(0, _chai.expect)(errors).to.have.lengthOf(expectedNumberOfErrors);",
              "err": {},
              "uuid": "f954c574-ab40-4b1b-aefe-ce547d8095f1",
              "parentUUID": "5ac004bf-15c8-4866-8267-206232ef0ddd",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f954c574-ab40-4b1b-aefe-ce547d8095f1"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 23,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "5a15c776-fa88-41a7-9bdb-90f7a0211ab8",
          "title": "mock forms pattern multiple page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/mock-simple-forms-patterns/tests/pages/mockFormsPatternMultiple.unit.spec.jsx",
          "file": "/src/applications/simple-forms/mock-simple-forms-patterns/tests/pages/mockFormsPatternMultiple.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should have appropriate number of web components",
              "fullTitle": "mock forms pattern multiple page should have appropriate number of web components",
              "timedOut": false,
              "duration": 5,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps3 = getProps(),\n  mockStore = _getProps3.mockStore;\nvar _render3 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render3.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypesWebComponents)).to.have.lengthOf(expectedNumberOfFields);",
              "err": {},
              "uuid": "fe056070-6f53-40cf-a548-e70c71da6ac8",
              "parentUUID": "5a15c776-fa88-41a7-9bdb-90f7a0211ab8",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "fe056070-6f53-40cf-a548-e70c71da6ac8"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 5,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "05a02f9a-5a97-477d-9142-17a3fbe2586d",
          "title": "mock forms pattern multiple page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/mock-simple-forms-patterns/tests/pages/mockFormsPatternMultiple.unit.spec.jsx",
          "file": "/src/applications/simple-forms/mock-simple-forms-patterns/tests/pages/mockFormsPatternMultiple.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should show the correct number of errors on submit for web components",
              "fullTitle": "mock forms pattern multiple page should show the correct number of errors on submit for web components",
              "timedOut": false,
              "duration": 12,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps4 = getProps(),\n  mockStore = _getProps4.mockStore;\nvar _render4 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render4.container,\n  getByRole = _render4.getByRole;\ngetByRole('button', {\n  name: /submit/i\n}).click();\nvar nodes = Array.from(container.querySelectorAll(\"\".concat(expectedFieldTypesWebComponents, \", \").concat(wrapperWebComponents)));\nvar errors = nodes.filter(function (node) {\n  return node.error;\n});\n(0, _chai.expect)(errors).to.have.lengthOf(expectedNumberOfErrors);",
              "err": {},
              "uuid": "e1ba4739-e7a3-46a9-a2ab-a35e0e04364a",
              "parentUUID": "05a02f9a-5a97-477d-9142-17a3fbe2586d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "e1ba4739-e7a3-46a9-a2ab-a35e0e04364a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 12,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "ca60d7f9-572c-4887-a88d-2b78d07f0df2",
          "title": "mock forms pattern single - checkbox group page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/mock-simple-forms-patterns/tests/pages/mockFormsPatternSingleCheckboxGroup.unit.spec.jsx",
          "file": "/src/applications/simple-forms/mock-simple-forms-patterns/tests/pages/mockFormsPatternSingleCheckboxGroup.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should have appropriate number of web components",
              "fullTitle": "mock forms pattern single - checkbox group page should have appropriate number of web components",
              "timedOut": false,
              "duration": 3,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps3 = getProps(),\n  mockStore = _getProps3.mockStore;\nvar _render3 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render3.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypesWebComponents)).to.have.lengthOf(expectedNumberOfFields);",
              "err": {},
              "uuid": "fdb696bd-c75a-46de-8c4d-88cc644b2c29",
              "parentUUID": "ca60d7f9-572c-4887-a88d-2b78d07f0df2",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "fdb696bd-c75a-46de-8c4d-88cc644b2c29"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "e9714433-5d5c-4294-98c2-e964aeb07870",
          "title": "mock forms pattern single - checkbox group page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/mock-simple-forms-patterns/tests/pages/mockFormsPatternSingleCheckboxGroup.unit.spec.jsx",
          "file": "/src/applications/simple-forms/mock-simple-forms-patterns/tests/pages/mockFormsPatternSingleCheckboxGroup.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should show the correct number of errors on submit for web components",
              "fullTitle": "mock forms pattern single - checkbox group page should show the correct number of errors on submit for web components",
              "timedOut": false,
              "duration": 11,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps4 = getProps(),\n  mockStore = _getProps4.mockStore;\nvar _render4 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render4.container,\n  getByRole = _render4.getByRole;\ngetByRole('button', {\n  name: /submit/i\n}).click();\nvar nodes = Array.from(container.querySelectorAll(\"\".concat(expectedFieldTypesWebComponents, \", \").concat(wrapperWebComponents)));\nvar errors = nodes.filter(function (node) {\n  return node.error;\n});\n(0, _chai.expect)(errors).to.have.lengthOf(expectedNumberOfErrors);",
              "err": {},
              "uuid": "d9dd98bf-92a2-4625-88f8-413b8e195a61",
              "parentUUID": "e9714433-5d5c-4294-98c2-e964aeb07870",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "d9dd98bf-92a2-4625-88f8-413b8e195a61"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 11,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "95de46c5-30e5-497c-973f-389d2bf46c5b",
          "title": "mock forms pattern single - radio page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/mock-simple-forms-patterns/tests/pages/mockFormsPatternSingleRadio.unit.spec.jsx",
          "file": "/src/applications/simple-forms/mock-simple-forms-patterns/tests/pages/mockFormsPatternSingleRadio.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should have appropriate number of web components",
              "fullTitle": "mock forms pattern single - radio page should have appropriate number of web components",
              "timedOut": false,
              "duration": 3,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps3 = getProps(),\n  mockStore = _getProps3.mockStore;\nvar _render3 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render3.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypesWebComponents)).to.have.lengthOf(expectedNumberOfFields);",
              "err": {},
              "uuid": "931c2044-0b92-4c8b-9b95-a6cb6581633f",
              "parentUUID": "95de46c5-30e5-497c-973f-389d2bf46c5b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "931c2044-0b92-4c8b-9b95-a6cb6581633f"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "00c781a5-c063-4dc5-825e-d80579effb3e",
          "title": "mock forms pattern single - radio page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/mock-simple-forms-patterns/tests/pages/mockFormsPatternSingleRadio.unit.spec.jsx",
          "file": "/src/applications/simple-forms/mock-simple-forms-patterns/tests/pages/mockFormsPatternSingleRadio.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should show the correct number of errors on submit for web components",
              "fullTitle": "mock forms pattern single - radio page should show the correct number of errors on submit for web components",
              "timedOut": false,
              "duration": 11,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps4 = getProps(),\n  mockStore = _getProps4.mockStore;\nvar _render4 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render4.container,\n  getByRole = _render4.getByRole;\ngetByRole('button', {\n  name: /submit/i\n}).click();\nvar nodes = Array.from(container.querySelectorAll(\"\".concat(expectedFieldTypesWebComponents, \", \").concat(wrapperWebComponents)));\nvar errors = nodes.filter(function (node) {\n  return node.error;\n});\n(0, _chai.expect)(errors).to.have.lengthOf(expectedNumberOfErrors);",
              "err": {},
              "uuid": "d8b71cea-8f4c-41cc-be08-9c1a0c08cd16",
              "parentUUID": "00c781a5-c063-4dc5-825e-d80579effb3e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "d8b71cea-8f4c-41cc-be08-9c1a0c08cd16"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 11,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "f0883a24-283e-41ff-8f1c-45f4b6b097ae",
          "title": "mock number inputs page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/mock-simple-forms-patterns/tests/pages/mockNumberInput.unit.spec.jsx",
          "file": "/src/applications/simple-forms/mock-simple-forms-patterns/tests/pages/mockNumberInput.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should have appropriate number of web components",
              "fullTitle": "mock number inputs page should have appropriate number of web components",
              "timedOut": false,
              "duration": 4,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps3 = getProps(),\n  mockStore = _getProps3.mockStore;\nvar _render3 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render3.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypesWebComponents)).to.have.lengthOf(expectedNumberOfFields);",
              "err": {},
              "uuid": "8eddf45d-57c1-4a03-bfbb-5d30c6f791b9",
              "parentUUID": "f0883a24-283e-41ff-8f1c-45f4b6b097ae",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "8eddf45d-57c1-4a03-bfbb-5d30c6f791b9"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 4,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "9694778e-6fdf-420b-acaa-5b752f9fed77",
          "title": "mock number inputs page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/mock-simple-forms-patterns/tests/pages/mockNumberInput.unit.spec.jsx",
          "file": "/src/applications/simple-forms/mock-simple-forms-patterns/tests/pages/mockNumberInput.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should show the correct number of errors on submit for web components",
              "fullTitle": "mock number inputs page should show the correct number of errors on submit for web components",
              "timedOut": false,
              "duration": 10,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps4 = getProps(),\n  mockStore = _getProps4.mockStore;\nvar _render4 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render4.container,\n  getByRole = _render4.getByRole;\ngetByRole('button', {\n  name: /submit/i\n}).click();\nvar nodes = Array.from(container.querySelectorAll(\"\".concat(expectedFieldTypesWebComponents, \", \").concat(wrapperWebComponents)));\nvar errors = nodes.filter(function (node) {\n  return node.error;\n});\n(0, _chai.expect)(errors).to.have.lengthOf(expectedNumberOfErrors);",
              "err": {},
              "uuid": "1b91a42f-f15f-46d5-b8f2-0932db6a01ce",
              "parentUUID": "9694778e-6fdf-420b-acaa-5b752f9fed77",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "1b91a42f-f15f-46d5-b8f2-0932db6a01ce"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 10,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "1f3a0fc2-ed71-494a-8701-e9e0f5b61491",
          "title": "mock radio inputs page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/mock-simple-forms-patterns/tests/pages/mockRadio.unit.spec.jsx",
          "file": "/src/applications/simple-forms/mock-simple-forms-patterns/tests/pages/mockRadio.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should have appropriate number of web components",
              "fullTitle": "mock radio inputs page should have appropriate number of web components",
              "timedOut": false,
              "duration": 8,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps3 = getProps(),\n  mockStore = _getProps3.mockStore;\nvar _render3 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render3.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypesWebComponents)).to.have.lengthOf(expectedNumberOfFields);",
              "err": {},
              "uuid": "285a0f57-c74c-412f-8195-b9bd4e3fa2dd",
              "parentUUID": "1f3a0fc2-ed71-494a-8701-e9e0f5b61491",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "285a0f57-c74c-412f-8195-b9bd4e3fa2dd"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 8,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "8516b57d-cf79-4608-97e4-8f166ed94bbc",
          "title": "mock radio inputs page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/mock-simple-forms-patterns/tests/pages/mockRadio.unit.spec.jsx",
          "file": "/src/applications/simple-forms/mock-simple-forms-patterns/tests/pages/mockRadio.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should show the correct number of errors on submit for web components",
              "fullTitle": "mock radio inputs page should show the correct number of errors on submit for web components",
              "timedOut": false,
              "duration": 23,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps4 = getProps(),\n  mockStore = _getProps4.mockStore;\nvar _render4 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render4.container,\n  getByRole = _render4.getByRole;\ngetByRole('button', {\n  name: /submit/i\n}).click();\nvar nodes = Array.from(container.querySelectorAll(\"\".concat(expectedFieldTypesWebComponents, \", \").concat(wrapperWebComponents)));\nvar errors = nodes.filter(function (node) {\n  return node.error;\n});\n(0, _chai.expect)(errors).to.have.lengthOf(expectedNumberOfErrors);",
              "err": {},
              "uuid": "52ccc759-0db4-458b-84ca-2197d0c808e4",
              "parentUUID": "8516b57d-cf79-4608-97e4-8f166ed94bbc",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "52ccc759-0db4-458b-84ca-2197d0c808e4"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 23,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "0580a865-f96d-49fd-9a4e-e35b439a6b2d",
          "title": "mock radio inputs page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/mock-simple-forms-patterns/tests/pages/mockRadio.unit.spec.jsx",
          "file": "/src/applications/simple-forms/mock-simple-forms-patterns/tests/pages/mockRadio.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should have appropriate number of fields",
              "fullTitle": "mock radio inputs page should have appropriate number of fields",
              "timedOut": false,
              "duration": 8,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps = getProps(),\n  mockStore = _getProps.mockStore;\nvar _render = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypes)).to.have.lengthOf(expectedNumberOfFields);",
              "err": {},
              "uuid": "3b4fec3d-4146-4af4-a9ac-bd206ee5fbd3",
              "parentUUID": "0580a865-f96d-49fd-9a4e-e35b439a6b2d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "3b4fec3d-4146-4af4-a9ac-bd206ee5fbd3"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 8,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "a9a86232-6abf-4633-b3a8-1c681d392344",
          "title": "mock radio inputs page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/mock-simple-forms-patterns/tests/pages/mockRadio.unit.spec.jsx",
          "file": "/src/applications/simple-forms/mock-simple-forms-patterns/tests/pages/mockRadio.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should show the correct number of errors on submit",
              "fullTitle": "mock radio inputs page should show the correct number of errors on submit",
              "timedOut": false,
              "duration": 33,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps2 = getProps(),\n  mockStore = _getProps2.mockStore;\nvar _render2 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  getByRole = _render2.getByRole,\n  queryAllByRole = _render2.queryAllByRole;\ngetByRole('button', {\n  name: /submit/i\n}).click();\nvar errors = queryAllByRole('alert');\n(0, _chai.expect)(errors).to.have.lengthOf(expectedNumberOfErrors);",
              "err": {},
              "uuid": "f9153f17-4a6a-4d23-b46d-40d8e1571757",
              "parentUUID": "a9a86232-6abf-4633-b3a8-1c681d392344",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f9153f17-4a6a-4d23-b46d-40d8e1571757"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 33,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "8ab9da73-05eb-4d4d-9ac5-993d348dfa43",
          "title": "mock radio relationship to veteran inputs page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/mock-simple-forms-patterns/tests/pages/mockRadioRelationshipToVeteran.unit.spec.jsx",
          "file": "/src/applications/simple-forms/mock-simple-forms-patterns/tests/pages/mockRadioRelationshipToVeteran.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should have appropriate number of web components",
              "fullTitle": "mock radio relationship to veteran inputs page should have appropriate number of web components",
              "timedOut": false,
              "duration": 4,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps3 = getProps(),\n  mockStore = _getProps3.mockStore;\nvar _render3 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render3.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypesWebComponents)).to.have.lengthOf(expectedNumberOfFields);",
              "err": {},
              "uuid": "588bc423-d3c3-4a5b-bc36-3a92fedbb5d8",
              "parentUUID": "8ab9da73-05eb-4d4d-9ac5-993d348dfa43",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "588bc423-d3c3-4a5b-bc36-3a92fedbb5d8"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 4,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "398465cd-901e-4b86-8bf5-51a03dfd1935",
          "title": "mock radio relationship to veteran inputs page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/mock-simple-forms-patterns/tests/pages/mockRadioRelationshipToVeteran.unit.spec.jsx",
          "file": "/src/applications/simple-forms/mock-simple-forms-patterns/tests/pages/mockRadioRelationshipToVeteran.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should show the correct number of errors on submit for web components",
              "fullTitle": "mock radio relationship to veteran inputs page should show the correct number of errors on submit for web components",
              "timedOut": false,
              "duration": 10,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps4 = getProps(),\n  mockStore = _getProps4.mockStore;\nvar _render4 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render4.container,\n  getByRole = _render4.getByRole;\ngetByRole('button', {\n  name: /submit/i\n}).click();\nvar nodes = Array.from(container.querySelectorAll(\"\".concat(expectedFieldTypesWebComponents, \", \").concat(wrapperWebComponents)));\nvar errors = nodes.filter(function (node) {\n  return node.error;\n});\n(0, _chai.expect)(errors).to.have.lengthOf(expectedNumberOfErrors);",
              "err": {},
              "uuid": "6f79863b-a5a3-4b08-bbd5-6bc80d0cee0b",
              "parentUUID": "398465cd-901e-4b86-8bf5-51a03dfd1935",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "6f79863b-a5a3-4b08-bbd5-6bc80d0cee0b"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 10,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "5989a56c-9bd1-4953-a268-e3d3cfb939c0",
          "title": "mock radio relationship to veteran inputs page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/mock-simple-forms-patterns/tests/pages/mockRadioRelationshipToVeteran.unit.spec.jsx",
          "file": "/src/applications/simple-forms/mock-simple-forms-patterns/tests/pages/mockRadioRelationshipToVeteran.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should have appropriate number of fields",
              "fullTitle": "mock radio relationship to veteran inputs page should have appropriate number of fields",
              "timedOut": false,
              "duration": 3,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps = getProps(),\n  mockStore = _getProps.mockStore;\nvar _render = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypes)).to.have.lengthOf(expectedNumberOfFields);",
              "err": {},
              "uuid": "50cac0d7-eefe-4770-88e0-720d41fae163",
              "parentUUID": "5989a56c-9bd1-4953-a268-e3d3cfb939c0",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "50cac0d7-eefe-4770-88e0-720d41fae163"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "79f4f67d-0871-4722-a527-e126c4cce192",
          "title": "mock radio relationship to veteran inputs page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/mock-simple-forms-patterns/tests/pages/mockRadioRelationshipToVeteran.unit.spec.jsx",
          "file": "/src/applications/simple-forms/mock-simple-forms-patterns/tests/pages/mockRadioRelationshipToVeteran.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should show the correct number of errors on submit",
              "fullTitle": "mock radio relationship to veteran inputs page should show the correct number of errors on submit",
              "timedOut": false,
              "duration": 13,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps2 = getProps(),\n  mockStore = _getProps2.mockStore;\nvar _render2 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  getByRole = _render2.getByRole,\n  queryAllByRole = _render2.queryAllByRole;\ngetByRole('button', {\n  name: /submit/i\n}).click();\nvar errors = queryAllByRole('alert');\n(0, _chai.expect)(errors).to.have.lengthOf(expectedNumberOfErrors);",
              "err": {},
              "uuid": "79679009-aebf-480f-934f-7c311ecc2dff",
              "parentUUID": "79f4f67d-0871-4722-a527-e126c4cce192",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "79679009-aebf-480f-934f-7c311ecc2dff"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 13,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "fcab8c20-1af9-4147-a5f7-75713c67b2fb",
          "title": "mock select inputs page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/mock-simple-forms-patterns/tests/pages/mockSelect.unit.spec.jsx",
          "file": "/src/applications/simple-forms/mock-simple-forms-patterns/tests/pages/mockSelect.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should have appropriate number of web components",
              "fullTitle": "mock select inputs page should have appropriate number of web components",
              "timedOut": false,
              "duration": 8,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps3 = getProps(),\n  mockStore = _getProps3.mockStore;\nvar _render3 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render3.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypesWebComponents)).to.have.lengthOf(expectedNumberOfFields);",
              "err": {},
              "uuid": "0b62aefe-9512-4328-a0fc-1069beb97a79",
              "parentUUID": "fcab8c20-1af9-4147-a5f7-75713c67b2fb",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "0b62aefe-9512-4328-a0fc-1069beb97a79"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 8,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "c992f5d0-877e-40f2-ad05-5ea77cc6c439",
          "title": "mock select inputs page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/mock-simple-forms-patterns/tests/pages/mockSelect.unit.spec.jsx",
          "file": "/src/applications/simple-forms/mock-simple-forms-patterns/tests/pages/mockSelect.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should show the correct number of errors on submit for web components",
              "fullTitle": "mock select inputs page should show the correct number of errors on submit for web components",
              "timedOut": false,
              "duration": 20,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps4 = getProps(),\n  mockStore = _getProps4.mockStore;\nvar _render4 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render4.container,\n  getByRole = _render4.getByRole;\ngetByRole('button', {\n  name: /submit/i\n}).click();\nvar nodes = Array.from(container.querySelectorAll(\"\".concat(expectedFieldTypesWebComponents, \", \").concat(wrapperWebComponents)));\nvar errors = nodes.filter(function (node) {\n  return node.error;\n});\n(0, _chai.expect)(errors).to.have.lengthOf(expectedNumberOfErrors);",
              "err": {},
              "uuid": "1c442a73-1bde-47bf-b6cd-f025d4908d4a",
              "parentUUID": "c992f5d0-877e-40f2-ad05-5ea77cc6c439",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "1c442a73-1bde-47bf-b6cd-f025d4908d4a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 20,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "b0eba882-0537-4736-aff2-6ba32409e719",
          "title": "mock select inputs page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/mock-simple-forms-patterns/tests/pages/mockSelect.unit.spec.jsx",
          "file": "/src/applications/simple-forms/mock-simple-forms-patterns/tests/pages/mockSelect.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should have appropriate number of fields",
              "fullTitle": "mock select inputs page should have appropriate number of fields",
              "timedOut": false,
              "duration": 6,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps = getProps(),\n  mockStore = _getProps.mockStore;\nvar _render = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypes)).to.have.lengthOf(expectedNumberOfFields);",
              "err": {},
              "uuid": "99d98256-b5c9-43eb-b762-1272ccf64dce",
              "parentUUID": "b0eba882-0537-4736-aff2-6ba32409e719",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "99d98256-b5c9-43eb-b762-1272ccf64dce"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 6,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "42ccaf3e-d48f-4b3b-8d5f-49d60cebc37d",
          "title": "mock select inputs page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/mock-simple-forms-patterns/tests/pages/mockSelect.unit.spec.jsx",
          "file": "/src/applications/simple-forms/mock-simple-forms-patterns/tests/pages/mockSelect.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should show the correct number of errors on submit",
              "fullTitle": "mock select inputs page should show the correct number of errors on submit",
              "timedOut": false,
              "duration": 23,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps2 = getProps(),\n  mockStore = _getProps2.mockStore;\nvar _render2 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  getByRole = _render2.getByRole,\n  queryAllByRole = _render2.queryAllByRole;\ngetByRole('button', {\n  name: /submit/i\n}).click();\nvar errors = queryAllByRole('alert');\n(0, _chai.expect)(errors).to.have.lengthOf(expectedNumberOfErrors);",
              "err": {},
              "uuid": "70abcc50-c944-4348-b4c7-e8dc12729300",
              "parentUUID": "42ccaf3e-d48f-4b3b-8d5f-49d60cebc37d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "70abcc50-c944-4348-b4c7-e8dc12729300"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 23,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "1b6a99dc-1157-4b4f-afd9-3d82628ae11c",
          "title": "mock text inputs page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/mock-simple-forms-patterns/tests/pages/mockTextInput.unit.spec.jsx",
          "file": "/src/applications/simple-forms/mock-simple-forms-patterns/tests/pages/mockTextInput.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should have appropriate number of web components",
              "fullTitle": "mock text inputs page should have appropriate number of web components",
              "timedOut": false,
              "duration": 5,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps3 = getProps(),\n  mockStore = _getProps3.mockStore;\nvar _render3 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render3.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypesWebComponents)).to.have.lengthOf(expectedNumberOfFields);",
              "err": {},
              "uuid": "659fc30b-be70-4be6-b90f-21133f39631e",
              "parentUUID": "1b6a99dc-1157-4b4f-afd9-3d82628ae11c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "659fc30b-be70-4be6-b90f-21133f39631e"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 5,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "22b6fb3a-a9ac-4854-beb4-ef715f9f1d9f",
          "title": "mock text inputs page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/mock-simple-forms-patterns/tests/pages/mockTextInput.unit.spec.jsx",
          "file": "/src/applications/simple-forms/mock-simple-forms-patterns/tests/pages/mockTextInput.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should show the correct number of errors on submit for web components",
              "fullTitle": "mock text inputs page should show the correct number of errors on submit for web components",
              "timedOut": false,
              "duration": 15,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps4 = getProps(),\n  mockStore = _getProps4.mockStore;\nvar _render4 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render4.container,\n  getByRole = _render4.getByRole;\ngetByRole('button', {\n  name: /submit/i\n}).click();\nvar nodes = Array.from(container.querySelectorAll(\"\".concat(expectedFieldTypesWebComponents, \", \").concat(wrapperWebComponents)));\nvar errors = nodes.filter(function (node) {\n  return node.error;\n});\n(0, _chai.expect)(errors).to.have.lengthOf(expectedNumberOfErrors);",
              "err": {},
              "uuid": "b349cb69-ba6c-482b-b671-775be01d16c0",
              "parentUUID": "22b6fb3a-a9ac-4854-beb4-ef715f9f1d9f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "b349cb69-ba6c-482b-b671-775be01d16c0"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 15,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "36cf8a4e-8ee5-4944-9b77-d9f38f751156",
          "title": "mock text inputs page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/mock-simple-forms-patterns/tests/pages/mockTextInput.unit.spec.jsx",
          "file": "/src/applications/simple-forms/mock-simple-forms-patterns/tests/pages/mockTextInput.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should have appropriate number of fields",
              "fullTitle": "mock text inputs page should have appropriate number of fields",
              "timedOut": false,
              "duration": 5,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps = getProps(),\n  mockStore = _getProps.mockStore;\nvar _render = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypes)).to.have.lengthOf(expectedNumberOfFields);",
              "err": {},
              "uuid": "3892e958-830f-4387-9119-a8eb836d5831",
              "parentUUID": "36cf8a4e-8ee5-4944-9b77-d9f38f751156",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "3892e958-830f-4387-9119-a8eb836d5831"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 5,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "ade32149-a78f-4ada-9208-65604ad9d11a",
          "title": "mock text inputs page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/mock-simple-forms-patterns/tests/pages/mockTextInput.unit.spec.jsx",
          "file": "/src/applications/simple-forms/mock-simple-forms-patterns/tests/pages/mockTextInput.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should show the correct number of errors on submit",
              "fullTitle": "mock text inputs page should show the correct number of errors on submit",
              "timedOut": false,
              "duration": 16,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps2 = getProps(),\n  mockStore = _getProps2.mockStore;\nvar _render2 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  getByRole = _render2.getByRole,\n  queryAllByRole = _render2.queryAllByRole;\ngetByRole('button', {\n  name: /submit/i\n}).click();\nvar errors = queryAllByRole('alert');\n(0, _chai.expect)(errors).to.have.lengthOf(expectedNumberOfErrors);",
              "err": {},
              "uuid": "44fb0dca-3f3b-4832-9a9e-c5df8328bbe3",
              "parentUUID": "ade32149-a78f-4ada-9208-65604ad9d11a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "44fb0dca-3f3b-4832-9a9e-c5df8328bbe3"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 16,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "499136a6-5a00-4856-bb9e-2c9d0c454a7d",
          "title": "mock address inputs page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/mock-simple-forms-patterns/tests/pages/mockTextInputAddress.unit.spec.jsx",
          "file": "/src/applications/simple-forms/mock-simple-forms-patterns/tests/pages/mockTextInputAddress.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should have appropriate number of web components",
              "fullTitle": "mock address inputs page should have appropriate number of web components",
              "timedOut": false,
              "duration": 19,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps3 = getProps(),\n  mockStore = _getProps3.mockStore;\nvar _render3 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render3.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypesWebComponents)).to.have.lengthOf(expectedNumberOfFields);",
              "err": {},
              "uuid": "3f1994c4-2d42-463b-a50f-9f60a6b95399",
              "parentUUID": "499136a6-5a00-4856-bb9e-2c9d0c454a7d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "3f1994c4-2d42-463b-a50f-9f60a6b95399"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 19,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "f19ed96b-479a-431f-8752-d9c7a690a3fd",
          "title": "mock address inputs page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/mock-simple-forms-patterns/tests/pages/mockTextInputAddress.unit.spec.jsx",
          "file": "/src/applications/simple-forms/mock-simple-forms-patterns/tests/pages/mockTextInputAddress.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should show the correct number of errors on submit for web components",
              "fullTitle": "mock address inputs page should show the correct number of errors on submit for web components",
              "timedOut": false,
              "duration": 62,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps4 = getProps(),\n  mockStore = _getProps4.mockStore;\nvar _render4 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render4.container,\n  getByRole = _render4.getByRole;\ngetByRole('button', {\n  name: /submit/i\n}).click();\nvar nodes = Array.from(container.querySelectorAll(\"\".concat(expectedFieldTypesWebComponents, \", \").concat(wrapperWebComponents)));\nvar errors = nodes.filter(function (node) {\n  return node.error;\n});\n(0, _chai.expect)(errors).to.have.lengthOf(expectedNumberOfErrors);",
              "err": {},
              "uuid": "ed7f5f45-cf4d-47ad-8485-9fd4e3df5237",
              "parentUUID": "f19ed96b-479a-431f-8752-d9c7a690a3fd",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "ed7f5f45-cf4d-47ad-8485-9fd4e3df5237"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 62,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "1539a514-8582-4910-bb37-082b170a6aae",
          "title": "mock address inputs page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/mock-simple-forms-patterns/tests/pages/mockTextInputAddress.unit.spec.jsx",
          "file": "/src/applications/simple-forms/mock-simple-forms-patterns/tests/pages/mockTextInputAddress.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should have appropriate number of fields",
              "fullTitle": "mock address inputs page should have appropriate number of fields",
              "timedOut": false,
              "duration": 20,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps = getProps(),\n  mockStore = _getProps.mockStore;\nvar _render = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypes)).to.have.lengthOf(expectedNumberOfFields);",
              "err": {},
              "uuid": "829b476d-15ea-40c5-9c98-44d80676af75",
              "parentUUID": "1539a514-8582-4910-bb37-082b170a6aae",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "829b476d-15ea-40c5-9c98-44d80676af75"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 20,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "59d526e4-6ed7-4631-ad4a-ec687971e856",
          "title": "mock address inputs page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/mock-simple-forms-patterns/tests/pages/mockTextInputAddress.unit.spec.jsx",
          "file": "/src/applications/simple-forms/mock-simple-forms-patterns/tests/pages/mockTextInputAddress.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should show the correct number of errors on submit",
              "fullTitle": "mock address inputs page should show the correct number of errors on submit",
              "timedOut": false,
              "duration": 90,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps2 = getProps(),\n  mockStore = _getProps2.mockStore;\nvar _render2 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  getByRole = _render2.getByRole,\n  queryAllByRole = _render2.queryAllByRole;\ngetByRole('button', {\n  name: /submit/i\n}).click();\nvar errors = queryAllByRole('alert');\n(0, _chai.expect)(errors).to.have.lengthOf(expectedNumberOfErrors);",
              "err": {},
              "uuid": "d9a53f75-5b83-41fa-87d0-c7071a606b94",
              "parentUUID": "59d526e4-6ed7-4631-ad4a-ec687971e856",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "d9a53f75-5b83-41fa-87d0-c7071a606b94"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 90,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "19dfb35d-46a9-4493-aa60-066c6ce889e0",
          "title": "mock full name inputs page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/mock-simple-forms-patterns/tests/pages/mockTextInputFullName.unit.spec.jsx",
          "file": "/src/applications/simple-forms/mock-simple-forms-patterns/tests/pages/mockTextInputFullName.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should have appropriate number of web components",
              "fullTitle": "mock full name inputs page should have appropriate number of web components",
              "timedOut": false,
              "duration": 5,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps3 = getProps(),\n  mockStore = _getProps3.mockStore;\nvar _render3 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render3.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypesWebComponents)).to.have.lengthOf(expectedNumberOfFields);",
              "err": {},
              "uuid": "6cbe08a2-6b2c-4c1f-8f59-f4bbc4343d27",
              "parentUUID": "19dfb35d-46a9-4493-aa60-066c6ce889e0",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "6cbe08a2-6b2c-4c1f-8f59-f4bbc4343d27"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 5,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "ba595732-e86b-420c-9445-66c9cfe164b2",
          "title": "mock full name inputs page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/mock-simple-forms-patterns/tests/pages/mockTextInputFullName.unit.spec.jsx",
          "file": "/src/applications/simple-forms/mock-simple-forms-patterns/tests/pages/mockTextInputFullName.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should show the correct number of errors on submit for web components",
              "fullTitle": "mock full name inputs page should show the correct number of errors on submit for web components",
              "timedOut": false,
              "duration": 13,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps4 = getProps(),\n  mockStore = _getProps4.mockStore;\nvar _render4 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render4.container,\n  getByRole = _render4.getByRole;\ngetByRole('button', {\n  name: /submit/i\n}).click();\nvar nodes = Array.from(container.querySelectorAll(\"\".concat(expectedFieldTypesWebComponents, \", \").concat(wrapperWebComponents)));\nvar errors = nodes.filter(function (node) {\n  return node.error;\n});\n(0, _chai.expect)(errors).to.have.lengthOf(expectedNumberOfErrors);",
              "err": {},
              "uuid": "d564e51e-1b0b-4c25-8334-0684c86dd499",
              "parentUUID": "ba595732-e86b-420c-9445-66c9cfe164b2",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "d564e51e-1b0b-4c25-8334-0684c86dd499"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 13,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "899ab34e-86ac-448c-b984-450f4cea2e41",
          "title": "mock full name inputs page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/mock-simple-forms-patterns/tests/pages/mockTextInputFullName.unit.spec.jsx",
          "file": "/src/applications/simple-forms/mock-simple-forms-patterns/tests/pages/mockTextInputFullName.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should have appropriate number of fields",
              "fullTitle": "mock full name inputs page should have appropriate number of fields",
              "timedOut": false,
              "duration": 4,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps = getProps(),\n  mockStore = _getProps.mockStore;\nvar _render = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypes)).to.have.lengthOf(expectedNumberOfFields);",
              "err": {},
              "uuid": "f73cb09b-610a-4a14-9f6f-c42b8954f3c4",
              "parentUUID": "899ab34e-86ac-448c-b984-450f4cea2e41",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f73cb09b-610a-4a14-9f6f-c42b8954f3c4"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 4,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "414b1c00-b0f8-465b-bd53-46dd0320a483",
          "title": "mock full name inputs page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/mock-simple-forms-patterns/tests/pages/mockTextInputFullName.unit.spec.jsx",
          "file": "/src/applications/simple-forms/mock-simple-forms-patterns/tests/pages/mockTextInputFullName.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should show the correct number of errors on submit",
              "fullTitle": "mock full name inputs page should show the correct number of errors on submit",
              "timedOut": false,
              "duration": 17,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps2 = getProps(),\n  mockStore = _getProps2.mockStore;\nvar _render2 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  getByRole = _render2.getByRole,\n  queryAllByRole = _render2.queryAllByRole;\ngetByRole('button', {\n  name: /submit/i\n}).click();\nvar errors = queryAllByRole('alert');\n(0, _chai.expect)(errors).to.have.lengthOf(expectedNumberOfErrors);",
              "err": {},
              "uuid": "5a5a02c3-ed33-40c8-9221-7dc990b0115d",
              "parentUUID": "414b1c00-b0f8-465b-bd53-46dd0320a483",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "5a5a02c3-ed33-40c8-9221-7dc990b0115d"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 17,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "7f9f31fd-06c8-4934-bc9a-d86aeb672c8c",
          "title": "mock ssn inputs page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/mock-simple-forms-patterns/tests/pages/mockTextInputSsn.unit.spec.jsx",
          "file": "/src/applications/simple-forms/mock-simple-forms-patterns/tests/pages/mockTextInputSsn.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should have appropriate number of web components",
              "fullTitle": "mock ssn inputs page should have appropriate number of web components",
              "timedOut": false,
              "duration": 4,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps3 = getProps(),\n  mockStore = _getProps3.mockStore;\nvar _render3 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render3.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypesWebComponents)).to.have.lengthOf(expectedNumberOfFields);",
              "err": {},
              "uuid": "d4401fd5-c0cb-4aac-9cb4-28ea83533a49",
              "parentUUID": "7f9f31fd-06c8-4934-bc9a-d86aeb672c8c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "d4401fd5-c0cb-4aac-9cb4-28ea83533a49"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 4,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "a9b73a14-c141-4984-94db-a52d0a8b48ea",
          "title": "mock ssn inputs page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/mock-simple-forms-patterns/tests/pages/mockTextInputSsn.unit.spec.jsx",
          "file": "/src/applications/simple-forms/mock-simple-forms-patterns/tests/pages/mockTextInputSsn.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should show the correct number of errors on submit for web components",
              "fullTitle": "mock ssn inputs page should show the correct number of errors on submit for web components",
              "timedOut": false,
              "duration": 13,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps4 = getProps(),\n  mockStore = _getProps4.mockStore;\nvar _render4 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render4.container,\n  getByRole = _render4.getByRole;\ngetByRole('button', {\n  name: /submit/i\n}).click();\nvar nodes = Array.from(container.querySelectorAll(\"\".concat(expectedFieldTypesWebComponents, \", \").concat(wrapperWebComponents)));\nvar errors = nodes.filter(function (node) {\n  return node.error;\n});\n(0, _chai.expect)(errors).to.have.lengthOf(expectedNumberOfErrors);",
              "err": {},
              "uuid": "337de1e2-b603-4a2f-8fe9-2f2f6d89ef83",
              "parentUUID": "a9b73a14-c141-4984-94db-a52d0a8b48ea",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "337de1e2-b603-4a2f-8fe9-2f2f6d89ef83"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 13,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "eb3265cd-c1c6-41f6-bb90-6d14f1397a9c",
          "title": "mock text input widgets page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/mock-simple-forms-patterns/tests/pages/mockTextInputWidgets1.unit.spec.jsx",
          "file": "/src/applications/simple-forms/mock-simple-forms-patterns/tests/pages/mockTextInputWidgets1.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should have appropriate number of web components",
              "fullTitle": "mock text input widgets page should have appropriate number of web components",
              "timedOut": false,
              "duration": 3,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps3 = getProps(),\n  mockStore = _getProps3.mockStore;\nvar _render3 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render3.container;\n(0, _chai.expect)(container.querySelectorAll(expectedFieldTypesWebComponents)).to.have.lengthOf(expectedNumberOfFields);",
              "err": {},
              "uuid": "7bcd064d-492e-4e3f-9b7c-dcbc93d5c488",
              "parentUUID": "eb3265cd-c1c6-41f6-bb90-6d14f1397a9c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "7bcd064d-492e-4e3f-9b7c-dcbc93d5c488"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "9f7443bd-65a7-4dba-a703-8cd07fb62ec7",
          "title": "mock text input widgets page",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/simple-forms/mock-simple-forms-patterns/tests/pages/mockTextInputWidgets1.unit.spec.jsx",
          "file": "/src/applications/simple-forms/mock-simple-forms-patterns/tests/pages/mockTextInputWidgets1.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should show the correct number of errors on submit for web components",
              "fullTitle": "mock text input widgets page should show the correct number of errors on submit for web components",
              "timedOut": false,
              "duration": 12,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getProps4 = getProps(),\n  mockStore = _getProps4.mockStore;\nvar _render4 = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n    definitions: formConfig.defaultDefinitions,\n    schema: schema,\n    uiSchema: uiSchema,\n    data: data,\n    formData: {}\n  }))),\n  container = _render4.container,\n  getByRole = _render4.getByRole;\ngetByRole('button', {\n  name: /submit/i\n}).click();\nvar nodes = Array.from(container.querySelectorAll(\"\".concat(expectedFieldTypesWebComponents, \", \").concat(wrapperWebComponents)));\nvar errors = nodes.filter(function (node) {\n  return node.error;\n});\n(0, _chai.expect)(errors).to.have.lengthOf(expectedNumberOfErrors);",
              "err": {},
              "uuid": "701a8fea-f2b9-4d54-af63-70444770a8ef",
              "parentUUID": "9f7443bd-65a7-4dba-a703-8cd07fb62ec7",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "701a8fea-f2b9-4d54-af63-70444770a8ef"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 12,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 10000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.7.3"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "undefined_2025-03-03T222342503Z",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "min",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "id": "default",
        "consoleReporter": "min",
        "reportDir": "mocha/results",
        "reportFilename": "undefined_2025-03-03T222342503Z",
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}