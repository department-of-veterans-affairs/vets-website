{
  "stats": {
    "suites": 54,
    "tests": 149,
    "passes": 149,
    "pending": 0,
    "failures": 0,
    "start": "2025-03-03T22:16:47.800Z",
    "end": "2025-03-03T22:16:51.401Z",
    "duration": 3601,
    "testsRegistered": 149,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "ad2d7bef-8e5e-4f56-bc8e-c9380d5af340",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [
        {
          "title": "\"before each\" hook: beforeEach in \"{root}\"",
          "fullTitle": "\"before each\" hook: beforeEach in \"{root}\"",
          "timedOut": false,
          "duration": 3,
          "state": null,
          "speed": null,
          "pass": false,
          "fail": false,
          "pending": false,
          "context": null,
          "code": "cov_5fzq6lsur().f[20]++;\ncov_5fzq6lsur().s[70]++;\nsetupJSDom();\ncov_5fzq6lsur().s[71]++;\nresetFetch();\ncov_5fzq6lsur().s[72]++;\ncleanupStorage();\ncov_5fzq6lsur().s[73]++;\nif (isStressTest == 'false') {\n  cov_5fzq6lsur().b[12][0]++;\n  cov_5fzq6lsur().s[74]++;\n  checkAllowList(this);\n} else {\n  cov_5fzq6lsur().b[12][1]++;\n}\ncov_5fzq6lsur().s[75]++;\nif ((cov_5fzq6lsur().b[14][0]++, process.env.CI) || (cov_5fzq6lsur().b[14][1]++, ['trace', 'debug'].includes(process.env.LOG_LEVEL))) {\n  cov_5fzq6lsur().b[13][0]++;\n  cov_5fzq6lsur().s[76]++;\n  console.log('running: ', this.currentTest.file.slice(this.currentTest.file.indexOf('src')));\n} else {\n  cov_5fzq6lsur().b[13][1]++;\n}",
          "err": {},
          "uuid": "48190b5a-ed4f-4e7e-97cc-6fae1439bdc2",
          "parentUUID": "ad2d7bef-8e5e-4f56-bc8e-c9380d5af340",
          "isHook": true,
          "skipped": false
        }
      ],
      "afterHooks": [
        {
          "title": "\"after each\" hook: afterEach in \"{root}\"",
          "fullTitle": "\"after each\" hook: afterEach in \"{root}\"",
          "timedOut": false,
          "duration": 0,
          "state": null,
          "speed": null,
          "pass": false,
          "fail": false,
          "pending": false,
          "context": null,
          "code": "cov_5fzq6lsur().f[21]++;\ncov_5fzq6lsur().s[77]++;\ncleanupStorage();\ncov_5fzq6lsur().s[78]++;\nflushPromises();",
          "err": {},
          "uuid": "c21846ea-aa20-480f-87d8-29bc9b5d12c8",
          "parentUUID": "ad2d7bef-8e5e-4f56-bc8e-c9380d5af340",
          "isHook": true,
          "skipped": false
        },
        {
          "title": "\"after each\" hook in \"{root}\"",
          "fullTitle": "\"after each\" hook in \"{root}\"",
          "timedOut": false,
          "duration": 0,
          "state": null,
          "speed": null,
          "pass": false,
          "fail": false,
          "pending": false,
          "context": null,
          "code": "(0, _pure.cleanup)();",
          "err": {},
          "uuid": "7c770e0b-948e-40bf-8ce8-193a747e0323",
          "parentUUID": "ad2d7bef-8e5e-4f56-bc8e-c9380d5af340",
          "isHook": true,
          "skipped": false
        }
      ],
      "tests": [],
      "suites": [
        {
          "uuid": "bcf7f470-8b8c-42c8-8077-7f47450fc15d",
          "title": "CollapsiblePanel in Pre-need Supporting files",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/pre-need/tests/components/CollapsiblePanel.unit.spec.jsx",
          "file": "/src/applications/pre-need/tests/components/CollapsiblePanel.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should render",
              "fullTitle": "CollapsiblePanel in Pre-need Supporting files should render",
              "timedOut": false,
              "duration": 39,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var wrapper = (0, _enzyme.mount)(/*#__PURE__*/_react.default.createElement(_CollapsiblePanel.default, props));\n(0, _chai.expect)(wrapper.find('button').length).to.equal(1);\nwrapper.unmount();",
              "err": {},
              "uuid": "174ca049-7cd2-474a-ab43-c00e76e37412",
              "parentUUID": "bcf7f470-8b8c-42c8-8077-7f47450fc15d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should expand collapsable panel when clicked",
              "fullTitle": "CollapsiblePanel in Pre-need Supporting files should expand collapsable panel when clicked",
              "timedOut": false,
              "duration": 9,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var wrapper = (0, _enzyme.mount)(/*#__PURE__*/_react.default.createElement(_CollapsiblePanel.default, props));\nvar expandedContent = wrapper.find(\"#collapsible-\".concat(props.header));\n(0, _chai.expect)(expandedContent.exists()).to.be.false;\nvar button = wrapper.find('#collapsibleButton3');\nbutton.simulate('click');\nexpandedContent = wrapper.find(\"#collapsible-\".concat(props.header));\n(0, _chai.expect)(expandedContent.exists()).to.be.true;\nwrapper.unmount();",
              "err": {},
              "uuid": "ab6a04a4-4984-486a-ba41-e2672a702d6f",
              "parentUUID": "bcf7f470-8b8c-42c8-8077-7f47450fc15d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should have expanded content when clicked",
              "fullTitle": "CollapsiblePanel in Pre-need Supporting files should have expanded content when clicked",
              "timedOut": false,
              "duration": 6,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var wrapper = (0, _enzyme.mount)(/*#__PURE__*/_react.default.createElement(_CollapsiblePanel.default, props));\nvar button = wrapper.find('#collapsibleButton3');\nbutton.simulate('click');\nvar expandedContent = wrapper.find(\"#collapsible-\".concat(props.header));\n(0, _chai.expect)(expandedContent.at(0).text()).to.equal('test content');\nwrapper.unmount();",
              "err": {},
              "uuid": "0e28dd55-a94a-4635-b36c-161efc54ad76",
              "parentUUID": "bcf7f470-8b8c-42c8-8077-7f47450fc15d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should have default expanded content when clicked",
              "fullTitle": "CollapsiblePanel in Pre-need Supporting files should have default expanded content when clicked",
              "timedOut": false,
              "duration": 6,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var wrapper = (0, _enzyme.mount)(/*#__PURE__*/_react.default.createElement(_CollapsiblePanel.default, null));\nvar button = wrapper.find('#collapsibleButton3');\nbutton.simulate('click');\nvar expandedContent = wrapper.find('#collapsible-3');\n(0, _chai.expect)(expandedContent.at(0).text()).to.equal('');\nwrapper.unmount();",
              "err": {},
              "uuid": "834bcef9-ba94-4ace-833f-cf4cc8cb46f7",
              "parentUUID": "bcf7f470-8b8c-42c8-8077-7f47450fc15d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "174ca049-7cd2-474a-ab43-c00e76e37412",
            "ab6a04a4-4984-486a-ba41-e2672a702d6f",
            "0e28dd55-a94a-4635-b36c-161efc54ad76",
            "834bcef9-ba94-4ace-833f-cf4cc8cb46f7"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 60,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "294e93c9-e167-4721-8c30-de7706066ae5",
          "title": "DownloadLink in Pre-need components",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/pre-need/tests/components/DownloadLink.unit.spec.jsx",
          "file": "/src/applications/pre-need/tests/components/DownloadLink.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should render",
              "fullTitle": "DownloadLink in Pre-need components should render",
              "timedOut": false,
              "duration": 4,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var wrapper = (0, _enzyme.mount)(/*#__PURE__*/_react.default.createElement(_DownloadLink.default, props));\n(0, _chai.expect)(wrapper.find('a').length).to.equal(1);\nwrapper.unmount();",
              "err": {},
              "uuid": "e9a4a891-914b-4127-a5c0-b30c3a87f37a",
              "parentUUID": "294e93c9-e167-4721-8c30-de7706066ae5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should have default text content",
              "fullTitle": "DownloadLink in Pre-need components should have default text content",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var wrapper = (0, _enzyme.mount)(/*#__PURE__*/_react.default.createElement(_DownloadLink.default, null));\n(0, _chai.expect)(wrapper.find('a').at(0).text()).to.equal(expectedTestContent);\nwrapper.unmount();",
              "err": {},
              "uuid": "0b04cedf-c100-4734-8e95-fdf398720688",
              "parentUUID": "294e93c9-e167-4721-8c30-de7706066ae5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should have input text content",
              "fullTitle": "DownloadLink in Pre-need components should have input text content",
              "timedOut": false,
              "duration": 4,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var wrapper = (0, _enzyme.mount)(/*#__PURE__*/_react.default.createElement(_DownloadLink.default, props));\n(0, _chai.expect)(wrapper.find('a').at(0).text()).to.equal(testContent + staticText);\nwrapper.unmount();",
              "err": {},
              "uuid": "8aef2ea2-d7b5-43e5-807b-b7fc3f008ca7",
              "parentUUID": "294e93c9-e167-4721-8c30-de7706066ae5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should have data layer events",
              "fullTitle": "DownloadLink in Pre-need components should have data layer events",
              "timedOut": false,
              "duration": 4,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "props.subTaskEvent = true;\nvar wrapper = (0, _enzyme.mount)(/*#__PURE__*/_react.default.createElement(_DownloadLink.default, props));\nvar expandedContent = wrapper.find('a');\nexpandedContent.simulate('click');\nvar priorEvent = window.dataLayer;\n(0, _chai.expect)(priorEvent.length).to.equal(1);\nexpandedContent.simulate('click');\n(0, _chai.expect)(priorEvent.length).to.equal(2);\nwrapper.unmount();",
              "err": {},
              "uuid": "598ad08a-94c1-4e2c-9558-42899d61707a",
              "parentUUID": "294e93c9-e167-4721-8c30-de7706066ae5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should not have data layer events",
              "fullTitle": "DownloadLink in Pre-need components should not have data layer events",
              "timedOut": false,
              "duration": 3,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "props.subTaskEvent = false;\nvar wrapper = (0, _enzyme.mount)(/*#__PURE__*/_react.default.createElement(_DownloadLink.default, props));\nvar expandedContent = wrapper.find('a');\nexpandedContent.simulate('click');\nvar priorEvent = window.dataLayer;\n(0, _chai.expect)(priorEvent.length).to.equal(0);\nwrapper.unmount();",
              "err": {},
              "uuid": "3b597f2f-deb9-4d1a-93a6-e72db51f3b5d",
              "parentUUID": "294e93c9-e167-4721-8c30-de7706066ae5",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "e9a4a891-914b-4127-a5c0-b30c3a87f37a",
            "0b04cedf-c100-4734-8e95-fdf398720688",
            "8aef2ea2-d7b5-43e5-807b-b7fc3f008ca7",
            "598ad08a-94c1-4e2c-9558-42899d61707a",
            "3b597f2f-deb9-4d1a-93a6-e72db51f3b5d"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 17,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "f8939821-af62-47be-b5b4-6b0da092bd00",
          "title": "Pre-need EligibleBuriedView component",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/pre-need/tests/components/EligibleBuriedView.unit.spec.jsx",
          "file": "/src/applications/pre-need/tests/components/EligibleBuriedView.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "renders and unmounts without crashing",
              "fullTitle": "Pre-need EligibleBuriedView component renders and unmounts without crashing",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var wrapper = (0, _enzyme.mount)(/*#__PURE__*/_react.default.createElement(_EligibleBuriedView.default, {\n  formData: formData\n}));\n(0, _chai.expect)(wrapper.exists()).to.be.true;\nwrapper.unmount();\n(0, _chai.expect)(wrapper.exists()).to.be.false;",
              "err": {},
              "uuid": "66dde17c-3590-4738-a0cb-1ac29a880699",
              "parentUUID": "f8939821-af62-47be-b5b4-6b0da092bd00",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "renders bolded test name",
              "fullTitle": "Pre-need EligibleBuriedView component renders bolded test name",
              "timedOut": false,
              "duration": 3,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var wrapper = (0, _enzyme.mount)(/*#__PURE__*/_react.default.createElement(_EligibleBuriedView.default, {\n  formData: formData\n}));\n(0, _chai.expect)(wrapper.find('strong').text()).to.eq('test name');\nwrapper.unmount();",
              "err": {},
              "uuid": "65d3e3fd-7a9f-4e7d-af90-ef6711d16234",
              "parentUUID": "f8939821-af62-47be-b5b4-6b0da092bd00",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "66dde17c-3590-4738-a0cb-1ac29a880699",
            "65d3e3fd-7a9f-4e7d-af90-ef6711d16234"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 5,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "c924032b-41fa-4c28-a121-72b1ea50ff2a",
          "title": "Pre-need ErrorText component",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/pre-need/tests/components/ErrorText.unit.spec.jsx",
          "file": "/src/applications/pre-need/tests/components/ErrorText.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "renders and unmounts without crashing",
              "fullTitle": "Pre-need ErrorText component renders and unmounts without crashing",
              "timedOut": false,
              "duration": 3,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var wrapper = (0, _enzyme.mount)(/*#__PURE__*/_react.default.createElement(_ErrorText.default, null));\n(0, _chai.expect)(wrapper.exists()).to.be.true;\nwrapper.unmount();\n(0, _chai.expect)(wrapper.exists()).to.be.false;",
              "err": {},
              "uuid": "b158a972-8a0d-4fa6-b19f-ec0c796dd2fc",
              "parentUUID": "c924032b-41fa-4c28-a121-72b1ea50ff2a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should have the CallNCACenter component rendered within it",
              "fullTitle": "Pre-need ErrorText component should have the CallNCACenter component rendered within it",
              "timedOut": false,
              "duration": 3,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var wrapper = (0, _enzyme.mount)(/*#__PURE__*/_react.default.createElement(_ErrorText.default, null));\nvar CallNCACenterComponent = wrapper.find('CallNCACenter');\n(0, _chai.expect)(CallNCACenterComponent.exists()).to.be.true;\nwrapper.unmount();",
              "err": {},
              "uuid": "458525bb-ec06-4a61-8136-cc54d540dbe1",
              "parentUUID": "c924032b-41fa-4c28-a121-72b1ea50ff2a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "b158a972-8a0d-4fa6-b19f-ec0c796dd2fc",
            "458525bb-ec06-4a61-8136-cc54d540dbe1"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 6,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "ed0053e7-4cf6-49aa-80c6-e9655947b132",
          "title": "Pre-need Footer component",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/pre-need/tests/components/Footer.unit.spec.jsx",
          "file": "/src/applications/pre-need/tests/components/Footer.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "renders and unmounts without crashing",
              "fullTitle": "Pre-need Footer component renders and unmounts without crashing",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var wrapper = (0, _enzyme.mount)(/*#__PURE__*/_react.default.createElement(_Footer.default, {\n  formConfig: formConfig,\n  currentLocation: currentLocation\n}));\n(0, _chai.expect)(wrapper.exists()).to.be.true;\nwrapper.unmount();\n(0, _chai.expect)(wrapper.exists()).to.be.false;",
              "err": {},
              "uuid": "dc3914dc-90df-45f2-a221-6925b7ac7af0",
              "parentUUID": "ed0053e7-4cf6-49aa-80c6-e9655947b132",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "dc3914dc-90df-45f2-a221-6925b7ac7af0"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "8f080c64-28ba-4ae0-9814-48425503a97e",
          "title": "GetFormHelp in Pre-need components",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/pre-need/tests/components/GetFormHelp.unit.spec.jsx",
          "file": "/src/applications/pre-need/tests/components/GetFormHelp.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should render",
              "fullTitle": "GetFormHelp in Pre-need components should render",
              "timedOut": false,
              "duration": 3,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var wrapper = (0, _enzyme.mount)(/*#__PURE__*/_react.default.createElement(_GetFormHelp.default, null));\n(0, _chai.expect)(wrapper.find('va-telephone').length).to.equal(4);\nwrapper.unmount();",
              "err": {},
              "uuid": "e0719220-ffe9-418c-87dd-f5c430a7daab",
              "parentUUID": "8f080c64-28ba-4ae0-9814-48425503a97e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "e0719220-ffe9-418c-87dd-f5c430a7daab"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "0049475c-1bce-442a-8350-e648e687d13a",
          "title": "IntroductionPage in Pre-need components",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/pre-need/tests/components/IntroductionPage.unit.spec.jsx",
          "file": "/src/applications/pre-need/tests/components/IntroductionPage.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should render",
              "fullTitle": "IntroductionPage in Pre-need components should render",
              "timedOut": false,
              "duration": 32,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _getData = getData(),\n  props = _getData.props,\n  mockStore = _getData.mockStore;\nvar _render = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n    store: mockStore\n  }, /*#__PURE__*/_react.default.createElement(_IntroductionPage.default, props))),\n  container = _render.container;\n(0, _chai.expect)((0, _ui.$)('h2', container)).to.exist;",
              "err": {},
              "uuid": "acebb19c-7e78-4474-994c-5ae3e7247807",
              "parentUUID": "0049475c-1bce-442a-8350-e648e687d13a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "acebb19c-7e78-4474-994c-5ae3e7247807"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 32,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "4d7a5ae8-f831-46eb-8698-e00cb4c808df",
          "title": "Preneed Schemaform definition phone",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/pre-need/tests/components/Phone.unit.spec.jsx",
          "file": "/src/applications/pre-need/tests/components/Phone.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should render phone",
              "fullTitle": "Preneed Schemaform definition phone should render phone",
              "timedOut": false,
              "duration": 12,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var phoneUiSchema = (0, _Phone.default)();\nvar form = _testUtils.default.renderIntoDocument(/*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  schema: _definitions.default.phone,\n  uiSchema: phoneUiSchema\n}));\nvar formDOM = (0, _reactDom.findDOMNode)(form);\nvar input = formDOM.querySelector('input');\nvar phoneClasses = phoneUiSchema['ui:options'].widgetClassNames.split(' ');\nphoneClasses.forEach(function (className) {\n  (0, _chai.expect)(input.classList.contains(className)).to.be.true;\n});\n(0, _chai.expect)(input.type).to.equal('tel');\n(0, _chai.expect)(input.autocomplete).to.equal('tel');",
              "err": {},
              "uuid": "70780389-4a8d-4e8d-bf46-e29fdb55623d",
              "parentUUID": "4d7a5ae8-f831-46eb-8698-e00cb4c808df",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should render phone title",
              "fullTitle": "Preneed Schemaform definition phone should render phone title",
              "timedOut": false,
              "duration": 4,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var form = _testUtils.default.renderIntoDocument(/*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  schema: _definitions.default.phone,\n  uiSchema: (0, _Phone.default)('My phone')\n}));\nvar formDOM = (0, _reactDom.findDOMNode)(form);\n(0, _chai.expect)(formDOM.querySelector('label').textContent).to.equal('My phone');",
              "err": {},
              "uuid": "270084c3-3190-4342-a5fc-53c9a74a7582",
              "parentUUID": "4d7a5ae8-f831-46eb-8698-e00cb4c808df",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should render minLength phone error",
              "fullTitle": "Preneed Schemaform definition phone should render minLength phone error",
              "timedOut": false,
              "duration": 15,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var form = _testUtils.default.renderIntoDocument(/*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  schema: _definitions.default.phone,\n  uiSchema: (0, _Phone.default)()\n}));\nvar formDOM = (0, _reactDom.findDOMNode)(form);\n_testUtils.default.Simulate.change(formDOM.querySelector('input'), {\n  target: {\n    value: '1asdf'\n  }\n});\n_testUtils.default.findRenderedComponentWithType(form, _reactJsonschemaForm.default).onSubmit({\n  preventDefault: function preventDefault(f) {\n    return f;\n  }\n});\n(0, _chai.expect)(formDOM.querySelector('.usa-input-error-message').textContent).to.include('Phone number should be between 10-15 digits long');",
              "err": {},
              "uuid": "7f31ab18-b01a-4813-9408-70c476b766bd",
              "parentUUID": "4d7a5ae8-f831-46eb-8698-e00cb4c808df",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "70780389-4a8d-4e8d-bf46-e29fdb55623d",
            "270084c3-3190-4342-a5fc-53c9a74a7582",
            "7f31ab18-b01a-4813-9408-70c476b766bd"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 31,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "ca176582-af78-430b-8072-b1eedcf61095",
          "title": "Pre-need Schemaform <PhoneNumberWidget>",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/pre-need/tests/components/PhoneNumberWidget.unit.spec.jsx",
          "file": "/src/applications/pre-need/tests/components/PhoneNumberWidget.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should render",
              "fullTitle": "Pre-need Schemaform <PhoneNumberWidget> should render",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var tree = _skinDeep.default.shallowRender(/*#__PURE__*/_react.default.createElement(_PhoneNumberWidget.default, {\n  value: \"1234567890\"\n}));\n(0, _chai.expect)(tree.subTree('TextWidget').props.value).to.equal('1234567890');",
              "err": {},
              "uuid": "101976b9-c1c5-4eb2-9cb1-b3551b941cba",
              "parentUUID": "ca176582-af78-430b-8072-b1eedcf61095",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should render a \"tel\" type input",
              "fullTitle": "Pre-need Schemaform <PhoneNumberWidget> should render a \"tel\" type input",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var tree = _skinDeep.default.shallowRender(/*#__PURE__*/_react.default.createElement(_PhoneNumberWidget.default, null));\nvar input = tree.subTree('TextWidget').props;\n(0, _chai.expect)(input.type).to.equal('tel');\n(0, _chai.expect)(input.autocomplete).to.equal('tel');",
              "err": {},
              "uuid": "2f47af74-6b64-43bf-a8c0-552f04c339c5",
              "parentUUID": "ca176582-af78-430b-8072-b1eedcf61095",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should strip anything that is not a number on change",
              "fullTitle": "Pre-need Schemaform <PhoneNumberWidget> should strip anything that is not a number on change",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var onChange = _sinon.default.spy();\nvar tree = _skinDeep.default.shallowRender(/*#__PURE__*/_react.default.createElement(_PhoneNumberWidget.default, {\n  value: \"\",\n  onChange: onChange\n}));\ntree.subTree('TextWidget').props.onChange('+(154) 945-56x77~!@#$%^&*_=');\n(0, _chai.expect)(onChange.calledWith('1549455677')).to.be.true;",
              "err": {},
              "uuid": "5000d63f-390d-41ae-bbed-81c8aeff381b",
              "parentUUID": "ca176582-af78-430b-8072-b1eedcf61095",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should call onChange with undefined if value is blank",
              "fullTitle": "Pre-need Schemaform <PhoneNumberWidget> should call onChange with undefined if value is blank",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var onChange = _sinon.default.spy();\nvar tree = _skinDeep.default.shallowRender(/*#__PURE__*/_react.default.createElement(_PhoneNumberWidget.default, {\n  value: \"1231231234\",\n  onChange: onChange\n}));\ntree.subTree('TextWidget').props.onChange('');\n(0, _chai.expect)(onChange.calledWith(undefined)).to.be.true;",
              "err": {},
              "uuid": "a5ab28e2-fb43-4ad7-a394-ceb5b1d85ad5",
              "parentUUID": "ca176582-af78-430b-8072-b1eedcf61095",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "101976b9-c1c5-4eb2-9cb1-b3551b941cba",
            "2f47af74-6b64-43bf-a8c0-552f04c339c5",
            "5000d63f-390d-41ae-bbed-81c8aeff381b",
            "a5ab28e2-fb43-4ad7-a394-ceb5b1d85ad5"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "0ca80720-d1aa-4339-b898-b342ca462146",
          "title": "Pre-need PreparerHelpers components",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/pre-need/tests/components/PreparerHelpers.unit.spec.jsx",
          "file": "/src/applications/pre-need/tests/components/PreparerHelpers.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "renders and unmounts without crashing",
              "fullTitle": "Pre-need PreparerHelpers components renders and unmounts without crashing",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var wrapper = (0, _enzyme.mount)(/*#__PURE__*/_react.default.createElement(_PreparerHelpers.PreparerDetailsTitle, null));\n(0, _chai.expect)(wrapper.exists()).to.be.true;\nwrapper.unmount();\n(0, _chai.expect)(wrapper.exists()).to.be.false;",
              "err": {},
              "uuid": "0e1617f6-2652-4281-8506-28a3b64dca31",
              "parentUUID": "0ca80720-d1aa-4339-b898-b342ca462146",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "renders and unmounts without crashing",
              "fullTitle": "Pre-need PreparerHelpers components renders and unmounts without crashing",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var wrapper = (0, _enzyme.mount)(/*#__PURE__*/_react.default.createElement(_PreparerHelpers.ContactDetailsTitle, null));\n(0, _chai.expect)(wrapper.exists()).to.be.true;\nwrapper.unmount();\n(0, _chai.expect)(wrapper.exists()).to.be.false;",
              "err": {},
              "uuid": "ee1f7119-9a97-4447-ab25-dd5ab11df241",
              "parentUUID": "0ca80720-d1aa-4339-b898-b342ca462146",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "renders and unmounts without crashing",
              "fullTitle": "Pre-need PreparerHelpers components renders and unmounts without crashing",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var wrapper = (0, _enzyme.mount)(/*#__PURE__*/_react.default.createElement(_PreparerHelpers.PreparerDescription, null));\n(0, _chai.expect)(wrapper.exists()).to.be.true;\nwrapper.unmount();\n(0, _chai.expect)(wrapper.exists()).to.be.false;",
              "err": {},
              "uuid": "5f718b8c-ef4f-4085-bf39-6d6ac7312530",
              "parentUUID": "0ca80720-d1aa-4339-b898-b342ca462146",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "0e1617f6-2652-4281-8506-28a3b64dca31",
            "ee1f7119-9a97-4447-ab25-dd5ab11df241",
            "5f718b8c-ef4f-4085-bf39-6d6ac7312530"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 5,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "df6a1e5b-c607-4f91-b02e-094f76f2a460",
          "title": "PreparerRadioWidget in Pre-need preparer info",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/pre-need/tests/components/PreparerRadioWidget.unit.spec.jsx",
          "file": "/src/applications/pre-need/tests/components/PreparerRadioWidget.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should render",
              "fullTitle": "PreparerRadioWidget in Pre-need preparer info should render",
              "timedOut": false,
              "duration": 5,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var wrapper = (0, _enzyme.mount)(/*#__PURE__*/_react.default.createElement(_PreparerRadioWidget.default, props));\n(0, _chai.expect)(wrapper.find('va-radio-option').length).to.equal(2);\nwrapper.unmount();",
              "err": {},
              "uuid": "c0790ef5-6919-4512-89b0-ff89194ab206",
              "parentUUID": "df6a1e5b-c607-4f91-b02e-094f76f2a460",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should invoke onChange when a radio button is clicked",
              "fullTitle": "PreparerRadioWidget in Pre-need preparer info should invoke onChange when a radio button is clicked",
              "timedOut": false,
              "duration": 5,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var onChange = _sinon.default.spy();\nvar wrapper = (0, _enzyme.mount)(/*#__PURE__*/_react.default.createElement(_PreparerRadioWidget.default, _extends({}, props, {\n  onChange: onChange\n})));\nvar vaRadio = wrapper.find('VaRadio');\n(0, _chai.expect)(vaRadio.exists()).to.be.true;\nvaRadio.props().onVaValueChange({\n  detail: {\n    value: 'Pinhead',\n    checked: true\n  }\n});\n(0, _chai.expect)(onChange.calledWith('Pinhead')).to.be.true;\nwrapper.unmount();",
              "err": {},
              "uuid": "752deee8-cc25-43cf-866f-e798d7e0fd9e",
              "parentUUID": "df6a1e5b-c607-4f91-b02e-094f76f2a460",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "c0790ef5-6919-4512-89b0-ff89194ab206",
            "752deee8-cc25-43cf-866f-e798d7e0fd9e"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 10,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "7bc73420-3152-43b4-a0a2-a16f7e3a9e27",
          "title": "RaceEthnicityReviewField",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/pre-need/tests/components/RaceEthnicityReviewField.unit.spec.jsx",
          "file": "/src/applications/pre-need/tests/components/RaceEthnicityReviewField.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should render race categories if reviewMode is false",
              "fullTitle": "RaceEthnicityReviewField should render race categories if reviewMode is false",
              "timedOut": false,
              "duration": 14,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var props = {\n  formContext: {\n    reviewMode: false\n  },\n  uiSchema: {},\n  schema: {},\n  formData: {},\n  registry: {\n    fields: {\n      ObjectField: function ObjectField() {\n        return null;\n      }\n    }\n  }\n};\nvar wrapper = (0, _enzyme.shallow)(/*#__PURE__*/_react.default.createElement(_RaceEthnicityReviewField.default, props));\nvar objectField = wrapper.find(props.registry.fields.ObjectField);\n_chai.default.expect(objectField).to.have.lengthOf(1);\nwrapper.unmount();",
              "err": {},
              "uuid": "34979f2d-f3ae-478b-9f9f-7bec92830380",
              "parentUUID": "7bc73420-3152-43b4-a0a2-a16f7e3a9e27",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should render categories in reviewMode",
              "fullTitle": "RaceEthnicityReviewField should render categories in reviewMode",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var props = {\n  formContext: {\n    reviewMode: true\n  },\n  uiSchema: {\n    'ui:title': 'Which categories best describe you? (You may check more than one)',\n    prop1: {\n      'ui:title': 'Asian'\n    },\n    prop2: {\n      'ui:title': 'White'\n    }\n  },\n  schema: {\n    properties: {\n      prop1: {\n        type: 'string'\n      },\n      prop2: {\n        type: 'string'\n      }\n    }\n  },\n  formData: {\n    prop1: 'value1',\n    prop2: 'value2'\n  },\n  registry: {\n    fields: {\n      ObjectField: function ObjectField() {\n        return null;\n      }\n    }\n  }\n};\nvar wrapper = (0, _enzyme.shallow)(/*#__PURE__*/_react.default.createElement(_RaceEthnicityReviewField.default, props));\nvar reviewRows = wrapper.find('.review-row');\n_chai.default.expect(reviewRows).to.have.lengthOf(3);\n_chai.default.expect(reviewRows.at(0).find('dt').text()).to.equal('Which categories best describe you? (You may check more than one)');\n_chai.default.expect(reviewRows.at(1).find('dd').text()).to.equal('Asian');\n_chai.default.expect(reviewRows.at(2).find('dd').text()).to.equal('White');\nwrapper.unmount();",
              "err": {},
              "uuid": "4d0768b8-9168-4307-a817-8b2f46d72d58",
              "parentUUID": "7bc73420-3152-43b4-a0a2-a16f7e3a9e27",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should not render empty categories in reviewMode",
              "fullTitle": "RaceEthnicityReviewField should not render empty categories in reviewMode",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var props = {\n  formContext: {\n    reviewMode: true\n  },\n  uiSchema: {\n    'ui:title': 'Which categories best describe you? (You may check more than one)',\n    prop1: {\n      'ui:title': 'White'\n    },\n    prop2: {\n      'ui:title': 'Asian'\n    }\n  },\n  schema: {\n    properties: {\n      prop1: {\n        type: 'string'\n      },\n      prop2: {\n        type: 'string'\n      }\n    }\n  },\n  formData: {\n    prop1: 'value1'\n  },\n  registry: {\n    fields: {\n      ObjectField: function ObjectField() {\n        return null;\n      }\n    }\n  }\n};\nvar wrapper = (0, _enzyme.shallow)(/*#__PURE__*/_react.default.createElement(_RaceEthnicityReviewField.default, props));\nvar reviewRows = wrapper.find('.review-row');\n_chai.default.expect(reviewRows).to.have.lengthOf(2);\n_chai.default.expect(reviewRows.at(0).find('dt').text()).to.equal('Which categories best describe you? (You may check more than one)');\n_chai.default.expect(reviewRows.at(1).find('dd').text()).to.equal('White');\nwrapper.unmount();",
              "err": {},
              "uuid": "3bd98130-a9ff-41fe-9798-686ab356c8fb",
              "parentUUID": "7bc73420-3152-43b4-a0a2-a16f7e3a9e27",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "34979f2d-f3ae-478b-9f9f-7bec92830380",
            "4d0768b8-9168-4307-a817-8b2f46d72d58",
            "3bd98130-a9ff-41fe-9798-686ab356c8fb"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 17,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "8f8a8726-b424-4933-869f-918620483341",
          "title": "Pre-need ServicePeriodView Component",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/pre-need/tests/components/ServicePeriodView.unit.spec.jsx",
          "file": "/src/applications/pre-need/tests/components/ServicePeriodView.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should render",
              "fullTitle": "Pre-need ServicePeriodView Component should render",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var tree = _skinDeep.default.shallowRender(/*#__PURE__*/_react.default.createElement(_ServicePeriodView.default, props));\nvar input = tree.subTree('div');\n(0, _chai.expect)(input.type).to.equal('div');",
              "err": {},
              "uuid": "d62bb0fd-d233-4708-8752-21d273aa444e",
              "parentUUID": "8f8a8726-b424-4933-869f-918620483341",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should populate date field",
              "fullTitle": "Pre-need ServicePeriodView Component should populate date field",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var tree = _skinDeep.default.shallowRender(/*#__PURE__*/_react.default.createElement(_ServicePeriodView.default, props));\nvar input = tree.subTree('div');\n(0, _chai.expect)(input.text()).to.equal('01/01/1900 — 01/01/1905');",
              "err": {},
              "uuid": "71594691-89b3-4711-b026-cad5936074e5",
              "parentUUID": "8f8a8726-b424-4933-869f-918620483341",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "d62bb0fd-d233-4708-8752-21d273aa444e",
            "71594691-89b3-4711-b026-cad5936074e5"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "eb02b3f9-a614-4d15-ac02-5fa9d4d79547",
          "title": "SubmissionError component",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/pre-need/tests/components/SubmissionError.unit.spec.jsx",
          "file": "/src/applications/pre-need/tests/components/SubmissionError.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "renders and unmounts without crashing",
              "fullTitle": "SubmissionError component renders and unmounts without crashing",
              "timedOut": false,
              "duration": 25,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var wrapper = (0, _enzyme.mount)(/*#__PURE__*/_react.default.createElement(_SubmissionError.default, {\n  user: user,\n  saveLink: saveLink\n}));\n(0, _chai.expect)(wrapper.exists()).to.be.true;\nwrapper.unmount();\n(0, _chai.expect)(wrapper.exists()).to.be.false;",
              "err": {},
              "uuid": "2a11b557-fe2f-432d-81b3-806597ad5462",
              "parentUUID": "eb02b3f9-a614-4d15-ac02-5fa9d4d79547",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "2a11b557-fe2f-432d-81b3-806597ad5462"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 25,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "ec10b8cb-4809-4841-b324-91e809b8acb1",
          "title": "Pre-need SupportingFilesCollapsibleList component",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/pre-need/tests/components/SupportingFilesCollapsibleList.unit.spec.jsx",
          "file": "/src/applications/pre-need/tests/components/SupportingFilesCollapsibleList.unit.spec.jsx",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"Pre-need SupportingFilesCollapsibleList component\"",
              "fullTitle": "Pre-need SupportingFilesCollapsibleList component \"before each\" hook in \"Pre-need SupportingFilesCollapsibleList component\"",
              "timedOut": false,
              "duration": 4,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "wrapper = (0, _enzyme.mount)(/*#__PURE__*/_react.default.createElement(_SupportingFilesCollapsibleList.default, null));",
              "err": {},
              "uuid": "62635481-a7ed-48da-a507-a818cca77de7",
              "parentUUID": "ec10b8cb-4809-4841-b324-91e809b8acb1",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": "renders and unmounts without crashing",
              "fullTitle": "Pre-need SupportingFilesCollapsibleList component renders and unmounts without crashing",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, _chai.expect)(wrapper.exists()).to.be.true;\nwrapper.unmount();\n(0, _chai.expect)(wrapper.exists()).to.be.false;",
              "err": {},
              "uuid": "05c70a3a-1ee8-4e90-812b-9ee3e707e957",
              "parentUUID": "ec10b8cb-4809-4841-b324-91e809b8acb1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should render a collapsible list",
              "fullTitle": "Pre-need SupportingFilesCollapsibleList component should render a collapsible list",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var collapsibleList = wrapper.find('CollapsibleList');\n(0, _chai.expect)(collapsibleList.exists()).to.be.true;\nwrapper.unmount();",
              "err": {},
              "uuid": "d657030c-6939-4acb-9384-c41148be2832",
              "parentUUID": "ec10b8cb-4809-4841-b324-91e809b8acb1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "the collapsible list renders collapsible panels",
              "fullTitle": "Pre-need SupportingFilesCollapsibleList component the collapsible list renders collapsible panels",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var collapsiblePanels = wrapper.find('CollapsiblePanel');\n(0, _chai.expect)(collapsiblePanels).to.have.length(3);\nwrapper.unmount();",
              "err": {},
              "uuid": "b48bcb29-eeab-4eb6-80bf-e4dad15a256d",
              "parentUUID": "ec10b8cb-4809-4841-b324-91e809b8acb1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "each collapsible panel should expand when clicked",
              "fullTitle": "Pre-need SupportingFilesCollapsibleList component each collapsible panel should expand when clicked",
              "timedOut": false,
              "duration": 14,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var panels = wrapper.find('CollapsiblePanel');\n(0, _chai.expect)(wrapper.find('#collapsible-3').exists()).to.be.false;\npanels.forEach(function (panel) {\n  var button = panel.find('#collapsibleButton3');\n  button.simulate('click');\n});\n(0, _chai.expect)(wrapper.find('#collapsible-3').exists()).to.be.true;\n(0, _chai.expect)(wrapper.find('#collapsible-3')).to.have.length(3);\nwrapper.unmount();",
              "err": {},
              "uuid": "f1d4be61-0790-472a-802a-f68cdf7534e4",
              "parentUUID": "ec10b8cb-4809-4841-b324-91e809b8acb1",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "05c70a3a-1ee8-4e90-812b-9ee3e707e957",
            "d657030c-6939-4acb-9384-c41148be2832",
            "b48bcb29-eeab-4eb6-80bf-e4dad15a256d",
            "f1d4be61-0790-472a-802a-f68cdf7534e4"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 17,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "8bb761b7-cb5d-4280-b477-2a6c3a8ea30e",
          "title": "Pre-need SupportingFilesCollapsibleList component",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/pre-need/tests/components/SupportingFilesDescription.unit.spec.jsx",
          "file": "/src/applications/pre-need/tests/components/SupportingFilesDescription.unit.spec.jsx",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"Pre-need SupportingFilesCollapsibleList component\"",
              "fullTitle": "Pre-need SupportingFilesCollapsibleList component \"before each\" hook in \"Pre-need SupportingFilesCollapsibleList component\"",
              "timedOut": false,
              "duration": 3,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "wrapper = (0, _enzyme.mount)(/*#__PURE__*/_react.default.createElement(_SupportingFilesDescription.default, null));",
              "err": {},
              "uuid": "3ee283a4-1863-4395-b7d7-5226623fb1b6",
              "parentUUID": "8bb761b7-cb5d-4280-b477-2a6c3a8ea30e",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": "renders and unmounts without crashing",
              "fullTitle": "Pre-need SupportingFilesCollapsibleList component renders and unmounts without crashing",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, _chai.expect)(wrapper.exists()).to.be.true;\nwrapper.unmount();\n(0, _chai.expect)(wrapper.exists()).to.be.false;",
              "err": {},
              "uuid": "e73af039-f4af-49d1-9b1b-9e5896b9afd6",
              "parentUUID": "8bb761b7-cb5d-4280-b477-2a6c3a8ea30e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "renders collapsible list",
              "fullTitle": "Pre-need SupportingFilesCollapsibleList component renders collapsible list",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "(0, _chai.expect)(wrapper.find('CollapsibleList').exists()).to.be.true;\nwrapper.unmount();",
              "err": {},
              "uuid": "2e6a71e2-df78-4a34-bf3e-977a1a48fc1f",
              "parentUUID": "8bb761b7-cb5d-4280-b477-2a6c3a8ea30e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "e73af039-f4af-49d1-9b1b-9e5896b9afd6",
            "2e6a71e2-df78-4a34-bf3e-977a1a48fc1f"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "d8f0c4ab-6337-4552-b734-e10b5280556c",
          "title": "Pre-need applicant demographics",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/pre-need/tests/config/applicantDemographics.unit.spec.jsx",
          "file": "/src/applications/pre-need/tests/config/applicantDemographics.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should render",
              "fullTitle": "Pre-need applicant demographics should render",
              "timedOut": false,
              "duration": 36,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var form = (0, _enzyme.mount)(/*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  schema: schema,\n  definitions: _form.default.defaultDefinitions,\n  uiSchema: uiSchema\n}));\n(0, _chai.expect)(form.find('input').length).to.equal(14);\nform.unmount();",
              "err": {},
              "uuid": "1f9be14d-72c6-4eda-a3cf-835b73d9a5e4",
              "parentUUID": "d8f0c4ab-6337-4552-b734-e10b5280556c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should not submit empty form",
              "fullTitle": "Pre-need applicant demographics should not submit empty form",
              "timedOut": false,
              "duration": 41,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var onSubmit = _sinon.default.spy();\nvar form = (0, _enzyme.mount)(/*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  schema: schema,\n  definitions: _form.default.defaultDefinitions,\n  onSubmit: onSubmit,\n  uiSchema: uiSchema\n}));\nform.find('form').simulate('submit');\n(0, _chai.expect)(form.find('.usa-input-error').length).to.equal(3);\n(0, _chai.expect)(onSubmit.called).to.be.false;\nform.unmount();",
              "err": {},
              "uuid": "23924e12-0cae-406d-a629-3c1f32c6f170",
              "parentUUID": "d8f0c4ab-6337-4552-b734-e10b5280556c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should submit with required information",
              "fullTitle": "Pre-need applicant demographics should submit with required information",
              "timedOut": false,
              "duration": 70,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var onSubmit = _sinon.default.spy();\nvar form = (0, _enzyme.mount)(/*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  schema: schema,\n  definitions: _form.default.defaultDefinitions,\n  onSubmit: onSubmit,\n  uiSchema: uiSchema\n}));\n(0, _schemaformUtils.fillData)(form, 'input#root_application_veteran_gender_0', 'Female');\n(0, _schemaformUtils.selectCheckbox)(form, 'root_application_veteran_race_isSpanishHispanicLatino', true);\n(0, _schemaformUtils.selectRadio)(form, 'root_application_veteran_maritalStatus', 'Single');\nform.find('form').simulate('submit');\n(0, _chai.expect)(onSubmit.called).to.be.true;\nform.unmount();",
              "err": {},
              "uuid": "7720418f-38f7-43a3-a5ff-5932d4f0daa9",
              "parentUUID": "d8f0c4ab-6337-4552-b734-e10b5280556c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "1f9be14d-72c6-4eda-a3cf-835b73d9a5e4",
            "23924e12-0cae-406d-a629-3c1f32c6f170",
            "7720418f-38f7-43a3-a5ff-5932d4f0daa9"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 147,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "f5d03659-69d1-4aef-a805-7f5f57007576",
          "title": "Pre-need applicant military history",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/pre-need/tests/config/applicantMilitaryHistory.unit.spec.jsx",
          "file": "/src/applications/pre-need/tests/config/applicantMilitaryHistory.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should render",
              "fullTitle": "Pre-need applicant military history should render",
              "timedOut": false,
              "duration": 57,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var form = (0, _enzyme.mount)(/*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  schema: schema,\n  definitions: _form.default.defaultDefinitions,\n  uiSchema: uiSchema\n}));\n(0, _chai.expect)(form.find('input').length).to.equal(4);\n(0, _chai.expect)(form.find('select').length).to.equal(5);\nform.unmount();",
              "err": {},
              "uuid": "2f22b0d8-f439-43f2-8963-03fb7df84a73",
              "parentUUID": "f5d03659-69d1-4aef-a805-7f5f57007576",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "2f22b0d8-f439-43f2-8963-03fb7df84a73"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 57,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "4d7c00a0-cd0b-42f1-950a-0a52b455e9e4",
          "title": "Pre-need applicant military name",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/pre-need/tests/config/applicantMilitaryName.unit.spec.jsx",
          "file": "/src/applications/pre-need/tests/config/applicantMilitaryName.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should render",
              "fullTitle": "Pre-need applicant military name should render",
              "timedOut": false,
              "duration": 8,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var form = (0, _enzyme.mount)(/*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  schema: schema,\n  definitions: _form.default.defaultDefinitions,\n  uiSchema: uiSchema\n}));\n(0, _chai.expect)(form.find('input').length).to.equal(2);\nform.unmount();",
              "err": {},
              "uuid": "62a51813-8e70-43b0-baec-dea8cc9eb090",
              "parentUUID": "4d7c00a0-cd0b-42f1-950a-0a52b455e9e4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should not submit empty form",
              "fullTitle": "Pre-need applicant military name should not submit empty form",
              "timedOut": false,
              "duration": 13,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var onSubmit = _sinon.default.spy();\nvar form = (0, _enzyme.mount)(/*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  schema: schema,\n  definitions: _form.default.defaultDefinitions,\n  onSubmit: onSubmit,\n  uiSchema: uiSchema\n}));\nform.find('form').simulate('submit');\n(0, _chai.expect)(form.find('.usa-input-error').length).to.equal(1);\n(0, _chai.expect)(onSubmit.called).to.be.false;\nform.unmount();",
              "err": {},
              "uuid": "40b4fc06-28fb-4bba-a64c-f8cc5a69150d",
              "parentUUID": "4d7c00a0-cd0b-42f1-950a-0a52b455e9e4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should submit with required fields filled in",
              "fullTitle": "Pre-need applicant military name should submit with required fields filled in",
              "timedOut": false,
              "duration": 14,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var onSubmit = _sinon.default.spy();\nvar form = (0, _enzyme.mount)(/*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  schema: schema,\n  definitions: _form.default.defaultDefinitions,\n  onSubmit: onSubmit,\n  uiSchema: uiSchema\n}));\n(0, _schemaformUtils.selectRadio)(form, 'root_application_veteran_view:hasServiceName', 'N');\nform.find('form').simulate('submit');\n(0, _chai.expect)(form.find('.usa-input-error').length).to.equal(0);\n(0, _chai.expect)(onSubmit.called).to.be.true;\nform.unmount();",
              "err": {},
              "uuid": "7e57dc6b-9bfe-4b7f-bc76-2763a51d8eea",
              "parentUUID": "4d7c00a0-cd0b-42f1-950a-0a52b455e9e4",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "62a51813-8e70-43b0-baec-dea8cc9eb090",
            "40b4fc06-28fb-4bba-a64c-f8cc5a69150d",
            "7e57dc6b-9bfe-4b7f-bc76-2763a51d8eea"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 35,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "32666374-b060-4ac1-83b7-8577c70127b8",
          "title": "Pre-need applicant military name information",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/pre-need/tests/config/applicantMilitaryNameInformation.unit.spec.jsx",
          "file": "/src/applications/pre-need/tests/config/applicantMilitaryNameInformation.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should render",
              "fullTitle": "Pre-need applicant military name information should render",
              "timedOut": false,
              "duration": 17,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var form = (0, _enzyme.mount)(/*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  schema: schema,\n  definitions: _form.default.defaultDefinitions,\n  uiSchema: uiSchema\n}));\n(0, _chai.expect)(form.find('input').length).to.equal(3);\n(0, _chai.expect)(form.find('select').length).to.equal(1);\nform.unmount();",
              "err": {},
              "uuid": "3de67aa7-25f3-489b-a48d-d0fb89526801",
              "parentUUID": "32666374-b060-4ac1-83b7-8577c70127b8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should submit with required fields filled in",
              "fullTitle": "Pre-need applicant military name information should submit with required fields filled in",
              "timedOut": false,
              "duration": 30,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var onSubmit = _sinon.default.spy();\nvar form = (0, _enzyme.mount)(/*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  schema: schema,\n  definitions: _form.default.defaultDefinitions,\n  onSubmit: onSubmit,\n  uiSchema: uiSchema\n}));\n(0, _schemaformUtils.fillData)(form, 'input#root_application_veteran_serviceName_last', 'Smith');\n(0, _schemaformUtils.fillData)(form, 'input#root_application_veteran_serviceName_first', 'Jane');\nform.find('form').simulate('submit');\n(0, _chai.expect)(form.find('.usa-input-error').length).to.equal(0);\n(0, _chai.expect)(onSubmit.called).to.be.true;\nform.unmount();",
              "err": {},
              "uuid": "878ab669-3bcb-4475-9d1d-2e1dc5671e30",
              "parentUUID": "32666374-b060-4ac1-83b7-8577c70127b8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should submit with all info filled in",
              "fullTitle": "Pre-need applicant military name information should submit with all info filled in",
              "timedOut": false,
              "duration": 39,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var onSubmit = _sinon.default.spy();\nvar form = (0, _enzyme.mount)(/*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  schema: schema,\n  definitions: _form.default.defaultDefinitions,\n  onSubmit: onSubmit,\n  uiSchema: uiSchema\n}));\n(0, _schemaformUtils.fillData)(form, 'input#root_application_veteran_serviceName_last', 'Smith');\n(0, _schemaformUtils.fillData)(form, 'input#root_application_veteran_serviceName_first', 'Jane');\n(0, _schemaformUtils.fillData)(form, 'input#root_application_veteran_serviceName_middle', 'M');\n(0, _schemaformUtils.fillData)(form, 'select#root_application_veteran_serviceName_suffix', 'Jr.');\nform.find('form').simulate('submit');\n(0, _chai.expect)(form.find('.usa-input-error').length).to.equal(0);\n(0, _chai.expect)(onSubmit.called).to.be.true;\nform.unmount();",
              "err": {},
              "uuid": "bf70653c-0349-4205-b5d2-d584688d4e23",
              "parentUUID": "32666374-b060-4ac1-83b7-8577c70127b8",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "3de67aa7-25f3-489b-a48d-d0fb89526801",
            "878ab669-3bcb-4475-9d1d-2e1dc5671e30",
            "bf70653c-0349-4205-b5d2-d584688d4e23"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 86,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "49bf9036-8501-4a13-8f5d-21789fb11ae5",
          "title": "Pre-need applicant relationship to vet",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/pre-need/tests/config/applicantRelationshipToVet.unit.spec.jsx",
          "file": "/src/applications/pre-need/tests/config/applicantRelationshipToVet.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should render",
              "fullTitle": "Pre-need applicant relationship to vet should render",
              "timedOut": false,
              "duration": 17,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var form = (0, _enzyme.mount)(/*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  schema: schema,\n  definitions: _form.default.defaultDefinitions,\n  uiSchema: uiSchema\n}));\n(0, _chai.expect)(form.find('input').length).to.equal(4);\n(0, _chai.expect)(form.find('va-additional-info').length).to.equal(1);\n(0, _chai.expect)(form.find('va-additional-info').html()).to.include('<va-additional-info trigger=\"What if the applicant is not a service member or Veteran?\"><ul><li>A <strong>spouse</strong> is a person who is or was legally married to a service member or Veteran. A <strong>surviving spouse</strong> is someone who was legally married to the service member or Veteran at the time of their death and includes a surviving spouse who remarried.</li><li>An <strong>unmarried adult child</strong> is an individual who became physically or mentally disabled permanently and incapable of self-support before the age of 21, or before 23 years of age if pursuing a full-time course of instruction at an approved educational institution.</li><li>For <strong>other</strong> applicants such as the parent of a service member, we’ll ask questions about the service member (the sponsor) to determine eligibility for burial in a VA national cemetery.</li></ul></va-additional-info>');\nform.unmount();",
              "err": {},
              "uuid": "3d4f96be-dd5a-408f-b15f-7759f3d949fe",
              "parentUUID": "49bf9036-8501-4a13-8f5d-21789fb11ae5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should not submit empty form",
              "fullTitle": "Pre-need applicant relationship to vet should not submit empty form",
              "timedOut": false,
              "duration": 17,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var onSubmit = _sinon.default.spy();\nvar form = (0, _enzyme.mount)(/*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  schema: schema,\n  definitions: _form.default.defaultDefinitions,\n  onSubmit: onSubmit,\n  uiSchema: uiSchema\n}));\nform.find('form').simulate('submit');\n(0, _chai.expect)(form.find('.usa-input-error').length).to.equal(1);\n(0, _chai.expect)(onSubmit.called).to.be.false;\nform.unmount();",
              "err": {},
              "uuid": "36bc1099-4d85-4160-809a-f6d3080cb44d",
              "parentUUID": "49bf9036-8501-4a13-8f5d-21789fb11ae5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should submit with required information",
              "fullTitle": "Pre-need applicant relationship to vet should submit with required information",
              "timedOut": false,
              "duration": 26,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var onSubmit = _sinon.default.spy();\nvar form = (0, _enzyme.mount)(/*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  schema: schema,\n  definitions: _form.default.defaultDefinitions,\n  onSubmit: onSubmit,\n  uiSchema: uiSchema\n}));\n(0, _schemaformUtils.selectRadio)(form, 'root_application_claimant_relationshipToVet', '1');\nform.find('form').simulate('submit');\n(0, _chai.expect)(onSubmit.called).to.be.true;\nform.unmount();",
              "err": {},
              "uuid": "4a1ec95a-d21f-4c7b-8f17-da258e7cf5d3",
              "parentUUID": "49bf9036-8501-4a13-8f5d-21789fb11ae5",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "3d4f96be-dd5a-408f-b15f-7759f3d949fe",
            "36bc1099-4d85-4160-809a-f6d3080cb44d",
            "4a1ec95a-d21f-4c7b-8f17-da258e7cf5d3"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 60,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "b7e0b9e6-24d5-452a-8b38-813ddf7ae9dc",
          "title": "Pre-need burial benefits",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/pre-need/tests/config/burialBenefits.unit.spec.jsx",
          "file": "/src/applications/pre-need/tests/config/burialBenefits.unit.spec.jsx",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"Pre-need burial benefits\"",
              "fullTitle": "Pre-need burial benefits \"before each\" hook in \"Pre-need burial benefits\"",
              "timedOut": false,
              "duration": 1,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "return (0, _helpers.mockFetch)(response);",
              "err": {},
              "uuid": "8d3bffcd-ed0a-4053-9918-c692f5a0c397",
              "parentUUID": "b7e0b9e6-24d5-452a-8b38-813ddf7ae9dc",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": "should render",
              "fullTitle": "Pre-need burial benefits should render",
              "timedOut": false,
              "duration": 17,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var form = (0, _enzyme.mount)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n  store: store\n}, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  schema: schema,\n  definitions: _form.default.defaultDefinitions,\n  uiSchema: uiSchema\n})));\n(0, _chai.expect)(form.find('input').length).to.equal(4);\nform.unmount();",
              "err": {},
              "uuid": "327bd5c5-324f-4494-8364-4daa5744df2b",
              "parentUUID": "b7e0b9e6-24d5-452a-8b38-813ddf7ae9dc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should not submit empty form",
              "fullTitle": "Pre-need burial benefits should not submit empty form",
              "timedOut": false,
              "duration": 18,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var onSubmit = _sinon.default.spy();\nvar form = (0, _enzyme.mount)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n  store: store\n}, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  schema: schema,\n  definitions: _form.default.defaultDefinitions,\n  onSubmit: onSubmit,\n  uiSchema: uiSchema\n})));\nform.find('form').simulate('submit');\n(0, _chai.expect)(form.find('.usa-input-error').length).to.equal(1);\n(0, _chai.expect)(onSubmit.called).to.be.false;\nform.unmount();",
              "err": {},
              "uuid": "2f1ecd24-e503-48db-b4fa-622392bd40ad",
              "parentUUID": "b7e0b9e6-24d5-452a-8b38-813ddf7ae9dc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should fill in desired cemetery",
              "fullTitle": "Pre-need burial benefits should fill in desired cemetery",
              "timedOut": false,
              "duration": 25,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var onSubmit = _sinon.default.spy();\nvar form = (0, _enzyme.mount)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n  store: store\n}, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  schema: schema,\n  definitions: _form.default.defaultDefinitions,\n  onSubmit: onSubmit,\n  uiSchema: uiSchema\n}), ' '));\nvar cemeteryField = form.find('input#root_application_claimant_desiredCemetery');\ncemeteryField.simulate('focus').simulate('change', {\n  target: {\n    value: 'ABRAHAM LINCOLN NATIONAL CEMETERY'\n  }\n});\nsetTimeout(function () {\n  cemeteryField.simulate('keyDown', {\n    key: 'ArrowDown',\n    keyCode: 40\n  }).simulate('keyDown', {\n    key: 'Enter',\n    keyCode: 13\n  }).simulate('blur');\n  // have to pull this again, doesn't work if we use cemeteryField\n  (0, _chai.expect)(form.find('input#root_application_claimant_desiredCemetery').props().value).to.equal('ABRAHAM LINCOLN NATIONAL CEMETERY');\n  form.unmount();\n  done();\n});",
              "err": {},
              "uuid": "7e709402-02b9-42fe-8e7f-3b76f61323d2",
              "parentUUID": "b7e0b9e6-24d5-452a-8b38-813ddf7ae9dc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should submit with required information",
              "fullTitle": "Pre-need burial benefits should submit with required information",
              "timedOut": false,
              "duration": 24,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var onSubmit = _sinon.default.spy();\nvar form = (0, _enzyme.mount)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n  store: store\n}, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  schema: schema,\n  definitions: _form.default.defaultDefinitions,\n  onSubmit: onSubmit,\n  uiSchema: uiSchema\n}), ' '));\n(0, _schemaformUtils.selectRadio)(form, 'root_application_hasCurrentlyBuried', '1');\nform.find('form').simulate('submit');\n(0, _chai.expect)(onSubmit.called).to.be.true;\nform.unmount();",
              "err": {},
              "uuid": "2ae71ab7-c002-4b4a-8cb3-5c060f4d15d2",
              "parentUUID": "b7e0b9e6-24d5-452a-8b38-813ddf7ae9dc",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "327bd5c5-324f-4494-8364-4daa5744df2b",
            "2f1ecd24-e503-48db-b4fa-622392bd40ad",
            "7e709402-02b9-42fe-8e7f-3b76f61323d2",
            "2ae71ab7-c002-4b4a-8cb3-5c060f4d15d2"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 84,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "ab419c19-c0d8-4eee-82f6-47290ed5f2bc",
          "title": "Pre-need applicant contact information",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/pre-need/tests/config/contactInformation.unit.spec.jsx",
          "file": "/src/applications/pre-need/tests/config/contactInformation.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should render",
              "fullTitle": "Pre-need applicant contact information should render",
              "timedOut": false,
              "duration": 113,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var form = (0, _enzyme.mount)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n  store: store\n}, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  schema: schema,\n  definitions: _form.default.defaultDefinitions,\n  uiSchema: uiSchema\n})));\n(0, _schemaformUtils.fillData)(form, 'select#root_application_claimant_address_country', 'USA');\n(0, _chai.expect)(form.find('input').length).to.equal(6);\n(0, _chai.expect)(form.find('select').length).to.equal(2);\n(0, _schemaformUtils.fillData)(form, 'select#root_application_claimant_address_country', 'MEX');\n(0, _chai.expect)(form.find('input').length).to.equal(6);\n(0, _chai.expect)(form.find('select').length).to.equal(1);\nform.unmount();",
              "err": {},
              "uuid": "c71cb6bb-6b55-429a-8691-efecf3f21590",
              "parentUUID": "ab419c19-c0d8-4eee-82f6-47290ed5f2bc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should not submit empty form",
              "fullTitle": "Pre-need applicant contact information should not submit empty form",
              "timedOut": false,
              "duration": 56,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var onSubmit = _sinon.default.spy();\nvar form = (0, _enzyme.mount)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n  store: store\n}, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  schema: schema,\n  definitions: _form.default.defaultDefinitions,\n  onSubmit: onSubmit,\n  uiSchema: uiSchema\n})));\nform.find('form').simulate('submit');\n(0, _chai.expect)(form.find('.usa-input-error').length).to.equal(5);\n(0, _chai.expect)(onSubmit.called).to.be.false;\nform.unmount();",
              "err": {},
              "uuid": "2dd58301-609a-442d-a1bc-465a627d0d5e",
              "parentUUID": "ab419c19-c0d8-4eee-82f6-47290ed5f2bc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should submit with valid data",
              "fullTitle": "Pre-need applicant contact information should submit with valid data",
              "timedOut": false,
              "duration": 116,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var onSubmit = _sinon.default.spy();\nvar form = (0, _enzyme.mount)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n  store: store\n}, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  schema: schema,\n  definitions: _form.default.defaultDefinitions,\n  onSubmit: onSubmit,\n  uiSchema: uiSchema\n})));\n(0, _schemaformUtils.fillData)(form, 'input#root_application_claimant_address_street', 'Test');\n(0, _schemaformUtils.fillData)(form, 'input#root_application_claimant_address_city', 'Test');\n(0, _schemaformUtils.fillData)(form, 'select#root_application_claimant_address_state', 'MA');\n(0, _schemaformUtils.fillData)(form, 'input#root_application_claimant_address_postalCode', '12345');\n(0, _schemaformUtils.fillData)(form, 'input#root_application_claimant_phoneNumber', '(111)-222-3333');\n(0, _schemaformUtils.fillData)(form, 'input#root_application_claimant_email', 'test@test.com');\nform.find('form').simulate('submit');\n(0, _chai.expect)(form.find('.usa-input-error').length).to.equal(0);\n(0, _chai.expect)(onSubmit.called).to.be.true;\nform.unmount();",
              "err": {},
              "uuid": "c94df2c9-3b5e-44ed-b9bc-48542a64c573",
              "parentUUID": "ab419c19-c0d8-4eee-82f6-47290ed5f2bc",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "c71cb6bb-6b55-429a-8691-efecf3f21590",
            "2dd58301-609a-442d-a1bc-465a627d0d5e",
            "c94df2c9-3b5e-44ed-b9bc-48542a64c573"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 285,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "7f14a54c-da1f-429f-a6fe-e5f9329e578a",
          "title": "Pre-need burial benefits",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/pre-need/tests/config/currentlyBuried.unit.spec.jsx",
          "file": "/src/applications/pre-need/tests/config/currentlyBuried.unit.spec.jsx",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"Pre-need burial benefits\"",
              "fullTitle": "Pre-need burial benefits \"before each\" hook in \"Pre-need burial benefits\"",
              "timedOut": false,
              "duration": 1,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "return (0, _helpers.mockFetch)(response);",
              "err": {},
              "uuid": "69c728a3-dd62-405e-8308-d0fd97924077",
              "parentUUID": "7f14a54c-da1f-429f-a6fe-e5f9329e578a",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": "should render",
              "fullTitle": "Pre-need burial benefits should render",
              "timedOut": false,
              "duration": 21,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var form = (0, _enzyme.mount)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n  store: store\n}, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  schema: schema,\n  definitions: _form.default.defaultDefinitions,\n  uiSchema: uiSchema\n})));\n(0, _chai.expect)(form.find('input').length).to.equal(2);\nform.unmount();",
              "err": {},
              "uuid": "8321aef6-c607-421c-be6e-236961ac4160",
              "parentUUID": "7f14a54c-da1f-429f-a6fe-e5f9329e578a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should not submit empty form",
              "fullTitle": "Pre-need burial benefits should not submit empty form",
              "timedOut": false,
              "duration": 29,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var onSubmit = _sinon.default.spy();\nvar form = (0, _enzyme.mount)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n  store: store\n}, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  schema: schema,\n  definitions: _form.default.defaultDefinitions,\n  onSubmit: onSubmit,\n  uiSchema: uiSchema\n})));\nform.find('form').simulate('submit');\n(0, _chai.expect)(form.find('.usa-input-error').length).to.equal(2);\n(0, _chai.expect)(onSubmit.called).to.be.false;\nform.unmount();",
              "err": {},
              "uuid": "53eaa713-d9bd-4392-94e3-8c3923d99932",
              "parentUUID": "7f14a54c-da1f-429f-a6fe-e5f9329e578a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should submit with required information",
              "fullTitle": "Pre-need burial benefits should submit with required information",
              "timedOut": false,
              "duration": 38,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var onSubmit = _sinon.default.spy();\nvar form = (0, _enzyme.mount)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n  store: store\n}, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  schema: schema,\n  definitions: _form.default.defaultDefinitions,\n  onSubmit: onSubmit,\n  uiSchema: uiSchema\n})));\n(0, _schemaformUtils.fillData)(form, 'input#root_application_currentlyBuriedPersons_0_name_first', 'test');\n(0, _schemaformUtils.fillData)(form, 'input#root_application_currentlyBuriedPersons_0_name_last', 'test2');\nform.find('form').simulate('submit');\n(0, _chai.expect)(onSubmit.called).to.be.true;\nform.unmount();",
              "err": {},
              "uuid": "5f9009f9-c9e4-433b-a97b-7b0fc5dad427",
              "parentUUID": "7f14a54c-da1f-429f-a6fe-e5f9329e578a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should change CurrentlyBuriedPersonsDescription to match veteran",
              "fullTitle": "Pre-need burial benefits should change CurrentlyBuriedPersonsDescription to match veteran",
              "timedOut": false,
              "duration": 17,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var onSubmit = _sinon.default.spy();\nvar form = (0, _enzyme.mount)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n  store: store\n}, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  schema: schema,\n  definitions: _form.default.defaultDefinitions,\n  onSubmit: onSubmit,\n  uiSchema: uiSchema\n})));\nvar div = form.find('.schemaform-block-header');\n(0, _chai.expect)(div.text()).to.contain('Please provide the details of the person(s) currently buried in a VA national cemetery under your eligibility.');\nform.unmount();",
              "err": {},
              "uuid": "7bfbe623-ad13-4128-aa1a-f43855e6c3b8",
              "parentUUID": "7f14a54c-da1f-429f-a6fe-e5f9329e578a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should change CurrentlyBuriedPersonsDescription to match sponsor",
              "fullTitle": "Pre-need burial benefits should change CurrentlyBuriedPersonsDescription to match sponsor",
              "timedOut": false,
              "duration": 18,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var onSubmit = _sinon.default.spy();\nvar form = (0, _enzyme.mount)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n  store: sponsorStore\n}, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  schema: schema,\n  definitions: _form.default.defaultDefinitions,\n  onSubmit: onSubmit,\n  uiSchema: uiSchema\n})));\nvar div = form.find('.schemaform-block-header');\n(0, _chai.expect)(div.text()).to.contain('Please provide the details of the person(s) currently buried in a VA national cemetery under the sponsor’s eligibility.');\nform.unmount();",
              "err": {},
              "uuid": "7b0d1a3f-7b3e-4284-b74f-871080e9c576",
              "parentUUID": "7f14a54c-da1f-429f-a6fe-e5f9329e578a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should change CurrentlyBuriedPersonsDescription to match sponsor",
              "fullTitle": "Pre-need burial benefits should change CurrentlyBuriedPersonsDescription to match sponsor",
              "timedOut": false,
              "duration": 19,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var onSubmit = _sinon.default.spy();\nvar form = (0, _enzyme.mount)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n  store: emptyStore\n}, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  schema: schema,\n  definitions: _form.default.defaultDefinitions,\n  onSubmit: onSubmit,\n  uiSchema: uiSchema\n})));\nvar div = form.find('.schemaform-block-header');\n(0, _chai.expect)(div.text()).to.contain('Please provide the details of the person(s) currently buried in a VA national cemetery under the sponsor’s eligibility.');\nform.unmount();",
              "err": {},
              "uuid": "036f54ec-4b8a-4d63-a7d3-c945a5a022b0",
              "parentUUID": "7f14a54c-da1f-429f-a6fe-e5f9329e578a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "8321aef6-c607-421c-be6e-236961ac4160",
            "53eaa713-d9bd-4392-94e3-8c3923d99932",
            "5f9009f9-c9e4-433b-a97b-7b0fc5dad427",
            "7bfbe623-ad13-4128-aa1a-f43855e6c3b8",
            "7b0d1a3f-7b3e-4284-b74f-871080e9c576",
            "036f54ec-4b8a-4d63-a7d3-c945a5a022b0"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 142,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "85efce78-a24b-4497-a69b-99ffe7b062f9",
          "title": "Pre-need attachments",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/pre-need/tests/config/documents.unit.spec.jsx",
          "file": "/src/applications/pre-need/tests/config/documents.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should render",
              "fullTitle": "Pre-need attachments should render",
              "timedOut": false,
              "duration": 14,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var form = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n  store: _helpers.uploadStore\n}, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  schema: schema,\n  definitions: _form.default.defaultDefinitions,\n  uiSchema: uiSchema,\n  data: {}\n})));\nvar formDOM = (0, _schemaformUtils.getFormDOM)(form);\n(0, _chai.expect)(formDOM.querySelectorAll('input,select').length).to.equal(1);",
              "err": {},
              "uuid": "ecce15a4-7241-4cee-8fef-19e599657961",
              "parentUUID": "85efce78-a24b-4497-a69b-99ffe7b062f9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should submit empty form",
              "fullTitle": "Pre-need attachments should submit empty form",
              "timedOut": false,
              "duration": 21,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var onSubmit = _sinon.default.spy();\nvar form = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n  store: _helpers.uploadStore\n}, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  schema: schema,\n  definitions: _form.default.defaultDefinitions,\n  onSubmit: onSubmit,\n  uiSchema: uiSchema,\n  data: {}\n})));\nvar formDOM = (0, _schemaformUtils.getFormDOM)(form);\nformDOM.submitForm();\n(0, _chai.expect)(formDOM.querySelectorAll('.usa-input-error')).to.be.empty;\n(0, _chai.expect)(onSubmit.called).to.be.true;",
              "err": {},
              "uuid": "6e1e7ccf-5956-4ece-9ee3-090bd6a2225d",
              "parentUUID": "85efce78-a24b-4497-a69b-99ffe7b062f9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should not submit without attachment id",
              "fullTitle": "Pre-need attachments should not submit without attachment id",
              "timedOut": false,
              "duration": 28,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var onSubmit = _sinon.default.spy();\nvar form = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n  store: _helpers.uploadStore\n}, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  schema: schema,\n  data: {\n    application: {\n      preneedAttachments: [{\n        confirmationCode: 'testing'\n      }]\n    }\n  },\n  definitions: _form.default.defaultDefinitions,\n  onSubmit: onSubmit,\n  uiSchema: uiSchema\n})));\nvar formDOM = (0, _schemaformUtils.getFormDOM)(form);\nformDOM.submitForm();\n(0, _chai.expect)(formDOM.querySelectorAll('.usa-input-error').length).to.equal(1);\n(0, _chai.expect)(onSubmit.called).to.be.false;",
              "err": {},
              "uuid": "31412651-4b2a-4710-a22e-7cb30455625b",
              "parentUUID": "85efce78-a24b-4497-a69b-99ffe7b062f9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should not submit without required fields",
              "fullTitle": "Pre-need attachments should not submit without required fields",
              "timedOut": false,
              "duration": 21,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var onSubmit = _sinon.default.spy();\nvar form = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n  store: _helpers.uploadStore\n}, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  schema: schema,\n  data: {\n    application: {\n      preneedAttachments: [{\n        confirmationCode: 'testing'\n      }]\n    }\n  },\n  definitions: _form.default.defaultDefinitions,\n  onSubmit: onSubmit,\n  uiSchema: uiSchema\n})));\nvar formDOM = (0, _schemaformUtils.getFormDOM)(form);\nformDOM.submitForm();\n(0, _chai.expect)(formDOM.querySelectorAll('.usa-input-error').length).to.equal(1);\n(0, _chai.expect)(onSubmit.called).to.be.false;",
              "err": {},
              "uuid": "f0e4fdaf-7820-4c95-b2b6-c21f93745154",
              "parentUUID": "85efce78-a24b-4497-a69b-99ffe7b062f9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should submit with valid data",
              "fullTitle": "Pre-need attachments should submit with valid data",
              "timedOut": false,
              "duration": 24,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var onSubmit = _sinon.default.spy();\nvar form = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n  store: _helpers.uploadStore\n}, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  schema: schema,\n  data: {\n    application: {\n      preneedAttachments: [{\n        attachmentId: '1',\n        confirmationCode: 'testing',\n        name: 'abc'\n      }, {\n        attachmentId: '1',\n        confirmationCode: 'testing2',\n        name: 'abc'\n      }]\n    }\n  },\n  definitions: _form.default.defaultDefinitions,\n  onSubmit: onSubmit,\n  uiSchema: uiSchema\n})));\nvar formDOM = (0, _schemaformUtils.getFormDOM)(form);\nformDOM.submitForm();\n(0, _chai.expect)(onSubmit.called).to.be.true;",
              "err": {},
              "uuid": "50d47e4b-a72a-4cdc-b6b9-060287e37c23",
              "parentUUID": "85efce78-a24b-4497-a69b-99ffe7b062f9",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "ecce15a4-7241-4cee-8fef-19e599657961",
            "6e1e7ccf-5956-4ece-9ee3-090bd6a2225d",
            "31412651-4b2a-4710-a22e-7cb30455625b",
            "f0e4fdaf-7820-4c95-b2b6-c21f93745154",
            "50d47e4b-a72a-4cdc-b6b9-060287e37c23"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 108,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "929a55f6-563f-4f2d-ac6b-07ac132e0f9b",
          "title": "Pre-need military details",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/pre-need/tests/config/militaryDetails.unit.spec.jsx",
          "file": "/src/applications/pre-need/tests/config/militaryDetails.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should render",
              "fullTitle": "Pre-need military details should render",
              "timedOut": false,
              "duration": 9,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var form = (0, _enzyme.mount)(/*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  schema: schema,\n  definitions: _form.default.defaultDefinitions,\n  uiSchema: uiSchema\n}));\n(0, _chai.expect)(form.find('input').length).to.equal(2);\n(0, _chai.expect)(form.find('select').length).to.equal(1);\nform.unmount();",
              "err": {},
              "uuid": "35232a7b-1688-4078-ad81-cfc5e82ee87e",
              "parentUUID": "929a55f6-563f-4f2d-ac6b-07ac132e0f9b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should not submit empty form",
              "fullTitle": "Pre-need military details should not submit empty form",
              "timedOut": false,
              "duration": 13,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var onSubmit = _sinon.default.spy();\nvar form = (0, _enzyme.mount)(/*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  schema: schema,\n  definitions: _form.default.defaultDefinitions,\n  onSubmit: onSubmit,\n  uiSchema: uiSchema\n}));\nform.find('form').simulate('submit');\n(0, _chai.expect)(form.find('.usa-input-error').length).to.equal(1);\n(0, _chai.expect)(onSubmit.called).to.be.false;\nform.unmount();",
              "err": {},
              "uuid": "f29ca773-b44d-4fb1-a0f8-429ea4346ec5",
              "parentUUID": "929a55f6-563f-4f2d-ac6b-07ac132e0f9b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should submit with required information",
              "fullTitle": "Pre-need military details should submit with required information",
              "timedOut": false,
              "duration": 18,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var onSubmit = _sinon.default.spy();\nvar form = (0, _enzyme.mount)(/*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  schema: schema,\n  definitions: _form.default.defaultDefinitions,\n  onSubmit: onSubmit,\n  uiSchema: uiSchema\n}));\n(0, _schemaformUtils.fillData)(form, 'select#root_application_veteran_militaryStatus', 'A');\nform.find('form').simulate('submit');\n(0, _chai.expect)(onSubmit.called).to.be.true;\nform.unmount();",
              "err": {},
              "uuid": "9afe9cc1-ddc2-4eab-b477-3341605be820",
              "parentUUID": "929a55f6-563f-4f2d-ac6b-07ac132e0f9b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "35232a7b-1688-4078-ad81-cfc5e82ee87e",
            "f29ca773-b44d-4fb1-a0f8-429ea4346ec5",
            "9afe9cc1-ddc2-4eab-b477-3341605be820"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 40,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "45be77f9-d328-4e5d-95b7-04d20bfe3315",
          "title": "Pre-need applicant non veteran applicant details",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/pre-need/tests/config/nonVeteranApplicantDetails.unit.spec.jsx",
          "file": "/src/applications/pre-need/tests/config/nonVeteranApplicantDetails.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should render",
              "fullTitle": "Pre-need applicant non veteran applicant details should render",
              "timedOut": false,
              "duration": 20,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var form = (0, _enzyme.mount)(/*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  schema: schema,\n  definitions: _form.default.defaultDefinitions,\n  uiSchema: uiSchema\n}));\n(0, _chai.expect)(form.find('input').length).to.equal(6);\n(0, _chai.expect)(form.find('select').length).to.equal(3);\n(0, _chai.expect)(form.find('va-additional-info').length).to.equal(1);\n(0, _chai.expect)(form.find('va-additional-info').html()).to.include('<va-additional-info trigger=\"Are you filling out this application on behalf of someone else?\"><p>If you’re filling out the form on behalf of someone else, you’ll need to provide their details below. As the preparer, we’ll ask for your own details later.</p></va-additional-info>');\nform.unmount();",
              "err": {},
              "uuid": "3d1cf87d-d6df-4323-9718-c27f3351e80e",
              "parentUUID": "45be77f9-d328-4e5d-95b7-04d20bfe3315",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should not submit empty form",
              "fullTitle": "Pre-need applicant non veteran applicant details should not submit empty form",
              "timedOut": false,
              "duration": 24,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var onSubmit = _sinon.default.spy();\nvar form = (0, _enzyme.mount)(/*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  schema: schema,\n  definitions: _form.default.defaultDefinitions,\n  onSubmit: onSubmit,\n  uiSchema: uiSchema\n}));\nform.find('form').simulate('submit');\n(0, _chai.expect)(form.find('.usa-input-error').length).to.equal(4);\n(0, _chai.expect)(onSubmit.called).to.be.false;\nform.unmount();",
              "err": {},
              "uuid": "aa435d4e-3565-4dc6-98ce-890eafced72f",
              "parentUUID": "45be77f9-d328-4e5d-95b7-04d20bfe3315",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should submit with required information",
              "fullTitle": "Pre-need applicant non veteran applicant details should submit with required information",
              "timedOut": false,
              "duration": 62,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var onSubmit = _sinon.default.spy();\nvar form = (0, _enzyme.mount)(/*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  schema: schema,\n  definitions: _form.default.defaultDefinitions,\n  onSubmit: onSubmit,\n  uiSchema: uiSchema\n}));\n(0, _schemaformUtils.fillData)(form, 'input#root_application_claimant_name_first', 'test');\n(0, _schemaformUtils.fillData)(form, 'input#root_application_claimant_name_last', 'test2');\n(0, _schemaformUtils.fillData)(form, 'input#root_application_claimant_ssn', '234443344');\n(0, _schemaformUtils.fillData)(form, 'select#root_application_claimant_dateOfBirthMonth', '2');\n(0, _schemaformUtils.fillData)(form, 'select#root_application_claimant_dateOfBirthDay', '2');\n(0, _schemaformUtils.fillData)(form, 'input#root_application_claimant_dateOfBirthYear', '2001');\nform.find('form').simulate('submit');\n(0, _chai.expect)(onSubmit.called).to.be.true;\nform.unmount();",
              "err": {},
              "uuid": "ff41f1fd-b113-4001-a378-38c6ad314ef8",
              "parentUUID": "45be77f9-d328-4e5d-95b7-04d20bfe3315",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "3d1cf87d-d6df-4323-9718-c27f3351e80e",
            "aa435d4e-3565-4dc6-98ce-890eafced72f",
            "ff41f1fd-b113-4001-a378-38c6ad314ef8"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 106,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "e72887b2-ec93-4748-baac-3e9771b30f68",
          "title": "Pre-need preparer info",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/pre-need/tests/config/preparer.unit.spec.jsx",
          "file": "/src/applications/pre-need/tests/config/preparer.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should render",
              "fullTitle": "Pre-need preparer info should render",
              "timedOut": false,
              "duration": 7,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var form = (0, _enzyme.mount)(/*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  schema: schema,\n  definitions: _form.default.defaultDefinitions,\n  uiSchema: uiSchema\n}));\n(0, _chai.expect)(form.find('va-radio-option').length).to.equal(2);\nform.unmount();",
              "err": {},
              "uuid": "9eec0684-b51f-4ef3-81da-5f755e3d7e0e",
              "parentUUID": "e72887b2-ec93-4748-baac-3e9771b30f68",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should not submit empty form",
              "fullTitle": "Pre-need preparer info should not submit empty form",
              "timedOut": false,
              "duration": 11,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var onSubmit = _sinon.default.spy();\nvar form = (0, _enzyme.mount)(/*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  schema: schema,\n  definitions: _form.default.defaultDefinitions,\n  onSubmit: onSubmit,\n  uiSchema: uiSchema\n}));\nform.find('form').simulate('submit');\n(0, _chai.expect)(form.find('.usa-input-error').length).to.equal(1);\n(0, _chai.expect)(onSubmit.called).to.be.false;\nform.unmount();",
              "err": {},
              "uuid": "60db4c24-4ce2-4882-9934-2e2c9ac16bfe",
              "parentUUID": "e72887b2-ec93-4748-baac-3e9771b30f68",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "9eec0684-b51f-4ef3-81da-5f755e3d7e0e",
            "60db4c24-4ce2-4882-9934-2e2c9ac16bfe"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 18,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "86fbff9a-1d44-4880-b98a-f36ff42c8f20",
          "title": "Pre-need preparer info",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/pre-need/tests/config/preparerContactDetails.unit.spec.jsx",
          "file": "/src/applications/pre-need/tests/config/preparerContactDetails.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should render contact details",
              "fullTitle": "Pre-need preparer info should render contact details",
              "timedOut": false,
              "duration": 46,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var form = _testUtils.default.renderIntoDocument(/*#__PURE__*/_react.default.createElement(\"div\", null, /*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n  store: store\n}, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  schema: schema,\n  data: {},\n  definitions: _form.default.defaultDefinitions,\n  uiSchema: uiSchema\n}))));\nvar formDOM = (0, _schemaformUtils.getFormDOM)(form);\nformDOM.fillData('#root_application_applicant_view\\\\:applicantInfo_mailingAddress_country', 'USA');\n(0, _chai.expect)((0, _ui.$$)('input', formDOM).length).to.equal(5);\n(0, _chai.expect)((0, _ui.$$)('select', formDOM).length).to.equal(2);",
              "err": {},
              "uuid": "7e829b58-1384-456c-96e3-07b578f98f28",
              "parentUUID": "86fbff9a-1d44-4880-b98a-f36ff42c8f20",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should render contact details",
              "fullTitle": "Pre-need preparer info should render contact details",
              "timedOut": false,
              "duration": 51,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var form = _testUtils.default.renderIntoDocument(/*#__PURE__*/_react.default.createElement(\"div\", null, /*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n  store: store\n}, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  schema: schema,\n  data: {},\n  definitions: _form.default.defaultDefinitions,\n  uiSchema: uiSchema\n}))));\nvar formDOM = (0, _schemaformUtils.getFormDOM)(form);\nformDOM.fillData('#root_application_applicant_view\\\\:applicantInfo_mailingAddress_country', 'MEX');\n(0, _chai.expect)((0, _ui.$$)('input', formDOM).length).to.equal(5);\n(0, _chai.expect)((0, _ui.$$)('select', formDOM).length).to.equal(1);",
              "err": {},
              "uuid": "b82fc108-bb19-43eb-9d6c-26f4d1dea2fc",
              "parentUUID": "86fbff9a-1d44-4880-b98a-f36ff42c8f20",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "7e829b58-1384-456c-96e3-07b578f98f28",
            "b82fc108-bb19-43eb-9d6c-26f4d1dea2fc"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 97,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "58365e04-90f1-47e9-88a8-e71b2b8b2320",
          "title": "Pre-need preparer Details info",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/pre-need/tests/config/preparerDetails.unit.spec.jsx",
          "file": "/src/applications/pre-need/tests/config/preparerDetails.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should render name input field",
              "fullTitle": "Pre-need preparer Details info should render name input field",
              "timedOut": false,
              "duration": 8,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var form = (0, _enzyme.mount)(/*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  schema: schema,\n  definitions: _form.default.defaultDefinitions,\n  uiSchema: uiSchema\n}));\n(0, _chai.expect)(form.find('input').length).to.equal(2);\nform.unmount();",
              "err": {},
              "uuid": "4654a07a-a691-49a7-81f0-3efd8db37f2b",
              "parentUUID": "58365e04-90f1-47e9-88a8-e71b2b8b2320",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should not submit empty form",
              "fullTitle": "Pre-need preparer Details info should not submit empty form",
              "timedOut": false,
              "duration": 11,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var onSubmit = _sinon.default.spy();\nuiSchema.application.applicant.name.first['ui:required'] = function () {\n  return true;\n};\nuiSchema.application.applicant.name.last['ui:required'] = function () {\n  return true;\n};\nvar form = (0, _enzyme.mount)(/*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  schema: schema,\n  definitions: _form.default.defaultDefinitions,\n  onSubmit: onSubmit,\n  uiSchema: uiSchema\n}));\nform.find('form').simulate('submit');\n(0, _chai.expect)(form.find('.usa-input-error').length).to.equal(2);\n(0, _chai.expect)(onSubmit.called).to.be.false;\nform.unmount();",
              "err": {},
              "uuid": "dec63962-1e60-4227-b941-c0a87409012a",
              "parentUUID": "58365e04-90f1-47e9-88a8-e71b2b8b2320",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should submit with required fields filled in",
              "fullTitle": "Pre-need preparer Details info should submit with required fields filled in",
              "timedOut": false,
              "duration": 20,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var onSubmit = _sinon.default.spy();\nvar form = (0, _enzyme.mount)(/*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  schema: schema,\n  definitions: _form.default.defaultDefinitions,\n  onSubmit: onSubmit,\n  uiSchema: uiSchema\n}));\nuiSchema.application.applicant.name.first['ui:required'] = function () {\n  return true;\n};\nuiSchema.application.applicant.name.last['ui:required'] = function () {\n  return true;\n};\n(0, _schemaformUtils.fillData)(form, 'input[name=\"root_application_applicant_name_first\"]', 'Jane');\n(0, _schemaformUtils.fillData)(form, 'input[name=\"root_application_applicant_name_last\"]', 'Smith');\nform.find('form').simulate('submit');\n(0, _chai.expect)(form.find('.usa-input-error').length).to.equal(0);\n(0, _chai.expect)(onSubmit.called).to.be.true;\nform.unmount();",
              "err": {},
              "uuid": "56296ccf-3615-4409-8f7f-930806c08645",
              "parentUUID": "58365e04-90f1-47e9-88a8-e71b2b8b2320",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "4654a07a-a691-49a7-81f0-3efd8db37f2b",
            "dec63962-1e60-4227-b941-c0a87409012a",
            "56296ccf-3615-4409-8f7f-930806c08645"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 39,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "da3f967d-e315-43f2-ad55-d602d3ddf2e4",
          "title": "Pre-need service periods",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/pre-need/tests/config/servicePeriods.unit.spec.jsx",
          "file": "/src/applications/pre-need/tests/config/servicePeriods.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "b2d537b5-61ca-4ffa-ac47-95f46c055bb0",
              "title": "sponsor",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/pre-need/tests/config/servicePeriods.unit.spec.jsx",
              "file": "/src/applications/pre-need/tests/config/servicePeriods.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should render",
                  "fullTitle": "Pre-need service periods sponsor should render",
                  "timedOut": false,
                  "duration": 23,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var form = (0, _enzyme.mount)(/*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  schema: schema,\n  definitions: _form.default.defaultDefinitions,\n  uiSchema: uiSchema\n}));\n(0, _chai.expect)(form.find('input').length).to.equal(inputCount);\n(0, _chai.expect)(form.find('select').length).to.equal(5);\nform.unmount();",
                  "err": {},
                  "uuid": "468671ee-753e-466c-b8a3-ec9a96a47cca",
                  "parentUUID": "b2d537b5-61ca-4ffa-ac47-95f46c055bb0",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should not submit empty form",
                  "fullTitle": "Pre-need service periods sponsor should not submit empty form",
                  "timedOut": false,
                  "duration": 36,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var onSubmit = _sinon.default.spy();\nvar form = (0, _enzyme.mount)(/*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  schema: schema,\n  definitions: _form.default.defaultDefinitions,\n  onSubmit: onSubmit,\n  uiSchema: uiSchema\n}));\nform.find('form').simulate('submit');\n(0, _chai.expect)(form.find('.usa-input-error').length).to.equal(1);\n(0, _chai.expect)(onSubmit.called).to.be.false;\nform.unmount();",
                  "err": {},
                  "uuid": "774988ef-6724-4472-9bdf-1d934775ed6f",
                  "parentUUID": "b2d537b5-61ca-4ffa-ac47-95f46c055bb0",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should add another service period",
                  "fullTitle": "Pre-need service periods sponsor should add another service period",
                  "timedOut": false,
                  "duration": 55,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var onSubmit = _sinon.default.spy();\nvar form = (0, _enzyme.mount)(/*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  schema: schema,\n  definitions: _form.default.defaultDefinitions,\n  onSubmit: onSubmit,\n  data: {\n    application: {\n      veteran: {\n        serviceRecords: [{\n          serviceBranch: 'AL'\n        }]\n      }\n    }\n  },\n  uiSchema: uiSchema\n}));\n(0, _chai.expect)(form.find('input').length).to.equal(inputCount);\n(0, _chai.expect)(form.find('select').length).to.equal(5);\nform.find('.va-growable-add-btn').simulate('click');\n(0, _chai.expect)(form.find('.va-growable-background').first().text()).to.contain('Allied Forces');\nform.unmount();",
                  "err": {},
                  "uuid": "341774d6-408f-4fbc-a526-50ed497691ad",
                  "parentUUID": "b2d537b5-61ca-4ffa-ac47-95f46c055bb0",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should submit with valid data",
                  "fullTitle": "Pre-need service periods sponsor should submit with valid data",
                  "timedOut": false,
                  "duration": 93,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var onSubmit = _sinon.default.spy();\nvar form = (0, _enzyme.mount)(/*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  schema: schema,\n  definitions: _form.default.defaultDefinitions,\n  onSubmit: onSubmit,\n  data: {\n    application: {\n      veteran: {\n        serviceRecords: [{\n          serviceBranch: 'AL'\n        }]\n      }\n    }\n  },\n  uiSchema: uiSchema\n}));\n(0, _schemaformUtils.fillDate)(form, 'root_application_veteran_serviceRecords_0_dateRange_from', '2002-1-1');\n(0, _schemaformUtils.fillDate)(form, 'root_application_veteran_serviceRecords_0_dateRange_to', '2003-1-1');\nform.find('form').simulate('submit');\n(0, _chai.expect)(form.find('.usa-input-error').length).to.equal(0);\n(0, _chai.expect)(onSubmit.called).to.be.true;\nform.unmount();",
                  "err": {},
                  "uuid": "05c26907-311c-4ac6-8078-0eecaa0d3517",
                  "parentUUID": "b2d537b5-61ca-4ffa-ac47-95f46c055bb0",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "468671ee-753e-466c-b8a3-ec9a96a47cca",
                "774988ef-6724-4472-9bdf-1d934775ed6f",
                "341774d6-408f-4fbc-a526-50ed497691ad",
                "05c26907-311c-4ac6-8078-0eecaa0d3517"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 207,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "178be1f9-a73e-4b16-8d3a-7fd943df8cee",
              "title": "applicant",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/pre-need/tests/config/servicePeriods.unit.spec.jsx",
              "file": "/src/applications/pre-need/tests/config/servicePeriods.unit.spec.jsx",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should render",
                  "fullTitle": "Pre-need service periods applicant should render",
                  "timedOut": false,
                  "duration": 26,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var form = (0, _enzyme.mount)(/*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  schema: schema,\n  definitions: _form.default.defaultDefinitions,\n  uiSchema: uiSchema\n}));\n(0, _chai.expect)(form.find('input').length).to.equal(inputCount);\n(0, _chai.expect)(form.find('select').length).to.equal(5);\nform.unmount();",
                  "err": {},
                  "uuid": "b31ec6bd-c0e4-4011-8d40-f4dddb19b963",
                  "parentUUID": "178be1f9-a73e-4b16-8d3a-7fd943df8cee",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should not submit empty form",
                  "fullTitle": "Pre-need service periods applicant should not submit empty form",
                  "timedOut": false,
                  "duration": 38,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var onSubmit = _sinon.default.spy();\nvar form = (0, _enzyme.mount)(/*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  schema: schema,\n  definitions: _form.default.defaultDefinitions,\n  onSubmit: onSubmit,\n  uiSchema: uiSchema\n}));\nform.find('form').simulate('submit');\n(0, _chai.expect)(form.find('.usa-input-error').length).to.equal(1);\n(0, _chai.expect)(onSubmit.called).to.be.false;\nform.unmount();",
                  "err": {},
                  "uuid": "17bf65b0-ffec-4e77-9edb-81c623f6151e",
                  "parentUUID": "178be1f9-a73e-4b16-8d3a-7fd943df8cee",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should add another service period",
                  "fullTitle": "Pre-need service periods applicant should add another service period",
                  "timedOut": false,
                  "duration": 34,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var onSubmit = _sinon.default.spy();\nvar form = (0, _enzyme.mount)(/*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  schema: schema,\n  definitions: _form.default.defaultDefinitions,\n  onSubmit: onSubmit,\n  data: {\n    application: {\n      veteran: {\n        serviceRecords: [{\n          serviceBranch: 'AL'\n        }]\n      }\n    }\n  },\n  uiSchema: uiSchema\n}));\n(0, _chai.expect)(form.find('input').length).to.equal(inputCount);\n(0, _chai.expect)(form.find('select').length).to.equal(5);\nform.find('.va-growable-add-btn').simulate('click');\n(0, _chai.expect)(form.find('.va-growable-background').first().text()).to.contain('Allied Forces');\nform.unmount();",
                  "err": {},
                  "uuid": "069da23f-9c61-4796-af26-79d212170662",
                  "parentUUID": "178be1f9-a73e-4b16-8d3a-7fd943df8cee",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should submit with valid data",
                  "fullTitle": "Pre-need service periods applicant should submit with valid data",
                  "timedOut": false,
                  "duration": 88,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var onSubmit = _sinon.default.spy();\nvar form = (0, _enzyme.mount)(/*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  schema: schema,\n  definitions: _form.default.defaultDefinitions,\n  onSubmit: onSubmit,\n  data: {\n    application: {\n      veteran: {\n        serviceRecords: [{\n          serviceBranch: 'AL'\n        }]\n      }\n    }\n  },\n  uiSchema: uiSchema\n}));\n(0, _schemaformUtils.fillDate)(form, 'root_application_veteran_serviceRecords_0_dateRange_from', '2002-1-1');\n(0, _schemaformUtils.fillDate)(form, 'root_application_veteran_serviceRecords_0_dateRange_to', '2003-1-1');\nform.find('form').simulate('submit');\n(0, _chai.expect)(form.find('.usa-input-error').length).to.equal(0);\n(0, _chai.expect)(onSubmit.called).to.be.true;\nform.unmount();",
                  "err": {},
                  "uuid": "ffc34167-be29-4c19-9cf4-ad89e953259a",
                  "parentUUID": "178be1f9-a73e-4b16-8d3a-7fd943df8cee",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "b31ec6bd-c0e4-4011-8d40-f4dddb19b963",
                "17bf65b0-ffec-4e77-9edb-81c623f6151e",
                "069da23f-9c61-4796-af26-79d212170662",
                "ffc34167-be29-4c19-9cf4-ad89e953259a"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 186,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "abba725c-0e5c-4fae-98a1-62bfa96e3d39",
          "title": "Pre-need sponsor date of death",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/pre-need/tests/config/sponsorDateOfDeath.unit.spec.jsx",
          "file": "/src/applications/pre-need/tests/config/sponsorDateOfDeath.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should render",
              "fullTitle": "Pre-need sponsor date of death should render",
              "timedOut": false,
              "duration": 10,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var form = (0, _enzyme.mount)(/*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  schema: schema,\n  definitions: _form.default.defaultDefinitions,\n  uiSchema: uiSchema\n}));\n(0, _chai.expect)(form.find('input').length).to.equal(1);\n(0, _chai.expect)(form.find('select').length).to.equal(2);\nform.unmount();",
              "err": {},
              "uuid": "d1344b0d-7a08-4246-8db2-37a7704c51f6",
              "parentUUID": "abba725c-0e5c-4fae-98a1-62bfa96e3d39",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "d1344b0d-7a08-4246-8db2-37a7704c51f6"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 10,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "247485c7-d226-4cf7-9cd8-d72ba6f50d6d",
          "title": "Pre-need sponsor is deceased",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/pre-need/tests/config/sponsorDeceased.unit.spec.jsx",
          "file": "/src/applications/pre-need/tests/config/sponsorDeceased.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should render",
              "fullTitle": "Pre-need sponsor is deceased should render",
              "timedOut": false,
              "duration": 8,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var form = (0, _enzyme.mount)(/*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  schema: schema,\n  definitions: _form.default.defaultDefinitions,\n  uiSchema: uiSchema\n}));\n(0, _chai.expect)(form.find('input').length).to.equal(3);\nform.unmount();",
              "err": {},
              "uuid": "0adc258e-d4f0-42e0-b92d-9996bfef0603",
              "parentUUID": "247485c7-d226-4cf7-9cd8-d72ba6f50d6d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should not submit empty form",
              "fullTitle": "Pre-need sponsor is deceased should not submit empty form",
              "timedOut": false,
              "duration": 11,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var onSubmit = _sinon.default.spy();\nvar form = (0, _enzyme.mount)(/*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  schema: schema,\n  definitions: _form.default.defaultDefinitions,\n  onSubmit: onSubmit,\n  uiSchema: uiSchema\n}));\nform.find('form').simulate('submit');\n(0, _chai.expect)(form.find('.usa-input-error').length).to.equal(1);\n(0, _chai.expect)(onSubmit.called).to.be.false;\nform.unmount();",
              "err": {},
              "uuid": "2b894828-0aae-4ed0-8408-32c7aefde387",
              "parentUUID": "247485c7-d226-4cf7-9cd8-d72ba6f50d6d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should submit with required information",
              "fullTitle": "Pre-need sponsor is deceased should submit with required information",
              "timedOut": false,
              "duration": 14,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var onSubmit = _sinon.default.spy();\nvar form = (0, _enzyme.mount)(/*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  schema: schema,\n  definitions: _form.default.defaultDefinitions,\n  onSubmit: onSubmit,\n  uiSchema: uiSchema\n}));\n(0, _schemaformUtils.selectRadio)(form, 'root_application_veteran_isDeceased', 'no');\nform.find('form').simulate('submit');\n(0, _chai.expect)(onSubmit.called).to.be.true;\nform.unmount();",
              "err": {},
              "uuid": "f0a07779-a961-4aaa-85eb-24f40adb5a47",
              "parentUUID": "247485c7-d226-4cf7-9cd8-d72ba6f50d6d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "0adc258e-d4f0-42e0-b92d-9996bfef0603",
            "2b894828-0aae-4ed0-8408-32c7aefde387",
            "f0a07779-a961-4aaa-85eb-24f40adb5a47"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 33,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "34e40f49-247f-4a80-aa1b-53ededd6bb2d",
          "title": "Pre-need sponsor demogrpahics",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/pre-need/tests/config/sponsorDemographics.unit.spec.jsx",
          "file": "/src/applications/pre-need/tests/config/sponsorDemographics.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should render",
              "fullTitle": "Pre-need sponsor demogrpahics should render",
              "timedOut": false,
              "duration": 13,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var form = (0, _enzyme.mount)(/*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  schema: schema,\n  definitions: _form.default.defaultDefinitions,\n  uiSchema: uiSchema\n}));\n(0, _chai.expect)(form.find('input').length).to.equal(14);\nform.unmount();",
              "err": {},
              "uuid": "f1190110-812c-4f94-b1e0-57d8ffe78eb0",
              "parentUUID": "34e40f49-247f-4a80-aa1b-53ededd6bb2d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should not submit empty form",
              "fullTitle": "Pre-need sponsor demogrpahics should not submit empty form",
              "timedOut": false,
              "duration": 24,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var onSubmit = _sinon.default.spy();\nvar form = (0, _enzyme.mount)(/*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  schema: schema,\n  definitions: _form.default.defaultDefinitions,\n  onSubmit: onSubmit,\n  uiSchema: uiSchema\n}));\nform.find('form').simulate('submit');\n(0, _chai.expect)(form.find('.usa-input-error').length).to.equal(3);\n(0, _chai.expect)(onSubmit.called).to.be.false;\nform.unmount();",
              "err": {},
              "uuid": "38cb78b8-5989-4dc6-99d0-f86ccedaaf0f",
              "parentUUID": "34e40f49-247f-4a80-aa1b-53ededd6bb2d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should submit with required information",
              "fullTitle": "Pre-need sponsor demogrpahics should submit with required information",
              "timedOut": false,
              "duration": 36,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var onSubmit = _sinon.default.spy();\nvar form = (0, _enzyme.mount)(/*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  schema: schema,\n  definitions: _form.default.defaultDefinitions,\n  onSubmit: onSubmit,\n  uiSchema: uiSchema\n}));\n(0, _schemaformUtils.selectRadio)(form, 'root_application_veteran_gender', 'Female');\n(0, _schemaformUtils.selectCheckbox)(form, 'root_application_veteran_race_isSpanishHispanicLatino', true);\n(0, _schemaformUtils.selectRadio)(form, 'root_application_veteran_maritalStatus', 'Single');\nform.find('form').simulate('submit');\n(0, _chai.expect)(onSubmit.called).to.be.true;\nform.unmount();",
              "err": {},
              "uuid": "e03fbf25-137d-4882-9dfb-9e72686236b9",
              "parentUUID": "34e40f49-247f-4a80-aa1b-53ededd6bb2d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f1190110-812c-4f94-b1e0-57d8ffe78eb0",
            "38cb78b8-5989-4dc6-99d0-f86ccedaaf0f",
            "e03fbf25-137d-4882-9dfb-9e72686236b9"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 73,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "ca6e198e-3045-4d1c-b505-6f9e538bee23",
          "title": "Pre-need sponsor details",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/pre-need/tests/config/sponsorDetails.unit.spec.jsx",
          "file": "/src/applications/pre-need/tests/config/sponsorDetails.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should render",
              "fullTitle": "Pre-need sponsor details should render",
              "timedOut": false,
              "duration": 19,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var form = (0, _enzyme.mount)(/*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  schema: schema,\n  definitions: _form.default.defaultDefinitions,\n  uiSchema: uiSchema\n}));\n(0, _chai.expect)(form.find('input').length).to.equal(7);\n(0, _chai.expect)(form.find('select').length).to.equal(3);\nform.unmount();",
              "err": {},
              "uuid": "0bbf4f55-67fa-4fb9-98b8-c5808cb3e5fc",
              "parentUUID": "ca6e198e-3045-4d1c-b505-6f9e538bee23",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should not submit empty form",
              "fullTitle": "Pre-need sponsor details should not submit empty form",
              "timedOut": false,
              "duration": 30,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var onSubmit = _sinon.default.spy();\nvar form = (0, _enzyme.mount)(/*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  schema: schema,\n  definitions: _form.default.defaultDefinitions,\n  onSubmit: onSubmit,\n  uiSchema: uiSchema\n}));\nform.find('form').simulate('submit');\n(0, _chai.expect)(form.find('.usa-input-error').length).to.equal(3);\n(0, _chai.expect)(onSubmit.called).to.be.false;\nform.unmount();",
              "err": {},
              "uuid": "6c9f41cb-4aea-49a0-ab50-3b81722722af",
              "parentUUID": "ca6e198e-3045-4d1c-b505-6f9e538bee23",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should submit with required information",
              "fullTitle": "Pre-need sponsor details should submit with required information",
              "timedOut": false,
              "duration": 65,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var onSubmit = _sinon.default.spy();\nvar form = (0, _enzyme.mount)(/*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  schema: schema,\n  definitions: _form.default.defaultDefinitions,\n  onSubmit: onSubmit,\n  uiSchema: uiSchema\n}));\n(0, _schemaformUtils.fillData)(form, 'input#root_application_veteran_currentName_first', 'test');\n(0, _schemaformUtils.fillData)(form, 'input#root_application_veteran_currentName_last', 'test2');\n(0, _schemaformUtils.fillData)(form, 'input#root_application_veteran_ssn', '234443344');\n(0, _schemaformUtils.fillData)(form, 'select#root_application_veteran_dateOfBirthMonth', '2');\n(0, _schemaformUtils.fillData)(form, 'select#root_application_veteran_dateOfBirthDay', '2');\n(0, _schemaformUtils.fillData)(form, 'input#root_application_veteran_dateOfBirthYear', '2001');\nform.find('form').simulate('submit');\n(0, _chai.expect)(onSubmit.called).to.be.true;\nform.unmount();",
              "err": {},
              "uuid": "f10584df-3c60-4976-97a7-b6c4a216169d",
              "parentUUID": "ca6e198e-3045-4d1c-b505-6f9e538bee23",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "0bbf4f55-67fa-4fb9-98b8-c5808cb3e5fc",
            "6c9f41cb-4aea-49a0-ab50-3b81722722af",
            "f10584df-3c60-4976-97a7-b6c4a216169d"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 114,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "b6d09548-f9ac-483d-b8dc-9039f48e6b5f",
          "title": "Pre-need sponsor mailing address",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/pre-need/tests/config/sponsorMailingAddress.unit.spec.jsx",
          "file": "/src/applications/pre-need/tests/config/sponsorMailingAddress.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should render",
              "fullTitle": "Pre-need sponsor mailing address should render",
              "timedOut": false,
              "duration": 58,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var form = (0, _enzyme.mount)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n  store: store\n}, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  schema: schema,\n  definitions: _form.default.defaultDefinitions,\n  uiSchema: uiSchema\n})));\n(0, _schemaformUtils.fillData)(form, 'select#root_application_veteran_address_country', 'USA');\n(0, _chai.expect)(form.find('input').length).to.equal(4);\n(0, _chai.expect)(form.find('select').length).to.equal(2);\n(0, _schemaformUtils.fillData)(form, 'select#root_application_veteran_address_country', 'MEX');\n(0, _chai.expect)(form.find('input').length).to.equal(4);\n(0, _chai.expect)(form.find('select').length).to.equal(1);\nform.unmount();",
              "err": {},
              "uuid": "2ef64d14-3215-4200-8e80-bd29abd80134",
              "parentUUID": "b6d09548-f9ac-483d-b8dc-9039f48e6b5f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should submit empty form",
              "fullTitle": "Pre-need sponsor mailing address should submit empty form",
              "timedOut": false,
              "duration": 36,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var onSubmit = _sinon.default.spy();\nvar form = (0, _enzyme.mount)(/*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  schema: schema,\n  definitions: _form.default.defaultDefinitions,\n  onSubmit: onSubmit,\n  uiSchema: uiSchema\n}));\nform.find('form').simulate('submit');\n(0, _chai.expect)(form.find('.usa-input-error').length).to.equal(0);\n(0, _chai.expect)(onSubmit.called).to.be.true;\nform.unmount();",
              "err": {},
              "uuid": "a018c581-f1ea-438d-9fd6-8a1c62e36bcd",
              "parentUUID": "b6d09548-f9ac-483d-b8dc-9039f48e6b5f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should submit with valid data",
              "fullTitle": "Pre-need sponsor mailing address should submit with valid data",
              "timedOut": false,
              "duration": 63,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var onSubmit = _sinon.default.spy();\nvar form = (0, _enzyme.mount)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n  store: store\n}, /*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  schema: schema,\n  definitions: _form.default.defaultDefinitions,\n  onSubmit: onSubmit,\n  uiSchema: uiSchema\n})));\n(0, _schemaformUtils.fillData)(form, 'input#root_application_veteran_address_street', 'Test');\n(0, _schemaformUtils.fillData)(form, 'input#root_application_veteran_address_city', 'Test');\n(0, _schemaformUtils.fillData)(form, 'select#root_application_veteran_address_state', 'MA');\n(0, _schemaformUtils.fillData)(form, 'input#root_application_veteran_address_postalCode', '12345');\nform.find('form').simulate('submit');\n(0, _chai.expect)(form.find('.usa-input-error').length).to.equal(0);\n(0, _chai.expect)(onSubmit.called).to.be.true;\nform.unmount();",
              "err": {},
              "uuid": "ceddfe19-dfc3-4895-a6c3-6ecca92cceae",
              "parentUUID": "b6d09548-f9ac-483d-b8dc-9039f48e6b5f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "2ef64d14-3215-4200-8e80-bd29abd80134",
            "a018c581-f1ea-438d-9fd6-8a1c62e36bcd",
            "ceddfe19-dfc3-4895-a6c3-6ecca92cceae"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 157,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "decb1b54-c6dc-4c0e-a37b-1a38297ad5c3",
          "title": "Pre-need sponsor military details",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/pre-need/tests/config/sponsorMilitaryDetails.unit.spec.jsx",
          "file": "/src/applications/pre-need/tests/config/sponsorMilitaryDetails.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should render",
              "fullTitle": "Pre-need sponsor military details should render",
              "timedOut": false,
              "duration": 10,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var form = (0, _enzyme.mount)(/*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  schema: schema,\n  definitions: _form.default.defaultDefinitions,\n  uiSchema: uiSchema\n}));\n(0, _chai.expect)(form.find('input').length).to.equal(2);\n(0, _chai.expect)(form.find('select').length).to.equal(1);\nform.unmount();",
              "err": {},
              "uuid": "3b9d7f8e-b078-4016-ae6d-04cd4e68491f",
              "parentUUID": "decb1b54-c6dc-4c0e-a37b-1a38297ad5c3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should not submit empty form",
              "fullTitle": "Pre-need sponsor military details should not submit empty form",
              "timedOut": false,
              "duration": 13,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var onSubmit = _sinon.default.spy();\nvar form = (0, _enzyme.mount)(/*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  schema: schema,\n  definitions: _form.default.defaultDefinitions,\n  onSubmit: onSubmit,\n  uiSchema: uiSchema\n}));\nform.find('form').simulate('submit');\n(0, _chai.expect)(form.find('.usa-input-error').length).to.equal(1);\n(0, _chai.expect)(onSubmit.called).to.be.false;\nform.unmount();",
              "err": {},
              "uuid": "e427dcd7-4a11-4f1a-a5b2-5c7b1b96c9bb",
              "parentUUID": "decb1b54-c6dc-4c0e-a37b-1a38297ad5c3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should submit with required information",
              "fullTitle": "Pre-need sponsor military details should submit with required information",
              "timedOut": false,
              "duration": 14,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var onSubmit = _sinon.default.spy();\nvar form = (0, _enzyme.mount)(/*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  schema: schema,\n  definitions: _form.default.defaultDefinitions,\n  onSubmit: onSubmit,\n  uiSchema: uiSchema\n}));\n(0, _schemaformUtils.fillData)(form, 'select#root_application_veteran_militaryStatus', 'A');\nform.find('form').simulate('submit');\n(0, _chai.expect)(onSubmit.called).to.be.true;\nform.unmount();",
              "err": {},
              "uuid": "ed3fada5-41e9-4213-a91f-396e97a45f80",
              "parentUUID": "decb1b54-c6dc-4c0e-a37b-1a38297ad5c3",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "3b9d7f8e-b078-4016-ae6d-04cd4e68491f",
            "e427dcd7-4a11-4f1a-a5b2-5c7b1b96c9bb",
            "ed3fada5-41e9-4213-a91f-396e97a45f80"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 37,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "6d8a1e60-a957-4d54-984e-317b600d9221",
          "title": "Pre-need sponsor military history",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/pre-need/tests/config/sponsorMilitaryHistory.unit.spec.jsx",
          "file": "/src/applications/pre-need/tests/config/sponsorMilitaryHistory.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should render",
              "fullTitle": "Pre-need sponsor military history should render",
              "timedOut": false,
              "duration": 20,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var form = (0, _enzyme.mount)(/*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  schema: schema,\n  definitions: _form.default.defaultDefinitions,\n  uiSchema: uiSchema\n}));\n(0, _chai.expect)(form.find('input').length).to.equal(4);\n(0, _chai.expect)(form.find('select').length).to.equal(5);\nform.unmount();",
              "err": {},
              "uuid": "52e3e92f-3f5b-4d61-9879-f2b876e6d4ff",
              "parentUUID": "6d8a1e60-a957-4d54-984e-317b600d9221",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should not submit empty form",
              "fullTitle": "Pre-need sponsor military history should not submit empty form",
              "timedOut": false,
              "duration": 38,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var onSubmit = _sinon.default.spy();\nvar form = (0, _enzyme.mount)(/*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  schema: schema,\n  definitions: _form.default.defaultDefinitions,\n  onSubmit: onSubmit,\n  uiSchema: uiSchema\n}));\nform.find('form').simulate('submit');\n(0, _chai.expect)(form.find('.usa-input-error').length).to.equal(1);\n(0, _chai.expect)(onSubmit.called).to.be.false;\nform.unmount();",
              "err": {},
              "uuid": "bb853e73-04fb-4775-a747-60e1eacac4f6",
              "parentUUID": "6d8a1e60-a957-4d54-984e-317b600d9221",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should submit with required information",
              "fullTitle": "Pre-need sponsor military history should submit with required information",
              "timedOut": false,
              "duration": 40,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var onSubmit = _sinon.default.spy();\nvar form = (0, _enzyme.mount)(/*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  schema: schema,\n  definitions: _form.default.defaultDefinitions,\n  onSubmit: onSubmit,\n  uiSchema: uiSchema\n}));\n(0, _schemaformUtils.fillData)(form, 'input#root_application_veteran_serviceRecords_0_serviceBranch', 'AR');\nform.find('form').simulate('submit');\n(0, _chai.expect)(onSubmit.called).to.be.true;\nform.unmount();",
              "err": {},
              "uuid": "1ada08fe-27c0-42e2-84b9-3f3e65ba6c15",
              "parentUUID": "6d8a1e60-a957-4d54-984e-317b600d9221",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "52e3e92f-3f5b-4d61-9879-f2b876e6d4ff",
            "bb853e73-04fb-4775-a747-60e1eacac4f6",
            "1ada08fe-27c0-42e2-84b9-3f3e65ba6c15"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 98,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "fbfa3c59-baf8-4dd6-b468-58f75bce6b01",
          "title": "Pre-need sponsor military name",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/pre-need/tests/config/sponsorMilitaryName.unit.spec.jsx",
          "file": "/src/applications/pre-need/tests/config/sponsorMilitaryName.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should render",
              "fullTitle": "Pre-need sponsor military name should render",
              "timedOut": false,
              "duration": 8,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var form = (0, _enzyme.mount)(/*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  schema: schema,\n  definitions: _form.default.defaultDefinitions,\n  uiSchema: uiSchema\n}));\n(0, _chai.expect)(form.find('input').length).to.equal(2);\nform.unmount();",
              "err": {},
              "uuid": "ea07de58-7cbb-4f54-805d-a9563e6a6409",
              "parentUUID": "fbfa3c59-baf8-4dd6-b468-58f75bce6b01",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should not submit empty form",
              "fullTitle": "Pre-need sponsor military name should not submit empty form",
              "timedOut": false,
              "duration": 7,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var onSubmit = _sinon.default.spy();\nvar form = (0, _enzyme.mount)(/*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  schema: schema,\n  definitions: _form.default.defaultDefinitions,\n  onSubmit: onSubmit,\n  uiSchema: uiSchema\n}));\nform.find('form').simulate('submit');\n(0, _chai.expect)(form.find('.usa-input-error').length).to.equal(1);\n(0, _chai.expect)(onSubmit.called).to.be.false;\nform.unmount();",
              "err": {},
              "uuid": "b4bee0ca-5736-4280-b644-1f33a55c08ac",
              "parentUUID": "fbfa3c59-baf8-4dd6-b468-58f75bce6b01",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should submit with required fields filled in",
              "fullTitle": "Pre-need sponsor military name should submit with required fields filled in",
              "timedOut": false,
              "duration": 9,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var onSubmit = _sinon.default.spy();\nvar form = (0, _enzyme.mount)(/*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  schema: schema,\n  definitions: _form.default.defaultDefinitions,\n  onSubmit: onSubmit,\n  uiSchema: uiSchema\n}));\n(0, _schemaformUtils.selectRadio)(form, 'root_application_veteran_view:hasServiceName', 'N');\nform.find('form').simulate('submit');\n(0, _chai.expect)(form.find('.usa-input-error').length).to.equal(0);\n(0, _chai.expect)(onSubmit.called).to.be.true;\nform.unmount();",
              "err": {},
              "uuid": "870b6e12-7b64-4314-91f1-d3267c6623f8",
              "parentUUID": "fbfa3c59-baf8-4dd6-b468-58f75bce6b01",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "ea07de58-7cbb-4f54-805d-a9563e6a6409",
            "b4bee0ca-5736-4280-b644-1f33a55c08ac",
            "870b6e12-7b64-4314-91f1-d3267c6623f8"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 24,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "cf804759-56b6-4f3a-af65-83c6ac38bfd2",
          "title": "Pre-need sponsor military name information",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/pre-need/tests/config/sponsorMilitaryNameInformation.unit.spec.jsx",
          "file": "/src/applications/pre-need/tests/config/sponsorMilitaryNameInformation.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should render",
              "fullTitle": "Pre-need sponsor military name information should render",
              "timedOut": false,
              "duration": 8,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var form = (0, _enzyme.mount)(/*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  schema: schema,\n  definitions: _form.default.defaultDefinitions,\n  uiSchema: uiSchema\n}));\n(0, _chai.expect)(form.find('input').length).to.equal(3);\n(0, _chai.expect)(form.find('select').length).to.equal(1);\nform.unmount();",
              "err": {},
              "uuid": "a90900c2-ebc3-4d49-bac5-160b790a879c",
              "parentUUID": "cf804759-56b6-4f3a-af65-83c6ac38bfd2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should submit with required fields filled in",
              "fullTitle": "Pre-need sponsor military name information should submit with required fields filled in",
              "timedOut": false,
              "duration": 20,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var onSubmit = _sinon.default.spy();\nvar form = (0, _enzyme.mount)(/*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  schema: schema,\n  definitions: _form.default.defaultDefinitions,\n  onSubmit: onSubmit,\n  uiSchema: uiSchema\n}));\n(0, _schemaformUtils.fillData)(form, 'input#root_application_veteran_serviceName_last', 'Smith');\n(0, _schemaformUtils.fillData)(form, 'input#root_application_veteran_serviceName_first', 'Jane');\nform.find('form').simulate('submit');\n(0, _chai.expect)(form.find('.usa-input-error').length).to.equal(0);\n(0, _chai.expect)(onSubmit.called).to.be.true;\nform.unmount();",
              "err": {},
              "uuid": "c5446f47-5235-4c87-a7cb-8977503de9e7",
              "parentUUID": "cf804759-56b6-4f3a-af65-83c6ac38bfd2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should submit with all info filled in",
              "fullTitle": "Pre-need sponsor military name information should submit with all info filled in",
              "timedOut": false,
              "duration": 25,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var onSubmit = _sinon.default.spy();\nvar form = (0, _enzyme.mount)(/*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  schema: schema,\n  definitions: _form.default.defaultDefinitions,\n  onSubmit: onSubmit,\n  uiSchema: uiSchema\n}));\n(0, _schemaformUtils.fillData)(form, 'input#root_application_veteran_serviceName_last', 'Smith');\n(0, _schemaformUtils.fillData)(form, 'input#root_application_veteran_serviceName_first', 'Jane');\n(0, _schemaformUtils.fillData)(form, 'input#root_application_veteran_serviceName_middle', 'M');\n(0, _schemaformUtils.fillData)(form, 'select#root_application_veteran_serviceName_suffix', 'Jr.');\nform.find('form').simulate('submit');\n(0, _chai.expect)(form.find('.usa-input-error').length).to.equal(0);\n(0, _chai.expect)(onSubmit.called).to.be.true;\nform.unmount();",
              "err": {},
              "uuid": "76fa8ccd-c96b-4e5e-8125-14f04026766a",
              "parentUUID": "cf804759-56b6-4f3a-af65-83c6ac38bfd2",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a90900c2-ebc3-4d49-bac5-160b790a879c",
            "c5446f47-5235-4c87-a7cb-8977503de9e7",
            "76fa8ccd-c96b-4e5e-8125-14f04026766a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 53,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "e5ea3aa6-76e2-4b7e-9eed-c152e6c35af8",
          "title": "Pre-need applicant veteran applicant details",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/pre-need/tests/config/veteranApplicantDetails.unit.spec.jsx",
          "file": "/src/applications/pre-need/tests/config/veteranApplicantDetails.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should render",
              "fullTitle": "Pre-need applicant veteran applicant details should render",
              "timedOut": false,
              "duration": 17,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var form = (0, _enzyme.mount)(/*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  schema: schema,\n  definitions: _form.default.defaultDefinitions,\n  uiSchema: uiSchema\n}));\n(0, _chai.expect)(form.find('input').length).to.equal(7);\n(0, _chai.expect)(form.find('select').length).to.equal(3);\n(0, _chai.expect)(form.find('va-additional-info').length).to.equal(1);\n(0, _chai.expect)(form.find('va-additional-info').html()).to.include('<va-additional-info trigger=\"Are you filling out this application on behalf of someone else?\"><p>If you’re filling out the form on behalf of someone else, you’ll need to provide their details below. As the preparer, we’ll ask for your own details later.</p></va-additional-info>');\nform.unmount();",
              "err": {},
              "uuid": "a8bb4062-965c-4f64-a531-ff3b689e512a",
              "parentUUID": "e5ea3aa6-76e2-4b7e-9eed-c152e6c35af8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should not submit empty form",
              "fullTitle": "Pre-need applicant veteran applicant details should not submit empty form",
              "timedOut": false,
              "duration": 21,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var onSubmit = _sinon.default.spy();\nvar form = (0, _enzyme.mount)(/*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  schema: schema,\n  definitions: _form.default.defaultDefinitions,\n  onSubmit: onSubmit,\n  uiSchema: uiSchema\n}));\nform.find('form').simulate('submit');\n(0, _chai.expect)(form.find('.usa-input-error').length).to.equal(5);\n(0, _chai.expect)(onSubmit.called).to.be.false;\nform.unmount();",
              "err": {},
              "uuid": "64dc2f47-93df-4044-a8f4-46b0c9df5af5",
              "parentUUID": "e5ea3aa6-76e2-4b7e-9eed-c152e6c35af8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should submit with required information",
              "fullTitle": "Pre-need applicant veteran applicant details should submit with required information",
              "timedOut": false,
              "duration": 59,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var onSubmit = _sinon.default.spy();\nvar form = (0, _enzyme.mount)(/*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  schema: schema,\n  definitions: _form.default.defaultDefinitions,\n  onSubmit: onSubmit,\n  uiSchema: uiSchema\n}));\n(0, _schemaformUtils.fillData)(form, 'input#root_application_claimant_name_first', 'test');\n(0, _schemaformUtils.fillData)(form, 'input#root_application_claimant_name_last', 'test2');\n(0, _schemaformUtils.fillData)(form, 'input#root_application_claimant_ssn', '234443344');\n(0, _schemaformUtils.fillData)(form, 'select#root_application_claimant_dateOfBirthMonth', '2');\n(0, _schemaformUtils.fillData)(form, 'select#root_application_claimant_dateOfBirthDay', '2');\n(0, _schemaformUtils.fillData)(form, 'input#root_application_claimant_dateOfBirthYear', '2001');\n(0, _schemaformUtils.fillData)(form, 'input#root_application_veteran_placeOfBirth', 'Test Place');\nform.find('form').simulate('submit');\n(0, _chai.expect)(onSubmit.called).to.be.true;\nform.unmount();",
              "err": {},
              "uuid": "67c0cfa8-0cf4-45ba-adff-d84520983393",
              "parentUUID": "e5ea3aa6-76e2-4b7e-9eed-c152e6c35af8",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a8bb4062-965c-4f64-a531-ff3b689e512a",
            "64dc2f47-93df-4044-a8f4-46b0c9df5af5",
            "67c0cfa8-0cf4-45ba-adff-d84520983393"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 97,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "1ed4e401-1f3e-4b34-a67b-8dd6eaac5a0a",
          "title": "Pre-need ConfirmationPage component",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/pre-need/tests/containers/ConfirmationPage.unit.spec.jsx",
          "file": "/src/applications/pre-need/tests/containers/ConfirmationPage.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "it should render",
              "fullTitle": "Pre-need ConfirmationPage component it should render",
              "timedOut": false,
              "duration": 12,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var screen = (0, _react2.render)(/*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {\n  store: mockStore(storeBase1)\n}, /*#__PURE__*/_react.default.createElement(_ConfirmationPage.default, null)));\n(0, _chai.expect)(screen.getByText('Your claim has been submitted.')).to.exist;",
              "err": {},
              "uuid": "8c37b98f-3d04-45d6-8781-8028dfdec437",
              "parentUUID": "1ed4e401-1f3e-4b34-a67b-8dd6eaac5a0a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "8c37b98f-3d04-45d6-8781-8028dfdec437"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 12,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "2d28e11e-4f16-4bb3-aae2-44bde784a494",
          "title": "Pre-need definition address",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/pre-need/tests/definitions/address.unit.spec.jsx",
          "file": "/src/applications/pre-need/tests/definitions/address.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should render address",
              "fullTitle": "Pre-need definition address should render address",
              "timedOut": false,
              "duration": 35,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var s = (0, _address.schema)(addressSchema, false);\nvar uis = (0, _address.uiSchema)();\nvar form = (0, _enzyme.mount)(/*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  schema: s,\n  uiSchema: uis\n}));\n// Count the form elements\nvar inputs = form.find('input');\nvar selects = form.find('select');\n(0, _chai.expect)(inputs.length).to.equal(4);\n(0, _chai.expect)(selects.length).to.equal(2);\n// Postal code should be small\n(0, _chai.expect)(inputs.last().is('.usa-input-medium')).to.be.true;\n// country is USA and there is no blank option\n(0, _chai.expect)(selects.first().props().value).to.equal('USA');\n(0, _chai.expect)(selects.first().find('option').everyWhere(function (n) {\n  return !!n.props().value;\n})).to.be.true;\nform.unmount();",
              "err": {},
              "uuid": "77cf84c4-500a-4e0e-8d94-0b3150e986ba",
              "parentUUID": "2d28e11e-4f16-4bb3-aae2-44bde784a494",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should have required inputs if required",
              "fullTitle": "Pre-need definition address should have required inputs if required",
              "timedOut": false,
              "duration": 31,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var s = (0, _address.schema)(addressSchema, true);\nvar uis = (0, _address.uiSchema)();\nvar form = (0, _enzyme.mount)(/*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  schema: s,\n  uiSchema: uis\n}));\n// Ideally, we'd get the required inputs, not the <span>s denoting required\n//  fields but this doesn't work.\n// const requiredInputs = formDOM.querySelectorAll('input[required=true]');\nvar requiredInputs = form.find('label').find('span.schemaform-required-span');\n(0, _chai.expect)(requiredInputs.length).to.not.equal(0);\nform.unmount();",
              "err": {},
              "uuid": "019fc278-6d2d-4d5b-9734-4a27098185d2",
              "parentUUID": "2d28e11e-4f16-4bb3-aae2-44bde784a494",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should update labels and state selection conditionally",
              "fullTitle": "Pre-need definition address should update labels and state selection conditionally",
              "timedOut": false,
              "duration": 55,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var s = (0, _address.schema)(addressSchema, false);\nvar uis = (0, _address.uiSchema)();\nvar form = (0, _enzyme.mount)(/*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  schema: s,\n  uiSchema: uis\n}));\nvar labels = form.find('label');\nvar postalCodeLabel = labels.findWhere(function (label) {\n  return label.props().htmlFor === 'root_postalCode';\n});\nvar stateLabel = labels.findWhere(function (label) {\n  return label.props().htmlFor === 'root_state';\n});\nvar stateField = form.find('select#root_state');\n// Check the labels' text\n(0, _chai.expect)(postalCodeLabel.text()).to.equal('Postal code');\n(0, _chai.expect)(stateLabel.text()).to.equal('State');\n// And state input type / options\n(0, _chai.expect)(stateField.find('option').someWhere(function (n) {\n  return n.props().value === 'OR';\n})).to.be.true;\n// Entering a military city should result in different \"state\" options\n(0, _schemaformUtils.fillData)(form, 'input#root_city', 'apo');\n(0, _chai.expect)(stateField.find('option').someWhere(function (n) {\n  return n.props().value === 'AA';\n})).to.be.true;\n// Change the country\n(0, _schemaformUtils.fillData)(form, 'select#root_country', 'CAN');\n// Check to see if the postal code and state updated\n(0, _chai.expect)(stateLabel.text()).to.equal('Province');\n(0, _chai.expect)(postalCodeLabel.text()).to.equal('Postal code');\n(0, _chai.expect)(form.find('select#root_state').find('option').someWhere(function (n) {\n  return n.props().value === 'QC';\n})).to.be.true;\n(0, _schemaformUtils.fillData)(form, 'select#root_country', 'BEL');\n(0, _chai.expect)(form.find('input#root_state').exists()).to.be.true;\nform.unmount();",
              "err": {},
              "uuid": "aeccc95a-4361-424e-ab68-18abf404aa06",
              "parentUUID": "2d28e11e-4f16-4bb3-aae2-44bde784a494",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should update address field",
              "fullTitle": "Pre-need definition address should update address field",
              "timedOut": false,
              "duration": 31,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var s = (0, _address.schema)(addressSchema, false);\nvar uis = (0, _address.uiSchema)();\nvar form = (0, _enzyme.mount)(/*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  schema: s,\n  uiSchema: uis\n}));\n(0, _schemaformUtils.fillData)(form, 'input#root_street', '123 street');\n(0, _chai.expect)(form.find('input#root_street').props().value).to.equal('123 street');\nform.unmount();",
              "err": {},
              "uuid": "7c6ba90b-2195-435a-b4e8-68a56a568059",
              "parentUUID": "2d28e11e-4f16-4bb3-aae2-44bde784a494",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should update country field in empty address",
              "fullTitle": "Pre-need definition address should update country field in empty address",
              "timedOut": false,
              "duration": 32,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var s = (0, _address.schema)(addressSchema, false);\nvar uis = (0, _address.uiSchema)();\nvar form = (0, _enzyme.mount)(/*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  schema: s,\n  uiSchema: uis\n}));\n(0, _schemaformUtils.fillData)(form, 'select#root_country', 'CAN');\n(0, _chai.expect)(form.find('select#root_country').props().value).to.equal('CAN');\nform.unmount();",
              "err": {},
              "uuid": "52d2169a-3988-4215-a82f-b5bcd6e54a46",
              "parentUUID": "2d28e11e-4f16-4bb3-aae2-44bde784a494",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "77cf84c4-500a-4e0e-8d94-0b3150e986ba",
            "019fc278-6d2d-4d5b-9734-4a27098185d2",
            "aeccc95a-4361-424e-ab68-18abf404aa06",
            "7c6ba90b-2195-435a-b4e8-68a56a568059",
            "52d2169a-3988-4215-a82f-b5bcd6e54a46"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 184,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "adf9977e-650b-4a2f-9cde-639276e671b4",
          "title": "Pre-need Schemaform definition fullName",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/pre-need/tests/definitions/email.unit.spec.jsx",
          "file": "/src/applications/pre-need/tests/definitions/email.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should render fullName",
              "fullTitle": "Pre-need Schemaform definition fullName should render fullName",
              "timedOut": false,
              "duration": 4,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var form = _testUtils.default.renderIntoDocument(/*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  schema: _definitions.default.email,\n  uiSchema: _email.default\n}));\nvar formDOM = (0, _reactDom.findDOMNode)(form);\nvar inputs = formDOM.querySelectorAll('input');\n(0, _chai.expect)(inputs.length).to.equal(1);",
              "err": {},
              "uuid": "f945b421-f827-4ac1-b5de-be713005d94f",
              "parentUUID": "adf9977e-650b-4a2f-9cde-639276e671b4",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f945b421-f827-4ac1-b5de-be713005d94f"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 4,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "7666ad26-64b8-4175-b003-b7dff1236dea",
          "title": "Pre-need Schemaform definition fullName",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/pre-need/tests/definitions/fullName.unit.spec.jsx",
          "file": "/src/applications/pre-need/tests/definitions/fullName.unit.spec.jsx",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should render fullName",
              "fullTitle": "Pre-need Schemaform definition fullName should render fullName",
              "timedOut": false,
              "duration": 3,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var form = _testUtils.default.renderIntoDocument(/*#__PURE__*/_react.default.createElement(_schemaformUtils.DefinitionTester, {\n  schema: _definitions.default.fullName,\n  uiSchema: _fullName.default\n}));\nvar formDOM = (0, _reactDom.findDOMNode)(form);\nvar inputs = formDOM.querySelectorAll('input');\n(0, _chai.expect)(inputs.length).to.equal(2);",
              "err": {},
              "uuid": "40bff6dd-6c18-4826-aaed-ec626642f02f",
              "parentUUID": "7666ad26-64b8-4175-b003-b7dff1236dea",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "40bff6dd-6c18-4826-aaed-ec626642f02f"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "daf86b1e-53c8-4bd3-aaf5-da67b8e71839",
          "title": "pre-need schema tests",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/pre-need/tests/schema/schema.unit.spec.js",
          "file": "/src/applications/pre-need/tests/schema/schema.unit.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should validate error-example.json",
              "fullTitle": "pre-need schema tests should validate error-example.json",
              "timedOut": false,
              "duration": 7,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var result = v.validate(JSON.parse(submitData), _schema.default);\nif (!result.valid) {\n  console.log(result.errors); // eslint-disable-line no-console\n}\n(0, _chai.expect)(result.valid).to.be.true;",
              "err": {},
              "uuid": "64345031-a987-4ee5-bbf7-9d4678ad68d0",
              "parentUUID": "daf86b1e-53c8-4bd3-aaf5-da67b8e71839",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should validate maximal-test.json",
              "fullTitle": "pre-need schema tests should validate maximal-test.json",
              "timedOut": false,
              "duration": 5,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var result = v.validate(JSON.parse(submitData), _schema.default);\nif (!result.valid) {\n  console.log(result.errors); // eslint-disable-line no-console\n}\n(0, _chai.expect)(result.valid).to.be.true;",
              "err": {},
              "uuid": "cba555bc-5e6b-47ee-8f6f-2c94e97bf8af",
              "parentUUID": "daf86b1e-53c8-4bd3-aaf5-da67b8e71839",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should validate minimal-test.json",
              "fullTitle": "pre-need schema tests should validate minimal-test.json",
              "timedOut": false,
              "duration": 3,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var result = v.validate(JSON.parse(submitData), _schema.default);\nif (!result.valid) {\n  console.log(result.errors); // eslint-disable-line no-console\n}\n(0, _chai.expect)(result.valid).to.be.true;",
              "err": {},
              "uuid": "70169114-9d24-454a-b3d6-249996da3036",
              "parentUUID": "daf86b1e-53c8-4bd3-aaf5-da67b8e71839",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should validate required-fields-test.json",
              "fullTitle": "pre-need schema tests should validate required-fields-test.json",
              "timedOut": false,
              "duration": 3,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var result = v.validate(JSON.parse(submitData), _schema.default);\nif (!result.valid) {\n  console.log(result.errors); // eslint-disable-line no-console\n}\n(0, _chai.expect)(result.valid).to.be.true;",
              "err": {},
              "uuid": "1448484e-ae36-4656-96ac-bd1fcd599aaf",
              "parentUUID": "daf86b1e-53c8-4bd3-aaf5-da67b8e71839",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "64345031-a987-4ee5-bbf7-9d4678ad68d0",
            "cba555bc-5e6b-47ee-8f6f-2c94e97bf8af",
            "70169114-9d24-454a-b3d6-249996da3036",
            "1448484e-ae36-4656-96ac-bd1fcd599aaf"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 18,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "1b8d5da4-d28c-4cc1-a756-8e4e462aad8a",
          "title": "Preneed helpers",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/pre-need/tests/utils/helpers.unit.spec.js",
          "file": "/src/applications/pre-need/tests/utils/helpers.unit.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "a2622602-361d-4480-8d21-f602368bcb61",
              "title": "transform",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/pre-need/tests/utils/helpers.unit.spec.js",
              "file": "/src/applications/pre-need/tests/utils/helpers.unit.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should remove view fields",
                  "fullTitle": "Preneed helpers transform should remove view fields",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var data = JSON.parse((0, _helpers.transform)({}, {\n  data: {\n    application: {\n      claimant: {},\n      veteran: {},\n      'view:testing': 'asdfadf'\n    }\n  }\n}));\n(0, _chai.expect)(data.application['view:testing']).to.be.undefined;",
                  "err": {},
                  "uuid": "d4d81dd5-cedd-4aad-a710-b58e8a09d52a",
                  "parentUUID": "a2622602-361d-4480-8d21-f602368bcb61",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should populate service name",
                  "fullTitle": "Preneed helpers transform should populate service name",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var data = JSON.parse((0, _helpers.transform)({}, {\n  data: {\n    application: {\n      claimant: {},\n      veteran: {\n        currentName: 'testing'\n      },\n      'view:testing': 'asdfadf'\n    }\n  }\n}));\n(0, _chai.expect)(data.application.veteran.serviceName).to.equal(data.application.veteran.currentName);",
                  "err": {},
                  "uuid": "56b1061b-ceeb-47d0-8a36-97b9b823e72d",
                  "parentUUID": "a2622602-361d-4480-8d21-f602368bcb61",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should remove partial addresses",
                  "fullTitle": "Preneed helpers transform should remove partial addresses",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var data = JSON.parse((0, _helpers.transform)({}, {\n  data: {\n    application: {\n      claimant: {\n        address: {\n          country: 'USA',\n          city: 'test'\n        }\n      },\n      veteran: {}\n    }\n  }\n}));\n(0, _chai.expect)(data.application.claimant.address).to.be.undefined;",
                  "err": {},
                  "uuid": "085b298d-e28d-450b-8f9a-3ef80955fd1d",
                  "parentUUID": "a2622602-361d-4480-8d21-f602368bcb61",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "d4d81dd5-cedd-4aad-a710-b58e8a09d52a",
                "56b1061b-ceeb-47d0-8a36-97b9b823e72d",
                "085b298d-e28d-450b-8f9a-3ef80955fd1d"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "cd5ff609-39dd-48be-a120-f71b633d8d71",
          "title": "Pre-need validation",
          "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/pre-need/tests/validation.unit.spec.js",
          "file": "/src/applications/pre-need/tests/validation.unit.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "1560e7f5-8783-42d9-8e6a-71b6999b73b3",
              "title": "validateSponsorDeathDate",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/pre-need/tests/validation.unit.spec.js",
              "file": "/src/applications/pre-need/tests/validation.unit.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return error if death is before birth",
                  "fullTitle": "Pre-need validation validateSponsorDeathDate should return error if death is before birth",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var errors = {\n  dateOfDeath: {\n    addError: _sinon.default.spy()\n  }\n};\n(0, _validation.validateSponsorDeathDate)(errors, {\n  isDeceased: 'yes',\n  dateOfBirth: '2011-01-01',\n  dateOfDeath: '2010-01-01'\n});\n(0, _chai.expect)(errors.dateOfDeath.addError.called).to.be.true;",
                  "err": {},
                  "uuid": "bf66a181-3306-4705-96d0-7b54aa30ed64",
                  "parentUUID": "1560e7f5-8783-42d9-8e6a-71b6999b73b3",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return error if death is same as birth",
                  "fullTitle": "Pre-need validation validateSponsorDeathDate should return error if death is same as birth",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var errors = {\n  dateOfDeath: {\n    addError: _sinon.default.spy()\n  }\n};\n(0, _validation.validateSponsorDeathDate)(errors, {\n  isDeceased: 'yes',\n  dateOfBirth: '2010-01-01',\n  dateOfDeath: '2010-01-01'\n});\n(0, _chai.expect)(errors.dateOfDeath.addError.called).to.be.true;",
                  "err": {},
                  "uuid": "76db5661-136c-44ee-9d04-884bc53fcc92",
                  "parentUUID": "1560e7f5-8783-42d9-8e6a-71b6999b73b3",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should not add error if death is after birth",
                  "fullTitle": "Pre-need validation validateSponsorDeathDate should not add error if death is after birth",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var errors = {\n  dateOfDeath: {\n    addError: _sinon.default.spy()\n  }\n};\n(0, _validation.validateSponsorDeathDate)(errors, {\n  isDeceased: 'yes',\n  dateOfBirth: '2010-01-01',\n  dateOfDeath: '2011-01-01'\n});\n(0, _chai.expect)(errors.dateOfDeath.addError.called).to.be.false;",
                  "err": {},
                  "uuid": "5bed44a7-adda-4fde-b5e3-149ce5bf397f",
                  "parentUUID": "1560e7f5-8783-42d9-8e6a-71b6999b73b3",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should not add error if not deceased",
                  "fullTitle": "Pre-need validation validateSponsorDeathDate should not add error if not deceased",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var errors = {\n  dateOfDeath: {\n    addError: _sinon.default.spy()\n  }\n};\n(0, _validation.validateSponsorDeathDate)(errors, {\n  isDeceased: 'no',\n  dateOfBirth: '2011-01-01',\n  dateOfDeath: '2010-01-01'\n});\n(0, _chai.expect)(errors.dateOfDeath.addError.called).to.be.false;",
                  "err": {},
                  "uuid": "65be3a67-bf94-49df-8dcc-9d2a76f4334b",
                  "parentUUID": "1560e7f5-8783-42d9-8e6a-71b6999b73b3",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should not add error if no death date",
                  "fullTitle": "Pre-need validation validateSponsorDeathDate should not add error if no death date",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var errors = {\n  dateOfDeath: {\n    addError: _sinon.default.spy()\n  }\n};\n(0, _validation.validateSponsorDeathDate)(errors, {\n  isDeceased: 'yes',\n  dateOfBirth: '2011-01-01'\n});\n(0, _chai.expect)(errors.dateOfDeath.addError.called).to.be.false;",
                  "err": {},
                  "uuid": "4c3a8e2a-2635-4eae-a6c0-b6300fd85e9c",
                  "parentUUID": "1560e7f5-8783-42d9-8e6a-71b6999b73b3",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should not add error if no dates",
                  "fullTitle": "Pre-need validation validateSponsorDeathDate should not add error if no dates",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var errors = {\n  dateOfDeath: {\n    addError: _sinon.default.spy()\n  }\n};\n(0, _validation.validateSponsorDeathDate)(errors, {\n  isDeceased: 'yes'\n});\n(0, _chai.expect)(errors.dateOfDeath.addError.called).to.be.false;",
                  "err": {},
                  "uuid": "4429c3b3-e1bc-4867-8c77-19ae05345af6",
                  "parentUUID": "1560e7f5-8783-42d9-8e6a-71b6999b73b3",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "bf66a181-3306-4705-96d0-7b54aa30ed64",
                "76db5661-136c-44ee-9d04-884bc53fcc92",
                "5bed44a7-adda-4fde-b5e3-149ce5bf397f",
                "65be3a67-bf94-49df-8dcc-9d2a76f4334b",
                "4c3a8e2a-2635-4eae-a6c0-b6300fd85e9c",
                "4429c3b3-e1bc-4867-8c77-19ae05345af6"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "89013240-605c-4574-8f2b-21c16d1c7896",
              "title": "validateLocalPart",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/pre-need/tests/validation.unit.spec.js",
              "file": "/src/applications/pre-need/tests/validation.unit.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return error if local part contains ampersand",
                  "fullTitle": "Pre-need validation validateLocalPart should return error if local part contains ampersand",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var errors = {\n  addError: _sinon.default.spy()\n};\n(0, _validation.validateEmailParts)(errors, 'te&st@test.com');\n(0, _chai.expect)(errors.addError.called).to.be.true;",
                  "err": {},
                  "uuid": "b205d292-7486-49b0-9422-35d4aa2653df",
                  "parentUUID": "89013240-605c-4574-8f2b-21c16d1c7896",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should not return error if local part is valid",
                  "fullTitle": "Pre-need validation validateLocalPart should not return error if local part is valid",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var errors = {\n  addError: _sinon.default.spy()\n};\n(0, _validation.validateEmailParts)(errors, 'test@test.com');\n(0, _chai.expect)(errors.addError.called).to.be.false;",
                  "err": {},
                  "uuid": "1b2f5e49-826f-4797-997e-8ccc41ec3e64",
                  "parentUUID": "89013240-605c-4574-8f2b-21c16d1c7896",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return if email is empty",
                  "fullTitle": "Pre-need validation validateLocalPart should return if email is empty",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var errors = {\n  addError: _sinon.default.spy()\n};\n(0, _validation.validateEmailParts)(errors, '');\n(0, _chai.expect)(errors.addError.called).to.be.false;",
                  "err": {},
                  "uuid": "933e1a5c-7936-4c12-9a86-73029cd7586b",
                  "parentUUID": "89013240-605c-4574-8f2b-21c16d1c7896",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "b205d292-7486-49b0-9422-35d4aa2653df",
                "1b2f5e49-826f-4797-997e-8ccc41ec3e64",
                "933e1a5c-7936-4c12-9a86-73029cd7586b"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "e37b2065-55a0-4046-a381-9d490a4a954a",
              "title": "validateTopLevelDomain",
              "fullFile": "/Users/jacobpenner/repos/ad_hoc/va/vets-website/src/applications/pre-need/tests/validation.unit.spec.js",
              "file": "/src/applications/pre-need/tests/validation.unit.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return error if top level domain name contains digit",
                  "fullTitle": "Pre-need validation validateTopLevelDomain should return error if top level domain name contains digit",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var errors = {\n  addError: _sinon.default.spy()\n};\n(0, _validation.validateEmailParts)(errors, 'test@test.c0m');\n(0, _chai.expect)(errors.addError.called).to.be.true;",
                  "err": {},
                  "uuid": "6bc023b4-c0e7-45b5-a5cd-e9ffd5e897de",
                  "parentUUID": "e37b2065-55a0-4046-a381-9d490a4a954a",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should not return error if top level domain is valid",
                  "fullTitle": "Pre-need validation validateTopLevelDomain should not return error if top level domain is valid",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var errors = {\n  addError: _sinon.default.spy()\n};\n(0, _validation.validateEmailParts)(errors, 'test@test.com');\n(0, _chai.expect)(errors.addError.called).to.be.false;",
                  "err": {},
                  "uuid": "f03af183-6758-4336-b46d-c3f5bc5a21b0",
                  "parentUUID": "e37b2065-55a0-4046-a381-9d490a4a954a",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return error if top level domain name contains digit",
                  "fullTitle": "Pre-need validation validateTopLevelDomain should return error if top level domain name contains digit",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var errors = {\n  addError: _sinon.default.spy()\n};\n(0, _validation.validateEmailParts)(errors, 'test@test.c0m');\n(0, _chai.expect)(errors.addError.called).to.be.true;",
                  "err": {},
                  "uuid": "2ceee414-adb2-4d9f-b632-a004cc772337",
                  "parentUUID": "e37b2065-55a0-4046-a381-9d490a4a954a",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return error if top level domain name contains digit",
                  "fullTitle": "Pre-need validation validateTopLevelDomain should return error if top level domain name contains digit",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var errors = {\n  addError: _sinon.default.spy()\n};\n(0, _validation.validateEmailParts)(errors, '');\n(0, _chai.expect)(errors.addError.called).to.be.false;",
                  "err": {},
                  "uuid": "1439e5b3-ea42-49d1-96e4-a87f4f5854ca",
                  "parentUUID": "e37b2065-55a0-4046-a381-9d490a4a954a",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return if email is empty",
                  "fullTitle": "Pre-need validation validateTopLevelDomain should return if email is empty",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var errors = {\n  addError: _sinon.default.spy()\n};\n(0, _validation.validateEmailParts)(errors, '');\n(0, _chai.expect)(errors.addError.called).to.be.false;",
                  "err": {},
                  "uuid": "83dab978-c740-41d8-b364-34bb97f6206c",
                  "parentUUID": "e37b2065-55a0-4046-a381-9d490a4a954a",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "6bc023b4-c0e7-45b5-a5cd-e9ffd5e897de",
                "f03af183-6758-4336-b46d-c3f5bc5a21b0",
                "2ceee414-adb2-4d9f-b632-a004cc772337",
                "1439e5b3-ea42-49d1-96e4-a87f4f5854ca",
                "83dab978-c740-41d8-b364-34bb97f6206c"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 10000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.7.3"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "undefined_2025-03-03T221647708Z",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "min",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "id": "default",
        "consoleReporter": "min",
        "reportDir": "mocha/results",
        "reportFilename": "undefined_2025-03-03T221647708Z",
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}