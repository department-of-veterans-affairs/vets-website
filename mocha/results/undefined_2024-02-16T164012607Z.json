{
  "stats": {
    "suites": 22,
    "tests": 47,
    "passes": 41,
    "pending": 0,
    "failures": 6,
    "start": "2024-02-16T16:40:12.657Z",
    "end": "2024-02-16T16:40:12.870Z",
    "duration": 213,
    "testsRegistered": 48,
    "passPercent": 85.41666666666666,
    "pendingPercent": 0,
    "other": 2,
    "hasOther": true,
    "skipped": 1,
    "hasSkipped": true
  },
  "results": [
    {
      "uuid": "46b2a2fe-8c3b-4f48-b933-33e7f77d12a6",
      "title": "",
      "fullFile": "/Users/fatmakhan/Documents/vets-website/src/applications/gi/tests/utils/helpers.unit.spec.js",
      "file": "/src/applications/gi/tests/utils/helpers.unit.spec.js",
      "beforeHooks": [
        {
          "title": "\"before each\" hook: beforeEach in \"{root}\"",
          "fullTitle": "\"before each\" hook: beforeEach in \"{root}\"",
          "timedOut": false,
          "duration": 3,
          "state": null,
          "speed": null,
          "pass": false,
          "fail": false,
          "pending": false,
          "context": null,
          "code": "setupJSDom();\nresetFetch();\ncleanupStorage();\nif (isStressTest == 'false') {\n  checkAllowList(this);\n}\nconsole.log('running: ', this.currentTest.file.slice(this.currentTest.file.indexOf('src')));",
          "err": {},
          "uuid": "c470e6e3-ee2f-4923-abd7-7c8337c003a4",
          "parentUUID": "46b2a2fe-8c3b-4f48-b933-33e7f77d12a6",
          "isHook": true,
          "skipped": false
        }
      ],
      "afterHooks": [
        {
          "title": "\"after each\" hook: afterEach in \"{root}\"",
          "fullTitle": "\"after each\" hook: afterEach in \"{root}\"",
          "timedOut": false,
          "duration": 0,
          "state": null,
          "speed": null,
          "pass": false,
          "fail": false,
          "pending": false,
          "context": null,
          "code": "cleanupStorage();",
          "err": {},
          "uuid": "b7bf181f-3f32-4d0f-a8e0-3450f869f904",
          "parentUUID": "46b2a2fe-8c3b-4f48-b933-33e7f77d12a6",
          "isHook": true,
          "skipped": false
        }
      ],
      "tests": [],
      "suites": [
        {
          "uuid": "b9b34e9b-1b05-4eb9-8310-64db41e4bbfb",
          "title": "GIBCT helpers:",
          "fullFile": "/Users/fatmakhan/Documents/vets-website/src/applications/gi/tests/utils/helpers.unit.spec.js",
          "file": "/src/applications/gi/tests/utils/helpers.unit.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "7d5c00a3-2fb6-4d6f-8d59-834112f6c301",
              "title": "isCountryInternational",
              "fullFile": "/Users/fatmakhan/Documents/vets-website/src/applications/gi/tests/utils/helpers.unit.spec.js",
              "file": "/src/applications/gi/tests/utils/helpers.unit.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should recognize non-USA",
                  "fullTitle": "GIBCT helpers: isCountryInternational should recognize non-USA",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)((0, _helpers.isCountryInternational)('CAN')).to.be.true;",
                  "err": {},
                  "uuid": "84fc5bcc-f7a7-498a-bfee-4e66fbc2afc9",
                  "parentUUID": "7d5c00a3-2fb6-4d6f-8d59-834112f6c301",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should handle lowercase country names",
                  "fullTitle": "GIBCT helpers: isCountryInternational should handle lowercase country names",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)((0, _helpers.isCountryInternational)('usa')).to.be.false;",
                  "err": {},
                  "uuid": "83d0b36e-e02b-4686-a32b-fbe45b75928f",
                  "parentUUID": "7d5c00a3-2fb6-4d6f-8d59-834112f6c301",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should recognize USA",
                  "fullTitle": "GIBCT helpers: isCountryInternational should recognize USA",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)((0, _helpers.isCountryInternational)('USA')).to.be.false;",
                  "err": {},
                  "uuid": "1ee2b8bb-5a97-42a9-890e-4baa53c7cf61",
                  "parentUUID": "7d5c00a3-2fb6-4d6f-8d59-834112f6c301",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "84fc5bcc-f7a7-498a-bfee-4e66fbc2afc9",
                "83d0b36e-e02b-4686-a32b-fbe45b75928f",
                "1ee2b8bb-5a97-42a9-890e-4baa53c7cf61"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "98682cd0-2ded-4c20-8060-9fa9ea0232f9",
              "title": "boolYesNo",
              "fullFile": "/Users/fatmakhan/Documents/vets-website/src/applications/gi/tests/utils/helpers.unit.spec.js",
              "file": "/src/applications/gi/tests/utils/helpers.unit.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Boolean true is turned into string 'No' ",
                  "fullTitle": "GIBCT helpers: boolYesNo Boolean true is turned into string 'No' ",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var field = false;\n(0, _chai.expect)((0, _helpers.boolYesNo)(field)).to.eq('No');",
                  "err": {},
                  "uuid": "5e980112-8d4c-4cec-8023-87071c252b83",
                  "parentUUID": "98682cd0-2ded-4c20-8060-9fa9ea0232f9",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Boolean true is turned into string 'Yes' ",
                  "fullTitle": "GIBCT helpers: boolYesNo Boolean true is turned into string 'Yes' ",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var field = true;\n(0, _chai.expect)((0, _helpers.boolYesNo)(field)).to.eq('Yes');",
                  "err": {},
                  "uuid": "905e52a5-04c0-4f39-9e8a-3a46157d8e0c",
                  "parentUUID": "98682cd0-2ded-4c20-8060-9fa9ea0232f9",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "5e980112-8d4c-4cec-8023-87071c252b83",
                "905e52a5-04c0-4f39-9e8a-3a46157d8e0c"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "e553c900-354a-4e18-8e18-79f5549a8400",
              "title": "isPresent",
              "fullFile": "/Users/fatmakhan/Documents/vets-website/src/applications/gi/tests/utils/helpers.unit.spec.js",
              "file": "/src/applications/gi/tests/utils/helpers.unit.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": " value = 'SampleText' are turned into number false ",
                  "fullTitle": "GIBCT helpers: isPresent  value = 'SampleText' are turned into number false ",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var value = 'SampleText';\n(0, _chai.expect)((0, _helpers.isPresent)(value)).to.eq(true);",
                  "err": {},
                  "uuid": "fc0b9ec7-bab5-4808-be9d-5fcee24ac3ab",
                  "parentUUID": "e553c900-354a-4e18-8e18-79f5549a8400",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "fc0b9ec7-bab5-4808-be9d-5fcee24ac3ab"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "ddc6f6ac-f126-4efe-82c9-521089b1ffc6",
              "title": "searchCriteriaFromCoords",
              "fullFile": "/Users/fatmakhan/Documents/vets-website/src/applications/gi/tests/utils/helpers.unit.spec.js",
              "file": "/src/applications/gi/tests/utils/helpers.unit.spec.js",
              "beforeHooks": [
                {
                  "title": "\"before each\" hook for \"should return searchString and position based on coordinates\"",
                  "fullTitle": "GIBCT helpers: searchCriteriaFromCoords \"before each\" hook for \"should return searchString and position based on coordinates\"",
                  "timedOut": false,
                  "duration": 0,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "reverseGeocodeStub = _sinon.default.stub(mapboxClient, 'reverseGeocode').returns({\n  send: function send() {\n    return Promise.resolve({\n      body: {\n        features: [{\n          placeName: 'Kinney Creek Road, Gales Creek, Oregon 97117, United States'\n        }]\n      }\n    });\n  }\n});",
                  "err": {
                    "message": "ReferenceError: mapboxClient is not defined",
                    "estack": "ReferenceError: mapboxClient is not defined\n    at Context.<anonymous> (src/applications/gi/tests/utils/helpers.unit.spec.js:324:39)\n    at Hook.Runnable.run (node_modules/mocha-snapshots/src/index.js:19:22)\n    at processImmediate (internal/timers.js:461:21)\n    at process.callbackTrampoline (internal/async_hooks.js:129:14)",
                    "diff": null
                  },
                  "uuid": "a1c46dc1-62ac-4f53-bd34-89b69fbf668f",
                  "parentUUID": "ddc6f6ac-f126-4efe-82c9-521089b1ffc6",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [
                {
                  "title": "\"after each\" hook for \"should return searchString and position based on coordinates\"",
                  "fullTitle": "GIBCT helpers: searchCriteriaFromCoords \"after each\" hook for \"should return searchString and position based on coordinates\"",
                  "timedOut": false,
                  "duration": 0,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "reverseGeocodeStub.restore();",
                  "err": {
                    "message": "TypeError: Cannot read property 'restore' of undefined",
                    "estack": "TypeError: Cannot read property 'restore' of undefined\n    at Context.<anonymous> (src/applications/gi/tests/utils/helpers.unit.spec.js:339:26)\n    at Hook.Runnable.run (node_modules/mocha-snapshots/src/index.js:19:22)\n    at processImmediate (internal/timers.js:461:21)\n    at process.callbackTrampoline (internal/async_hooks.js:129:14)",
                    "diff": null
                  },
                  "uuid": "f1594ecb-43bd-4ebd-a29a-d6e384d58393",
                  "parentUUID": "ddc6f6ac-f126-4efe-82c9-521089b1ffc6",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "tests": [
                {
                  "title": "should return searchString and position based on coordinates",
                  "fullTitle": "GIBCT helpers: searchCriteriaFromCoords should return searchString and position based on coordinates",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); });",
                  "err": {},
                  "uuid": "0ada569c-2ef5-4695-b1c6-a5ea1462d948",
                  "parentUUID": "ddc6f6ac-f126-4efe-82c9-521089b1ffc6",
                  "isHook": false,
                  "skipped": true
                }
              ],
              "suites": [],
              "passes": [],
              "failures": [],
              "pending": [],
              "skipped": [
                "0ada569c-2ef5-4695-b1c6-a5ea1462d948"
              ],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "7bef1a6d-ed2f-4897-a1e6-00b9005a3fd5",
              "title": "convertRatingToStars",
              "fullFile": "/Users/fatmakhan/Documents/vets-website/src/applications/gi/tests/utils/helpers.unit.spec.js",
              "file": "/src/applications/gi/tests/utils/helpers.unit.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "converts .7 as a half star",
                  "fullTitle": "GIBCT helpers: convertRatingToStars converts .7 as a half star",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var _convertRatingToStars4 = (0, _helpers.convertRatingToStars)(4.7),\n    full = _convertRatingToStars4.full,\n    half = _convertRatingToStars4.half,\n    display = _convertRatingToStars4.display;\n(0, _chai.expect)(full).to.eq(4);\n(0, _chai.expect)(half).to.eq(true);\n(0, _chai.expect)(display).to.eq('4.7');",
                  "err": {},
                  "uuid": "e3a37daa-fb90-4bb4-9838-f302d82d7ad5",
                  "parentUUID": "7bef1a6d-ed2f-4897-a1e6-00b9005a3fd5",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "returns null for invalid ratings",
                  "fullTitle": "GIBCT helpers: convertRatingToStars returns null for invalid ratings",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)((0, _helpers.convertRatingToStars)('dogs')).to.eq(null);",
                  "err": {},
                  "uuid": "cba11f3f-6b9c-441b-9b44-64e3e5297819",
                  "parentUUID": "7bef1a6d-ed2f-4897-a1e6-00b9005a3fd5",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "converts string to number",
                  "fullTitle": "GIBCT helpers: convertRatingToStars converts string to number",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var _convertRatingToStars = (0, _helpers.convertRatingToStars)('2.24'),\n    full = _convertRatingToStars.full,\n    half = _convertRatingToStars.half,\n    display = _convertRatingToStars.display;\n(0, _chai.expect)(full).to.eq(2);\n(0, _chai.expect)(half).to.eq(false);\n(0, _chai.expect)(display).to.eq('2.2');",
                  "err": {},
                  "uuid": "c55ef63e-f5b8-492a-a97b-8feaaf8a5bca",
                  "parentUUID": "7bef1a6d-ed2f-4897-a1e6-00b9005a3fd5",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "converts < .3 as a whole number of stars",
                  "fullTitle": "GIBCT helpers: convertRatingToStars converts < .3 as a whole number of stars",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var _convertRatingToStars2 = (0, _helpers.convertRatingToStars)(2.24),\n    full = _convertRatingToStars2.full,\n    half = _convertRatingToStars2.half,\n    display = _convertRatingToStars2.display;\n(0, _chai.expect)(full).to.eq(2);\n(0, _chai.expect)(half).to.eq(false);\n(0, _chai.expect)(display).to.eq('2.2');",
                  "err": {},
                  "uuid": "67472b0c-8ac9-41a9-9577-6454c1fda4ad",
                  "parentUUID": "7bef1a6d-ed2f-4897-a1e6-00b9005a3fd5",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "converts more than .7 as a full star",
                  "fullTitle": "GIBCT helpers: convertRatingToStars converts more than .7 as a full star",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var _convertRatingToStars5 = (0, _helpers.convertRatingToStars)(3.75),\n    full = _convertRatingToStars5.full,\n    half = _convertRatingToStars5.half,\n    display = _convertRatingToStars5.display;\n(0, _chai.expect)(full).to.eq(4);\n(0, _chai.expect)(half).to.eq(false);\n(0, _chai.expect)(display).to.eq('3.8');",
                  "err": {},
                  "uuid": "abe3256b-aa44-4474-86b5-5d68a6494e57",
                  "parentUUID": "7bef1a6d-ed2f-4897-a1e6-00b9005a3fd5",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "converts .3 as a half star",
                  "fullTitle": "GIBCT helpers: convertRatingToStars converts .3 as a half star",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var _convertRatingToStars3 = (0, _helpers.convertRatingToStars)(4.29),\n    full = _convertRatingToStars3.full,\n    half = _convertRatingToStars3.half,\n    display = _convertRatingToStars3.display;\n(0, _chai.expect)(full).to.eq(4);\n(0, _chai.expect)(half).to.eq(true);\n(0, _chai.expect)(display).to.eq('4.3');",
                  "err": {},
                  "uuid": "c008ae66-6360-4416-ac75-c4a65f36226d",
                  "parentUUID": "7bef1a6d-ed2f-4897-a1e6-00b9005a3fd5",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "e3a37daa-fb90-4bb4-9838-f302d82d7ad5",
                "cba11f3f-6b9c-441b-9b44-64e3e5297819",
                "c55ef63e-f5b8-492a-a97b-8feaaf8a5bca",
                "67472b0c-8ac9-41a9-9577-6454c1fda4ad",
                "abe3256b-aa44-4474-86b5-5d68a6494e57",
                "c008ae66-6360-4416-ac75-c4a65f36226d"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "342a0877-4b6b-49f4-954c-ab8d9d94cec4",
              "title": "isCountryUSA",
              "fullFile": "/Users/fatmakhan/Documents/vets-website/src/applications/gi/tests/utils/helpers.unit.spec.js",
              "file": "/src/applications/gi/tests/utils/helpers.unit.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should recognize USA",
                  "fullTitle": "GIBCT helpers: isCountryUSA should recognize USA",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)((0, _helpers.isCountryUSA)('USA')).to.be.true;",
                  "err": {},
                  "uuid": "98ff43bb-e836-430a-a398-f2c470f7b248",
                  "parentUUID": "342a0877-4b6b-49f4-954c-ab8d9d94cec4",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should handle lowercase country names",
                  "fullTitle": "GIBCT helpers: isCountryUSA should handle lowercase country names",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)((0, _helpers.isCountryUSA)('usa')).to.be.true;",
                  "err": {},
                  "uuid": "866714de-60d3-4828-850d-152bbfe80371",
                  "parentUUID": "342a0877-4b6b-49f4-954c-ab8d9d94cec4",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should recognize non-USA",
                  "fullTitle": "GIBCT helpers: isCountryUSA should recognize non-USA",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)((0, _helpers.isCountryUSA)('CAN')).to.be.false;",
                  "err": {},
                  "uuid": "7a31925b-3216-46e0-83a7-c397fdd2e6e5",
                  "parentUUID": "342a0877-4b6b-49f4-954c-ab8d9d94cec4",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "98ff43bb-e836-430a-a398-f2c470f7b248",
                "866714de-60d3-4828-850d-152bbfe80371",
                "7a31925b-3216-46e0-83a7-c397fdd2e6e5"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "767e6ab6-267c-4cd8-8784-cea947ba85b4",
              "title": "formatNumber",
              "fullFile": "/Users/fatmakhan/Documents/vets-website/src/applications/gi/tests/utils/helpers.unit.spec.js",
              "file": "/src/applications/gi/tests/utils/helpers.unit.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should format numbers",
                  "fullTitle": "GIBCT helpers: formatNumber should format numbers",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)((0, _helpers.formatNumber)(1000)).to.equal('1,000');",
                  "err": {},
                  "uuid": "20ee69d8-c201-44fb-9b77-1051da9fc0b7",
                  "parentUUID": "767e6ab6-267c-4cd8-8784-cea947ba85b4",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "20ee69d8-c201-44fb-9b77-1051da9fc0b7"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "04a3f78d-6947-4433-9719-b9521cb77a00",
              "title": "isURL",
              "fullFile": "/Users/fatmakhan/Documents/vets-website/src/applications/gi/tests/utils/helpers.unit.spec.js",
              "file": "/src/applications/gi/tests/utils/helpers.unit.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Any null or undefined will return 'N/A' ",
                  "fullTitle": "GIBCT helpers: isURL Any null or undefined will return 'N/A' ",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var value = undefined;\n(0, _chai.expect)((0, _helpers.isURL)(value)).to.eq(false);",
                  "err": {},
                  "uuid": "85ce32c2-76f0-4fed-acde-32d9883d0520",
                  "parentUUID": "04a3f78d-6947-4433-9719-b9521cb77a00",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Any value will return the same value ",
                  "fullTitle": "GIBCT helpers: isURL Any value will return the same value ",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var value = 'https://test.com';\n(0, _chai.expect)((0, _helpers.isURL)(value)).to.eq(true);",
                  "err": {},
                  "uuid": "ec564da7-352d-44c5-8453-a5e65e7574ff",
                  "parentUUID": "04a3f78d-6947-4433-9719-b9521cb77a00",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "85ce32c2-76f0-4fed-acde-32d9883d0520",
                "ec564da7-352d-44c5-8453-a5e65e7574ff"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "d4977772-57bd-46a8-8e8c-8816a7fabb30",
              "title": "validateSearchTerm",
              "fullFile": "/Users/fatmakhan/Documents/vets-website/src/applications/gi/tests/utils/helpers.unit.spec.js",
              "file": "/src/applications/gi/tests/utils/helpers.unit.spec.js",
              "beforeHooks": [
                {
                  "title": "\"before each\" hook in \"validateSearchTerm\"",
                  "fullTitle": "GIBCT helpers: validateSearchTerm \"before each\" hook in \"validateSearchTerm\"",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "dispatchError = _sinon.default.spy();\nerror = null;\nfilters = {\n  school: true,\n  employer: true,\n  trainingProvider: true\n};",
                  "err": {},
                  "uuid": "7fbcfd43-5848-4286-9054-375c65ea1fff",
                  "parentUUID": "d4977772-57bd-46a8-8e8c-8816a7fabb30",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should not dispatchError when error is not null for location",
                  "fullTitle": "GIBCT helpers: validateSearchTerm should not dispatchError when error is not null for location",
                  "timedOut": false,
                  "duration": 0,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "var invalid = validateSearchTerm('94121', dispatchError, error = 'error', filters, 'location');\n(0, _chai.expect)(invalid).to.be.true;\n(0, _chai.expect)(dispatchError.calledWith('Please enter a valid postal code.')).to.be.false;",
                  "err": {
                    "message": "ReferenceError: validateSearchTerm is not defined",
                    "estack": "ReferenceError: validateSearchTerm is not defined\n    at Context.<anonymous> (src/applications/gi/tests/utils/helpers.unit.spec.js:431:23)\n    at Test.Runnable.run (node_modules/mocha-snapshots/src/index.js:19:22)\n    at Hook.Runnable.run (node_modules/mocha-snapshots/src/index.js:19:22)\n    at processImmediate (internal/timers.js:461:21)\n    at process.callbackTrampoline (internal/async_hooks.js:129:14)",
                    "diff": null
                  },
                  "uuid": "5209da9a-065f-48e0-8afe-9590e8c20063",
                  "parentUUID": "d4977772-57bd-46a8-8e8c-8816a7fabb30",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should not dispatchError when error is not null for name",
                  "fullTitle": "GIBCT helpers: validateSearchTerm should not dispatchError when error is not null for name",
                  "timedOut": false,
                  "duration": 0,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "var invalid = validateSearchTerm('new york', dispatchError, error = 'error', filters, 'name');\n(0, _chai.expect)(invalid).to.be.true;\n(0, _chai.expect)(dispatchError.calledWith('Please fill in a school, employer, or training provider')).to.be.false;",
                  "err": {
                    "message": "ReferenceError: validateSearchTerm is not defined",
                    "estack": "ReferenceError: validateSearchTerm is not defined\n    at Context.<anonymous> (src/applications/gi/tests/utils/helpers.unit.spec.js:416:23)\n    at Test.Runnable.run (node_modules/mocha-snapshots/src/index.js:19:22)\n    at Hook.Runnable.run (node_modules/mocha-snapshots/src/index.js:19:22)\n    at processImmediate (internal/timers.js:461:21)\n    at process.callbackTrampoline (internal/async_hooks.js:129:14)",
                    "diff": null
                  },
                  "uuid": "5b08edf7-0ebf-472e-b904-e2067abcac11",
                  "parentUUID": "d4977772-57bd-46a8-8e8c-8816a7fabb30",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should validate name search term",
                  "fullTitle": "GIBCT helpers: validateSearchTerm should validate name search term",
                  "timedOut": false,
                  "duration": 0,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "var valid = validateSearchTerm('Test', dispatchError, error, filters, 'name');\n(0, _chai.expect)(valid).to.be.true;\n(0, _chai.expect)(dispatchError.called).to.be.false;\nvar invalid = validateSearchTerm(' ', dispatchError, error, filters, 'name');\n(0, _chai.expect)(invalid).to.be.false;\n(0, _chai.expect)(dispatchError.calledWith('Please fill in a school, employer, or training provider.')).to.be.true;",
                  "err": {
                    "message": "ReferenceError: validateSearchTerm is not defined",
                    "estack": "ReferenceError: validateSearchTerm is not defined\n    at Context.<anonymous> (src/applications/gi/tests/utils/helpers.unit.spec.js:368:21)\n    at Test.Runnable.run (node_modules/mocha-snapshots/src/index.js:19:22)\n    at Hook.Runnable.run (node_modules/mocha-snapshots/src/index.js:19:22)\n    at processImmediate (internal/timers.js:461:21)\n    at process.callbackTrampoline (internal/async_hooks.js:129:14)",
                    "diff": null
                  },
                  "uuid": "d5c14c1f-901f-4612-8ecf-2ce26ac1e514",
                  "parentUUID": "d4977772-57bd-46a8-8e8c-8816a7fabb30",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should validate location search term",
                  "fullTitle": "GIBCT helpers: validateSearchTerm should validate location search term",
                  "timedOut": false,
                  "duration": 0,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "var valid = validateSearchTerm('12345', dispatchError, error, filters, 'location');\n(0, _chai.expect)(valid).to.be.true;\n(0, _chai.expect)(dispatchError.called).to.be.false;\nvar invalid = validateSearchTerm('123456', dispatchError, error, filters, 'location');\n(0, _chai.expect)(invalid).to.be.true;\n(0, _chai.expect)(dispatchError.calledWith('Please enter a valid postal code.')).to.be.true;",
                  "err": {
                    "message": "ReferenceError: validateSearchTerm is not defined",
                    "estack": "ReferenceError: validateSearchTerm is not defined\n    at Context.<anonymous> (src/applications/gi/tests/utils/helpers.unit.spec.js:394:21)\n    at Test.Runnable.run (node_modules/mocha-snapshots/src/index.js:19:22)\n    at Hook.Runnable.run (node_modules/mocha-snapshots/src/index.js:19:22)\n    at processImmediate (internal/timers.js:461:21)\n    at process.callbackTrampoline (internal/async_hooks.js:129:14)",
                    "diff": null
                  },
                  "uuid": "0bc2beb6-74a0-46ee-84d2-859eec9fb3ee",
                  "parentUUID": "d4977772-57bd-46a8-8e8c-8816a7fabb30",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should dispatchError search input is empty",
                  "fullTitle": "GIBCT helpers: validateSearchTerm should dispatchError search input is empty",
                  "timedOut": false,
                  "duration": 0,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "validateSearchTerm('', dispatchError, error, filters, 'location');\n(0, _chai.expect)(dispatchError.calledWith('Please fill in a city, state, or postal code.')).to.be.true;",
                  "err": {
                    "message": "ReferenceError: validateSearchTerm is not defined",
                    "estack": "ReferenceError: validateSearchTerm is not defined\n    at Context.<anonymous> (src/applications/gi/tests/utils/helpers.unit.spec.js:443:7)\n    at Test.Runnable.run (node_modules/mocha-snapshots/src/index.js:19:22)\n    at Hook.Runnable.run (node_modules/mocha-snapshots/src/index.js:19:22)\n    at processImmediate (internal/timers.js:461:21)\n    at process.callbackTrampoline (internal/async_hooks.js:129:14)",
                    "diff": null
                  },
                  "uuid": "cde6b9ac-282d-4609-9c74-3c826bc5b483",
                  "parentUUID": "d4977772-57bd-46a8-8e8c-8816a7fabb30",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [],
              "failures": [
                "5209da9a-065f-48e0-8afe-9590e8c20063",
                "5b08edf7-0ebf-472e-b904-e2067abcac11",
                "d5c14c1f-901f-4612-8ecf-2ce26ac1e514",
                "0bc2beb6-74a0-46ee-84d2-859eec9fb3ee",
                "cde6b9ac-282d-4609-9c74-3c826bc5b483"
              ],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "ec0c65f3-7bee-4358-85e7-92edd0616191",
              "title": "sortOptionsByStateName",
              "fullFile": "/Users/fatmakhan/Documents/vets-website/src/applications/gi/tests/utils/helpers.unit.spec.js",
              "file": "/src/applications/gi/tests/utils/helpers.unit.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should sort an array of objects by label",
                  "fullTitle": "GIBCT helpers: sortOptionsByStateName should sort an array of objects by label",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var data = [{\n  value: 'AK',\n  label: 'Alaska'\n}, {\n  value: 'AL',\n  label: 'Alabama'\n}, {\n  value: 'AR',\n  label: 'Arkansas'\n}, {\n  value: 'AZ',\n  label: 'Arizona'\n}, {\n  value: 'CA',\n  label: 'California'\n}];\nvar sortedData = [{\n  value: 'AL',\n  label: 'Alabama'\n}, {\n  value: 'AK',\n  label: 'Alaska'\n}, {\n  value: 'AZ',\n  label: 'Arizona'\n}, {\n  value: 'AR',\n  label: 'Arkansas'\n}, {\n  value: 'CA',\n  label: 'California'\n}];\n(0, _chai.expect)(data.sort(_helpers.sortOptionsByStateName)).to.deep.equal(sortedData);\nvar junkData = [{\n  value: 'AL',\n  label: 'Alabama'\n}];\n(0, _chai.expect)((0, _helpers.sortOptionsByStateName)(data, junkData)).to.deep.equal(0);",
                  "err": {},
                  "uuid": "bc4a66ec-26b0-4b73-aae6-6f0c8ef1be13",
                  "parentUUID": "ec0c65f3-7bee-4358-85e7-92edd0616191",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "bc4a66ec-26b0-4b73-aae6-6f0c8ef1be13"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "dea6ccbf-d8c9-43a0-ac62-4beab26ff256",
              "title": "naIfNull",
              "fullFile": "/Users/fatmakhan/Documents/vets-website/src/applications/gi/tests/utils/helpers.unit.spec.js",
              "file": "/src/applications/gi/tests/utils/helpers.unit.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Any value will return the same value ",
                  "fullTitle": "GIBCT helpers: naIfNull Any value will return the same value ",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var value = true;\n(0, _chai.expect)((0, _helpers.naIfNull)(value)).to.eq(true);",
                  "err": {},
                  "uuid": "5f70fcf9-16a0-44a1-b3f3-b4ff16ebbc5d",
                  "parentUUID": "dea6ccbf-d8c9-43a0-ac62-4beab26ff256",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Any null or undefined will return 'N/A' ",
                  "fullTitle": "GIBCT helpers: naIfNull Any null or undefined will return 'N/A' ",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var value = undefined;\n(0, _chai.expect)((0, _helpers.naIfNull)(value)).to.eq('N/A');",
                  "err": {},
                  "uuid": "25196936-6e9c-4382-bb2b-14c8ba519b6e",
                  "parentUUID": "dea6ccbf-d8c9-43a0-ac62-4beab26ff256",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "5f70fcf9-16a0-44a1-b3f3-b4ff16ebbc5d",
                "25196936-6e9c-4382-bb2b-14c8ba519b6e"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "d257e0eb-6eb2-4f2a-a876-f4c8cb81b684",
              "title": "scrollToFocusedElement",
              "fullFile": "/Users/fatmakhan/Documents/vets-website/src/applications/gi/tests/utils/helpers.unit.spec.js",
              "file": "/src/applications/gi/tests/utils/helpers.unit.spec.js",
              "beforeHooks": [
                {
                  "title": "\"before each\" hook in \"scrollToFocusedElement\"",
                  "fullTitle": "GIBCT helpers: scrollToFocusedElement \"before each\" hook in \"scrollToFocusedElement\"",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "scrollToStub = _sinon.default.stub().callsFake(function () {});\nglobal.window.scrollTo = scrollToStub;",
                  "err": {},
                  "uuid": "71b6ec84-3785-4824-8846-4389b2819226",
                  "parentUUID": "d257e0eb-6eb2-4f2a-a876-f4c8cb81b684",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [],
              "tests": [
                {
                  "title": "scrolls to focused element if it is below the compare drawer",
                  "fullTitle": "GIBCT helpers: scrollToFocusedElement scrolls to focused element if it is below the compare drawer",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var activeElement = document.createElement('div');\nactiveElement.id = 'testElement';\ndocument.body.appendChild(activeElement);\nactiveElement.focus();\nvar compareDrawer = document.createElement('div');\ncompareDrawer.id = 'compare-drawer';\ncompareDrawer.style.height = '100px';\ndocument.body.appendChild(compareDrawer);\nvar getScrollOptions = function getScrollOptions() {\n  return {};\n};\n(0, _helpers.scrollToFocusedElement)(getScrollOptions);\n(0, _chai.expect)(scrollToStub.calledOnce).to.be.false;\n(0, _chai.expect)(scrollToStub.calledWith(0, activeElement.offsetTop)).to.be.false;",
                  "err": {},
                  "uuid": "52eb35d3-7c97-4d5a-b0ca-b5af3f6517cb",
                  "parentUUID": "d257e0eb-6eb2-4f2a-a876-f4c8cb81b684",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "does not scroll if focused element is above the compare drawer",
                  "fullTitle": "GIBCT helpers: scrollToFocusedElement does not scroll if focused element is above the compare drawer",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var activeElement = document.createElement('div');\nactiveElement.id = 'testElement';\ndocument.body.appendChild(activeElement);\nactiveElement.focus();\nvar compareDrawer = document.createElement('div');\ncompareDrawer.id = 'compare-drawer';\ncompareDrawer.style.height = '100px';\ndocument.body.appendChild(compareDrawer);\nvar getScrollOptions = function getScrollOptions() {\n  return {};\n};\nglobal.window.scrollTo(0, 200);\n(0, _helpers.scrollToFocusedElement)(getScrollOptions);\n(0, _chai.expect)(scrollToStub.called).to.be.true;",
                  "err": {},
                  "uuid": "f619b664-d332-42c5-ab44-8e6b9b5eec6e",
                  "parentUUID": "d257e0eb-6eb2-4f2a-a876-f4c8cb81b684",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "52eb35d3-7c97-4d5a-b0ca-b5af3f6517cb",
                "f619b664-d332-42c5-ab44-8e6b9b5eec6e"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 3,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "086dbad1-fe1b-4f14-bdc4-08c0a196f35c",
              "title": "handleScrollOnInputFocus",
              "fullFile": "/Users/fatmakhan/Documents/vets-website/src/applications/gi/tests/utils/helpers.unit.spec.js",
              "file": "/src/applications/gi/tests/utils/helpers.unit.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should scrollIntoView",
                  "fullTitle": "GIBCT helpers: handleScrollOnInputFocus should scrollIntoView",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "window.innerWidth = 480;\ndocument.body.appendChild(mainDiv);\n(0, _helpers.handleScrollOnInputFocus)('test');\n(0, _chai.expect)(scrolledIntoViewIsCalled).to.be.true;",
                  "err": {},
                  "uuid": "e2de1037-8f30-4b35-88c2-2cac94783ce2",
                  "parentUUID": "086dbad1-fe1b-4f14-bdc4-08c0a196f35c",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "e2de1037-8f30-4b35-88c2-2cac94783ce2"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "3e6eca35-236c-4175-bf7d-f74a4b5f087a",
              "title": "locationInfo",
              "fullFile": "/Users/fatmakhan/Documents/vets-website/src/applications/gi/tests/utils/helpers.unit.spec.js",
              "file": "/src/applications/gi/tests/utils/helpers.unit.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": " Not City are turned into number false ",
                  "fullTitle": "GIBCT helpers: locationInfo  Not City are turned into number false ",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var city = undefined;\nvar state = undefined;\nvar country = 'CA';\n(0, _chai.expect)((0, _helpers.locationInfo)(city, state, country)).to.eq('CA');",
                  "err": {},
                  "uuid": "ea9b3195-c888-4de6-abf5-bcf5549fdb45",
                  "parentUUID": "3e6eca35-236c-4175-bf7d-f74a4b5f087a",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": " Not City are turned into number false ",
                  "fullTitle": "GIBCT helpers: locationInfo  Not City are turned into number false ",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var city = undefined;\nvar state = 'TX';\nvar country = 'USA';\n(0, _chai.expect)((0, _helpers.locationInfo)(city, state, country)).to.eq('TX');",
                  "err": {},
                  "uuid": "60469ab1-333b-4ad4-adc5-4f9e0b6ff1d2",
                  "parentUUID": "3e6eca35-236c-4175-bf7d-f74a4b5f087a",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": " value = 'SampleText' are turned into number false ",
                  "fullTitle": "GIBCT helpers: locationInfo  value = 'SampleText' are turned into number false ",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var city = 'Austin';\nvar state = 'TX';\nvar country = 'USA';\n(0, _chai.expect)((0, _helpers.locationInfo)(city, state, country)).to.eq('Austin, TX');",
                  "err": {},
                  "uuid": "534ee3df-491a-4d6b-a909-c815f05bdcfb",
                  "parentUUID": "3e6eca35-236c-4175-bf7d-f74a4b5f087a",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": " Not State are turned into number false ",
                  "fullTitle": "GIBCT helpers: locationInfo  Not State are turned into number false ",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var city = 'Austin';\nvar state = undefined;\nvar country = 'USA';\n(0, _chai.expect)((0, _helpers.locationInfo)(city, state, country)).to.eq('Austin');",
                  "err": {},
                  "uuid": "9691417d-861f-4c4d-99f9-d922b14a1bc7",
                  "parentUUID": "3e6eca35-236c-4175-bf7d-f74a4b5f087a",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": " Not City are turned into number false ",
                  "fullTitle": "GIBCT helpers: locationInfo  Not City are turned into number false ",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var city = 'Rome';\nvar state = 'Italy';\nvar country = 'CA';\n(0, _chai.expect)((0, _helpers.locationInfo)(city, state, country)).to.eq('Rome, CA');",
                  "err": {},
                  "uuid": "e2ebd4c1-e393-4eee-9dd9-c9c62473db9a",
                  "parentUUID": "3e6eca35-236c-4175-bf7d-f74a4b5f087a",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "ea9b3195-c888-4de6-abf5-bcf5549fdb45",
                "60469ab1-333b-4ad4-adc5-4f9e0b6ff1d2",
                "534ee3df-491a-4d6b-a909-c815f05bdcfb",
                "9691417d-861f-4c4d-99f9-d922b14a1bc7",
                "e2ebd4c1-e393-4eee-9dd9-c9c62473db9a"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "55a5b13d-8561-4b8e-ab4d-9cc100349b63",
              "title": "rubyifyKeys",
              "fullFile": "/Users/fatmakhan/Documents/vets-website/src/applications/gi/tests/utils/helpers.unit.spec.js",
              "file": "/src/applications/gi/tests/utils/helpers.unit.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should properly snake-case keys",
                  "fullTitle": "GIBCT helpers: rubyifyKeys should properly snake-case keys",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var data = {\n  testKey: ''\n};\n(0, _chai.expect)((0, _helpers.rubyifyKeys)(data)).to.have.key('test_key');",
                  "err": {},
                  "uuid": "bb7bea9b-02b6-425f-a4bc-96af5c6e45d9",
                  "parentUUID": "55a5b13d-8561-4b8e-ab4d-9cc100349b63",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "bb7bea9b-02b6-425f-a4bc-96af5c6e45d9"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "2fc708e2-70c3-4167-86bd-3e76b0b8f4a4",
              "title": "phoneInfo",
              "fullFile": "/Users/fatmakhan/Documents/vets-website/src/applications/gi/tests/utils/helpers.unit.spec.js",
              "file": "/src/applications/gi/tests/utils/helpers.unit.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": " areaCode = 123, phoneNumber = 4567890 are turned into number 'Florida' ",
                  "fullTitle": "GIBCT helpers: phoneInfo  areaCode = 123, phoneNumber = 4567890 are turned into number 'Florida' ",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var areaCode = 123;\nvar phoneNumber = 4567890;\n(0, _chai.expect)((0, _helpers.phoneInfo)(areaCode, phoneNumber)).to.eq('123-4567890');",
                  "err": {},
                  "uuid": "9294bb20-70c9-4110-9551-044d36de459d",
                  "parentUUID": "2fc708e2-70c3-4167-86bd-3e76b0b8f4a4",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "9294bb20-70c9-4110-9551-044d36de459d"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "7a86d310-a6f5-4987-bafe-46dee1291d21",
              "title": "addAllOption",
              "fullFile": "/Users/fatmakhan/Documents/vets-website/src/applications/gi/tests/utils/helpers.unit.spec.js",
              "file": "/src/applications/gi/tests/utils/helpers.unit.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should add ALL option",
                  "fullTitle": "GIBCT helpers: addAllOption should add ALL option",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var options = [{\n  label: 'TEST',\n  value: 'TEST'\n}];\n(0, _chai.expect)((0, _helpers.addAllOption)(options).length).to.equal(2);\n(0, _chai.expect)((0, _helpers.addAllOption)(options)[0].optionLabel).to.equal('All');",
                  "err": {},
                  "uuid": "a5124c16-dc9e-4880-8884-b298f7c3c38c",
                  "parentUUID": "7a86d310-a6f5-4987-bafe-46dee1291d21",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "a5124c16-dc9e-4880-8884-b298f7c3c38c"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "75b717f2-f8f2-460f-9e57-dba2e58279e7",
              "title": "getStateNameForCode",
              "fullFile": "/Users/fatmakhan/Documents/vets-website/src/applications/gi/tests/utils/helpers.unit.spec.js",
              "file": "/src/applications/gi/tests/utils/helpers.unit.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "field = 'FL' is turned into string 'Florida' ",
                  "fullTitle": "GIBCT helpers: getStateNameForCode field = 'FL' is turned into string 'Florida' ",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var field = 'n/a';\n(0, _chai.expect)((0, _helpers.getStateNameForCode)(field)).to.eq('N/A');",
                  "err": {},
                  "uuid": "df98017a-0b07-4552-a9f0-03c59fe64c6e",
                  "parentUUID": "75b717f2-f8f2-460f-9e57-dba2e58279e7",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "field = 'FL' is turned into string 'Florida' ",
                  "fullTitle": "GIBCT helpers: getStateNameForCode field = 'FL' is turned into string 'Florida' ",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var field = 'FL';\n(0, _chai.expect)((0, _helpers.getStateNameForCode)(field)).to.eq('Florida');",
                  "err": {},
                  "uuid": "5b9225c6-9cf6-4819-85dc-d739c6e6ea38",
                  "parentUUID": "75b717f2-f8f2-460f-9e57-dba2e58279e7",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "df98017a-0b07-4552-a9f0-03c59fe64c6e",
                "5b9225c6-9cf6-4819-85dc-d739c6e6ea38"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "ef21ff4d-07f9-4398-9dba-d13aeffd3966",
              "title": "schoolSize",
              "fullFile": "/Users/fatmakhan/Documents/vets-website/src/applications/gi/tests/utils/helpers.unit.spec.js",
              "file": "/src/applications/gi/tests/utils/helpers.unit.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "enrollment = 1480,000 is turned into string 'Large' ",
                  "fullTitle": "GIBCT helpers: schoolSize enrollment = 1480,000 is turned into string 'Large' ",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var enrollment = 1480000;\n(0, _chai.expect)((0, _helpers.schoolSize)(enrollment)).to.eq('Large');",
                  "err": {},
                  "uuid": "e708ea1b-d10c-4b52-b0b2-36b62d04a57a",
                  "parentUUID": "ef21ff4d-07f9-4398-9dba-d13aeffd3966",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": " '1abc8' is turned into string 'Unknown' ",
                  "fullTitle": "GIBCT helpers: schoolSize  '1abc8' is turned into string 'Unknown' ",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var enrollment = '1abc8';\n(0, _chai.expect)((0, _helpers.schoolSize)(enrollment)).to.eq('Unknown');",
                  "err": {},
                  "uuid": "9c11c095-efd0-452e-84a2-fe5921b0e84d",
                  "parentUUID": "ef21ff4d-07f9-4398-9dba-d13aeffd3966",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "enrollment = 1,980 is turned into string 'Small' ",
                  "fullTitle": "GIBCT helpers: schoolSize enrollment = 1,980 is turned into string 'Small' ",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var enrollment = 1980;\n(0, _chai.expect)((0, _helpers.schoolSize)(enrollment)).to.eq('Small');",
                  "err": {},
                  "uuid": "0b0f6e04-718e-4dd0-910d-eabba9216ef9",
                  "parentUUID": "ef21ff4d-07f9-4398-9dba-d13aeffd3966",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "enrollment = 14,800 is turned into string 'Medium' ",
                  "fullTitle": "GIBCT helpers: schoolSize enrollment = 14,800 is turned into string 'Medium' ",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var enrollment = 14800;\n(0, _chai.expect)((0, _helpers.schoolSize)(enrollment)).to.eq('Medium');",
                  "err": {},
                  "uuid": "eaa474fe-d7de-432f-908c-1bcf3da2f83a",
                  "parentUUID": "ef21ff4d-07f9-4398-9dba-d13aeffd3966",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "null is turned into string 'Unknown' ",
                  "fullTitle": "GIBCT helpers: schoolSize null is turned into string 'Unknown' ",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var enrollment = null;\n(0, _chai.expect)((0, _helpers.schoolSize)(enrollment)).to.eq('Unknown');",
                  "err": {},
                  "uuid": "792ee4b9-fd59-47c0-a3a7-0a830cd57eb2",
                  "parentUUID": "ef21ff4d-07f9-4398-9dba-d13aeffd3966",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "e708ea1b-d10c-4b52-b0b2-36b62d04a57a",
                "9c11c095-efd0-452e-84a2-fe5921b0e84d",
                "0b0f6e04-718e-4dd0-910d-eabba9216ef9",
                "eaa474fe-d7de-432f-908c-1bcf3da2f83a",
                "792ee4b9-fd59-47c0-a3a7-0a830cd57eb2"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "98211f2a-af84-44b3-bccc-db439d1cd43b",
              "title": "formatCurrency",
              "fullFile": "/Users/fatmakhan/Documents/vets-website/src/applications/gi/tests/utils/helpers.unit.spec.js",
              "file": "/src/applications/gi/tests/utils/helpers.unit.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should round currency",
                  "fullTitle": "GIBCT helpers: formatCurrency should round currency",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)((0, _helpers.formatCurrency)(1000.5)).to.equal('$1,001');",
                  "err": {},
                  "uuid": "e4b36976-c6a1-4c47-a44a-d5f13256304f",
                  "parentUUID": "98211f2a-af84-44b3-bccc-db439d1cd43b",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should format currency",
                  "fullTitle": "GIBCT helpers: formatCurrency should format currency",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)((0, _helpers.formatCurrency)(1000)).to.equal('$1,000');",
                  "err": {},
                  "uuid": "44b7edaa-547f-45ee-a786-c94f688888fc",
                  "parentUUID": "98211f2a-af84-44b3-bccc-db439d1cd43b",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "e4b36976-c6a1-4c47-a44a-d5f13256304f",
                "44b7edaa-547f-45ee-a786-c94f688888fc"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "47b231c2-7746-4e95-a487-06909a15400a",
              "title": "handleInputFocusWithPotentialOverLap",
              "fullFile": "/Users/fatmakhan/Documents/vets-website/src/applications/gi/tests/utils/helpers.unit.spec.js",
              "file": "/src/applications/gi/tests/utils/helpers.unit.spec.js",
              "beforeHooks": [
                {
                  "title": "\"before each\" hook in \"handleInputFocusWithPotentialOverLap\"",
                  "fullTitle": "GIBCT helpers: handleInputFocusWithPotentialOverLap \"before each\" hook in \"handleInputFocusWithPotentialOverLap\"",
                  "timedOut": false,
                  "duration": 1,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "// const isMobileViewStub = sinon.stub().returns(true);\nscrollIntoViewStub = _sinon.default.stub();\nscrollByStub = _sinon.default.stub();\ngetElementByIdStub = _sinon.default.stub(document, 'getElementById');\ngetElementByIdStub.returns({\n  scrollIntoView: scrollIntoViewStub,\n  getBoundingClientRect: _sinon.default.stub().returns({\n    right: 10,\n    left: 0,\n    bottom: 10,\n    top: 0\n  }),\n  scrollBy: scrollByStub\n});",
                  "err": {},
                  "uuid": "e8b53a43-8497-4be3-938d-23f8ab3743ff",
                  "parentUUID": "47b231c2-7746-4e95-a487-06909a15400a",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [
                {
                  "title": "\"after each\" hook in \"handleInputFocusWithPotentialOverLap\"",
                  "fullTitle": "GIBCT helpers: handleInputFocusWithPotentialOverLap \"after each\" hook in \"handleInputFocusWithPotentialOverLap\"",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "getElementByIdStub.restore();",
                  "err": {},
                  "uuid": "e6e19867-843d-4c7a-b576-4b36de4123df",
                  "parentUUID": "47b231c2-7746-4e95-a487-06909a15400a",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "tests": [
                {
                  "title": "should handle input focus with potential overlap",
                  "fullTitle": "GIBCT helpers: handleInputFocusWithPotentialOverLap should handle input focus with potential overlap",
                  "timedOut": false,
                  "duration": 0,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "handleInputFocusWithPotentialOverLap('field1', 'field2', 'scrollableField');\n(0, _chai.expect)(scrollIntoViewStub.called).to.be.false;\n(0, _chai.expect)(scrollByStub.called).to.be.false;",
                  "err": {
                    "message": "ReferenceError: handleInputFocusWithPotentialOverLap is not defined",
                    "estack": "ReferenceError: handleInputFocusWithPotentialOverLap is not defined\n    at Context.<anonymous> (src/applications/gi/tests/utils/helpers.unit.spec.js:479:7)\n    at Test.Runnable.run (node_modules/mocha-snapshots/src/index.js:19:22)\n    at Hook.Runnable.run (node_modules/mocha-snapshots/src/index.js:19:22)\n    at processImmediate (internal/timers.js:461:21)\n    at process.callbackTrampoline (internal/async_hooks.js:129:14)",
                    "diff": null
                  },
                  "uuid": "156496c6-1865-4b6b-8c95-4b7be51a44c5",
                  "parentUUID": "47b231c2-7746-4e95-a487-06909a15400a",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [],
              "failures": [
                "156496c6-1865-4b6b-8c95-4b7be51a44c5"
              ],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 10000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "undefined_2024-02-16T164012607Z",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "min",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "id": "default",
        "consoleReporter": "min",
        "reportDir": "mocha/results",
        "reportFilename": "undefined_2024-02-16T164012607Z",
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}