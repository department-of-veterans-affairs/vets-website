From 16c42bdcb30bdfe06c10a17ae1821f99e83e8249 Mon Sep 17 00:00:00 2001
From: Tim Wright <timwright12@gmail.com>
Date: Thu, 29 Apr 2021 12:06:35 -0400
Subject: [PATCH] Added conditionals around tel links that were throwing a11y
 errors (#16976)

* Added conditionals around tel links that were throwing a11y errors
* Added unit tests
---
 .../includes/facilityListing.drupal.liquid    |  2 +
 .../health_care_local_facility.drupal.liquid  |  2 +
 .../health_care_local_facility.unit.spec.js   | 37 +++++++++
 ...th_care_region_locations_page.unit.spec.js | 81 +++++++++++++++++++
 4 files changed, 122 insertions(+)
 create mode 100644 src/site/layouts/tests/vamc/health_care_region_locations_page.unit.spec.js

diff --git a/src/site/includes/facilityListing.drupal.liquid b/src/site/includes/facilityListing.drupal.liquid
index e0f2420b50..fdac44c7b2 100644
--- a/src/site/includes/facilityListing.drupal.liquid
+++ b/src/site/includes/facilityListing.drupal.liquid
@@ -26,10 +26,12 @@
       </div>
     </div>
     <div class="vads-u-margin-bottom--0">
+      {% if entity.fieldPhoneNumber %}
       <div class="main-phone vads-u-margin-bottom--1">
         <strong>Main phone:</strong>
         <a href="tel:{{ entity.fieldPhoneNumber }}">{{ entity.fieldPhoneNumber }}</a>
       </div>
+      {% endif %}
       {% if entity.fieldMentalHealthPhone %}
         <div class="mental-health-clinic-phone">
           <strong>Mental health clinic:</strong>
diff --git a/src/site/layouts/health_care_local_facility.drupal.liquid b/src/site/layouts/health_care_local_facility.drupal.liquid
index 57e7614d16..7954e58609 100644
--- a/src/site/layouts/health_care_local_facility.drupal.liquid
+++ b/src/site/layouts/health_care_local_facility.drupal.liquid
@@ -66,11 +66,13 @@
                       Phone numbers
                     </h3>
                     <div class="vads-u-margin-bottom--0">
+                      {% if fieldPhoneNumber %}
                       <div class="main-phone vads-u-margin-bottom--1">
                         <strong>Main phone:
                         </strong><a
                           href="tel:{{ fieldPhoneNumber }}">{{ fieldPhoneNumber }}</a>
                       </div>
+                      {% endif %}
                       {% if fieldMentalHealthPhone %}
                         <div class="mental-health-clinic-phone"><strong>Mental
                             health clinic:
diff --git a/src/site/layouts/tests/vamc/health_care_local_facility.unit.spec.js b/src/site/layouts/tests/vamc/health_care_local_facility.unit.spec.js
index 948f5856cd..dedc0eb4e2 100644
--- a/src/site/layouts/tests/vamc/health_care_local_facility.unit.spec.js
+++ b/src/site/layouts/tests/vamc/health_care_local_facility.unit.spec.js
@@ -24,5 +24,42 @@ describe('health_care_local_facility', () => {
     it('should not render .mental-health-clinic-phone', () => {
       expect(container.querySelector('.mental-health-clinic-phone')).to.be.null;
     });
+
+    // Default state, main phone number is in dataset
+    it('should render main phone number', async () => {
+      container = await renderHTML(layoutPath, data, 'fieldPhoneNumber');
+
+      expect(container.querySelector('.main-phone a').textContent).to.equal(
+        data.fieldPhoneNumber,
+      );
+    });
+
+    // Test return if the fieldPhoneNumber string is empty
+    it('should not render .main-phone if string is empty', async () => {
+      // Clear fieldPhoneNumber to mimic an entry error
+      const testDataEmptyPhone = { ...data, fieldPhoneNumber: '' };
+      container = await renderHTML(
+        layoutPath,
+        testDataEmptyPhone,
+        'fieldPhoneNumberEmpty',
+      );
+
+      // Element should not render in the DOM
+      expect(container.querySelector('.main-phone')).to.be.null;
+    });
+
+    // Test return if the fieldPhoneNumber is null
+    it('should not render .main-phone if null', async () => {
+      // Set fieldPhoneNumber to null value
+      const testDataNullPhone = { ...data, fieldPhoneNumber: null };
+      container = await renderHTML(
+        layoutPath,
+        testDataNullPhone,
+        'fieldPhoneNumberNull',
+      );
+
+      // Element should not render in the DOM
+      expect(container.querySelector('.main-phone')).to.be.null;
+    });
   });
 });
diff --git a/src/site/layouts/tests/vamc/health_care_region_locations_page.unit.spec.js b/src/site/layouts/tests/vamc/health_care_region_locations_page.unit.spec.js
new file mode 100644
index 0000000000..e60ff8b225
--- /dev/null
+++ b/src/site/layouts/tests/vamc/health_care_region_locations_page.unit.spec.js
@@ -0,0 +1,81 @@
+import { expect } from 'chai';
+import { parseFixture, renderHTML } from '~/site/tests/support';
+import axeCheck from '~/site/tests/support/axe';
+
+const layoutPath = 'src/site/layouts/health_care_region_page.drupal.liquid';
+
+describe('health_care_region_locations_page', () => {
+  describe('PhoneNumbers', () => {
+    let container;
+    const data = parseFixture(
+      'src/site/layouts/tests/vamc/fixtures/health_care_region_page.json',
+    );
+
+    before(async () => {
+      container = await renderHTML(layoutPath, data);
+    });
+
+    it('reports no axe violations', async () => {
+      const violations = await axeCheck(container);
+      expect(violations.length).to.equal(0);
+    });
+
+    it('should render main phone number', async () => {
+      container = await renderHTML(layoutPath, data, 'fieldPhoneNumber');
+
+      expect(container.querySelector('.main-phone a').textContent).to.equal(
+        data.mainFacilities.entities[0].fieldPhoneNumber,
+      );
+    });
+
+    // Test return if the fieldPhoneNumber string is empty
+    it('should not render .main-phone if string is empty', async () => {
+      const testDataEmptyPhone = {
+        ...data,
+        mainFacilities: {
+          ...data.mainFacilities,
+          entities: [
+            {
+              ...data.mainFacilities.entities[0],
+              fieldPhoneNumber: '',
+            },
+          ],
+        },
+      };
+
+      container = await renderHTML(
+        layoutPath,
+        testDataEmptyPhone,
+        'fieldPhoneNumberEmpty',
+      );
+
+      // Element should not render in the DOM
+      expect(container.querySelector('.main-phone')).to.be.null;
+    });
+
+    // Test return if the fieldPhoneNumber is null
+    it('should not render .main-phone if null', async () => {
+      const testDataNullPhone = {
+        ...data,
+        mainFacilities: {
+          ...data.mainFacilities,
+          entities: [
+            {
+              ...data.mainFacilities.entities[0],
+              fieldPhoneNumber: null,
+            },
+          ],
+        },
+      };
+
+      container = await renderHTML(
+        layoutPath,
+        testDataNullPhone,
+        'fieldPhoneNumberNull',
+      );
+
+      // Element should not render in the DOM
+      expect(container.querySelector('.main-phone')).to.be.null;
+    });
+  });
+});
-- 
2.30.0

