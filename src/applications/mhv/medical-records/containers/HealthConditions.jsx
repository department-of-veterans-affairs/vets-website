import React, { useEffect } from 'react';
import { useDispatch, useSelector } from 'react-redux';
import moment from 'moment';
import { generatePdf } from '@department-of-veterans-affairs/platform-pdf/exports';
import { focusElement } from '@department-of-veterans-affairs/platform-utilities/ui';
import FEATURE_FLAG_NAMES from '@department-of-veterans-affairs/platform-utilities/featureFlagNames';
import RecordList from '../components/RecordList/RecordList';
import { setBreadcrumbs } from '../actions/breadcrumbs';
import { getConditionsList } from '../actions/conditions';
import { recordType, pageTitles } from '../util/constants';
import PrintDownload from '../components/shared/PrintDownload';
import { processList } from '../util/helpers';
import { updatePageTitle } from '../../shared/util/helpers';

const HealthConditions = () => {
  const conditions = useSelector(state => state.mr.conditions.conditionsList);
  const allowTxtDownloads = useSelector(
    state =>
      state.featureToggles[
        FEATURE_FLAG_NAMES.mhvMedicalRecordsAllowTxtDownloads
      ],
  );
  // const conditions = []; // used to test use cases with no vitals on record
  const dispatch = useDispatch();
  useEffect(() => {
    dispatch(getConditionsList());
  }, []);

  useEffect(() => {
    dispatch(
      setBreadcrumbs([
        { url: '/my-health/medical-records/', label: 'Medical records' },
      ]),
    );
    focusElement(document.querySelector('h1'));
    updatePageTitle(pageTitles.HEALTH_CONDITIONS_PAGE_TITLE);
  }, []);

  const generateHealthConditions = async () => {
    const pdfData = {
      headerLeft: 'Roberts, Jesse',
      headerRight: 'Date of birth: January 1, 1970',
      footerLeft: `Report generated by My HealtheVet and VA on ${moment().format(
        'LL',
      )}`,
      footerRight: 'Page %PAGE_NUMBER% of %TOTAL_PAGES%',
      headerBanner: [
        {
          weight: 'normal',
          text:
            "If you're ever in crisis and need to talk to someone right away, call the Veterans Crisis line at ",
        },
        {
          weight: 'bold',
          text: '988',
        },
        {
          weight: 'normal',
          text: '. Then select 1.',
        },
      ],
      title: 'Health Conditions',
      subject: 'VA Medical Record',
      preface:
        'Your VA Health Condition list may not be complete. If you have any questions about your information, visit the FAQs or contact your VA Health care team.',
      results: {
        items: [],
      },
    };

    conditions.forEach(item => {
      pdfData.results.items.push({
        header: item.name,
        items: [
          {
            title: 'Date',
            value: moment(item.date).format('MMMM Do YYYY') || ' ',
            inline: true,
          },
          {
            title: 'Provider',
            value: item.provider || ' ',
            inline: true,
          },
          {
            title: 'Provider Notes',
            value: item.comments.length
              ? processList(item.comments)
              : 'none noted',
            inline: !item.comments.length,
          },
          {
            title: 'Status of health condition',
            value: item.active ? 'active' : 'inactive',
            inline: true,
          },
          {
            title: 'Location',
            value: item.facility || ' ',
            inline: true,
          },
          {
            title: 'SNOMED Clinical Term',
            value: item.name || ' ',
            inline: true,
          },
        ],
      });
    });

    try {
      await generatePdf('medicalRecords', 'health_conditions_report', pdfData);
    } catch (error) {
      // Error logging/presentation goes here...
    }
  };

  const download = () => {
    generateHealthConditions();
  };

  const content = () => {
    if (conditions?.length > 0) {
      return (
        <RecordList records={conditions} type={recordType.HEALTH_CONDITIONS} />
      );
    }
    if (conditions?.length === 0) {
      return (
        <div className="vads-u-margin-bottom--3">
          <va-alert background-only status="info">
            You donâ€™t have any records in Vitals
          </va-alert>
        </div>
      );
    }
    return (
      <va-loading-indicator
        message="Loading..."
        setFocus
        data-testid="loading-indicator"
        class="loading-indicator"
      />
    );
  };

  return (
    <div className="vads-l-col--12 medium-screen:vads-l-col--8">
      <h1 className="vads-u-margin--0">Health conditions</h1>
      <p className="vads-u-margin-top--1 vads-u-margin-bottom--3">
        Health condition records are available <strong>36 hours</strong> after
        your providers enter them.
      </p>
      <PrintDownload
        list
        download={download}
        allowTxtDownloads={allowTxtDownloads}
      />
      {content()}
    </div>
  );
};

export default HealthConditions;
