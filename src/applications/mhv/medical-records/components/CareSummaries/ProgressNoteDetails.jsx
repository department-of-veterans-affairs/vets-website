import React from 'react';
import PropTypes from 'prop-types';
import { useSelector } from 'react-redux';
import { generatePdf } from '@department-of-veterans-affairs/platform-pdf/exports';
import moment from 'moment';
import PrintHeader from '../shared/PrintHeader';
import PrintDownload from '../shared/PrintDownload';
import { nameFormat, dateFormat, sendErrorToSentry } from '../../util/helpers';

const ProgressNoteDetails = props => {
  const { record } = props;
  const user = useSelector(state => state.user.profile);
  const name = nameFormat(user.userFullName);
  const dob = dateFormat(user.dob, 'LL');

  const generateCareNotesPDF = async () => {
    const pdfData = {
      headerLeft: name,
      headerRight: `Date of birth: ${dob}`,
      headerBanner: [
        {
          text:
            'If you’re ever in crisis and need to talk with someone right away, call the Veterans Crisis line at 988. Then select 1.',
        },
      ],
      footerLeft: `Report generated by My HealtheVet and VA on ${moment().format(
        'LL',
      )}`,
      footerRight: 'Page %PAGE_NUMBER% of %TOTAL_PAGES%',
      title: 'Care summaries and notes',
      subject: 'VA Medical Record',
      preface:
        'This report only includes care summaries and notes from 2013 and later. \n\nFor after-visit summaries (summaries of your appointments with VA providers), go to your appointment records.',
      results: {
        header: 'Primary care progress note',
        sectionSeparators: false,
        items: [
          {
            header: 'Details',
            items: [
              {
                title: 'Location',
                value: record.location,
                inline: true,
              },
              {
                title: 'Signed by',
                value: record.physician,
                inline: true,
              },
              {
                title: 'Last updated',
                value: record.dateUpdated,
                inline: true,
              },
              {
                title: 'Date signed',
                value: record.dateSigned,
                inline: true,
              },
            ],
          },
          {
            header: 'Note',
            items: [
              {
                title: '',
                value: record.summary,
                inline: true,
              },
            ],
          },
        ],
      },
    };

    try {
      await generatePdf('medicalRecords', 'care_notes_report', pdfData);
    } catch (error) {
      sendErrorToSentry(error, 'Care Note details');
    }
  };

  const download = () => {
    generateCareNotesPDF();
  };

  const content = () => {
    if (record) {
      return (
        <>
          <PrintHeader />
          <h1 className="vads-u-margin-bottom--0">{record.name}</h1>
          <section className="set-width-486">
            <div className="time-header">
              <h2 className="vads-u-font-size--base vads-u-font-family--sans">
                Date:{' '}
              </h2>
              <p>{record.dateSigned}</p>
            </div>

            <div className="no-print">
              <PrintDownload download={download} />
              <va-additional-info trigger="What to know about downloading records">
                <ul>
                  <li>
                    <strong>If you’re on a public or shared computer,</strong>{' '}
                    print your records instead of downloading. Downloading will
                    save a copy of your records to the public computer.
                  </li>
                  <li>
                    <strong>If you use assistive technology,</strong> a Text
                    file (.txt) may work better for technology such as screen
                    reader, screen enlargers, or Braille displays.
                  </li>
                </ul>
              </va-additional-info>
            </div>

            <div className="test-details-container max-80">
              <h2>Details</h2>
              <h3 className="vads-u-font-size--base vads-u-font-family--sans">
                Location
              </h3>
              <p>{record.location}</p>
              <h3 className="vads-u-font-size--base vads-u-font-family--sans">
                Signed by
              </h3>
              <p>{record.physician}</p>
              <h3 className="vads-u-font-size--base vads-u-font-family--sans">
                Last updated
              </h3>
              <p>{record.dateUpdated}</p>
              <h3 className="vads-u-font-size--base vads-u-font-family--sans">
                Date signed
              </h3>
              <p>{record.dateSigned}</p>
            </div>

            <div className="test-results-container">
              <h2>Note</h2>
              <p>{record.summary}</p>
            </div>
          </section>
        </>
      );
    }
    return <></>;
  };

  return (
    <div className="vads-l-grid-container vads-u-padding-x--0 vads-u-margin-bottom--5">
      {content()}
    </div>
  );
};

export default ProgressNoteDetails;

ProgressNoteDetails.propTypes = {
  record: PropTypes.object,
};
