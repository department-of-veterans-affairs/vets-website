import { expect } from 'chai';
import * as schoolSearch from '../../selectors/schoolSearch';
/* eslint-disable camelcase */
const state = {
  form: {
    submission: {
      status: false,
      errorMessage: false,
      id: false,
      timestamp: false,
      hasAttemptedSubmit: false,
    },
    formId: 'FEEDBACK-TOOL',
    loadedData: {
      formData: {},
      metadata: {},
    },
    reviewPageView: {
      openChapters: [],
      viewedPages: {},
    },
    trackingPrefix: 'edu-feedback-tool-',
    formErrors: {},
    data: {
      educationDetails: {
        programs: {
          chapter33: true,
          chapter30: false,
          chapter1606: true,
          tatu: false,
          chapter35: false,
          chapter31: false,
        },
        assistance: {
          'view:assistance': {
            ta: false,
            taAgr: true,
            myCaa: true,
          },
          'view:ffa': {
            ffa: true,
          },
        },
        school: {
          'view:searchSchoolSelect': {},
        },
      },
      address: {
        country: 'US',
        street: '123 Test Dr',
        city: 'Austin',
        state: 'AL',
        postalCode: '76502',
      },
      applicantEmail: 'test01@demo.com',
      'view:applicantEmailConfirmation': 'test01@demo.com',
      serviceBranch: 'Army',
      serviceDateRange: {
        from: '1959-01-01',
        to: '1979-01-01',
      },
      fullName: {
        prefix: 'Mr.',
        first: 'GREG',
        last: 'ANDERSON',
        suffix: 'III',
      },
      serviceAffiliation: 'Servicemember',
      onBehalfOf: 'Myself',
      issue: {
        other: false,
        recruiting: false,
        studentLoans: false,
        quality: false,
        creditTransfer: false,
        accreditation: false,
        jobOpportunities: false,
        gradePolicy: false,
        refundIssues: false,
        financialIssues: false,
        changeInDegree: false,
        transcriptRelease: false,
      },
    },
    pages: {
      applicantRelationship: {
        uiSchema: {
          onBehalfOf: {
            'ui:widget': 'radio',
            'ui:title': 'Iâ€™m submitting feedback on behalf of...',
            'ui:options': {
              nestedContent: {},
              expandUnderClassNames: 'schemaform-expandUnder',
            },
          },
          anonymousEmail: {
            'ui:title': 'Email',
            'ui:errorMessages': {
              format:
                'Enter a valid email address using the format email@domain.com. Your email address can only have letters, numbers, the @ symbol and a period, with no spaces.',
              pattern:
                'Enter a valid email address using the format email@domain.com. Your email address can only have letters, numbers, the @ symbol and a period, with no spaces.',
              required: 'Please enter an email address',
            },
            'ui:autocomplete': 'email',
            'ui:options': {
              inputType: 'email',
              expandUnder: 'onBehalfOf',
              expandUnderCondition: 'Anonymous',
            },
          },
        },
        schema: {
          type: 'object',
          required: ['onBehalfOf'],
          properties: {
            onBehalfOf: {
              type: 'string',
              enum: ['Myself', 'Someone else', 'Anonymous'],
              enumNames: [
                'Myself',
                'Someone else',
                'I want to submit my feedback anonymously',
              ],
            },
            anonymousEmail: {
              type: 'string',
              format: 'email',
              'ui:collapsed': true,
            },
          },
        },
        editMode: false,
      },
      applicantInformation: {
        uiSchema: {
          fullName: {
            'ui:validations': [null],
            first: {
              'ui:title': 'Your first name',
              'ui:autocomplete': 'given-name',
              'ui:errorMessages': {
                required: 'Please enter a first name',
              },
            },
            last: {
              'ui:title': 'Your last name',
              'ui:autocomplete': 'family-name',
              'ui:errorMessages': {
                required: 'Please enter a last name',
              },
            },
            middle: {
              'ui:title': 'Your middle name',
              'ui:autocomplete': 'additional-name',
            },
            suffix: {
              'ui:title': 'Your suffix',
              'ui:autocomplete': 'honorific-suffix',
              'ui:options': {
                widgetClassNames: 'form-select-medium',
              },
            },
            prefix: {
              'ui:title': 'Prefix',
              'ui:options': {
                widgetClassNames: 'form-select-medium',
              },
            },
            'ui:order': ['prefix', 'first', 'middle', 'last', 'suffix'],
          },
          serviceAffiliation: {
            'ui:title': 'Service affiliation',
            'ui:options': {},
          },
        },
        schema: {
          type: 'object',
          properties: {
            fullName: {
              properties: {
                middle: {
                  type: 'string',
                  minLength: 1,
                  maxLength: 30,
                },
                prefix: {
                  type: 'string',
                  enum: ['Mr.', 'Mrs.', 'Ms.', 'Dr.', 'Other'],
                },
                first: {
                  type: 'string',
                  minLength: 1,
                  maxLength: 30,
                },
                last: {
                  type: 'string',
                  minLength: 1,
                  maxLength: 30,
                },
                suffix: {
                  type: 'string',
                  enum: ['Jr.', 'III', 'IV', 'Sr.', 'Other'],
                },
              },
              type: 'object',
              required: ['first', 'last'],
            },
            serviceAffiliation: {
              type: 'string',
              enum: ['Servicemember', 'Veteran', 'Spouse', 'Child', 'Other'],
            },
          },
          required: ['serviceAffiliation'],
        },
        editMode: false,
      },
      serviceInformation: {
        uiSchema: {
          serviceBranch: {
            'ui:title': 'Branch of service',
          },
          serviceDateRange: {
            'ui:validations': [null],
            'ui:errorMessages': {
              pattern: 'End of service must be after start of service',
              required: 'Please enter a date',
            },
            from: {
              'ui:title': 'Service start date',
              'ui:widget': 'date',
              'ui:validations': [null],
              'ui:errorMessages': {
                pattern: 'Please enter a valid date',
                required: 'Please enter a date',
              },
            },
            to: {
              'ui:title': 'Service end date',
              'ui:widget': 'date',
              'ui:validations': [null],
              'ui:errorMessages': {
                pattern: 'Please enter a valid date',
                required: 'Please enter a date',
              },
            },
          },
        },
        schema: {
          type: 'object',
          properties: {
            serviceBranch: {
              type: 'string',
              enum: [
                'Air Force',
                'Army',
                'Coast Guard',
                'Marine Corps',
                'Navy',
                'NOAA',
                'Public Health Service',
              ],
            },
            serviceDateRange: {
              type: 'object',
              properties: {
                from: {
                  pattern:
                    '^(\\d{4}|XXXX)-(0[1-9]|1[0-2]|XX)-(0[1-9]|[1-2][0-9]|3[0-1]|XX)$',
                  type: 'string',
                },
                to: {
                  pattern:
                    '^(\\d{4}|XXXX)-(0[1-9]|1[0-2]|XX)-(0[1-9]|[1-2][0-9]|3[0-1]|XX)$',
                  type: 'string',
                },
              },
            },
          },
        },
        editMode: false,
      },
      contactInformation: {
        uiSchema: {
          address: {
            street: {
              'ui:title': 'Address line 1',
            },
            street2: {
              'ui:title': 'Address line 2',
            },
            city: {
              'ui:title': 'City',
              'ui:errorMessages': {
                required: 'Please fill in a valid city',
              },
            },
            state: {
              'ui:title': 'State',
              'ui:errorMessages': {
                required: 'Please fill in a valid state',
              },
            },
            country: {
              'ui:title': 'Country',
              'ui:errorMessages': {
                required: 'Please fill in a valid country',
              },
            },
            postalCode: {
              'ui:title': 'Postal code',
              'ui:errorMessages': {
                pattern: 'Please fill in a valid 5-digit postal code',
                required: 'Please fill in a valid 5-digit postal code',
              },
              'ui:options': {
                widgetClassNames: 'va-input-medium-large',
              },
            },
          },
          'ui:validations': [null],
          applicantEmail: {
            'ui:title': 'Email address',
            'ui:errorMessages': {
              format:
                'Enter a valid email address using the format email@domain.com. Your email address can only have letters, numbers, the @ symbol and a period, with no spaces.',
              pattern:
                'Enter a valid email address using the format email@domain.com. Your email address can only have letters, numbers, the @ symbol and a period, with no spaces.',
              required: 'Please enter an email address',
            },
            'ui:autocomplete': 'email',
            'ui:options': {
              inputType: 'email',
            },
          },
          'view:applicantEmailConfirmation': {
            'ui:title': 'Re-enter email address',
            'ui:errorMessages': {
              format:
                'Enter a valid email address using the format email@domain.com. Your email address can only have letters, numbers, the @ symbol and a period, with no spaces.',
              pattern:
                'Enter a valid email address using the format email@domain.com. Your email address can only have letters, numbers, the @ symbol and a period, with no spaces.',
              required: 'Please enter an email address',
            },
            'ui:autocomplete': 'email',
            'ui:options': {
              inputType: 'email',
            },
          },
          phone: {
            'ui:title': 'Phone number',
            'ui:autocomplete': 'tel',
            'ui:errorMessages': {
              pattern:
                'Please enter a 10-digit phone number (with or without dashes)',
              minLength:
                'Please enter a 10-digit phone number (with or without dashes)',
              required: 'Please enter a phone number',
            },
            'ui:options': {
              widgetClassNames: 'va-input-medium-large',
            },
          },
        },
        schema: {
          type: 'object',
          required: [
            'address',
            'applicantEmail',
            'view:applicantEmailConfirmation',
          ],
          properties: {
            address: {
              type: 'object',
              required: ['street', 'city', 'state', 'country', 'postalCode'],
              properties: {
                country: {
                  type: 'string',
                  enum: ['US'],
                  enumNames: ['United States'],
                  default: 'US',
                },
                street: {
                  type: 'string',
                  minLength: 1,
                  maxLength: 499,
                },
                street2: {
                  type: 'string',
                  minLength: 1,
                  maxLength: 499,
                },
                city: {
                  type: 'string',
                  minLength: 1,
                  maxLength: 25,
                },
                state: {
                  type: 'string',
                  enum: [
                    'AL',
                    'AK',
                    'AS',
                    'AZ',
                    'AR',
                    'AA',
                    'AE',
                    'AP',
                    'CA',
                    'CO',
                    'CT',
                    'DE',
                    'DC',
                    'FM',
                    'FL',
                    'GA',
                    'GU',
                    'HI',
                    'ID',
                    'IL',
                    'IN',
                    'IA',
                    'KS',
                    'KY',
                    'LA',
                    'ME',
                    'MH',
                    'MD',
                    'MA',
                    'MI',
                    'MN',
                    'MS',
                    'MO',
                    'MT',
                    'NE',
                    'NV',
                    'NH',
                    'NJ',
                    'NM',
                    'NY',
                    'NC',
                    'ND',
                    'MP',
                    'OH',
                    'OK',
                    'OR',
                    'PW',
                    'PA',
                    'PR',
                    'RI',
                    'SC',
                    'SD',
                    'TN',
                    'TX',
                    'UT',
                    'VT',
                    'VI',
                    'VA',
                    'WA',
                    'WV',
                    'WI',
                    'WY',
                  ],
                  enumNames: [
                    'Alabama',
                    'Alaska',
                    'American Samoa',
                    'Arizona',
                    'Arkansas',
                    'Armed Forces Americas (AA)',
                    'Armed Forces Europe (AE)',
                    'Armed Forces Pacific (AP)',
                    'California',
                    'Colorado',
                    'Connecticut',
                    'Delaware',
                    'District Of Columbia',
                    'Federated States Of Micronesia',
                    'Florida',
                    'Georgia',
                    'Guam',
                    'Hawaii',
                    'Idaho',
                    'Illinois',
                    'Indiana',
                    'Iowa',
                    'Kansas',
                    'Kentucky',
                    'Louisiana',
                    'Maine',
                    'Marshall Islands',
                    'Maryland',
                    'Massachusetts',
                    'Michigan',
                    'Minnesota',
                    'Mississippi',
                    'Missouri',
                    'Montana',
                    'Nebraska',
                    'Nevada',
                    'New Hampshire',
                    'New Jersey',
                    'New Mexico',
                    'New York',
                    'North Carolina',
                    'North Dakota',
                    'Northern Mariana Islands',
                    'Ohio',
                    'Oklahoma',
                    'Oregon',
                    'Palau',
                    'Pennsylvania',
                    'Puerto Rico',
                    'Rhode Island',
                    'South Carolina',
                    'South Dakota',
                    'Tennessee',
                    'Texas',
                    'Utah',
                    'Vermont',
                    'Virgin Islands',
                    'Virginia',
                    'Washington',
                    'West Virginia',
                    'Wisconsin',
                    'Wyoming',
                  ],
                },
                postalCode: {
                  type: 'string',
                  pattern: '^\\d{5}$',
                },
              },
            },
            applicantEmail: {
              type: 'string',
              format: 'email',
            },
            'view:applicantEmailConfirmation': {
              type: 'string',
              format: 'email',
            },
            phone: {
              type: 'string',
              pattern: '^\\d{10}$',
            },
          },
        },
        editMode: false,
      },
      benefitsInformation: {
        uiSchema: {
          educationDetails: {
            programs: {
              'ui:title':
                'Which education benefits have you used? (Select all that apply)',
              'ui:validations': [null],
              'ui:options': {
                showFieldLabel: true,
              },
              'ui:errorMessages': {
                atLeastOne: 'Please select at least one',
              },
            },
            assistance: {
              'view:assistance': {
                'ui:title':
                  'Which military tuition assistance benefits have you used? (Select all that apply)',
                'ui:options': {
                  showFieldLabel: true,
                },
              },
              'view:ffa': {
                'ui:title': 'Have you used any of these other benefits?',
                'ui:options': {
                  showFieldLabel: true,
                },
              },
            },
          },
        },
        schema: {
          type: 'object',
          properties: {
            educationDetails: {
              type: 'object',
              required: ['programs'],
              properties: {
                programs: {
                  type: 'object',
                  properties: {
                    chapter33: {
                      type: 'boolean',
                      default: false,
                      title: 'Post-9/11 GI Bill (Chapter 33)',
                    },
                    chapter30: {
                      type: 'boolean',
                      default: false,
                      title:
                        'Montgomery GI Bill - Active Duty (MGIB-AD, Chapter 30)',
                    },
                    chapter1606: {
                      type: 'boolean',
                      default: false,
                      title:
                        'Montgomery GI Bill - Selected Reserve (MGIB-SR, Chapter 1606)',
                    },
                    tatu: {
                      type: 'boolean',
                      default: false,
                      title: 'Tuition Assistance Top-Up',
                    },
                    chapter35: {
                      type: 'boolean',
                      default: false,
                      title:
                        'Survivorsâ€™ and Dependentsâ€™ Assistance (DEA) (Chapter 35)',
                    },
                    chapter31: {
                      type: 'boolean',
                      default: false,
                      title:
                        'Vocational Rehabilitation and Employment (VR&E) (Chapter 31)',
                    },
                  },
                },
                assistance: {
                  type: 'object',
                  properties: {
                    'view:assistance': {
                      type: 'object',
                      properties: {
                        ta: {
                          type: 'boolean',
                          default: false,
                          title: 'Federal Tuition Assistance (TA)',
                        },
                        taAgr: {
                          type: 'boolean',
                          default: false,
                          title:
                            'State-funded Tuition Assistance (TA) for Servicemembers on Active Guard and Reserve (AGR) duties',
                        },
                        myCaa: {
                          type: 'boolean',
                          default: false,
                          title:
                            'Military Spouse Career Advancement Accounts (MyCAA)',
                        },
                      },
                    },
                    'view:ffa': {
                      type: 'object',
                      properties: {
                        ffa: {
                          type: 'boolean',
                          default: false,
                          title: 'Federal financial aid',
                        },
                      },
                    },
                  },
                },
              },
            },
          },
        },
        editMode: false,
      },
      schoolInformation: {
        uiSchema: {
          educationDetails: {
            school: {
              'view:searchSchoolSelect': {
                facilityCode: {},
                'ui:field': {
                  compare: null,
                },
              },
              'view:manualSchoolEntry': {
                name: {
                  'ui:title': 'School name',
                },
                address: {
                  street: {
                    'ui:title': 'Address line 1',
                  },
                  street2: {
                    'ui:title': 'Address line 2',
                  },
                  street3: {
                    'ui:title': 'Address line 3',
                  },
                  city: {
                    'ui:title': 'City',
                  },
                  state: {
                    'ui:title': 'State',
                  },
                  country: {
                    'ui:title': 'Country',
                  },
                  postalCode: {
                    'ui:title': 'Postal code',
                    'ui:errorMessages': {
                      pattern: 'Please enter a valid 5 digit postal code',
                    },
                    'ui:options': {
                      widgetClassNames: 'va-input-medium-large',
                    },
                  },
                  'ui:options': {},
                },
                'ui:options': {},
              },
            },
          },
        },
        schema: {
          type: 'object',
          properties: {
            educationDetails: {
              type: 'object',
              properties: {
                school: {
                  type: 'object',
                  properties: {
                    'view:searchSchoolSelect': {
                      type: 'object',
                      properties: {
                        facilityCode: {
                          type: 'string',
                        },
                      },
                      required: ['facilityCode'],
                    },
                    'view:manualSchoolEntry': {
                      type: 'object',
                      properties: {
                        name: {
                          type: 'string',
                          minLength: 1,
                          maxLength: 255,
                        },
                        address: {
                          properties: {
                            country: {
                              type: 'string',
                              enum: [
                                'United States',
                                'Afghanistan',
                                'Aland Islands',
                                'Albania',
                                'Algeria',
                                'Andorra',
                                'Angola',
                                'Anguilla',
                                'Antarctica',
                                'Antigua and Barbuda',
                                'Argentina',
                                'Armenia',
                                'Aruba',
                                'Australia',
                                'Austria',
                                'Azerbaijan',
                                'Bahamas',
                                'Bahrain',
                                'Bangladesh',
                                'Barbados',
                                'Belarus',
                                'Belgium',
                                'Belize',
                                'Benin',
                                'Bermuda',
                                'Bhutan',
                                'Bolivia, Plurinational State of',
                                'Bonaire, Sint Eustatius and Saba',
                                'Bosnia and Herzegovina',
                                'Botswana',
                                'Bouvet Island',
                                'Brazil',
                                'British Indian Ocean Territory',
                                'Brunei Darussalam',
                                'Bulgaria',
                                'Burkina Faso',
                                'Burundi',
                                'Cambodia',
                                'Cameroon',
                                'Canada',
                                'Cape Verde',
                                'Cayman Islands',
                                'Central African Republic',
                                'Chad',
                                'Chile',
                                'China',
                                'Chinese Taipei',
                                'Christmas Island',
                                'Cocos (Keeling) Islands',
                                'Colombia',
                                'Comoros',
                                'Congo',
                                'Congo, the Democratic Republic of the',
                                'Cook Islands',
                                'Costa Rica',
                                "Cote d'Ivoire",
                                'Croatia',
                                'Cuba',
                                'CuraÃ§ao',
                                'Cyprus',
                                'Czech Republic',
                                'Denmark',
                                'Djibouti',
                                'Dominica',
                                'Dominican Republic',
                                'Ecuador',
                                'Egypt',
                                'El Salvador',
                                'Equatorial Guinea',
                                'Eritrea',
                                'Estonia',
                                'Ethiopia',
                                'Falkland Islands (Malvinas)',
                                'Faroe Islands',
                                'Fiji',
                                'Finland',
                                'France',
                                'French Guiana',
                                'French Polynesia',
                                'French Southern Territories',
                                'Gabon',
                                'Gambia',
                                'Georgia',
                                'Germany',
                                'Ghana',
                                'Gibraltar',
                                'Greece',
                                'Greenland',
                                'Grenada',
                                'Guadeloupe',
                                'Guatemala',
                                'Guernsey',
                                'Guinea',
                                'Guinea-Bissau',
                                'Guyana',
                                'Haiti',
                                'Heard Island and McDonald Islands',
                                'Holy See (Vatican City State)',
                                'Honduras',
                                'Hungary',
                                'Iceland',
                                'India',
                                'Indonesia',
                                'Iran, Islamic Republic of',
                                'Iraq',
                                'Ireland',
                                'Isle of Man',
                                'Israel',
                                'Italy',
                                'Jamaica',
                                'Japan',
                                'Jersey',
                                'Jordan',
                                'Kazakhstan',
                                'Kenya',
                                'Kiribati',
                                "Korea, Democratic People's Republic of",
                                'Korea, Republic of',
                                'Kuwait',
                                'Kyrgyzstan',
                                "Lao People's Democratic Republic",
                                'Latvia',
                                'Lebanon',
                                'Lesotho',
                                'Liberia',
                                'Libyan Arab Jamahiriya',
                                'Liechtenstein',
                                'Lithuania',
                                'Luxembourg',
                                'Macao',
                                'Macedonia, the former Yugoslav Republic of',
                                'Madagascar',
                                'Malawi',
                                'Malaysia',
                                'Maldives',
                                'Mali',
                                'Malta',
                                'Martinique',
                                'Mauritania',
                                'Mauritius',
                                'Mayotte',
                                'Mexico',
                                'Moldova, Republic of',
                                'Monaco',
                                'Mongolia',
                                'Montenegro',
                                'Montserrat',
                                'Morocco',
                                'Mozambique',
                                'Myanmar',
                                'Namibia',
                                'Nauru',
                                'Nepal',
                                'Netherlands',
                                'New Caledonia',
                                'New Zealand',
                                'Nicaragua',
                                'Niger',
                                'Nigeria',
                                'Niue',
                                'Norfolk Island',
                                'Norway',
                                'Oman',
                                'Pakistan',
                                'Palestinian Territory, Occupied',
                                'Panama',
                                'Papua New Guinea',
                                'Paraguay',
                                'Peru',
                                'Philippines',
                                'Pitcairn',
                                'Poland',
                                'Portugal',
                                'Qatar',
                                'Reunion',
                                'Romania',
                                'Russian Federation',
                                'Rwanda',
                                'Saint BarthÃ©lemy',
                                'Saint Helena, Ascension and Tristan da Cunha',
                                'Saint Kitts and Nevis',
                                'Saint Lucia',
                                'Saint Martin (French part)',
                                'Saint Pierre and Miquelon',
                                'Saint Vincent and the Grenadines',
                                'Samoa',
                                'San Marino',
                                'Sao Tome and Principe',
                                'Saudi Arabia',
                                'Senegal',
                                'Serbia',
                                'Seychelles',
                                'Sierra Leone',
                                'Singapore',
                                'Sint Maarten (Dutch part)',
                                'Slovakia',
                                'Slovenia',
                                'Solomon Islands',
                                'Somalia',
                                'South Africa',
                                'South Georgia and the South Sandwich Islands',
                                'South Sudan',
                                'Spain',
                                'Sri Lanka',
                                'Sudan',
                                'Suriname',
                                'Svalbard and Jan Mayen',
                                'Swaziland',
                                'Sweden',
                                'Switzerland',
                                'Syrian Arab Republic',
                                'Tajikistan',
                                'Tanzania, United Republic of',
                                'Thailand',
                                'Timor-Leste',
                                'Togo',
                                'Tokelau',
                                'Tonga',
                                'Trinidad and Tobago',
                                'Tunisia',
                                'Turkey',
                                'Turkmenistan',
                                'Turks and Caicos Islands',
                                'Tuvalu',
                                'Uganda',
                                'Ukraine',
                                'United Arab Emirates',
                                'United Kingdom',
                                'Uruguay',
                                'Uzbekistan',
                                'Vanuatu',
                                'Venezuela, Bolivarian Republic of',
                                'Viet Nam',
                                'Virgin Islands, British',
                                'Wallis and Futuna',
                                'Western Sahara',
                                'Yemen',
                                'Zambia',
                                'Zimbabwe',
                              ],
                              default: 'United States',
                            },
                            street: {
                              type: 'string',
                              minLength: 1,
                              maxLength: 52,
                            },
                            street2: {
                              type: 'string',
                              minLength: 1,
                              maxLength: 52,
                            },
                            street3: {
                              type: 'string',
                              minLength: 1,
                              maxLength: 52,
                            },
                            city: {
                              type: 'string',
                              minLength: 1,
                              maxLength: 40,
                            },
                            state: {
                              type: 'string',
                              minLength: 1,
                              maxLength: 20,
                            },
                            postalCode: {
                              type: 'string',
                              minLength: 1,
                              maxLength: 30,
                            },
                          },
                          type: 'object',
                        },
                      },
                      'ui:hidden': true,
                    },
                  },
                },
              },
            },
          },
        },
        editMode: false,
      },
      issueInformation: {
        uiSchema: {
          issue: {
            'ui:title':
              'Which topic best describes your feedback? (Select all that apply)',
            'ui:validations': [null],
            'ui:options': {
              showFieldLabel: true,
            },
            'ui:errorMessages': {
              atLeastOne: 'Please select at least one',
            },
            'ui:order': [
              'recruiting',
              'accreditation',
              'financialIssues',
              'studentLoans',
              'jobOpportunities',
              'changeInDegree',
              'quality',
              'gradePolicy',
              'transcriptRelease',
              'creditTransfer',
              'refundIssues',
              'other',
            ],
            recruiting: {
              'ui:title': {
                type: 'div',
                key: null,
                ref: null,
                props: {
                  children: [
                    'Recruiting or marketing practices',
                    {
                      type: 'br',
                      key: null,
                      ref: null,
                      props: {},
                      _owner: null,
                      _store: {},
                    },
                    {
                      type: 'span',
                      key: null,
                      ref: null,
                      props: {
                        children: {
                          type: 'i',
                          key: null,
                          ref: null,
                          props: {
                            children:
                              'The school made inaccurate claims about the quality of its education or its school requirements.',
                          },
                          _owner: null,
                          _store: {},
                        },
                      },
                      _owner: null,
                      _store: {},
                    },
                  ],
                },
                _owner: null,
                _store: {},
              },
            },
            studentLoans: {
              'ui:title': {
                type: 'div',
                key: null,
                ref: null,
                props: {
                  children: [
                    'Student loan',
                    {
                      type: 'br',
                      key: null,
                      ref: null,
                      props: {},
                      _owner: null,
                      _store: {},
                    },
                    {
                      type: 'span',
                      key: null,
                      ref: null,
                      props: {
                        children: {
                          type: 'i',
                          key: null,
                          ref: null,
                          props: {
                            children:
                              'The school didnâ€™t provide you total a cost of your school loan.',
                          },
                          _owner: null,
                          _store: {},
                        },
                      },
                      _owner: null,
                      _store: {},
                    },
                  ],
                },
                _owner: null,
                _store: {},
              },
            },
            quality: {
              'ui:title': {
                type: 'div',
                key: null,
                ref: null,
                props: {
                  children: [
                    'Quality of education',
                    {
                      type: 'br',
                      key: null,
                      ref: null,
                      props: {},
                      _owner: null,
                      _store: {},
                    },
                    {
                      type: 'span',
                      key: null,
                      ref: null,
                      props: {
                        children: {
                          type: 'i',
                          key: null,
                          ref: null,
                          props: {
                            children:
                              'The school doesnâ€™t have qualified teachers.',
                          },
                          _owner: null,
                          _store: {},
                        },
                      },
                      _owner: null,
                      _store: {},
                    },
                  ],
                },
                _owner: null,
                _store: {},
              },
            },
            creditTransfer: {
              'ui:title': {
                type: 'div',
                key: null,
                ref: null,
                props: {
                  children: [
                    'Transfer of credits',
                    {
                      type: 'br',
                      key: null,
                      ref: null,
                      props: {},
                      _owner: null,
                      _store: {},
                    },
                    {
                      type: 'span',
                      key: null,
                      ref: null,
                      props: {
                        children: {
                          type: 'i',
                          key: null,
                          ref: null,
                          props: {
                            children:
                              'The school isnâ€™t accredited for transfer of credits.',
                          },
                          _owner: null,
                          _store: {},
                        },
                      },
                      _owner: null,
                      _store: {},
                    },
                  ],
                },
                _owner: null,
                _store: {},
              },
            },
            accreditation: {
              'ui:title': {
                type: 'div',
                key: null,
                ref: null,
                props: {
                  children: [
                    'Accreditation',
                    {
                      type: 'br',
                      key: null,
                      ref: null,
                      props: {},
                      _owner: null,
                      _store: {},
                    },
                    {
                      type: 'span',
                      key: null,
                      ref: null,
                      props: {
                        children: {
                          type: 'i',
                          key: null,
                          ref: null,
                          props: {
                            children:
                              'The school is unable to get or keep accreditation.',
                          },
                          _owner: null,
                          _store: {},
                        },
                      },
                      _owner: null,
                      _store: {},
                    },
                  ],
                },
                _owner: null,
                _store: {},
              },
            },
            jobOpportunities: {
              'ui:title': {
                type: 'div',
                key: null,
                ref: null,
                props: {
                  children: [
                    'Post-graduation job opportunity',
                    {
                      type: 'br',
                      key: null,
                      ref: null,
                      props: {},
                      _owner: null,
                      _store: {},
                    },
                    {
                      type: 'span',
                      key: null,
                      ref: null,
                      props: {
                        children: {
                          type: 'i',
                          key: null,
                          ref: null,
                          props: {
                            children:
                              'The school made promises to you about job placement or salary after graduation.',
                          },
                          _owner: null,
                          _store: {},
                        },
                      },
                      _owner: null,
                      _store: {},
                    },
                  ],
                },
                _owner: null,
                _store: {},
              },
            },
            gradePolicy: {
              'ui:title': {
                type: 'div',
                key: null,
                ref: null,
                props: {
                  children: [
                    'Grade policy',
                    {
                      type: 'br',
                      key: null,
                      ref: null,
                      props: {},
                      _owner: null,
                      _store: {},
                    },
                    {
                      type: 'span',
                      key: null,
                      ref: null,
                      props: {
                        children: {
                          type: 'i',
                          key: null,
                          ref: null,
                          props: {
                            children:
                              'The school didnâ€™t give you a copy of its grade policy or it changed its grade policy in the middle of the year.',
                          },
                          _owner: null,
                          _store: {},
                        },
                      },
                      _owner: null,
                      _store: {},
                    },
                  ],
                },
                _owner: null,
                _store: {},
              },
            },
            refundIssues: {
              'ui:title': {
                type: 'div',
                key: null,
                ref: null,
                props: {
                  children: [
                    'Refund issues',
                    {
                      type: 'br',
                      key: null,
                      ref: null,
                      props: {},
                      _owner: null,
                      _store: {},
                    },
                    {
                      type: 'span',
                      key: null,
                      ref: null,
                      props: {
                        children: {
                          type: 'i',
                          key: null,
                          ref: null,
                          props: {
                            children:
                              'The school wonâ€™t refund your GI Bill payment.',
                          },
                          _owner: null,
                          _store: {},
                        },
                      },
                      _owner: null,
                      _store: {},
                    },
                  ],
                },
                _owner: null,
                _store: {},
              },
            },
            financialIssues: {
              'ui:title': {
                type: 'div',
                key: null,
                ref: null,
                props: {
                  children: [
                    'Financial concern',
                    {
                      type: 'br',
                      key: null,
                      ref: null,
                      props: {},
                      _owner: null,
                      _store: {},
                    },
                    {
                      type: 'span',
                      key: null,
                      ref: null,
                      props: {
                        children: {
                          type: 'i',
                          key: null,
                          ref: null,
                          props: {
                            children:
                              'The school is charging you a higher tuition or extra fees.',
                          },
                          _owner: null,
                          _store: {},
                        },
                      },
                      _owner: null,
                      _store: {},
                    },
                  ],
                },
                _owner: null,
                _store: {},
              },
            },
            changeInDegree: {
              'ui:title': {
                type: 'div',
                key: null,
                ref: null,
                props: {
                  children: [
                    'Change in degree plan or requirements',
                    {
                      type: 'br',
                      key: null,
                      ref: null,
                      props: {},
                      _owner: null,
                      _store: {},
                    },
                    {
                      type: 'span',
                      key: null,
                      ref: null,
                      props: {
                        children: {
                          type: 'i',
                          key: null,
                          ref: null,
                          props: {
                            children:
                              'The school added new hour or course requirements after you enrolled.',
                          },
                          _owner: null,
                          _store: {},
                        },
                      },
                      _owner: null,
                      _store: {},
                    },
                  ],
                },
                _owner: null,
                _store: {},
              },
            },
            transcriptRelease: {
              'ui:title': {
                type: 'div',
                key: null,
                ref: null,
                props: {
                  children: [
                    'Release of transcripts',
                    {
                      type: 'br',
                      key: null,
                      ref: null,
                      props: {},
                      _owner: null,
                      _store: {},
                    },
                    {
                      type: 'span',
                      key: null,
                      ref: null,
                      props: {
                        children: {
                          type: 'i',
                          key: null,
                          ref: null,
                          props: {
                            children:
                              'The school wonâ€™t release your transcripts.',
                          },
                          _owner: null,
                          _store: {},
                        },
                      },
                      _owner: null,
                      _store: {},
                    },
                  ],
                },
                _owner: null,
                _store: {},
              },
            },
            other: {
              'ui:title': 'Other',
            },
          },
          issueDescription: {
            'ui:title':
              'Please write your feedback and any details about your issue in the space below. (32,000 characters maximum)',
            'ui:widget': 'textarea',
            'ui:options': {
              rows: 5,
              maxLength: 32000,
            },
          },
          issueResolution: {
            'ui:title':
              'What do you think would be a fair way to resolve your issue? (1,000 characters maximum)',
            'ui:widget': 'textarea',
            'ui:options': {
              rows: 5,
              maxLength: 1000,
            },
          },
        },
        schema: {
          type: 'object',
          required: ['issue', 'issueDescription', 'issueResolution'],
          properties: {
            issue: {
              type: 'object',
              properties: {
                other: {
                  type: 'boolean',
                  default: false,
                },
                recruiting: {
                  type: 'boolean',
                  default: false,
                },
                studentLoans: {
                  type: 'boolean',
                  default: false,
                },
                quality: {
                  type: 'boolean',
                  default: false,
                },
                creditTransfer: {
                  type: 'boolean',
                  default: false,
                },
                accreditation: {
                  type: 'boolean',
                  default: false,
                },
                jobOpportunities: {
                  type: 'boolean',
                  default: false,
                },
                gradePolicy: {
                  type: 'boolean',
                  default: false,
                },
                refundIssues: {
                  type: 'boolean',
                  default: false,
                },
                financialIssues: {
                  type: 'boolean',
                  default: false,
                },
                changeInDegree: {
                  type: 'boolean',
                  default: false,
                },
                transcriptRelease: {
                  type: 'boolean',
                  default: false,
                },
              },
            },
            issueDescription: {
              type: 'string',
              maxLength: 32000,
            },
            issueResolution: {
              type: 'string',
              maxLength: 1000,
            },
          },
        },
        editMode: false,
      },
    },
    initialData: {
      fullName: {},
      serviceDateRange: {},
      address: {
        country: 'US',
      },
      educationDetails: {
        programs: {
          chapter33: false,
          chapter30: false,
          chapter1606: false,
          tatu: false,
          chapter35: false,
          chapter31: false,
        },
        assistance: {
          'view:assistance': {
            ta: false,
            taAgr: false,
            myCaa: false,
          },
          'view:ffa': {
            ffa: false,
          },
        },
        school: {
          'view:searchSchoolSelect': {},
        },
      },
      issue: {
        other: false,
        recruiting: false,
        studentLoans: false,
        quality: false,
        creditTransfer: false,
        accreditation: false,
        jobOpportunities: false,
        gradePolicy: false,
        refundIssues: false,
        financialIssues: false,
        changeInDegree: false,
        transcriptRelease: false,
      },
    },
    savedStatus: 'not-attempted',
    autoSavedStatus: 'not-attempted',
    loadedStatus: 'not-attempted',
    version: 1,
    lastSavedDate: null,
    expirationDate: null,
    prefillStatus: 'not-attempted',
    isStartingOver: false,
    migrations: [null],
  },
  schoolSelect: {
    currentPageNumber: 1,
    institutions: [],
    institutionQuery: '',
    institutionSelected: {},
    manualSchoolEntryChecked: false,
    pagesCount: 0,
    searchInputValue: '',
    searchResultsCount: 0,
    showInstitutions: false,
    showInstitutionsLoading: false,
    showNoResultsFound: false,
    showPagination: false,
    showPaginationLoading: false,
    showSearchResults: true,
  },
  announcements: {
    isInitialized: true,
    dismissed: [],
  },
  headerMenuReducer: {},
  externalServiceStatuses: {
    loading: false,
    statuses: null,
  },
  featureToggles: {
    loading: false,
    thisIsOnlyATest: false,
    this_is_only_a_test: false,
    avsEnabled: false,
    avs_enabled: false,
    bcasLettersUseLighthouse: false,
    bcas_letters_use_lighthouse: false,
    benefitsDocumentsUseLighthouse: false,
    benefits_documents_use_lighthouse: false,
    caregiverUseFacilitiesApi: false,
    caregiver_use_facilities_API: false,
    hcaBrowserMonitoringEnabled: false,
    hca_browser_monitoring_enabled: false,
    hcaEnrollmentStatusOverrideEnabled: true,
    hca_enrollment_status_override_enabled: true,
    hcaHouseholdV2Enabled: true,
    hca_household_v2_enabled: true,
    hcaPerformanceAlertEnabled: false,
    hca_performance_alert_enabled: false,
    hcaSigiEnabled: false,
    hca_sigi_enabled: false,
    hcaUseFacilitiesApi: false,
    hca_use_facilities_API: false,
    cernerAllowPartialFacilities: false,
    cerner_allow_partial_facilities: false,
    cernerOverride463: false,
    cerner_override_463: false,
    cernerOverride531: true,
    cerner_override_531: true,
    cernerOverride648: false,
    cerner_override_648: false,
    cernerOverride653: true,
    cerner_override_653: true,
    cernerOverride663: false,
    cerner_override_663: false,
    cernerOverride668: true,
    cerner_override_668: true,
    cernerOverride687: true,
    cerner_override_687: true,
    cernerOverride692: true,
    cerner_override_692: true,
    cernerOverride757: true,
    cerner_override_757: true,
    checkInExperienceEnabled: true,
    check_in_experience_enabled: true,
    checkInExperiencePreCheckInHandoffEnabled: false,
    check_in_experience_pre_check_in_handoff_enabled: false,
    checkInExperiencePreCheckInEnabled: true,
    check_in_experience_pre_check_in_enabled: true,
    checkInExperienceTranslationDisclaimerSpanishEnabled: true,
    check_in_experience_translation_disclaimer_spanish_enabled: true,
    checkInExperienceTranslationDisclaimerTagalogEnabled: true,
    check_in_experience_translation_disclaimer_tagalog_enabled: true,
    checkInExperienceLorotaSecurityUpdatesEnabled: true,
    check_in_experience_lorota_security_updates_enabled: true,
    checkInExperienceMockEnabled: false,
    check_in_experience_mock_enabled: false,
    checkInExperiencePatientCellPhone: true,
    check_in_experience_patient_cell_phone: true,
    checkInExperiencePhoneAppointmentsEnabled: true,
    check_in_experience_phone_appointments_enabled: true,
    checkInExperiencePreCheckInActionLinkTopPlacement: true,
    check_in_experience_pre_check_in_action_link_top_placement: true,
    checkInExperienceTravelReimbursement: true,
    check_in_experience_travel_reimbursement: true,
    checkInExperienceTravelLogic: true,
    check_in_experience_travel_logic: true,
    checkInExperience45MinuteReminder: true,
    check_in_experience_45_minute_reminder: true,
    checkInExperienceBrowserMonitoring: true,
    check_in_experience_browser_monitoring: true,
    checkInExperienceUnifiedLandingPage: false,
    check_in_experience_unified_landing_page: false,
    checkInExperienceTravelClaimIncreaseTimeout: false,
    check_in_experience_travel_claim_increase_timeout: false,
    claimLettersAccess: true,
    claim_letters_access: true,
    cstUseLighthouse: true,
    cst_use_lighthouse: true,
    cstUseLighthouse5103: true,
    cst_use_lighthouse_5103: true,
    cstUseLighthouseIndex: true,
    cst_use_lighthouse_index: true,
    cstUseLighthouseShow: true,
    cst_use_lighthouse_show: true,
    cstIncludeDdlBoaLetters: false,
    cst_include_ddl_boa_letters: false,
    cstUseNewClaimCards: true,
    cst_use_new_claim_cards: true,
    coeAccess: true,
    coe_access: true,
    combinedDebtPortalAccess: true,
    combined_debt_portal_access: true,
    combinedFinancialStatusReport: true,
    combined_financial_status_report: true,
    combinedFinancialStatusReportEnhancements: true,
    combined_financial_status_report_enhancements: true,
    communicationPreferences: true,
    communication_preferences: true,
    contactInfoChangeEmail: true,
    contact_info_change_email: true,
    covidVaccineRegistration: true,
    covid_vaccine_registration: true,
    covidVaccineRegistrationExpanded: true,
    covid_vaccine_registration_expanded: true,
    covidVaccineRegistrationFrontend: true,
    covid_vaccine_registration_frontend: true,
    covidVaccineRegistrationFrontendCta: true,
    covid_vaccine_registration_frontend_cta: true,
    covidVaccineRegistrationFrontendEnableExpandedEligibility: true,
    covid_vaccine_registration_frontend_enable_expanded_eligibility: true,
    covidVaccineRegistrationFrontendHideAuth: true,
    covid_vaccine_registration_frontend_hide_auth: true,
    covidVaccineSchedulingFrontend: false,
    covid_vaccine_scheduling_frontend: false,
    covidVolunteerIntakeBackendEnabled: true,
    covid_volunteer_intake_backend_enabled: true,
    covidVolunteerIntakeEnabled: true,
    covid_volunteer_intake_enabled: true,
    covidVolunteerUpdateEnabled: true,
    covid_volunteer_update_enabled: true,
    covidVolunteerDelivery: true,
    covid_volunteer_delivery: true,
    claimsClaimUploaderUseBd: true,
    claims_claim_uploader_use_bd: true,
    claimsStatusV1BGSEnabled: true,
    claims_status_v1_bgs_enabled: true,
    claimsStatusV2LhBenefitsDocsServiceEnabled: true,
    claims_status_v2_lh_benefits_docs_service_enabled: true,
    claimsStatusV1LhAutoEstablishClaimEnabled: true,
    claims_status_v1_lh_auto_establish_claim_enabled: true,
    debtLettersShowLetters: true,
    debt_letters_show_letters: true,
    debtLettersShowLettersVBMS: false,
    debt_letters_show_letters_vbms: false,
    decisionReviewHlrEmail: true,
    decision_review_hlr_email: true,
    decisionReviewNodEmail: true,
    decision_review_nod_email: true,
    decisionReviewScEmail: true,
    decision_review_sc_email: true,
    decisionReviewHlrPiiExpungeEnabled: false,
    decision_review_hlr_pii_expunge_enabled: false,
    decisionReviewNodPiiExpungeEnabled: false,
    decision_review_nod_pii_expunge_enabled: false,
    decisionReviewScPiiExpungeEnabled: false,
    decision_review_sc_pii_expunge_enabled: false,
    decisionReviewHlrStatusUpdaterEnabled: false,
    decision_review_hlr_status_updater_enabled: false,
    decisionReviewNodStatusUpdaterEnabled: false,
    decision_review_nod_status_updater_enabled: false,
    decisionReviewScStatusUpdaterEnabled: false,
    decision_review_sc_status_updater_enabled: false,
    decisionReviewIcnUpdaterEnabled: false,
    decision_review_icn_updater_enabled: false,
    decisionReviewWeeklyErrorReportEnabled: true,
    decision_review_weekly_error_report_enabled: true,
    decisionReviewDailyErrorReportEnabled: true,
    decision_review_daily_error_report_enabled: true,
    decisionReviewDailyStuckRecordsReportEnabled: true,
    decision_review_daily_stuck_records_report_enabled: true,
    decisionReviewMonthlyStatsReportEnabled: true,
    decision_review_monthly_stats_report_enabled: true,
    decisionReviewHigherLevelReviewPdfV3: true,
    decision_review_higher_level_review_pdf_v3: true,
    decisionReviewSupplementalClaimPdfV3: true,
    decision_review_supplemental_claim_pdf_v3: true,
    decisionReviewScPactActBoolean: true,
    decision_review_sc_pact_act_boolean: true,
    decisionReviewDelayEvidence: true,
    decision_review_delay_evidence: true,
    dependencyVerification: true,
    dependency_verification: true,
    dependentsEnqueueWithUserStruct: true,
    dependents_enqueue_with_user_struct: true,
    dependentsPensionCheck: true,
    dependents_pension_check: true,
    dependentsRemovalCheck: true,
    dependents_removal_check: true,
    dependentsManagement: false,
    dependents_management: false,
    dependentsCentralSubmission: true,
    dependents_central_submission: true,
    dependentsEncryptJobs: true,
    dependents_encrypt_jobs: true,
    dependentsCentralSubmissionLighthouse: true,
    dependents_central_submission_lighthouse: true,
    disability526ClassifierNewClaims: false,
    disability_526_classifier_new_claims: false,
    disability526MaximumRating: true,
    disability_526_maximum_rating: true,
    disability526MaximumRatingApi: true,
    disability_526_maximum_rating_api: true,
    disability526EpMergeApi: false,
    disability_526_ep_merge_api: false,
    disability526ToxicExposure: false,
    disability_526_toxic_exposure: false,
    disabilityCompensationFlashes: true,
    disability_compensation_flashes: true,
    disabilityCompensationPifFailNotification: false,
    disability_compensation_pif_fail_notification: false,
    educationReportsCleanup: true,
    education_reports_cleanup: true,
    enrollmentVerification: false,
    enrollment_verification: false,
    ezcgUseFacilityApi: true,
    ezcg_use_facility_api: true,
    dischargeWizardFeatures: true,
    discharge_wizard_features: true,
    facilitiesPPMSSuppressAll: false,
    facilities_ppms_suppress_all: false,
    facilitiesPPMSSuppressCommunityCare: false,
    facilities_ppms_suppress_community_care: false,
    facilitiesPPMSSuppressPharmacies: false,
    facilities_ppms_suppress_pharmacies: false,
    facilityLocatorLatLongOnly: false,
    facility_locator_lat_long_only: false,
    facilityLocatorPPMSLegacyUrgentCareToPosLocator: true,
    facility_locator_ppms_legacy_urgent_care_to_pos_locator: true,
    facilityLocatorPredictiveLocationSearch: false,
    facility_locator_predictive_location_search: false,
    facilityLocatorPullOperatingStatusFromLighthouse: true,
    facility_locator_pull_operating_status_from_lighthouse: true,
    facilityLocatorRailsEngine: true,
    facility_locator_rails_engine: true,
    facilityLocatorRestoreCommunityCarePagination: true,
    facility_locator_restore_community_care_pagination: true,
    facilityLocatorShowCommunityCares: true,
    facility_locator_show_community_cares: true,
    facilityLocatorShowHealthConnectNumber: true,
    facility_locator_show_health_connect_number: true,
    facilityLocatorShowOperationalHoursSpecialInstructions: false,
    facility_locator_show_operational_hours_special_instructions: false,
    findFormsShowPdfModal: true,
    find_forms_show_pdf_modal: true,
    fileUploadShortWorkflowEnabled: true,
    file_upload_short_workflow_enabled: true,
    financialStatusReportDebtsApiModule: true,
    financial_status_report_debts_api_module: true,
    financialStatusReportStreamlinedWaiver: true,
    financial_status_report_streamlined_waiver: true,
    financialStatusReportStreamlinedWaiverAssets: true,
    financial_status_report_streamlined_waiver_assets: true,
    financialStatusReportReviewPageNavigation: false,
    financial_status_report_review_page_navigation: false,
    findARep: false,
    find_a_rep: false,
    form526Legacy: true,
    form526_legacy: true,
    form10182Nod: true,
    form10182_nod: true,
    form0994ConfirmationEmail: true,
    form0994_confirmation_email: true,
    form1990ConfirmationEmail: true,
    form1990_confirmation_email: true,
    form1995ConfirmationEmail: true,
    form1995_confirmation_email: true,
    form1990eConfirmationEmail: true,
    form1990e_confirmation_email: true,
    form210972ConfirmationEmail: true,
    form21_0972_confirmation_email: true,
    form2110203ConfirmationEmail: true,
    form21_10203_confirmation_email: true,
    form2110210ConfirmationEmail: true,
    form21_10210_confirmation_email: true,
    form210845ConfirmationEmail: true,
    form21_0845_confirmation_email: true,
    form21p0847ConfirmationEmail: true,
    form21p_0847_confirmation_email: true,
    form214142ConfirmationEmail: true,
    form21_4142_confirmation_email: true,
    form5490ConfirmationEmail: true,
    form5490_confirmation_email: true,
    form5495ConfirmationEmail: true,
    form5495_confirmation_email: true,
    simpleFormsEmailConfirmations: true,
    simple_forms_email_confirmations: true,
    form210845: true,
    form210972: true,
    form214142: true,
    form2110210: true,
    form21p0847: false,
    form264555: true,
    fsrConfirmationEmail: false,
    fsr_confirmation_email: false,
    getHelpAskForm: true,
    get_help_ask_form: true,
    getHelpMessages: true,
    get_help_messages: true,
    injectedHeaderWebComponents: false,
    injected_header_web_components: false,
    inProgressFormCustomExpiration: true,
    in_progress_form_custom_expiration: true,
    inProgressFormReminder: true,
    in_progress_form_reminder: true,
    inProgressFormReminderAgeParam: true,
    in_progress_form_reminder_age_param: true,
    clearStaleInProgressRemindersSent: false,
    clear_stale_in_progress_reminders_sent: false,
    inProgress1880FormCron: false,
    in_progress_1880_form_cron: false,
    inProgress1880FormReminder: true,
    in_progress_1880_form_reminder: true,
    inProgressFormReminder1010ez: true,
    in_progress_form_reminder_1010ez: true,
    inProgressFormReminder526ez: false,
    in_progress_form_reminder_526ez: false,
    loopPages: true,
    loop_pages: true,
    showMbsPreneedChangeVA4010007: false,
    show_mbs_preneed_change_va_4010007: false,
    medicalCopaysSixMoWindow: false,
    medical_copays_six_mo_window: false,
    medicalCopaysHtmlMedicalStatementsViewEnabled: false,
    medical_copays_html_medical_statements_view_enabled: false,
    medicalCopaysApiKeyChange: true,
    medical_copays_api_key_change: true,
    medicalCopayNotifications: true,
    medical_copay_notifications: true,
    mhvLandingPageEnabled: true,
    mhv_landing_page_enabled: true,
    mhvLandingPageShowPriorityGroup: false,
    mhv_landing_page_show_priority_group: false,
    mhvSecureMessagingToVAGovRelease: true,
    mhv_secure_messaging_to_va_gov_release: true,
    mhvSecureMessagingToPhase1: true,
    mhv_secure_messaging_to_phase_1: true,
    mhvMedicalRecordsPhrRefreshOnLogin: false,
    mhv_medical_records_phr_refresh_on_login: false,
    mhvMedicalRecordsRedactFHIRClientLogs: false,
    mhv_medical_records_redact_fhir_client_logs: false,
    mhvMedicalRecordsToVAGovRelease: true,
    mhv_medical_records_to_va_gov_release: true,
    mhvMedicalRecordsDisplayDomains: true,
    mhv_medical_records_display_domains: true,
    mhvMedicalRecordsAllowTxtDownloads: true,
    mhv_medical_records_allow_txt_downloads: true,
    mhvMedicationsToVAGovRelease: true,
    mhv_medications_to_va_gov_release: true,
    mhvToLogingovAccountTransition: false,
    mhv_to_logingov_account_transition: false,
    mhvToLogingovAccountTransitionModal: false,
    mhv_to_logingov_account_transition_modal: false,
    mhvToLogingovAccountTransitionBanner: false,
    mhv_to_logingov_account_transition_banner: false,
    mhvToLogingovAccountTransitionUrgent: false,
    mhv_to_logingov_account_transition_urgent: false,
    militaryInformationVaprofile: false,
    military_information_vaprofile: false,
    mobileApi: true,
    mobile_api: true,
    mobilePrecacheAppointments: false,
    mobile_precache_appointments: false,
    mobileFilterDoc27DecisionLettersOut: true,
    mobile_filter_doc_27_decision_letters_out: true,
    multipleAddress1010ez: true,
    multiple_address_10_10ez: true,
    omniChannelLink: true,
    omni_channel_link: true,
    organicConversionExperiment: true,
    organic_conversion_experiment: true,
    reactivationExperimentInitialGate: false,
    reactivation_experiment_initial_gate: false,
    reactivationExperimentRateLimit: false,
    reactivation_experiment_rate_limit: false,
    pdfWarningBanner: true,
    pdf_warning_banner: true,
    preEntryCovid19Screener: false,
    pre_entry_covid19_screener: false,
    showAuthenticatedMenuEnhancements: true,
    show_authenticated_menu_enhancements: true,
    profileLighthouseRatingInfo: true,
    profile_lighthouse_rating_info: true,
    profileLighthouseDirectDeposit: true,
    profile_lighthouse_direct_deposit: true,
    profileUserClaims: true,
    profile_user_claims: true,
    profileShowMHVNotificationSettings: false,
    profile_show_mhv_notification_settings: false,
    profileShowMilitaryAcademyAttendance: false,
    profile_show_military_academy_attendance: false,
    profileHideDirectDepositCompAndPen: false,
    profile_hide_direct_deposit_comp_and_pen: false,
    profileShowEmailNotificationSettings: false,
    profile_show_email_notification_settings: false,
    profileShowPaymentsNotificationSetting: true,
    profile_show_payments_notification_setting: true,
    profileShowPronounsAndSexualOrientation: false,
    profile_show_pronouns_and_sexual_orientation: false,
    profileShowQuickSubmitNotificationSetting: false,
    profile_show_quick_submit_notification_setting: false,
    profileShowProofOfVeteranStatus: false,
    profile_show_proof_of_veteran_status: false,
    profileUseExperimental: false,
    profile_use_experimental: false,
    profileUseFieldEditingPage: true,
    profile_use_field_editing_page: true,
    profileUseHubPage: true,
    profile_use_hub_page: true,
    profileUseNotificationSettingsCheckboxes: true,
    profile_use_notification_settings_checkboxes: true,
    profileUseVafsc: false,
    profile_use_vafsc: false,
    profileContacts: true,
    profile_contacts: true,
    pwEhrCtaDrupalSourceOfTruth: true,
    pw_ehr_cta_drupal_source_of_truth: true,
    pwEhrCtaUseSlo: true,
    pw_ehr_cta_use_slo: true,
    myVAExperimental: false,
    my_va_experimental: false,
    myVAExperimentalFrontend: true,
    my_va_experimental_frontend: true,
    myVAExperimentalFullstack: false,
    my_va_experimental_fullstack: false,
    myVAHideNotificationsSection: true,
    my_va_hide_notifications_section: true,
    myVANotificationComponent: true,
    my_va_notification_component: true,
    myVANotificationDotIndicator: true,
    my_va_notification_dot_indicator: true,
    myVAUpdateErrorsWarnings: true,
    my_va_update_errors_warnings: true,
    myVAShowHeaderLink: false,
    my_va_show_header_link: false,
    ratedDisabilitiesDetectDiscrepancies: false,
    rated_disabilities_detect_discrepancies: false,
    ratedDisabilitiesSortAbTest: false,
    rated_disabilities_sort_ab_test: false,
    ratedDisabilitiesUseLighthouse: false,
    rated_disabilities_use_lighthouse: false,
    searchRepresentative: false,
    search_representative: false,
    searchDropdownComponentEnabled: true,
    search_dropdown_component_enabled: true,
    sharableLink: true,
    sharable_link: true,
    show526Wizard: true,
    show526_wizard: true,
    showEduBenefits0994Wizard: true,
    show_edu_benefits_0994_wizard: true,
    showEduBenefits1990Wizard: true,
    show_edu_benefits_1990_wizard: true,
    showEduBenefits1990eWizard: false,
    show_edu_benefits_1990e_wizard: false,
    showEduBenefits1990nWizard: false,
    show_edu_benefits_1990n_wizard: false,
    showEduBenefits1995Wizard: true,
    show_edu_benefits_1995_wizard: true,
    showEduBenefits5490Wizard: true,
    show_edu_benefits_5490_wizard: true,
    showEduBenefits5495Wizard: true,
    show_edu_benefits_5495_wizard: true,
    showEventsV2: true,
    show_events_v2: true,
    showFinancialStatusReport: true,
    show_financial_status_report: true,
    showFinancialStatusReportWizard: true,
    show_financial_status_report_wizard: true,
    showFormI18n: false,
    show_form_i18n: false,
    showHeaderV2: true,
    show_header_v2: true,
    showMebUnverifiedUserAlert: true,
    show_meb_unverified_user_alert: true,
    showMeb1990ezMaintenanceAlert: false,
    show_meb_1990EZ_maintenance_alert: false,
    showMeb1990eMaintenanceAlert: false,
    show_meb_1990E_maintenance_alert: false,
    showMebLettersMaintenanceAlert: false,
    show_meb_letters_maintenance_alert: false,
    showMebEnrollmentVerificationMaintenanceAlert: false,
    show_meb_enrollment_verification_maintenance_alert: false,
    showMebInternationalAddressPrefill: true,
    show_meb_international_address_prefill: true,
    showMebServiceHistoryCategorizeDisagreement: false,
    show_meb_service_history_categorize_disagreement: false,
    showFormsApp: true,
    show_forms_app: true,
    showMedicalCopays: true,
    show_medical_copays: true,
    signInServiceEnabled: true,
    sign_in_service_enabled: true,
    signInPageAndModalExperimentLga: false,
    sign_in_page_and_modal_experiment_lga: false,
    medicalCopaysZeroDebt: false,
    medical_copays_zero_debt: false,
    showHealthcareExperienceQuestionnaire: true,
    show_healthcare_experience_questionnaire: true,
    showNewGetMedicalRecordsPage: true,
    show_new_get_medical_records_page: true,
    showNewRefillTrackPrescriptionsPage: true,
    show_new_refill_track_prescriptions_page: true,
    showNewScheduleViewAppointmentsPage: true,
    show_new_schedule_view_appointments_page: true,
    showNewSecureMessagingPage: true,
    show_new_secure_messaging_page: true,
    showNewViewTestLabResultsPage: true,
    show_new_view_test_lab_results_page: true,
    showUpdatedFryDeaApp: false,
    show_updated_fry_dea_app: false,
    spoolTestingError2: true,
    spool_testing_error_2: true,
    spoolTestingError3: true,
    spool_testing_error_3: true,
    stemAutomatedDecision: true,
    stem_automated_decision: true,
    subform89404192: false,
    subform_8940_4192: false,
    supplementalClaim: true,
    supplemental_claim: true,
    vaOnlineScheduling: true,
    va_online_scheduling: true,
    vaOnlineSchedulingCancel: true,
    va_online_scheduling_cancel: true,
    vaOnlineSchedulingCommunityCare: true,
    va_online_scheduling_community_care: true,
    vaOnlineSchedulingDirect: true,
    va_online_scheduling_direct: true,
    vaOnlineSchedulingRequests: true,
    va_online_scheduling_requests: true,
    vaOnlineSchedulingStaticLandingPage: true,
    va_online_scheduling_static_landing_page: true,
    vaOnlineSchedulingGa4Migration: false,
    va_online_scheduling_GA4_migration: false,
    vaOnlineSchedulingUnenrolledVaccine: true,
    va_online_scheduling_unenrolled_vaccine: true,
    vaOnlineSchedulingVAOSServiceCCAppointments: true,
    va_online_scheduling_vaos_service_cc_appointments: true,
    vaOnlineSchedulingVAOSServiceRequests: true,
    va_online_scheduling_vaos_service_requests: true,
    vaOnlineSchedulingVAOSServiceVAAppointments: true,
    va_online_scheduling_vaos_service_va_appointments: true,
    vaOnlineSchedulingFacilitiesServiceV2: true,
    va_online_scheduling_facilities_service_v2: true,
    vaOnlineSchedulingClinicLocation: false,
    va_online_scheduling_clinic_location: false,
    vaOnlineSchedulingStatusImprovement: true,
    va_online_scheduling_status_improvement: true,
    vaOnlineSchedulingStatusImprovementCanceled: false,
    va_online_scheduling_status_improvement_canceled: false,
    vaOnlineSchedulingVAOSV2Next: true,
    va_online_scheduling_vaos_v2_next: true,
    vaOnlineSchedulingClinicFilter: true,
    va_online_scheduling_clinic_filter: true,
    vaOnlineSchedulingAppointmentList: true,
    va_online_scheduling_appointment_list: true,
    vaOnlineSchedulingAcheronService: true,
    va_online_scheduling_acheron_service: true,
    vaOnlineSchedulingBreadcrumbUrlUpdate: true,
    va_online_scheduling_breadcrumb_url_update: true,
    vaOnlineSchedulingPrintList: true,
    va_online_scheduling_print_list: true,
    vaOnlineSchedulingDescriptiveBackLink: true,
    va_online_scheduling_descriptive_back_link: true,
    vaOnlineSchedulingUseDsot: true,
    va_online_scheduling_use_dsot: true,
    vaOnlineSchedulingRequestFlowUpdate: false,
    va_online_scheduling_request_flow_update: false,
    vaOnlineSchedulingPocTypeOfCare: false,
    va_online_scheduling_poc_type_of_care: false,
    vaOnlineSchedulingRequiredSchedulableParam: true,
    va_online_scheduling_required_schedulable_param: true,
    vaOnlineSchedulingAfterVisitSummary: false,
    va_online_scheduling_after_visit_summary: false,
    vaOnlineSchedulingStartSchedulingLink: false,
    va_online_scheduling_start_scheduling_link: false,
    vaViewDependentsAccess: true,
    va_view_dependents_access: true,
    yellowRibbonMvpEnhancement: true,
    yellow_ribbon_mvp_enhancement: true,
    showEduBenefits1990ezWizard: true,
    show_edu_benefits_1990EZ_Wizard: true,
    showDashboardNotifications: true,
    show_dashboard_notifications: true,
    checkVAInboxEnabled: false,
    check_va_inbox_enabled: false,
    dhpConnectedDevicesFitbit: false,
    dhp_connected_devices_fitbit: false,
    showExpandableVamcAlert: true,
    show_expandable_vamc_alert: true,
    paymentHistory: true,
    payment_history: true,
    showDigitalForm1095b: true,
    show_digital_form_1095b: true,
    showMebDgi40Features: true,
    show_meb_dgi40_features: true,
    showMebDgi42Features: true,
    show_meb_dgi42_features: true,
    showMebEnhancements: true,
    show_meb_enhancements: true,
    showMebEnhancements06: true,
    show_meb_enhancements_06: true,
    showMebEnhancements08: true,
    show_meb_enhancements_08: true,
    showMebEnhancements09: true,
    show_meb_enhancements_09: true,
    mebGatePersonCriteria: true,
    meb_gate_person_criteria: true,
    supplyReorderingSleepApneaEnabled: true,
    supply_reordering_sleep_apnea_enabled: true,
    toeShortCircuitBGSFailure: true,
    toe_short_circuit_bgs_failure: true,
    moveFormBackButton: false,
    move_form_back_button: false,
    mobileLighthouseLetters: false,
    mobile_lighthouse_letters: false,
    mobileLighthouseDirectDeposit: false,
    mobile_lighthouse_direct_deposit: false,
    mobileLighthouseClaims: false,
    mobile_lighthouse_claims: false,
    mobileLighthouseRequestDecision: false,
    mobile_lighthouse_request_decision: false,
    mobileLighthouseDocumentUpload: false,
    mobile_lighthouse_document_upload: false,
    mobileLighthouseDisabilityRatings: false,
    mobile_lighthouse_disability_ratings: false,
    form526BackupSubmissionTempKillswitch: false,
    form526_backup_submission_temp_killswitch: false,
    form526BackupSubmissionForceOfframp: true,
    form526_backup_submission_force_offramp: true,
    virtualAgentShowFloatingChatbot: false,
    virtual_agent_show_floating_chatbot: false,
    disabilityCompensationLighthouseRatedDisabilitiesProviderForeground: false,
    disability_compensation_lighthouse_rated_disabilities_provider_foreground: false,
    disabilityCompensationLighthouseRatedDisabilitiesProviderBackground: false,
    disability_compensation_lighthouse_rated_disabilities_provider_background: false,
    disabilityCompensationLighthouseDocumentServiceProvider: false,
    disability_compensation_lighthouse_document_service_provider: false,
    disabilityCompensationLighthouseClaimsServiceProvider: true,
    disability_compensation_lighthouse_claims_service_provider: true,
    disabilityCompensationLighthouseSubmitMigration: false,
    disability_compensation_lighthouse_submit_migration: false,
    disabilityCompensationLighthouseIntentToFileProvider: false,
    disability_compensation_lighthouse_intent_to_file_provider: false,
    disabilityCompensationLighthousePPIUDirectDepositProvider: false,
    disability_compensation_lighthouse_ppiu_direct_deposit_provider: false,
    virtualAgentFetchJwtToken: true,
    virtual_agent_fetch_jwt_token: true,
    drupalFooter: false,
    drupal_footer: false,
    myVALighthouseClaims: false,
    my_va_lighthouse_claims: false,
    virtualAgentLighthouseClaims: true,
    virtual_agent_lighthouse_claims: true,
    virtualAgentVoice: false,
    virtual_agent_voice: false,
    notificationCenter: false,
    notification_center: false,
    nodPart3Update: true,
    nod_part3_update: true,
    nodBrowserMonitoringEnabled: true,
    nod_browser_monitoring_enabled: true,
    hlrBrowserMonitoringEnabled: true,
    hlr_browser_monitoring_enabled: true,
    scBrowserMonitoringEnabled: true,
    sc_browser_monitoring_enabled: true,
    virtualAgentEnablePva2Chatbot: false,
    virtual_agent_enable_pva2_chatbot: false,
    virtualAgentUpgradeWebchat14158: false,
    virtual_agent_upgrade_webchat_14_15_8: false,
    termsOfUse: true,
    terms_of_use: true,
    burialFormEnabled: false,
    burial_form_enabled: false,
    pensionFormEnabled: false,
    pension_form_enabled: false,
    veteranStatusUpdated: true,
    veteran_status_updated: true,
    virtualAgentEnableParamErrorDetection: false,
    virtual_agent_enable_param_error_detection: false,
  },
  drupalStaticData: {
    vamcEhrData: {
      loading: true,
      data: [],
    },
  },
  navigation: {
    showFormSignInModal: false,
    showLoginModal: false,
    showAccountTransitionModal: false,
    showAccountTransitionSuccessModal: false,
    utilitiesMenuIsOpen: {
      search: false,
      help: false,
      account: false,
    },
  },
  scheduledDowntime: {
    globalDowntime: null,
    isReady: false,
    isPending: false,
    serviceMap: null,
    dismissedDowntimeWarnings: [],
  },
  i18State: {
    lang: 'en',
  },
  user: {
    login: {
      currentlyLoggedIn: false,
      hasCheckedKeepAlive: true,
    },
    profile: {
      userFullName: {
        first: null,
        middle: null,
        last: null,
        suffix: null,
      },
      email: null,
      dob: null,
      gender: null,
      accountType: null,
      accountUuid: null,
      isCernerPatient: false,
      loa: {
        current: null,
        highest: null,
      },
      verified: false,
      mhvAccount: {
        accountLevel: null,
        accountState: null,
        errors: null,
        loading: false,
        termsAndConditionsAccepted: false,
      },
      vapContactInfo: {},
      savedForms: [],
      prefillsAvailable: [],
      loading: false,
      services: [],
      session: {},
      mhvTransitionEligible: false,
      errors: false,
    },
  },
  megaMenu: {
    currentDropdown: '',
    currentSection: '',
    display: {},
  },
};

describe('SchoolSearch', () => {
  it('should pass selectCurrentPageNumber', () => {
    const currentPageNumber = schoolSearch.selectCurrentPageNumber(state);
    expect(currentPageNumber).to.eql(1);
  });
  it('should pass selectInstitutionQuery', () => {
    const institutionQuery = schoolSearch.selectInstitutionQuery(state);
    expect(institutionQuery).to.eql('');
  });
  it('should pass selectInstitutions', () => {
    const institutions = schoolSearch.selectInstitutions(state);
    expect(institutions).to.eql([]);
  });
  it('should pass selectInstitutionSelected', () => {
    const institutionSelected = schoolSearch.selectInstitutionSelected(state);
    expect(institutionSelected).to.eql({});
  });
  it('should pass selectInstitutionSelected', () => {
    const institutionSelected = schoolSearch.selectInstitutionSelected(state);
    expect(institutionSelected).to.eql({});
  });
  it('should pass selectManualSchoolEntryChecked', () => {
    const manualSchoolEntryChecked = schoolSearch.selectManualSchoolEntryChecked(
      state,
    );
    expect(manualSchoolEntryChecked).to.be.false;
  });
  it('should pass selectPagesCount', () => {
    const pagesCount = schoolSearch.selectPagesCount(state);
    expect(pagesCount).to.eql(0);
  });
  it('should pass selectSearchInputValue', () => {
    const searchInputValue = schoolSearch.selectSearchInputValue(state);
    expect(searchInputValue).to.eql('');
  });
  it('should pass selectSearchResultsCount', () => {
    const searchResultsCount = schoolSearch.selectSearchResultsCount(state);
    expect(searchResultsCount).to.eql(0);
  });
  it('should pass selectShowInstitutions', () => {
    const showInstitutions = schoolSearch.selectShowInstitutions(state);
    expect(showInstitutions).to.be.false;
  });
  it('should pass selectShowInstitutionsLoading', () => {
    const showInstitutionsLoading = schoolSearch.selectShowInstitutionsLoading(
      state,
    );
    expect(showInstitutionsLoading).to.be.false;
  });
  it('should pass selectShowNoResultsFound', () => {
    const showNoResultsFound = schoolSearch.selectShowNoResultsFound(state);
    expect(showNoResultsFound).to.be.false;
  });
  it('should pass selectShowPagination', () => {
    const showPagination = schoolSearch.selectShowPagination(state);
    expect(showPagination).to.be.false;
  });
  it('should pass selectShowPaginationLoading', () => {
    const showPaginationLoading = schoolSearch.selectShowPaginationLoading(
      state,
    );
    expect(showPaginationLoading).to.eql(false);
  });
  it('should pass selectShowSearchResults', () => {
    const showSearchResults = schoolSearch.selectShowSearchResults(state);
    expect(showSearchResults).to.be.true;
  });
});
