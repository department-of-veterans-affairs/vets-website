## ‚úÖ Frontend Deployment Checklist

This checklist documents the process for **vets-website** and **content-build** deployments, including planned, off-cycle, Out-of-Band (OOB), and Off-Hours Deploy (OHD) scenarios.

---
name: "Frontend Deployment Checklist"
about: "Checklist for vets-website and content-build manual, OOB, and OHD deploys"
title: "[FE Deploy] vets-website or content-build"
labels: [deployment, frontend, platform]
---

## üß≠ Vets-Website Deployment Instructions

### **Before Deploying**
- [ ] Wait for the `vets-website` build to complete in GitHub Actions.
- [ ] If the build fails ‚Üí open the failed workflow ‚Üí click **Re-run jobs ‚Üí Re-run all jobs**.

### **Verify Readiness**
- [ ] Review commit history since the last deploy.
- [ ] Confirm all commits are production-ready.
- [ ] Contact commit authors if verification is needed.

### **Start Deploy Job**
- [ ] Go to [vets-website Daily Production Deploy](https://github.com/department-of-veterans-affairs/vets-website/actions/workflows/daily-production-deploy.yml).
- [ ] Click **Run workflow** at the top.
- [ ] Verify:
  - [ ] **Use workflow from:** `Branch: main`
  - [ ] **Minutes to wait before creating release:** `5 minutes`
- [ ] Click **Run workflow**.
- [ ] Wait for workflow completion ‚Äî you‚Äôll be prompted to approve the deployment.
- [ ] Approve via **Review deployments**:
  - [ ] Check **Production (target env)**.
  - [ ] Click **Approve and deploy**.
- [ ] If not an admin ‚Üí request help in **#platform-cop-frontend**.

### **Verify Completion**
- [ ] Confirm GitHub Actions notification in **#status-vets-website** Slack channel.
- [ ] Validate commit list in deploy message matches expected changes.
- [ ] Verify changes are live in production.

---

## üß™ Vets-Website ‚Äì Dev or Staging Deployment

**When to Use:**  
Use this process when staging is behind production or pipeline congestion prevents auto-sync.

### **Steps**
- [ ] Confirm the target commit passed CI in `main`.
- [ ] Copy the commit SHA/ref.
- [ ] Visit [vets-website Manual dev/staging Deploy](https://github.com/department-of-veterans-affairs/vets-website/actions/workflows/manual-deploy.yml).
- [ ] Click **Run workflow**.
- [ ] Verify:
  - [ ] **Use workflow from:** `Branch: main`
  - [ ] **Deploy a specific commit:** (paste SHA)
  - [ ] **Environment:** (`staging` or `dev`)
- [ ] Click **Run workflow**.
- [ ] Monitor workflow progress.
- [ ] Confirm that the deployed commit matches the target environment.

---

## üß≠ Content-Build Deployment Instructions

### **Before Deploying**
- [ ] Wait for the build pipeline to complete successfully in `main`.
- [ ] Check commit history since last deploy.
- [ ] Confirm all commits are content-ready (Drupal + vagov-content).
- [ ] Verify with commit authors if needed.

### **Content-Only Production Deploy**
- [ ] Visit [content-build Content Release](https://github.com/department-of-veterans-affairs/content-build/actions/workflows/content-release.yml).
- [ ] Click **Run workflow**.
- [ ] Verify:
  - [ ] **Use workflow from:** `Branch: main`
  - [ ] **Minutes to wait before creating release:** `5 minutes`
  - [ ] **Environment:** `prod`
- [ ] Click **Run workflow**.
- [ ] Wait for workflow completion.
- [ ] Verify Slack notification in **#status-content-build** channel.
- [ ] Confirm commit list matches intended release.

### **Full Production Deploy**
- [ ] Visit [content-build Daily Production Release](https://github.com/department-of-veterans-affairs/content-build/actions/workflows/daily-production-release.yml).
- [ ] Click **Run workflow**.
- [ ] Verify:
  - [ ] **Use workflow from:** `Branch: main`
  - [ ] **Minutes to wait before creating release:** `5 minutes`
- [ ] Click **Run workflow**.
- [ ] Confirm completion message and Slack notification.
- [ ] Validate commits in Slack message match expected release.
- [ ] Verify content changes are visible in production.

---

## üö® Out-of-Band (OOB) Deployment Instructions

**When to Use:**  
Urgent deployments outside the standard window due to incidents, outages, or critical issues.  
Requires **OCTO-DE approval** and a **postmortem within two business days**.

### **Approval Process**
- [ ] Open `/support` request in **#vfs-platform-support**.
- [ ] Assign to the appropriate owning team (e.g., Release Tools, Console Service Team).
- [ ] Select **‚ÄúOff-Cycle Deployment‚Äù** as the request type.
- [ ] Include:
  - [ ] Summary of issue
  - [ ] Severity level
  - [ ] Detailed user impact (include # of users affected)
- [ ] Platform Support triggers PagerDuty using `/pd trigger`:
  - [ ] Select **‚ÄúOut-of-band Deployment (service)‚Äù**
  - [ ] Leave **Assign to** blank
  - [ ] Add summary, severity, user impact, and Slack thread link
- [ ] OCTO-DE Platform staff must **approve or decline**:
  - [ ] Tag OCTO on-call if online
  - [ ] PagerDuty will notify if offline
- [ ] Upon approval, Platform Support executes the deployment.
- [ ] Confirm completion in:
  - [ ] `#status-vets-website` (for vets-website changes)
  - [ ] `#status-content-build` (for content-build changes)
- [ ] Within 2 business days:
  - [ ] Open postmortem PR using the [OOB Deploy Request Template](https://github.com/department-of-veterans-affairs/va.gov-team/issues/new?template=OOB-Deploy-Request.md)
  - [ ] Follow postmortem README.md instructions

---

## üåô Off-Hours Deployment (OHD) Instructions

**When to Use:**  
For deploys outside the daily window that do **not** qualify as OOB.  
These are higher-risk and require advance coordination.

### **Submit OHD Request**
- [ ] In **#vfs-platform-support**, open a support ticket using **‚ÄúOff Hours Deployment‚Äù** as the request topic.

### **Fill Out Ticket Template**
- [ ] Create an OHD Request Issue and verify:
  - [ ] **Description & Expectations:** What‚Äôs being deployed and expected outcome.
  - [ ] **Requesting Team:** Team name and point of contact.
  - [ ] **Date & Time:** Requested deploy schedule.
  - [ ] **Platform Maintenance Window:** If applicable, note specific window.
  - [ ] **Justification:** Why this cannot occur during daily window or as OOB.
  - [ ] **Potential Support Needed:** Backend, Frontend, DevOps, etc.

### **Coordination & Awareness**
- [ ] Tier 1 Support confirms:
  - [ ] All stakeholders agree on proposed time.
  - [ ] No conflicts with existing Maintenance Windows.
  - [ ] Ticket assigned to correct team and on-call T1/T2 staff.

### **Execution**
- [ ] Authorized engineers perform deploy at planned time.
- [ ] Validate environment health post-deploy.
- [ ] Report completion in relevant Slack channel:
  - [ ] `#status-vets-website`
  - [ ] `#status-content-build`

---

## üìã Post-Deployment Validation
- [ ] Confirm workflow completed successfully.
- [ ] Verify production/staging environments match expected commit.
- [ ] Review dashboards for performance or error anomalies.
- [ ] Document validation in related deploy ticket (Manual, OOB, or OHD).
- [ ] Notify leadership and affected teams once validation is complete.
