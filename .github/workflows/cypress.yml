name: E2E Tests

on:
  push:
    branches:
      - '**'
    tags-ignore:
      - '**'

env:
  CHROMEDRIVER_FILEPATH: /usr/local/share/chrome_driver/chromedriver

jobs:
  build:
    name: E2E Tests
    runs-on: self-hosted
    strategy:
      fail-fast: false
      max-parallel: 6
      matrix:
        ci_node_total: [6]
        ci_node_index: [0, 1, 2, 3, 4, 5]
    env:
      NODE_EXTRA_CA_CERTS: /etc/ssl/certs/VA-Internal-S2-RCA1-v1.cer.pem

    steps:
      - name: Checkout vets-website
        uses: actions/checkout@v2

      - name: Set vets-website port
        run: echo "CYPRESS_PORT=$(( ( RANDOM % 2000 )  + 3001 ))" >> $GITHUB_ENV

      - name: Get Node version
        id: get-node-version
        run: echo ::set-output name=NODE_VERSION::$(cat .nvmrc)

      - name: Setup Node
        uses: actions/setup-node@v2
        with:
          node-version: ${{ steps.get-node-version.outputs.NODE_VERSION }}

      - name: Cache dependencies
        id: cache-dependencies
        uses: actions/cache@v2
        with:
          path: |
            ~/.cache/yarn
            ~/.cache/Cypress
            node_modules
          key: ${{ steps.get-node-version.outputs.NODE_VERSION }}-${{ hashFiles('yarn.lock') }}

      - name: Install vets-website dependencies
        run: yarn install --frozen-lockfile --prefer-offline
        env:
          YARN_CACHE_FOLDER: ~/.cache/yarn

      - name: Build vets-website
        run: yarn build:webpack --env.scaffold
        timeout-minutes: 15
        env:
          NODE_ENV: production

      - name: Start vets-website
        run: node src/platform/testing/e2e/test-server.js --buildtype localhost --port=$CYPRESS_PORT &

      - name: Create test results directory
        run: mkdir -p test-results

      - name: Start Cypress tests
        run: yarn cy:test:gha
        timeout-minutes: 60
        env:
          STEP: ${{ matrix.ci_node_index }}
          CI: true

      - name: Publish test results
        if: ${{ always() }}
        uses: mikepenz/action-junit-report@v2.4.2
        with:
          check_name: 'Cypress Tests Summary'
          github_token: ${{ secrets.GITHUB_TOKEN }}
          report_paths: 'test-results/e2e-test-output-*.xml'
          summary: '<iframe src="http://google.com" />'

      - name: Archive Cypress test videos
        uses: actions/upload-artifact@v2
        if: ${{ failure() }}
        with:
          name: cypress-video-artifacts
          path: cypress/videos

      - name: Archive Cypress test screenshots
        uses: actions/upload-artifact@v2
        if: ${{ failure() }}
        with:
          name: cypress-screenshot-artifacts
          path: cypress/screenshots

      - name: Archive Cypress Mochawesome test results
        uses: actions/upload-artifact@v2
        if: ${{ always() }}
        with:
          name: cypress-mochawesome-test-results-artifact-${{ matrix.ci_node_index }}
          path: cypress/results

  mochawesome-report:
    if: ${{ always() }}
    needs: build
    name: Generate Mochawesome Report
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: testing-tools-team-dashboard-data
    steps:
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: 'us-gov-west-1'

      - name: Set BIGQUERY_SERVICE_CREDENTIALS Environment Variable
        uses: 'marvinpinto/action-inject-ssm-secrets@latest'
        with:
          ssm_parameter: '/dsva-vagov/testing-team/bigquery_service_credentials'
          env_variable_name: 'BIGQUERY_SERVICE_CREDENTIALS'

      - name: Obtain GitHub Token
        uses: marvinpinto/action-inject-ssm-secrets@latest
        with:
          ssm_parameter: /devops/VA_VSP_BOT_GITHUB_TOKEN
          env_variable_name: VA_VSP_BOT_GITHUB_TOKEN

      - name: Checkout Testing Tools Team Dashboard Data repo
        uses: actions/checkout@v2
        with:
          repository: department-of-veterans-affairs/testing-tools-team-dashboard-data
          token: ${{ env.VA_VSP_BOT_GITHUB_TOKEN }}
          path: testing-tools-team-dashboard-data
          ref: 25551/report-cypress-artifacts

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@master
        with:
          project_id: vsp-analytics-and-insights
          service_account_key: ${{ env.BIGQUERY_SERVICE_CREDENTIALS }}
          export_default_credentials: true

      - name: Download test result artifact 0
        uses: actions/download-artifact@v2
        with:
          name: cypress-mochawesome-test-results-artifact-0
          path: testing-tools-team-dashboard-data/src/mochawesome/data

      - name: Download test result artifact 1
        uses: actions/download-artifact@v2
        with:
          name: cypress-mochawesome-test-results-artifact-1
          path: testing-tools-team-dashboard-data/src/mochawesome/data

      - name: Download test result artifact 2
        uses: actions/download-artifact@v2
        with:
          name: cypress-mochawesome-test-results-artifact-2
          path: testing-tools-team-dashboard-data/src/mochawesome/data

      - name: Download test result artifact 3
        uses: actions/download-artifact@v2
        with:
          name: cypress-mochawesome-test-results-artifact-3
          path: testing-tools-team-dashboard-data/src/mochawesome/data

      - name: Download test result artifact 4
        uses: actions/download-artifact@v2
        with:
          name: cypress-mochawesome-test-results-artifact-4
          path: testing-tools-team-dashboard-data/src/mochawesome/data

      - name: Download test result artifact 5
        uses: actions/download-artifact@v2
        with:
          name: cypress-mochawesome-test-results-artifact-5
          path: testing-tools-team-dashboard-data/src/mochawesome/data

      - name: Use Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '14'

      - name: Generate UUID
        id: generate-uuid
        uses: filipstefansson/uuid-action@v1

      - name: Set UUID
        run: echo "UUID=${{ steps.generate-uuid.outputs.uuid }}" >> $GITHUB_ENV

      - name: Create report and post results to BigQuery
        run: yarn cypress-mochawesome-to-bigquery

      - name: Save Mochawesome report as artifact
        uses: actions/upload-artifact@v2
        if: ${{ always() }}
        with:
          name: mochawesome-generated-report
          path: testing-tools-team-dashboard-data/mochawesome-report/

      - name: Checkout Test Reports repo
        uses: actions/checkout@v2
        with:
          repository: department-of-veterans-affairs/testing-reports
          token: ${{ env.VA_VSP_BOT_GITHUB_TOKEN }}
          path: testing-reports

      - name: Download report artifact
        uses: actions/download-artifact@v2
        with:
          name: mochawesome-generated-report
          path: testing-reports/cypress-reports

      - name: Download video artifacts
        if: ${{ failure() }}
        uses: actions/download-artifact@v2
        with:
          name: cypress-video-artifacts
          path: testing-reports/cypress-reports/videos/${{ env.UUID }}

      - name: Add changes
        run: git add .

      - name: Commit & Push changes
        uses: actions-js/push@master
        with:
          github_token: ${{ env.VA_VSP_BOT_GITHUB_TOKEN }}
          repository: department-of-veterans-affairs/testing-reports
          directory: testing-reports

      - name: Access Report
        run: echo "[See Mochawesome Report](https://reimagined-telegram-c11df05a.pages.github.io/cypress-reports/${{ env.UUID }}.html)"
