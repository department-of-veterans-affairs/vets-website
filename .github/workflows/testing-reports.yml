name: Testing Reports

on:
  repository_dispatch:
    types: [tested]

jobs:
  testing-reports:
    name: Testing Reports
    runs-on: ubuntu-latest
    needs: [cypress-tests-prep, cypress-tests]
    if: ${{ always() && needs.cypress-tests-prep.outputs.num_containers > 0 && (needs.cypress-tests.result == 'success' || needs.cypress-tests.result == 'failure') }}
    continue-on-error: true
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: 'us-gov-west-1'

      - name: Get va-vsp-bot token
        uses: marvinpinto/action-inject-ssm-secrets@v1.1.1
        with:
          ssm_parameter: /devops/VA_VSP_BOT_GITHUB_TOKEN
          env_variable_name: VA_VSP_BOT_GITHUB_TOKEN

      # ----------------
      # | Notify Slack |
      # ----------------

      # - name: Checkout VSP actions
      #   if: ${{ needs.cypress-tests.result == 'failure' }}
      #   uses: actions/checkout@v2
      #   with:
      #     repository: department-of-veterans-affairs/vsp-github-actions
      #     ref: refs/heads/main
      #     token: ${{ env.VA_VSP_BOT_GITHUB_TOKEN }}
      #     persist-credentials: false
      #     path: ./.github/actions/vsp-github-actions

      # - name: Get Slack app token
      #   if: ${{ needs.cypress-tests.result == 'failure' }}
      #   uses: marvinpinto/action-inject-ssm-secrets@v1.1.1
      #   with:
      #     ssm_parameter: /devops/github_actions_slack_socket_token
      #     env_variable_name: SLACK_APP_TOKEN

      # - name: Get Slack bot token
      #   if: ${{ needs.cypress-tests.result == 'failure' }}
      #   uses: marvinpinto/action-inject-ssm-secrets@v1.1.1
      #   with:
      #     ssm_parameter: /devops/github_actions_slack_bot_user_token
      #     env_variable_name: SLACK_BOT_TOKEN

      # - name: Notify Slack about Cypress test failures
      #   if: ${{ needs.cypress-tests.result == 'failure' }}
      #   uses: ./.github/actions/vsp-github-actions/slack-socket
      #   env:
      #     SSL_CERT_DIR: /etc/ssl/certs
      #   with:
      #     slack_app_token: ${{ env.SLACK_APP_TOKEN }}
      #     slack_bot_token: ${{ env.SLACK_BOT_TOKEN }}
      #     attachments: '[{"mrkdwn_in": ["text"], "color": "danger", "text": "E2E tests in `vets-website` have failed, run: <https://github.com/${{github.repository}}/actions/runs/${{github.run_id}}|${{github.run_id}}>"}]'
      #     channel_id: C026PD47Z19 # gha-test-status

      # ------------------------
      # | Upload BigQuery Data |
      # ------------------------

      - name: Checkout Testing Tools Team Dashboard Data repo
        uses: actions/checkout@v2
        with:
          repository: department-of-veterans-affairs/testing-tools-team-dashboard-data
          token: ${{ env.VA_VSP_BOT_GITHUB_TOKEN }}
          path: testing-tools-team-dashboard-data

      # TODO: Set .nvmrc in testing-tools-team-dashboard-data.
      # - name: Get Node version
      #   id: get-node-version
      #   run: echo ::set-output name=NODE_VERSION::$(cat .nvmrc)
      #   working-directory: testing-tools-team-dashboard-data

      - name: Setup Node
        uses: actions/setup-node@v2
        with:
          node-version: 14 # ${{ steps.get-node-version.outputs.NODE_VERSION }}

      - name: Install dependencies
        run: yarn install --frozen-lockfile --prefer-offline --production=false
        env:
          YARN_CACHE_FOLDER: .cache/yarn
        working-directory: testing-tools-team-dashboard-data

      - name: Download Mochawesome test results
        uses: dawidd6/action-download-artifact@v2
        with:
          github_token: ${{secrets.GITHUB_TOKEN}}
          workflow: continuous-integration.yml
          name: cypress-mochawesome-test-results
          path: testing-tools-team-dashboard-data/src/mochawesome/data
          workflow_conclusion: completed

      - name: Get BigQuery service credentials
        uses: marvinpinto/action-inject-ssm-secrets@latest
        with:
          ssm_parameter: /dsva-vagov/testing-team/bigquery_service_credentials
          env_variable_name: BIGQUERY_SERVICE_CREDENTIALS

      - name: Setup Cloud SDK
        uses: google-github-actions/setup-gcloud@master
        with:
          project_id: vsp-analytics-and-insights
          service_account_key: ${{ env.BIGQUERY_SERVICE_CREDENTIALS }}
          export_default_credentials: true

      - name: Set UUID for Mochawesome report
        run: echo "UUID=$(uuidgen)" >> $GITHUB_ENV

      - name: Create report and post results to BigQuery
        run: yarn cypress-mochawesome-to-bigquery
        working-directory: testing-tools-team-dashboard-data
        env:
          IS_MASTER_BUILD: ${{ needs.cypress-tests-prep.outputs.is_master_build }}
          NUM_CONTAINERS: ${{ needs.cypress-tests-prep.outputs.num_containers }}

      # env.MOCHAWESOME_REPORT_RESULTS is set and exported during the above step when the mochawesome report is generated.  It contains the output string for the publish step at the end of the job with the numbers from the Mochawesome report.

      - name: Upload Mochawesome report artifact
        uses: actions/upload-artifact@v2
        with:
          name: mochawesome-report
          path: testing-tools-team-dashboard-data/mochawesome-report

      # --------------------------
      # | Publish Testing Report |
      # --------------------------

      - name: Checkout Testing Reports repo
        uses: actions/checkout@v2
        with:
          repository: department-of-veterans-affairs/testing-reports
          token: ${{ env.VA_VSP_BOT_GITHUB_TOKEN }}
          path: testing-reports

      # - name: Download Mochawesome report artifact
      #   uses: actions/download-artifact@v2
      #   with:
      #     name: mochawesome-report
      #     path: testing-reports/cypress-reports

      # - name: Download video artifacts
      #   if: ${{ needs.cypress-tests.result == 'failure' }}
      #   uses: actions/download-artifact@v2
      #   with:
      #     name: cypress-video-artifacts
      #     path: testing-reports/cypress-reports/videos/${{ env.UUID }}

      - name: Pull any changes since checkout
        run: git pull origin master
        working-directory: testing-reports

      - name: Add changes
        run: git add .
        working-directory: testing-reports

      - name: Commit and push changes
        uses: actions-js/push@master
        with:
          github_token: ${{ env.VA_VSP_BOT_GITHUB_TOKEN }}
          repository: department-of-veterans-affairs/testing-reports
          directory: testing-reports
          branch: master

      # -------------------------
      # | Cypress Tests Summary |
      # -------------------------

      - name: Publish Cypress test results
        if: ${{ always() }}
        uses: LouisBrunner/checks-action@v1.1.1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          name: Cypress Tests Summary
          conclusion: ${{ needs.cypress-tests.result }}
          output: |
            {"summary":${{ env.MOCHAWESOME_REPORT_RESULTS }}}
