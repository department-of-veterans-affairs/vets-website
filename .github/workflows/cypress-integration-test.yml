name: Cypress Integration Test Workflow

on:
    workflow_dispatch:
      inputs:
        commit_sha:
          description: 'Commit sha: rom your branch'  
        product:
          description: 'App: Your target product directory within src/applications'
          required: true
        # TO-DO: create a solution that maintains an updated list of active products within src/applications
  
env:
    BUILDTYPE: vagovprod
    VETS_WEBSITE_CHANNEL_ID: ''
  
jobs:
    check-for-existing-build:
      name: Check for archived build
      runs-on: ubuntu-latest
      steps:
        - name: Configure AWS Credentials
          uses: ./.github/workflows/configure-aws-credentials
          with:
            aws_id: ${{ secrets.AWS_ACCESS_KEY_ID }}
            aws_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            aws_region: us-gov-west-1

        - name: Find the build
          id: find-build
          run: |
            ARCHIVE_NAME=Z${{ github.event.inputs.commit_sha }}/vagovprod.tar.bz2
            BUCKET_PATH=s3://vetsgov-website-builds-s3-upload/artifacts
            TARGET_DIR=build/${{ env.BUILDTYPE }}

            aws s3 cd $BUCKET_PATH$ARCHIVE_NAME .

            if [ -f $ARCHIVE_NAME ]; then
             mkdir -p $TARGET_DIR
             tar -xvjf /vets-website/my_downloaded_image.tar.bz2 -C /vets-website
             echo "BUILD_EXISTS=true" >> GITHUB_ENV

             else
              echo "Archive not found. Build job will be run now."   
           
    build: 
      name: Build
      runs-on: ubuntu-latest
      needs: check-for-existing-build
      if: !env.BUILD_EXISTS
      steps:
        - name: Checkout
          uses: actions/checkout@cd7d8d697e10461458bc61a30d094dc601a8b017
          with:
            fetch-depth: 0
            ref: ${{ github.event.inputs.commit_sha }}
  
        - name: Install dependencies
          uses: ./.github/workflows/install
          timeout-minutes: 30
          with:
            key: ${{ hashFiles('yarn.lock') }}
            yarn_cache_folder: .cache/yarn
            path: |
              .cache/yarn
              node_modules
  
        - name: Configure AWS Credentials
          uses: ./.github/workflows/configure-aws-credentials
          with:
            aws_id: ${{ secrets.AWS_ACCESS_KEY_ID }}
            aws_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            aws_region: us-gov-west-1
  
        - name: Get va-vsp-bot token
          uses: ./.github/workflows/inject-secrets
          with:
            ssm_parameter: /devops/VA_VSP_BOT_GITHUB_TOKEN
            env_variable_name: VA_VSP_BOT_GITHUB_TOKEN

        - name: Build
          run: yarn build --verbose --buildtype=${{ env.BUILDTYPE }}
          timeout-minutes: 30
  
        - name: Generate build details
          run: |
            cat > build/${{ env.BUILDTYPE }}/BUILD.txt << EOF
            BUILDTYPE=${{ env.BUILDTYPE }}
            NODE_ENV=production
            BRANCH_NAME=$(echo "${GITHUB_REF#refs/heads/}")
            CHANGE_TARGET=null
            RUN_ID=${{ github.run_id }}
            RUN_NUMBER=${{ github.run_number }}
            REF=${{ github.sha }}
            BUILDTIME=$(date +%s)
            EOF
  
        - name: Compress and archive build
          run: tar -C build/${{ env.BUILDTYPE }} -cjf ${{ env.BUILDTYPE }}.tar.bz2 .
  
        - name: Upload build artifact
          uses: ./.github/workflows/upload-artifact
          with:
            name: ${{ env.BUILDTYPE }}.tar.bz2
            path: ${{ env.BUILDTYPE }}.tar.bz2
            retention-days: 1

    integration-test-prep:
      name: Set up variables for the integration test workflow
      runs-on: ubuntu-latest
      needs: build
      steps: 
  
      - name: Configure AWS Credentials
        uses: ./.github/workflows/configure-aws-credentials
        with:
          aws_id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws_region: us-gov-west-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2    
        with:
          mask-password: false
  
      - name: Get va-vsp-bot token
        uses: ./.github/workflows/inject-secrets
        with:
            ssm_parameter: /devops/VA_VSP_BOT_GITHUB_TOKEN
            env_variable_name: VA_VSP_BOT_GITHUB_TOKEN
            
      - name: Checkout
        uses: actions/checkout@cd7d8d697e10461458bc61a30d094dc601a8b017
        with:
          fetch-depth: 0
          ref: ${{ github.event.inputs.commit_sha }}
          
      - name: Run integration helper script
        run: |
          chmod +x ./script/github-actions/cypress-integration-test.sh 
          ./script/github-actions/cypress-integration-test.sh "${{ github.event.inputs.product }}"
      outputs:      
        ECR_USER: ${{ steps.login-ecr.outputs.docker_username_008577686731_dkr_ecr_us_gov_west_1_amazonaws_com }}
        ECR_PASSWORD: ${{ steps.login-ecr.outputs.docker_password_008577686731_dkr_ecr_us_gov_west_1_amazonaws_com }}


    run-cypress-tests:
        name: Call Cypress test action
        runs-on: ubuntu-latest
        needs: integration-test-prep
        steps:

        - name: call action in vsp-github-actions
          uses: department-of-veterans-affairs/vsp-github-actions/cypress-integration-test/action.yaml@dc1094f87682a36aa9ac04575dc76162300f6654
  
