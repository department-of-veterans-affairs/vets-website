name: Preview Environment Deployment

on:
  repository_dispatch:
    types: [deploy_review_instance]
  push:
    branches:
      - '**'

jobs:
  deploy-preview-environment:
    name: Deploy Preview Environment
    runs-on: ubuntu-latest
    steps:
      - name: Set default source branch
        if: ${{ github.event_name == 'push' }}
        run: |
          echo "SOURCE_REF=${{ github.ref_name }}" >> $GITHUB_ENV
          echo "API_BRANCH=master" >> $GITHUB_ENV

      - name: Set custom source branch
        if: ${{ github.event_name == 'repository_dispatch' }}
        run: |
          echo "SOURCE_REF=${{ github.event.client_payload.source_ref }}" >> $GITHUB_ENV
          echo "API_BRANCH=${{ github.event.client_payload.api_branch }}" >> $GITHUB_ENV

      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: ${{ env.SOURCE_REF }}

      - name: Setup Environment
        run: echo "VETS_WEBSITE_USER_ID=$(id -u)" >> $GITHUB_ENV

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-gov-west-1

      - name: Get va-vsp-bot token
        uses: marvinpinto/action-inject-ssm-secrets@v1.2.1
        with:
          ssm_parameter: /devops/VA_VSP_BOT_GITHUB_TOKEN
          env_variable_name: VA_VSP_BOT_GITHUB_TOKEN

      - name: Login to ECR # Update ECR credentials if necessary
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Get AWS IAM role
        uses: marvinpinto/action-inject-ssm-secrets@v1.2.1
        with:
          ssm_parameter: /frontend-team/github-actions/parameters/AWS_FRONTEND_NONPROD_ROLE
          env_variable_name: AWS_FRONTEND_NONPROD_ROLE

      - name: Configure AWS Credentials (2)
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-gov-west-1
          role-to-assume: ${{ env.AWS_FRONTEND_NONPROD_ROLE }}
          role-duration-seconds: 900
          role-session-name: vsp-frontendteam-githubaction

      - name: Install dependencies
        uses: ./.github/workflows/install
        timeout-minutes: 30
        with:
          key: ${{ hashFiles('yarn.lock') }}
          yarn_cache_folder: .cache/yarn
          path: |
            .cache/yarn
            node_modules

      - name: Start Deployment
        if: ${{ github.event_name == 'push' }}
        uses: bobheadxi/deployments@v1
        id: deployment
        with:
          step: start
          token: ${{ env.VA_VSP_BOT_GITHUB_TOKEN }}
          env: master/${{ github.ref_name }}/main
          ref: ${{ github.ref_name }}

      - name: Get most recent cache file url
        run: echo "MOST_RECENT_CONTENT=$(echo $(aws s3 ls vetsgov-website-builds-s3-upload/content-build --recursive | sort | tail -n 1 | awk '{print $4}'))" >> $GITHUB_ENV

      - name: Trim Most Recent File path
        run: node ./script/github-actions/pe-get-content.js

      - name: Get Source Repo and Source Ref
        run: node ./script/github-actions/pe-deploy-source.js
        env:
          SOURCE_EVENT: ${{ github.event_name }}
          SOURCE_REPO: ${{ github.event.client_payload.source_repo }}
          SOURCE_DEPLOYMENT: ${{ github.event.client_payload.deployment_id }}
          WORKFLOW_DEPLOYMENT: ${{ steps.deployment.outputs.deployment_id }}
          PE_EXPIRATION_DAYS: ${{ github.event.client_payload.expiration_days }}

      - name: Build Docker Image #use "file" input to designate alternate dockerfile path. Defaults to "Dockerfile": https://github.com/docker/build-push-action
        uses: docker/build-push-action@v2
        with:
          build-args: |
            "AWS_URL=${{ env.AWS_URL }}"
            "SOURCE_REF=${{ env.SOURCE_REF}}"
          context: .
          file: src/platform/utilities/preview-environment/Dockerfile
          # target: production
          push: true
          # Update tags and ECR Repository
          tags: |
            ${{ steps.login-ecr.outputs.registry }}/dsva/preview-environment/${{ env.SOURCE_REPO }}:${{ env.SOURCE_REF_SANITIZED }}
          # cache-from: type=registry,ref=$ECR_REGISTRY/$ECR_REPOSITORY
          # cache-to: type=inline

      - name: Repository Dispatch
        uses: peter-evans/repository-dispatch@v2
        with:
          token: ${{ env.VA_VSP_BOT_GITHUB_TOKEN }}
          event-type: deploy_review_instance
          repository: department-of-veterans-affairs/devops
          client-payload: '{"source_repo": "${{ env.SOURCE_REPO }}", "source_ref": "${{ env.SOURCE_REF }}", "source_ref_sanitized": "${{ env.SOURCE_REF_SANITIZED }}", "expiration_days": "${{ env.EXPIRATION_DAYS }}", "deployment_id": "${{ env.DEPLOYMENT_ID }}", "web_branch": "${{ env.SOURCE_REF }}", "api_branch": "${{ env.API_BRANCH }}" }'
          # Once docker image is built, add the name of the image to this object as a new property.
