name: Lighthouse CI

on: push
  # workflow_dispatch:
  # schedule:
  #   - cron: '0 12 * * 1-5'

env:
  CHANNEL_ID: C02A8S3JPNZ

jobs:
  job1:
    runs-on: ubuntu-latest
    outputs:
      rootURLS: ${{ steps.set-matrix.outputs.rootURLS }}
      appNames: ${{ steps.set-matrix.outputs.appNames }}
    steps:
      - uses: actions/checkout@master
        with:
          repository: department-of-veterans-affairs/content-build
          ref: refs/heads/master
          path: ./content-build
      - id: set-matrix
        run: |
          echo ::set-output name=rootURLS::$(jq '[.[].rootURL]' ./content-build/src/applications/registry.json)
          echo ::set-output name=appNames::$(jq '[.[].appName]' ./content-build/src/applications/registry.json)

  lighthouse:
    needs: job1
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      max-parallel: 8
      matrix:
        - rootURL: ${{ fromJson(needs.job1.outputs.rootURLS) }}
          appName: ${{ fromJson(needs.job1.outputs.appNames) }}

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Configure AWS credentials (1)
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-gov-west-1

      - name: Get role from Parameter Store
        uses: marvinpinto/action-inject-ssm-secrets@v1.2.1
        with:
          ssm_parameter: /frontend-team/github-actions/parameters/AWS_FRONTEND_NONPROD_ROLE
          env_variable_name: AWS_FRONTEND_NONPROD_ROLE

      - name: Configure AWS Credentials (2)
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-gov-west-1
          role-to-assume: ${{ env.AWS_FRONTEND_NONPROD_ROLE }}
          role-duration-seconds: 900
          role-session-name: vsp-frontendteam-githubaction

      - name: Audit URLs using Lighthouse on ${{ matrix.rootUrl }}
        id: lighthouse-checks
        uses: treosh/lighthouse-ci-action@v8
        with:
          urls: |
            https://va.gov${{ matrix.rootUrl }}
          uploadArtifacts: true # save results as an action artifacts

      - name: Upload lighthouse report (JSON)
        run: aws s3 cp ${{ fromJSON(steps.lighthouse-checks.outputs.manifest)[0].jsonPath }} s3://vetsgov-website-builds-s3-upload/lighthouse/archive${{ matrix.rootUrl }}.json --acl public-read --region us-gov-west-1

      - name: Upload lighthouse report (HTML)
        run: aws s3 cp ${{ fromJSON(steps.lighthouse-checks.outputs.manifest)[0].htmlPath }} s3://vetsgov-website-builds-s3-upload/lighthouse/archive${{ matrix.rootUrl }}.html --acl public-read --region us-gov-west-1

      # - name: Notify Slack
      #   if: ${{ always() }}
      #   uses: ./.github/actions/vsp-github-actions/slack-socket
      #   env:
      #     SSL_CERT_DIR: /etc/ssl/certs
      #   with:
      #     slack_app_token: ${{ env.SLACK_APP_TOKEN }}
      #     slack_bot_token: ${{ env.SLACK_BOT_TOKEN }}
      #     attachments: '[{"mrkdwn_in": ["text"], "color": "good", "text": "The Lighthouse scan for today just finished! <https://s3-us-gov-west-1.amazonaws.com/vetsgov-website-builds-s3-upload/lighthouse/homepage.html|View the results>"}]'
      #     channel_id: ${{ env.CHANNEL_ID }}
