name: E2E Code Coverage

on:
  push:
    branches:
      - '**'
    tags-ignore:
      - '**'



jobs:
  build:
    name: Build
    runs-on: ubuntu-16-cores-latest
    outputs:
      entry_names: ${{ steps.get-changed-apps.outputs.entry_names }}
      continuous_deployment: ${{ steps.get-changed-apps.outputs.continuous_deployment }}

    strategy:
      fail-fast: false
      matrix:
        buildtype: [vagovdev, vagovstaging, vagovprod]

    steps:
      - name: Checkout
        uses: actions/checkout@cd7d8d697e10461458bc61a30d094dc601a8b017
        with:
          fetch-depth: 0

      - name: Configure AWS credentials
        if: ${{ matrix.buildtype == 'vagovprod' }}
        uses: ./.github/workflows/configure-aws-credentials
        with:
          aws_id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws_region: us-gov-west-1
              
      - name: Install dependencies
        uses: ./.github/workflows/install
        timeout-minutes: 30
        with:
          key: ${{ hashFiles('yarn.lock') }}
          yarn_cache_folder: .cache/yarn
          path: |
            .cache/yarn
            node_modules

      - name: Get changed applications
        id: get-changed-apps
        uses: ./.github/workflows/get-changed-apps
        with:
          delimiter: ','
          output-type: 'entry_name, continuous_deployment'

      - name: Get Mapbox Token
        if: ${{ matrix.buildtype == 'vagovprod' }}
        uses: ./.github/workflows/inject-secrets
        with:
          ssm_parameter: /dsva-vagov/vets-website/dev/mapbox_token
          env_variable_name: MAPBOX_TOKEN

      - name: Build
        run: yarn build --verbose --buildtype=${{ matrix.buildtype }} ${ENTRY:+"--entry=$ENTRY"}
        timeout-minutes: 30
        env:
          ENTRY: ${{ steps.get-changed-apps.outputs.entry_names }}

      - name: Generate build details
        run: |
          cat > build/${{ matrix.buildtype }}/BUILD.txt << EOF
          BUILDTYPE=${{ matrix.buildtype }}
          NODE_ENV=production
          BRANCH_NAME=$(echo "${GITHUB_REF#refs/heads/}")
          CHANGE_TARGET=null
          RUN_ID=${{ github.run_id }}
          RUN_NUMBER=${{ github.run_number }}
          REF=${{ github.sha }}
          BUILDTIME=$(date +%s)
          EOF

      - name: Compress and archive build
        run: tar -C build/${{ matrix.buildtype }} -cjf ${{ matrix.buildtype }}.tar.bz2 .

      - name: Upload build artifact
        uses: ./.github/workflows/upload-artifact
        with:
          name: ${{ matrix.buildtype }}.tar.bz2
          path: ${{ matrix.buildtype }}.tar.bz2
          retention-days: 1  

  fetch-allow-lists:
    name: Fetch Test Stability Allow Lists
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@cd7d8d697e10461458bc61a30d094dc601a8b017

      - name: Configure AWS credentials
        uses: ./.github/workflows/configure-aws-credentials
        with:
          aws_id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws_region: us-gov-west-1
          

      - name: Get va-vsp-bot token
        uses: ./.github/workflows/inject-secrets
        with:
          ssm_parameter: /devops/VA_VSP_BOT_GITHUB_TOKEN
          env_variable_name: VA_VSP_BOT_GITHUB_TOKEN

      - name: Init Dashboard Data Repo
        uses: ./.github/workflows/init-data-repo

      - name: Set Up BigQuery Creds
        uses: ./.github/workflows/configure-bigquery

      - name: Fetch E2E Test Stability Allow List
        run: yarn get-allow-list
        working-directory: qa-standards-dashboard-data
        env:
          TEST_TYPE: e2e

      - name: Fetch Unit Test Stability Allow List
        run: yarn get-allow-list
        working-directory: qa-standards-dashboard-data
        env:
          TEST_TYPE: unit_test

      - name: Archive E2E Test Stability Allow List
        if: ${{ always() }}
        uses: ./.github/workflows/upload-artifact
        with:
          name: e2e-allow-list
          path: qa-standards-dashboard-data/e2e_allow_list.json

      - name: Archive Unit Test Stability Allow List
        if: ${{ always() }}
        uses: ./.github/workflows/upload-artifact
        with:
          name: unit-test-allow-list
          path: qa-standards-dashboard-data/unit_test_allow_list.json

  tests-prep:
    name: Tests Prep
    needs: [fetch-allow-lists]
    runs-on: ubuntu-22.04
    outputs:
      app_folders: ${{ steps.get-changed-apps.outputs.folders }}
      apps-to-stress-test: ${{ steps.apps-to-stress-test.outputs.apps_to_test }}
      unit-tests-to-stress-test: ${{ steps.unit-tests-to-stress-test.outputs.tests }}
      changed-files: ${{ steps.get-changed-apps.outputs.changed_files }}
      disallowed-tests: ${{ steps.disallowed-tests.outputs.tests }}
      cypress-tests: ${{ steps.cypress-tests.outputs.selected }}
      cypress-tests-to-stress-test: ${{ steps.cypress-tests-to-stress-test.outputs.tests }}
      app_urls: ${{ steps.get-changed-apps.outputs.urls }}
      num_containers: ${{ steps.containers.outputs.num }}
      ci_node_index: ${{ steps.matrix.outputs.ci_node_index }}
      changed_file_paths: ${{ steps.get-changed-apps.outputs.changed_files }}

    steps:
      - name: Checkout
        uses: actions/checkout@cd7d8d697e10461458bc61a30d094dc601a8b017
        with:
          fetch-depth: 0

      - name: Install dependencies
        uses: ./.github/workflows/install
        timeout-minutes: 30
        with:
          key: ${{ hashFiles('yarn.lock') }}
          yarn_cache_folder: .cache/yarn
          path: |
            .cache/yarn
            node_modules

      - name: Get changed applications
        id: get-changed-apps
        uses: ./.github/workflows/get-changed-apps
        with:
          delimiter: ','
          output-type: 'entry_name, url'

      - name: Download Unit Test Stability Allow List
        uses: ./.github/workflows/download-artifact
        with:
          name: unit-test-allow-list
          path: .

      - name: Download E2E Test Stability Allow List
        uses: ./.github/workflows/download-artifact
        with:
          name: e2e-allow-list
          path: .

      - name: Set NUM_CONTAINERS, CI_NODE_INDEX, TESTS variables
        run: node script/github-actions/select-cypress-tests.js
        env:
          RUN_FULL_SUITE: false
          CHANGED_FILE_PATHS: ${{ steps.get-changed-apps.outputs.changed_files }}
          APP_URLS: ${{ steps.get-changed-apps.outputs.urls }}
          APP_ENTRIES: ${{ steps.get-changed-apps.outputs.entry_names }}
          TEST_TYPE: e2e

      - name: Run Unit Test Selection
        run: node script/github-actions/select-unit-tests.js
        env:
          CHANGED_FILES: ${{ steps.get-changed-apps.outputs.changed_files }}

      - name: Set output of DISALLOWED_TESTS
        if: ${{ always() }}
        id: disallowed-tests
        run: echo "tests=$DISALLOWED_TESTS" >> $GITHUB_OUTPUT

      - name: Set output of UNIT_TESTS_TO_STRESS_TEST
        if: ${{ always() }}
        id: unit-tests-to-stress-test
        run: echo "tests=$UNIT_TESTS_TO_STRESS_TEST" >> $GITHUB_OUTPUT

      - name: Upload artifact of Unit Tests to Stress Test
        if: ${{ steps.unit-tests-to-stress-test.outputs.tests == 'true' }}
        uses: ./.github/workflows/upload-artifact
        with:
          name: unit-tests-to-stress-test
          path: unit_tests_to_stress_test.json

      - name: Set output of APPS_TO_STRESS_TEST
        if: ${{ always() }}
        id: apps-to-stress-test
        run: echo "apps_to_test=$APPS_TO_STRESS_TEST" >> $GITHUB_OUTPUT
      
      - name: Set output of TESTS
        id: cypress-tests
        run: echo selected=$TESTS >> $GITHUB_OUTPUT

      - name: Upload artifact of Cypress Tests to Test
        if: ${{ steps.cypress-tests.outputs.selected == 'true' }}
        uses: ./.github/workflows/upload-artifact
        with:
          name: e2e-tests-to-test
          path: e2e_tests_to_test.json

      - name: Set output of CYPRESS_TESTS_TO_STRESS_TEST
        id: cypress-tests-to-stress-test
        run: echo tests=$CYPRESS_TESTS_TO_STRESS_TEST >> $GITHUB_OUTPUT

      - name: Upload artifact of Cypress Tests to Stress Test
        if: ${{ steps.cypress-tests-to-stress-test.outputs.tests == 'true' }}
        uses: ./.github/workflows/upload-artifact
        with:
          name: e2e-tests-to-stress-test
          path: e2e_tests_to_stress_test.json

      - name: Set output of NUM_CONTAINERS
        id: containers
        run: echo num=$NUM_CONTAINERS >> $GITHUB_OUTPUT

      - name: Set output of CI_NODE_INDEX
        id: matrix
        run: echo ci_node_index=$CI_NODE_INDEX >> $GITHUB_OUTPUT

  fetch-ecr-credentials:
    name: Fetch ECR Credentials
    runs-on: ubuntu-22.04
    timeout-minutes: 10
    needs: [build] 

    steps:
      - name: Checkout
        uses: actions/checkout@cd7d8d697e10461458bc61a30d094dc601a8b017

      - name: Configure AWS Credentials
        uses: ./.github/workflows/configure-aws-credentials
        with:
          aws_id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws_region: us-gov-west-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2    
        with:
          mask-password: false

    outputs:
      ecr_user: ${{ steps.login-ecr.outputs.docker_username_008577686731_dkr_ecr_us_gov_west_1_amazonaws_com }}
      ecr_password: ${{ steps.login-ecr.outputs.docker_password_008577686731_dkr_ecr_us_gov_west_1_amazonaws_com }}
      
  cypress-tests:
    name: Cypress E2E Tests
    runs-on: ubuntu-16-cores-latest
    timeout-minutes: 60
    needs: [build, tests-prep, fetch-ecr-credentials]
    if: |
      needs.build.result == 'success' &&
      needs.tests-prep.result == 'success'
    container:
      image: 008577686731.dkr.ecr.us-gov-west-1.amazonaws.com/dsva/cypress-io/cypress/browsers:node16.16.0-chrome107-ff107-edge
      credentials:
        username: ${{ needs.fetch-ecr-credentials.outputs.ecr_user }}
        password: ${{ needs.fetch-ecr-credentials.outputs.ecr_password }}

    strategy:
      fail-fast: false
      max-parallel: 12
      matrix:
        ci_node_index: ${{ fromJson(needs.tests-prep.outputs.ci_node_index) }}

    env:
      CI_NODE_INDEX: ${{ needs.tests-prep.outputs.ci_node_index }}
      TESTS: ${{ needs.tests-prep.outputs.cypress-tests }}

    steps:
      # The following statement is included in each step because of a bug in
      # GitHub's branch protection:
      #
      # if: needs.tests-prep.outputs.cypress-tests != '[]'
      #
      # Previously, if no tests were selected, the branch protection check that
      # requires the cypress-tests job to run was not satisfied. This update forces
      # the job to always run, and skips each step if no tests are selected.
      # Previously, the above conditional was included in the job's if statement.
      
          

      - name: Checkout vets-website
        if: needs.tests-prep.outputs.cypress-tests != '[]'
        uses: actions/checkout@cd7d8d697e10461458bc61a30d094dc601a8b017

      - name: Configure AWS credentials
        if: needs.tests-prep.outputs.cypress-tests != '[]'
        uses: ./.github/workflows/configure-aws-credentials
        with:
          aws_id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws_region: us-gov-west-1

      - name: Get va-vsp-bot token
        if: needs.tests-prep.outputs.cypress-tests != '[]'
        uses: ./.github/workflows/inject-secrets
        with:
          ssm_parameter: /devops/VA_VSP_BOT_GITHUB_TOKEN
          env_variable_name: VA_VSP_BOT_GITHUB_TOKEN

      - name: Init Dashboard Data Repo
        if: needs.tests-prep.outputs.cypress-tests != '[]'
        uses: ./.github/workflows/init-data-repo

      - name: Set Up BigQuery Creds
        if: needs.tests-prep.outputs.cypress-tests != '[]'
        uses: ./.github/workflows/configure-bigquery

      - name: Fetch E2E Test Stability Allow List
        if: needs.tests-prep.outputs.cypress-tests != '[]'
        run: yarn get-allow-list
        working-directory: qa-standards-dashboard-data
        env:
          TEST_TYPE: e2e

      - name: Download production build artifact
        if: needs.tests-prep.outputs.cypress-tests != '[]'
        uses: ./.github/workflows/download-artifact
        with:
          name: vagovprod.tar.bz2

      - name: Unpack build
        if: needs.tests-prep.outputs.cypress-tests != '[]'
        run: |
          mkdir -p build/vagovprod
          tar -C build/vagovprod -xjf vagovprod.tar.bz2

      - name: Install dependencies
        if: needs.tests-prep.outputs.cypress-tests != '[]'
        uses: ./.github/workflows/install
        timeout-minutes: 20
        with:
          key: ${{ hashFiles('yarn.lock') }}
          yarn_cache_folder: .cache/yarn
          path: |
            .cache/yarn
            /github/home/.cache/Cypress
            node_modules
            
      - name: Download Tests to verify
        uses: ./.github/workflows/download-artifact
        with:
          name: e2e-tests-to-test
          path: .

      - name: Check for newly added disallowed tests
        if: needs.tests-prep.outputs.cypress-tests != '[]'
        run: node script/github-actions/double-check-allow-list.js
        env:
          TEST_TYPE: e2e
          TEST_PROPERTY: 'TESTS'

      - name: Start server
        if: needs.tests-prep.outputs.cypress-tests != '[]'
        run: node src/platform/testing/e2e/test-server.js --buildtype=vagovprod --port=3001 &

      - name: Instrument code
        run: npx nyc instrument --compact=false src .nyc_output

      - name: View code coverage summary
        run: npx nyc report --reporter=text-summary

      - name: Create coverage artifact
        uses: actions/upload-artifact@v3
        if: ${{ always() }}
        with:
          name: code-coverage-artifacts
          path: coverage/coverage-summary.json

      - name: Run Cypress tests
        if: needs.tests-prep.outputs.cypress-tests != '[]'
        run: node script/github-actions/run-cypress-tests.js
        timeout-minutes: 120
        env:
          CYPRESS_CI: true
          STEP: ${{ matrix.ci_node_index }}
          APP_URLS: ${{ needs.tests-prep.outputs.app_urls }}
          NUM_CONTAINERS: ${{ needs.tests-prep.outputs.num_containers }}

      - name: Archive test videos
        if: ${{ needs.tests-prep.outputs.cypress-tests != '[]' && failure() }}
        uses: ./.github/workflows/upload-artifact
        with:
          name: cypress-video-artifacts-${{ matrix.ci_node_index }}
          path: cypress/videos

      - name: Archive test screenshots
        if: ${{ needs.tests-prep.outputs.cypress-tests != '[]' && failure() }}
        uses: ./.github/workflows/upload-artifact
        with:
          name: cypress-screenshot-artifacts-${{ matrix.ci_node_index }}
          path: cypress/screenshots

      - name: Archive Mochawesome test results
        if: ${{ needs.tests-prep.outputs.cypress-tests != '[]' && always() }}
        uses: ./.github/workflows/upload-artifact
        with:
          name: cypress-mochawesome-test-results-${{ matrix.ci_node_index }}
          path: cypress/results
          retention-days: 1
