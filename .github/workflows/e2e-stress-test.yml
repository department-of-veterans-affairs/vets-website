name: E2E Stress Test

on:
  # schedule:
  # - cron: '0 12 * * 1-5'
  push

jobs:
  build:
    name: Build
    runs-on: self-hosted
    outputs:
      entry_names: ${{ steps.get-changed-apps.outputs.entry_names }}
      continuous_deployment: ${{ steps.get-changed-apps.outputs.continuous_deployment }}

    env:
      NODE_EXTRA_CA_CERTS: /etc/ssl/certs/VA-Internal-S2-RCA1-v1.cer.pem

    strategy:
      fail-fast: false
      matrix:
        buildtype: [vagovdev, vagovstaging, vagovprod]

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Install dependencies
        uses: ./.github/workflows/install
        timeout-minutes: 30
        with:
          key: ${{ hashFiles('yarn.lock') }}
          yarn_cache_folder: .cache/yarn
          path: |
            .cache/yarn
            node_modules

      - name: Get changed applications
        id: get-changed-apps
        uses: ./.github/workflows/get-changed-apps
        with:
          delimiter: ','
          output-type: 'entry_name, continuous_deployment'

      - name: Configure AWS Credentials
        if: ${{ matrix.buildtype == 'vagovprod' }}
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-gov-west-1

      - name: Get Mapbox Token
        if: ${{ matrix.buildtype == 'vagovprod' }}
        uses: marvinpinto/action-inject-ssm-secrets@v1.2.1
        with:
          ssm_parameter: /dsva-vagov/vets-website/dev/mapbox_token
          env_variable_name: MAPBOX_TOKEN

      - name: Build
        run: yarn build --verbose --buildtype=${{ matrix.buildtype }} ${ENTRY:+"--entry=$ENTRY"}
        timeout-minutes: 30
        env:
          ENTRY: ${{ steps.get-changed-apps.outputs.entry_names }}

      - name: Generate build details
        run: |
          cat > build/${{ matrix.buildtype }}/BUILD.txt << EOF
          BUILDTYPE=${{ matrix.buildtype }}
          NODE_ENV=production
          BRANCH_NAME=$(echo "${GITHUB_REF#refs/heads/}")
          CHANGE_TARGET=null
          RUN_ID=${{ github.run_id }}
          RUN_NUMBER=${{ github.run_number }}
          REF=${{ github.sha }}
          BUILDTIME=$(date +%s)
          EOF

      - name: Compress and archive build
        run: tar -C build/${{ matrix.buildtype }} -cjf ${{ matrix.buildtype }}.tar.bz2 .

      - name: Upload build artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.buildtype }}.tar.bz2
          path: ${{ matrix.buildtype }}.tar.bz2
          retention-days: 1

  fetch-allow-list:
    name: E2E Stress Test
    runs-on: ubuntu-latest
    outputs:
      allow_list: ${{ steps.allow-list-output.outputs.list }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install dependencies
        uses: ./.github/workflows/install
        timeout-minutes: 30
        with:
          key: ${{ hashFiles('yarn.lock') }}
          yarn_cache_folder: .cache/yarn
          path: |
            .cache/yarn
            node_modules

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-gov-west-1

      - name: Get va-vsp-bot token
        uses: marvinpinto/action-inject-ssm-secrets@v1.2.1
        with:
          ssm_parameter: /devops/VA_VSP_BOT_GITHUB_TOKEN
          env_variable_name: VA_VSP_BOT_GITHUB_TOKEN

      - name: Init Dashboard Data Repo
        uses: department-of-veterans-affairs/platform-release-tools-actions/init-data-repo@main

      - name: Set Up BigQuery Creds
        uses: ./.github/workflows/configure-bigquery

      - name: Fetch allow list
        run: yarn get-allow-list
        working-directory: qa-standards-dashboard-data
      # exports app list and assigns to environmental variable at this step

      - name: Set Allow List Output
        id: allow-list-output
        run: echo ::set-output name=list::$ALLOW_LIST

  cypress-tests-prep:
    name: Prep for Cypress Tests
    runs-on: ubuntu-latest
    needs: [fetch-allow-list]
    outputs:
      tests: ${{ steps.tests.outputs.selected }}
      app_urls: ${{ steps.get-changed-apps.outputs.urls }}
      num_containers: ${{ steps.containers.outputs.num }}
      ci_node_index: ${{ steps.matrix.outputs.ci_node_index }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Install dependencies
        uses: ./.github/workflows/install
        timeout-minutes: 30
        with:
          key: ${{ hashFiles('yarn.lock') }}
          yarn_cache_folder: .cache/yarn
          path: |
            .cache/yarn
            node_modules

      - name: Get changed applications
        id: get-changed-apps
        uses: ./.github/workflows/get-changed-apps
        with:
          delimiter: ','
          output-type: 'entry_name, url'

      - name: Set NUM_CONTAINERS, CI_NODE_INDEX, TESTS variables
        run: node script/github-actions/select-cypress-tests.js
        env:
          RUN_FULL_SUITE: false
          CHANGED_FILE_PATHS: ${{ steps.get-changed-apps.outputs.changed_files }}
          APP_URLS: ${{ steps.get-changed-apps.outputs.urls }}
          APP_ENTRIES: ${{ steps.get-changed-apps.outputs.entry_names }}
          ALLOW_LIST: ${{ needs.fetch-allow-list.outputs.allow_list }}

      - name: Set output of TESTS
        id: tests
        run: echo ::set-output name=selected::$TESTS

      - name: Set output of NUM_CONTAINERS
        id: containers
        run: echo ::set-output name=num::$NUM_CONTAINERS

      - name: Set output of CI_NODE_INDEX
        id: matrix
        run: echo ::set-output name=ci_node_index::$CI_NODE_INDEX

  cypress-tests:
    name: Cypress E2E Tests
    runs-on: self-hosted
    timeout-minutes: 1200
    needs: [build, cypress-tests-prep]
    if: |
      needs.build.result == 'success' &&
      needs.cypress-tests-prep.result == 'success'
    container:
      image: public.ecr.aws/cypress-io/cypress/browsers:node16.13.2-chrome100-ff98
      options: -u 1001:1001 -v /usr/local/share:/share

    strategy:
      fail-fast: false
      max-parallel: 12
      matrix:
        ci_node_index: ${{ fromJson(needs.cypress-tests-prep.outputs.ci_node_index) }}

    env:
      CHROMEDRIVER_FILEPATH: /share/chrome_driver/chromedriver
      NODE_EXTRA_CA_CERTS: /share/ca-certificates/VA-Internal-S2-RCA1-v1.cer.crt

    steps:
      # The following statement is included in each step because of a bug in
      # GitHub's branch protection:
      #
      # if: needs.cypress-tests-prep.outputs.tests != '[]'
      #
      # Previously, if no tests were selected, the branch protection check that
      # requires the cypress-tests job to run was not satisfied. This update forces
      # the job to always run, and skips each step if no tests are selected.
      # Previously, the above conditional was included in the job's if statement.
      - name: Configure AWS credentials
        if: needs.cypress-tests-prep.outputs.tests != '[]'
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-gov-west-1

      - name: Checkout vets-website
        if: needs.cypress-tests-prep.outputs.tests != '[]'
        uses: actions/checkout@v3

      - name: Download production build artifact
        if: needs.cypress-tests-prep.outputs.tests != '[]'
        uses: actions/download-artifact@v3
        with:
          name: vagovprod.tar.bz2

      - name: Unpack build
        if: needs.cypress-tests-prep.outputs.tests != '[]'
        run: |
          mkdir -p build/vagovprod
          tar -C build/vagovprod -xjf vagovprod.tar.bz2

      - name: Install dependencies
        if: needs.cypress-tests-prep.outputs.tests != '[]'
        uses: ./.github/workflows/install
        timeout-minutes: 20
        with:
          key: ${{ hashFiles('yarn.lock') }}
          yarn_cache_folder: .cache/yarn
          path: |
            .cache/yarn
            /github/home/.cache/Cypress
            node_modules

      - name: Start server
        if: needs.cypress-tests-prep.outputs.tests != '[]'
        run: node src/platform/testing/e2e/test-server.js --buildtype=vagovprod --port=3001 &

      - name: Run Cypress tests
        if: needs.cypress-tests-prep.outputs.tests != '[]'
        run: node script/github-actions/run-cypress-tests.js
        timeout-minutes: 1200
        env:
          CYPRESS_CI: true
          STEP: ${{ matrix.ci_node_index }}
          TESTS: ${{ needs.cypress-tests-prep.outputs.tests }}
          APP_URLS: ${{ needs.cypress-tests-prep.outputs.app_urls }}
          NUM_CONTAINERS: ${{ needs.cypress-tests-prep.outputs.num_containers }}
          SHOULD_STRESS_TEST: true

      - name: Archive test videos
        if: ${{ needs.cypress-tests-prep.outputs.tests != '[]' && failure() }}
        uses: actions/upload-artifact@v3
        with:
          name: cypress-video-artifacts
          path: cypress/videos

      - name: Archive test screenshots
        if: ${{ needs.cypress-tests-prep.outputs.tests != '[]' && failure() }}
        uses: actions/upload-artifact@v3
        with:
          name: cypress-screenshot-artifacts
          path: cypress/screenshots

      - name: Archive Mochawesome test results
        if: ${{ needs.cypress-tests-prep.outputs.tests != '[]' && always() }}
        uses: actions/upload-artifact@v3
        with:
          name: cypress-mochawesome-test-results
          path: cypress/results
          retention-days: 1
