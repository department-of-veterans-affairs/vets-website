{
  // Javascript settings.
  "presets": [
    [
      "@babel/env",
      {
        "forceAllTransforms": true,
        "targets": {
          /* This is the full list of browsers we support, but we are not using it because we want babel-polyfill
         * to include only polyfills for more modern browsers.
         * Older browser polyfills are in preESModulesPolyfills.js
         */
          /* "browsers": ["Chrome 60", "Firefox 57", "iOS 9", "Edge 14", "ChromeAndroid 64", "Safari 10", "ie 11"] */
          /*
         * This is the list of browers we support that all also have support for the nomodule script
         * attribute, meaning we can make them ignore a file that includes polyfills for older browsers
         */
          "browsers": [
            "Chrome 61",
            "Firefox 60",
            "iOS 11",
            "Edge 16",
            "ChromeAndroid 67",
            "Safari 11"
          ]
        },
        "useBuiltIns": "entry",
        "corejs": "2.0.0",
        "modules": false,
        "debug": false
      }
    ],
    "@babel/react"
  ],
  "plugins": [
    "lodash",
    // Stage 2
    "@babel/plugin-proposal-function-sent",
    "@babel/plugin-proposal-export-namespace-from",
    "@babel/plugin-proposal-numeric-separator",
    "@babel/plugin-proposal-throw-expressions",
    // Stage 3
    "@babel/plugin-proposal-nullish-coalescing-operator",
    "@babel/plugin-proposal-optional-chaining",
    "@babel/plugin-syntax-dynamic-import",
    "@babel/plugin-syntax-import-meta",
    ["@babel/plugin-proposal-class-properties", { "loose": false }],
    "@babel/plugin-proposal-json-strings",
    [
      "module-resolver",
      {
        "root": "./src",
        "alias": {
          "vet360": "./src/platform/user/profile/vet360"
        }
      }
    ]
  ],
  // Share polyfills between files.
  "env": {
    "test": {
      "presets": ["@babel/env"],
      "plugins": [
        "istanbul",
        "dynamic-import-node",
        "transform-react-remove-prop-types",
        // Stage 2
        "@babel/plugin-proposal-function-sent",
        "@babel/plugin-proposal-export-namespace-from",
        "@babel/plugin-proposal-numeric-separator",
        "@babel/plugin-proposal-throw-expressions",
        // Stage 3
        "@babel/plugin-syntax-dynamic-import",
        "@babel/plugin-syntax-import-meta",
        ["@babel/plugin-proposal-class-properties", { "loose": false }],
        "@babel/plugin-proposal-json-strings"
      ]
    },
    "production": {
      "plugins": [
        [
          "transform-react-remove-prop-types",
          {
            "removeImport": true
          }
        ]
      ]
    }
  }
}
