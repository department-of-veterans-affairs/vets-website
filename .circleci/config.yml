version: 2
jobs:
  lint:
    docker:
      - image: circleci/node:10.15.3
    steps:
      - checkout
      - restore_cache:
          keys:
            - yarn-packages-{{ checksum "yarn.lock" }}
      - run:
          command: yarn install --frozen-lockfile
      - save_cache:
          key: yarn-packages-{{ checksum "yarn.lock" }}
          paths:
            - ~/.cache/yarn
      - run: mkdir -p ./test-results
      - run: npx eslint --ext .js --ext .jsx --format junit --output-file ./test-results/eslint.xml .
      - run: yarn lint:sass
      - store_test_results:
          path: ./test-results
      - store_artifacts:
          path: ./test-results

  unit-test:
    docker:
      - image: circleci/node:10.15.3
    environment:
    steps:
      - checkout
      - restore_cache:
          keys:
            - yarn-packages-{{ checksum "yarn.lock" }}
      - run:
          command: yarn install --frozen-lockfile
      - save_cache:
          key: yarn-packages-{{ checksum "yarn.lock" }}
          paths:
            - ~/.cache/yarn
      - run: mkdir -p ./test-results
      - run:
          command: ./script/run-isolated-tests.sh
          environment:
            MOCHA_FILE: ./test-results/test-results.xml
      - store_test_results:
          path: ./test-results
      - store_artifacts:
          path: ./test-results

  security-audit:
    docker:
      - image: circleci/node:10.15.3
    steps:
      - checkout
      - run: yarn security-check

  additional-linting:
    docker:
      - image: circleci/node:10.15.3
    steps:
      - checkout
      - restore_cache:
          keys:
            - yarn-packages-{{ checksum "yarn.lock" }}
      - run:
          command: yarn install --frozen-lockfile
      - save_cache:
          key: yarn-packages-{{ checksum "yarn.lock" }}
          paths:
            - ~/.cache/yarn
      - run: npm run lint:circle

  build:
    docker:
      - image: circleci/node:10.15.3
    steps:
      - checkout
      - restore_cache:
          keys:
            - yarn-packages-{{ checksum "yarn.lock" }}
      - run:
          command: yarn install --frozen-lockfile
      - save_cache:
          key: yarn-packages-{{ checksum "yarn.lock" }}
          paths:
            - ~/.cache/yarn
      - run: yarn build:webpack

  eslint-check:
    docker:
      - image: circleci/node:10.18
    environment:
      CODE_PATTERN: (/* eslint-disable)|(// eslint-disable)
      OVERALL_REVIEW_COMMENT: >
        # ESLint is disabled

        `vets-website` uses ESLint to help enforce code quality. In most
        situations we would like ESLint to remain enabled.

        ## What you can do

        See if the code can be refactored to avoid disabling ESLint, or wait for
        a VSP review.

      LINE_COMMENT: ESLint disabled here
    steps:
      - checkout
      - run:
          name: Install dependencies
          command: yarn install
      - run:
          name: Try Diff
          command: npm run pr-check

  sentry-check:
    docker:
      - image: circleci/node:10.18
    environment:
      CODE_PATTERN: Sentry\.
      OVERALL_REVIEW_COMMENT: >
        # Sentry call found

        Sentry captures a lot of data, and we want to make sure that we only
        keep information that will be useful for troubleshooting issues.  This
        means that PII should not be recorded.

        ## What you can do

        Review your call to Sentry and see if you can reasonably reduce any
        information that is included, or wait for a VSP review.

      LINE_COMMENT: Sentry found
    steps:
      - checkout
      - run:
          name: Install dependencies
          command: yarn install
      - run:
          name: Check PR for Sentry calls
          command: npm run pr-check

  icon-check:
    docker:
      - image: circleci/node:10.18
    environment:
      CODE_PATTERN: (<i )|(<i$)
      OVERALL_REVIEW_COMMENT: >
        # Icon found

        Icons can be decorative, but sometimes they are used to convey meaning.
        If there are any semantics associated with an icon, those semantics
        should also be conveyed to a screen reader.

        ## What you can do

        Review the markup and see if the icon provides information that isn't
        represented textually, or wait for a VSP review.

      LINE_COMMENT: icon found
    steps:
      - checkout
      - run:
          name: Install dependencies
          command: yarn install
      - run:
          name: Check PR for icon additions
          command: npm run pr-check

  build-e2e:
    working_directory: ~/vets-website
    docker:
      - image: cypress/base:10.15.3
    resource_class: xlarge
    steps:
      - checkout
      - restore_cache:
          keys:
            - yarn-packages-e2e-{{ checksum "yarn.lock" }}
      - run:
          name: Install Dependencies
          command: yarn --frozen-lockfile --cache-folder ~/.cache/yarn
      - save_cache:
          key: yarn-packages-e2e-{{ checksum "yarn.lock" }}
          paths:
            - ~/.cache/yarn
            - ~/.cache/Cypress
      - run:
          name: Build apps
          command: yarn build:webpack --env.buildtype vagovprod --env.scaffold
      - persist_to_workspace:
          root: ~/
          paths:
            - vets-website/build

  e2e-test:
    working_directory: ~/vets-website
    docker:
      - image: cypress/base:10.15.3
    resource_class: xlarge
    steps:
      - checkout
      - attach_workspace:
          at: ~/
      - restore_cache:
          keys:
            - yarn-packages-e2e-{{ checksum "yarn.lock" }}
      - run:
          name: Installed Dependencies
          command: yarn --frozen-lockfile --cache-folder ~/.cache/yarn
      - run:
          name: Make Test Results Folder
          command: mkdir -p ./test-results
      - run:
          name: Run Cypress Tests
          command: yarn cy:test:circle
          no_output_timeout: 20m
      - store_test_results:
          path: ./test-results
      - store_artifacts:
          path: ./test-results
      - store_artifacts:
          path: ./cypress/videos
      - store_artifacts:
          path: ./cypress/screenshots

workflows:
  version: 2
  flag-for-manual-review:
    jobs:
      - eslint-check:
          filters:
            branches:
              ignore: master
      - sentry-check:
          filters:
            branches:
              ignore: master
      - icon-check:
          filters:
            branches:
              ignore: master
  test_and_build:
    jobs:
      - lint
      - unit-test
      - security-audit
      - build-e2e
      - build:
          requires:
            - lint
            - unit-test
            - security-audit
      - e2e-test:
          requires:
            - build-e2e
  additional-linting:
    jobs:
      - additional-linting
