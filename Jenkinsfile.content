@Library('va.gov-devops-jenkins-lib') _

node('vetsgov-general-purpose') {
	refStatusState = ""
  ref = params.ref
  if (ref == "") {
    ref = getLatestGitRef("vets-website", branch: 'master')
  }

	refStatusState = getGithubRefStatusState("vets-website", ref)
  if (refStatusState != "SUCCESS") {
    slackSend(message:"Web content refresh on ${params.env} aborted due to unsuccessful vets-website-build on commit ${ref}.",
              color: "warning",
              channel: "#cms-notifications")

    return
  }

  dir("vets-website") {
    checkout scm: [$class: 'GitSCM', branches: [[name: ref]], userRemoteConfigs: [[credentialsId: 'va-bot', url: 'git@github.com:department-of-veterans-affairs/vets-website.git']]]
  }

  def commonStages = load "vets-website/jenkins/common.groovy"

  // Setup stage
  dockerContainer = commonStages.setup()

  stage("Build") {
    commonStages.build(ref, dockerContainer, ref, params.env, false)
  }

  stage("Prearchive") {
    commonStages.prearchive(dockerContainer, params.env)
  }

  stage("Archive") {
    commonStages.archive(dockerContainer, ref, params.env)
  }

  stage("Deploy Dev or Staging") {
    if (params.env != "vagovprod" && params.deploy) {
      commonStages.runDeploy('deploys/vets-website-${params.env}', ref)
    }
  }
}
